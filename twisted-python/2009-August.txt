From listsin at integrateddevcorp.com  Sat Aug  1 00:11:05 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Sat, 1 Aug 2009 00:11:05 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
Message-ID: <9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>

> I hope you can see why I want to hold on to our current toolchain  
> until we have someone around who has demonstrated a much deeper  
> commitment to documentation than anyone yet has.  For example,  
> Steve, if you close 100 existing documentation tickets in the next  
> week, then make the exact same suggestion again, I'll be a lot less  
> resistant ;-).

I get it, really.

Where would we put an "inventory" project for it to be most useful?

S



From glyph at twistedmatrix.com  Sat Aug  1 00:13:06 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 1 Aug 2009 00:13:06 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1249079820-sup-3441@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <1249079820-sup-3441@javelin>
Message-ID: <d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>

On Fri, Jul 31, 2009 at 6:40 PM, Edward Z. Yang <ezyang at mit.edu> wrote:

> You can view an initial draft of the rewrite here:


This is a great first draft!  Very substantial.  I really appreciate you
working on this.

Now I will proceed to rip it to shreds by way of giving you some feedback,
but please try to take this as a constructive review.  I'm happy with what
you've got but given the large amount of dissatisfaction in the community
with the existing Deferred docs, and the widespread confusion that they
cause, I think that these docs have to be totally awesome.


> X Synchronous to Asynchronous: The Method to the Madness
>

I really strongly object to this section title.  Reading through the section
itself, I don't find that it's that objectionable, but one of the
misconceptions that we frequently need to dispel is that Deferreds are
"crazy" or "complex" or "magic".  I think it's very important to reinforce
this for the reader, that this is just an idiom we use for some python
functions to call some other functions in a particular order.

So please get rid of the "madness".

Beyond that, you spend a lot of time talking about *synchronous* and *
asynchronous** *code in this section.  You go so far as to *boldface the
words for emphasis*.  Okay, great, these are important terms, but you're
clearly explaining them as if the user doesn't really know what they mean.
I think that starting with a definition of "synchronous" and "asynchronous"
would be helpful.  Better yet, have an explanation that invokes some code.

The tone also suggests that the user may not quite understand what callbacks
are or how they work.  A brief explanation of higher-order functions in
Python may be in order.  (Or the tone could change to assume that the user *
does* know about this sort of thing, but a little redundancy might not be
amiss here.)

If someone comes to this document with a set of ideas about how network
programming works - for example, that "read()" reads some bytes off of a
socket and blocks until they're ready, it won't be clear how select() and
friends get involved to make this asynchronous programming deal worthwhile.
So it would be useful to explain, at least briefly, how this kind of work
gets done behind the scenes.  You don't want to actually spin up the real
reactor early on in the examples, though.  I think Jonno Lange's document
did a reasonable job explaining how Deferreds interact with the reactor.
It's important to get across that there's no magical interaction, since
that's a considerable source of confusion.  I also wrote an answer on
stackoverflow which addressed this, which might be helpful to you as a
resource:

http://stackoverflow.com/questions/80617/asychronous-programming-in-python-twisted/81456#81456

More minor things:

"tutorial-ish"?  Is this a tutorial or not?  I don't mind some informality
and humor in the documentation, but this is just sloppy.  (Not necessarily
the wording: reading through it, I really can't tell if it's intended to be
a tutorial or not.)

"set of code": this should be "function", or possibly "callback" or
"callable".  It's important to be precise with terminology because later in
the documentation we're going to expect users to know what those terms mean,
and if we've been inconsistent they may be confused.

Throughout Twisted, "Deferred" is used as a noun.  In this document they are
universally referred to as a "Deferred object".  Please drop the "object".

The bulleted lists seem to be a distraction.  Most of them aren't really
enumerating anything, they're just jumping from topic to topic without
finishing a sentence.

You use the word "simple" a lot.  Don't tell me it is or isn't simple:
demonstrate its simplicity.  In one case ? "Simple and well defined." ?
there isn't even a sentence.

"Asynchronous programming is centered around this notion that:"  This whole
section is very confused.  If it's centered around something, shouldn't it
be one thing?  "this notion"?  Which notion, you've got a list of 3 bullet
points that talk about maybe 5 notions, none of which is an antecedent which
could satisfy "this".

You are throwing lots and lots of examples at the reader, but I find that
users understand better with one thoroughly-explained toy example that they
can pick apart and play with than a whole bunch of abstract stuff.  For
example, "Sometimes I want code to happen during an event, but the event
firing is distinct from my program flow".  A user reading that (if they
understand it) is likely to say "why not start a thread?".  If it is instead
presented in terms of a matter-of-fact "here is what happens" not "here is
why you want this" then the user is more likely to focus on what is
happening (and thus, on understanding Deferreds, which is really the whole
point here) than on whether they *really* actually want it or not.

Hopefully by the time they thoroughly understand it they will know that they
do want it ;-).

- Deferred
>    X Basic operation
>    - Convenience primitives (succeed, fail, execute, maybeDeferred)


This should be covered later on.  "fail" doesn't make any sense unless you
already know about errbacks and chaining.

   ? Callback/Errback chaining


These examples are really weak on explanation.  I won't belabor that point
though, because it seems like you're not really done writing them yet.


>    - Timeouts


Your bare-bones Deferred implementation should really be called something
else.  In Jonathan Lange's example, it was called a "Placeholder".  I can
see readers getting confused about whether Deferreds are something you're
supposed to (or allowed to) implement yourself, or whether they're something
that's a part of Twisted, because you move from talking about your toy
implementation to the real thing without skipping a beat.


> - Composing deferreds
>    - DeferredList/gatherResults
>    - chainDeferred


- Advanced topics
>    - Deferred asynchronous primitives
>    - Sugar syntax
>

I feel like this is throwing too much at the user at once.  It's absolutely
fantastic if you want to address this stuff as well (its docs are even
weaker than Deferred itself), but let's put in a break so that they know
they should go off and try to understand the more basic aspects of Deferreds
before trying to understand gatherResults, inlineCallbacks and
DeferredSemaphore.

More importantly I think you should really focus on getting an extremely
lucid and readable explanation of the core concepts of event-driven
programming and Deferreds before you start adding in these extra bits of
documentation.  Just keep coming back to that.  Pretend you don't understand
why asynchronous programming is useful at all, how select() or non-blocking
I/O works, and read through the document.  Consider whether you understand
what's going on, why these ideas are useful.  Deliberately try to
misunderstand them in a way which is wrong, but consistent with the wording,
and see if you can get to the bottom of your document without being
corrected :).

I have more feedback, but I assume this is more than enough to get you
started :).

P.S. Please CC me in your replies! Thanks.


I'll try to remember, but I'm sure somebody's going to forget - you should
subscribe to the mailing list so you get their messages even if you don't
:).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090801/079028ab/attachment.htm 

From glyph at twistedmatrix.com  Sat Aug  1 00:20:22 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 1 Aug 2009 00:20:22 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
	<9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
Message-ID: <d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>

On Sat, Aug 1, 2009 at 12:11 AM, Steve Steiner <
listsin at integrateddevcorp.com> wrote:

> > I hope you can see why I want to hold on to our current toolchain
> > until we have someone around who has demonstrated a much deeper
> > commitment to documentation than anyone yet has.  For example,
> > Steve, if you close 100 existing documentation tickets in the next
> > week, then make the exact same suggestion again, I'll be a lot less
> > resistant ;-).
>
> I get it, really.
>

I do tend to use a lot of words to get things across.  Sorry ;-).


> Where would we put an "inventory" project for it to be most useful?
>

 As JP mentioned earlier in this thread, some work has already taken place
here: <http://twistedmatrix.com/trac/wiki/DocumentationAnalysis>.

If you'd like to contribute to that, please let somebody on the #twisted IRC
channel know your trac username so we can set you up with wiki-edit
permission.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090801/0f17ef58/attachment-0001.htm 

From glyph at twistedmatrix.com  Sat Aug  1 00:40:32 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 1 Aug 2009 00:40:32 -0400
Subject: [Twisted-Python] [Fwd: Re: Deferred documentation rewrite]
In-Reply-To: <1249097275-sup-1055@javelin>
References: <1249093589.3782.91.camel@pintsize> <1249097275-sup-1055@javelin>
Message-ID: <d9047f780907312140m4a126c38h568bff052b8a1aec@mail.gmail.com>

On Fri, Jul 31, 2009 at 11:35 PM, Edward Z. Yang <ezyang at mit.edu> wrote:

> Excerpts from Itamar Shtull-Trauring's message of Fri Jul 31 22:26:29 -0400
> 2009:
> > The problem with this is that it perpetuates the misunderstanding the
> > Deferreds *make* things asynchronous, even with the intro that says
> > otherwise. I think it's better to assume already asynchronous code,
> > handling the transition from synchronous to async in an intro event loop
> > howto.
>
> Either way, the function that the first segment of the new docs do belong
> somewhere.  The documentation that traditionally served this purpose
> has been removed.


I'm actually inclined to agree.  Understanding what Deferreds are *for* sort
of implies an understanding of why one would want to have a list of
callbacks in the first place, which implies a need to understand
asynchronous programming.

Realistically, I don't think there are a lot of people out there who have
managed to do anything at all useful with Twisted without undersanding
Deferreds.

I think it might be useful to lead into this section with a specific example
problem though, rather than a very vague general template for the category
of problems.  Once you've demonstrated a specific problem, you can always
expand the general category by briefly listing some other problems which are
similar.

As for perpetuating the misunderstanding of Deferreds making things
> asynchronous, I completely agree!  However, I think this is something
> that can be fixed by spelling out the distinction between "writing
> asynchronous code" and "interacting with asynchronous code", and not
> just omitting the important paradigm shift that comes with sync->async.


By the time you have to spell out that distinction, I think it's too late.
By the time the user is dealing with a Deferred, they should have a pretty
good idea that it's just a list of functions that will be called at some
point in the future; if you have to say "here's this magic thing, oh, by the
way, it turns out it's just a list of functions" they're still going to
think something's magic about it.

If you want an example that doesn't involve any reactor integration, you
might try showing a program that polls a directory for a file being added.
If you want to simultaneously wait for a file named "1" and a file named
"2", you need to use callbacks, otherwise "waiting" for 2 will prevent the
code for 1 from running immediately if 1 shows up first.

I'm not really sure this can be done in a simple enough way to be useful, so
take it with a grain of thought.

> A better comparative exposition might be with normal callbacks, e.g.:
>
>
> > "def foo(x, gotResultCallback): pass" vs. "def foo(x): # return
> > Deferred".
> >
> > At the very least having that async but callbacky version in the middle
> > helps understanding.
>
> I briefly gloss on this, but I agree that this is an important point
> that could be further expanded.  We could have implemented asynchronous
> mechanisms using normal callbacks, but we decided to use Deferreds instead.
>

Definitely agreed here.  For those users who are used to "normal" callbacks
(if there is such a thing), this explanation would be helpful to explain why
you need them rather than just passing functions around.  For users who
aren't even familiar with passing functions around, this would fill an
important intermediate gap.


> It's not clear to me if the common case of confusion of Deferreds occurs
> in people who "know callbacks" but "don't know Deferreds."  As an incoming
> developer who was familiar with asynchronous programming, my primary
> problem
> was the ill-defined behavior of callback chains (which I resolved by
> hunkering down and reading the source code) rather than any fundamental
> misunderstanding of what Deferreds were supposed to do.
>

I think we need an expanded version of the "visual explanation" here: <
http://twistedmatrix.com/projects/core/documentation/howto/defer.html> (one
that uses complete sentences and more than one diagram), as well as an
expanded analogy to try:except: blocks in 'synchronous' python.

I object to the classification of the behavior of callback chains as
"ill-defined".  It might have been poorly-explained, but that's very
different :).

> It also omits half the story: how you *create* Deferreds. There should
> > be a section on that as well.
>
> I agree.  In fact, it might be worth making the document a little longer
> to address this point, because I realize now that even if you're not
> writing asynchronous code, you'll often need to baton Deferreds to
> make the execution flow work the way you want them to.
>

+1.  Dealing with Deferred creation is a good way to introduce users to the
non-magicness of Deferreds.  It's less common to create one than to consume
one, but understanding how to create them should make it easier to
understand how to consume them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090801/7b297d95/attachment.htm 

From konrads at smelkovs.com  Sat Aug  1 10:12:10 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Sat, 1 Aug 2009 17:12:10 +0300
Subject: [Twisted-Python] getPage using ssl proxy
In-Reply-To: <d79700b90907301215u5e74e501w7b5a960e34d3b33a@mail.gmail.com>
References: <d79700b90907301215u5e74e501w7b5a960e34d3b33a@mail.gmail.com>
Message-ID: <d79700b90908010712i4933c60fo4aa704f29f096235@mail.gmail.com>

I found answer to my own question:

class NoVerifyClientContextFactory:
    """A context factory for SSL clients."""

    isClient = 1
    method = SSL.SSLv3_METHOD

    def getContext(self):
        def x(*args):
            return True
        ctx=SSL.Context(self.method)
        #print dir(ctx)
        ctx.set_verify(SSL.VERIFY_NONE,x)
        return ctx
def getPage(url, contextFactory=None, *args, **kwargs):
    scheme, host, port, path = _parse(url)
    factory = HTTPClientFactory(url, *args, **kwargs)
    if 1: # use a proxy
        host, port = 'localhost', 8080
        factory.path = url
    if scheme == 'https':
        from twisted.internet import ssl
        if contextFactory is None:
            contextFactory = NoVerifyClientContextFactory()
        reactor.connectSSL(host, port, factory, contextFactory)
    else:
        reactor.connectTCP(host, port, factory)
    return factory.deferred

--
Konrads Smelkovs
Applied IT sorcery.


On Thu, Jul 30, 2009 at 10:15 PM, Konrads Smelkovs <konrads at smelkovs.com>wrote:

> Hello,
>
> I am writing some scraper scripts and need to pass them through an
> intercepting proxy. getPage does not support a proxy argument and this code
> I found on internet won't work with SSL proxy (stalls indefinitely):
>
> def getPage(url, contextFactory=None, *args, **kwargs):
>     scheme, host, port, path = _parse(url)
>     factory = HTTPClientFactory(url, *args, **kwargs)
>     if 0: # use a proxy
>         host, port = 'localhost', 8080
>         factory.path = url
>     if scheme == 'https':
>         from twisted.internet import ssl
>         if contextFactory is None:
>             contextFactory = ssl.ClientContextFactory()
>         reactor.connectSSL(host, port, factory, contextFactory)
>     else:
>         reactor.connectTCP(host, port, factory)
>     return factory.deferred
>
> Plain http proxying works. My guess is that there is an issue with
> self-signed or otherwise invalid certificate the http proxy supplies. Any
> clues?
>
> --
> Konrads Smelkovs
> Applied IT sorcery.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090801/646294d9/attachment.htm 

From konrads at smelkovs.com  Sat Aug  1 12:54:45 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Sat, 1 Aug 2009 19:54:45 +0300
Subject: [Twisted-Python] AssertionError: '' for <module '__init__' from
	'nfscraper\__init__.pyc'> not in import cache
Message-ID: <d79700b90908010954g4942c8e1l5ee7459cf6abc8e@mail.gmail.com>

Hello,

I am running latest Twisted Python release 8.2.0 on Windows  / Python 2.6.
When running trial on my unittests, I get an AssertionError not in import
cache:

C:\Documents and Settings\Konrads\My Documents\nfscraper\src>tree /f
Folder PATH listing
Volume serial number is A899-B4C8
C:.
????nfscraper
    ?   httpclient.py
    ?   httpclient.pyc
    ?   interfaces.py
    ?   interfaces.pyc
    ?   scraper.py
    ?   scraper.pyc
    ?   settings.py
    ?   settings.pyc
    ?   util.py
    ?   util.pyc
    ?   __init__.py
    ?   __init__.pyc
    ?
    ????test
            test_scrapers.py
            test_scrapers.pyc
            __init__.py
            __init__.pyc

C:\Documents and Settings\Konrads\My Documents\nfscraper\src>set
PYTHONPATH="C:\
Documents and Settings\Konrads\My Documents\nfscraper\src"

C:\Documents and Settings\Konrads\My Documents\nfscraper\src>trial nfscraper
Traceback (most recent call last):
  File "C:\Python26\Scripts\trial.py", line 24, in <module>
    run()
  File "C:\Python26\lib\site-packages\twisted\scripts\trial.py", line 357,
in ru
n
    suite = _getSuite(config)
  File "C:\Python26\lib\site-packages\twisted\scripts\trial.py", line 315,
in _g
etSuite
    return loader.loadByNames(config['tests'], recurse)
  File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 647, in
loa
dByNames
    for thing in set(things)]
  File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 604, in
loa
dAnything
    return self.loadPackage(thing, recurse)
  File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 543, in
loa
dPackage
    pkgobj = modules.getModule(package.__name__)
  File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 741,
in g
etModule
    return theSystemPath[moduleName]
  File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 677,
in _
_getitem__
    self._findEntryPathString(moduleObject)),
  File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 630,
in _
findEntryPathString
    rval, modobj, pformat(self.importerCache))
AssertionError: '' for <module '__init__' from 'nfscraper\__init__.pyc'> not
in
import cache {'"C:\\Documents and Settings\\Konrads\\My
Documents\\nfscraper\\sr
c"': <imp.NullImporter object at 0x00A8F028>,
 'C:\\Documents and Settings\\Konrads\\My
Documents\\nfscraper\\src\\"C:\\Docume
nts and Settings\\Konrads\\My Documents\\nfscraper\\src"': <imp.NullImporter
obj
ect at 0x00A8F488>,
 'C:\\Documents and Settings\\Konrads\\My
Documents\\nfscraper\\src\\"C:\\Docume
nts and Settings\\Konrads\\My Documents\\nfscraper\\src"\\twisted\\plugins':
<im
p.NullImporter object at 0x00A8F528>,
 'C:\\Python26': None,
 'C:\\Python26\\DLLs': None,
 'C:\\Python26\\DLLs\\twisted\\plugins': <imp.NullImporter object at
0x00A8F538>
,
 'C:\\Python26\\Scripts': None,
 'C:\\Python26\\Scripts\\trial.py': <imp.NullImporter object at 0x00A8F498>,
 'C:\\Python26\\Scripts\\twisted\\plugins': <imp.NullImporter object at
0x00A8F5
00>,
 'C:\\Python26\\lib': None,
 'C:\\Python26\\lib\\ctypes': None,
 'C:\\Python26\\lib\\distutils': None,
 'C:\\Python26\\lib\\encodings': None,
 'C:\\Python26\\lib\\lib-tk': None,
 'C:\\Python26\\lib\\lib-tk\\twisted\\plugins': <imp.NullImporter object at
0x00
A8F550>,
 'C:\\Python26\\lib\\logging': None,
 'C:\\Python26\\lib\\plat-win': <imp.NullImporter object at 0x00A8F490>,
 'C:\\Python26\\lib\\plat-win\\twisted\\plugins': <imp.NullImporter object
at 0x
00A8F548>,
 'C:\\Python26\\lib\\site-packages': None,
 'C:\\Python26\\lib\\site-packages\\PIL': None,
 'C:\\Python26\\lib\\site-packages\\PIL\\twisted\\plugins':
<imp.NullImporter ob
ject at 0x00A8F560>,
 'C:\\Python26\\lib\\site-packages\\Pythonwin': None,
 'C:\\Python26\\lib\\site-packages\\Pythonwin\\twisted\\plugins':
<imp.NullImpor
ter object at 0x00A8F578>,
 'C:\\Python26\\lib\\site-packages\\beautifulsoup-3.1.0.1-py2.6.egg':
<zipimport
er object "C:\Python26\lib\site-packages\beautifulsoup-3.1.0.1-py2.6.egg">,
 'C:\\Python26\\lib\\site-packages\\beautifulsoup-3.1.0.1-py2.6.egg\\twisted\\pl
ugins': <zipimporter object
"C:\Python26\lib\site-packages\beautifulsoup-3.1.0.1
-py2.6.egg\twisted\plugins\">,
 'C:\\Python26\\lib\\site-packages\\django-1.1_beta_1-py2.6.egg': None,
 'C:\\Python26\\lib\\site-packages\\django-1.1_beta_1-py2.6.egg\\twisted\\plugin
s': <imp.NullImporter object at 0x00A8F508>,
 'C:\\Python26\\lib\\site-packages\\django_authopenid-1.0.1-py2.6.egg':
None,
 'C:\\Python26\\lib\\site-packages\\django_authopenid-1.0.1-py2.6.egg\\twisted\\
plugins': <imp.NullImporter object at 0x00A8F510>,
 'C:\\Python26\\lib\\site-packages\\django_registration-0.7-py2.6.egg':
<zipimpo
rter object
"C:\Python26\lib\site-packages\django_registration-0.7-py2.6.egg">,
 'C:\\Python26\\lib\\site-packages\\django_registration-0.7-py2.6.egg\\twisted\\
plugins': <zipimporter object
"C:\Python26\lib\site-packages\django_registration
-0.7-py2.6.egg\twisted\plugins\">,
 'C:\\Python26\\lib\\site-packages\\docutils-0.5-py2.6.egg': None,
 'C:\\Python26\\lib\\site-packages\\docutils-0.5-py2.6.egg\\twisted\\plugins':
<
imp.NullImporter object at 0x00A8F520>,
 'C:\\Python26\\lib\\site-packages\\epydoc-3.0.1-py2.6-win32.egg': None,
 'C:\\Python26\\lib\\site-packages\\epydoc-3.0.1-py2.6-win32.egg\\twisted\\plugi
ns': <imp.NullImporter object at 0x00A8F518>,
 'C:\\Python26\\lib\\site-packages\\python_openid-2.2.4-py2.6.egg':
<zipimporter
 object "C:\Python26\lib\site-packages\python_openid-2.2.4-py2.6.egg">,
 'C:\\Python26\\lib\\site-packages\\python_openid-2.2.4-py2.6.egg\\twisted\\plug
ins': <zipimporter object
"C:\Python26\lib\site-packages\python_openid-2.2.4-py2
.6.egg\twisted\plugins\">,
 'C:\\Python26\\lib\\site-packages\\setuptools-0.6c9-py2.6.egg':
<zipimporter ob
ject "C:\Python26\lib\site-packages\setuptools-0.6c9-py2.6.egg">,
 'C:\\Python26\\lib\\site-packages\\setuptools-0.6c9-py2.6.egg\\twisted\\plugins
': <zipimporter object
"C:\Python26\lib\site-packages\setuptools-0.6c9-py2.6.egg
\twisted\plugins\">,
 'C:\\Python26\\lib\\site-packages\\twisted': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\application': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\cred': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\internet': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\lore': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\lore\\scripts': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\persisted': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\plugins': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\python': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\scripts': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\trial': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\web': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\web2': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\words': None,
 'C:\\Python26\\lib\\site-packages\\win32': None,
 'C:\\Python26\\lib\\site-packages\\win32\\lib': None,
 'C:\\Python26\\lib\\site-packages\\win32\\lib\\twisted\\plugins':
<imp.NullImpo
rter object at 0x00A8F570>,
 'C:\\Python26\\lib\\site-packages\\win32\\twisted\\plugins':
<imp.NullImporter
object at 0x00A8F568>,
 'C:\\Python26\\lib\\site-packages\\zope': None,
 'C:\\Python26\\lib\\site-packages\\zope\\interface': None,
 'C:\\Python26\\lib\\twisted\\plugins': <imp.NullImporter object at
0x00A8F540>,

 'C:\\Python26\\twisted\\plugins': <imp.NullImporter object at 0x00A8F558>,
 'C:\\WINDOWS\\system32\\python26.zip': <imp.NullImporter object at
0x00A8F030>,

 'C:\\WINDOWS\\system32\\python26.zip\\twisted\\plugins': <imp.NullImporter
obje
ct at 0x00A8F530>}

C:\Documents and Settings\Konrads\My Documents\nfscraper\src>
--
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090801/d91ea494/attachment.htm 

From dave at davebritton.com  Sat Aug  1 14:54:04 2009
From: dave at davebritton.com (Dave Britton)
Date: Sat, 1 Aug 2009 14:54:04 -0400
Subject: [Twisted-Python] what's a workaround for Ticket #3472 (sendmail has
	no timeout)?
Message-ID: <197801ca12d9$71568820$0500a8c0@yoda>

Trying to implement a custom mail service I have run into the problem that
this ticket describes:
====
Ticket #3472 (new defect )
Opened 10 months ago
Last modified 10 months ago
twisted.mail.smtp sendmail() should [have] parameters to be passed for the
retry and timeout logic supported by SMTPClientFactory:
The method: def sendmail() spawns SMTPSenderFactories without a default
timeout value. These cause factories to wait forever if there is no response
from the remote server. On prolonged periods of time, stale
SMTPSenderFactories accumulates and will cause file descriptors to ran out
(Couldn't bind: 24: Too many open files.)
====
What would be the best way for me to work around this?
Specifically, when I use twisted.mail.smtp sendmail() for a lengthy list, I
fairly quickly get the "too many open files" message.

I tried using a coiterator to send small enough batches of emails, waiting
for each batch to be done before sending the next, because the "too many
files" error seemed to be caused by creating too many deferreds when a too
large batch of emails was sent at once. This worked in a test simulation,
but with real emails the system never completes the batch, it just hangs
waiting for sendmail to return.

Is there a best timeout mechanism I should use to force sendmail's return?
What I can think of so far are these:
option 1: Call setTimeout() on the deferred returned by sendmail despite
this warning in the  source for Deferred.setTimeout():
"warnings.warn("Deferred.setTimeout is deprecated.  Look for timeout support
specific to the API you are using instead.", DeprecationWarning,
stacklevel=2).
or option2: Patch a timeout argument into sendmail to have it passed to
SMTPSenderFactory(from_addr, to_addrs, msg, d)? Would this work? I can't
figure out how or if SMTPSenderFactory would handle a timeout argument.

Sorry for the long message. Thanks for your advice!
-Dave



From konrads at smelkovs.com  Sat Aug  1 15:50:21 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Sat, 1 Aug 2009 22:50:21 +0300
Subject: [Twisted-Python] AssertionError: '' for <module '__init__' from
	'nfscraper\__init__.pyc'> not in import cache
In-Reply-To: <d79700b90908010954g4942c8e1l5ee7459cf6abc8e@mail.gmail.com>
References: <d79700b90908010954g4942c8e1l5ee7459cf6abc8e@mail.gmail.com>
Message-ID: <d79700b90908011250k5b55e683re6545a1c8a22d793@mail.gmail.com>

Aand... i've solved it with help of idnar from #twisted:

set PYTHONPATH="C:\Documents and Settings\Konrads\My
Documents\nfscraper\src" on Windows is not the same as
PYTHONPATH=C:\Documents and Settings\Konrads\My Documents\nfscraper\src.
Note the doube quotes. Double quotes make sys.path look like this:


C:\Documents and Settings\Konrads>C:\Python26\python.exe
Python 2.6.2 (r262:71605, Apr 14 2009, 22:40:02) [MSC v.1500 32 bit (Intel)]
on
win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import sys
>>> filter(lambda x: x.find("foo")>-1,sys.path)
['C:\\Documents and Settings\\Konrads\\"C:\\foo"']
>>>


--
Konrads Smelkovs
Applied IT sorcery.


On Sat, Aug 1, 2009 at 7:54 PM, Konrads Smelkovs <konrads at smelkovs.com>wrote:

> Hello,
>
> I am running latest Twisted Python release 8.2.0 on Windows  / Python 2.6.
> When running trial on my unittests, I get an AssertionError not in import
> cache:
>
> C:\Documents and Settings\Konrads\My Documents\nfscraper\src>tree /f
> Folder PATH listing
> Volume serial number is A899-B4C8
> C:.
> ????nfscraper
>     ?   httpclient.py
>     ?   httpclient.pyc
>     ?   interfaces.py
>     ?   interfaces.pyc
>     ?   scraper.py
>     ?   scraper.pyc
>     ?   settings.py
>     ?   settings.pyc
>     ?   util.py
>     ?   util.pyc
>     ?   __init__.py
>     ?   __init__.pyc
>     ?
>     ????test
>             test_scrapers.py
>             test_scrapers.pyc
>             __init__.py
>             __init__.pyc
>
> C:\Documents and Settings\Konrads\My Documents\nfscraper\src>set
> PYTHONPATH="C:\
> Documents and Settings\Konrads\My Documents\nfscraper\src"
>
> C:\Documents and Settings\Konrads\My Documents\nfscraper\src>trial
> nfscraper
> Traceback (most recent call last):
>   File "C:\Python26\Scripts\trial.py", line 24, in <module>
>     run()
>   File "C:\Python26\lib\site-packages\twisted\scripts\trial.py", line 357,
> in ru
> n
>     suite = _getSuite(config)
>   File "C:\Python26\lib\site-packages\twisted\scripts\trial.py", line 315,
> in _g
> etSuite
>     return loader.loadByNames(config['tests'], recurse)
>   File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 647,
> in loa
> dByNames
>     for thing in set(things)]
>   File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 604,
> in loa
> dAnything
>     return self.loadPackage(thing, recurse)
>   File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 543,
> in loa
> dPackage
>     pkgobj = modules.getModule(package.__name__)
>   File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 741,
> in g
> etModule
>     return theSystemPath[moduleName]
>   File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 677,
> in _
> _getitem__
>     self._findEntryPathString(moduleObject)),
>   File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 630,
> in _
> findEntryPathString
>     rval, modobj, pformat(self.importerCache))
> AssertionError: '' for <module '__init__' from 'nfscraper\__init__.pyc'>
> not in
> import cache {'"C:\\Documents and Settings\\Konrads\\My
> Documents\\nfscraper\\sr
> c"': <imp.NullImporter object at 0x00A8F028>,
>  'C:\\Documents and Settings\\Konrads\\My
> Documents\\nfscraper\\src\\"C:\\Docume
> nts and Settings\\Konrads\\My Documents\\nfscraper\\src"':
> <imp.NullImporter obj
> ect at 0x00A8F488>,
>  'C:\\Documents and Settings\\Konrads\\My
> Documents\\nfscraper\\src\\"C:\\Docume
> nts and Settings\\Konrads\\My
> Documents\\nfscraper\\src"\\twisted\\plugins': <im
> p.NullImporter object at 0x00A8F528>,
>  'C:\\Python26': None,
>  'C:\\Python26\\DLLs': None,
>  'C:\\Python26\\DLLs\\twisted\\plugins': <imp.NullImporter object at
> 0x00A8F538>
> ,
>  'C:\\Python26\\Scripts': None,
>  'C:\\Python26\\Scripts\\trial.py': <imp.NullImporter object at
> 0x00A8F498>,
>  'C:\\Python26\\Scripts\\twisted\\plugins': <imp.NullImporter object at
> 0x00A8F5
> 00>,
>  'C:\\Python26\\lib': None,
>  'C:\\Python26\\lib\\ctypes': None,
>  'C:\\Python26\\lib\\distutils': None,
>  'C:\\Python26\\lib\\encodings': None,
>  'C:\\Python26\\lib\\lib-tk': None,
>  'C:\\Python26\\lib\\lib-tk\\twisted\\plugins': <imp.NullImporter object at
> 0x00
> A8F550>,
>  'C:\\Python26\\lib\\logging': None,
>  'C:\\Python26\\lib\\plat-win': <imp.NullImporter object at 0x00A8F490>,
>  'C:\\Python26\\lib\\plat-win\\twisted\\plugins': <imp.NullImporter object
> at 0x
> 00A8F548>,
>  'C:\\Python26\\lib\\site-packages': None,
>  'C:\\Python26\\lib\\site-packages\\PIL': None,
>  'C:\\Python26\\lib\\site-packages\\PIL\\twisted\\plugins':
> <imp.NullImporter ob
> ject at 0x00A8F560>,
>  'C:\\Python26\\lib\\site-packages\\Pythonwin': None,
>  'C:\\Python26\\lib\\site-packages\\Pythonwin\\twisted\\plugins':
> <imp.NullImpor
> ter object at 0x00A8F578>,
>  'C:\\Python26\\lib\\site-packages\\beautifulsoup-3.1.0.1-py2.6.egg':
> <zipimport
> er object "C:\Python26\lib\site-packages\beautifulsoup-3.1.0.1-py2.6.egg">,
>
>  'C:\\Python26\\lib\\site-packages\\beautifulsoup-3.1.0.1-py2.6.egg\\twisted\\pl
> ugins': <zipimporter object
> "C:\Python26\lib\site-packages\beautifulsoup-3.1.0.1
> -py2.6.egg\twisted\plugins\">,
>  'C:\\Python26\\lib\\site-packages\\django-1.1_beta_1-py2.6.egg': None,
>
>  'C:\\Python26\\lib\\site-packages\\django-1.1_beta_1-py2.6.egg\\twisted\\plugin
> s': <imp.NullImporter object at 0x00A8F508>,
>  'C:\\Python26\\lib\\site-packages\\django_authopenid-1.0.1-py2.6.egg':
> None,
>
>  'C:\\Python26\\lib\\site-packages\\django_authopenid-1.0.1-py2.6.egg\\twisted\\
> plugins': <imp.NullImporter object at 0x00A8F510>,
>  'C:\\Python26\\lib\\site-packages\\django_registration-0.7-py2.6.egg':
> <zipimpo
> rter object
> "C:\Python26\lib\site-packages\django_registration-0.7-py2.6.egg">,
>
>  'C:\\Python26\\lib\\site-packages\\django_registration-0.7-py2.6.egg\\twisted\\
> plugins': <zipimporter object
> "C:\Python26\lib\site-packages\django_registration
> -0.7-py2.6.egg\twisted\plugins\">,
>  'C:\\Python26\\lib\\site-packages\\docutils-0.5-py2.6.egg': None,
>  'C:\\Python26\\lib\\site-packages\\docutils-0.5-py2.6.egg\\twisted\\plugins':
> <
> imp.NullImporter object at 0x00A8F520>,
>  'C:\\Python26\\lib\\site-packages\\epydoc-3.0.1-py2.6-win32.egg': None,
>
>  'C:\\Python26\\lib\\site-packages\\epydoc-3.0.1-py2.6-win32.egg\\twisted\\plugi
> ns': <imp.NullImporter object at 0x00A8F518>,
>  'C:\\Python26\\lib\\site-packages\\python_openid-2.2.4-py2.6.egg':
> <zipimporter
>  object "C:\Python26\lib\site-packages\python_openid-2.2.4-py2.6.egg">,
>
>  'C:\\Python26\\lib\\site-packages\\python_openid-2.2.4-py2.6.egg\\twisted\\plug
> ins': <zipimporter object
> "C:\Python26\lib\site-packages\python_openid-2.2.4-py2
> .6.egg\twisted\plugins\">,
>  'C:\\Python26\\lib\\site-packages\\setuptools-0.6c9-py2.6.egg':
> <zipimporter ob
> ject "C:\Python26\lib\site-packages\setuptools-0.6c9-py2.6.egg">,
>
>  'C:\\Python26\\lib\\site-packages\\setuptools-0.6c9-py2.6.egg\\twisted\\plugins
> ': <zipimporter object
> "C:\Python26\lib\site-packages\setuptools-0.6c9-py2.6.egg
> \twisted\plugins\">,
>  'C:\\Python26\\lib\\site-packages\\twisted': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\application': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\cred': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\internet': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\lore': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\lore\\scripts': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\persisted': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\plugins': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\python': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\scripts': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\trial': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\web': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\web2': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\words': None,
>  'C:\\Python26\\lib\\site-packages\\win32': None,
>  'C:\\Python26\\lib\\site-packages\\win32\\lib': None,
>  'C:\\Python26\\lib\\site-packages\\win32\\lib\\twisted\\plugins':
> <imp.NullImpo
> rter object at 0x00A8F570>,
>  'C:\\Python26\\lib\\site-packages\\win32\\twisted\\plugins':
> <imp.NullImporter
> object at 0x00A8F568>,
>  'C:\\Python26\\lib\\site-packages\\zope': None,
>  'C:\\Python26\\lib\\site-packages\\zope\\interface': None,
>  'C:\\Python26\\lib\\twisted\\plugins': <imp.NullImporter object at
> 0x00A8F540>,
>
>  'C:\\Python26\\twisted\\plugins': <imp.NullImporter object at 0x00A8F558>,
>  'C:\\WINDOWS\\system32\\python26.zip': <imp.NullImporter object at
> 0x00A8F030>,
>
>  'C:\\WINDOWS\\system32\\python26.zip\\twisted\\plugins': <imp.NullImporter
> obje
> ct at 0x00A8F530>}
>
> C:\Documents and Settings\Konrads\My Documents\nfscraper\src>
> --
> Konrads Smelkovs
> Applied IT sorcery.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090801/b72623d4/attachment-0001.htm 

From glyph at twistedmatrix.com  Sat Aug  1 22:22:28 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 1 Aug 2009 22:22:28 -0400
Subject: [Twisted-Python] what's a workaround for Ticket #3472 (sendmail
	has no timeout)?
In-Reply-To: <197801ca12d9$71568820$0500a8c0@yoda>
References: <197801ca12d9$71568820$0500a8c0@yoda>
Message-ID: <d9047f780908011922q2d6cfe60x812c635b85d78acb@mail.gmail.com>

On Sat, Aug 1, 2009 at 2:54 PM, Dave Britton <dave at davebritton.com> wrote:


> What would be the best way for me to work around this?


Fix the bug :).  Then, I hope, contribute a patch... (see
http://twistedmatrix.com/trac/wiki/TwistedDevelopment for that part).


> Specifically, when I use twisted.mail.smtp sendmail() for a lengthy list, I
> fairly quickly get the "too many open files" message.
>
 (more detailed description of the problem snipped)

Yeah, that sounds like your problem is #3472.  There are two problems there:
one is that the default behavior is such that you run out of file
descriptors, and the other is that the behavior can't be customized.  The
customization issue should probably be fixed first, and then the default
behavior can be fixed by tweaking the default values for the customizations.

or option2: Patch a timeout argument into sendmail to have it passed to
> SMTPSenderFactory(from_addr, to_addrs, msg, d)? Would this work? I can't
> figure out how or if SMTPSenderFactory would handle a timeout argument.
>

I think this is what would be meant by "fixing the bug"; your description
seems a bit too vague for me to tell if your solution would be solving it in
a general way or not, but at first blush it seems about right.

Sorry for the long message. Thanks for your advice!
>

No need to apologize.  Thanks for your interest, and good luck!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090801/659f66e2/attachment.htm 

From listsin at integrateddevcorp.com  Sat Aug  1 23:30:06 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Sat, 1 Aug 2009 23:30:06 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
	<9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
	<d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>
Message-ID: <FA651A3B-D3FA-4D7B-A278-89693189B19A@integrateddevcorp.com>

> I get it, really.
>
> I do tend to use a lot of words to get things across.  Sorry ;-).

Duly noted ;-).

> Where would we put an "inventory" project for it to be most useful?
>
>  As JP mentioned earlier in this thread, some work has already taken  
> place here: <http://twistedmatrix.com/trac/wiki/ 
> DocumentationAnalysis>.

It doesn't really look like that effort went anywhere.

On:

	http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList

The first document is User reviewed by JoeBlow with Expert Reviews by  
JaneBlogs.

There are only five more entries and only one is "completed" with a  
User and Expert review.

What the heck that properly vetted doc has to do with anything is not  
particularly clear.

Maybe we should have an auction?

     Auction: Document blah-de-blah

	Supplier will document blah-de-blah, work with Sponsors to  
incorporate blah-de-blah into their apps, and release the copyright to  
the resultant documentation and copyright to the Twisted Software  
Foundation.

	Supplier will provide up to X hour of consulting to each of the first  
three Sponsors (Founding Sponsors) to help refine the documentation  
and make sure it can be used in real-world projects.

	Minimum Founder bid is $50.

	Minimum Contributor bid is $35.

	Sponsor1:
		I'll give $50 for someone to explain blah-de-blah and how to use it  
in my app

	Sponsor2:
		I'd give another $50 if I could get this working in my app

	Supplier1:

		I'd have to have $200 to take this on.

		I'll also offer discounted consulting on the same topic at $??/hr.  
to anyone who contributes $35 or more to this documentation project  
after

	 Sponsor3:	

		I'll chip in the extra $100 if I can be one of the first three.  I'm  
really stuck on blah-de-blah and could use some help.

	Moderator:

		Ok, we seem to have a deal.  Sponsor 1 is in for $50, Sponsor 2 is  
in for $50, Sponsor 3 is in for $100.

		Each of them receives X hours of help from Supplier 1 which will be  
used to advance their projects and improve the documentation.

		Any future Contributors, over $35, receive discounted consulting  
from Supplier1 at $??/hr. for any work related to this issue as well  
as access to beta versions of the documentation and early-release  
versions of the sample code.

		Please sign off on this agreement and submit your payment.

		Supplier1 agrees to provide a first draft within X-period-of-time.
	
		Consulting arrangements begin then.  The Twisted Software Foundation  
accepts a donation of 10% of all transactions for facilitating these  
transactions and to generally advance Twisted.  (http://twistedmatrix.com/trac/wiki/TwistedSoftwareFoundation 
)

Just a thought...

S

P.S. I apologize in advance for any formatting issues with the above.   
Obviously, I'm not following the coding spec and pylint barfed on the  
whole thing... ;-).

s





-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090801/463a31af/attachment.htm 

From zooko at zooko.com  Sat Aug  1 23:55:49 2009
From: zooko at zooko.com (Zooko Wilcox-O'Hearn)
Date: Sat, 1 Aug 2009 21:55:49 -0600
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Lofty-Atmospheric Filesystem,
	v1.5
Message-ID: <C2E0CC84-3594-4F1F-8C2D-747514082216@zooko.com>

Dear people of the twisted mailing list:

This release announcement is relevant to this list because Tahoe-LAFS  
is built on Twisted's networking and concurrency framework.  Also, we  
strive to emulate the UQDS.

Regards,

Zooko

The Tahoe-LAFS team is pleased to announce the immediate availability of
version 1.5 of Tahoe, the Lofty Atmospheric File System.

Tahoe-LAFS is the first cloud storage technology which offers security
and privacy in the sense that the cloud storage service provider itself
can't read or alter your data. Here is the one-page explanation of
its unique security and fault-tolerance properties:

http://allmydata.org/source/tahoe/trunk/docs/about.html

This release is the successor to v1.4.1, which was released April 13,
2009 [1]. This is a major new release, improving the user interface and
performance and fixing a few bugs, and adding ports to OpenBSD, NetBSD,
ArchLinux, NixOS, and embedded systems built on ARM CPUs. See the NEWS
file [2] for more information.

In addition to the functionality of Tahoe-LAFS itself, a crop of related
projects have sprung up to extend it and to integrate it into operating
systems and applications.  These include frontends for Windows,
Macintosh, JavaScript, and iPhone, and plugins for duplicity, bzr,
Hadoop, and TiddlyWiki, and more. See the Related Projects page on the
wiki [3].


COMPATIBILITY

Version 1.5 is fully compatible with the version 1 series of
Tahoe-LAFS. Files written by v1.5 clients can be read by clients of all
versions back to v1.0. v1.5 clients can read files produced by clients
of all versions since v1.0.  v1.5 servers can serve clients of all
versions back to v1.0 and v1.5 clients can use servers of all versions
back to v1.0.

This is the sixth release in the version 1 series. The version 1 series
of Tahoe-LAFS will be actively supported and maintained for the
forseeable future, and future versions of Tahoe-LAFS will retain the
ability to read and write files compatible with Tahoe-LAFS v1.

The version 1 series of Tahoe-LAFS is the basis of the consumer backup
product from Allmydata, Inc. -- http://allmydata.com .


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you can distribute your filesystem across a set of
servers, such that if some of them fail or even turn out to be
malicious, the entire filesystem continues to be available. You can
share your files with other users, using a simple and flexible access
control scheme.

We believe that the combination of erasure coding, strong encryption,
Free/Open Source Software and careful engineering make Tahoe-LAFS safer
than RAID, removable drive, tape, on-line backup or other Cloud storage
systems.

This software comes with extensive tests, and there are no known
security flaws which would compromise confidentiality or data integrity
in typical use.  (For all currently known issues please see the
known_issues.txt file [4].)


LICENCE

You may use this package under the GNU General Public License, version 2
or, at your option, any later version.  See the file "COPYING.GPL" [5]
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1 or, at your option, any later version.  (The
Transitive Grace Period Public Licence has requirements similar to the
GPL except that it allows you to wait for up to twelve months after you
redistribute a derived work before releasing the source code of your
derived work.) See the file "COPYING.TGPPL.html" [6] for the terms of
the Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris, *BSD, and
probably most other systems.  Start with "docs/install.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8].  Patches are gratefully accepted
-- the RoadMap page [9] shows the next improvements that we plan to make
and CREDITS [10] lists the names of people who've contributed to the
project.  The Dev page [11] contains resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed thanks to the sponsorship of
Allmydata, Inc. [12], a provider of commercial backup services.
Allmydata, Inc. created the Tahoe-LAFS project and contributed hardware,
software, ideas, bug reports, suggestions, demands, and money (employing
several Tahoe-LAFS hackers and instructing them to spend part of their
work time on this Free Software project).  Also they awarded customized
t-shirts to hackers who found security flaws in Tahoe-LAFS (see
http://hacktahoe.org ). After discontinuing funding of Tahoe-LAFS R&D in
early 2009, Allmydata, Inc. has continued to provide servers, co-lo
space and bandwidth to the open source project. Thank you to Allmydata,
Inc. for their generous and public-spirited support.

This is the second release of Tahoe-LAFS which was created solely as a
labor of love by volunteers; developer time is no longer funded by
allmydata.com (see [13] for details).

Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

Special acknowledgment goes to Brian Warner, whose superb engineering
skills and dedication are primarily responsible for the Tahoe
implementation, and significantly responsible for the Tahoe design as
well, not to mention most of the docs and tests. Tahoe-LAFS wouldn't
exist without him.

August 1, 2009
Boulder, Colorado, USA

P.S.  Just kidding about that acronym.  "LAFS" actually stands for
"Lightweight Authorization File System".  Or possibly for
"Least-Authority File System".  There is no truth to the rumour that it
actually stands for "Long-lived Axe-tolerant File System".

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=3853
[2] http://allmydata.org/trac/tahoe/browser/NEWS?rev=4033
[3] http://allmydata.org/trac/tahoe/wiki/RelatedProjects
[4] http://allmydata.org/trac/tahoe/browser/docs/known_issues.txt
[5] http://allmydata.org/trac/tahoe/browser/COPYING.GPL
[6] http://allmydata.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://allmydata.org/source/tahoe/trunk/docs/install.html
[8] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://allmydata.org/trac/tahoe/roadmap
[10] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=4035
[11] http://allmydata.org/trac/tahoe/wiki/Dev
[12] http://allmydata.com
[13] http://allmydata.org/pipermail/tahoe-dev/2009-March/001461.html



From exarkun at twistedmatrix.com  Sun Aug  2 00:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 02 Aug 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1249185912.18.1828771885@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090802/782c0760/attachment-0001.htm 

From glyph at twistedmatrix.com  Sun Aug  2 00:41:02 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 2 Aug 2009 00:41:02 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <FA651A3B-D3FA-4D7B-A278-89693189B19A@integrateddevcorp.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
	<9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
	<d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>
	<FA651A3B-D3FA-4D7B-A278-89693189B19A@integrateddevcorp.com>
Message-ID: <d9047f780908012141n30276500k2b2bd22072936f13@mail.gmail.com>

On Sat, Aug 1, 2009 at 11:30 PM, Steve Steiner (listsin) <
listsin at integrateddevcorp.com> wrote:

> Where would we put an "inventory" project for it to be most useful?
>>
>
>  As JP mentioned earlier in this thread, some work has already taken place
> here: <http://twistedmatrix.com/trac/wiki/DocumentationAnalysis>.
>
>
> It doesn't really look like that effort went anywhere.
>

I don't think it's quite fair to say it didn't go *anywhere*, it just didn't
get anywhere particularly complete.  I think the reviews that have been done
thus far are still a valuable resource for someone interested in working on
the documentation.


> Maybe we should have an auction?
>

(snipped lengthy description of labor-intensive bounty resolution process)

What we really need is for people in the community to knuckle down and do
the work of actually reviewing the documents, rewriting things, soliciting
feedback, copy-editing the documents, checking for accuracy, etc.  As
Jessica did when she started the thread :).

Frankly, the work is boring: what the documentation needs is not a dynamic
market-driven system for managing contributions and paying bounties, it's
not a comprehensive overhaul of our entire documentation toolchain.  What it
needs is for people to sit down and read all the documentation, make a list
of all of its problems, one at a time, and then write, delete, and edit as
necessary, incorporating feedback from the community.

Once we have people taking part in that effort and working with the docs on
a daily or weekly basis, *then* we can listen to the reality of the problems
and frustrations that they have working with the tools or determining
priorities or whatever and solve those problems.

Separately from that, if you're interested in contributing some time to
manage a bounty program for the TSF, that might be a reasonable idea.  Other
projects have experimented with bounty-based systems for resolving bugs.
Unfortunately there are a number of difficulties with those systems, which
are really out of the scope of this discussion, but they're worth talking
about if you have a real interest in doing it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090802/ccab5b33/attachment.htm 

From tarjei at nu.no  Mon Aug  3 03:35:25 2009
From: tarjei at nu.no (tarjei)
Date: Mon, 03 Aug 2009 09:35:25 +0200
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>	<4A72FD7E.8010205@gmail.com>	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
Message-ID: <4A76933D.4080101@nu.no>

A lot has been said in this discussion but I'll add one thing.
On 07/31/2009 06:32 PM, Reza Lotun wrote:
>> Even if I re-suggested the wiki based documentation, I think it's
>> important to be extra careful on how it's used. One thing I personally
>> hate is projects whose documentation is basically wiki-based, and what
>> you end having is a disconnected set of tips, many out of date, of how
>> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
>> 'Documentation' :).
>
> I agree - the wiki shouldn't *replace* the documentation, but the
> reality is I have loads of bookmarks of blog posts and discussions on
> the mailing list, and it'd be nice if I could to go one place to find
> all that type of info. A "recipe" or "cookbook" wiki might be all we
> need, with the ability to comment on each. The Activestate Python
> Cookbook is kinda what I'm thinking about:
> http://code.activestate.com/recipes/langs/python/

What I miss is a comment system related to the API docs so that it is 
possible for beginners and others to add small notes there without 
having to make a ticket, wait for it to be assigned etc.

Apart from that I will just welcome anyone who writes documentation.

Kind regards,
Tarjei



>
>> Alternatively, a separate doc repo with sphinx based doc could be built
>> so that it will allow for collaborative development making clear that is
>> a work in progress and a product with 'releases'. I say a different repo
>> to avoid having to give commit access to code for people who are working
>> on doc,  maybe same repo with different permissions would be better. And
>> I suggest sphinx to a) start from scratch and add existing doc as we see
>> it's relevant, b) have a more flexible base than HTML docs, and for the
>> reasons mentioned by Kevin (plus I want to learn it :P).
>
> I haven't yet looked at lore or sphinx, but is there a way to support
> sphinx via lore?
>
> Reza
>


-- 
Tarjei Huse
Mobil: 920 63 413


From micahel at gmail.com  Mon Aug  3 03:59:51 2009
From: micahel at gmail.com (Michael Hudson)
Date: Mon, 3 Aug 2009 19:59:51 +1200
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A76933D.4080101@nu.no>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
	<4A76933D.4080101@nu.no>
Message-ID: <aa0dfd860908030059k6846b039yd2d3441a7293c1ae@mail.gmail.com>

2009/8/3 tarjei <tarjei at nu.no>:
> A lot has been said in this discussion but I'll add one thing.
> On 07/31/2009 06:32 PM, Reza Lotun wrote:
>>> Even if I re-suggested the wiki based documentation, I think it's
>>> important to be extra careful on how it's used. One thing I personally
>>> hate is projects whose documentation is basically wiki-based, and what
>>> you end having is a disconnected set of tips, many out of date, of how
>>> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
>>> 'Documentation' :).
>>
>> I agree - the wiki shouldn't *replarce* the documentation, but the
>> reality is I have loads of bookmarks of blog posts and discussions on
>> the mailing list, and it'd be nice if I could to go one place to find
>> all that type of info. A "recipe" or "cookbook" wiki might be all we
>> need, with the ability to comment on each. The Activestate Python
>> Cookbook is kinda what I'm thinking about:
>> http://code.activestate.com/recipes/langs/python/
>
> What I miss is a comment system related to the API docs so that it is
> possible for beginners and others to add small notes there without
> having to make a ticket, wait for it to be assigned etc.

I have an old, half finished idea in this area, which is that pydoctor
has a mode which runs a web server and allows you to edit the
docstrings online.  It needs a bunch of work to get to useful --
probably user accounts, a way of not losing all changes when you
restart the server, a lot of polish and, indeed, maybe a comment
feature or discussion view -- but I think the idea is sound.

If you have pydoctor installed, you can try pydoctor --auto in a
directory containing some python modules.

Cheers,
mwh


From listsin at integrateddevcorp.com  Mon Aug  3 09:50:39 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Mon, 3 Aug 2009 09:50:39 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <d9047f780908012141n30276500k2b2bd22072936f13@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
	<9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
	<d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>
	<FA651A3B-D3FA-4D7B-A278-89693189B19A@integrateddevcorp.com>
	<d9047f780908012141n30276500k2b2bd22072936f13@mail.gmail.com>
Message-ID: <1C41B552-CC9A-4C73-939B-534C7CD7C814@integrateddevcorp.com>

On Aug 2, 2009, at 12:41 AM, Glyph Lefkowitz wrote:

> On Sat, Aug 1, 2009 at 11:30 PM, Steve Steiner (listsin) <listsin at integrateddevcorp.com 
> > wrote:
>> Where would we put an "inventory" project for it to be most useful?
>>
>>  As JP mentioned earlier in this thread, some work has already  
>> taken place here: <http://twistedmatrix.com/trac/wiki/DocumentationAnalysis 
>> >.
>
> It doesn't really look like that effort went anywhere.
>
> I don't think it's quite fair to say it didn't go anywhere, it just  
> didn't get anywhere particularly complete.  I think the reviews that  
> have been done thus far are still a valuable resource for someone  
> interested in working on the documentation.

Ok, fine, it went "over there."  Now...if you're just starting out,  
how much does "over there" help and how much has "over there" ever  
been integrated into anything else?  How would you even find "over  
there?"

I guess I'm still frustrated with the lack of an overarching doc  
organization scheme.

I've tried to use various parts of the Twisted eco-system, on a number  
of projects, and have repeatedly gotten stuck on outdated, disjointed,  
disorganized, and just plain wrong documentation.

As I've said before, the complete lack of date/version stamping on  
example code has been the greatest source of frustration.

I've, more than once, gotten half-way through a tutorial and realize  
that it just plain didn't work with the current version.

End of exploration.

I used the best result I found in my search and it just didn't work.   
Gotta move on; client's getting annoyed.  Unbillable time; bad.

> What we really need is for people in the community to knuckle down  
> and do the work of actually reviewing the documents, rewriting  
> things, soliciting feedback, copy-editing the documents, checking  
> for accuracy, etc.  As Jessica did when she started the thread :).

Hasn't happened, and isn't going to happen, in my opinion, until  
there's some actual incentive for "people in the community", which is  
a small subset of the "potential community", to actually do anything  
about it.  Documentation is not needed by the "community" as much as  
it's needed by the "potential community."

> Frankly, the work is boring: what the documentation needs is not a  
> dynamic market-driven system for managing contributions and paying  
> bounties, it's not a comprehensive overhaul of our entire  
> documentation toolchain.  What it needs is for people to sit down  
> and read all the documentation, make a list of all of its problems,  
> one at a time, and then write, delete, and edit as necessary,  
> incorporating feedback from the community.

Frankly, the work is boring and it ain't happening, never has, and  
never will unless something changes.  Bounty system, torture, Target  
coupons, whatever...

> Once we have people taking part in that effort and working with the  
> docs on a daily or weekly basis, then we can listen to the reality  
> of the problems and frustrations that they have working with the  
> tools or determining priorities or whatever and solve those problems.

See above.  How many years does the same thing have to happen for  
there to be a realization that, without a fundamental change, nothing  
is going to happen?

If you paid someone, 20 hours a week, to babysit the documentation  
effort, they would.  Depending on their competence, there would be  
progress.

If you wait, endlessly for "Once we have people taking part in that  
effort and working with the docs on a daily or weekly basis", you're  
going to get the same result.

> Separately from that, if you're interested in contributing some time  
> to manage a bounty program for the TSF, that might be a reasonable  
> idea.  Other projects have experimented with bounty-based systems  
> for resolving bugs.  Unfortunately there are a number of  
> difficulties with those systems, which are really out of the scope  
> of this discussion, but they're worth talking about if you have a  
> real interest in doing it.

I'm not sure what I'm interested in, at this point, but I certainly am  
not interested in doing it for free and neither is anyone else.

In my opinion, and by existing evidence, coherent documentation ain't  
happening, and won't, unless something fundamental changes.

It's not my project and it's not for me to decide but it seems to me  
that waiting for "people to take part in that effort" is doomed to  
waiting forever...

S

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090803/7df8093e/attachment.htm 

From disappearedng at gmail.com  Mon Aug  3 14:34:54 2009
From: disappearedng at gmail.com (disappearedng)
Date: Tue, 4 Aug 2009 02:34:54 +0800
Subject: [Twisted-Python] Twisted.web.client.getPage with proxy?
Message-ID: <15dd54ec0908031134s278bfe9ftc0fd6d31abae51fd@mail.gmail.com>

Hello world,
1) I have a proxy server running on my computer on port 8888. It's
listening on localhost.
I am wondering whether Twisted.web.client.getPage has some sort of
proxy kwargs that can do this for me. ( I checked the source and I
really doubt it has something like that)
What are my alternatives? I have looked at low-level alternatives, and
ProxyClient doesn't really seem to fit my situation.

2) I sometimes have 2 proxy servers running. I know urllib has a
method which allows you to build opener, then you can access webpages
with opener.open('site').read().
Does twisted have something like this which allows me to keep multiple
"proxy space" to access different websites at the same time on
different proxy servers?

Thx


From ezyang at MIT.EDU  Mon Aug  3 18:00:07 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Mon, 03 Aug 2009 18:00:07 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <1249079820-sup-3441@javelin>
	<d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
Message-ID: <1249336297-sup-7263@javelin>

I have updated my draft here:

    http://ezyang.com/twisted/defer2.html

The most notable change is I've removed the section "From Synchronous to
Asynchronous".  I believe (and I think other people agree with me) that
this is an important topic to cover, but it's really *hard* to teach
asynchronous programming and I'd like to think a bit more about how I'd
like to frame the subject.  There are at least two issues that we have
to deal with:

* Why asynchronous?
    - Define synchronous and asynchronous
    - Multiplexing IO
    - Introduce a simple reactor based on select()
* Why callbacks?
    - Asynchronous interaction to synchronous interaction
    - Delocalized execution (the parser example)
    - High level functions in Python review

Quite frankly, I'm stumped on "defining synchronous and asynchronous."
Asynchronous had always made sense to me, coming from JavaScript, since
it was "you click this button and something should happen!"  But that
is a very different use-case of asynchronous programming than Twisted is.
And Glyph raised some very salient concerns about what we were trying to
teach people.  I just don't know what direction people are coming from.

As such, the document now is targeted to "people who know the basics
of asynchronous programming and grok callbacks", and I've incorporated
Itamar's excellent suggesting of comparing explicit callback parameters
and the Deferred object, which I hope dispells the notion of Deferred
being magical fairly well (my assertion is Deferred is merely an
abstraction over said callback parameters.)  I've also fully fleshed
out the Deferreds reference; any omissions are my fault.

The plan next is to discuss composing deferreds (which will also
touch on when you should and how to create your own deferreds, as
well as deferredlist) and the convenience primitives.

Cheers,
Edward


From dave at davebritton.com  Mon Aug  3 19:08:36 2009
From: dave at davebritton.com (Dave Britton)
Date: Mon, 3 Aug 2009 19:08:36 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
References: <1248977158-sup-6989@javelin><aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com><1248986420-sup-4086@javelin>
	<1249079820-sup-3441@javelin><d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
	<1249336297-sup-7263@javelin>
Message-ID: <365b01ca148f$55712e00$0500a8c0@yoda>

----- Original Message -----
From: "Edward Z. Yang" <ezyang at MIT.EDU>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Monday, August 03, 2009 6:00 PM
Subject: Re: [Twisted-Python] Deferred documentation rewrite
================
I like the side-by-side regular and twisted versions,  that's helpful.
You are approaching the complicated stuff toward the end - please don't stop
there.
Show some more examples of more intricate cases of side-by-side logic,
eg how to use deferreds for this if all foo's are asynchronous:
x=foo1(y)
if x > 0:
    z=foo2(x)
    y = foo3(z)
else:
    z=foo4(x,y)
alldone=foo5(z)
# now add error handling for all the deferreds
# how would I debug things if foo3 had an unanticipated error?
================
My latest real question for the docs to answer is,
Are these different?
== example 1 ====
d=asynchronousprocess()
d.addCallback(b)
d.addCallback(c)
d.addErrback(errbc)
=== example 2 ====
d=asynchronousprocess().addCallback(b).d.addCallback(c).d.addErrback(errd)
=============
Why or why not? When might one use one form over the other?
-Dave



From lvh at laurensvh.be  Mon Aug  3 20:56:18 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 4 Aug 2009 02:56:18 +0200
Subject: [Twisted-Python] twisted.positioning preliminary review
Message-ID: <cedc0c090908031756u4d8ad906p3b2b52b95373e319@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hey :-)



I've been told that I need to produce a patch faster, and most of the
eyesores that I was really unhappy with have been removed (no more
mutable sentenceData dict \o/). As usual, comments welcome.

I could produce an actual patch, but perhaps it would be more useful
to do this with the Launchpad-published bzr branch? Obviously that
means I can't attach a real patch to a trac ticket. If people want me
to, I will.

Some of the obvious problems that I've seen myself or that come up on
the mailing list are tagged with "REVIEW", so if you only have 10
minutes to look at it, grep nmea.py for it :-)

Obvious TODO is howto documentation, but I'm not starting on that
until the API has been reviewed thoroughly for obvious reasons.


Here it is: http://bit.ly/3wWL2c

Or you could just: bzr branch lp:~lvh/twisted/positioning



Thanks for your time
Laurens
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkp3hvsACgkQT5v5zGkvKT4vTwCdG41LE0snM8vdK1L9ohF8wZRo
+T4An2RQz22QmjT1YFEAmOT8IHJyoT8C
=WbHv
-----END PGP SIGNATURE-----


From glyph at twistedmatrix.com  Mon Aug  3 22:37:39 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 3 Aug 2009 22:37:39 -0400
Subject: [Twisted-Python] twisted.positioning preliminary review
In-Reply-To: <cedc0c090908031756u4d8ad906p3b2b52b95373e319@mail.gmail.com>
References: <cedc0c090908031756u4d8ad906p3b2b52b95373e319@mail.gmail.com>
Message-ID: <d9047f780908031937w7c53e551vd23047f623955533@mail.gmail.com>

On Mon, Aug 3, 2009 at 8:56 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:


> I could produce an actual patch, but perhaps it would be more useful
> to do this with the Launchpad-published bzr branch? Obviously that
> means I can't attach a real patch to a trac ticket. If people want me
> to, I will.


The ticket is currently pending review, so when someone has some time for
Twisted reviews, you should get some feedback on it.  You might want to
attach a comment that makes it very clear for a reviewer where the code
actually is, since the ticket seems to have begun its life in the 'review'
state; it's a bit unorthodox for someone to keep working on a ticket once
it's been submitted for review.  The normal workflow is to have the comment
that attaches the 'review' keyword be the submission for review, and the
comment that removes it be the review commentary.  (Or something close to
that, trac's UI is so hard to drive.)

We've got a bit of a review backlog right now so there may be some latency
:-\.  Perhaps you should volunteer to review some tickets yourself? :)

The way to get from your launchpad branch to the relevant SVN-like diff is
this:

bzr get lp:~lvh/twisted/positioning positioning-3926
cd positioning-3926
bzr diff -r ancestor:lp:twisted

Attaching this patch to the ticket may make  a reviewer's life easier; not
everyone is equally facile with bzr.


> Some of the obvious problems that I've seen myself or that come up on
> the mailing list are tagged with "REVIEW", so if you only have 10
> minutes to look at it, grep nmea.py for it :-)
>
> Obvious TODO is howto documentation, but I'm not starting on that
> until the API has been reviewed thoroughly for obvious reasons.
>

This can be a separate ticket.

Here it is: http://bit.ly/3wWL2c
>
> Or you could just: bzr branch lp:~lvh/twisted/positioning
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090803/db3d5a66/attachment.htm 

From vitaly at synapticvision.com  Tue Aug  4 10:17:53 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Tue, 04 Aug 2009 10:17:53 -0400
Subject: [Twisted-Python] OS for Twisted Framework to run on
Message-ID: <20090804101753.10214krmneg7nuw4@216.129.205.5>

hi,
is there any significant reason/advantage to run the Twisted Framework  
on Linux or on FreeBSD?

Appreciate the help.



From rlotun at gmail.com  Tue Aug  4 10:37:52 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 4 Aug 2009 15:37:52 +0100
Subject: [Twisted-Python] OS for Twisted Framework to run on
In-Reply-To: <20090804101753.10214krmneg7nuw4@216.129.205.5>
References: <20090804101753.10214krmneg7nuw4@216.129.205.5>
Message-ID: <95bb10690908040737x421417a2ob164c75d28936d71@mail.gmail.com>

Hi,

> is there any significant reason/advantage to run the Twisted Framework
> on Linux or on FreeBSD?

On Linux you can use the epoll reactor. FreeBSD's equivalent is kqueue
and I don't think that reactor is as stable as the epoll one. I could
be wrong though.

Cheers,
Reza


-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com


From johnaherne at rocs.co.uk  Tue Aug  4 11:08:24 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Tue, 4 Aug 2009 16:08:24 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
Message-ID: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>

This is a really basic problem we are trying to decide about,

We have programs that run quite happily, so far. Its main task is to receive
data from port A and send it out via port B. Then receive data via port B
and send it out via port A. It's pretty much like a chat setup. You just
build up a list of connected clients and send data to them as required

One side A receives some input from a tcp port - about 100-200 characters,
and forwards it to another port B. We do not need to wait for any response.
If we get a response we pick that up through line receiver. We also run a
calllater to check if we got a response on linereceiver within the timeframe
specified. If not we drop the connection.

Traffic coming in from port B is analysed and some subset is sent back to
port A.

Ignoring port A for the moment, just concentrating on port B, we have tried
three options:--

1. We set up a defer to handle the sendline to port B so that the reactor
would schedule it in its own good time. No threads involved using the
standard twisted setup. When we get a response through receiveline we fire
the callback defer. If we timeout via callLater we fire the errback to clear
the defer. In this case the defer does not seem to be doing very much

2. Now a fresh pair of eyes is looking at the code and saying why are we
using a deferred for sending data to port B. We could just issue a straight
sendline as part of the main code and carry on. If we get a response via
linereceiver,we process it normally, otherwise we set our callLater running
and timeout and lose the connection. So no deferreds required at all. It
does seem to work.What we are not sure about is what penalty is incurred in
terms of reliability or throughput by using sendline without a deferred. We
are not too sure what the holdup will be and whether it could end up halting
the show. Is it better to schedule these messages via deferreds or am I
missing something obvious

3. So we then did an experiment and used defertothread to run the sendline
in a separate thread with its own defer to maximise the asynchronous running
of the code. So now we are running threads when one of the reasons for
looking at twisted was that we could avoid threads as much as possible.

The conundrum we are trying to resolve now is which option should we use. Do
any of the options have a built-in problem awaiting the unwary. In theory
all 3 options work. But if No 1 works well enough for our volume of traffic
should we adopt that one. Or is it better to start using the defertothread
option. Is there a simple answer

The traffic is not large, upto a 100-200 remote devices on port B. They will
send GPS data every 20 secs, and about 500 messages of about 200 bytes
average throught the day. The remote devices will respond in an irregular
manner without dropping the connection, so we force a disconnectf if
important messages are not getting through. They are then forced to
reconnect.

We have looked through the code searching for enlightment and it does seem
to be well documented, but the information we are looking for comes well
before the doc strings.

Hopefully, someone can give us some pointers in the right direction.

Thanks for any help.

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090804/da9d3c85/attachment-0001.htm 

From andrewfr_ice at yahoo.com  Tue Aug  4 13:54:17 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 4 Aug 2009 10:54:17 -0700 (PDT)
Subject: [Twisted-Python] Deferred documentation rewrite
Message-ID: <962383.45156.qm@web34201.mail.mud.yahoo.com>


Hi Edward:

Message: 2
Date: Mon, 03 Aug 2009 18:00:07 -0400
From: "Edward Z. Yang" <ezyang at MIT.EDU>
Subject: Re: [Twisted-Python] Deferred documentation rewrite
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID: <1249336297-sup-7263 at javelin>
Content-Type: text/plain; charset=UTF-8

>Why callbacks?
>  - Asynchronous interaction to synchronous interaction
>  - Delocalized execution (the parser example)
>  - High level functions in Python review

I don't know if this is an aid but here goes: When I was preparing my
Pycon 2008 talk, amongst the many papers I read, was the Doug 
Schmitt's concurrency design pattern papers including the original 
Reactor Pattern paper. I also read the Microsoft "Cooperative Task Management without Manual Stack Management Event-driven Programming is Not the Opposite of Threaded Programming" paper. In the light of those papers, 
this is the way I see things:

1) Reactors provide a portable form of non-preemptive multitasking. By
implication, reactors are schedulers. 

2) If you buy Reactor as scheduler, then Deferreds can be viewed as representing a thread (or chain) of execution, each callback analogous to a continuation - the next address to resume execution when a result is ready.

3) One of the main differences between asychronous and synchronous processing becomes who is responsible for setting up shared state between
the links in the execution chain.

>Quite frankly, I'm stumped on "defining synchronous and asynchronous."

Simple definition: In a synchronous call, the caller blocks until a result is ready. Upon return the next statement is executed (barring something like an exception). In an asynchronous call, the caller does not wait for a result and continues.

> I just don't know what direction people are coming from.

I would suggest most people are trying to solve simple problems and want the least surprise. Unfortunately asynchronous programming has lots of
surprises. In case of terminology, try looking up how terms 
like 'asynchronous' or 'synchronous' as used in a few of the more 
popular network programming books.

Cheers,
Andrew






      


From ddwiggins at advpubtech.com  Tue Aug  4 14:30:12 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 04 Aug 2009 11:30:12 -0700
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <962383.45156.qm@web34201.mail.mud.yahoo.com>
References: <962383.45156.qm@web34201.mail.mud.yahoo.com>
Message-ID: <h59unk$kq4$1@ger.gmane.org>

Andrew Francis wrote:
> Simple definition: In a synchronous call, the caller blocks until a result is ready. Upon return the next statement is executed (barring something like an exception). In an asynchronous call, the caller does not wait for a result and continues.

Just a thought on terminology: in the syncrhonous situation, A calls B; 
in async, A initiates (or triggers) B.  The intent here is to remove any 
connotation that A might wait for a response.  In line with this, B 
isn't a function or method, it's a task, unit of work, process, ...

For what it may be worth...

-- 
Don Dwiggins
Advanced Publishing Technology



From kevin.horn at gmail.com  Tue Aug  4 14:35:10 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 4 Aug 2009 13:35:10 -0500
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
Message-ID: <562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>

On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

> This is a really basic problem we are trying to decide about,
>
> We have programs that run quite happily, so far. Its main task is to
> receive data from port A and send it out via port B. Then receive data via
> port B and send it out via port A. It's pretty much like a chat setup. You
> just build up a list of connected clients and send data to them as required
>
> One side A receives some input from a tcp port - about 100-200 characters,
> and forwards it to another port B. We do not need to wait for any response.
> If we get a response we pick that up through line receiver. We also run a
> calllater to check if we got a response on linereceiver within the timeframe
> specified. If not we drop the connection.
>
> Traffic coming in from port B is analysed and some subset is sent back to
> port A.
>
> Ignoring port A for the moment, just concentrating on port B, we have tried
> three options:--
>
> 1. We set up a defer to handle the sendline to port B so that the reactor
> would schedule it in its own good time. No threads involved using the
> standard twisted setup. When we get a response through receiveline we fire
> the callback defer. If we timeout via callLater we fire the errback to clear
> the defer. In this case the defer does not seem to be doing very much
>
> 2. Now a fresh pair of eyes is looking at the code and saying why are we
> using a deferred for sending data to port B. We could just issue a straight
> sendline as part of the main code and carry on. If we get a response via
> linereceiver,we process it normally, otherwise we set our callLater running
> and timeout and lose the connection. So no deferreds required at all. It
> does seem to work.What we are not sure about is what penalty is incurred in
> terms of reliability or throughput by using sendline without a deferred. We
> are not too sure what the holdup will be and whether it could end up halting
> the show. Is it better to schedule these messages via deferreds or am I
> missing something obvious
>
> 3. So we then did an experiment and used defertothread to run the sendline
> in a separate thread with its own defer to maximise the asynchronous running
> of the code. So now we are running threads when one of the reasons for
> looking at twisted was that we could avoid threads as much as possible.
>
> The conundrum we are trying to resolve now is which option should we use.
> Do any of the options have a built-in problem awaiting the unwary. In theory
> all 3 options work. But if No 1 works well enough for our volume of traffic
> should we adopt that one. Or is it better to start using the defertothread
> option. Is there a simple answer
>
> The traffic is not large, upto a 100-200 remote devices on port B. They
> will send GPS data every 20 secs, and about 500 messages of about 200 bytes
> average throught the day. The remote devices will respond in an irregular
> manner without dropping the connection, so we force a disconnectf if
> important messages are not getting through. They are then forced to
> reconnect.
>
> We have looked through the code searching for enlightment and it does seem
> to be well documented, but the information we are looking for comes well
> before the doc strings.
>
> Hopefully, someone can give us some pointers in the right direction.
>
> Thanks for any help.
>
> John Aherne
>
>
>
It seems to me that the volume of traffic you are dealing with isn't so high
that you need to worry too much about direct sendline causing problems.  If
I were writing this from scratch based on my understanding of what you've
written above, I would probably go with option 2. (Keep in mind, my
understanding may be flawed...so...)  However, if you've already got things
working with option 1, and the added complexity isn't causing you any
trouble, I don't see any real reason not to use that, since you've already
got that working.  Others may disagree...

Option 3 seems totally unnecessary to me.  I typically stay away from
threads in Twisted unless I have a long running non-network process to deal
with (disk access, db access, heavy math processing, etc.).  Especially
because of the relative "heaviness" of threads when using Python (due to
complex interactions with the GIL), I would avoid this method...it will
probably hurt performance more than Option 1 (though still probably not
enough to matter).

Others feel free to slap me if I'm giving bad advice :)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090804/471865af/attachment.htm 

From koranthala at gmail.com  Tue Aug  4 15:28:33 2009
From: koranthala at gmail.com (Thalassery Koran)
Date: Wed, 5 Aug 2009 00:58:33 +0530
Subject: [Twisted-Python] My first wxPython App with Twisted
Message-ID: <3f81d4780908041228q251a14d9l1cf7bb3569236804@mail.gmail.com>

Hi,
    I am creating the first GUI app (wxPython based) using Twisted.
    I am facing an issue which I cannot seem to solve/understand due
to lack of trace or anything.

    I had a big app written on twisted and now I am creating a login
screen to the app.
    The app used to work without any issues. I added the login screen
and the login screen comes up.
     But then everything freezes up. I have to force quit the python
application to get anything back. Can anyone help me solve it?

    The code is as follows:

import wx
import os
import logging

from twisted.internet import wxreactor
wxreactor.install()
from twisted.internet import reactor #Called only after wxreactor.install()
from twisted.internet.task import LoopingCall

import clientapp

def opj(path):
    """ Convert paths to the platform-specific separator """
    st = apply(os.path.join, tuple(path.split('/')))
    if path.startswith('/'):
        st = '/' + st
    return st


class APPApp(wx.App):
    def OnInit(self):
        self.frame = APPFrame(None, -1, " APP Login", size=(200, 150))
        self.panel = APPPanel(self.frame,-1)
        client = clientapp.setup_app()
        call = LoopingCall(client.run)
        call.start(.51)
        return True


def main():
    app = APPApp(0)
    reactor.registerWxApp(app)
    try:
        reactor.run()
    except StandardError:
        raise


class APPPanel(wx.Panel):
    """ APP GUI PANEL

    The panel in which the user name and password is typed.
    @var ID_LOGIN: Login buttons id. When this button is clicked, the data
        is stored for logging.

    """
    ID_LOGIN = wx.NewId()

    def __init__(self, parent, id):
        self.parent = parent
        wx.Panel.__init__(self, parent, id, size=(200,150))
        self.quote = wx.StaticText(self, -1, "APP Login",wx.Point(60, 10))
        wx.StaticText(self, wx.ID_ANY, "User Name ", wx.Point(20, 33))
        wx.StaticText(self, wx.ID_ANY, "Password ", wx.Point(20, 58))
        self.usernameBox = wx.TextCtrl(self, wx.ID_ANY, "",
wx.Point(80, 31), wx.Size(100, wx.ID_ANY))
        self.usernameBox.SetFocus()
        self.passwordBox = wx.TextCtrl(self, wx.ID_ANY, "",
wx.Point(80, 56), wx.Size(100, wx.ID_ANY), style=wx.TE_PASSWORD)
        self.button =wx.Button(self, self.ID_LOGIN, "Login", wx.Point(60, 88))
        wx.EVT_BUTTON(parent, self.ID_LOGIN, self.on_login)

    def on_login(self, event):
        username = self.usernameBox.GetString(0, 128)
        password = self.passwordBox.GetString(0, 128)
        if username and password:
            self.parent.on_login_click(username, password)


class APPTaskBarIcon(wx.TaskBarIcon):
    ''' TaskBar Icon

    So that the application is always alive on the taskbar.
    3 operations are possible, DoubleClick on the taskbar would bring up the
    window, right click will bring up options to restore or exit the tool.

    '''
    TBMENU_RESTORE = wx.NewId()
    TBMENU_CLOSE   = wx.NewId()

    def __init__(self, frame):
        wx.TaskBarIcon.__init__(self)
        self.frame = frame
        # Set the image
        icon = self.MakeIcon(self.frame.get_image())
        self.SetIcon(icon, "APP")
        self.imgidx = 1
        # bind some events
        self.Bind(wx.EVT_TASKBAR_LEFT_DCLICK, self.OnTaskBarActivate)
        self.Bind(wx.EVT_MENU, self.OnTaskBarActivate, id=self.TBMENU_RESTORE)
        self.Bind(wx.EVT_MENU, self.OnTaskBarClose, id=self.TBMENU_CLOSE)

    def CreatePopupMenu(self):
        """ Right Click Popup Menu

        This method is called by the base class when it needs to popup
        the menu for the default EVT_RIGHT_DOWN event.

        """
        menu = wx.Menu()
        menu.Append(self.TBMENU_RESTORE, "Restore Window")
        menu.Append(self.TBMENU_CLOSE, "Exit APP")
        return menu

    def MakeIcon(self, img):
        """ Return the generated Icon.

        This function is required because various platforms have different
        requirements for the icon size.

        """
        if "wxMSW" in wx.PlatformInfo:
            img = img.Scale(16, 16)
        elif "wxGTK" in wx.PlatformInfo:
            img = img.Scale(22, 22)
        icon = wx.IconFromBitmap(img.ConvertToBitmap() )
        return icon

    def OnTaskBarActivate(self, evt):
        ''' Activation code - say DoubleClick etc. It raises the window '''
        if self.frame.IsIconized():
            self.frame.Iconize(False)
        if not self.frame.IsShown():
            self.frame.Show(True)
        self.frame.Raise()

    def OnTaskBarClose(self, evt):
        ''' On right click and close, the frame itself is closed '''
        wx.CallAfter(self.frame.Close)


class APPFrame(wx.Frame):
    def __init__(self, parent, id, title, size=None):
        wx.Frame.__init__(self, parent, id, title,
                          size=size, pos=wx.Point(400, 300))
        icon = self.get_icon()
        self.SetIcon(icon)
        self.tbicon = APPTaskBarIcon(self)
        self.Show(True)
        self.Bind(wx.EVT_CLOSE, self.OnCloseWindow)
        self.Bind(wx.EVT_ICONIZE, self.OnIconify)

    def on_login_click(self, username, password):
        self.Hide()

    def OnCloseWindow(self, event):
        if self.tbicon is not None:
            self.tbicon.Destroy()
        event.Skip()

    def OnIconify(self, event):
        self.Hide()

    def get_image(self):
        img= wx.Image(opj('client.ico'), wx.BITMAP_TYPE_ICO)
        return img

    def get_icon(self):
        img = self.get_image()
        icon = wx.IconFromBitmap(img.ConvertToBitmap() )
        return icon


if __name__ == '__main__':
    main()


--------------
If somebody can help me out, I would be much obliged.


From kevin.horn at gmail.com  Tue Aug  4 16:00:55 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 4 Aug 2009 15:00:55 -0500
Subject: [Twisted-Python] My first wxPython App with Twisted
In-Reply-To: <3f81d4780908041228q251a14d9l1cf7bb3569236804@mail.gmail.com>
References: <3f81d4780908041228q251a14d9l1cf7bb3569236804@mail.gmail.com>
Message-ID: <562bcc10908041300g80f0ad5tf7c6e1233d83cfb4@mail.gmail.com>

On Tue, Aug 4, 2009 at 2:28 PM, Thalassery Koran <koranthala at gmail.com>wrote:

> Hi,
>    I am creating the first GUI app (wxPython based) using Twisted.
>    I am facing an issue which I cannot seem to solve/understand due
> to lack of trace or anything.
>
>    I had a big app written on twisted and now I am creating a login
> screen to the app.
>    The app used to work without any issues. I added the login screen
> and the login screen comes up.
>     But then everything freezes up. I have to force quit the python
> application to get anything back. Can anyone help me solve it?
>
>    The code is as follows:
>
> import wx
> import os
> import logging
>
> from twisted.internet import wxreactor
> wxreactor.install()
> from twisted.internet import reactor #Called only after wxreactor.install()
> from twisted.internet.task import LoopingCall
>
> import clientapp
>
> def opj(path):
>    """ Convert paths to the platform-specific separator """
>    st = apply(os.path.join, tuple(path.split('/')))
>    if path.startswith('/'):
>        st = '/' + st
>    return st
>
>
> class APPApp(wx.App):
>    def OnInit(self):
>        self.frame = APPFrame(None, -1, " APP Login", size=(200, 150))
>        self.panel = APPPanel(self.frame,-1)
>        client = clientapp.setup_app()
>        call = LoopingCall(client.run)
>        call.start(.51)
>        return True
>
>
> def main():
>    app = APPApp(0)
>    reactor.registerWxApp(app)
>    try:
>        reactor.run()
>    except StandardError:
>        raise
>
>
> class APPPanel(wx.Panel):
>    """ APP GUI PANEL
>
>    The panel in which the user name and password is typed.
>    @var ID_LOGIN: Login buttons id. When this button is clicked, the data
>        is stored for logging.
>
>    """
>    ID_LOGIN = wx.NewId()
>
>    def __init__(self, parent, id):
>        self.parent = parent
>        wx.Panel.__init__(self, parent, id, size=(200,150))
>        self.quote = wx.StaticText(self, -1, "APP Login",wx.Point(60, 10))
>        wx.StaticText(self, wx.ID_ANY, "User Name ", wx.Point(20, 33))
>        wx.StaticText(self, wx.ID_ANY, "Password ", wx.Point(20, 58))
>        self.usernameBox = wx.TextCtrl(self, wx.ID_ANY, "",
> wx.Point(80, 31), wx.Size(100, wx.ID_ANY))
>        self.usernameBox.SetFocus()
>        self.passwordBox = wx.TextCtrl(self, wx.ID_ANY, "",
> wx.Point(80, 56), wx.Size(100, wx.ID_ANY), style=wx.TE_PASSWORD)
>        self.button =wx.Button(self, self.ID_LOGIN, "Login", wx.Point(60,
> 88))
>        wx.EVT_BUTTON(parent, self.ID_LOGIN, self.on_login)
>
>    def on_login(self, event):
>        username = self.usernameBox.GetString(0, 128)
>        password = self.passwordBox.GetString(0, 128)
>        if username and password:
>            self.parent.on_login_click(username, password)
>
>
> class APPTaskBarIcon(wx.TaskBarIcon):
>    ''' TaskBar Icon
>
>    So that the application is always alive on the taskbar.
>    3 operations are possible, DoubleClick on the taskbar would bring up the
>    window, right click will bring up options to restore or exit the tool.
>
>    '''
>    TBMENU_RESTORE = wx.NewId()
>    TBMENU_CLOSE   = wx.NewId()
>
>    def __init__(self, frame):
>        wx.TaskBarIcon.__init__(self)
>        self.frame = frame
>        # Set the image
>        icon = self.MakeIcon(self.frame.get_image())
>        self.SetIcon(icon, "APP")
>        self.imgidx = 1
>        # bind some events
>        self.Bind(wx.EVT_TASKBAR_LEFT_DCLICK, self.OnTaskBarActivate)
>        self.Bind(wx.EVT_MENU, self.OnTaskBarActivate,
> id=self.TBMENU_RESTORE)
>        self.Bind(wx.EVT_MENU, self.OnTaskBarClose, id=self.TBMENU_CLOSE)
>
>    def CreatePopupMenu(self):
>        """ Right Click Popup Menu
>
>        This method is called by the base class when it needs to popup
>        the menu for the default EVT_RIGHT_DOWN event.
>
>        """
>        menu = wx.Menu()
>        menu.Append(self.TBMENU_RESTORE, "Restore Window")
>        menu.Append(self.TBMENU_CLOSE, "Exit APP")
>        return menu
>
>    def MakeIcon(self, img):
>        """ Return the generated Icon.
>
>        This function is required because various platforms have different
>        requirements for the icon size.
>
>        """
>        if "wxMSW" in wx.PlatformInfo:
>            img = img.Scale(16, 16)
>        elif "wxGTK" in wx.PlatformInfo:
>            img = img.Scale(22, 22)
>        icon = wx.IconFromBitmap(img.ConvertToBitmap() )
>        return icon
>
>    def OnTaskBarActivate(self, evt):
>        ''' Activation code - say DoubleClick etc. It raises the window '''
>        if self.frame.IsIconized():
>            self.frame.Iconize(False)
>        if not self.frame.IsShown():
>            self.frame.Show(True)
>        self.frame.Raise()
>
>    def OnTaskBarClose(self, evt):
>        ''' On right click and close, the frame itself is closed '''
>        wx.CallAfter(self.frame.Close)
>
>
> class APPFrame(wx.Frame):
>    def __init__(self, parent, id, title, size=None):
>        wx.Frame.__init__(self, parent, id, title,
>                          size=size, pos=wx.Point(400, 300))
>        icon = self.get_icon()
>        self.SetIcon(icon)
>        self.tbicon = APPTaskBarIcon(self)
>        self.Show(True)
>        self.Bind(wx.EVT_CLOSE, self.OnCloseWindow)
>        self.Bind(wx.EVT_ICONIZE, self.OnIconify)
>
>    def on_login_click(self, username, password):
>        self.Hide()
>
>    def OnCloseWindow(self, event):
>        if self.tbicon is not None:
>            self.tbicon.Destroy()
>        event.Skip()
>
>    def OnIconify(self, event):
>        self.Hide()
>
>    def get_image(self):
>        img= wx.Image(opj('client.ico'), wx.BITMAP_TYPE_ICO)
>        return img
>
>    def get_icon(self):
>        img = self.get_image()
>        icon = wx.IconFromBitmap(img.ConvertToBitmap() )
>        return icon
>
>
> if __name__ == '__main__':
>    main()
>
>
> --------------
> If somebody can help me out, I would be much obliged.
>
>
Well, it's hard to say without looking at your Twisted code, but what
exactly is the LoopingCall for?  It seems like it would be run regardless of
whether the user had logged in or not.

I'm guessing, but maybe client.run() shouldn't be run until you have a
username and password?

Might be a place to start looking, anyway.  It looks like you've set things
up properly in main() an App.OnInit(), but I haven't worked with Twisted +
wx in a while (pre-wxreactor), so I'm not 100% sure...

I guess it boils down to what exactly client.run() does...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090804/a2ba56d8/attachment-0001.htm 

From cyli.ying.li at gmail.com  Tue Aug  4 16:23:16 2009
From: cyli.ying.li at gmail.com (Ying Li)
Date: Tue, 4 Aug 2009 16:23:16 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1249336297-sup-7263@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <1249079820-sup-3441@javelin>
	<d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
	<1249336297-sup-7263@javelin>
Message-ID: <668503780908041323v4075f62an6bc790fa639d4b87@mail.gmail.com>

In the Callbacks and errbacks section:
"Notice that in the synchronous version, process is inside the
try..except block. This translates over to the asynchronous code: if
process throws an exception, handle_twisted will get a Failure
object..." : I think you may mean "handle_twisted_error", not
"handle_twisted"

On Mon, Aug 3, 2009 at 6:00 PM, Edward Z. Yang<ezyang at mit.edu> wrote:
> I have updated my draft here:
>
> ? ?http://ezyang.com/twisted/defer2.html


From ezyang at MIT.EDU  Tue Aug  4 16:59:30 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Tue, 04 Aug 2009 16:59:30 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: 1249336297-sup-7263@javelin
Message-ID: <1249419473-sup-8108@javelin>

Thanks!  I've updated the docs accordingly.

Cheers,
Edward


From johnaherne at rocs.co.uk  Tue Aug  4 17:26:17 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Tue, 4 Aug 2009 22:26:17 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
Message-ID: <faf2d7810908041426v5339760k4d8ac0634b9925fc@mail.gmail.com>

Kevin
Thanks for the reply.

It's good to get some feedback on how someone else would go about tackling a
particular issue. It helps to confirm whether what you a retrying makes
sense.

Thanks

John Aherne

On Tue, Aug 4, 2009 at 7:35 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>
>> This is a really basic problem we are trying to decide about,
>>
>> We have programs that run quite happily, so far. Its main task is to
>> receive data from port A and send it out via port B. Then receive data via
>> port B and send it out via port A. It's pretty much like a chat setup. You
>> just build up a list of connected clients and send data to them as required
>>
>> One side A receives some input from a tcp port - about 100-200 characters,
>> and forwards it to another port B. We do not need to wait for any response.
>> If we get a response we pick that up through line receiver. We also run a
>> calllater to check if we got a response on linereceiver within the timeframe
>> specified. If not we drop the connection.
>>
>> Traffic coming in from port B is analysed and some subset is sent back to
>> port A.
>>
>> Ignoring port A for the moment, just concentrating on port B, we have
>> tried three options:--
>>
>> 1. We set up a defer to handle the sendline to port B so that the reactor
>> would schedule it in its own good time. No threads involved using the
>> standard twisted setup. When we get a response through receiveline we fire
>> the callback defer. If we timeout via callLater we fire the errback to clear
>> the defer. In this case the defer does not seem to be doing very much
>>
>> 2. Now a fresh pair of eyes is looking at the code and saying why are we
>> using a deferred for sending data to port B. We could just issue a straight
>> sendline as part of the main code and carry on. If we get a response via
>> linereceiver,we process it normally, otherwise we set our callLater running
>> and timeout and lose the connection. So no deferreds required at all. It
>> does seem to work.What we are not sure about is what penalty is incurred in
>> terms of reliability or throughput by using sendline without a deferred. We
>> are not too sure what the holdup will be and whether it could end up halting
>> the show. Is it better to schedule these messages via deferreds or am I
>> missing something obvious
>>
>> 3. So we then did an experiment and used defertothread to run the sendline
>> in a separate thread with its own defer to maximise the asynchronous running
>> of the code. So now we are running threads when one of the reasons for
>> looking at twisted was that we could avoid threads as much as possible.
>>
>> The conundrum we are trying to resolve now is which option should we use.
>> Do any of the options have a built-in problem awaiting the unwary. In theory
>> all 3 options work. But if No 1 works well enough for our volume of traffic
>> should we adopt that one. Or is it better to start using the defertothread
>> option. Is there a simple answer
>>
>> The traffic is not large, upto a 100-200 remote devices on port B. They
>> will send GPS data every 20 secs, and about 500 messages of about 200 bytes
>> average throught the day. The remote devices will respond in an irregular
>> manner without dropping the connection, so we force a disconnectf if
>> important messages are not getting through. They are then forced to
>> reconnect.
>>
>> We have looked through the code searching for enlightment and it does seem
>> to be well documented, but the information we are looking for comes well
>> before the doc strings.
>>
>> Hopefully, someone can give us some pointers in the right direction.
>>
>> Thanks for any help.
>>
>> John Aherne
>>
>>
>>
> It seems to me that the volume of traffic you are dealing with isn't so
> high that you need to worry too much about direct sendline causing
> problems.  If I were writing this from scratch based on my understanding of
> what you've written above, I would probably go with option 2. (Keep in mind,
> my understanding may be flawed...so...)  However, if you've already got
> things working with option 1, and the added complexity isn't causing you any
> trouble, I don't see any real reason not to use that, since you've already
> got that working.  Others may disagree...
>
> Option 3 seems totally unnecessary to me.  I typically stay away from
> threads in Twisted unless I have a long running non-network process to deal
> with (disk access, db access, heavy math processing, etc.).  Especially
> because of the relative "heaviness" of threads when using Python (due to
> complex interactions with the GIL), I would avoid this method...it will
> probably hurt performance more than Option 1 (though still probably not
> enough to matter).
>
> Others feel free to slap me if I'm giving bad advice :)
>
> Kevin Horn
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090804/bd143bf6/attachment.htm 

From jarrod at vertigrated.com  Tue Aug  4 18:52:42 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Tue, 4 Aug 2009 18:52:42 -0400
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
Message-ID: <fa3d0c740908041552w4c0b2addu19fc4bbefe29693e@mail.gmail.com>

Deferreds don't do what you think they do.
They don't do anything to make your code non-blocking.
They only adhere to a contract that something will eventually be returned.
The most common use of deferred's to make your code non-blocking is to use
.deferToThread()
or some other mechanism to make the long running code non-blocking, like
spawning a process.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090804/4e08ac9b/attachment.htm 

From johann.borck at densedata.com  Tue Aug  4 19:14:03 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Wed, 05 Aug 2009 01:14:03 +0200
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
Message-ID: <4A78C0BB.3000100@densedata.com>


On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk 
<mailto:johnaherne at rocs.co.uk>> wrote:
> This is a really basic problem we are trying to decide about,
>
> We have programs that run quite happily, so far. Its main task is to 
> receive data from port A and send it out via port B. Then receive data 
> via port B and send it out via port A. It's pretty much like a chat 
> setup. You just build up a list of connected clients and send data to 
> them as required
>
> One side A receives some input from a tcp port - about 100-200 
> characters, and forwards it to another port B. We do not need to wait 
> for any response. If we get a response we pick that up through line 
> receiver. We also run a calllater to check if we got a response on 
> linereceiver within the timeframe specified. If not we drop the 
> connection.
>
> Traffic coming in from port B is analysed and some subset is sent back 
> to port A.
>
> Ignoring port A for the moment, just concentrating on port B, we have 
> tried three options:--
>
> 1. We set up a defer to handle the sendline to port B so that the 
> reactor would schedule it in its own good time.

The reactor always schedules reads and writes "in its own good time", 
which means it writes whenever there's data to write and the socket is 
ready for writing. If you have data that can't be written at once, 
because it's too much for the socket to handle in a non-blocking 
fashion, the reactor (along with the transport) will take care of it, 
and defer its delivery itself, no need for any deferreds you'd had to 
care about here.

Correct me if I'm wrong, but as I understand your description, option 1. 
and 2. do not behave identically. This is how I interpret it:
option 1:

A sends msg1 to [svc] : wrap msg1 in deferred1
[ - time - ]
B sends data? to [svc] :
                                        1. callback deferred1: [svc] 
sends msg1 to B
                                        2. handle data?
B sends rsp1 to [svc]: [svc] sends rsp1 to A

option 2:

A sends msg1 to [svc] : [svc] sends msg1 to B
B sends rsp1 to [svc] :  [svc] sends rsp1 to A

If this is the case, you rely on some data? being sent to [svc] before 
msg1 can be forwarded to B. That means that you have msg1 in memory 
until you receive data? from B. This doesn't cause problems in your 
case, since you handle small messages in big intervals. But if you'd 
increase the load significantly, you'd also need significantly more RAM 
for no good reason. A case where option 1 might make sense would be if 
it depended on data? provided by B, to decide if or how to continue 
processing msg1. Then you had a valid use-case for deferreds. Since 
there are no such requirements, option 2 is definitely the right choice.

> No threads involved using the standard twisted setup. When we get a 
> response through receiveline we fire the callback defer. If we timeout 
> via callLater we fire the errback to clear the defer. In this case the 
> defer does not seem to be doing very much
>
> 2. Now a fresh pair of eyes is looking at the code and saying why are 
> we using a deferred for sending data to port B. We could just issue a 
> straight sendline as part of the main code and carry on. If we get a 
> response via linereceiver,we process it normally, otherwise we set our 
> callLater running and timeout and lose the connection. So no deferreds 
> required at all. It does seem to work.What we are not sure about is 
> what penalty is incurred in terms of reliability or throughput by 
> using sendline without a deferred.

There's absolutely no penalty (unless you allow the notion of negative 
penalties). Using sendline directly is faster than using a deferred in 
between, even if you don't count the memory overhead. I think there's a 
bit confusion about the role of deferreds in twisted here. Deferreds 
don't help you (or the reactor) with scheduling, they only provide you 
with a means to continue some processing after a certain event occurred.
> We are not too sure what the holdup will be and whether it could end 
> up halting the show. Is it better to schedule these messages via 
> deferreds or am I missing something obvious
>
> 3. So we then did an experiment and used defertothread to run the 
> sendline in a separate thread with its own defer to maximise the 
> asynchronous running of the code. So now we are running threads when 
> one of the reasons for looking at twisted was that we could avoid 
> threads as much as possible.

Do you use sendline (the twisted api) from within the thread?  If yes 
and it works, it works accidentally, probably also due to the very small 
load, and is definitely wrong (as well as unnecessary), twisted is not 
threadsafe, with the exception of a few methods/functions like 
callInThread/callFromThread/defertoThread etc.


hope that helps,
Johann


From asb.bush at gmail.com  Tue Aug  4 20:11:30 2009
From: asb.bush at gmail.com (Aaron Bush)
Date: Tue, 4 Aug 2009 20:11:30 -0400
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
Message-ID: <5a8f2d170908041711y7eb0683cocf496b54dbcf2c96@mail.gmail.com>

A note on how I handled a similar situation in regards to the timeout
requirements you seem to have:

I had a similar setup where I was forwarding data from clients to servers
and back and forth, etc.  I wanted to timeout the connection after some idle
time and ended up using the TimeoutMixin found in
twisted.protocols.policies.  It probably does exactly what you are doing but
via a simple class inheritance and variable set.

-ab

On Tue, Aug 4, 2009 at 2:35 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>
>> This is a really basic problem we are trying to decide about,
>>
>>
>> One side A receives some input from a tcp port - about 100-200 characters,
>> and forwards it to another port B. We do not need to wait for any response.
>> If we get a response we pick that up through line receiver. We also run a
>> calllater to check if we got a response on linereceiver within the timeframe
>> specified. If not we drop the connection.
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090804/7a1da860/attachment-0001.htm 

From johnaherne at rocs.co.uk  Wed Aug  5 05:17:52 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Aug 2009 10:17:52 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <fa3d0c740908041552w4c0b2addu19fc4bbefe29693e@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<fa3d0c740908041552w4c0b2addu19fc4bbefe29693e@mail.gmail.com>
Message-ID: <faf2d7810908050217j768593ceube1703ceb1b6f73c@mail.gmail.com>

Thanks for the reminder about deferreds.

I think the problem is more to do with knowing what role the reactor and
select perform.

I assume that sending and receiving data with sendline and linereceived are
not blocking.

So for our simple case we can ignore deferreds. They provide no benefit.
This is what our option 2 does.

John Aherne

On Tue, Aug 4, 2009 at 11:52 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

> Deferreds don't do what you think they do.
> They don't do anything to make your code non-blocking.
> They only adhere to a contract that something will eventually be returned.
> The most common use of deferred's to make your code non-blocking is to use
> .deferToThread()
> or some other mechanism to make the long running code non-blocking, like
> spawning a process.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090805/c6fbdb55/attachment.htm 

From johnaherne at rocs.co.uk  Wed Aug  5 05:33:28 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Aug 2009 10:33:28 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <4A78C0BB.3000100@densedata.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
Message-ID: <faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>

On Wed, Aug 5, 2009 at 12:14 AM, Johann Borck <johann.borck at densedata.com>wrote:

>
> On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk
> <mailto:johnaherne at rocs.co.uk>> wrote:
> > This is a really basic problem we are trying to decide about,
> >
> > We have programs that run quite happily, so far. Its main task is to
> > receive data from port A and send it out via port B. Then receive data
> > via port B and send it out via port A. It's pretty much like a chat
> > setup. You just build up a list of connected clients and send data to
> > them as required
> >
> > One side A receives some input from a tcp port - about 100-200
> > characters, and forwards it to another port B. We do not need to wait
> > for any response. If we get a response we pick that up through line
> > receiver. We also run a calllater to check if we got a response on
> > linereceiver within the timeframe specified. If not we drop the
> > connection.
> >
> > Traffic coming in from port B is analysed and some subset is sent back
> > to port A.
> >
> > Ignoring port A for the moment, just concentrating on port B, we have
> > tried three options:--
> >
> > 1. We set up a defer to handle the sendline to port B so that the
> > reactor would schedule it in its own good time.
>
> The reactor always schedules reads and writes "in its own good time",
> which means it writes whenever there's data to write and the socket is
> ready for writing. If you have data that can't be written at once,
> because it's too much for the socket to handle in a non-blocking
> fashion, the reactor (along with the transport) will take care of it,
> and defer its delivery itself, no need for any deferreds you'd had to
> care about here.
>
> Correct me if I'm wrong, but as I understand your description, option 1.
> and 2. do not behave identically. This is how I interpret it:
> option 1:
>
> A sends msg1 to [svc] : wrap msg1 in deferred1
> [ - time - ]
> B sends data? to [svc] :
>                                        1. callback deferred1: [svc]
> sends msg1 to B
>                                        2. handle data?
> B sends rsp1 to [svc]: [svc] sends rsp1 to A
>
> option 2:
>
> A sends msg1 to [svc] : [svc] sends msg1 to B
> B sends rsp1 to [svc] :  [svc] sends rsp1 to A
>
> If this is the case, you rely on some data? being sent to [svc] before
> msg1 can be forwarded to B. That means that you have msg1 in memory
> until you receive data? from B. This doesn't cause problems in your
> case, since you handle small messages in big intervals. But if you'd
> increase the load significantly, you'd also need significantly more RAM
> for no good reason. A case where option 1 might make sense would be if
> it depended on data? provided by B, to decide if or how to continue
> processing msg1. Then you had a valid use-case for deferreds. Since
> there are no such requirements, option 2 is definitely the right choice.
>
> > No threads involved using the standard twisted setup. When we get a
> > response through receiveline we fire the callback defer. If we timeout
> > via callLater we fire the errback to clear the defer. In this case the
> > defer does not seem to be doing very much
> >
> > 2. Now a fresh pair of eyes is looking at the code and saying why are
> > we using a deferred for sending data to port B. We could just issue a
> > straight sendline as part of the main code and carry on. If we get a
> > response via linereceiver,we process it normally, otherwise we set our
> > callLater running and timeout and lose the connection. So no deferreds
> > required at all. It does seem to work.What we are not sure about is
> > what penalty is incurred in terms of reliability or throughput by
> > using sendline without a deferred.
>
> There's absolutely no penalty (unless you allow the notion of negative
> penalties). Using sendline directly is faster than using a deferred in
> between, even if you don't count the memory overhead. I think there's a
> bit confusion about the role of deferreds in twisted here. Deferreds
> don't help you (or the reactor) with scheduling, they only provide you
> with a means to continue some processing after a certain event occurred.
> > We are not too sure what the holdup will be and whether it could end
> > up halting the show. Is it better to schedule these messages via
> > deferreds or am I missing something obvious
> >
> > 3. So we then did an experiment and used defertothread to run the
> > sendline in a separate thread with its own defer to maximise the
> > asynchronous running of the code. So now we are running threads when
> > one of the reasons for looking at twisted was that we could avoid
> > threads as much as possible.
>
> Do you use sendline (the twisted api) from within the thread?  If yes
> and it works, it works accidentally, probably also due to the very small
> load, and is definitely wrong (as well as unnecessary), twisted is not
> threadsafe, with the exception of a few methods/functions like
> callInThread/callFromThread/defertoThread etc.
>
>
> hope that helps,
> Johann
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Johann

Thanks for a very informative reply.

Our problem was more basic than deferreds. It was to with the reactor and
select command.

Sendline is not blocking so as you say we can avoid the use of deferreds and
continue to use sendline directly.

Regarding messages being stored in memory, we only store the sequence number
for each message so we can identify the message being responded to. We can
then report back to A with the original message sequence number. So the
memory footprint is quite small.

Our option 3 using defertothread does use sendline from the thread. Your
response implies that is OK since you say defertothread is threadsafe. Did
you really mean that.

Once again thanks for a very good response. That has cleared up a lot of
confusion.

I suppose it would help if there was a paragraph at the start of the twisted
documentation detailing what you have just said. So when they start on
deferreds you have some sort of context in which to interpret what is being
said

Regards

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090805/14ee349e/attachment.htm 

From johnaherne at rocs.co.uk  Wed Aug  5 05:35:59 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Aug 2009 10:35:59 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <5a8f2d170908041711y7eb0683cocf496b54dbcf2c96@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<5a8f2d170908041711y7eb0683cocf496b54dbcf2c96@mail.gmail.com>
Message-ID: <faf2d7810908050235x28b59f2fwd035812dc09a08b@mail.gmail.com>

On Wed, Aug 5, 2009 at 1:11 AM, Aaron Bush <asb.bush at gmail.com> wrote:

> A note on how I handled a similar situation in regards to the timeout
> requirements you seem to have:
>
> I had a similar setup where I was forwarding data from clients to servers
> and back and forth, etc.  I wanted to timeout the connection after some idle
> time and ended up using the TimeoutMixin found in
> twisted.protocols.policies.  It probably does exactly what you are doing but
> via a simple class inheritance and variable set.
>
> -ab
>
> On Tue, Aug 4, 2009 at 2:35 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>>
>>> This is a really basic problem we are trying to decide about,
>>>
>>>
>>> One side A receives some input from a tcp port - about 100-200
>>> characters, and forwards it to another port B. We do not need to wait for
>>> any response. If we get a response we pick that up through line receiver. We
>>> also run a calllater to check if we got a response on linereceiver within
>>> the timeframe specified. If not we drop the connection.
>>>
>>>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> Aaron

Thanks for the reply.

I have spent some time trying to find out how we might deal with timeouts
and not found anything we can use.

I'll take a look at that and see what it does.

Regards

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090805/e879aad3/attachment.htm 

From exarkun at twistedmatrix.com  Wed Aug  5 11:17:53 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 05 Aug 2009 15:17:53 -0000
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
Message-ID: <20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>

On 09:33 am, johnaherne at rocs.co.uk wrote:
>On Wed, Aug 5, 2009 at 12:14 AM, Johann Borck 
><johann.borck at densedata.com>wrote:
>>
>[snip]
>
>Sendline is not blocking so as you say we can avoid the use of 
>deferreds and
>continue to use sendline directly.

LineReceiver.sendLine is not blocking, correct.  However, your statement
implies that if it were blocking, you could use Deferreds to address 
this
problem.  This is incorrect.  Deferreds do not make blocking APIs into
non-blocking APIs.
>[snip]
>
>Our option 3 using defertothread does use sendline from the thread. 
>Your
>response implies that is OK since you say defertothread is threadsafe. 
>Did
>you really mean that.

deferToThread is not thread-safe: you may only call it from the reactor 
thread
(the thread in which you called reactor.run).

Since deferToThread runs the function you pass to it in a non-reactor 
thread,
you may not use any non-thread-safe Twisted APIs in the function you 
pass to
it.
>
>Once again thanks for a very good response. That has cleared up a lot 
>of
>confusion.
>
>I suppose it would help if there was a paragraph at the start of the 
>twisted
>documentation detailing what you have just said. So when they start on
>deferreds you have some sort of context in which to interpret what is 
>being
>said

A significant effort is presently underway to improve the documentation 
about
Deferreds.  Any specific feedback you have about it would be much 
appreciated.
:)

Jean-Paul


From peter.westlake at pobox.com  Wed Aug  5 11:59:07 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 05 Aug 2009 16:59:07 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <1248457435.32636.1326651287@webmail.messagingengine.com>
References: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>
	<1248457435.32636.1326651287@webmail.messagingengine.com>
Message-ID: <1249487947.10070.1328437413@webmail.messagingengine.com>

Background: I have a client program that calls callRemote, but the
Deferred that callRemote returns is not fired. This is an intermittent
error that only happens after some hours of traffic.

By putting some logging into AMP, it's apparent that the server gets
as far as sending the reply using BoxDispatcher._safeEmit. The
original version of that ignores connection errors, but I overrode it
with one that doesn't:

    trace_tags = False
 
    def _safeEmit(self, aBox):
        """
        Emit a box, ignoring L{ProtocolSwitched} and L{ConnectionLost}
        errors
        which cannot be usefully handled.
        """
        tag = None
        if amp.ANSWER in aBox:
            tag = aBox[amp.ANSWER]
        elif amp.ERROR in aBox:
            tag = aBox[amp.ERROR]
        if self.trace_tags and tag:
            log.debug('_safeEmit', tag)
        try:
            aBox._sendTo(self.boxSender)
        except (ProtocolSwitched, ConnectionLost):
            log.debug('ProtocolSwitched or ConnectionLost in _safeEmit',
            tag)

The message in the last line is never seen, nor is there anything else
in the logs on client or server to suggest that there has been any
problem with the connection.

On the client, BoxDispatcher._answerReceived logs all replies:

    def _answerReceived(self, box):
        """
        An AMP box was received that answered a command previously sent
        with
        L{callRemote}.

        @param box: an AmpBox with a value for its L{ANSWER} key.
        """
        b = box[ANSWER]
        question = self._outstandingRequests.pop(box[ANSWER])
        question.addErrback(self.unhandledError)
        log.msg('_answerReceived', b, question)
        question.callback(box)
        log.msg('_answerReceived', b, 'returning')

Likewise _errorReceived.

I always see both log.msgs or neither, so it isn't something going
wrong in the callback.

The client sends a request.
The server sends a reply with the same tag, and logs a message.
Until it goes wrong, the client receives the reply and logs it.
When it goes wrong, the client does not see the reply.

The protocol has the unfired Deferred in _outstandingRequests,
with the missing tag as key.

All this suggests that the problem is either in the low-level
network code, or somewhere in the network between the client
and server. But doesn't TCP/IP tell you if a packet doesn't
get through?

I tried tracing the packets using a python-pycapy script (attached),
but it showed more packets disappearing than actually were. That
could be for several reasons, including the packet sniffer missing
packets, and the _ask or _answer key not being the first thing in
the box. It also made the problem go away to a large extent, though
that may have been the "tail -F" I was running against the log. It
does take a lot longer for the bug to manifest when tracing it.

At this point, I'm stuck! If there isn't a solution to this,
the only answer will be to time out and retry the command.
But since TCP connections are meant to be reliable (or to
give an error if they fail), I hope it won't come to that.

Peter.


From johnaherne at rocs.co.uk  Wed Aug  5 18:04:10 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Aug 2009 23:04:10 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
Message-ID: <faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>

On Wed, Aug 5, 2009 at 4:17 PM, <exarkun at twistedmatrix.com> wrote:

> On 09:33 am, johnaherne at rocs.co.uk wrote:
> >On Wed, Aug 5, 2009 at 12:14 AM, Johann Borck
> ><johann.borck at densedata.com>wrote:
> >>
> >[snip]
> >
> >Sendline is not blocking so as you say we can avoid the use of
> >deferreds and
> >continue to use sendline directly.
>
> LineReceiver.sendLine is not blocking, correct.  However, your statement
> implies that if it were blocking, you could use Deferreds to address
> this
> problem.  This is incorrect.  Deferreds do not make blocking APIs into
> non-blocking APIs.
> >[snip]
> >
> >Our option 3 using defertothread does use sendline from the thread.
> >Your
> >response implies that is OK since you say defertothread is threadsafe.
> >Did
> >you really mean that.
>
> deferToThread is not thread-safe: you may only call it from the reactor
> thread
> (the thread in which you called reactor.run).
>
> Since deferToThread runs the function you pass to it in a non-reactor
> thread,
> you may not use any non-thread-safe Twisted APIs in the function you
> pass to
> it.
> >
> >Once again thanks for a very good response. That has cleared up a lot
> >of
> >confusion.
> >
> >I suppose it would help if there was a paragraph at the start of the
> >twisted
> >documentation detailing what you have just said. So when they start on
> >deferreds you have some sort of context in which to interpret what is
> >being
> >said
>
> A significant effort is presently underway to improve the documentation
> about
> Deferreds.  Any specific feedback you have about it would be much
> appreciated.
> :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Jean-Paul

Thanks for the clarifications.

I assume what I meant by blocking was I would have to put a function into
deferToThread and add some callbacks to return the result. And not directly
calling sendline from the thread. This is what Jarrod suggested in his
reply. If I'm wrong, please say so.

I have read the thread regarding deferreds with interest, but did not feel I
knew enough to contribute.

I do feel qualified to ask some very daft questions. Unfortunately, I don't
see too many daft questions being asked in the list. I reckon if I need to
know the answer to them then some other people probably do as well but don't
put themselves forward. I see it as a way to document information that is
difficult to come by. And I really do appreciate the very good answers I get

However, after this little foray, I probably feel able to comment:--

The concept of deferreds is very simple. Everyone understands the concept -
even I do. The issue is how and why and where you should use them in
twisted.

Some Basic getting Started Points.

1. For simple network activity do not use deferreds. They are not necessary.
You can get a lot done without deferreds. And you don't know how to use them
yet. The reactor and the select will process the outgoing and incoming
buffers without blocking. Anyone familiar with networking and select will
already understand this. Anyone not familiar will not realise it and needs
to be made aware of how the select works.

2. If you have blocking code - please define blocking :), then first think
about  putting it into deferToThread with appropriate callbacks and return
the deferred. As suggested by Jarrod in his response.

3. John Goerzen in his Apress book Python Network Fundamentals has a very
simple chat server example. With a few comments for the uninitiated, this
would be a good starter. Possibly I could ask for permission to include it
in some twisted HOWTO documentation for beginners with suitable copyright
recognition.

4. With these few points as starters, maybe more people will be encouraged
to get started with twisted. And if you know you can ignore deferreds until
later you will find twisted is very simple to use and get some good results
with little effort.

5. The emphasis on how deferreds work probably ought to be counterbalanced
by some insight into how and why and where you would use them. For example,
if you have a text file of 10000 lines you need to read in and summarize,
presumably you would run this with deferToThread(+other options) and get the
result via the callback. If someone has a better example please let me know.

6. Blocking code is always put into a thread or like, and a deferred
callback or errback used to return the result or failure of the blocking
code from the thread. See jarrod's response above


You asked :)
I'm giving

I may be completely off track in what I have said above. And I would not
want anyone to fall upon this mail and think it represents the gospel truth.

Thank you for the response..

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090805/754a8c84/attachment.htm 

From grickert at coldstorage.com  Wed Aug  5 18:35:36 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Wed, 5 Aug 2009 18:35:36 -0400
Subject: [Twisted-Python] Adbapi issues
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>

I'd like to use twisted's adbapi module (twisted 8.2.0 for python 2.5)
with cx_Oracle, but I'm having some issues with it.  
Specifically:

1.  It doesn't seem to reconnect (or possibly I just need enlightenment
on how reconnecting works):
If I tweak part of the test_adbapi.py script to work for Oracle (using a
proper "conn_str", and ignoring the irrelevant parts), I get something
like:

class OracleTests(unittest.TestCase):
    """Test adbapi for Oracle"""
  
    timeout = 10
  
    def setUp(self):
        self.dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str, 
               cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
cp_good_sql='select * from dual', threaded=True)
  
  
    def test_reconnect(self):
        d = defer.succeed(None)
        d.addCallback(self._testPool_1)
        d.addCallback(self._testPool_2)
        d.addCallback(self._testPool_3)
        return d
    
    def _testPool_1(self, res):
        def _success(rslt):
            self.failUnless(rslt[0][0] == 'X', "Select from dual not
working")
    
        d = self.dbpool.runQuery("select * from dual")
        d.addCallback(_success)
        return d
  
    def _testPool_2(self, res):
        self.dbpool.connections.values()[0].close()
  
    def _testPool_3(self, res):
    
        sql = "select * from dual"
        d = self.dbpool.runQuery(sql)
        def _check(row):
            self.failUnless(row[0][0] == 'X', " Select from dual not
working ")
        d.addCallback(_check)
        return d

I get this traceback:

[ERROR]: test_oracle.OracleTests.test_reconnect
Traceback (most recent call last):
  File "C:\Python25\Lib\site-packages\twisted\python\threadpool.py",
line 210, i
n _worker
    result = context.call(ctx, function, *args, **kwargs)
  File "C:\Python25\Lib\site-packages\twisted\python\context.py", line
59, in ca
llWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "C:\Python25\Lib\site-packages\twisted\python\context.py", line
37, in ca
llWithContext
    return func(*args,**kw)
  File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
line 429, i
n _runInteraction
    result = interaction(trans, *args, **kw)
  File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
line 443, i
n _runQuery
    trans.execute(*args, **kw)
cx_Oracle.InterfaceError: not connected

...am I doing something wrong, or is this something specific to Oracle?
I apologize for the seemingly rhetorical question, but does this
actually work for other databases (I don't have any others installed, so
trial just skips most of the tests when I run test_adbapi.py)?


2.  ...since I can't get it to reconnect properly, perhaps I could just
close the connections in the old connection pool, and create a new
one...

dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str, 
               cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
cp_good_sql='select * from dual', threaded=True)
dbpool.close()

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
line 359, i
n close
    if self.shutdownID:
AttributeError: ConnectionPool instance has no attribute 'shutdownID'

...shouldn't shutdownID be initialized in the class, or at least in
__init__ ?

3.  ...as stated in PEP 249, under fetchall(), "... Note that the
cursor's arraysize attribute can affect the performance of this
operation."  In the PEP, cursor.arraysize defaults to 1, which results
in absolutely terrible performance when retrieving a large number of
rows from the database (empirically tested).  Since twisted has already
gone through the trouble of wrapping simple calls to the database (like
it's runQuery), it would be ideal if this was an optional parameter that
could be passed in.  It doesn't look possible to do this in the current
adbapi module (or perhaps, I might just need enlightening again):

    def _runQuery(self, trans, *args, **kw):
        trans.execute(*args, **kw)
        return trans.fetchall() 

...perhaps it could be something more like:

    def _runQuery(self, trans, *args, **kw):
        if kw.has_key('arraysize'):
            trans._cursor.arraysize = kw['arraysize']
        trans.execute(*args, **kw)
        return trans.fetchall()


4.  Timeouts.  ...well, since Deferred.setTimeout is deprecated, and we
can't cancel deferreds, most protocols (or asynchronous "mechanisms" if
protocol isn't the right term here) should probably have a timeout
mechanism.  (...or is everyone looking at me like I'm from outer-space?)
Is there a canonical way of timing out a connection?  If I were to do a
dbpool.runQuery("select some_cols from some_table"); and attach a
timeout mechanism to the deferred that it returns, is there a way to
drop/recycle that particular connection from the pool if it didn't
respond in a timely fashion? ...or (assuming the dbpool.close() issue
went away), would "best-practice" be just closing the old pool, and
re-creating it?  


...is this module widely used in production, or are most people using
something like SqlAlchemy (or "rolling their own")?


Thanks,
	Gerrat




From jarrod at vertigrated.com  Wed Aug  5 20:12:11 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 5 Aug 2009 20:12:11 -0400
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
	<faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
Message-ID: <fa3d0c740908051712t6b962d92v57f0cbf02ccbc3a2@mail.gmail.com>

On Wed, Aug 5, 2009 at 6:04 PM, John Aherne <johnaherne at rocs.co.uk> wrote:

>
>
> 2. If you have blocking code - *please define blocking* :), then first
> think about  putting it into deferToThread with appropriate callbacks and
> return the deferred. As suggested by Jarrod in his response.
>
>
>
blocking code is code that will block or may potentially block the continued
execution of the main reactor thread.
think for the most part long running processes or operations that may be
long running.
doing file or network i/o, calculating cpu intensive work, operations that
may timeout like doing a remote call to another process or host machine,
database operations are usually a culprit, that may be flooded with work or
crashed, the examples go on but are mainly about i/o and cpu intensive
operations.
when these things happen on the reactor / main thread they block the server
from doing anything else, it can't accept new connections, it can't do
anything else until this blocking activity has completed and returned
control to the reactor thread.

you can handle this without deferToThread by breaking the blocking code up
into smaller pieces sometimes. need to transfer a large file to a socket,
instead of trying to send it all at once send 10KB at a time and yield back
to the reactor and reschedule the next 10KB until finished, this will work,
it might not be the fastest way and still may block for an unacceptable
amount of time on just 10KB, depending on how heavily taxed the i/o system
is at the moment. Usually deferToThread is just easier to implement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090805/4f421671/attachment.htm 

From dave at krondo.com  Wed Aug  5 21:56:15 2009
From: dave at krondo.com (Dave Peticolas)
Date: Wed, 05 Aug 2009 18:56:15 -0700
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
Message-ID: <4A7A383F.7010900@krondo.com>

Gerrat Rickert wrote:
> I'd like to use twisted's adbapi module (twisted 8.2.0 for python 2.5)
> with cx_Oracle, but I'm having some issues with it.  
> Specifically:
> 
> 1.  It doesn't seem to reconnect (or possibly I just need enlightenment
> on how reconnecting works):
> If I tweak part of the test_adbapi.py script to work for Oracle (using a
> proper "conn_str", and ignoring the irrelevant parts), I get something
> like:
> 
> class OracleTests(unittest.TestCase):
>     """Test adbapi for Oracle"""
>   
>     timeout = 10
>   
>     def setUp(self):
>         self.dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str, 
>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
> cp_good_sql='select * from dual', threaded=True)
>   
>   
>     def test_reconnect(self):
>         d = defer.succeed(None)
>         d.addCallback(self._testPool_1)
>         d.addCallback(self._testPool_2)
>         d.addCallback(self._testPool_3)
>         return d
>     
>     def _testPool_1(self, res):
>         def _success(rslt):
>             self.failUnless(rslt[0][0] == 'X', "Select from dual not
> working")
>     
>         d = self.dbpool.runQuery("select * from dual")
>         d.addCallback(_success)
>         return d
>   
>     def _testPool_2(self, res):
>         self.dbpool.connections.values()[0].close()
>   
>     def _testPool_3(self, res):
>     
>         sql = "select * from dual"
>         d = self.dbpool.runQuery(sql)
>         def _check(row):
>             self.failUnless(row[0][0] == 'X', " Select from dual not
> working ")
>         d.addCallback(_check)
>         return d
> 
> I get this traceback:
> 
> [ERROR]: test_oracle.OracleTests.test_reconnect
> Traceback (most recent call last):
>   File "C:\Python25\Lib\site-packages\twisted\python\threadpool.py",
> line 210, i
> n _worker
>     result = context.call(ctx, function, *args, **kwargs)
>   File "C:\Python25\Lib\site-packages\twisted\python\context.py", line
> 59, in ca
> llWithContext
>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
>   File "C:\Python25\Lib\site-packages\twisted\python\context.py", line
> 37, in ca
> llWithContext
>     return func(*args,**kw)
>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
> line 429, i
> n _runInteraction
>     result = interaction(trans, *args, **kw)
>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
> line 443, i
> n _runQuery
>     trans.execute(*args, **kw)
> cx_Oracle.InterfaceError: not connected
> 
> ...am I doing something wrong, or is this something specific to Oracle?
> I apologize for the seemingly rhetorical question, but does this
> actually work for other databases (I don't have any others installed, so
> trial just skips most of the tests when I run test_adbapi.py)?

I didn't look at the code too closely, but here's something to note
about the 'reconnect' mode: If the connection fails, the first query
on the closed connection will still fail. Adbapi cannot, in general,
know whether the query went through and then the connection failed,
or not, so to be safe it doesn't retry.


> 2.  ...since I can't get it to reconnect properly, perhaps I could just
> close the connections in the old connection pool, and create a new
> one...
> 
> dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str, 
>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
> cp_good_sql='select * from dual', threaded=True)
> dbpool.close()
> 
> Traceback (most recent call last):
>   File "<stdin>", line 1, in <module>
>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
> line 359, i
> n close
>     if self.shutdownID:
> AttributeError: ConnectionPool instance has no attribute 'shutdownID'
> 
> ...shouldn't shutdownID be initialized in the class, or at least in
> __init__ ?

Yes, probably so. Feel submit a ticket, including a patch if you want.


> 3.  ...as stated in PEP 249, under fetchall(), "... Note that the
> cursor's arraysize attribute can affect the performance of this
> operation."  In the PEP, cursor.arraysize defaults to 1, which results
> in absolutely terrible performance when retrieving a large number of
> rows from the database (empirically tested).  Since twisted has already
> gone through the trouble of wrapping simple calls to the database (like
> it's runQuery), it would be ideal if this was an optional parameter that
> could be passed in.  It doesn't look possible to do this in the current
> adbapi module (or perhaps, I might just need enlightening again):
> 
>     def _runQuery(self, trans, *args, **kw):
>         trans.execute(*args, **kw)
>         return trans.fetchall() 
> 
> ...perhaps it could be something more like:
> 
>     def _runQuery(self, trans, *args, **kw):
>         if kw.has_key('arraysize'):
>             trans._cursor.arraysize = kw['arraysize']
>         trans.execute(*args, **kw)
>         return trans.fetchall()

Supporting arraysize in some form is probably a good idea. Another
ticket is in order.


> 
> 4.  Timeouts.  ...well, since Deferred.setTimeout is deprecated, and we
> can't cancel deferreds, most protocols (or asynchronous "mechanisms" if
> protocol isn't the right term here) should probably have a timeout
> mechanism.  (...or is everyone looking at me like I'm from outer-space?)
> Is there a canonical way of timing out a connection?  If I were to do a
> dbpool.runQuery("select some_cols from some_table"); and attach a
> timeout mechanism to the deferred that it returns, is there a way to
> drop/recycle that particular connection from the pool if it didn't
> respond in a timely fashion? ...or (assuming the dbpool.close() issue
> went away), would "best-practice" be just closing the old pool, and
> re-creating it?  

Since the query is running in a blocked thread, there's not much you
can do, as far as I know.


> 
> ...is this module widely used in production, or are most people using
> something like SqlAlchemy (or "rolling their own")?

I use it widely in production with cx_Oracle. I use a subclass so I can
set arraysize. I use it to provide connections to other scripts, so when
the connections go wonky I close and reopen the pool, or just restart
the process.


> Thanks,
> 	Gerrat
> 

dave


From glyph at twistedmatrix.com  Thu Aug  6 00:07:25 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 6 Aug 2009 00:07:25 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1249336297-sup-7263@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <1249079820-sup-3441@javelin>
	<d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
	<1249336297-sup-7263@javelin>
Message-ID: <d9047f780908052107x606aca77ud405a89e4966f8e3@mail.gmail.com>

On Mon, Aug 3, 2009 at 6:00 PM, Edward Z. Yang <ezyang at mit.edu> wrote:

> I have updated my draft here:
>
>    http://ezyang.com/twisted/defer2.html
>

Thanks.  Looks like it's improving.  I've got more points to critique now,
but that's only because there's more meat to the tutorial now :).

   1. The coding standard in this document is PEP8, not the Twisted coding
   standard.  Have a look here:
   http://twistedmatrix.com/trac/browser/trunk/doc/core/development/policy/coding-standard.xhtml?format=raw
   2. "Callbacks are the lingua franca of asynchronous programming" strikes
   me as an odd turn of phrase, especially one to open the document with.
   3. "This document addresses ... Deferred.  It..." - "It" has an ambiguous
   antecedent.  Are you talking about the document or the Deferred class?  Of
   course it becomes obvious, but it should be phrased so you don't need to.
   4. It's far from obvious what "nonblocking_call" is supposed to be, given
   that its definition is "pass".  On my first skim through I thought it was a
   callback, then had to stop, go back and read again when I realized that
   didn't make sense.  Brevity is good in examples, but this is too brief.
      1. "input" is a builtin function.  You might want to avoid using it
      for a parameter name.
      5. "You might be tempted to define it like this": you're switching
   back and forth from second to third person; at first referring to the
   reader, then an anonymous different programmer.  It might be useful to give
   these roles different names; "Alice and Bob" are popular.
   6. If you must use a third-person pronoun (as you do the one time you
   refer to the API's anonymous user); you should stick to a gender-neutral one
   wherever possible, unless of course you're referring to a specific
   character.
   7. "The Deferred doesn't do anything that you couldn't have done with the
   two callback parameters."  This isn't strictly true; chaining callbacks, and
   dealing with errors that arise in different layers of an asynchronous
   callback chain, aren't strictly possible without some additional mechanism.
   8. Deferred is mentioned as an API link, Failure isn't.
   9. Your explanations of the examples seem backwards.  "At its very
   simplest, Deferred has a single callback attached to it".  I think you
   should be explaining the problem being solved by a single callback, since
   the synchronous example isn't addressed.  The synchronous example obviously
   doesn't have a single callback attached to it :).  In other words, document
   "here's what you might want to do, here's how you can do it" rather than
   "here's a thing you can do!  by the way, you might want to do it
   because...".  You've addressed the general why-you-want-to-do-it in the
   section above, but it would be helpful to do it in the small for each
   specific example.
   10. The DeferredList docs seem wonky in several ways.
      1. The opening is hard to follow.

>       We are now ready to consider our original problem

      what original problem?

>       a Deferred that would only fire

      "fire"?  what does "fire" mean?  The term hasn't yet been introduced.

>       after some other number of Deferreds fired

      Yeah, I'm still not sure what you're referring to.  Why would I want
      to do this, again?
      2. Users really shouldn't be subclassing Deferred themselves, so it's
      bad to have an example that does that.  Especially one which .  The fact
      that this is what DeferredList is is an implementation detail,
and an ugly
      one at that.  Try talking about gatherResults instead, and implementing a
      function which does the same thing without a subclass.  Or,
perhaps, a class
      of your own which just delegates to Deferred for Deferred
behavior, rather
      than inheriting it.
      3. Users *definitely* shouldn't be subclassing Deferred without
      upcalling to its __init__.  I haven't tested them, but I'm
pretty sure these
      examples will just blow up with tracebacks.
      4. The examples are never invoked.  It's semi-obvious how to use them,
      but semi-obvious things are often invoked semi-correctly.  Better to have
      examples with can be run, or at least ones with a 0-argument entry point
      named something like 'start'.
      5. "Consider the following interaction of two Deferreds:".  You're
      setting this up as if it's going to be very formal, but then
your language
      is sloppy; you don't name the different deferreds.  One of them is "one
      deferred", the other is "a Deferred".  You don't describe them
      independently, the relationship is implicit in the description.
Given that
      you're describing a fairly complex constellation of objects with
which the
      user isn't necessarily familiar yet, you should be clearly labeling the
      Deferreds in question in the code sample with variable names
(something as
      simple as "a" and "b" would probably do fine) and then consistently using
      those names to refer to them in the prose as well, so it's easy for the
      reader to follow exactly which thing you're talking about.  A big problem
      with technical documentation, *especially* documentation of Deferreds,
      is that it's very easy for a reader to start confusing which thing is
      which.  Once again, it would be good to set up some kind of
concrete problem
      first: *why* are we waiting on multiple Deferreds?
      11. "Fluent Interface"?  This is more new terminology ? terminology
   that I am not familiar with, I might add ? that isn't defined anywhere in
   the document.  I think it's more of an appendix than something important to
   the main narrative; composing Deferreds, returning a Deferred from another
   Deferred, firing a Deferred from another callback, etc, should be covered
   first.
   1. "Batons" looks like it's going to be more fancy ad-hoc terminology - I
      would recommend keeping the language simpler and consistent with other
      Twisted documentation :).
   12. Still a lot of enumerated lists.  Obviously a bad habit to which I am
   prone ;-), but when one uses an enumerated list, there should either be in
   an expectation that the numbers will be useful.  Either, as in this document
   review, or code reviews, where the numbers can be used to refer to points in
   subsequent discussion, or there's a clear separation of steps.  It's not
   really clear what the "two possible scenarios" lists are enumerations *of
   *.  Are they different things that can happen?
   13. You should try eliminating the word "consider" from the document.
   You seem to have the rhetorical habit, which I've seen from other people
   (myself included), of having a sentence which is missing a clear
   subject/verb/object relationship, and working around it by saying "consider"
   or "let's say".  For example, you want to communicate that there's a
   Deferred somewhere with some callbacks.  You can't just say "A Deferred with
   some callbacks.", so you say "Consider: a Deferred with some callbacks", and
   now the sentence *seems* complete, but it doesn't really communicate a
   full thought.

Okay, I think that's enough feedback for now.  I'll have to do more with
your next round of edits, or my feedback is going to be longer than the
document itself :).

* Why asynchronous?
>    - Define synchronous and asynchronous
>    - Multiplexing IO
>    - Introduce a simple reactor based on select()
> * Why callbacks?


You might want to start with this one, since callbacks are even more
generally useful than asynchronous programming.  Your suggestion of a parser
example makes this clear: even if you're parsing synchronously, you'll still
probably have callbacks for different parse rule matches.


>    - Asynchronous interaction to synchronous interaction
>    - Delocalized execution (the parser example)
>    - High level functions in Python review
>
> Quite frankly, I'm stumped on "defining synchronous and asynchronous."


I'd start with the words themselves.  synchronous means "at the same time".
This refers to the timing of the function call and its effects.  In a
synchronous program, if I say "read()", then at that same time that "read()"
is called, the reading happens and the data is returned.  But, in an
*a*synchronous
("not at the same time") program, "read()" is called, but its effects happen
later.

This can obviously be fleshed out quite a bit, but I think that core concept
is what's important to communicate.


> Asynchronous had always made sense to me, coming from JavaScript, since
> it was "you click this button and something should happen!"  But that
> is a very different use-case of asynchronous programming than Twisted is.


Your experience with JavaScript ? or at least, with GUI programming, since
JavaScript itself is terrible ? might actually be a good way to explain the
problem here.  One example I like to use to explain why sometimes you just
can't block is this:

    button1 = Button()
    button2 = Button()
    # I need to wait for the user to click on this button
    button1.waitForClick()
    # okay now they've clicked it.
    message("Hooray you clicked button 1")
    button2.waitForClick()
    # oh dang, but what if they want to click button 2 first!?!

although you can probably devise a more lucid variant of that :).

One of these days I really want to write a combined Twisted / GTK tutorial
that shows how to ask questions in dialog boxes without blocking and
sub-main-loops and other nasty tricks that GTK programs often get up to in
order to have a question-and-answer UI.  Unfortunately, although these
examples do serve as easy-to-identify for learning Twisted programmers, it's
not always immediately clear how this corresponds to networking data, and
the extra complexity of GUI libraries makes it more difficult to run the
examples.

And Glyph raised some very salient concerns about what we were trying to
> teach people.  I just don't know what direction people are coming from.
>

I think the best assumption of background for such an introductory tutorial
is to assume that the user doesn't really understand what problem Deferreds
solve, and has thus never done any substantial work in an asynchronous
environment.  More experienced users will skim some parts, but that's fine:
more experienced users are easily able to figure out what Deferreds are even
with just the current documentation :).

We shouldn't treat this as a Python tutorial, but it should at least touch
briefly on callable objects and nested variables.

As such, the document now is targeted to "people who know the basics
> of asynchronous programming and grok callbacks", and I've incorporated
> Itamar's excellent suggesting of comparing explicit callback parameters
> and the Deferred object, which I hope dispells the notion of Deferred
> being magical fairly well (my assertion is Deferred is merely an
> abstraction over said callback parameters.)  I've also fully fleshed
> out the Deferreds reference; any omissions are my fault.
>

Again, I think this might be assuming a bit too much.  At the very least,
you should find a very, very good tutorial on callbacks and higher-order
functions in Python to point people to as a dependency, so that users who *
don't* have that experience can go read about it somewhere else.  (Actually,
every dependency of every document *really* ought to have hyperlinks to
other resources that teach that dependency, so that a user who doesn't know
python but needs to dive into a Twisted codebase will be put on their way
quickly.)

Even people who have some Python experience, but use callbacks rarely, will
often discover there are things they don't know when they start programming
with Twisted and nesting 5 or 6 callbacks in a function.  For example, many
people don't know all the fiddly rules of scope nesting.  Take a poll of
some potential targets for this intro documentation and ask them if they can
explain why this produces an error:

    def f(x=1):
        def t():
            if x > 3:
                x = 2
            else:
                return x
        return t

... but adding 'x=x' to the parameter list of 't' makes it work (although
not like they would expect if they manipulated 'x' in f).

The plan next is to discuss composing deferreds (which will also
> touch on when you should and how to create your own deferreds, as
> well as deferredlist) and the convenience primitives.
>

I think you need to start talking about creating your own Deferreds, at
least implicitly, very early on in the document.  For example, rather than
having "nonblocking_call" be a dummy function, have it maintain a list of
yet-to-complete calls, like this:

    pending = []
    def process(data):
        return "Processed: <" + data + ">"
    def nonblockingCall(data, whenSucceeded, whenFailed):
        pending.append((data, whenSucceeded, whenFailed))
    def completeOneCall(succeeded=True):
        data, whenSucceeded, whenFailed = pending.pop(0)
        if succeeded:
            whenSucceeded(process(data))
        else:
            whenFailed(RuntimeError("It failed, for some reason."))

then (A) you can demonstrate how the callbacks actually get called in a tiny
little system that the reader can play around with and get comfortable in
before understanding Deferred, and (B) you can illustrate the same example
again with some Deferred logic involved.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090806/a11f9edf/attachment-0001.htm 

From johnaherne at rocs.co.uk  Thu Aug  6 02:59:24 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 6 Aug 2009 07:59:24 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
	<faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
Message-ID: <faf2d7810908052359q6243025av4762022b5b86a815@mail.gmail.com>

A point I missed out on:
The adbapi module seems to be a good example of using deferreds and threads.
The adbapi module returns a deferred it has created, you add your callbacks
to it. It calls your callback when ready. It does seem like the examplar for
doing deferreds.

The db stuff will normally block so put it in a thread and use deferreds to
get the result or failure.

A point about the db calls is that they can be very intensive. If you need
to run some db calls every 30 secs or 60 secs and the db takes 50% or more
of the time to generate the results, you won't have much time to service any
incoming requests to see the data results. The remote connections will be
failing bigtime.

So then I suppose you should break the code into 2 programs. One that does
the db stuff, the other to handle the remote connections. The db code when
it has a result will then connect to the other program and pass across its
results. There may be better ways of doing this of course.

So as Jarrod points out, deferToThread is an easy way of solving blocking
code, but not always. It seems good for short blocks, but you do need the
bulk of the time available for handling connections.

If anyone sees howlers in this, please let me know.

Regards

John Aherne



On Wed, Aug 5, 2009 at 11:04 PM, John Aherne <johnaherne at rocs.co.uk> wrote:

>
>
> On Wed, Aug 5, 2009 at 4:17 PM, <exarkun at twistedmatrix.com> wrote:
>
>> On 09:33 am, johnaherne at rocs.co.uk wrote:
>> >On Wed, Aug 5, 2009 at 12:14 AM, Johann Borck
>> ><johann.borck at densedata.com>wrote:
>> >>
>> >[snip]
>> >
>> >Sendline is not blocking so as you say we can avoid the use of
>> >deferreds and
>> >continue to use sendline directly.
>>
>> LineReceiver.sendLine is not blocking, correct.  However, your statement
>> implies that if it were blocking, you could use Deferreds to address
>> this
>> problem.  This is incorrect.  Deferreds do not make blocking APIs into
>> non-blocking APIs.
>> >[snip]
>> >
>> >Our option 3 using defertothread does use sendline from the thread.
>> >Your
>> >response implies that is OK since you say defertothread is threadsafe.
>> >Did
>> >you really mean that.
>>
>> deferToThread is not thread-safe: you may only call it from the reactor
>> thread
>> (the thread in which you called reactor.run).
>>
>> Since deferToThread runs the function you pass to it in a non-reactor
>> thread,
>> you may not use any non-thread-safe Twisted APIs in the function you
>> pass to
>> it.
>> >
>> >Once again thanks for a very good response. That has cleared up a lot
>> >of
>> >confusion.
>> >
>> >I suppose it would help if there was a paragraph at the start of the
>> >twisted
>> >documentation detailing what you have just said. So when they start on
>> >deferreds you have some sort of context in which to interpret what is
>> >being
>> >said
>>
>> A significant effort is presently underway to improve the documentation
>> about
>> Deferreds.  Any specific feedback you have about it would be much
>> appreciated.
>> :)
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> Jean-Paul
>
> Thanks for the clarifications.
>
> I assume what I meant by blocking was I would have to put a function into
> deferToThread and add some callbacks to return the result. And not directly
> calling sendline from the thread. This is what Jarrod suggested in his
> reply. If I'm wrong, please say so.
>
> I have read the thread regarding deferreds with interest, but did not feel
> I knew enough to contribute.
>
> I do feel qualified to ask some very daft questions. Unfortunately, I don't
> see too many daft questions being asked in the list. I reckon if I need to
> know the answer to them then some other people probably do as well but don't
> put themselves forward. I see it as a way to document information that is
> difficult to come by. And I really do appreciate the very good answers I get
>
> However, after this little foray, I probably feel able to comment:--
>
> The concept of deferreds is very simple. Everyone understands the concept -
> even I do. The issue is how and why and where you should use them in
> twisted.
>
> Some Basic getting Started Points.
>
> 1. For simple network activity do not use deferreds. They are not
> necessary. You can get a lot done without deferreds. And you don't know how
> to use them yet. The reactor and the select will process the outgoing and
> incoming buffers without blocking. Anyone familiar with networking and
> select will already understand this. Anyone not familiar will not realise it
> and needs to be made aware of how the select works.
>
> 2. If you have blocking code - please define blocking :), then first think
> about  putting it into deferToThread with appropriate callbacks and return
> the deferred. As suggested by Jarrod in his response.
>
> 3. John Goerzen in his Apress book Python Network Fundamentals has a very
> simple chat server example. With a few comments for the uninitiated, this
> would be a good starter. Possibly I could ask for permission to include it
> in some twisted HOWTO documentation for beginners with suitable copyright
> recognition.
>
> 4. With these few points as starters, maybe more people will be encouraged
> to get started with twisted. And if you know you can ignore deferreds until
> later you will find twisted is very simple to use and get some good results
> with little effort.
>
> 5. The emphasis on how deferreds work probably ought to be counterbalanced
> by some insight into how and why and where you would use them. For example,
> if you have a text file of 10000 lines you need to read in and summarize,
> presumably you would run this with deferToThread(+other options) and get the
> result via the callback. If someone has a better example please let me know.
>
> 6. Blocking code is always put into a thread or like, and a deferred
> callback or errback used to return the result or failure of the blocking
> code from the thread. See jarrod's response above
>
>
> You asked :)
> I'm giving
>
> I may be completely off track in what I have said above. And I would not
> want anyone to fall upon this mail and think it represents the gospel truth.
>
> Thank you for the response..
>
> John Aherne
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090806/f56dad02/attachment.htm 

From johnaherne at rocs.co.uk  Thu Aug  6 03:02:04 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 6 Aug 2009 08:02:04 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <fa3d0c740908051712t6b962d92v57f0cbf02ccbc3a2@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
	<faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
	<fa3d0c740908051712t6b962d92v57f0cbf02ccbc3a2@mail.gmail.com>
Message-ID: <faf2d7810908060002x46b049b8iac07e18f79bf793b@mail.gmail.com>

On Thu, Aug 6, 2009 at 1:12 AM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

>
>
> On Wed, Aug 5, 2009 at 6:04 PM, John Aherne <johnaherne at rocs.co.uk> wrote:
>
>>
>>
>> 2. If you have blocking code - *please define blocking* :), then first
>> think about  putting it into deferToThread with appropriate callbacks and
>> return the deferred. As suggested by Jarrod in his response.
>>
>>
>>
> blocking code is code that will block or may potentially block the
> continued execution of the main reactor thread.
> think for the most part long running processes or operations that may be
> long running.
> doing file or network i/o, calculating cpu intensive work, operations that
> may timeout like doing a remote call to another process or host machine,
> database operations are usually a culprit, that may be flooded with work or
> crashed, the examples go on but are mainly about i/o and cpu intensive
> operations.
> when these things happen on the reactor / main thread they block the server
> from doing anything else, it can't accept new connections, it can't do
> anything else until this blocking activity has completed and returned
> control to the reactor thread.
>
> you can handle this without deferToThread by breaking the blocking code up
> into smaller pieces sometimes. need to transfer a large file to a socket,
> instead of trying to send it all at once send 10KB at a time and yield back
> to the reactor and reschedule the next 10KB until finished, this will work,
> it might not be the fastest way and still may block for an unacceptable
> amount of time on just 10KB, depending on how heavily taxed the i/o system
> is at the moment. Usually deferToThread is just easier to implement.
>
> Jarrod,


Thanks. I've incorporated some of what you said into a reply to my own mail.
A point I should have added to my other ones first time round.

John Aherne


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090806/6813c4f5/attachment.htm 

From johnaherne at rocs.co.uk  Thu Aug  6 06:29:01 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 6 Aug 2009 11:29:01 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908060002x46b049b8iac07e18f79bf793b@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
	<faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
	<fa3d0c740908051712t6b962d92v57f0cbf02ccbc3a2@mail.gmail.com>
	<faf2d7810908060002x46b049b8iac07e18f79bf793b@mail.gmail.com>
Message-ID: <faf2d7810908060329i69a03d41sbaf3efa27a349fbe@mail.gmail.com>

I'll try and put all my comments together with the feedback from everyone.
Then I can pass it over to the defer documentation thread to see if they are
interested in any part of it.

John

On Thu, Aug 6, 2009 at 8:02 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

>
>
> On Thu, Aug 6, 2009 at 1:12 AM, Jarrod Roberson <jarrod at vertigrated.com>wrote:
>
>>
>>
>> On Wed, Aug 5, 2009 at 6:04 PM, John Aherne <johnaherne at rocs.co.uk>wrote:
>>
>>>
>>>
>>> 2. If you have blocking code - *please define blocking* :), then first
>>> think about  putting it into deferToThread with appropriate callbacks and
>>> return the deferred. As suggested by Jarrod in his response.
>>>
>>>
>>>
>> blocking code is code that will block or may potentially block the
>> continued execution of the main reactor thread.
>> think for the most part long running processes or operations that may be
>> long running.
>> doing file or network i/o, calculating cpu intensive work, operations that
>> may timeout like doing a remote call to another process or host machine,
>> database operations are usually a culprit, that may be flooded with work or
>> crashed, the examples go on but are mainly about i/o and cpu intensive
>> operations.
>> when these things happen on the reactor / main thread they block the
>> server from doing anything else, it can't accept new connections, it can't
>> do anything else until this blocking activity has completed and returned
>> control to the reactor thread.
>>
>> you can handle this without deferToThread by breaking the blocking code up
>> into smaller pieces sometimes. need to transfer a large file to a socket,
>> instead of trying to send it all at once send 10KB at a time and yield back
>> to the reactor and reschedule the next 10KB until finished, this will work,
>> it might not be the fastest way and still may block for an unacceptable
>> amount of time on just 10KB, depending on how heavily taxed the i/o system
>> is at the moment. Usually deferToThread is just easier to implement.
>>
>> Jarrod,
>
>
> Thanks. I've incorporated some of what you said into a reply to my own
> mail. A point I should have added to my other ones first time round.
>
> John Aherne
>
>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090806/e5b80f7c/attachment-0001.htm 

From exarkun at twistedmatrix.com  Thu Aug  6 10:44:16 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 06 Aug 2009 14:44:16 -0000
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <4A7A383F.7010900@krondo.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
	<4A7A383F.7010900@krondo.com>
Message-ID: <20090806144416.19518.850204705.divmod.xquotient.37@localhost.localdomain>

On 01:56 am, dave at krondo.com wrote:
>Gerrat Rickert wrote:
>[snip]
>>2.  ...since I can't get it to reconnect properly, perhaps I could 
>>just
>>close the connections in the old connection pool, and create a new
>>one...
>>
>>dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str,
>>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
>>cp_good_sql='select * from dual', threaded=True)
>>dbpool.close()
>>
>>Traceback (most recent call last):
>>   File "<stdin>", line 1, in <module>
>>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
>>line 359, i
>>n close
>>     if self.shutdownID:
>>AttributeError: ConnectionPool instance has no attribute 'shutdownID'
>>
>>...shouldn't shutdownID be initialized in the class, or at least in
>>__init__ ?
>
>Yes, probably so. Feel submit a ticket, including a patch if you want.

This looks a lot like a bug that's fixed in trunk already.  I
suggest trying this out with a recent checkout of trunk to see
if it goes away before spending much time trying to track it down.

Jean-Paul


From grickert at coldstorage.com  Thu Aug  6 11:37:03 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Thu, 6 Aug 2009 11:37:03 -0400
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <20090806144416.19518.850204705.divmod.xquotient.37@localhost.localdomain>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com><4A7A383F.7010900@krondo.com>
	<20090806144416.19518.850204705.divmod.xquotient.37@localhost.localdomain>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0481F527@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
>Sent: Thursday, August 06, 2009 10:44 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Adbapi issues
>
>On 01:56 am, dave at krondo.com wrote:
>>Gerrat Rickert wrote:
>>[snip]
>>>2.  ...since I can't get it to reconnect properly, perhaps I could
>>>just
>>>close the connections in the old connection pool, and create a new
>>>one...
>>>
>>>dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str,
>>>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
>>>cp_good_sql='select * from dual', threaded=True)
>>>dbpool.close()
>>>
>>>Traceback (most recent call last):
>>>   File "<stdin>", line 1, in <module>
>>>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
>>>line 359, i
>>>n close
>>>     if self.shutdownID:
>>>AttributeError: ConnectionPool instance has no attribute 'shutdownID'
>>>
>>>...shouldn't shutdownID be initialized in the class, or at least in
>>>__init__ ?
>>
>>Yes, probably so. Feel submit a ticket, including a patch if you want.
>
>This looks a lot like a bug that's fixed in trunk already.  I
>suggest trying this out with a recent checkout of trunk to see
>if it goes away before spending much time trying to track it down.
>
>Jean-Paul

Well, before filing this as a bug, I found Ticket #2680, which I think
is the same issue.  Nothing's been fixed in the trunk though (...as of
30 seconds ago anyway).  ...and judging from all the discussion on that
ticket, maybe resolving this isn't as trivial as I would have expected.

Gerrat




From smhollingsworth at gmail.com  Thu Aug  6 11:47:43 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Thu, 6 Aug 2009 11:47:43 -0400
Subject: [Twisted-Python] Tunneling using conch (with application.service)
Message-ID: <66dccc4d0908060847y21a42afdt2c1d831419d710a0@mail.gmail.com>

I?ve got an app written that runs as a service using
twisted.application.service that I need to tunnel through SSH. Right now, I
use a script that makes use of Paramiko (and runs separate from my app) to
set up a tunnel. That more or less works, but I?ve had some problems with
the tunnel just going away and would like to integrate the tunneling into
the app, using conch. I?ve found an example of tunneling via conch, at
http://twistedmatrix.com/pipermail/twisted-python/2009-February/019196.html,
that I think I can use as a base to add the code to my app.

Right now my app is basically:

class DataPuller(service.Service):
    ...Code for my app...
    ... The app pulls data from a database and I can only connect to the
server via SSH...

application = service.Application(?Data_puller?)
dpService = DataPuller()
dpService.setServiceParent(application)

My main problems are that I?m not sure whether or not the example linked to
above is a good one for tunneling with conch and, if it is, how do I merge
the example tunneling code with my app code. From the example, where the
code is:

 class Connection(connection.SSHConnection):
        .
        .
        .
        def serviceStarted(self):

Do I instantiate my DataPuller class there, in serviceStarted (and not
subclass from service.Service)? If so, how do I wrap the tunneling code so
that I can make it a service? If not, do I need put the tunneling code
inside my DataPuller class? What would that look like?

Any help will be greatly appreciated.

Sean M Hollingsworth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090806/9f8cfb99/attachment.htm 

From lvh at laurensvh.be  Thu Aug  6 12:45:25 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 6 Aug 2009 18:45:25 +0200
Subject: [Twisted-Python] twisted.positioning preliminary review
In-Reply-To: <d9047f780908031937w7c53e551vd23047f623955533@mail.gmail.com>
References: <cedc0c090908031756u4d8ad906p3b2b52b95373e319@mail.gmail.com>
	<d9047f780908031937w7c53e551vd23047f623955533@mail.gmail.com>
Message-ID: <cedc0c090908060945gefb8844r41f1582a3705c824@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Patch added! Reviewers rejoice.

http://twistedmatrix.com/trac/ticket/3926

As usual, available on bzr: bzr branch lp:~lvh/twisted/positioning

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkp7CG4ACgkQT5v5zGkvKT7MywCfYL69jpqVupaYZ0nKC2A+JrmD
4skAmwXa5ua+iQWdZRdOeXuwhSipdnSF
=MXVb
-----END PGP SIGNATURE-----


> We've got a bit of a review backlog right now so there may be some latency
> :-\.? Perhaps you should volunteer to review some tickets yourself? :)

I've reviewed a few now, only the ones that I understand though, which
aren't that many :-D

>> Obvious TODO is howto documentation, but I'm not starting on that
>> until the API has been reviewed thoroughly for obvious reasons.
>
> This can be a separate ticket.

http://twistedmatrix.com/trac/ticket/3953

Enjoy
Laurens


From darren at ontrenet.com  Thu Aug  6 14:12:07 2009
From: darren at ontrenet.com (Darren Govoni)
Date: Thu, 06 Aug 2009 14:12:07 -0400
Subject: [Twisted-Python] Changing threadpool size in reactor
Message-ID: <1249582327.23367.5.camel@nuraku>

Hi,
  I could see from the docs I read how to increase the allotted threads
in the reactor.

I use reactor.callInThread(....) and it seems to max out at 10. I read
about ThreadPool class, but need to run mine in the reactor. 

thanks for any tips and sorry if it was more obvious than i could see.

Darren



From grickert at coldstorage.com  Thu Aug  6 14:57:22 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Thu, 6 Aug 2009 14:57:22 -0400
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <4A7A383F.7010900@krondo.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
	<4A7A383F.7010900@krondo.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0481F61D@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Dave Peticolas
>Sent: Wednesday, August 05, 2009 9:56 PM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Adbapi issues
>
>Gerrat Rickert wrote:
>> I'd like to use twisted's adbapi module (twisted 8.2.0 for python
2.5)
>> with cx_Oracle, but I'm having some issues with it.
>> Specifically:
>>
>> 1.  It doesn't seem to reconnect (or possibly I just need
>enlightenment
>> on how reconnecting works):
>> If I tweak part of the test_adbapi.py script to work for Oracle
(using
>a
>> proper "conn_str", and ignoring the irrelevant parts), I get
something
>> like:
>>
>> class OracleTests(unittest.TestCase):
>>     """Test adbapi for Oracle"""
>>
>>     timeout = 10
>>
>>     def setUp(self):
>>         self.dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str,
>>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
>> cp_good_sql='select * from dual', threaded=True)
>>
>>
>>     def test_reconnect(self):
>>         d = defer.succeed(None)
>>         d.addCallback(self._testPool_1)
>>         d.addCallback(self._testPool_2)
>>         d.addCallback(self._testPool_3)
>>         return d
>>
>>     def _testPool_1(self, res):
>>         def _success(rslt):
>>             self.failUnless(rslt[0][0] == 'X', "Select from dual not
>> working")
>>
>>         d = self.dbpool.runQuery("select * from dual")
>>         d.addCallback(_success)
>>         return d
>>
>>     def _testPool_2(self, res):
>>         self.dbpool.connections.values()[0].close()
>>
>>     def _testPool_3(self, res):
>>
>>         sql = "select * from dual"
>>         d = self.dbpool.runQuery(sql)
>>         def _check(row):
>>             self.failUnless(row[0][0] == 'X', " Select from dual not
>> working ")
>>         d.addCallback(_check)
>>         return d
>>
>> I get this traceback:
>>
>> [ERROR]: test_oracle.OracleTests.test_reconnect
>> Traceback (most recent call last):
>>   File "C:\Python25\Lib\site-packages\twisted\python\threadpool.py",
>> line 210, i
>> n _worker
>>     result = context.call(ctx, function, *args, **kwargs)
>>   File "C:\Python25\Lib\site-packages\twisted\python\context.py",
line
>> 59, in ca
>> llWithContext
>>     return self.currentContext().callWithContext(ctx, func, *args,
>**kw)
>>   File "C:\Python25\Lib\site-packages\twisted\python\context.py",
line
>> 37, in ca
>> llWithContext
>>     return func(*args,**kw)
>>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
>> line 429, i
>> n _runInteraction
>>     result = interaction(trans, *args, **kw)
>>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
>> line 443, i
>> n _runQuery
>>     trans.execute(*args, **kw)
>> cx_Oracle.InterfaceError: not connected
>>
>> ...am I doing something wrong, or is this something specific to
>Oracle?
>> I apologize for the seemingly rhetorical question, but does this
>> actually work for other databases (I don't have any others installed,
>so
>> trial just skips most of the tests when I run test_adbapi.py)?
>
>I didn't look at the code too closely, but here's something to note
>about the 'reconnect' mode: If the connection fails, the first query
>on the closed connection will still fail. Adbapi cannot, in general,
>know whether the query went through and then the connection failed,
>or not, so to be safe it doesn't retry.

Thanks Dave!  That explains it...and retrying, and issuing queries 
after that work.  Great!

<snip>

>
>> 3.  ...as stated in PEP 249, under fetchall(), "... Note that the
>> cursor's arraysize attribute can affect the performance of this
>> operation."  In the PEP, cursor.arraysize defaults to 1, which
results
>> in absolutely terrible performance when retrieving a large number of
>> rows from the database (empirically tested).  Since twisted has
>already
>> gone through the trouble of wrapping simple calls to the database
>(like
>> it's runQuery), it would be ideal if this was an optional parameter
>that
>> could be passed in.  It doesn't look possible to do this in the
>current
>> adbapi module (or perhaps, I might just need enlightening again):
>>
>>     def _runQuery(self, trans, *args, **kw):
>>         trans.execute(*args, **kw)
>>         return trans.fetchall()
>>
>> ...perhaps it could be something more like:
>>
>>     def _runQuery(self, trans, *args, **kw):
>>         if kw.has_key('arraysize'):
>>             trans._cursor.arraysize = kw['arraysize']
>>         trans.execute(*args, **kw)
>>         return trans.fetchall()
>
>Supporting arraysize in some form is probably a good idea. Another
>ticket is in order.

Ok, I filed ticket #3956
...along with a patch for adbapi.py, and test_adbapi.py.

My apologies in advance for the test patch :o)
I haven't written many tests, so I'm not exactly sure the best
(or perhaps even a good way) of testing some things.


>> 4.  Timeouts.  ...well, since Deferred.setTimeout is deprecated, and
>we
>> can't cancel deferreds, most protocols (or asynchronous "mechanisms"
>if
>> protocol isn't the right term here) should probably have a timeout
>> mechanism.  (...or is everyone looking at me like I'm from outer-
>space?)
>> Is there a canonical way of timing out a connection?  If I were to do
>a
>> dbpool.runQuery("select some_cols from some_table"); and attach a
>> timeout mechanism to the deferred that it returns, is there a way to
>> drop/recycle that particular connection from the pool if it didn't
>> respond in a timely fashion? ...or (assuming the dbpool.close() issue
>> went away), would "best-practice" be just closing the old pool, and
>> re-creating it?
>
>Since the query is running in a blocked thread, there's not much you
>can do, as far as I know.

...my understanding is that it's relatively easy to kill a thread on a 
Unix platform, but not as easy with Windows (which, unfortunately I 
use almost exclusively).  

...maybe once *most* users are up to at least python version 2.6 (I'm
not), 
I wonder if the threadpool in adbapi could be replaced with
functionality 

From exarkun at twistedmatrix.com  Thu Aug  6 15:24:44 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 06 Aug 2009 19:24:44 -0000
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F0481F61D@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
	<4A7A383F.7010900@krondo.com>
	<BB13E4C4D649234F84A01F6DF64BB87F0481F61D@ccs-ex01.coldstorage.com>
Message-ID: <20090806192444.19518.384017450.divmod.xquotient.47@localhost.localdomain>

On 06:57 pm, grickert at coldstorage.com wrote:
>[snip]
>>
>>Supporting arraysize in some form is probably a good idea. Another
>>ticket is in order.
>
>Ok, I filed ticket #3956
>...along with a patch for adbapi.py, and test_adbapi.py.

Great.  Thanks a lot! :)
>My apologies in advance for the test patch :o)
>I haven't written many tests, so I'm not exactly sure the best
>(or perhaps even a good way) of testing some things.

No worries.  I've given you some feedback on the ticket (I did that
before I noticed this email).  Please feel free to ask if anything
I wrote is unclear.
>[snip]
>
>...my understanding is that it's relatively easy to kill a thread on a
>Unix platform, but not as easy with Windows (which, unfortunately I
>use almost exclusively).

It's about equally easy on either platform.  However, it's also
basically unreliable on both platforms.  What happens if the killed
thread held a mutex, for example?
>...maybe once *most* users are up to at least python version 2.6 (I'm
>not),
>I wonder if the threadpool in adbapi could be replaced with
>functionality
>> From the multiprocessing package.  I would think it would be easier to
>just kill and restart dead connections then.

Twisted actually has good support for running child processes already,
so we don't have to wait for Python 2.6, if this is a direction that's
interesting.

Perhaps something based on Ampoule would make sense?  It could be an API
compatible replacement for twisted.enterprise.adbapi, but use child 
processes
instead of threads, and add one new method for interrupting outstanding
work.

Jean-Paul


From grickert at coldstorage.com  Thu Aug  6 16:06:34 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Thu, 6 Aug 2009 16:06:34 -0400
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <20090806192444.19518.384017450.divmod.xquotient.47@localhost.localdomain>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com><4A7A383F.7010900@krondo.com><BB13E4C4D649234F84A01F6DF64BB87F0481F61D@ccs-ex01.coldstorage.com>
	<20090806192444.19518.384017450.divmod.xquotient.47@localhost.localdomain>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0481F670@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
>Sent: Thursday, August 06, 2009 3:25 PM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Adbapi issues
>
>On 06:57 pm, grickert at coldstorage.com wrote:
>>[snip]
>>>
>>>Supporting arraysize in some form is probably a good idea. Another
>>>ticket is in order.
>>
>>Ok, I filed ticket #3956
>>...along with a patch for adbapi.py, and test_adbapi.py.
>
>Great.  Thanks a lot! :)
>>My apologies in advance for the test patch :o)
>>I haven't written many tests, so I'm not exactly sure the best
>>(or perhaps even a good way) of testing some things.
>
>No worries.  I've given you some feedback on the ticket (I did that
>before I noticed this email).  Please feel free to ask if anything
>I wrote is unclear.
>>[snip]

Wow, the feedback on the patch (attempt) had a much gentler tone than I
expected ;o)  Thanks.  I'll see what I can improve.

>>...my understanding is that it's relatively easy to kill a thread on a
>>Unix platform, but not as easy with Windows (which, unfortunately I
>>use almost exclusively).
>
>It's about equally easy on either platform.  However, it's also
>basically unreliable on both platforms.  What happens if the killed
>thread held a mutex, for example?
>>...maybe once *most* users are up to at least python version 2.6 (I'm
>>not),
>>I wonder if the threadpool in adbapi could be replaced with
>>functionality
>>> From the multiprocessing package.  I would think it would be easier
>to
>>just kill and restart dead connections then.
>
>Twisted actually has good support for running child processes already,
>so we don't have to wait for Python 2.6, if this is a direction that's
>interesting.
>
>Perhaps something based on Ampoule would make sense?  It could be an
API
>compatible replacement for twisted.enterprise.adbapi, but use child
>processes
>instead of threads, and add one new method for interrupting outstanding
>work.
>
>Jean-Paul

I've never looked at Ampoule, but I like the idea and wouldn't mind 
investigating the API compatible replacement idea (...not promising 
anything...).

Gerrat


From glyph at twistedmatrix.com  Thu Aug  6 16:53:45 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 6 Aug 2009 16:53:45 -0400
Subject: [Twisted-Python] Changing threadpool size in reactor
In-Reply-To: <1249582327.23367.5.camel@nuraku>
References: <1249582327.23367.5.camel@nuraku>
Message-ID: <d9047f780908061353h7d1c2166kc6646145aba2b9dc@mail.gmail.com>

On Thu, Aug 6, 2009 at 2:12 PM, Darren Govoni <darren at ontrenet.com> wrote:

> Hi,
>  I could see from the docs I read how to increase the allotted threads
> in the reactor.
>
> I use reactor.callInThread(....) and it seems to max out at 10. I read
> about ThreadPool class, but need to run mine in the reactor.
>

The reactor has a similar API:
http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.interfaces.IReactorThreads.html#suggestThreadPoolSize
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090806/09ddfaa0/attachment.htm 

From exarkun at twistedmatrix.com  Sat Aug  8 12:32:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 08 Aug 2009 16:32:13 -0000
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <1249487947.10070.1328437413@webmail.messagingengine.com>
References: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>
	<1248457435.32636.1326651287@webmail.messagingengine.com>
	<1249487947.10070.1328437413@webmail.messagingengine.com>
Message-ID: <20090808163213.7171.1638442843.divmod.xquotient.73@localhost.localdomain>

On 5 Aug, 03:59 pm, peter.westlake at pobox.com wrote:
>Background: I have a client program that calls callRemote, but the
>Deferred that callRemote returns is not fired. This is an intermittent
>error that only happens after some hours of traffic.
>
>By putting some logging into AMP, it's apparent that the server gets
>as far as sending the reply using BoxDispatcher._safeEmit. The
>original version of that ignores connection errors, but I overrode it
>with one that doesn't:
>
>[snip]
>
>On the client, BoxDispatcher._answerReceived logs all replies:
>
>[snip]
>
>Likewise _errorReceived.
>
>I always see both log.msgs or neither, so it isn't something going
>wrong in the callback.
>
>The client sends a request.
>The server sends a reply with the same tag, and logs a message.
>Until it goes wrong, the client receives the reply and logs it.
>When it goes wrong, the client does not see the reply.
>
>The protocol has the unfired Deferred in _outstandingRequests,
>with the missing tag as key.
>
>All this suggests that the problem is either in the low-level
>network code, or somewhere in the network between the client
>and server. But doesn't TCP/IP tell you if a packet doesn't
>get through?

It doesn't really /tell/ you.  But if there is some issue with
the network that prevents packet delivery for long enough, then
the connection breaks (giving you a connectionLost call in Twisted,
which should errback your Deferred).
>
>I tried tracing the packets using a python-pycapy script (attached),
>but it showed more packets disappearing than actually were.

It might be simpler to use something like wireshark, which already
knows how to do TCP stream re-assembly and such.

I know this isn't much of a suggestion, but it's the only thing that
really comes to mind.

Jean-Paul


From exarkun at twistedmatrix.com  Sat Aug  8 12:49:25 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 08 Aug 2009 16:49:25 -0000
Subject: [Twisted-Python] Tunneling using conch (with
	application.service)
In-Reply-To: <66dccc4d0908060847y21a42afdt2c1d831419d710a0@mail.gmail.com>
References: <66dccc4d0908060847y21a42afdt2c1d831419d710a0@mail.gmail.com>
Message-ID: <20090808164925.7171.98799130.divmod.xquotient.104@localhost.localdomain>

On 6 Aug, 03:47 pm, smhollingsworth at gmail.com wrote:
>I 19ve got an app written that runs as a service using
>twisted.application.service that I need to tunnel through SSH. Right 
>now, I
>use a script that makes use of Paramiko (and runs separate from my app) 
>to
>set up a tunnel. That more or less works, but I 19ve had some problems 
>with
>the tunnel just going away and would like to integrate the tunneling 
>into
>the app, using conch. I 19ve found an example of tunneling via conch, at
>http://twistedmatrix.com/pipermail/twisted- 
>python/2009-February/019196.html,
>that I think I can use as a base to add the code to my app.
>
>Right now my app is basically:
>
>class DataPuller(service.Service):
>    ...Code for my app...
>    ... The app pulls data from a database and I can only connect to the
>server via SSH...
>
>application = service.Application( 18Data_puller 19)
>dpService = DataPuller()
>dpService.setServiceParent(application)
>
>My main problems are that I 19m not sure whether or not the example 
>linked to
>above is a good one for tunneling with conch and, if it is, how do I 
>merge
>the example tunneling code with my app code. From the example, where 
>the
>code is:

The example you linked to sets up the traditional port forwarding 
behavior.
A local port is opened and connections to it are tunneled over the SSH
connection, where data is then delivered to some address accessible from
the server on the other end of the SSH connection.

This is fine and should work, and probably very closely mirrors what 
you're
doing with Paramiko, so if you're happy with that, you should go for it.

However, it's also possible for you to do this tunneling without opening
the extra local port.  Since your application and the SSH client code 
are
all in the same process, you don't need the TCP connection to a local 
port
to do this IPC to interact wiht the tunnel.  You can set up the tunnel 
part
of things, but instead of binding a local port to accept connections on,
you can just open a connection over the tunnel and write bytes into it 
with
API calls.

I *don't* have an example of doing things this way, and I don't even 
know
exactly what it involves. ;)  However, the example you linked to gives a
clue about where to start on this approach: when it binds the local 
port,
it uses the forwarding.SSHListenForwardingFactory factory, so I'd start
by looking at that class and see what it does.  The rest is just 
mimicking
its behavior without actually using reactor.listenTCP.
>class Connection(connection.SSHConnection):
>        .
>        .
>        .
>        def serviceStarted(self):
>
>Do I instantiate my DataPuller class there, in serviceStarted (and not
>subclass from service.Service)? If so, how do I wrap the tunneling code 
>so
>that I can make it a service? If not, do I need put the tunneling code
>inside my DataPuller class? What would that look like?

If you want things to happen when your program starts or when it is 
about
to stop, then using service.Service is still a good idea.  That's the 
easy
way to hook into startup and shutdown events.  However, you may not want
to do anything other than set up (or tear down) the SSH connection in 
your
service.Service subclass.  Creating your new non-Service DataPuller in 
the
Connection's serviceStarted (or maybe even a little later - after you
actually set up the connection over the tunnel over the connection) then
makes sense.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Aug  9 00:05:18 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 09 Aug 2009 04:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1249790718.91.798412028@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090809/b36fc349/attachment.htm 

From lvh at laurensvh.be  Sun Aug  9 19:30:21 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Mon, 10 Aug 2009 01:30:21 +0200
Subject: [Twisted-Python] twisted.positioning -- Interface,
	or class with method stubs?
Message-ID: <cedc0c090908091630j669877a4q3b2ad117a48f886e@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi :-)


As you probably know, the interfaces for t.p live in t.p.ipositioning.
I still haven't quite understood why they are going to be awesome, but
anyway -- I'm running into a problem where keeping them would (I
think) imply a bunch of duplicated code.

The thing is, t.p.nmea.NMEAAdapter needs to (at least, I think so)
implement all of the methods of t.p.ipositioning.IPositioningProvider,
because people will subclass t.p.nmea.NMEAAdapter and override the
corresponding (stub) methods. In order to get all of the stub methods
implemented (otherwise people using the class need to implement
*every* method, which is dumb, since a lot of people won't care about
things like GPS climb), I would basically be copying every line of the
body of the interface into the t.p.nmea.NMEAAdapter. This sounds like
a dumb idea.

Subclassing the interface sounds like *entirely* the wrong thing to
do, since the class is-not-an Interface.

Another alternative is using getattr-with-default-value in order to
call the methods, since then missing (non-implemented) methods will be
handled gracefully. I kinda like this one, mainly because it's very
little work ;-)

A third alternative would be to scrap the interface all together and
use a base class with method stubs (I'm deliberately not using the
word abstract there). This sounds like a bad idea because we'd be
losing the interface, but I'm not entirely sure why we want it in the
first place...



thanks for your time
Laurens
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkp/W9QACgkQT5v5zGkvKT7inwCg0UP9d0zoiFnq1J8LrC/T1yUr
gXQAoIDbcp2jWg2Q5qIXTCRPsSGMiYCr
=kwgP
-----END PGP SIGNATURE-----


From glyph at twistedmatrix.com  Sun Aug  9 20:17:49 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 9 Aug 2009 20:17:49 -0400
Subject: [Twisted-Python] twisted.positioning -- Interface,
	or class with 	method stubs?
In-Reply-To: <cedc0c090908091630j669877a4q3b2ad117a48f886e@mail.gmail.com>
References: <cedc0c090908091630j669877a4q3b2ad117a48f886e@mail.gmail.com>
Message-ID: <d9047f780908091717u5fcd5b91s3668a2e240fd163f@mail.gmail.com>

On Sun, Aug 9, 2009 at 7:30 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:


> As you probably know, the interfaces for t.p live in t.p.ipositioning.
> I still haven't quite understood why they are going to be awesome, but
> anyway -- I'm running into a problem where keeping them would (I
> think) imply a bunch of duplicated code.
>

Have you read this?

http://glyph.twistedmatrix.com/2009/02/explaining-why-interfaces-are-great.html


> The thing is, t.p.nmea.NMEAAdapter needs to (at least, I think so)
> implement all of the methods of t.p.ipositioning.IPositioningProvider,
> because people will subclass t.p.nmea.NMEAAdapter and override the
> corresponding (stub) methods.


I don't think this is the case.  NMEAAdapter implements INMEAReceiver.  It
should take an IPositioningProvider as an *argument* somewhere, not
implement that interface itself.

A user implementing a position-aware application should be encouraged as
strongly as possible to avoid any NMEA-specific junk in their application
until it comes time to connect the app logic (IPositioningProvider) to the
actual device spitting out NMEA data.  After all, they're not going to be
able to easily make use of cell-tower positioning information if their
application class is hard-coded to subclass NMEAAdapter.

In order to get all of the stub methods implemented (otherwise people using
> the class need to implement *every* method, which is dumb, since a lot of
> people won't care about things like GPS climb),


The general sentiment here is right, despite the terminology problem I
pointed out: somewhere, a user is going to implement an IPositioningProvider
and it's quite likely that they won't want to implement every method.  So
let's assume there's going to be a BasePositioningProvider which stubs out
many of these methods or unifies / simplifies them.

I would basically be copying every line of the body of the interface into
> the t.p.nmea.NMEAAdapter.
>

Not quite.  For one thing, your method declaration lines will have a 'self'
in BasePositioningProvider, and in IPositioningProvider they won't.  (I
notice that this is not currently the case.  You should probably fix that:
interface method definitions should never include 'self'.)

Also, your methods' docstrings won't need to be as complete as those on the
interface, since they can just say "implement L{IPositioningProvider.foo}
to...".

Finally, I hope *most* of the methods will actually have a body that has
some implementation; some default behavior that will be useful  For example,
remembering the last position / heading / speed / error so that
'positionReceived' can conveniently expect the last error received without
implementing that method itself.  One or two might be completely stubbed
out, but the interface can't contain any implementation.

This sounds like a dumb idea.
>

Let's assume the worst case: BasePositioningProvider has absolutely no
default behavior besides a no-op.  The level of duplication we're talking
about here is this:

    def positionReceived(self, latitude, longitude):
    def positioningErrorReceived(self, positioningError):
    def headingReceived(self, heading):
    def headingErrorReceived(self, headingError):
    def magneticHeadingReceived(self, magneticHeading):
    def altitudeReceived(self, altitude):
    def altitudeErrorReceived(self, altitudeError):
    def speedReceived(self, speed):
    def speedErrorReceived(self, speedError):
    def climbReceived(self, climb):
    def climbErrorReceived(self, climbError):

In other words, the duplicated code in question will be considerably shorter
than the body of the message you composed to fret about code duplication,
and *way* shorter than my response :-). This doesn't really seem excessive,
considering that there's no duplication of *functionality* (the interface
only specifies behavior, the base class implements it), only duplication of
text.

Subclassing the interface sounds like *entirely* the wrong thing to do,
> since the class is-not-an Interface.
>

You're definitely right here.  It isn't just conceptually wrong, it's also
completely broken.  Subclassing an Interface creates another Interface (i.e.
instance of InterfaceClass) not a class or type.  In other words, you can't
instantiate it, and you can't call methods on it if you define any.  IIRC,
more recent versions of zope.interface will actually emit warnings if you
try to put methods which have definitions on an interface.

Another alternative is using getattr-with-default-value in order to
> call the methods, since then missing (non-implemented) methods will be
> handled gracefully. I kinda like this one, mainly because it's very
> little work ;-)


It's more work than you think.  If you misspell a method name, then the code
which invokes it will fail in a totally straightforward way: it won't invoke
your method, and as a result it will probably blow up.  If you use
getattr-with-default, then it silently does nothing.


> A third alternative would be to scrap the interface all together and
> use a base class with method stubs (I'm deliberately not using the
> word abstract there). This sounds like a bad idea because we'd be
> losing the interface, but I'm not entirely sure why we want it in the
> first place...
>

I believe the real problem here is that you don't quite get the value of
interfaces.  Read that blog post that I linked to if you haven't already,
and if you have, let's talk about that instead.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090809/1f475ea0/attachment.htm 

From nharsha at gmail.com  Mon Aug 10 02:10:41 2009
From: nharsha at gmail.com (Harsha)
Date: Mon, 10 Aug 2009 11:40:41 +0530
Subject: [Twisted-Python] sending 'tail -f' command to a remote host using
	conch?
Message-ID: <560c16120908092310i14b46ec7j2cf7c7a11a9568d1@mail.gmail.com>

Hi All,

A day back I install Twisted and Conch on RHEL5. I am a novice user of
Twisted software.
I copied an example from dev-shed website (attached herewith). This example
script uses conch to talk to a ssh deamon.

This script was able to capture and return the output of simple commands
such as - ls, cat etc.
I mean, when I run the script to execute 'ls -al' on a remote machine it
does and returns the prompt.

Where as, when I run the script to execute '*tail -f /path/to/mylog.txt*' I
get the ouput of this command but the prompt never returns.
When I press ^C (Control-C) I get the following run-time error.

*Traceback (most recent call last):
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/internet/tcp.py",
line 520, in connectionLost
    protocol.connectionLost(reason)
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/conch/ssh/transport.py",
line 166, in connectionLost
    self.service.serviceStopped()
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/conch/ssh/connection.py",
line 59, in serviceStopped
    map(self.channelClosed, self.channels.values())
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/conch/ssh/connection.py",
line 580, in channelClosed
    log.callWithLogger(channel, channel.closed)
--- <exception caught here> ---
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/python/log.py",
line 84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/python/log.py",
line 69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
  File "shankha.py", line 56, in closed
    reactor.stop()
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/internet/base.py",
line 526, in stop
    raise error.ReactorNotRunning(
twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
running.*


*I know that 'tail -f' command is expecting "Control-C" or Break to return
the prompt on remote host.
But my attempt to send the ^C character is failing..

I am doing somethink like this:

python sshc.py <hostname> 'tail -f mylog.txt ; \x03'

What is the recommended method to adopt such cases?

*Cheers!!
Harsha Reddy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090810/0dcc2764/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sshc.py
Type: text/x-python
Size: 2626 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090810/0dcc2764/attachment.py 

From johnaherne at rocs.co.uk  Mon Aug 10 02:56:20 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Aug 2009 07:56:20 +0100
Subject: [Twisted-Python] Documentation
Message-ID: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>

Prompted by exarkun, I have put together some simple documentation for
beginners starting with Twisted.
The points are made up of things I wish I had known from the start as a
complete beginner.

It still needs lots of work. The layout needs to change, there are
duplications and the points need to be made more succinctly.

But before I spend more time on honing the document, I thought it would be a
good idea to get some feedback.

The information in the document may already exist and I have just overlooked
it.

People may feel it is not appropriate for the documentation in Twisted and
should go elsewhere.

Some of the information needs to be checked for accuracy and to avoid
misleading readers.

Anyway I would appreciate any feedback positive or negative.

John Aherne

Here ie the text:

Basic Information for anyone starting with Twisted

If you don't know mauch about TCP, then bear this in mind.

BASIC TCP

TCP is a stream of data.  Once the connection is open, it stays open until
closed.
It does not have a beginning or an end. It does not know about your
messages.
You cannot wait until it sends your message since it will not tell you the
message
has been sent. If you want to know if your message reached the other end,
you need
to have in place a protocol for each end to respond that it received the
data.
You will then need to implement a timeout for when there are problems
otherwise
you may wait a long time for a response. TCP will wait forever. But
intermediate
routers may time you out after 2 - 30 minutes if there is no traffic on the
port.

TCP is just a stream of data. You have to process the stream of data looking
for
a marker your application has placed that signifies the end of message to
your
end of the application program.

Twisted provide the linereceiver and sendline functions to help in the
common
case of using CR/LF as a terminator of messages, expecially for chat type
protocols and http.

The reactor and the select command will process the outgoing and incoming
buffers without blocking.

The reactor uses the select command. Each time the reactor cycles around, it
will
use select to check the read and write buffers to see if any buffer is ready
to
read or write. It will process those that are ready. Ignoring any not yet
ready.

Anyone familiar with networking and select will probably already understand
this.
Anyone not familiar will not realise it and needs to become familiar with
how
select works.

If you want to know how Twisted processes network traffic, you should read
up
on the select command.


TWISTED - DIRECT SEND DATA CALLS

For simple network activity you do not need to use deferreds. They are not
necessary. And you can get a lot done without deferreds just by using the
transport.write or sendline functions. This is shown in the simple Chat
Server
example following.

Provided you are dealing in small amounts of data you will not block the
reactor.
If you are sending megabytes of data in a file, that is a different
matter.

Using sendline directly is faster than using a deferred.

John Goerzen in his Apress book Python Network Fundamentals has a very
simple
chat server example.


WHAT IS BLOCKING CODE

Blocking code is code that will block or may potentially block the continued
execution of the main reactor thread. Think for the most part of long
running
processes or operations that may be long running, doing file or network i/o,
calculating cpu intensive work, operations that may timeout like doing a
remote
call to another process or host machine, database operations are usually a
culprit, that may be flooded with work or crashed, the examples go on but
are
mainly about i/o and cpu intensive operations.

When these things happen on the reactor / main thread they block the server
from
doing anything else, it can't accept new connections, it can't do anything
else
until this blocking activity has completed and returned control to the
reactor
thread.

WHAT ARE DEFERREDS

By and large they seem very similar to callbacks. They aren't, but seem to
perform the same sort of function. Please refer to other documentation on
defers
for more detailed explanation.

As everyone hears interminably on the twisted list, deferreds do not make
blocking code non-blocking. We all try it - but you shouldn't.

If you have blocking code, then first think about putting it into
deferToThread
which will run the code in its own thread. It's not the only thing you can
do
but it is a good start.

Return a deferred when setting up this threaded function and add appropriate
callbacks and errbacks. This will run the blocking code in its own thread.
You should not call transport.write or sendline functions directly from the
thread since this is not thread-safe.

In the thread you must call the callback or errback to return processing to
the
reactor thread and then send any data from the reactor thread.

You can handle this without deferToThread by breaking the blocking code up
into
smaller pieces. Sometimes you need to transfer a large file to a socket,
instead of trying to send it all at once send 10KB at a time and yield back
to
the reactor and reschedule the next 10KB until finished. This will work, it
might
not be the fastest way and still may block for an unacceptable amount of
time
on just 10KB, depending on how heavily taxed the i/o system is at the
moment.

Usually deferToThread is just easier to implement.

DATABASE PROCESSING TENDS TO BE BLOCKING

The adbapi module seems to be a good example of using deferreds and threads.
The
adbapi module returns a deferred it has created, you add your callbacks to
it.
The thread then calls your callback when ready. It does seem like the
examplar
for doing deferreds.

The db stuff will normally block so put it in a thread and use deferreds to
wait
the result or failure.

THREADS

twisted is meant to avoid the problems of using threads for network
processing.
So why are we using threads. It's a way of moving potentially blocking code
out
of the way so it avoids hanging the reactor.

THREADS WON'T NECESSARILY PREVENT BLOCKING

A point about the db calls is that they can be very intensive. If you need
to
run some db function every 30 secs or 60 secs and the db takes 50% or more
of the
time to generate the results, you won't have much time to service any
incoming
requests that want to get results. The remote connections will be failing
bigtime.

So then I suppose you should break the code into 2 programs. One that does
the
db stuff, the other to handle the remote connections. The db code when it
has
a result will then connect to the other program and pass across its
results.
There may be better ways of doing this of course depending on circumstances.

WHEN TO USE DEFERREDS

If you have a cpu intensive process, then in all probability it will block
the
reactor since it will take 100% cpu time while running - whether in the main
thread
or in a separate thread. These are not good for running in twisted.

If you have I/O activity, such as reading lines of text from a disk file,
this seems a good candidate for deferreds.

This is what the dbapi module does. So it seems like a good example to
follow.

As a general rule, it is simplest to use deferreds with threads. This is not
always true so circumstances may indicate a better way of running a
deferred.

You still need to make sure that the bulk of the time is available for
handling
connections. Otherwise you will start to have failing connections

Using sendline directly is faster than putting a deferred in between.

BEWARE WHEN USING DEFERREDS IN THREADS

Since deferToThread runs the function you pass to it in a non-reactor
thread, you may not use any non-thread-safe Twisted APIs in the function
you
pass to it.

Beware of using shared data when running in the thread such as lists and
dictionaries.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090810/cdf21a5b/attachment-0001.htm 

From lvh at laurensvh.be  Mon Aug 10 07:46:32 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Mon, 10 Aug 2009 13:46:32 +0200
Subject: [Twisted-Python] twisted.positioning -- Interface,
	or class with 	method stubs?
In-Reply-To: <d9047f780908091717u5fcd5b91s3668a2e240fd163f@mail.gmail.com>
References: <cedc0c090908091630j669877a4q3b2ad117a48f886e@mail.gmail.com>
	<d9047f780908091717u5fcd5b91s3668a2e240fd163f@mail.gmail.com>
Message-ID: <cedc0c090908100446x4d39446fv434e45f99d4362aa@mail.gmail.com>

> Have you read this?
>
> http://glyph.twistedmatrix.com/2009/02/explaining-why-interfaces-are-great.html

Yep, I have (and just read it again).  I think I get it, sort of, kind
of, but I don't think I'll really understand it until it all comes
together.

>> The thing is, t.p.nmea.NMEAAdapter needs to (at least, I think so)
>> implement all of the methods of t.p.ipositioning.IPositioningProvider,
>> because people will subclass t.p.nmea.NMEAAdapter and override the
>> corresponding (stub) methods.
>
> I don't think this is the case.? NMEAAdapter implements INMEAReceiver.? It
> should take an IPositioningProvider as an argument somewhere, not implement
> that interface itself.

Ah, that makes much more sense, indeed. I'm guessing that people
should be allowed to connect multiple such providers, instead of just
one? Otherwise I could always implement one that takes multiple such
providers as *its* argument later of course.

> A user implementing a position-aware application should be encouraged as
> strongly as possible to avoid any NMEA-specific junk in their application
> until it comes time to connect the app logic (IPositioningProvider) to the
> actual device spitting out NMEA data.? After all, they're not going to be
> able to easily make use of cell-tower positioning information if their
> application class is hard-coded to subclass NMEAAdapter.

That makes even more sense.

>> In order to get all of the stub methods implemented (otherwise people
>> using the class need to implement *every* method, which is dumb, since a lot
>> of people won't care about things like GPS climb),
>
> The general sentiment here is right, despite the terminology problem I
> pointed out: somewhere, a user is going to implement an IPositioningProvider
> and it's quite likely that they won't want to implement every method.? So
> let's assume there's going to be a BasePositioningProvider which stubs out
> many of these methods or unifies / simplifies them.
>
>> I would basically be copying every line of the body of the interface into
>> the t.p.nmea.NMEAAdapter.
>
> Not quite.? For one thing, your method declaration lines will have a 'self'
> in BasePositioningProvider, and in IPositioningProvider they won't.? (I
> notice that this is not currently the case.? You should probably fix that:
> interface method definitions should never include 'self'.)

Fixed in trunk, thanks.

> Also, your methods' docstrings won't need to be as complete as those on the
> interface, since they can just say "implement L{IPositioningProvider.foo}
> to...".

> Finally, I hope most of the methods will actually have a body that has some
> implementation; some default behavior that will be useful? For example,
> remembering the last position / heading / speed / error so that
> 'positionReceived' can conveniently expect the last error received without
> implementing that method itself.? One or two might be completely stubbed
> out, but the interface can't contain any implementation.

The adapter already keeps state. I think this is necessary, because of
the way NMEA fragments information in sentences. I'm not sure how that
implementation would work though -- wouldn't people that care about
position end up overriding that method, hence making the non-stub
useless?

>> This sounds like a dumb idea.
>
>
> Let's assume the worst case: BasePositioningProvider has absolutely no
> default behavior besides a no-op.? The level of duplication we're talking
> about here is this:
>
> ??? def positionReceived(self, latitude, longitude):
> ??? def positioningErrorReceived(self, positioningError):
> ??? def headingReceived(self, heading):
> ??? def headingErrorReceived(self, headingError):
> ??? def magneticHeadingReceived(self, magneticHeading):
> ??? def altitudeReceived(self, altitude):
> ??? def altitudeErrorReceived(self, altitudeError):
> ??? def speedReceived(self, speed):
> ??? def speedErrorReceived(self, speedError):
> ??? def climbReceived(self, climb):
> ??? def climbErrorReceived(self, climbError):
>
> In other words, the duplicated code in question will be considerably shorter
> than the body of the message you composed to fret about code duplication,
> and way shorter than my response :-). This doesn't really seem excessive,
> considering that there's no duplication of functionality (the interface only
> specifies behavior, the base class implements it), only duplication of text.

Okay, I'll implement that class, expect it in trunk soon :-)

thanks for your response
Laurens


From exarkun at twistedmatrix.com  Mon Aug 10 09:29:25 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 10 Aug 2009 13:29:25 -0000
Subject: [Twisted-Python] sending 'tail -f' command to a remote host
	using	conch?
In-Reply-To: <560c16120908092310i14b46ec7j2cf7c7a11a9568d1@mail.gmail.com>
References: <560c16120908092310i14b46ec7j2cf7c7a11a9568d1@mail.gmail.com>
Message-ID: <20090810132925.7136.2016719798.divmod.xquotient.8@localhost.localdomain>

On 06:10 am, nharsha at gmail.com wrote:
>Hi All,
>
>A day back I install Twisted and Conch on RHEL5. I am a novice user of
>Twisted software.
>I copied an example from dev-shed website (attached herewith). This 
>example
>script uses conch to talk to a ssh deamon.
>
>This script was able to capture and return the output of simple 
>commands
>such as - ls, cat etc.
>I mean, when I run the script to execute 'ls -al' on a remote machine 
>it
>does and returns the prompt.
>
>Where as, when I run the script to execute '*tail -f 
>/path/to/mylog.txt*' I
>get the ouput of this command but the prompt never returns.
>When I press ^C (Control-C) I get the following run-time error.
>[snip]
>  File "shankha.py", line 56, in closed
>    reactor.stop()
>  File
>"/usr/lib/python2.4/site- 
>packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/internet/base.py",
>line 526, in stop
>    raise error.ReactorNotRunning(
>twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
>running.*

This happens because your program tries to stop the reactor twice. 
First, it tries to stop it when you hit ^C - the default handing of ^C 
is to stop the reactor.  Then, your SSH connection is closed (because 
all connections are closed when the reactor is stopped).  Your code 
handles this by calling reactor.stop() again.
>
>
>*I know that 'tail -f' command is expecting "Control-C" or Break to 
>return
>the prompt on remote host.
>But my attempt to send the ^C character is failing..
>
>I am doing somethink like this:
>
>python sshc.py <hostname> 'tail -f mylog.txt ; \x03'
>
>What is the recommended method to adopt such cases?

You need to set up some glue.  Right now, ^C is not being sent to the 
remote process at all.  It's only being sent to your local sshc.py 
process.  You may want to install your own SIGINT handler, or you may 
want to add a before shutdown trigger (or use a service's stopService 
method) to send ^C to the remote process.  As to what the Conch API is 
for sending a signal to a process, I'm not sure.

Jean-Paul


From peter.westlake at pobox.com  Mon Aug 10 18:25:05 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 10 Aug 2009 23:25:05 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <20090808163213.7171.1638442843.divmod.xquotient.73@localhost.localdomain>
References: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com><1248457435.32636.1326651287@webmail.messagingengine.com><1249487947.10070.1328437413@webmail.messagingengine.com>
	<20090808163213.7171.1638442843.divmod.xquotient.73@localhost.localdomain>
Message-ID: <1249943105.24323.1329213329@webmail.messagingengine.com>


On Sat, 08 Aug 2009 16:32 +0000, exarkun at twistedmatrix.com wrote:
> On 5 Aug, 03:59 pm, peter.westlake at pobox.com wrote:
> >Background: I have a client program that calls callRemote, but the
> >Deferred that callRemote returns is not fired. This is an intermittent
> >error that only happens after some hours of traffic.
...
> >The client sends a request.
> >The server sends a reply with the same tag, and logs a message.
> >Until it goes wrong, the client receives the reply and logs it.
> >When it goes wrong, the client does not see the reply.
> >
> >The protocol has the unfired Deferred in _outstandingRequests,
> >with the missing tag as key.
> >
> >All this suggests that the problem is either in the low-level
> >network code, or somewhere in the network between the client
> >and server. But doesn't TCP/IP tell you if a packet doesn't
> >get through?
> 
> It doesn't really /tell/ you.  But if there is some issue with
> the network that prevents packet delivery for long enough, then
> the connection breaks (giving you a connectionLost call in Twisted,
> which should errback your Deferred).
> >
> >I tried tracing the packets using a python-pycapy script (attached),
> >but it showed more packets disappearing than actually were.
> 
> It might be simpler to use something like wireshark, which already
> knows how to do TCP stream re-assembly and such.
> 
> I know this isn't much of a suggestion, but it's the only thing that
> really comes to mind.

No, it's a good suggestion - the only problem is that it makes the
problem happen far less often! What I've done is to capture the first
few bytes of each packet, enough to show the whole of the AMP reply
packets (which are just {'_answer':tag, 'status':True}) without any
need for full-scale analysis and reassembly.

I'm pleased to say that after many hours of watching tcpdump,
the bug eventually happened again just minutes before I left
for a long weekend. Sure enough, TCP/IP delivers the packet
successfully. Tomorrow's first task is going to be putting
tracing into the low-level code where the reactor is meant
to receive the packet and call the AMP _outstandingRequests
entry for it.

It would have been almost impossible to get even this far
without the Manhole feature. I've been using it all along
to inspect the workings of the client code, and it was a big
help on the server side too. The server handles a lot of
connections, and I was able to set a debug flag in the protocol
object for the connection I was tracing. There would have been
very much more log data otherwise. It makes a big difference
being able to see values of variables without having to add
new log statements and spend another working day waiting for
the bug. Whoever invented it - thank you!

Peter.


From gabriel.rossetti at arimaz.com  Tue Aug 11 11:50:30 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 11 Aug 2009 17:50:30 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX but not
	on linux
Message-ID: <4A819346.8090800@arimaz.com>

Hello everyone,

I wrote a twisted app using the XMPP code that works fin on linux (and 
windows), but on Mac I get a twisted.names.error.DNSNameError, I 
searched google but found nothing on this, is there a known bug with 
Twisted on Mac?

I have Mac OS X 10.5.8, and the latest version of twisted from the website.

Thank you,
Gabriel


From exarkun at twistedmatrix.com  Tue Aug 11 12:17:10 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 11 Aug 2009 16:17:10 -0000
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX
	but	not on linux
In-Reply-To: <4A819346.8090800@arimaz.com>
References: <4A819346.8090800@arimaz.com>
Message-ID: <20090811161710.8427.2036177418.divmod.xquotient.7@localhost.localdomain>

On 03:50 pm, gabriel.rossetti at arimaz.com wrote:
>Hello everyone,
>
>I wrote a twisted app using the XMPP code that works fin on linux (and
>windows), but on Mac I get a twisted.names.error.DNSNameError, I
>searched google but found nothing on this, is there a known bug with
>Twisted on Mac?
>
>I have Mac OS X 10.5.8, and the latest version of twisted from the 
>website.

DNS is good at having behavior sensitive to the environment you are 
using it in.  I'm not sure if there are any known bugs which would 
explain the problem you're encountering, mostly because I don't really 
know what problem you're encountering. ;)  "twisted app using XMPP code" 
and "get a DNSNameError" don't say a whole lot.  What API is failing? 
What other details can you provide?  It may be a bug in Twisted, or it 
may be a configuration issue relating to your Mac host.

Jean-Paul


From gabriel.rossetti at arimaz.com  Tue Aug 11 12:30:17 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 11 Aug 2009 18:30:17 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX but
 not	on linux
In-Reply-To: <4A819346.8090800@arimaz.com>
References: <4A819346.8090800@arimaz.com>
Message-ID: <4A819C99.8030100@arimaz.com>

Gabriel Rossetti wrote:
> Hello everyone,
>
> I wrote a twisted app using the XMPP code that works fin on linux (and 
> windows), but on Mac I get a twisted.names.error.DNSNameError, I 
> searched google but found nothing on this, is there a known bug with 
> Twisted on Mac?
>
> I have Mac OS X 10.5.8, and the latest version of twisted from the website.
>
> Thank you,
> Gabriel
>   

Here is some example code (from Twisted), this works as-is on linux but 
not on Mac. I tried an internal and an external XMPP server. On Mac I 
get this :

python xmpp_client.py test at toto.com 123

2009/08/11 18:21 +0200 [-] Log opened.

2009/08/11 18:21 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [-] /etc/resolv.conf changed, reparsing

2009/08/11 18:21 +0200 [-] Resolver added ('83.219.127.194', 53) to 
server list

2009/08/11 18:21 +0200 [-] Resolver added ('83.219.127.226', 53) to 
server list

2009/08/11 18:21 +0200 [-] twisted.names.dns.DNSDatagramProtocol 
starting on 49226

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 2 seconds

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 7 seconds

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 14 
seconds

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 30 
seconds

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:22 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:22 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 83 
seconds

2009/08/11 18:22 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:23 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:23 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 241 
seconds

2009/08/11 18:23 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>


##############################################################

# -*- coding: utf-8 -*-
# Copyright (c) 2001-2006 Twisted Matrix Laboratories.
# See LICENSE for details.

import sys
from twisted.internet import reactor
from twisted.names.srvconnect import SRVConnector
from twisted.words.xish import domish
from twisted.words.protocols.jabber import xmlstream, client, jid
from twisted.python import log

log.startLogging(sys.stdout)


class XMPPClientConnector(SRVConnector):
    def __init__(self, reactor, domain, factory):
        SRVConnector.__init__(self, reactor, 'xmpp-client', domain, factory)
   
    def pickServer(self):
        host, port = SRVConnector.pickServer(self)
        if not self.servers and not self.orderedServers:
            # no SRV record, fall back..
            port = 5222
        return host, port


class Client(object):
    def __init__(self, client_jid, secret):
        f = client.XMPPClientFactory(client_jid, secret)
        f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, self.connected)
        f.addBootstrap(xmlstream.STREAM_END_EVENT, self.disconnected)
        f.addBootstrap(xmlstream.STREAM_AUTHD_EVENT, self.authenticated)
        f.addBootstrap(xmlstream.INIT_FAILED_EVENT, self.init_failed)
        f.addBootstrap(xmlstream.STREAM_ERROR_EVENT, self.error)
        connector = XMPPClientConnector(reactor, "10.204.232.117", f)
        connector.connect()

    def rawDataIn(self, buf):
        print "RECV: %s" % unicode(buf, 'utf-8')

    def rawDataOut(self, buf):
        print "SEND: %s" % unicode(buf, 'utf-8')

    def connected(self, xs):
        print 'Connected.'
        self.xmlstream = xs
        # Log all traffic
        xs.rawDataInFn = self.rawDataIn
        xs.rawDataOutFn = self.rawDataOut
       
    def disconnected(self, xs):
        print 'Disconnected.'
        reactor.stop()

    def authenticated(self, xs):
        print "Authenticated."
        presence = domish.Element((None, 'presence'))
        xs.send(presence)

    def init_failed(self, failure):
        print "Initialization failed."
        print failure
        self.xmlstream.sendFooter()
       
    def error(self, failure):
        print "error"
        print failure
        self.xmlstream.sendFooter()


client_jid = jid.JID(sys.argv[1])
secret = sys.argv[2]
c = Client(client_jid, secret)

reactor.run()


From gabriel.rossetti at arimaz.com  Tue Aug 11 12:53:21 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 11 Aug 2009 18:53:21 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX	but
 not on linux
In-Reply-To: <20090811161710.8427.2036177418.divmod.xquotient.7@localhost.localdomain>
References: <4A819346.8090800@arimaz.com>
	<20090811161710.8427.2036177418.divmod.xquotient.7@localhost.localdomain>
Message-ID: <4A81A201.2080902@arimaz.com>

exarkun at twistedmatrix.com wrote:
> On 03:50 pm, gabriel.rossetti at arimaz.com wrote:
>   
>> Hello everyone,
>>
>> I wrote a twisted app using the XMPP code that works fin on linux (and
>> windows), but on Mac I get a twisted.names.error.DNSNameError, I
>> searched google but found nothing on this, is there a known bug with
>> Twisted on Mac?
>>
>> I have Mac OS X 10.5.8, and the latest version of twisted from the 
>> website.
>>     
>
> DNS is good at having behavior sensitive to the environment you are 
> using it in.  I'm not sure if there are any known bugs which would 
> explain the problem you're encountering, mostly because I don't really 
> know what problem you're encountering. ;)  "twisted app using XMPP code" 
> and "get a DNSNameError" don't say a whole lot.  What API is failing? 
> What other details can you provide?  It may be a bug in Twisted, or it 
> may be a configuration issue relating to your Mac host.
>
> Jean-Paul
>   
Hello jean-Paul, I just saw your msg, I have sent some example code. I 
think I nkow where this is comming from, Apple has a version of twisted 
installed in it's python frameworks, and it's version 2.5. I just 
remembered I had the same error when on version 2.5 on linux. The 
problem is I don't know how to cleanly resolve this problem, I would 
need python to use my cersion an not Apple's, but how to do this?

Gabriel


From exarkun at twistedmatrix.com  Tue Aug 11 12:55:00 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 11 Aug 2009 16:55:00 -0000
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX
	but	not on linux
In-Reply-To: <4A819C99.8030100@arimaz.com>
References: <4A819346.8090800@arimaz.com>
	<4A819C99.8030100@arimaz.com>
Message-ID: <20090811165500.8427.899749643.divmod.xquotient.9@localhost.localdomain>

On 04:30 pm, gabriel.rossetti at arimaz.com wrote:
>Gabriel Rossetti wrote:
>>Hello everyone,
>>
>>I wrote a twisted app using the XMPP code that works fin on linux (and
>>windows), but on Mac I get a twisted.names.error.DNSNameError, I
>>searched google but found nothing on this, is there a known bug with
>>Twisted on Mac?
>>
>>I have Mac OS X 10.5.8, and the latest version of twisted from the 
>>website.
>>
>>Thank you,
>>Gabriel
>
>Here is some example code (from Twisted), this works as-is on linux but
>not on Mac. I tried an internal and an external XMPP server. On Mac I
>get this :

Perhaps this is the problem:

  http://twistedmatrix.com/trac/ticket/3456

Jean-Paul


From glyph at twistedmatrix.com  Tue Aug 11 17:03:10 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 11 Aug 2009 17:03:10 -0400
Subject: [Twisted-Python] Documentation
In-Reply-To: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
References: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
Message-ID: <d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>

On Mon, Aug 10, 2009 at 2:56 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

> Prompted by exarkun, I have put together some simple documentation for
> beginners starting with Twisted.
>

Thanks for doing this.   All documentation help is useful :).


> But before I spend more time on honing the document, I thought it would be
> a good idea to get some feedback.
>

I've added a review of this document to my personal to-do list, but that
might take another couple of days.

In the meanwhile, I think the stuff you're trying to communicate is
valuable, but some of it seems pretty vague, and the ordering is a little
confusing.  For example,

For simple network activity you do not need to use deferreds
>

what constitutes "simple" network activity?  Does this means that there are
some types of network activity do require deferreds?  For that matter, is
"network activity" everything Twisted does, or just sending/receiving
bytes?  etc, etc.  I think it would be better to clearly and simply lay out
how to do "simple" network operations like sending and receiving data before
talking about Deferreds at all.  It may still be useful to say "you don't
need Deferreds" at some point, to make sure this is clear to the new user,
but that should come later, when you can illustrate more clearly *why* they
don't need Deferreds.

You also use the word "seem" a lot.  You should be more assertive, and just
say what things are or aren't, not what they seem like.  Don't worry about
being wrong.  If you write something wrong, we will correct you before it
goes into the docs :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090811/fc75f7cd/attachment.htm 

From johnaherne at rocs.co.uk  Wed Aug 12 06:41:18 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 12 Aug 2009 11:41:18 +0100
Subject: [Twisted-Python] Documentation
In-Reply-To: <d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>
References: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
	<d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>
Message-ID: <faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>

On Tue, Aug 11, 2009 at 10:03 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

> On Mon, Aug 10, 2009 at 2:56 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>
>> Prompted by exarkun, I have put together some simple documentation for
>> beginners starting with Twisted.
>>
>
> Thanks for doing this.   All documentation help is useful :).
>
>
>> But before I spend more time on honing the document, I thought it would be
>> a good idea to get some feedback.
>>
>
> I've added a review of this document to my personal to-do list, but that
> might take another couple of days.
>
> In the meanwhile, I think the stuff you're trying to communicate is
> valuable, but some of it seems pretty vague, and the ordering is a little
> confusing.  For example,
>
> For simple network activity you do not need to use deferreds
>>
>
> what constitutes "simple" network activity?  Does this means that there are
> some types of network activity do require deferreds?  For that matter, is
> "network activity" everything Twisted does, or just sending/receiving
> bytes?  etc, etc.  I think it would be better to clearly and simply lay out
> how to do "simple" network operations like sending and receiving data before
> talking about Deferreds at all.  It may still be useful to say "you don't
> need Deferreds" at some point, to make sure this is clear to the new user,
> but that should come later, when you can illustrate more clearly *why*they don't need Deferreds.
>
> You also use the word "seem" a lot.  You should be more assertive, and just
> say what things are or aren't, not what they seem like.  Don't worry about
> being wrong.  If you write something wrong, we will correct you before it
> goes into the docs :).
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> Thanks for taking a look.

I appreciate it it was a bit confused, but I wanted to get it out sooner
rather than later and just get the basic facts confirmed.

So I will start putting my thoughts into better shape and more coherently.
This always takes a couple of rewrites, so I hope you can add some more
thoughts before I get too far.

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090812/1542fab7/attachment-0001.htm 

From jarrod at vertigrated.com  Wed Aug 12 09:20:52 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 12 Aug 2009 09:20:52 -0400
Subject: [Twisted-Python] Documentation
In-Reply-To: <faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>
References: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
	<d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>
	<faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>
Message-ID: <fa3d0c740908120620h47045ad4pf9143cdecc4c5dfc@mail.gmail.com>

On Wed, Aug 12, 2009 at 6:41 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

>
>
> On Tue, Aug 11, 2009 at 10:03 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
> > wrote:
>
>> On Mon, Aug 10, 2009 at 2:56 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>>
>>> Prompted by exarkun, I have put together some simple documentation for
>>> beginners starting with Twisted.
>>>
>>
>> Thanks for doing this.   All documentation help is useful :).
>>
>>
>>> But before I spend more time on honing the document, I thought it would
>>> be a good idea to get some feedback.
>>>
>>
>> I've added a review of this document to my personal to-do list, but that
>> might take another couple of days.
>>
>> In the meanwhile, I think the stuff you're trying to communicate is
>> valuable, but some of it seems pretty vague, and the ordering is a little
>> confusing.  For example,
>>
>> For simple network activity you do not need to use deferreds
>>
>>
this should not say "simple" that is not quantiative, it should say
"non-blocking".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090812/862f566c/attachment.htm 

From petshmidt at googlemail.com  Wed Aug 12 11:28:30 2009
From: petshmidt at googlemail.com (Pet)
Date: Wed, 12 Aug 2009 17:28:30 +0200
Subject: [Twisted-Python] unicode for pyPgSQL
Message-ID: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>

Hello,

does pyPgSQL doesn't support unicode?

execute(query, params) #all items in params list are of  <type 'unicode'>

I'm getting
'ascii' codec can't encode character u'\xfc' in position 1: ordinal
not in range(128)

Do I need encode my params before sending a query and then decode all
results back to unicode?


Pet


From gabriel.rossetti at arimaz.com  Wed Aug 12 11:47:45 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 12 Aug 2009 17:47:45 +0200
Subject: [Twisted-Python] Twisted, wxPython & Mac OS X 10.5 freezes
Message-ID: <4A82E421.4080107@arimaz.com>

Hello everyone,

I have written an application using Twisted, WX and I wanted to test it 
under Mac. I have successfully used it on linux and windows before. When 
I run it, I often get the pinwheel of death and then the whole OS locks 
up, even SSH no longer accepts connections, I have to hard reboot it. 
Has anyone ever witnessed this? Does anyone know/have an idea of what 
could cause this? I was wondering if it is not the twisted + wx 
integration that could cause this.

Thank you,
Gabriel


From glyph at twistedmatrix.com  Wed Aug 12 11:51:15 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Aug 2009 11:51:15 -0400
Subject: [Twisted-Python] unicode for pyPgSQL
In-Reply-To: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
References: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
Message-ID: <d9047f780908120851y4e2439a0m1923b9a94ae464a1@mail.gmail.com>

On Wed, Aug 12, 2009 at 11:28 AM, Pet <petshmidt at googlemail.com> wrote:

> Hello,
>
> does pyPgSQL doesn't support unicode?
>

Sounds like a question for the pyPgSQL list, not the Twisted list :)

<https://lists.sourceforge.net/lists/listinfo/pypgsql-users>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090812/4b9330e3/attachment.htm 

From glyph at twistedmatrix.com  Wed Aug 12 12:02:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Aug 2009 12:02:54 -0400
Subject: [Twisted-Python] Twisted, wxPython & Mac OS X 10.5 freezes
In-Reply-To: <4A82E421.4080107@arimaz.com>
References: <4A82E421.4080107@arimaz.com>
Message-ID: <d9047f780908120902q527ad1a5g90bb72bbd235c223@mail.gmail.com>

On Wed, Aug 12, 2009 at 11:47 AM, Gabriel Rossetti <
gabriel.rossetti at arimaz.com> wrote:

> I have written an application using Twisted, WX and I wanted to test it
> under Mac. I have successfully used it on linux and windows before. When
> I run it, I often get the pinwheel of death and then the whole OS locks
> up, even SSH no longer accepts connections, I have to hard reboot it.
> Has anyone ever witnessed this? Does anyone know/have an idea of what
> could cause this? I was wondering if it is not the twisted + wx
> integration that could cause this.
>

Without more detail it's impossible to say, but my guess would be "no".

MacOS X is a preemptively multitasking, multi-user OS.  The worst that
Twisted and WX should be able to do, even maliciously, is to freeze the
display for a single user.  The worst that a bug should reasonably cause is
to lock up the UI for a single process.

You might have discovered a bug in MacOS X, and you should take it up with
Apple.  Alternately, your Mac hardware might be broken, and Twisted is
interacting with its problems.  If you'd like any further help here, though,
a complete example program would be useful to anyone trying to help you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090812/1463fa38/attachment.htm 

From exarkun at twistedmatrix.com  Wed Aug 12 12:51:15 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 12 Aug 2009 16:51:15 -0000
Subject: [Twisted-Python] unicode for pyPgSQL
In-Reply-To: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
References: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
Message-ID: <20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>

On 03:28 pm, petshmidt at googlemail.com wrote:
>Hello,
>
>does pyPgSQL doesn't support unicode?
>
>execute(query, params) #all items in params list are of  <type 
>'unicode'>
>
>I'm getting
>'ascii' codec can't encode character u'\xfc' in position 1: ordinal
>not in range(128)
>
>Do I need encode my params before sending a query and then decode all
>results back to unicode?

I don't know about pyPgSQL's unicode support.

I did recently learn that pyPgSQL doesn't support bind parameters, 
apparently resulting in almost any use of it insecure and vulnerable to 
SQL injection attacks.  You may want to investigate this further before 
deciding if it's worth figuring out how unicode works.

Jean-Paul


From glyph at twistedmatrix.com  Wed Aug 12 13:13:57 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Aug 2009 13:13:57 -0400
Subject: [Twisted-Python] unicode for pyPgSQL
In-Reply-To: <20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>
References: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
	<20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>
Message-ID: <d9047f780908121013j2e0868eel5c0e88c11891754@mail.gmail.com>

On Wed, Aug 12, 2009 at 12:51 PM, <exarkun at twistedmatrix.com> wrote:

> I did recently learn that pyPgSQL doesn't support bind parameters,
> apparently resulting in almost any use of it insecure and vulnerable to
> SQL injection attacks.  You may want to investigate this further before
> deciding if it's worth figuring out how unicode works.
>

I believe exarkun is referring to this article:

<
http://www.cerias.purdue.edu/site/blog/post/beware_sql_injections_due_to_missing_prepared_statement_support/
>

I had a private discussion with the author to clarify.  In order to avoid
spreading FUD, I'd like to draw your attention to this note he added to the
bottom of the post as a result of that discussion:

P.P.S.: To clarify, I haven't demonstrated an SQL injection vulnerability in
pyPGSQL. It's not about the performance penalty either. It's about escaping
done by the client library (the basic implementation of bind parameters
without using the database's support) being a second-rate security solution
to explicitly telling the database "here is the code. Now here's the data"
(prepared statements). It's about decreasing code complexity and reducing
chances for "misunderstandings" (and configuration, e.g., encoding,
discrepancies). It's about assurance and choosing safer technologies and
architectures.

So, to be clear, I don't believe there are any *demonstrated* injection
vulnerabilities (although if someone has a reference to a current one, that
would be helpful); it's just that pyPgSQL goes with an unnecessarily risky
and poorly-performing implementation strategy for quoting parameters.  This
dates back to Postgres itself having poor client-library support for bind
parameters in versions previous to 7; unfortunately this means that most of
the other database bindings for postgres use a similarly bad strategy (and
as Mr. Meunier mentions in his post, the ones which do support bind
parameters have other issues).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090812/54b67f82/attachment.htm 

From smhollingsworth at gmail.com  Wed Aug 12 13:33:06 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Wed, 12 Aug 2009 17:33:06 +0000
Subject: [Twisted-Python] Tunneling using conch (with
	application.service)
In-Reply-To: <20090808164925.7171.98799130.divmod.xquotient.104@localhost.localdomain>
References: <66dccc4d0908060847y21a42afdt2c1d831419d710a0@mail.gmail.com>
	<20090808164925.7171.98799130.divmod.xquotient.104@localhost.localdomain>
Message-ID: <66dccc4d0908121033p36ee49ceh469e4dadad138ad@mail.gmail.com>

Your advice helped considerably. Thank  you.

Sean M Hollingsworth

On Sat, Aug 8, 2009 at 4:49 PM, <exarkun at twistedmatrix.com> wrote:

> On 6 Aug, 03:47 pm, smhollingsworth at gmail.com wrote:
> >I 19ve got an app written that runs as a service using
> >twisted.application.service that I need to tunnel through SSH. Right
> >now, I
> >use a script that makes use of Paramiko (and runs separate from my app)
> >to
> >set up a tunnel. That more or less works, but I 19ve had some problems
> >with
> >the tunnel just going away and would like to integrate the tunneling
> >into
> >the app, using conch. I 19ve found an example of tunneling via conch, at
> >http://twistedmatrix.com/pipermail/twisted-
> >python/2009-February/019196.html,
> >that I think I can use as a base to add the code to my app.
> >
> >Right now my app is basically:
> >
> >class DataPuller(service.Service):
> >    ...Code for my app...
> >    ... The app pulls data from a database and I can only connect to the
> >server via SSH...
> >
> >application = service.Application( 18Data_puller 19)
> >dpService = DataPuller()
> >dpService.setServiceParent(application)
> >
> >My main problems are that I 19m not sure whether or not the example
> >linked to
> >above is a good one for tunneling with conch and, if it is, how do I
> >merge
> >the example tunneling code with my app code. From the example, where
> >the
> >code is:
>
> The example you linked to sets up the traditional port forwarding
> behavior.
> A local port is opened and connections to it are tunneled over the SSH
> connection, where data is then delivered to some address accessible from
> the server on the other end of the SSH connection.
>
> This is fine and should work, and probably very closely mirrors what
> you're
> doing with Paramiko, so if you're happy with that, you should go for it.
>
> However, it's also possible for you to do this tunneling without opening
> the extra local port.  Since your application and the SSH client code
> are
> all in the same process, you don't need the TCP connection to a local
> port
> to do this IPC to interact wiht the tunnel.  You can set up the tunnel
> part
> of things, but instead of binding a local port to accept connections on,
> you can just open a connection over the tunnel and write bytes into it
> with
> API calls.
>
> I *don't* have an example of doing things this way, and I don't even
> know
> exactly what it involves. ;)  However, the example you linked to gives a
> clue about where to start on this approach: when it binds the local
> port,
> it uses the forwarding.SSHListenForwardingFactory factory, so I'd start
> by looking at that class and see what it does.  The rest is just
> mimicking
> its behavior without actually using reactor.listenTCP.
> >class Connection(connection.SSHConnection):
> >        .
> >        .
> >        .
> >        def serviceStarted(self):
> >
> >Do I instantiate my DataPuller class there, in serviceStarted (and not
> >subclass from service.Service)? If so, how do I wrap the tunneling code
> >so
> >that I can make it a service? If not, do I need put the tunneling code
> >inside my DataPuller class? What would that look like?
>
> If you want things to happen when your program starts or when it is
> about
> to stop, then using service.Service is still a good idea.  That's the
> easy
> way to hook into startup and shutdown events.  However, you may not want
> to do anything other than set up (or tear down) the SSH connection in
> your
> service.Service subclass.  Creating your new non-Service DataPuller in
> the
> Connection's serviceStarted (or maybe even a little later - after you
> actually set up the connection over the tunnel over the connection) then
> makes sense.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090812/46d624dd/attachment.htm 

From fatblowfish at gmail.com  Thu Aug 13 01:18:06 2009
From: fatblowfish at gmail.com (Rebs Guarina)
Date: Thu, 13 Aug 2009 17:18:06 +1200
Subject: [Twisted-Python] newb help needed on syslog
Message-ID: <5240bd540908122218h21d289ebrfc789e053b3a5b91@mail.gmail.com>

Hello,

I'm currently looking at writing a remote syslog client (logs go to a
central log server running syslog-ng) using twisted. Do you guys have any
tips on this? If this somewhat appears to be a repost, please kindly
redirect me to the appropriate link.

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090813/6a5d9c82/attachment.htm 

From terry at fluidinfo.com  Thu Aug 13 02:40:17 2009
From: terry at fluidinfo.com (Terry Jones)
Date: Thu, 13 Aug 2009 08:40:17 +0200
Subject: [Twisted-Python] newb help needed on syslog
In-Reply-To: Your message at 17:18:06 on Thursday, 13 August 2009
References: <5240bd540908122218h21d289ebrfc789e053b3a5b91@mail.gmail.com>
Message-ID: <19075.46417.424647.384261@jon.es>

>>>>> "Rebs" == Rebs Guarina <fatblowfish at gmail.com> writes:
Rebs> I'm currently looking at writing a remote syslog client (logs go to a
Rebs> central log server running syslog-ng) using twisted. Do you guys have
Rebs> any tips on this? If this somewhat appears to be a repost, please
Rebs> kindly redirect me to the appropriate link.

Hi Rebs

This on only a suggestion of a direction, one which we (Fluidinfo) are
very likely to take too.

The ingredients are Twisted (of course) and Scribe
(http://developers.facebook.com/scribe/). You can tie these together using
the Twisted support we added to Thrift (Scribe uses Thrift). You can
optionally be routing log messages through AMQP using txAMQP
(https://launchpad.net/txamqp).

That's actually a pretty simple solution, given the existence of Twisted
support for both Thrift and AMQP (if you want it). But OTOH it's not
something you'll get set up without some effort and perhaps head scratching
(especially if you add AMQP to the mix - it's considerably simpler if you
just use Thrift with its built-in Twisted support). So if your load isn't
going to be fairly heavy you'd probably be better doing something simpler.

Terry


From petshmidt at googlemail.com  Thu Aug 13 03:02:35 2009
From: petshmidt at googlemail.com (Pet)
Date: Thu, 13 Aug 2009 09:02:35 +0200
Subject: [Twisted-Python] unicode for pyPgSQL
In-Reply-To: <20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>
References: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com> 
	<20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>
Message-ID: <b460e9630908130002j464e4899m780a866fdb986f63@mail.gmail.com>

On Wed, Aug 12, 2009 at 6:51 PM, <exarkun at twistedmatrix.com> wrote:
> On 03:28 pm, petshmidt at googlemail.com wrote:
>>Hello,
>>
>>does pyPgSQL doesn't support unicode?
>>
>>execute(query, params) #all items in params list are of ?<type
>>'unicode'>
>>
>>I'm getting
>>'ascii' codec can't encode character u'\xfc' in position 1: ordinal
>>not in range(128)
>>
>>Do I need encode my params before sending a query and then decode all
>>results back to unicode?
>
> I don't know about pyPgSQL's unicode support.
>
> I did recently learn that pyPgSQL doesn't support bind parameters,
> apparently resulting in almost any use of it insecure and vulnerable to
> SQL injection attacks. ?You may want to investigate this further before
> deciding if it's worth figuring out how unicode works.


That's interesting. May be I should try psycorg2.
By the way, pyPgSQL has no problem with unicode, the problem was elsewhere

>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From twisted at ralphm.ik.nu  Thu Aug 13 05:22:51 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Thu, 13 Aug 2009 11:22:51 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX but
 not	on linux
In-Reply-To: <4A819C99.8030100@arimaz.com>
References: <4A819346.8090800@arimaz.com>  <4A819C99.8030100@arimaz.com>
Message-ID: <1250155371.16747.13.camel@dwaal>

On Tue, 2009-08-11 at 18:30 +0200, Gabriel Rossetti wrote:
> [..]

Apparently you modified the original example here:

> [..]
>         connector = XMPPClientConnector(reactor, "10.204.232.117", f)
>         connector.connect()

This would never work properly. XMPPClientConnector is designed to do an
SRV record look up on the /domain/ provided as its second argument. You
pass an IP address here and that will just fail.

The original example passes client_jid.host. This extracts the domain
from the JID you want to connect with and then follows the procedure of
first trying to find xmpp-server SRV records for that domain, and if
that fails, try to connect to the host that the domain name resolves to,
using the default port (5222), as outlined in RFC 3920. Note that
XMPPClientConnector avoids the problems sketched in ticket #3456 that
was mentioned by Jean-Paul.

If you really want to connect to a specific host instead of following
the above procedure, you can do this instead of the code quoted above:

    reactor.connectTCP("10.204.232.117", 5222, f)

-- 
Groetjes,

ralphm
-- 
Groetjes,

ralphm



From p.mayers at imperial.ac.uk  Thu Aug 13 06:00:30 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 13 Aug 2009 11:00:30 +0100
Subject: [Twisted-Python] Python/twisted BGP code
Message-ID: <4A83E43E.1090707@imperial.ac.uk>

All,

People might be interested in:

https://launchpad.net/pybgp

It is a VERY SIMPLE implementation of BGP4 in python. It's sufficient to 
advertise IPv4 prefixes, which is of use e.g. for doing DNS anycast, and 
withdrawing the routes if the local nameservers stops answering queries.

There is a small amount of test coverage; I intend to write more.

There is *NO* code for building a RIB or modifying the kernel; that is, 
this is *not* a replacement for Zebra/Quagga.


From lvh at laurensvh.be  Thu Aug 13 06:26:28 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 13 Aug 2009 12:26:28 +0200
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
Message-ID: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi!


Short question up front: what exactly should be in the proposed
factory class? What does it take? What does it return?

Second question: what should NMEASentence attributes look like?
Properties? There are some proposed things in t.p.nmea in trunk.


Also, progress report:
    - NMEAAdapters now correctly fire callbacks on receivers. There
are tests that show this working for multiple sentences.
    - NMEA date support. You now get callbacks with date and time.

New things can be found in trunk at the usual places (launchpad).

Work in progress:
    - satellite information support (this is hairy because unlike
other sentences, the *same* fields are across multiple sentences :/)
    - error support (this is hairy because the subset of NMEA that
everyone supports essentially has no useful information about this)

Basically error support is a lot of work but boring, satellite support
is not so much work but hairy and disgusting NMEA internals handling.

I'm working on error support first because it's still early in the morning.


thanks for listening
Laurens

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkqD6hgACgkQT5v5zGkvKT4EWgCeM9GVVKSqMOw/FqXVsqn0D+pT
iDMAoMvCY5imsfDrH+6gKnj+ssGrAYlb
=GnpZ
-----END PGP SIGNATURE-----


From matt at bennett.name  Thu Aug 13 10:32:18 2009
From: matt at bennett.name (Matt Bennett)
Date: Thu, 13 Aug 2009 15:32:18 +0100
Subject: [Twisted-Python] Clarification on returning exceptions via
	Perspective Broker
Message-ID: <e554908b0908130732j2b6dd897sc959f8d4b01915e4@mail.gmail.com>

Hi all,

I'm using the Perspective Broker to run functions on various remote
servers, and trying to pass exceptions raised in the remote functions
back to the client.

My exceptions subclass pb.Error, which means tracebacks are suppressed
on the server and errbacks triggered on the client, exactly as I'd
hoped. What I'm confused about though, is why the
serialization/deserialization process reduces my nice structured
exception into a mere string. Isn't PB's raison d'?tre to allow you to
send fully formed Python classes over the wire?

I'm not 100% convinced that I've not misinterpreted something, but
assuming that pb.Error subclasses are indeed reduced string
representations, I'd appreciate some insight into why PB behaves this
way. I have experimented with returning a standard Exception subclass
to the client, but what it receives is "Unpersistable ... instance
deemed insecure", which I guess has something to do with the design
rationale, but I don't know enough to understand why.

Finally, is there a standard workaround to this that allows structured
data to be returned as or along with the exception, rather than having
to generate structured text as the string representation and then
rebuild the object at the other end?

Many thanks,
Matt.


From gabriel.rossetti at arimaz.com  Thu Aug 13 11:26:40 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 13 Aug 2009 17:26:40 +0200
Subject: [Twisted-Python] Twisted, PushProducer, Words & big msgs, any limit?
Message-ID: <4A8430B0.9080600@arimaz.com>

Hello everyone,

I have a sort of XMPP router I wrote using Twisted and there seems to be 
a size limit of some sort. I have been using it for over a year now 
without any problems, but today I had a larger than usual msg (175213 
bytes) try to go through and it never did. I haven't pinpointed the 
problem yet, but I wanted to make sure there isn't some known problem. 
Also, I get no exception or error msg during this. I use Twisted 8.1.0 
on Linux. I ran my code in debug mode and I did notice that in tcp.py in 
doRead(), when it runs over this line "self.socket.accept()" it gets the 
following exception : error: (11, 'Resource temporarily unavailable') 
and I wonder if this is the problem. If so, why would it do this and why 
would Twisted just silently ignore this? Thank you,
Gabriel

Thank you,
Gabriel


From terry at fluidinfo.com  Thu Aug 13 11:49:39 2009
From: terry at fluidinfo.com (Terry Jones)
Date: Thu, 13 Aug 2009 17:49:39 +0200
Subject: [Twisted-Python] Twisted, PushProducer, Words & big msgs,
	any limit?
In-Reply-To: Your message at 17:26:40 on Thursday, 13 August 2009
References: <4A8430B0.9080600@arimaz.com>
Message-ID: <19076.13843.779113.760363@jon.es>

>>>>> "Gabriel" == Gabriel Rossetti <gabriel.rossetti at arimaz.com> writes:
Gabriel> I have a sort of XMPP router I wrote using Twisted and there seems
Gabriel> to be a size limit of some sort. I have been using it for over a
Gabriel> year now without any problems, but today I had a larger than usual
Gabriel> msg (175213 bytes) try to go through and it never did.

What protocol are you using?  You may be running into one of the MAX_LENGTH
limits in twisted.protocol.basic

Terry


From gabriel.rossetti at arimaz.com  Thu Aug 13 13:24:09 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 13 Aug 2009 19:24:09 +0200
Subject: [Twisted-Python] Twisted, PushProducer, Words & big msgs,
 any limit?
In-Reply-To: <19076.13843.779113.760363@jon.es>
References: <4A8430B0.9080600@arimaz.com> <19076.13843.779113.760363@jon.es>
Message-ID: <4A844C39.2010005@arimaz.com>

Terry Jones wrote:
>>>>>> "Gabriel" == Gabriel Rossetti <gabriel.rossetti at arimaz.com> writes:
>>>>>>             
> Gabriel> I have a sort of XMPP router I wrote using Twisted and there seems
> Gabriel> to be a size limit of some sort. I have been using it for over a
> Gabriel> year now without any problems, but today I had a larger than usual
> Gabriel> msg (175213 bytes) try to go through and it never did.
>
> What protocol are you using?  You may be running into one of the MAX_LENGTH
> limits in twisted.protocol.basic
>
> Terry
>   
XMPP (twisted.words.xish.xmlstream)

Gabriel


From glyph at twistedmatrix.com  Thu Aug 13 15:35:52 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Aug 2009 15:35:52 -0400
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
Message-ID: <d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>

On Thu, Aug 13, 2009 at 6:26 AM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> Short question up front: what exactly should be in the proposed
> factory class? What does it take? What does it return?
>

Factory class proposed by whom and for what?

If it's a thing that creates IPositionReceivers, it should return an
IPositionReceiver and take some description of where the position data is
coming from.  The existing analogue is IProtocolFactory.buildProtocol, which
is takes an IP address.  I assume that the "address" object in GPS's case is
something that identifies the capabilities of the
position-information-providing widget and its type (GPS, skyhook, tower
triangulation, etc).

Second question: what should NMEASentence attributes look like?
> Properties? There are some proposed things in t.p.nmea in trunk.


By "trunk" I hope you mean "not trunk, the branch".  Maybe you meant HEAD?

Also, progress report:
>    - NMEAAdapters now correctly fire callbacks on receivers. There
> are tests that show this working for multiple sentences.
>    - NMEA date support. You now get callbacks with date and time.
>

Great!


> New things can be found in trunk at the usual places (launchpad).


... "in the branch" at the usual place ;-).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090813/99acaedb/attachment.htm 

From glyph at twistedmatrix.com  Thu Aug 13 15:50:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Aug 2009 15:50:42 -0400
Subject: [Twisted-Python] Clarification on returning exceptions via
	Perspective Broker
In-Reply-To: <e554908b0908130732j2b6dd897sc959f8d4b01915e4@mail.gmail.com>
References: <e554908b0908130732j2b6dd897sc959f8d4b01915e4@mail.gmail.com>
Message-ID: <d9047f780908131250r72aa37eemcbf96771ce679ef@mail.gmail.com>

On Thu, Aug 13, 2009 at 10:32 AM, Matt Bennett <matt at bennett.name> wrote:

> My exceptions subclass pb.Error, which means tracebacks are suppressed
> on the server and errbacks triggered on the client, exactly as I'd
> hoped. What I'm confused about though, is why the
> serialization/deserialization process reduces my nice structured
> exception into a mere string. Isn't PB's raison d'?tre to allow you to
> send fully formed Python classes over the wire?
>

It's been a while since I worked with this, but I believe the rationale goes
something like this:

the most common type of error in PB is a serialization or deserialization
error.  You sent too much, you didn't send enough, your jellier doesn't
quite match your unjellier, there's a version skew problem.

If exceptions contained structured data, there's a risk that that data will
*also* have a serialization error; or, worse yet, attempt to include the
problematic data which caused the error in the first place.  So it's
generally not a good idea to work around this, because you can easily cause
a mutually recursive loop where reporting the error causes another error
that needs to be reported.

That said, based on memory and a brief read-through of the code, PB does
support returning structured exceptions; you can't just return a normal
Exception subclass, you need to register it as serializable the same way you
would any other object, and it needs to subclass Jellyable (for example by
subclassing Copyable).

(I could be wrong, but I believe that is the intent.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090813/1597e6e5/attachment.htm 

From lvh at laurensvh.be  Thu Aug 13 19:01:12 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 14 Aug 2009 01:01:12 +0200
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
	<d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
Message-ID: <cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Heh, sorry, I'm so used to saying stuff's in trunk it's become second nature :-)

On Thu, Aug 13, 2009 at 9:35 PM, Glyph Lefkowitz wrote:
>> Short question up front: what exactly should be in the proposed
>> factory class? What does it take? What does it return?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkqEmvwACgkQT5v5zGkvKT7QUACeNtOQcZigbzZNK8B+8pz9kjt0
Vf4AoMDt1+xS3aQjuFUeX09K5Fd3U1jL
=5wtd
-----END PGP SIGNATURE-----

>
> Factory class proposed by whom and for what?

I think that was you, and I think it was for gluing the classes in
NMEA together.  From your mail on July 30:

> There should also be a factory which nicely hooks everything together and takes only a factory for your IPositioningProvider, so that users can quickly get started with a positioning provider.

I'm not sure what a factory that takes a factory is. I'd think it's
something that implements IPositioningProvider (eg a class) and then
returns the instance?

> If it's a thing that creates IPositionReceivers, it should return an
> IPositionReceiver and take some description of where the position data is
> coming from.? The existing analogue is IProtocolFactory.buildProtocol, which
> is takes an IP address.? I assume that the "address" object in GPS's case is
> something that identifies the capabilities of the
> position-information-providing widget and its type (GPS, skyhook, tower
> triangulation, etc).

Would this be the correct place to implement behavior like "listen on
a bunch of serial ports, until you find something that spews things
that look like NMEA at you", or should that be another level of
abstraction up?

Would there be multiple such factories for different kinds of
positioning? I don't know what cell ID will need to know to set up an
IPositioningProvider, but the NMEA factory and gpsd factory need
completely different kinds of information, for example.

Thanks for your reply
Laurens


From fatblowfish at gmail.com  Thu Aug 13 22:47:05 2009
From: fatblowfish at gmail.com (fatblowfish)
Date: Fri, 14 Aug 2009 14:47:05 +1200
Subject: [Twisted-Python] newb help needed on syslog
In-Reply-To: <19075.46417.424647.384261@jon.es>
References: <5240bd540908122218h21d289ebrfc789e053b3a5b91@mail.gmail.com>
	<19075.46417.424647.384261@jon.es>
Message-ID: <5240bd540908131947n51fcd941yf76c3d4787a01106@mail.gmail.com>

Thanks Terry! That's a good jumpstart you gave me...(",)

On Thu, Aug 13, 2009 at 6:40 PM, Terry Jones <terry at fluidinfo.com> wrote:

> >>>>> "Rebs" == Rebs Guarina <fatblowfish at gmail.com> writes:
> Rebs> I'm currently looking at writing a remote syslog client (logs go to a
> Rebs> central log server running syslog-ng) using twisted. Do you guys have
> Rebs> any tips on this? If this somewhat appears to be a repost, please
> Rebs> kindly redirect me to the appropriate link.
>
> Hi Rebs
>
> This on only a suggestion of a direction, one which we (Fluidinfo) are
> very likely to take too.
>
> The ingredients are Twisted (of course) and Scribe
> (http://developers.facebook.com/scribe/). You can tie these together using
> the Twisted support we added to Thrift (Scribe uses Thrift). You can
> optionally be routing log messages through AMQP using txAMQP
> (https://launchpad.net/txamqp).
>
> That's actually a pretty simple solution, given the existence of Twisted
> support for both Thrift and AMQP (if you want it). But OTOH it's not
> something you'll get set up without some effort and perhaps head scratching
> (especially if you add AMQP to the mix - it's considerably simpler if you
> just use Thrift with its built-in Twisted support). So if your load isn't
> going to be fairly heavy you'd probably be better doing something simpler.
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090814/fcbc7e22/attachment.htm 

From glyph at twistedmatrix.com  Fri Aug 14 12:09:51 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 14 Aug 2009 12:09:51 -0400
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
	<d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
	<cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>
Message-ID: <d9047f780908140909u588e602bp4d42c9bf498b309f@mail.gmail.com>

On Thu, Aug 13, 2009 at 7:01 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

>  On Thu, Aug 13, 2009 at 9:35 PM, Glyph Lefkowitz wrote:
> >> Short question up front: what exactly should be in the proposed
> >> factory class? What does it take? What does it return?
>
> >
> > Factory class proposed by whom and for what?
>
> I think that was you, and I think it was for gluing the classes in
> NMEA together.  From your mail on July 30:
>
> > There should also be a factory which nicely hooks everything together and
> takes only a factory for your IPositioningProvider, so that users can
> quickly get started with a positioning provider.
>
> I'm not sure what a factory that takes a factory is.


That was a typo.  There should be a *method* which nicely hooks everything
together and takes only a factory (etc).


> I'd think it's something that implements IPositioningProvider (eg a class)
> and then returns the instance?


That's basically right, but I think you might want a separate object.  There
are other notifications you might want to send to a factory that you
wouldn't want to send to an instance; for example, "no positioning
information is available, I will never send you any position data".

On the other hand, you could just have the class classProvides() the factory
interface and implements() the main interface for convenience, since a class
*is* really a factory in Python.

There should actually be several methods which hook things together.  One
would simply be to construct an NMEAReceiver and give it an
IPositionReceiver directly.  Another would be to call a function that scans
your serial ports, inspects your Windows registry (or whatever) and
discovers all GPS devices, normalizes them into a single stream of
positioning events, and calls
IPositionReceiverFactory.createPositionReceiver()

Would this be the correct place to implement behavior like "listen on
> a bunch of serial ports, until you find something that spews things
> that look like NMEA at you", or should that be another level of
> abstraction up?
>

There should be both levels of abstraction.  At one level you've got
SerialPort(NMEAReceiver(MyPositionReceiverFactory().createPositionReceiver(PositionSource(positioning.NMEA,
positioning.SerialPort("/dev/ttyS1")), "/dev/ttyS1") and at another you've
got startGettingPositioningDataSomehow(MyPositionReceiverFactory()).  The
latter should be implemented in terms of the former.

Would there be multiple such factories for different kinds of
> positioning? I don't know what cell ID will need to know to set up an
> IPositioningProvider, but the NMEA factory and gpsd factory need
> completely different kinds of information, for example.
>

Absolutely.  The key idea here is that you want there to be a complete
separation between application logic (which is your IPositioningReceiver or
IPositioningReceiverFactory) and your byte-level parsing code (which is your
NMEA or gpsd or Rockwell or cell triangulation or whatever).  Then, at the
top level

This is exactly analogous to the way that you can have an IProtocolFactory,
completely independent of any stream-communication API.  Later, you can do
listenSSL or listenTCP, or, with a very slight modification, connectSSL or
connectTCP.  listenSSL has a different signature from listenTCP, after all.
You need to be able to give it a certificate.  You could also have
connecting via SSH connections, via subprocesses, etc; all of these have
radically different requirements for construction and set-up, but once
you're going they should all be able to talk to an IProtocol.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090814/dedd1d54/attachment.htm 

From glyph at twistedmatrix.com  Fri Aug 14 16:07:51 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 14 Aug 2009 16:07:51 -0400
Subject: [Twisted-Python] Documentation
In-Reply-To: <faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>
References: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
	<d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>
	<faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>
Message-ID: <d9047f780908141307o28665ba7k7b01969822cb1b73@mail.gmail.com>

On Wed, Aug 12, 2009 at 6:41 AM, John Aherne <johnaherne at rocs.co.uk> wrote:


> I appreciate it it was a bit confused, but I wanted to get it out sooner
> rather than later and just get the basic facts confirmed.
>

Yes, it's always good to share these early drafts.


> So I will start putting my thoughts into better shape and more coherently.
> This always takes a couple of rewrites, so I hope you can add some more
> thoughts before I get too far.
>

Actually I think I don't have too much more to say about your original
draft.  If you have a new one, would you like to share it?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090814/86f5eb39/attachment.htm 

From thomas at apestaart.org  Sat Aug 15 08:36:13 2009
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Sat, 15 Aug 2009 14:36:13 +0200
Subject: [Twisted-Python] twisted.spread PB over a ProcessProtocol
Message-ID: <1250339773.17341.42.camel@ana.amantes>

Hi everyone,

for a project I'm working on I wanted to create a helper program which
can spawn an instance of itself as a separate process, slaving itself to
the spawner, and speaking PB to it.

The idea is that the master can spawn processes which will run code that
might segfault or otherwise behave badly (like consume too much memory).

I'm planning to use this as a job server for a django site, where the
spawned jobs then do all kind of media analysis (acoustical
fingerprinting, tag reading, ...)

The jobs themselves however I simply want to write in python, defining
them as methods on a slave-side pb object that the master process can
call on.

I prefer to go with spawnProcess and ProcessProtocol because that makes
cleanup easier - no sockets or anything to deal with.


I made a first implementation here:

https://thomas.apestaart.org/thomas/trac/browser/tests/twisted/daemon/daemon.py

Basically, I tried to respect Twisted's setup for protocols and
factories and such, providing a listenProcess and connectProcess method
much like the usual ones.

That would mean, I think, that this master/slave abstraction and the
ProcessProtocol could be used by any kind of server/client factory, not
just PB.
Currently, I have the processprotocol creates process pipes instead of
using stdin/stdout.  I'm guessing that would make it
windows-incompatible, correct ? I might have to fall back to using
stdin/stdout, which would make the debugging harder.

Questions:

a) anyone want to take a look at the code and comment ? Does it make
sense to do it like this ? Any obvious problems ?

b) as the comment at the bottom states, uncommenting that line gives me
a ProtocolError that I cannot figure out.  It is repeatable; however,
shuffling code around can make it go away (in fact, I had it in some
other location as well at some point).  I'm not sure what would be
triggering that, any ideas ? I am probably doing something dirty in some
part of the code.

c) on hitting ctrl-c, tracebacks are generated, due to this block of
code:
        # At least on OS X 10.4, exiting while stdout is non-blocking
can
        # result in data loss.  For some reason putting the file
descriptor
        # back into blocking mode seems to resolve this issue.
        fdesc.setBlocking(self.fd)

The exception is EBADF.

That code looks suspicious to me - shouldn't it be at least checking for
exceptions there ? the fd could already be closed IMO.

Comments welcome!

Thomas



-- 
I love the way you love
but I hate the way
I'm supposed to love you back
--
URGent, best radio on the net - 24/7 !
http://urgent.fm/




From lvh at laurensvh.be  Sat Aug 15 11:16:51 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sat, 15 Aug 2009 17:16:51 +0200
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <d9047f780908140909u588e602bp4d42c9bf498b309f@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
	<d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
	<cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>
	<d9047f780908140909u588e602bp4d42c9bf498b309f@mail.gmail.com>
Message-ID: <cedc0c090908150816s20985ce3g5486a6a15c21ee5d@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Not really a direct reply, but the following is big enough progress
that it warrants a minireport of its own. An excerpt from my test
suite running:

test_GSVSentences ...
, , , }>
, , , }>
, , }>


... meaning GSV sentences are now correctly parsed! :-) According to
esr (who knows what he's doing when it comes to NMEA parsers) this is
by far the hardest part: parsing GSV properly should take about as
long as everything else put together. It was a bit of a pain to glue
it together with everything else, but according to a few smart people
this probably means that the _rest_ of my parser is sane :-) (GPGSV
splits the same kind of field across multiple sentences, and whether
they override or not is dependent on other fields which may or may not
be in the same sentence. No other sentence does this.)

Also, there's support now for GPGLL (pure lat/lon) and GPHDT (true
heading made good) sentences, but those were so simple compared to the
disaster that is GPGSV it's not even funny.

Next up: GSA sentence support.

You can expect this behavior in the branch head on lp some time later
today, when I'm done committing test sentences from
known-pathologically-bad GPS devices, to see how badly the parser
chokes on them.

Bad news: I'm going to be extremely busy the next few days so very
little time to actively commit code.

Enjoy,
Laurens
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkqG0SQACgkQT5v5zGkvKT5dOgCg1jWqrgvpOyIwHCrlcH48DE/C
eqQAoI9XdaSfIzNgICoJbXur/0LzwbRv
=4Uvy
-----END PGP SIGNATURE-----


From lvh at laurensvh.be  Sat Aug 15 11:18:45 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sat, 15 Aug 2009 17:18:45 +0200
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <cedc0c090908150816s20985ce3g5486a6a15c21ee5d@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
	<d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
	<cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>
	<d9047f780908140909u588e602bp4d42c9bf498b309f@mail.gmail.com>
	<cedc0c090908150816s20985ce3g5486a6a15c21ee5d@mail.gmail.com>
Message-ID: <cedc0c090908150818jba39b01x25cdcfc7febc2bc9@mail.gmail.com>

For some arcane reason, GMail (or maybe FireGPG) decided to mangle the
stuff in between commas. *sigh*

http://paste.pocoo.org/show/134450/

Laurens


From kgeorge at tcpsoft.com  Sat Aug 15 12:49:19 2009
From: kgeorge at tcpsoft.com (Kyle George)
Date: Sat, 15 Aug 2009 12:49:19 -0400 (EDT)
Subject: [Twisted-Python] TCP startTLS() negotiation
Message-ID: <Pine.LNX.4.64.0908150216250.15844@patton.tcpsoft.net>

I've noticed some behavior when negotiating TLS using startTLS().  I'm 
starting TLS on both sides of the connection at the same time to validate 
peer certificates using a custom callback.  If I call startTLS() without 
any subsequent writes to the socket the negotiation never completes. 
However, if I write data immediately post startTLS() the negotiation (and 
the callback to the OpenSSL verify callback) is successful.  But I don't 
want to do this because I want to wait until verification to proceed with 
communicating on the channel.  So I traced through tcp.py and noticed that 
in Connection.startTLS() reads and writes are stopped while the 
negotiation is taking place.  However, only reading is reenabled 
afterwards.  I suppose this is why doing a write unblocks the connection. 
When I do something like this in my code I don't have to make a write:

self.transport.startTLS(SSLContextFactory(...))
self.transport.startWriting()

The context factory makes its own SSL.Context very similar to _sslverify, 
but with a callback I can hook for verification.

So the question is, why is reading reenabled but not writing?  When I 
apply the patch below it works.

This is on Python 2.6.2, Twisted 8.2.0, pyOpenSSL-0.9-py2.6, win32.

Index: twisted/internet/tcp.py
===================================================================
--- twisted/internet/tcp.py     (revision 27226)
+++ twisted/internet/tcp.py     (working copy)
@@ -401,6 +401,7 @@
              self._startTLS()
              self.socket = SSL.Connection(ctx.getContext(), self.socket)
              self.fileno = self.socket.fileno
+            self.startWriting()
              self.startReading()
              return True

-- 
Kyle George


From exarkun at twistedmatrix.com  Sun Aug 16 00:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Aug 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1250395512.22.1479084481@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090816/06542f1f/attachment.htm 

From alessandro.d at gmail.com  Sun Aug 16 06:43:42 2009
From: alessandro.d at gmail.com (Alessandro Decina)
Date: Sun, 16 Aug 2009 12:43:42 +0200
Subject: [Twisted-Python] twisted.spread PB over a ProcessProtocol
In-Reply-To: <1250339773.17341.42.camel@ana.amantes>
References: <1250339773.17341.42.camel@ana.amantes>
Message-ID: <37eb22810908160343nb86dafck8e5509314effc10e@mail.gmail.com>

On Sat, Aug 15, 2009 at 2:36 PM, Thomas Vander
Stichele<thomas at apestaart.org> wrote:
> Hi everyone,
>
> for a project I'm working on I wanted to create a helper program which
> can spawn an instance of itself as a separate process, slaving itself to
> the spawner, and speaking PB to it.
>
> The idea is that the master can spawn processes which will run code that
> might segfault or otherwise behave badly (like consume too much memory).

Why not use ampoule https://launchpad.net/ampoule ?
Also, you may want to take a look at moovida, it has a master/slave
abstraction to run gst pipelines in separate processes (which should
probably be adapted to use ampoule now).

Ciao
Alessandro


From esteve at fluidinfo.com  Sun Aug 16 13:29:25 2009
From: esteve at fluidinfo.com (Esteve Fernandez)
Date: Sun, 16 Aug 2009 19:29:25 +0200
Subject: [Twisted-Python] txAMQP 0.3 released, better late than never
Message-ID: <200908161929.26024.esteve@fluidinfo.com>

Hi all,

with great joy and a little sweat, we're happy to announce txAMQP 0.3 
(https://launchpad.net/txamqp), a Python library for communicating with AMQP 
peers and brokers using Twisted.

This marks an important milestone, as it's the first release made with the 
help of two new committers not directly involved with Fluidinfo 
(http://fluidinfo.com): Dan Di Spaltro from Cloudkick 
(https://www.cloudkick.com) and Thomas Herv? from Canonical 
(http://www.canonical.com)

On the technical side, this release includes important features such as
heartbeat frames (contributed by Anthony Lenton), support for setuptools
(contributed by Zooko Wilcox-O'Hearn), support for basic_return, and improved
support for Thrift - among many other features and fixes.

As a side note, patching Thrift (http://incubator.apache.org/thrift/) is no
longer needed, as support for Twisted is now integrated in the official Thrift
distribution.

BTW, if you're curious to see what we wrote txAMQP to support, watch the 
Fluidinfo home page for the alpha launch of FluidDB on Monday :-)


From chris at stemcel.co.uk  Mon Aug 17 05:28:47 2009
From: chris at stemcel.co.uk (Chris Adams)
Date: Mon, 17 Aug 2009 10:28:47 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
Message-ID: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>

Hi there,

I'm new to twisted, so please excuse the noobish question, but:

I'm using twisted-web on an openwrt computer, using busybox, and after
looking through the docs, I'm a little unclear about how to implement
something like apache's htpasswd style authentication.

Using apache, I'd do something like:

htpasswd -c passwrods admin topSecretPassword

What's the simplest way to add a simple check for a username and
password like this using twisted web?

Where possible, I'd like to keep all of this inside twisted rather
than rely on installing other binaries, that might not work within the
confined of a small openwrt install.

C

-- 
---
I'm currently only checking my email at 9am, midday and at 4pm.
If you need a response from me urgently, please call or text my
mobile, or contact me via Skype (chris.d.adams).
---
Chris Adams
Stemcel Studios
The Hub
5 Torrens Street
London
EC1V 1NQ

email: chris at stemcel.co.uk
web:  www.stemcel.co.uk
twitter:chris_d_adams
skype: chris.d.adams
mob: 07974 368 229
tel: 0207 558 8971


From colin.alston at thusa.co.za  Mon Aug 17 05:37:10 2009
From: colin.alston at thusa.co.za (Colin Alston)
Date: Mon, 17 Aug 2009 11:37:10 +0200
Subject: [Twisted-Python] Ldaptor patch for Interfaces
Message-ID: <78bfcf050908170237g2a1a4bdcy3627c8b5b833c3ff@mail.gmail.com>

TV! Please fix Ldaptor.

Index: interfaces.py
===================================================================
--- interfaces.py       (revision 1506)
+++ interfaces.py       (working copy)
@@ -1,6 +1,6 @@
-from twisted.python import components
+from zope.interface import Interface

-class ILDAPEntry(components.Interface):
+class ILDAPEntry(Interface):
     """

     Pythonic API for LDAP object access and modification.
@@ -126,7 +126,7 @@
         incorrect.
         """

-class IEditableLDAPEntry(components.Interface):
+class IEditableLDAPEntry(Interface):
     """Interface definition for editable LDAP entries."""

     def __setitem__(self, key, value):
@@ -206,7 +206,7 @@

         """

-class IConnectedLDAPEntry(components.Interface):
+class IConnectedLDAPEntry(Interface):
     """Interface definition for LDAP entries that are part of a bigger
whole."""

     def namingContext(self):
@@ -334,7 +334,7 @@

         """

-class ILDAPConfig(components.Interface):
+class ILDAPConfig(Interface):
     """Generic LDAP configuration retrieval."""

     def getBaseDN(self):
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090817/8ee9dc8f/attachment.htm 

From rlotun at gmail.com  Mon Aug 17 05:45:35 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 10:45:35 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
Message-ID: <95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>

Hi Chris,

> I'm using twisted-web on an openwrt computer, using busybox, and after
> looking through the docs, I'm a little unclear about how to implement
> something like apache's htpasswd style authentication.
>
> Using apache, I'd do something like:
>
> htpasswd -c passwrods admin topSecretPassword
>
> What's the simplest way to add a simple check for a username and
> password like this using twisted web?
>
> Where possible, I'd like to keep all of this inside twisted rather
> than rely on installing other binaries, that might not work within the
> confined of a small openwrt install.

The short answer is that you need to use twisted.cred. It's an
abstraction that allows you to implement authentication without
directly exposing the hashing method or password database details.
Take a look at this example:
http://twistedmatrix.com/projects/web/documentation/examples/webguard.py

It demonstrates an in memory database, which should generally be used
for testing/debugging only - but you might not care about that an be
happy to have an in memory database. If you want to use an .htaccess
apache style password db, you'll have to make a slight modification:

from twisted.web import guard, server
from twisted.cred.portal import Portal
from twisted.cred.checkers import FilePasswordDB

import crypt

def cmp_pass(uname, password, storedpass):
    return crypt.crypt(password, storedpass[:2])

checkers = [FilePasswordDB(path_to_htpasswd,
                                               hash=cmp_pass)]
 wrapper = guard.HTTPAuthSessionWrapper(
                    Portal(SimpleRealm(), checkers),
                    [guard.BasicCredentialFactory('yoursite.com')])
 return internet.TCPServer(8080, server.Site(resource=wrapper))

I'll probably contribute the Htaccess style checker to twisted at some
point, as I've found it useful in the past and others may too.

Cheers,
Reza



-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com


From colin.alston at thusa.co.za  Mon Aug 17 06:02:25 2009
From: colin.alston at thusa.co.za (Colin Alston)
Date: Mon, 17 Aug 2009 12:02:25 +0200
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
Message-ID: <78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>

On Mon, Aug 17, 2009 at 11:45 AM, Reza Lotun <rlotun at gmail.com> wrote:

> The short answer is that you need to use twisted.cred.


You don't need to do that at all, it just happens to be the best way.


>   wrapper = guard.HTTPAuthSessionWrapper(
>                    Portal(SimpleRealm(), checkers),
>                    [guard.BasicCredentialFactory('yoursite.com')])
>


Where is Portal and SimpleRealm in your example? Those are actually quite
large constructs which are crucial to guard doing anything useful at all.

Since there are numerous circumstances that people need Htauth, it is
implemented as follows

from twisted.web import http
# and other stuff...

class HTTPAuthPage(rend.Page):
    def renderHTTP(self, ctx):
        request = inevow.IRequest(ctx)
        username, password = request.getUser(), request.getPassword()

        if [My auth details check out]:
            return rend.Page.renderHTTP(self, ctx)

        else:
            request.setHeader('WWW-Authenticate', 'Basic realm="My realm
name"')
            request.setResponseCode(http.UNAUTHORIZED)
            return "Authentication required."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090817/6c8a77e7/attachment.htm 

From rlotun at gmail.com  Mon Aug 17 06:13:32 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 11:13:32 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
Message-ID: <95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>

Hi Colin,

> Where is Portal and SimpleRealm in your example? Those are actually quite
> large constructs which are crucial to guard doing anything useful at all.

Sorry, this snippet of code I wrote tracked the webguard.py example
that I linked to.

from twisted.cred.portal import IRealm, Portal

class SimpleRealm(object):
    """
    A realm which gives out L{GuardedResource} instances for authenticated
    users.
    """
    implements(IRealm)

    def requestAvatar(self, avatarId, mind, *interfaces):
        if resource.IResource in interfaces:
            return resource.IResource, GuardedResource(), lambda: None
        raise NotImplementedError()

Does that make sense now?

> Since there are numerous circumstances that people need Htauth, it is
> implemented as follows

Ok, of course you can do that if you want. But you still need to be
able to *verify* credentials.

Anyway, to each their own.

Reza



-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From chris at stemcel.co.uk  Mon Aug 17 08:42:49 2009
From: chris at stemcel.co.uk (Chris Adams)
Date: Mon, 17 Aug 2009 13:42:49 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
	<95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
Message-ID: <4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>

Wow, thanks fo the quick replies guys.

I've tried to combine this with the example earlier, with some
annotations as to what I think is going on, but I'm on somewhat shaky
ground here.

Do these annotations sum up roughly what is going on here?

My annotated example is also up on github - http://gist.github.com/169102


The original on twisted matrix
http://twistedmatrix.com/projects/web/documentation/examples/webguard.py




2009/8/17 Reza Lotun <rlotun at gmail.com>:
> Hi Colin,
>
>> Where is Portal and SimpleRealm in your example? Those are actually quite
>> large constructs which are crucial to guard doing anything useful at all.
>
> Sorry, this snippet of code I wrote tracked the webguard.py example
> that I linked to.
>
> from twisted.cred.portal import IRealm, Portal
>
> class SimpleRealm(object):
> ? ?"""
> ? ?A realm which gives out L{GuardedResource} instances for authenticated
> ? ?users.
> ? ?"""
> ? ?implements(IRealm)
>
> ? ?def requestAvatar(self, avatarId, mind, *interfaces):
> ? ? ? ?if resource.IResource in interfaces:
> ? ? ? ? ? ?return resource.IResource, GuardedResource(), lambda: None
> ? ? ? ?raise NotImplementedError()
>
> Does that make sense now?
>
>> Since there are numerous circumstances that people need Htauth, it is
>> implemented as follows
>
> Ok, of course you can do that if you want. But you still need to be
> able to *verify* credentials.
>
> Anyway, to each their own.
>
> Reza
>
>
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email: ?rlotun at gmail.com
> work: ? reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
---
I'm currently only checking my email at 9am, midday and at 4pm.
If you need a response from me urgently, please call or text my
mobile, or contact me via Skype (chris.d.adams).
---
Chris Adams
Stemcel Studios
The Hub
5 Torrens Street
London
EC1V 1NQ

email: chris at stemcel.co.uk
web:  www.stemcel.co.uk
twitter:chris_d_adams
skype: chris.d.adams
mob: 07974 368 229
tel: 0207 558 8971


From rlotun at gmail.com  Mon Aug 17 09:05:48 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 14:05:48 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
	<95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
	<4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>
Message-ID: <95bb10690908170605h370c3deen60cad99a08c9a65d@mail.gmail.com>

Hi Chris,

> My annotated example is also up on github - http://gist.github.com/169102
>
>
> The original on twisted matrix
> http://twistedmatrix.com/projects/web/documentation/examples/webguard.py

Generally it looks fine - but I should mention these random snippets
of code were given with the assumption that a .tac file is being used.
A .tac file is basically a "runner" script or driver for your twisted
program - it works in conjunction with the twistd command-line utility
and does fun stuff like automatic daemonization and reactor selection.

Anyway, the snippets I gave would integrate into the webguard.py
example like so (imports omitted for clarity):

class GuardedResource(resource.Resource):
    """
    A resource which is protected by guard and requires authentication in order
    to access.
    """
    def getChild(self, path, request):
        return self

    def render(self, request):
        return "Authorized!"


class SimpleRealm(object):
    """
    A realm which gives out L{GuardedResource} instances for authenticated
    users.
    """
    implements(IRealm)

    def requestAvatar(self, avatarId, mind, *interfaces):
        if resource.IResource in interfaces:
            return resource.IResource, GuardedResource(), lambda: None
        raise NotImplementedError()

def cmp_pass(uname, password, storedpass):
    return crypt.crypt(password, storedpass[:2])

def main():
    log.startLogging(sys.stdout)
    # add in the path to your .htpasswd in place of path_to_htpasswd
    checkers = [FilePasswordDB(path_to_htpasswd,
                       hash=cmp_pass)]
    wrapper = guard.HTTPAuthSessionWrapper(
                    Portal(SimpleRealm(), checkers),
                    [guard.BasicCredentialFactory('yoursite.com')])
    reactor.listenTCP(8080, server.Site(
                               resource = wrapper))
    reactor.run()

if __name__ == '__main__':
    main()


This should basically run (though I haven't tested this specific example).

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From chris at stemcel.co.uk  Mon Aug 17 09:55:46 2009
From: chris at stemcel.co.uk (Chris Adams)
Date: Mon, 17 Aug 2009 14:55:46 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <95bb10690908170605h370c3deen60cad99a08c9a65d@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
	<95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
	<4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>
	<95bb10690908170605h370c3deen60cad99a08c9a65d@mail.gmail.com>
Message-ID: <4120a220908170655r2aa9d3bdre918b422348540d3@mail.gmail.com>

Thanks Reza,

> Generally it looks fine - but I should mention these random snippets
> of code were given with the assumption that a .tac file is being used.
> A .tac file is basically a "runner" script or driver for your twisted
> program - it works in conjunction with the twistd command-line utility
> and does fun stuff like automatic daemonization and reactor selection.
>



Automatic daemonization and monitoring? This sounds like exactly what I'm after.

I've been calling twisted like so for a project: explicitly setting
the process id, logger and source file here. And relying on a separate
cron script to check if all is well:

twistd --pidfile=$PIDFILE --syslog --prefix=program_name --python
program_name.py

Would using a .tac file make some of these flags redundant?

All I could found about .tac files is here -
http://twistedmatrix.com/projects/core/documentation/howto/application.html

Are there any other resources where I can found out about the
advantages of using .tac files instead the way I've bee doing stuff?

-- 
---
I'm currently only checking my email at 9am, midday and at 4pm.
If you need a response from me urgently, please call or text my
mobile, or contact me via Skype (chris.d.adams).
---
Chris Adams
Stemcel Studios
The Hub
5 Torrens Street
London
EC1V 1NQ

email: chris at stemcel.co.uk
web:  www.stemcel.co.uk
twitter:chris_d_adams
skype: chris.d.adams
mob: 07974 368 229
tel: 0207 558 8971


From rlotun at gmail.com  Mon Aug 17 10:24:39 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 15:24:39 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <4120a220908170655r2aa9d3bdre918b422348540d3@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
	<95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
	<4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>
	<95bb10690908170605h370c3deen60cad99a08c9a65d@mail.gmail.com>
	<4120a220908170655r2aa9d3bdre918b422348540d3@mail.gmail.com>
Message-ID: <95bb10690908170724r2a87d6a0jf282578f7d743010@mail.gmail.com>

Hi Chris,

> Automatic daemonization and monitoring? This sounds like exactly what I'm after.
>
> I've been calling twisted like so for a project: explicitly setting
> the process id, logger and source file here. And relying on a separate
> cron script to check if all is well:
>
> twistd --pidfile=$PIDFILE --syslog --prefix=program_name --python
> program_name.py
>
> Would using a .tac file make some of these flags redundant?
>
> All I could found about .tac files is here -
> http://twistedmatrix.com/projects/core/documentation/howto/application.html
>
> Are there any other resources where I can found out about the
> advantages of using .tac files instead the way I've bee doing stuff?

Well, it won't make all the flags redundant - the default .pid file is
still twistd.pid, and you'd have to set your --prefix, etc. However,
you definitely should be using .tac files since you can handle
daemonization through twistd by using the application framework (you
can select a reactor from twistd by using the -r flag - for example
`twistd -r epoll -y myapp.tac --pidfile=...`).

The link you've posted is the de-facto source for .tac file
documentation. I can post a simple .tac file used for an internal web
tool:

---
from twisted.application import service, internet
from twisted.internet import defer
from twisted.python.log import ILogObserver, FileLogObserver
from twisted.python.logfile import DailyLogFile
from twisted.web import guard, server
from twisted.cred.portal import Portal
from twisted.cred.checkers import FilePasswordDB

from tdusers.lookup import SimpleRealm

import crypt

def cmp_pass(uname, password, storedpass):
    return crypt.crypt(password, storedpass[:2])

def get_api_service():
    """ Return a service suitable for creating an application object. """
    checkers = [FilePasswordDB('/home/repo/.htpasswd',
                hash=cmp_pass)]
    wrapper = guard.HTTPAuthSessionWrapper(
                    Portal(SimpleRealm(), checkers),
                    [guard.BasicCredentialFactory('auth')])
    return internet.TCPServer(8080, server.Site(resource=wrapper))

application = service.Application('Lookup')
logfile = DailyLogFile('lookup.log', '.')
application.setComponent(ILogObserver, FileLogObserver(logfile).emit)

# attach the service to its parent application
service = get_api_service()
service.setServiceParent(application)
----

I then start my tool using twistd -r epoll -y mytacfile.tac. The good
thing about this approach is that your code can live in a seperate
file and no mention of the *running* of it has to be made in that file
- that is, you shouldn't have to explicity choose what reactor you're
using since that's more of a deployment question.

I don't really know of a more comprehensive source for twistd and .tac
files - I suppose if you fancy dong a writeup that'd be appreciated by
the rest of us ;-)

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From rlotun at gmail.com  Mon Aug 17 13:27:11 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 18:27:11 +0100
Subject: [Twisted-Python] Happy Twisted User
Message-ID: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>

Hi All,

Forgive this random spammy shoutout - but I work for TweetDeck (a
real-time web client offering), and we're happy users of Twisted for
our backend. More specifically we use it to handle our account signups
and syncing of client information.

So...if you're a twitter or facebook user and ever thought about
organizing tweets maybe check it out? Just to let you know - it's
available in two client favours, one for iPhone and one a
cross-platform Adobe AIR client.

http://www.tweetdeck.com/

Ok, that's all ;-)

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From glyph at twistedmatrix.com  Mon Aug 17 14:45:24 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 17 Aug 2009 14:45:24 -0400
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
Message-ID: <d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>

On Mon, Aug 17, 2009 at 1:27 PM, Reza Lotun <rlotun at gmail.com> wrote:


> Forgive this random spammy shoutout - but I work for TweetDeck (a
> real-time web client offering), and we're happy users of Twisted for
> our backend. More specifically we use it to handle our account signups
> and syncing of client information.
>

As a matter of fact I already use TweetDeck!  I'm happy to hear it uses
Twisted :).

If you're happy users, perhaps you'd like to consider becoming a sponsor?
The minimum contribution is pretty modest ($500).

Or, if you don't have the resources for that, perhaps you could just write a
blurb for http://twistedmatrix.com/trac/wiki/SuccessStories ?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090817/88571891/attachment.htm 

From tv at eagain.net  Mon Aug 17 14:58:36 2009
From: tv at eagain.net (Tommi Virtanen)
Date: Mon, 17 Aug 2009 11:58:36 -0700
Subject: [Twisted-Python] Ldaptor patch for Interfaces
In-Reply-To: <78bfcf050908170237g2a1a4bdcy3627c8b5b833c3ff@mail.gmail.com>
References: <78bfcf050908170237g2a1a4bdcy3627c8b5b833c3ff@mail.gmail.com>
Message-ID: <20090817185836.GA21887@owl.eagain.net>

On Mon, Aug 17, 2009 at 11:37:10AM +0200, Colin Alston wrote:
> TV! Please fix Ldaptor.

We discussed this on IM, replying here for anyone looking at the
archives.

The SVN repo is dead, long live saner version control..

http://eagain.net/gitweb/?p=ldaptor.git

-- 
:(){ :|:&};:


From rlotun at gmail.com  Mon Aug 17 15:04:36 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 20:04:36 +0100
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
	<d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
Message-ID: <95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>

Hi Glyph,

> As a matter of fact I already use TweetDeck!? I'm happy to hear it uses
> Twisted :).

That's great news!

> If you're happy users, perhaps you'd like to consider becoming a sponsor?
> The minimum contribution is pretty modest ($500).

I will definitely push for this. I've contributed financially on a
personal level, though it's been a modest amount.

> Or, if you don't have the resources for that, perhaps you could just write a
> blurb for http://twistedmatrix.com/trac/wiki/SuccessStories ?

I'll do that as well! Shall I just post the blurb to the list, or
email you personally?

Thanks,
Reza


-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From glyph at twistedmatrix.com  Mon Aug 17 15:09:17 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 17 Aug 2009 15:09:17 -0400
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
	<d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
	<95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>
Message-ID: <d9047f780908171209u4a5045d3l5bde7d443b9a389f@mail.gmail.com>

On Mon, Aug 17, 2009 at 3:04 PM, Reza Lotun <rlotun at gmail.com> wrote:

> Hi Glyph,
>
> > As a matter of fact I already use TweetDeck!  I'm happy to hear it uses
> > Twisted :).
>
> That's great news!
>

Don't get too excited.  Now I know I can blame you when it breaks! ;-)

> If you're happy users, perhaps you'd like to consider becoming a sponsor?
> > The minimum contribution is pretty modest ($500).
>
> I will definitely push for this.


Thanks.


> I've contributed financially on a personal level, though it's been a modest
> amount.


Ah, I knew I'd seen your name somewhere else recently :).  Thanks for that,
too; we should probably get better about honoring individual contributors.

> Or, if you don't have the resources for that, perhaps you could just write
> a
> > blurb for http://twistedmatrix.com/trac/wiki/SuccessStories ?
>
> I'll do that as well! Shall I just post the blurb to the list, or
> email you personally?
>

Go ahead and post it to the list.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090817/83fc4637/attachment.htm 

From exarkun at twistedmatrix.com  Mon Aug 17 21:50:05 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 18 Aug 2009 01:50:05 -0000
Subject: [Twisted-Python] twisted.spread PB over a ProcessProtocol
In-Reply-To: <1250339773.17341.42.camel@ana.amantes>
References: <1250339773.17341.42.camel@ana.amantes>
Message-ID: <20090818015005.8740.29130984.divmod.xquotient.72@localhost.localdomain>

On 15 Aug, 12:36 pm, thomas at apestaart.org wrote:
>[snip]
>
>c) on hitting ctrl-c, tracebacks are generated, due to this block of
>code:
>        # At least on OS X 10.4, exiting while stdout is non-blocking
>can
>        # result in data loss.  For some reason putting the file
>descriptor
>        # back into blocking mode seems to resolve this issue.
>        fdesc.setBlocking(self.fd)
>
>The exception is EBADF.
>
>That code looks suspicious to me - shouldn't it be at least checking 
>for
>exceptions there ? the fd could already be closed IMO.

I think the code was written with the assumption that the fd couldn't 
possibly by closed by that point.  If you have an example where this 
assumption is invalid, cool!  Any chance of shortening the code to just 
highlight this point?

Jean-Paul


From exarkun at twistedmatrix.com  Mon Aug 17 21:51:59 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 18 Aug 2009 01:51:59 -0000
Subject: [Twisted-Python] TCP startTLS() negotiation
In-Reply-To: <Pine.LNX.4.64.0908150216250.15844@patton.tcpsoft.net>
References: <Pine.LNX.4.64.0908150216250.15844@patton.tcpsoft.net>
Message-ID: <20090818015159.8740.1252942931.divmod.xquotient.74@localhost.localdomain>

On 15 Aug, 04:49 pm, kgeorge at tcpsoft.com wrote:
>I've noticed some behavior when negotiating TLS using startTLS().  I'm
>starting TLS on both sides of the connection at the same time to 
>validate
>peer certificates using a custom callback.  If I call startTLS() 
>without
>any subsequent writes to the socket the negotiation never completes.
>However, if I write data immediately post startTLS() the negotiation 
>(and
>the callback to the OpenSSL verify callback) is successful.  But I 
>don't
>want to do this because I want to wait until verification to proceed 
>with
>communicating on the channel.  So I traced through tcp.py and noticed 
>that
>in Connection.startTLS() reads and writes are stopped while the
>negotiation is taking place.  However, only reading is reenabled
>afterwards.  I suppose this is why doing a write unblocks the 
>connection.
>When I do something like this in my code I don't have to make a write:
>
>self.transport.startTLS(SSLContextFactory(...))
>self.transport.startWriting()
>
>The context factory makes its own SSL.Context very similar to 
>_sslverify,
>but with a callback I can hook for verification.
>
>So the question is, why is reading reenabled but not writing?  When I
>apply the patch below it works.

This sounds like a real bug.  Probably it came from a naive copying of 
some TCP code which doesn't have to do the initial writing that is 
necessary for SSL.  Can you file a ticket?

Jean-Paul


From jonathan at garetjax.info  Tue Aug 18 05:41:36 2009
From: jonathan at garetjax.info (Jonathan Stoppani)
Date: Tue, 18 Aug 2009 11:41:36 +0200
Subject: [Twisted-Python] AMQP Twisted Application and authentication
Message-ID: <c50d9eb70908180241l49320c59pb1be88f28556ef18@mail.gmail.com>

Hi All,
I'm new to twisted but already fall in love with it... ;-)

I'm using the txAMQP library to connect and consume messages from an
AMQP server.

The examples of the txamqp library shown how to connect to the message
broker using the ClientCreator class.
What I'm trying to do is to use the twisted application framework.
Until now I succeeded to connect by creating a factory to use with
twisted.application.internet.TCPClient.

My two questions are:
1) Is this the right way to do this? Is it not possible to use the
ClientCreator class directly?
and
2) If this is the right way, when and where should I handle the AMQP
authentication?
   To authenticate to the message broker, the "authenticate" method of
the AMQClient instance must be called. This class is instantiated in
the buildProtocol method of the client factory. Is this the right
place to call this method too? Or is it better if I create a wrapper
class around the AMQPClient which then authenticates when the
connectionMade callback is called?

Thanks for the help

~jonathan

-- 
Best Regards,
Jonathan Stoppani


From gabriel.rossetti at arimaz.com  Tue Aug 18 07:43:21 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 18 Aug 2009 13:43:21 +0200
Subject: [Twisted-Python] self.socket.accept() in doRead() in tcp.py has (11,
 'Resource temporarily unavailable') error
Message-ID: <4A8A93D9.60603@arimaz.com>

Hello everyone,

I have been trying to debug a Twisted app of mine and I noticed that in tcp.py in 
doRead() self.socket.accept() raises the following exception : error: (11, 'Resource temporarily unavailable'). It seems to just smother the exception though. I read in the python doc that sockets raise that exception if the call would block, when the socket is configuered in non-blocking mode. It seems to do that because the data it receives is too big, how am I supposed to resolve this?

Thank you, Gabriel 



From exarkun at twistedmatrix.com  Tue Aug 18 07:56:53 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 18 Aug 2009 11:56:53 -0000
Subject: [Twisted-Python] self.socket.accept() in doRead() in tcp.py
	has	(11, 'Resource temporarily unavailable') error
In-Reply-To: <4A8A93D9.60603@arimaz.com>
References: <4A8A93D9.60603@arimaz.com>
Message-ID: <20090818115653.7602.1673863681.divmod.xquotient.3@localhost.localdomain>

On 11:43 am, gabriel.rossetti at arimaz.com wrote:
>Hello everyone,
>
>I have been trying to debug a Twisted app of mine and I noticed that in 
>tcp.py in
>doRead() self.socket.accept() raises the following exception : error: 
>(11, 'Resource temporarily unavailable'). It seems to just smother the 
>exception though. I read in the python doc that sockets raise that 
>exception if the call would block, when the socket is configuered in 
>non-blocking mode. It seems to do that because the data it receives is 
>too big, how am I supposed to resolve this?

This exception is normal, correct, and harmless.  Whatever in your app 
is not behaving as you would like, it is almost certainly not related to 
this exception.

socket.accept() how new connections are accepted.  This is not related 
to how data is read from connections.

Jean-Paul


From rlotun at gmail.com  Tue Aug 18 08:02:29 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 18 Aug 2009 13:02:29 +0100
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <d9047f780908171209u4a5045d3l5bde7d443b9a389f@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
	<d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
	<95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>
	<d9047f780908171209u4a5045d3l5bde7d443b9a389f@mail.gmail.com>
Message-ID: <95bb10690908180502if66c577l2340ed8844e3be1b@mail.gmail.com>

> Don't get too excited.? Now I know I can blame you when it breaks! ;-)

No worries. Fee free to ping me directly if you have any problems with it.

>> > blurb for http://twistedmatrix.com/trac/wiki/SuccessStories ?
> Go ahead and post it to the list.

Ok, here's our Success Story blurb:

==
TweetDeck (http://www.tweetdeck.com) aims to build a browser for the
real-time web. Right now we're the biggest Twitter client after the
website itself, and are rolling out full integration with Facebook and
other services. With TweetDeck you can organize real-time streams of
information into a convenient grid format that allows easy digestion.

We use Twisted to power our backend services, specifically our new
accounts system and sync functionality we introduced recently
(http://tweetdeck.com/beta/features/take-tweetdeck-with-you/). We've
deployed our Twisted services over the Amazon cloud - specifically, we
use EC2 and SimpleDB. Writing a REST api service used by hundreds of
thousands active users was a snap with Twisted. We'll continue to use
Twisted as we broaden our server-side processing goals.

-- Reza Lotun, Software Engineer, TweetDeck Inc.
==

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From gabriel.rossetti at arimaz.com  Tue Aug 18 08:07:26 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 18 Aug 2009 14:07:26 +0200
Subject: [Twisted-Python] self.socket.accept() in doRead() in tcp.py	has
 (11, 'Resource temporarily unavailable') error
In-Reply-To: <20090818115653.7602.1673863681.divmod.xquotient.3@localhost.localdomain>
References: <4A8A93D9.60603@arimaz.com>
	<20090818115653.7602.1673863681.divmod.xquotient.3@localhost.localdomain>
Message-ID: <4A8A997E.2000605@arimaz.com>

exarkun at twistedmatrix.com wrote:
> On 11:43 am, gabriel.rossetti at arimaz.com wrote:
>   
>> Hello everyone,
>>
>> I have been trying to debug a Twisted app of mine and I noticed that in 
>> tcp.py in
>> doRead() self.socket.accept() raises the following exception : error: 
>> (11, 'Resource temporarily unavailable'). It seems to just smother the 
>> exception though. I read in the python doc that sockets raise that 
>> exception if the call would block, when the socket is configuered in 
>> non-blocking mode. It seems to do that because the data it receives is 
>> too big, how am I supposed to resolve this?
>>     
>
> This exception is normal, correct, and harmless.  Whatever in your app 
> is not behaving as you would like, it is almost certainly not related to 
> this exception.
>
> socket.accept() how new connections are accepted.  This is not related 
> to how data is read from connections.
>
> Jean-Paul
>   
Ok, thank you Jean-Paul. My app just drops those msgs, if I make them 
smaller they go though, so I though maybe that was it.

Gabriel


From matt at bennett.name  Wed Aug 19 05:33:21 2009
From: matt at bennett.name (Matt Bennett)
Date: Wed, 19 Aug 2009 10:33:21 +0100
Subject: [Twisted-Python] Clarification on returning exceptions via
	Perspective Broker
In-Reply-To: <d9047f780908131250r72aa37eemcbf96771ce679ef@mail.gmail.com>
References: <e554908b0908130732j2b6dd897sc959f8d4b01915e4@mail.gmail.com>
	<d9047f780908131250r72aa37eemcbf96771ce679ef@mail.gmail.com>
Message-ID: <e554908b0908190233v20c552c7x41accf01f96a5b53@mail.gmail.com>

Thank you for the explanation Glyph. Having spent some time
understanding the mechanics of the jellying process, I can see why
things are implemented as they are.

In my path to understanding I came across pb.CopyableFailure, which is
where the state to be passed through PB is extracted from an
Exception. For future reference, I believe patching CopyableFailure to
allow certain parts of the exception to persist would be the quickest,
dirtiest workaround. But for the good reasons outlined I'm not going
to ;-)

Thanks again for the prompt feedback.

Matt.



On Thu, Aug 13, 2009 at 8:50 PM, Glyph Lefkowitz<glyph at twistedmatrix.com> wrote:
> On Thu, Aug 13, 2009 at 10:32 AM, Matt Bennett <matt at bennett.name> wrote:
>>
>> My exceptions subclass pb.Error, which means tracebacks are suppressed
>> on the server and errbacks triggered on the client, exactly as I'd
>> hoped. What I'm confused about though, is why the
>> serialization/deserialization process reduces my nice structured
>> exception into a mere string. Isn't PB's raison d'?tre to allow you to
>> send fully formed Python classes over the wire?
>
> It's been a while since I worked with this, but I believe the rationale goes
> something like this:
>
> the most common type of error in PB is a serialization or deserialization
> error.? You sent too much, you didn't send enough, your jellier doesn't
> quite match your unjellier, there's a version skew problem.
>
> If exceptions contained structured data, there's a risk that that data will
> also have a serialization error; or, worse yet, attempt to include the
> problematic data which caused the error in the first place.? So it's
> generally not a good idea to work around this, because you can easily cause
> a mutually recursive loop where reporting the error causes another error
> that needs to be reported.
>
> That said, based on memory and a brief read-through of the code, PB does
> support returning structured exceptions; you can't just return a normal
> Exception subclass, you need to register it as serializable the same way you
> would any other object, and it needs to subclass Jellyable (for example by
> subclassing Copyable).
>
> (I could be wrong, but I believe that is the intent.)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From phil at bubblehouse.org  Wed Aug 19 10:34:52 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 19 Aug 2009 10:34:52 -0400
Subject: [Twisted-Python] weird spammy trac emails?
Message-ID: <723580A7-21F3-4A29-9685-BB95A7082D6C@bubblehouse.org>

Hey all,

Have any of you gotten these weird spammy messages from trac? I'm  
getting change notifications on tickets I opened years ago, with no  
apparent info in it about what the change is except a spam URL.

I've attached the ones I've received. I can't figure out how this  
would even be possible for a spammer to do; there must be some kind of  
exploit in trac....

-phil


Begin forwarded message:

> From: trac at twistedmatrix.com
> Date: August 19, 2009 10:28:44 AM EDT
> To: phil at bubblehouse.org, exarkun at twistedmatrix.com
> Subject: greg changed [#2152 - web2 dependency issue in svn trunk]
> Reply-To: twisted-python at twistedmatrix.com
>
> Ticket [#2152 - web2 dependency issue in svn trunk] changed by greg  
> <greg>:
>
> [http://nissan.osa.pl/tuning/map.html #2152 (web2 dependency issue  
> in svn trunk) ? Twisted]
>
> ---------
>
> ---------
> http://twistedmatrix.com/trac/ticket/2152
Begin forwarded message:

> From: trac at twistedmatrix.com
> Date: August 18, 2009 4:49:00 AM EDT
> To: phil at bubblehouse.org, glyph at divmod.com
> Subject: domtop changed [#1856 - setup.py broken in SVN?]
> Reply-To: twisted-python at twistedmatrix.com
>
> Ticket [#1856 - setup.py broken in SVN?] changed by domtop <domtop>:
>
> [http://stokke.blog.hr #1856 (setup.py broken in SVN?) ? Twisted]
>
> ---------
>
> ---------
> http://twistedmatrix.com/trac/ticket/1856
Begin forwarded message:

> From: trac at twistedmatrix.com
> Date: August 17, 2009 4:54:35 AM EDT
> To: phil at bubblehouse.org, therve at free.fr
> Subject: albass changed [#2752 - t.w.http.Request docstrings]
> Reply-To: twisted-python at twistedmatrix.com
>
> Ticket [#2752 - t.w.http.Request docstrings] changed by albass  
> <albass>:
>
> [http://egostatic.345.pl/forum/ #2752 (t.w.http.Request docstrings)  
> ? Twisted]
>
> ---------
>
> ---------
> http://twistedmatrix.com/trac/ticket/2752



From exarkun at twistedmatrix.com  Wed Aug 19 10:53:24 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Aug 2009 14:53:24 -0000
Subject: [Twisted-Python] weird spammy trac emails?
In-Reply-To: <723580A7-21F3-4A29-9685-BB95A7082D6C@bubblehouse.org>
References: <723580A7-21F3-4A29-9685-BB95A7082D6C@bubblehouse.org>
Message-ID: <20090819145324.7711.849941027.divmod.xquotient.13@localhost.localdomain>

On 02:34 pm, phil at bubblehouse.org wrote:
>Hey all,
>
>Have any of you gotten these weird spammy messages from trac? I'm
>getting change notifications on tickets I opened years ago, with no
>apparent info in it about what the change is except a spam URL.
>
>I've attached the ones I've received. I can't figure out how this
>would even be possible for a spammer to do; there must be some kind of
>exploit in trac....

The exploit is open registration.  I'm open to suggestions about how to 
deal with this problem.

Jean-Paul


From filoufake-python at yahoo.fr  Thu Aug 20 03:07:24 2009
From: filoufake-python at yahoo.fr (filoufake-python at yahoo.fr)
Date: Thu, 20 Aug 2009 07:07:24 +0000 (GMT)
Subject: [Twisted-Python] Telnet server using Twisted and
	AuthenticatingTelnetProtocol
Message-ID: <986632.28669.qm@web26103.mail.ukl.yahoo.com>

Hello,

I have created a telnet server in python.

Maybe you wonder why to create a telnet server while Windows has one?
Because the windows telnet server does not allow to interract with the
desktop. If you try to start a GUI app, it will start and run but will
not be displayed on the server desktop.

My telnet server will allow to start a GUI application interracting with the windows desktop of the server.
Ex. : typing "notepad" in the telnet console will pop up the notepad on the Windows desktop of the server.

At the time this server works but has no authentication feature implemented.

I would like to implement the authentication using AuthenticatingTelnetProtocol and credential.
I found the "cred.py" example on the twistedmatrix website (in the example section) and looked fine as starting point.

I quite well understand this expample.

I modified the code as follow but always got the same error message when a connectiion is attempted.
I have been trying since two weeks but I cannot get it work.

Is there a problem with "AuthenticatingTelnetProtocol"

The error message:
************************************************************
D:\workspace\twisted>telnet_cred.py
2009-08-20 08:57:11+0200 [-] Log opened.
2009-08-20 08:57:11+0200 [-] __main__.ServerFactory starting on 4738
2009-08-20 08:57:11+0200 [-] Starting factory <__main__.ServerFactory instance at 0x00D79C60>
2009-08-20 08:57:15+0200 [__main__.ServerFactory] DEBUG: buildProtocol - addr IPv4Address(TCP, '127.0.0.1', 4978)
2009-08-20 08:57:15+0200 [__main__.ServerFactory] Unhandled Error
        Traceback (most recent call last):
          File "C:\Python25\lib\site-packages\twisted\python\log.py", line 69, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "C:\Python25\lib\site-packages\twisted\python\context.py", line 59, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, **kw)
          File "C:\Python25\lib\site-packages\twisted\python\context.py", line 37, in callWithContext
            return func(*args,**kw)
          File "C:\Python25\lib\site-packages\twisted\internet\selectreactor.py", line 146, in _doReadOrWrite
            why = getattr(selectable, method)()
        --- <exception caught here> ---
          File "C:\Python25\lib\site-packages\twisted\internet\tcp.py", line 932, in doRead
            protocol = self.factory.buildProtocol(self._buildAddr(addr))
          File "D:\workspace\twisted\telnet_cred.py", line 130, in buildProtocol
            p = protocol.ServerFactory.buildProtocol(self, addr)
          File "C:\Python25\lib\site-packages\twisted\internet\protocol.py", line 98, in buildProtocol
            p = self.protocol()
        exceptions.TypeError: __init__() takes exactly 2 arguments (1 given)
************************************************************

The modified code:
************************************************************

# Copyright (c) 2001-2004 Twisted Matrix Laboratories.
# See LICENSE for details.



import sys
from zope.interface import implements, Interface

from twisted.protocols import basic
from twisted.internet import protocol
from twisted.python import log

from twisted.cred import error
from twisted.cred import portal
from twisted.cred import checkers
from twisted.cred import credentials

from twisted.conch.telnet import AuthenticatingTelnetProtocol, ITelnetProtocol, TelnetProtocol

class IProtocolUser(Interface):
    def getPrivileges():
        """Return a list of privileges this user has."""

    def logout():
        """Cleanup per-login resources allocated to this avatar"""

class AnonymousUser:
    implements(IProtocolUser)
    
    def getPrivileges(self):
        return [1, 2, 3]

    def logout(self):
        print "Cleaning up anonymous user resources"

class RegularUser:
    implements(IProtocolUser)
    
    def getPrivileges(self):
        return [1, 2, 3, 5, 6]

    def logout(self):
        print "Cleaning up regular user resources"

class Administrator:
    implements(IProtocolUser)
    
    def getPrivileges(self):
        return range(50)

    def logout(self):
        print "Cleaning up administrator resources"

class Protocol(basic.LineReceiver):
    user = None
    portal = None
    avatar = None
    logout = None

    def connectionMade(self):
        self.sendLine("Login with USER <name> followed by PASS <password> or ANON")
        self.sendLine("Check privileges with PRIVS")

    def connectionLost(self, reason):
        if self.logout:
            self.logout()
            self.avatar = None
            self.logout = None
    
    def lineReceived(self, line):
        f = getattr(self, 'cmd_' + line.upper().split()[0])
        if f:
            try:
                f(*line.split()[1:])
            except TypeError:
                self.sendLine("Wrong number of arguments.")
            except:
                self.sendLine("Server error (probably your fault)")

    def cmd_ANON(self):
        if self.portal:
            self.portal.login(credentials.Anonymous(), None, IProtocolUser
                ).addCallbacks(self._cbLogin, self._ebLogin
                )
        else:
            self.sendLine("DENIED")
    
    def cmd_USER(self, name):
        self.user = name
        self.sendLine("Alright.  Now PASS?")
    
    def cmd_PASS(self, password):
        if not self.user:
            self.sendLine("USER required before PASS")
        else:
            if self.portal:
                self.portal.login(
                    credentials.UsernamePassword(self.user, password),
                    None,
                    IProtocolUser
                ).addCallbacks(self._cbLogin, self._ebLogin
                )
            else:
                self.sendLine("DENIED")

    def cmd_PRIVS(self):
        self.sendLine("You have the following privileges: ")
        self.sendLine(" ".join(map(str, self.avatar.getPrivileges())))

    def _cbLogin(self, (interface, avatar, logout)):
        assert interface is IProtocolUser
        self.avatar = avatar
        self.logout = logout
        self.sendLine("Login successful.  Available commands: PRIVS")
    
    def _ebLogin(self, failure):
        failure.trap(error.UnauthorizedLogin)
        self.sendLine("Login denied!  Go away.")

class ServerFactory(protocol.ServerFactory):
##    protocol = Protocol
    protocol = AuthenticatingTelnetProtocol
    
    def __init__(self, portal):
        self.portal = portal
    
    def buildProtocol(self, addr):
        print "DEBUG: buildProtocol - addr", addr
        p = protocol.ServerFactory.buildProtocol(self, addr)
        print "DEBUG2: buildProtocol - addr", addr
        p.portal = self.portal
        return p

class Realm:
    implements(portal.IRealm)

    def requestAvatar(self, avatarId, mind, *interfaces):
        if IProtocolUser in interfaces:
            if avatarId == checkers.ANONYMOUS:
                av = AnonymousUser()
            elif avatarId.isupper():
                # Capitalized usernames are administrators.
                av = Administrator()
            else:
                av = RegularUser()
            return IProtocolUser, av, av.logout
        elif ITelnetProtocol in interfaces:
            print "BEGUG: aaaa"
            if avatarId.isupper():
                av = TelnetProtocol()
            return ITelnetProtocol, av, None
        raise NotImplementedError("Only IProtocolUser interface is supported by this realm")

def main():
    r = Realm()
    p = portal.Portal(r)
    c = checkers.InMemoryUsernamePasswordDatabaseDontUse()
    c.addUser("auser", "thepass")
    c.addUser("SECONDUSER", "secret")
    p.registerChecker(c)
    p.registerChecker(checkers.AllowAnonymousAccess())
    
    f = ServerFactory(p)
    
    log.startLogging(sys.stdout)

    from twisted.internet import reactor
    reactor.listenTCP(4738, f)
    reactor.run()

if __name__ == '__main__':
    main()

************************************************************

If someone could help me.

Philippe


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090820/37542693/attachment.htm 

From gabriel.rossetti at arimaz.com  Thu Aug 20 05:20:59 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 20 Aug 2009 11:20:59 +0200
Subject: [Twisted-Python] Twistd .tac + wxpython
Message-ID: <4A8D157B.8010301@arimaz.com>

Hello everyone,

I have some services written that I'd like to run in a ta.c w/ twistd. 
One of them uses wxpython. I originally used the wxreactor but it seams 
to have some problems on Mac OS X and Windows, so with help from some 
people on this list I ended up using the wx mainloop as the mainloop and 
putting the reactor in a separate thread. This seams to work well, but 
now that I want to create a .tac I don't think this is possible.

The problem that prompted me to create a .tac is that if I want to use 
py2app, I need just one main file and my app works using a launcher that 
accepts a service name as a param and it takes care of running it. On 
Windows with py2exe, I had created a main script that called the 
launcher with the param in a new process. Py2exe is capable of creating 
several .exe files, so I would generate the launcher and the main 
script. Not being able to do this with py2app I though of ditching my 
launcher and using twistd. Even in the event that I got everything to 
work with the wx reactor, from what I understand twistd uses one reactor 
(that can be specified via command-line), and thus I would either have 
to use the wxreactor for all the services (which doesn't work), or a 
standard reactor, but then it's my wx service that won't work. I thought 
of maybe putting the wx mainloop in a thread and using the standard 
reactor but I don't know how well this works or even if it's possible.

Does anyone have an idea? I'm open to all suggestions and proposals,

Gabriel


From colin.alston at thusa.co.za  Thu Aug 20 05:32:46 2009
From: colin.alston at thusa.co.za (Colin Alston)
Date: Thu, 20 Aug 2009 11:32:46 +0200
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <95bb10690908180502if66c577l2340ed8844e3be1b@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
	<d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
	<95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>
	<d9047f780908171209u4a5045d3l5bde7d443b9a389f@mail.gmail.com>
	<95bb10690908180502if66c577l2340ed8844e3be1b@mail.gmail.com>
Message-ID: <78bfcf050908200232t6fa3e44dtc4ed2b33a3c47cb2@mail.gmail.com>

On Tue, Aug 18, 2009 at 2:02 PM, Reza Lotun <rlotun at gmail.com> wrote:

> > Don't get too excited.  Now I know I can blame you when it breaks! ;-)
>
> No worries. Fee free to ping me directly if you have any problems with it.
>

Feature request: Let me make regex filters for tweets. Ie. so I can filter
off when people decide it's a good idea to tweet the football score every 5
minutes.

Actually, Open Source the damn thing so I can do it myself ;-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090820/fe0a4125/attachment-0001.htm 

From gabriel.rossetti at arimaz.com  Thu Aug 20 07:24:31 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 20 Aug 2009 13:24:31 +0200
Subject: [Twisted-Python] Twisted Trac keeps on bugging
Message-ID: <4A8D326F.2090602@arimaz.com>

Hello everyone,

I must be the onlyone having problems with this, sin no one has said 
anything, but the Twisted Trac keeps on bugging out on me, I get :

Traceback (most recent call last):
  File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/api.py", line 382, in send_error
    'text/html')
  File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/chrome.py", line 475, in render_template
    return stream.render(method, doctype=doctype)
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py", line 146, in render
    output = u''.join(list(generator))
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/output.py", line 200, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/output.py", line 486, in __call__
    for kind, data, pos in chain(stream, [(None, None, None)]):
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/output.py", line 436, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py", line 207, in _ensure
    for event in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py", line 207, in _ensure
    for event in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/chrome.py", line 478, in _strip_accesskeys
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/filters.py", line 313, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 1145, in _match
    content = list(content)
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/filters.py", line 313, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 1120, in _match
    for event in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 1109, in _strip
    event = stream.next()
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 941, in _eval
    for event in substream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 920, in _eval
    ctxt):
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 930, in _eval
    result = data.evaluate(ctxt)
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/eval.py", line 101, in evaluate
    {'data': data})
  File "/home/trac/.local/share/trac/templates/error.html", line 36, in <Expression u"get_reporter_id(req)">
    <input type="hidden" name="reporter" value="${get_reporter_id(req)}" />
  File "/srv/trac/.local/lib/python2.5/site-packages/trac/util/__init__.py", line 50, in get_reporter_id
    name = req.session.get('name', None)
AttributeError: 'NoneType' object has no attribute 'get'



when I try to access it, it has been doing this for several days now.

Cheers,
Gabriel


From glyph at twistedmatrix.com  Thu Aug 20 13:29:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Aug 2009 13:29:42 -0400
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <4A8D157B.8010301@arimaz.com>
References: <4A8D157B.8010301@arimaz.com>
Message-ID: <d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>

Hi Gabriel,

On Thu, Aug 20, 2009 at 5:20 AM, Gabriel Rossetti <
gabriel.rossetti at arimaz.com> wrote:

> I thought
> of maybe putting the wx mainloop in a thread and using the standard
> reactor but I don't know how well this works or even if it's possible.
>

If you've already got all the appropriate code to separate out the GUI into
a separate thread and communicate with the networking components via message
queues, then this should work just fine.  Normally I'd suspect wx (which I
find to be a highly idiosyncratic, buggy, and arbitrarily limited library:
have you considered using something else for your GUI?) might have some
difficulties that I'm not aware of, but I'm pretty sure several other
Twisted users have already done this exact type of integration.

Personally, regardless of UI toolkit, in this situation I'd have the server
start up with a "normal" reactor (select, poll, epoll, kqueue: take your
pick) and have it spawn a separate GUI process with the GUI reactor, and
communicate via a socket.  That way the GUI can be shut down and restarted
without killing the back-end, and the back-end could be moved to a different
machine.  But I don't know a lot about your application and there may be
some requirements I'm not aware of :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090820/1a212887/attachment.htm 

From cyclops at speakeasy.net  Thu Aug 20 13:55:20 2009
From: cyclops at speakeasy.net (John Crawford)
Date: Thu, 20 Aug 2009 13:55:20 -0400
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <mailman.61627.1250760773.23374.twisted-python@twistedmatri x.com>
References: <mailman.61627.1250760773.23374.twisted-python@twistedmatrix.com>
Message-ID: <mailman.6.1250791231.23371.twisted-python@twistedmatrix.com>


>I have some services written that I'd like to run in a ta.c w/ twistd.
>One of them uses wxpython. I originally used the wxreactor but it seams
>to have some problems on Mac OS X and Windows, so with help from some
>people on this list I ended up using the wx mainloop as the mainloop and
>putting the reactor in a separate thread. This seams to work well, but
>now that I want to create a .tac I don't think this is possible.

I have been working through the Finger example section, and also use 
wxPython for a GUI, and although it was a bit tricky to setup, it 
works fine. I also setup my Finger server code as a .tac, and twistd 
starts it up also. Here is some of the code fragments I used:

     # finger_server.py
     from twisted.python import log
     from twisted.internet import wxreactor

     wxreactor.install()

     # import t.i.reactor only after installing wxreactor:
     from twisted.application import internet, service
     from twisted.internet import reactor, protocol, defer
     from twisted.protocols import basic

The first step is importing *and* installing wxreactor. After that, 
you have to create and register a wxPython App with the Reactor, and 
it takes care of the wx loop.

     app = MyApp(0)
     reactor.registerWxApp(app)
     msgWin = app.frame.foundText # this is a textCtrl I send output to.

     fs = FingerService(msgWin)
     ff = fs.getFingerFactory()
     fsf = fs.getFingerSetterFactory()
     global application
     application = service.Application('finger', uid=1, gid=1)
     sc = service.IServiceCollection(application)
     internet.TCPServer(79, ff).setServiceParent(sc)
     internet.TCPServer(179, fsf).setServiceParent(sc)

In my code, I actually use:

         if __name__ == '__main__':
             main_code()
         else:
             service_code()

This lets me run the code in Eclipse for testing, then I copy the .py 
file to a .tac file, and it works as a twistd daemon, including 
popping up a wxPython window for output. It *also* works as a 
standalone file when I use py2exe on the .py file - but I don't see 
how you could use twistd with a .exe, since twistd expects a script.

I hope this is clear - if not, I can send you my entire 
finger_server.py file, for your amusement :)

John C>



From termim at gmail.com  Thu Aug 20 16:58:57 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 20 Aug 2009 20:58:57 +0000 (UTC)
Subject: [Twisted-Python] Twistd .tac + wxpython
References: <4A8D157B.8010301@arimaz.com>
Message-ID: <loom.20090820T224308-714@post.gmane.org>

> One of them uses wxpython. I originally used the wxreactor but it seams 
> to have some problems on Mac OS X and Windows, so with help from some 

I've used wxreactor the same way as John and used py2exe on Windows and cxFreeze
and PyInstaller on Linux to crate a single executable file. This was a client
with a GUI and I've not used twistd. What problems do you have with wxreactor?

> Windows with py2exe, I had created a main script that called the 
> launcher with the param in a new process. Py2exe is capable of creating 
> several .exe files, so I would generate the launcher and the main 
> script. Not being able to do this with py2app I though of ditching my 
> launcher and using twistd. Even in the event that I got everything to 
> work with the wx reactor, from what I understand twistd uses one reactor 

In completely different app (a server without GUI) I needed a part of the
functionality provided by twistd and at the same time the possibility to crate a
single file executable. I ended subclassing ProcessOption and ApplicationRunner
as Jared recommended here 
http://twistedmatrix.com/pipermail/twisted-python/2009-July/019917.html

Regards,
Mikhail



From termim at gmail.com  Thu Aug 20 17:00:52 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 20 Aug 2009 21:00:52 +0000 (UTC)
Subject: [Twisted-Python] Twistd .tac + wxpython
References: <4A8D157B.8010301@arimaz.com>
	<d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
Message-ID: <loom.20090820T225916-395@post.gmane.org>

Hi Glyph,

Glyph Lefkowitz <glyph <at> twistedmatrix.com> writes:

> 
> If you've already got all the appropriate code to separate out the GUI into a
separate thread and communicate with the networking components via message
queues, then this should work just fine. ?Normally I'd suspect wx (which I find
to be a highly idiosyncratic, buggy, and arbitrarily limited library: have you
considered using something else for your GUI?) might have some difficulties that
I'm not aware of, but I'm pretty sure several other Twisted users have already
done this exact type of integration.
> 

What GUI library would you recommend instead of wx?

Regards,
Mikhail



From exarkun at twistedmatrix.com  Thu Aug 20 17:23:28 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 20 Aug 2009 21:23:28 -0000
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <loom.20090820T225916-395@post.gmane.org>
References: <4A8D157B.8010301@arimaz.com>
	<d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
	<loom.20090820T225916-395@post.gmane.org>
Message-ID: <20090820212328.7726.2141293078.divmod.xquotient.86@localhost.localdomain>

On 09:00 pm, termim at gmail.com wrote:
>Hi Glyph,
>
>Glyph Lefkowitz <glyph <at> twistedmatrix.com> writes:
>>
>>If you've already got all the appropriate code to separate out the GUI 
>>into a
>separate thread and communicate with the networking components via 
>message
>queues, then this should work just fine. ?Normally I'd suspect wx 
>(which I find
>to be a highly idiosyncratic, buggy, and arbitrarily limited library: 
>have you
>considered using something else for your GUI?) might have some 
>difficulties that
>I'm not aware of, but I'm pretty sure several other Twisted users have 
>already
>done this exact type of integration.
>>
>
>What GUI library would you recommend instead of wx?

Gtk2 is significantly more well integrated with Twisted (because it's 
significantly easier to integrate with, although many Twisted developers 
also rather like it apart from that fact).

Jean-Paul


From exarkun at twistedmatrix.com  Thu Aug 20 12:48:21 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 20 Aug 2009 16:48:21 -0000
Subject: [Twisted-Python] Telnet server using Twisted
	and	AuthenticatingTelnetProtocol
In-Reply-To: <986632.28669.qm@web26103.mail.ukl.yahoo.com>
References: <986632.28669.qm@web26103.mail.ukl.yahoo.com>
Message-ID: <20090820164821.7726.1422282903.divmod.xquotient.79@localhost.localdomain>

On 07:07 am, filoufake-python at yahoo.fr wrote:
>Hello,
>
>I have created a telnet server in python.
>
>Maybe you wonder why to create a telnet server while Windows has one?
>Because the windows telnet server does not allow to interract with the
>desktop. If you try to start a GUI app, it will start and run but will
>not be displayed on the server desktop.
>
>My telnet server will allow to start a GUI application interracting 
>with the windows desktop of the server.
>Ex. : typing "notepad" in the telnet console will pop up the notepad on 
>the Windows desktop of the server.
>
>At the time this server works but has no authentication feature 
>implemented.
>
>I would like to implement the authentication using 
>AuthenticatingTelnetProtocol and credential.
>I found the "cred.py" example on the twistedmatrix website (in the 
>example section) and looked fine as starting point.
>
>I quite well understand this expample.
>
>I modified the code as follow but always got the same error message 
>when a connectiion is attempted.
>I have been trying since two weeks but I cannot get it work.
>
>Is there a problem with "AuthenticatingTelnetProtocol"

AuthenticatingTelnetProtocol requires an argument to its constructor - 
the cred portal to use to do the authentication and authorization with. 
However, ServerFactory.buildProtocol doesn't invoke it with any 
arguments, so you get a TypeError.  You can fix this by making your 
factory's protocol be a no-argument callable instead - eg, by making it 
a lambda that closes over the portal or the factory:

    def __init__(self, portal):
        self.protocol = lambda: AuthenticatingTelnetProtocol(portal)


However, this won't completely fix your problems. 
AuthenticatingTelnetProtocol expects to be connected to an 
ITelnetTransport, not an ITCPTransport.

http://twistedmatrix.com/trac/browser/branches/telnet-server- 
example-3940/doc/conch/examples/telnet_echo.tac might help illuminate 
the way telnet transports and telnet protocols are intended to be 
assembled.

Jean-Paul


From dripton at ripton.net  Thu Aug 20 19:18:49 2009
From: dripton at ripton.net (David Ripton)
Date: Thu, 20 Aug 2009 16:18:49 -0700
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <loom.20090820T225916-395@post.gmane.org>
References: <4A8D157B.8010301@arimaz.com>
	<d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
	<loom.20090820T225916-395@post.gmane.org>
Message-ID: <20090820231849.GB6505@vidar.dreamhost.com>

On 2009.08.20 21:00:52 +0000, Mikhail wrote:
> What GUI library would you recommend instead of wx?

If clean integration with Twisted is the primary goal, PyGTK.  The
gtk2reactor integration is fantastic.

-- 
David Ripton    dripton at ripton.net


From exarkun at twistedmatrix.com  Thu Aug 20 08:08:49 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 20 Aug 2009 12:08:49 -0000
Subject: [Twisted-Python] Twisted Trac keeps on bugging
In-Reply-To: <4A8D326F.2090602@arimaz.com>
References: <4A8D326F.2090602@arimaz.com>
Message-ID: <20090820120849.7726.245687165.divmod.xquotient.2@localhost.localdomain>

On 11:24 am, gabriel.rossetti at arimaz.com wrote:
>Hello everyone,
>
>I must be the onlyone having problems with this, sin no one has said
>anything, but the Twisted Trac keeps on bugging out on me, I get :

This is an intermittent failure.  Most people encounter it at some 
point.  If you're interested in helping fix it, please let me know.

Jean-Paul


From gabriel.rossetti at arimaz.com  Fri Aug 21 09:11:34 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 21 Aug 2009 15:11:34 +0200
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
References: <4A8D157B.8010301@arimaz.com>
	<d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
Message-ID: <4A8E9D06.4080108@arimaz.com>

Glyph Lefkowitz wrote:
> Hi Gabriel,
>
> On Thu, Aug 20, 2009 at 5:20 AM, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com <mailto:gabriel.rossetti at arimaz.com>> wrote:
>
>     I thought
>     of maybe putting the wx mainloop in a thread and using the standard
>     reactor but I don't know how well this works or even if it's possible.
>
>
> If you've already got all the appropriate code to separate out the GUI 
> into a separate thread and communicate with the networking components 
> via message queues, then this should work just fine.  Normally I'd 
> suspect wx (which I find to be a highly idiosyncratic, buggy, and 
> arbitrarily limited library: have you considered using something else 
> for your GUI?) might have some difficulties that I'm not aware of, but 
> I'm pretty sure several other Twisted users have already done this 
> exact type of integration.
>
> Personally, regardless of UI toolkit, in this situation I'd have the 
> server start up with a "normal" reactor (select, poll, epoll, kqueue: 
> take your pick) and have it spawn a separate GUI process with the GUI 
> reactor, and communicate via a socket.  That way the GUI can be shut 
> down and restarted without killing the back-end, and the back-end 
> could be moved to a different machine.  But I don't know a lot about 
> your application and there may be some requirements I'm not aware of :).
>
Hi Glyph,

I have 3 versions of my code, one using wxreactor, one where the 
mainloop is wx's and Twisted's reactor is in a thread, and one where 
it's Twisted's reactor as the mainloop and wx is in a thread.

To answer your question, originally I considered pyQT but when I saw 
that it wasn't free I changed my mind. pyGTK, the problem is the 
integration in different OSes, I need great integration in Linux, Mac OS 
X and Windows and  GTK apps don't do that as well.

Yes, that is what I ended up doing :-)

Cheers,
Gabriel


From mail.sensenmann at googlemail.com  Fri Aug 21 10:47:51 2009
From: mail.sensenmann at googlemail.com (Christian Scharkus)
Date: Fri, 21 Aug 2009 16:47:51 +0200
Subject: [Twisted-Python] twisted and qtreactor
Message-ID: <717b5780908210747h40602347p74f61f11bb2c05ec@mail.gmail.com>

Hi :)

I'm at extending our existing twisted application
(http://github.com/jem777/rattlekekz) with an qtview using qtreactor
(http://www.tarbox.org/qtreactor) and pyqt.

I wrote this two examples to demonstrate the problem: http://dpaste.com/83246/

The Applications are supposed to print "fu" or "stfu" then the last
window is closed. This works with pyqt just fine but don't work then
twisted is involved. The signal connection is set up successful so I
think twisted swallows or blocks the signals from the QApplication or
they're not emitted.


From stephen.c.waterbury at nasa.gov  Fri Aug 21 11:40:15 2009
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Fri, 21 Aug 2009 11:40:15 -0400
Subject: [Twisted-Python] twisted-wave?
Message-ID: <4A8EBFDF.6050602@nasa.gov>

Just curious what the twisted minions think of google wave
and whether anyone is considering or working on a twisted
implementation of the federation protocol,
<http://www.waveprotocol.org/draft-protocol-spec>.

Steve


From david at strotos.com  Fri Aug 21 12:20:16 2009
From: david at strotos.com (David Guerin)
Date: Fri, 21 Aug 2009 17:20:16 +0100
Subject: [Twisted-Python] twisted-wave?
In-Reply-To: <4A8EBFDF.6050602@nasa.gov>
References: <4A8EBFDF.6050602@nasa.gov>
Message-ID: <A68ED14E-6FFD-4909-BAA9-97A8B715A1F3@strotos.com>

Hey,

I had considered starting something.....
When I was finished my thesis that is, sometime next month...

Looks very promising, all in all. Really need to look into the spec in  
more detail first.

Has anyone else started anything?

Dave


On 21 Aug 2009, at 16:40, Stephen Waterbury wrote:

> Just curious what the twisted minions think of google wave
> and whether anyone is considering or working on a twisted
> implementation of the federation protocol,
> <http://www.waveprotocol.org/draft-protocol-spec>.
>
> Steve
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2417 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090821/52685015/attachment.bin 

From exarkun at twistedmatrix.com  Sun Aug 23 00:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Aug 2009 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1251000311.2.536346421@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090823/259f2e5e/attachment.htm 

From gabriel.rossetti at arimaz.com  Sun Aug 23 16:40:11 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Sun, 23 Aug 2009 22:40:11 +0200
Subject: [Twisted-Python] Twisted, wxPython & Mac OS X 10.5 freezes
In-Reply-To: <d9047f780908120902q527ad1a5g90bb72bbd235c223@mail.gmail.com>
References: <4A82E421.4080107@arimaz.com>
	<d9047f780908120902q527ad1a5g90bb72bbd235c223@mail.gmail.com>
Message-ID: <4A91A92B.3080607@arimaz.com>

Glyph Lefkowitz wrote:
> On Wed, Aug 12, 2009 at 11:47 AM, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com <mailto:gabriel.rossetti at arimaz.com>> wrote:
>
>     I have written an application using Twisted, WX and I wanted to
>     test it
>     under Mac. I have successfully used it on linux and windows
>     before. When
>     I run it, I often get the pinwheel of death and then the whole OS
>     locks
>     up, even SSH no longer accepts connections, I have to hard reboot it.
>     Has anyone ever witnessed this? Does anyone know/have an idea of what
>     could cause this? I was wondering if it is not the twisted + wx
>     integration that could cause this.
>
>
> Without more detail it's impossible to say, but my guess would be "no".
>
> MacOS X is a preemptively multitasking, multi-user OS.  The worst that 
> Twisted and WX should be able to do, even maliciously, is to freeze 
> the display for a single user.  The worst that a bug should reasonably 
> cause is to lock up the UI for a single process.
>
> You might have discovered a bug in MacOS X, and you should take it up 
> with Apple.  Alternately, your Mac hardware might be broken, and 
> Twisted is interacting with its problems.  If you'd like any further 
> help here, though, a complete example program would be useful to 
> anyone trying to help you.
>
Hmm, well that is what I though but it really freezes up good. I changed 
my way of using wx & twisted, opted into using the normal reactor and 
having wx's mainloop in a seperate thread, this seams to work great on 
other platforms. I still get the lockup on Mac though but I think it's 
comming from my using pyserial on a bluetooth device. I have to 
investigate more but it's a bit hard too as I don't know how to provoke 
the lockup and I can't debug it once it does. I think it has nothing to 
do with wx nor twisted though. I will test it on other mac hardware and 
software asap. Thanks for your advice,

Gabriel


From powdahound at gmail.com  Mon Aug 24 14:58:14 2009
From: powdahound at gmail.com (Garret Heaton)
Date: Mon, 24 Aug 2009 11:58:14 -0700
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com> 
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>

There is a solution to the reconnection issue posted
here<http://www.gelens.org/2008/09/12/reinitializing-twisted-connectionpool/>which
one of my friends improved upon. He wasn't on the list at the time of
this posting so I'm replying to this on his behalf. The improved solution
is:

class ReconnectingConnectionPool(adbapi.ConnectionPool):

    def _runInteraction(self, interaction, *args, **kw):
        try:
            return adbapi.ConnectionPool._runInteraction(self,
interaction, *args, **kw)
        except MySQLdb.OperationalError, e:
            if e[0] not in (2006, 2013):
                raise
            log.msg("RCP: got error %s, retrying operation" %(e))
            conn = self.connections.get(self.threadID())
            self.disconnect(conn)

            # try the interaction again
            return adbapi.ConnectionPool._runInteraction(self,
interaction, *args, **kw)

Also on GitHub: http://gist.github.com/174056

It's working well for both of us so far.


On Wed, Jul 22, 2009 at 7:06 AM, Clay Gerrard <clay.gerrard at rackspace.com>wrote:

> In my experience "re-running the query" has not been sufficient.
>
> All of the connections in the pool time out around the same time.
>
> Using cp_reconnect just forces the "idle" connection (cursor) to be removed
> from the pool before raising the generic "ConnectionLost":
>
>    def rollback(self):
>        if not self._pool.reconnect:
>            self._connection.rollback()
>            return
>
>        try:
>            self._connection.rollback()
>            curs = self._connection.cursor()
>            curs.execute(self._pool.good_sql)
>            curs.close()
>            self._connection.commit()
>            return
>        except:
>            log.err(None, "Rollback failed")
>
>        self._pool.disconnect(self._connection)
>
>        if self._pool.noisy:
>            log.msg("Connection lost.")
>
>        raise ConnectionLost()
>
> But when I go to re-run the query it's very unlikely that I'll get that
> same thread id again (and therefore a fresh connection).  More than likely
> I'll get another stale connection which will also get dropped.  Repeat ad
> infinitum
>
> I'm fairly sure the right thing to do is to make adbapi.Connection objects
> aware of their created time, and allow adbapi.ConnectionPool.connect to
> potentially refresh "old" connections based on an optional kwarg when
> creating the connection pool:
>
> "pool_recycle"
>
> That's what I'm working on anyway...
>
> Clay Gerrard
> Office: 210-312-3443
> Mobile: 210-788-9431
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] On Behalf Of Gabriel Rossetti
> Sent: Wednesday, July 22, 2009 1:34 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
>
> Hello Garret,
>
> yes, I finally did did something like that, I am currently testing the
> code.
>
> Thanks,
> Gabriel
>
> Garret Heaton wrote:
> > Instead of trying to keep the connection alive you can also just
> > reconnect when necessary. Example code here:
> >
> http://stackoverflow.com/questions/207981/how-to-enable-mysql-client-auto-re-connect-with-mysqldb/982873#982873
> >
> > On Tue, Jul 21, 2009 at 2:18 PM, Clay Gerrard
> > <clay.gerrard at rackspace.com <mailto:clay.gerrard at rackspace.com>> wrote:
> >
> >     Regarding the original question:
> >     "how to make mysql's idle timeouts shorter so that I can debug my
> >     code?"
> >
> >     You should be able to do that in the mysql shell:
> >     mysql> show variables like '%timeout%';
> >     +----------------------------+-------+
> >     | Variable_name              | Value |
> >     +----------------------------+-------+
> >     | connect_timeout            | 5     |
> >     | delayed_insert_timeout     | 300   |
> >     | innodb_lock_wait_timeout   | 50    |
> >     | innodb_rollback_on_timeout | OFF   |
> >     | interactive_timeout        | 600   |
> >     | net_read_timeout           | 30    |
> >     | net_write_timeout          | 60    |
> >     | slave_net_timeout          | 3600  |
> >     | table_lock_wait_timeout    | 50    |
> >     | wait_timeout               | 600   |
> >     +----------------------------+-------+
> >     10 rows in set (0.00 sec)
> >
> >     > set global variable interactive_timeout = 5;
> >
> >     But in my experience MySQLdb makes the idle connection timeout
> >     very difficult to debug effectively.
> >
> >     Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw
> >     like sqlalchemy?
> >
> >     Clay Gerrard
> >     Office: 210-312-3443
> >     Mobile: 210-788-9431
> >     -----Original Message-----
> >     From: twisted-python-bounces at twistedmatrix.com
> >     <mailto:twisted-python-bounces at twistedmatrix.com>
> >     [mailto:twisted-python-bounces at twistedmatrix.com
> >     <mailto:twisted-python-bounces at twistedmatrix.com>] On Behalf Of
> >     Werner Thie
> >     Sent: Tuesday, July 21, 2009 4:05 PM
> >     To: Twisted general discussion
> >     Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts,
> >     mysql - OT
> >
> >     Hi Gabriel
> >
> >     had the same problem, solved it by having keepalive() called in a
> >     LoopingCall(), MySQL sitting at defaults timingwise.
> >
> >     DB_DRIVER = "MySQLdb"
> >
> >     USERDB_ARGS = {
> >       'host': '',
> >       'db': '',
> >       'user': '',
> >       'passwd': '',
> >       'cp_reconnect': True
> >     }
> >
> >     storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
> >
> >     ka = task.LoopingCall(storekeeper.store.keepAlive)
> >     ka.start(300)
> >
> >     class StoreKeeper(object):
> >       def __init__(self, dbapiName, **params):
> >         self.store = Store(dbapiName, **params)
> >
> >       def dbdisconn(self, reason):
> >         print 'db disconnected for ', reason
> >
> >       def keepAlive(self):
> >         d = self.store.runQuery('SELECT 1')
> >         d.addErrback(self.dbdisconn)
> >
> >
> >     #with store being something like:
> >
> >     class Store(object):
> >       def __init__(self, dbapiName, **params):
> >         self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
> >         print self.__pool.__getstate__()
> >         self.runOperation('SET autocommit = %s', 1)
> >
> >       def runQuery(self, query, *args):
> >         d = self.__pool.runInteraction(self.mapQuery, query, args)
> >         return d
> >
> >       def mapQuery(self, curs, query, *args):
> >         try:
> >           curs.execute(query, *args)
> >         except adbapi.ConnectionLost:
> >           print
> >           print '++++++++++++ rerunning query'
> >           print
> >           curs.execute(query, *args)                    #simply resend
> >     query, assuming cp_reconnect=True
> >         result = curs.fetchall()
> >         columns = [d[0] for d in curs.description]
> >         return [dict(zip(columns, r)) for r in result]
> >
> >       def runOperation(self, query, *args):
> >         d = self.__pool.runOperation(query, args)
> >         return d
> >
> >       def runInteraction(self, fun, queries=(), args=()):
> >         d = self.__pool.runInteraction(fun, queries, args)
> >         return d
> >
> >
> >     HTH, Werner
> >
> >     Gabriel Rossetti wrote:
> >     > Hello everyone,
> >     >
> >     > I have been experiencing the ConnectionError with adbapi &
> >     > cp_reconnect=True. I know that because of the cp_reconnect=True
> >     param
> >     > tha is reconnects and that the query is not re-run. I have
> >     written some
> >     > code that should re-run the query in that case (if I get a
> >     Failure back
> >     > because of a ConnectionError), but it doesn't seem to work. My
> >     question
> >     > is if anyone knows how to make mysql's idle timeouts shorter so
> >     that I
> >     > can debug my code? I searched google and the mysql site with no
> >     luck.
> >     >
> >     > thank you,
> >     > Gabriel
> >     >
> >     > _______________________________________________
> >     > Twisted-Python mailing list
> >     > Twisted-Python at twistedmatrix.com
> >     <mailto:Twisted-Python at twistedmatrix.com>
> >     > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >     _______________________________________________
> >     Twisted-Python mailing list
> >     Twisted-Python at twistedmatrix.com
> >     <mailto:Twisted-Python at twistedmatrix.com>
> >     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >     Confidentiality Notice: This e-mail message (including any attached
> or
> >     embedded documents) is intended for the exclusive and confidential
> >     use of the
> >     individual or entity to which this message is addressed, and
> >     unless otherwise
> >     expressly indicated, is confidential and privileged information of
> >     Rackspace.
> >     Any dissemination, distribution or copying of the enclosed
> >     material is prohibited.
> >     If you receive this transmission in error, please notify us
> >     immediately by e-mail
> >     at abuse at rackspace.com <mailto:abuse at rackspace.com>, and delete
> >     the original message.
> >     Your cooperation is appreciated.
> >
> >
> >     _______________________________________________
> >     Twisted-Python mailing list
> >     Twisted-Python at twistedmatrix.com
> >     <mailto:Twisted-Python at twistedmatrix.com>
> >     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> Confidentiality Notice: This e-mail message (including any attached or
> embedded documents) is intended for the exclusive and confidential use of
> the
> individual or entity to which this message is addressed, and unless
> otherwise
> expressly indicated, is confidential and privileged information of
> Rackspace.
> Any dissemination, distribution or copying of the enclosed material is
> prohibited.
> If you receive this transmission in error, please notify us immediately by
> e-mail
> at abuse at rackspace.com, and delete the original message.
> Your cooperation is appreciated.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090824/97e94adb/attachment-0001.htm 

From paulswartz at gmail.com  Mon Aug 24 16:31:10 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Mon, 24 Aug 2009 16:31:10 -0400
Subject: [Twisted-Python] SFTP 2.
In-Reply-To: <430a10ee0908132331w1eef50d8t1d366084b6c618d1@mail.gmail.com>
References: <430a10ee0908132331w1eef50d8t1d366084b6c618d1@mail.gmail.com>
Message-ID: <324cfb540908241331v2485fe64hddfd29fc7efb2a46@mail.gmail.com>

(cc-ing the mailing list to move the discussion there)

On Fri, Aug 14, 2009 at 2:31 AM, Simply4IT<simply4it at gmail.com> wrote:
> Dear Paul,
>
> unfortunately I was not really specific in what do I really want to achieve.
> I would like to be able to send and receive files through a secure
> connection. I don't really need any other features/functions of an SSH
> server, just the ones which are needed for serving files. As you are using
> Conch frequently, I would appreciate if you? could give me some useful
> information and suggestion.

You're looking for twisted.conch.ssh.filetransfer, which implements
both client/server ends of the SFTP protocol.  I think some people on
the list have examples of using it in production; otherwise I'd look
at the unittests.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin


From phil at bubblehouse.org  Mon Aug 24 18:53:45 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 24 Aug 2009 18:53:45 -0400
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
Message-ID: <EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>

On Aug 24, 2009, at 2:58 PM, Garret Heaton wrote:
> There is a solution to the reconnection issue posted here which one  
> of my friends improved upon. He wasn't on the list at the time of  
> this posting so I'm replying to this on his behalf. The improved  
> solution is:
[snip]
>             # try the interaction again
>             return adbapi.ConnectionPool._runInteraction(self,  
> interaction, *args, **kw)

The thing that would concern me is that you can get a ConnectionLost  
error for a variety of different reasons, and they might not be raised  
by the first query issued in your interaction.

I feel like I can think of any number of ways running the same series  
of queries twice would be a bad thing. I have some very important  
queries that are run inside a interaction because they do a series of  
operations in sequence. I can't use transactions because my tables are  
MyISAM.

Perhaps I'm jumping at shadows, but automatic re-querying just seems  
dangerous to me. Only the particular application knows when it's safe.

-phil
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090824/46f2b990/attachment.htm 

From filoufake-python at yahoo.fr  Mon Aug 24 19:07:51 2009
From: filoufake-python at yahoo.fr (filoufake-python at yahoo.fr)
Date: Mon, 24 Aug 2009 23:07:51 +0000 (GMT)
Subject: [Twisted-Python] Re : Telnet server using Twisted and
	AuthenticatingTelnetProtocol
In-Reply-To: <20090820164821.7726.1422282903.divmod.xquotient.79@localhost.localdomain>
References: <986632.28669.qm@web26103.mail.ukl.yahoo.com>
	<20090820164821.7726.1422282903.divmod.xquotient.79@localhost.localdomain>
Message-ID: <140670.22919.qm@web26108.mail.ukl.yahoo.com>

Thank you Jean-Paul for replying,

I still have some things that I don't understand:

If I put your piece of code in my factory's protocol, I can connect to the server but as soon as I enter the username, I got the an error message telling that Server doesn't support "will" ('Server' object has no attribute 'will').

2009-08-25 00:32:40+0200 [-] Log opened.
2009-08-25 00:32:40+0200 [-] twisted.internet.protocol.ServerFactory starting on 4738
2009-08-25 00:32:40+0200 [-] Starting factory <twisted.internet.protocol.ServerFactory instance at 0x00D828F0>
2009-08-25 00:32:45+0200 [AuthenticatingTelnetProtocol,0,127.0.0.1] Unhandled Error
        Traceback (most recent call last):
          File "C:\Python26\lib\site-packages\twisted\python\log.py", line 84, in callWithLogger
            return callWithContext({"system": lp}, func, *args, **kw)
          File "C:\Python26\lib\site-packages\twisted\python\log.py", line 69, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "C:\Python26\lib\site-packages\twisted\python\context.py", line 59, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, **kw)
          File "C:\Python26\lib\site-packages\twisted\python\context.py", line 37, in callWithContext
            return func(*args,**kw)
        --- <exception caught here> ---
          File "C:\Python26\lib\site-packages\twisted\internet\selectreactor.py", line 146, in _doReadOrWrite
            why = getattr(selectable, method)()
          File "C:\Python26\lib\site-packages\twisted\internet\tcp.py", line 463, in doRead
            return self.protocol.dataReceived(data)
          File "C:\Python26\lib\site-packages\twisted\protocols\basic.py", line 231, in dataReceived
            why = self.lineReceived(line)
          File "C:\Python26\lib\site-packages\twisted\conch\telnet.py", line 925, in lineReceived
            newState = getattr(self, "telnet_" + oldState)(line)
          File "C:\Python26\lib\site-packages\twisted\conch\telnet.py", line 967, in telnet_User
            self.transport.will(ECHO)
        exceptions.AttributeError: 'Server' object has no attribute 'will'

I understand that this has something to do with TelnetTranport but how to implement it?
I read the telnet_echo.tac but in my case I have to manage the portal also and that is a litle bit too complex for me.

You say also that AuthenticatingTelnetProtocol  expects to be connected to an ITelnetTransport, but the documentation says "When the information is collected, it is passed to a portal and an avatar 
implementing ITelnetProtocol is requested". 
I'm lost.

May I abuse to ask you to tell how to do?

Many thanks

Philippe



      


From ddwiggins at advpubtech.com  Mon Aug 24 21:03:09 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon, 24 Aug 2009 18:03:09 -0700
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
References: <4A645A66.1000301@arimaz.com>
	<4A662D80.1060009@thiengineering.ch>	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>	<4A66B2ED.3090503@arimaz.com>	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
Message-ID: <h6vd8e$uru$1@ger.gmane.org>

Phil Christensen wrote:
> The thing that would concern me is that you can get a ConnectionLost 
> error for a variety of different reasons, and they might not be raised 
> by the first query issued in your interaction.
> 
> I feel like I can think of any number of ways running the same series of 
> queries twice would be a bad thing. I have some very important queries 
> that are run inside a interaction because they do a series of operations 
> in sequence. I can't use transactions because my tables are MyISAM.
> 
> Perhaps I'm jumping at shadows, but automatic re-querying just seems 
> dangerous to me. Only the particular application knows when it's safe.

I agree strongly.  A case I've run into with Sql Server accessed through 
ODBC: some work is done resulting in some open connections in the pool. 
  At some point, the DB server goes down, or maybe connectivity is lost, 
and later restored.  Any following attempt to use one of the pool 
connections will fail, with one of several error messages, and I at 
least was unable to use them to clearly distinguish this case from an 
error on the request itself.

I wound up putting a wrapper around adbapi that closes the connection 
after each request.

-- 
Don Dwiggins
Advanced Publishing Technology



From powdahound at gmail.com  Mon Aug 24 21:14:46 2009
From: powdahound at gmail.com (Garret Heaton)
Date: Mon, 24 Aug 2009 18:14:46 -0700
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com> 
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com> 
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
Message-ID: <812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>

On Mon, Aug 24, 2009 at 3:53 PM, Phil Christensen <phil at bubblehouse.org>wrote:

> On Aug 24, 2009, at 2:58 PM, Garret Heaton wrote:
>
> There is a solution to the reconnection issue posted here<http://www.gelens.org/2008/09/12/reinitializing-twisted-connectionpool/>which one of my friends improved upon. He wasn't on the list at the time of
> this posting so I'm replying to this on his behalf. The improved solution
> is:
>
> [snip]
>
>             # try the interaction again
>             return adbapi.ConnectionPool._runInteraction(self, interaction, *args, **kw)
>
> The thing that would concern me is that you can get a ConnectionLost error
> for a variety of different reasons, and they might not be raised by the
> first query issued in your interaction.
>

Interesting, I'll have to look in to this a bit more.


> I feel like I can think of any number of ways running the same series of
> queries twice would be a bad thing. I have some very important queries that
> are run inside a interaction because they do a series of operations in
> sequence. I can't use transactions because my tables are MyISAM.
>
> Perhaps I'm jumping at shadows, but automatic re-querying just seems
> dangerous to me. Only the particular application knows when it's safe.
>

This is very true, and I should have mentioned it in my reply. Re-running
queries is only possible when you know your application can do it safely.

How would you solve the issue of a lost connection in your case?


> -phil
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090824/c2913c4a/attachment.htm 

From glyph at twistedmatrix.com  Tue Aug 25 08:44:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 25 Aug 2009 08:44:54 -0400
Subject: [Twisted-Python] exarkun changed [#3974 - reader/writer
	interface docs incomplete]
In-Reply-To: <E1Mfv0W-0005ZM-RB@cube.twistedmatrix.com>
References: <E1Mfv0W-0005ZM-RB@cube.twistedmatrix.com>
Message-ID: <d9047f780908250544j4834025u98f60a9934a1c907@mail.gmail.com>

-- 
Apologies for any cryptic brevity or errors, this was sent from a mobile
device.

On Aug 25, 2009 8:20 AM, <trac at twistedmatrix.com> wrote:

Ticket [#3974 - reader/writer interface docs incomplete] changed by exarkun
<exarkun at twistedmatrix.com>:

#3980 was a duplicate of this.

---------

---------
http://twistedmatrix.com/trac/ticket/3974
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090825/9e5a50a7/attachment.htm 

From phil at bubblehouse.org  Tue Aug 25 10:31:19 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 25 Aug 2009 10:31:19 -0400
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
Message-ID: <4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>

On Aug 24, 2009, at 9:14 PM, Garret Heaton wrote:
> On Mon, Aug 24, 2009 at 3:53 PM, Phil Christensen <phil at bubblehouse.org 
> > wrote:
>> I feel like I can think of any number of ways running the same  
>> series of queries twice would be a bad thing. I have some very  
>> important queries that are run inside a interaction because they do  
>> a series of operations in sequence. I can't use transactions  
>> because my tables are MyISAM.
>>
>> Perhaps I'm jumping at shadows, but automatic re-querying just  
>> seems dangerous to me. Only the particular application knows when  
>> it's safe.
>
> This is very true, and I should have mentioned it in my reply. Re- 
> running queries is only possible when you know your application can  
> do it safely.
>
> How would you solve the issue of a lost connection in your case?

Honestly, I have never actually solved it. I pretty much only write  
webapps these days, so when a ConnectionLost happens, it just  
propagates up the stack and displays an error to the user. Not ideal,  
by any means.

However, in my case, the only time I really get ConnectionLost errors  
is when the MySQL connection timeout closes idle connections in the  
pool. I accidentally fixed this months ago by setting up Nagios to  
monitor the web services, and it runs often enough that it usually  
hits every open connection within that timeout (8hrs).

The only safe way I can think of to do this is run a simple query  
(like SELECT 1) before every interaction. Then you would only  
reconnect/requery if that fails.

The only problem with this is that it still doesn't protect you from  
lost connections that occur during a multi-query interaction.

-phil


From p.mayers at imperial.ac.uk  Tue Aug 25 11:25:35 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 25 Aug 2009 16:25:35 +0100
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
References: <4A645A66.1000301@arimaz.com>
	<4A662D80.1060009@thiengineering.ch>	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>	<4A66B2ED.3090503@arimaz.com>	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
Message-ID: <4A94026F.2090203@imperial.ac.uk>

Phil Christensen wrote:
> On Aug 24, 2009, at 9:14 PM, Garret Heaton wrote:
>> On Mon, Aug 24, 2009 at 3:53 PM, Phil Christensen <phil at bubblehouse.org 
>>> wrote:
>>> I feel like I can think of any number of ways running the same  
>>> series of queries twice would be a bad thing. I have some very  
>>> important queries that are run inside a interaction because they do  
>>> a series of operations in sequence. I can't use transactions  
>>> because my tables are MyISAM.
>>>
>>> Perhaps I'm jumping at shadows, but automatic re-querying just  
>>> seems dangerous to me. Only the particular application knows when  
>>> it's safe.
>> This is very true, and I should have mentioned it in my reply. Re- 
>> running queries is only possible when you know your application can  
>> do it safely.
>>
>> How would you solve the issue of a lost connection in your case?
> 
> Honestly, I have never actually solved it. I pretty much only write  
> webapps these days, so when a ConnectionLost happens, it just  
> propagates up the stack and displays an error to the user. Not ideal,  
> by any means.

It's hard to apply in the general case, but I like the way Zope handles 
this using the per-request transaction machinery.

Basically, if any processing generates a "retry"able exception, all 
transactions attached to the request are rolled back and the entire 
request re-submitted.

This works really, really well for HTML<->SQL CRUD apps.

I can't see how Twisted could support that currently, given the 
deferToThread == 1 transaction nature of adbapi.


From phil at bubblehouse.org  Tue Aug 25 11:29:32 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 25 Aug 2009 11:29:32 -0400
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A94026F.2090203@imperial.ac.uk>
References: <4A645A66.1000301@arimaz.com>
	<4A662D80.1060009@thiengineering.ch>	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>	<4A66B2ED.3090503@arimaz.com>	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
Message-ID: <4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>

On Aug 25, 2009, at 11:25 AM, Phil Mayers wrote:
> Phil Christensen wrote:
>> Honestly, I have never actually solved it. I pretty much only write
>> webapps these days, so when a ConnectionLost happens, it just
>> propagates up the stack and displays an error to the user. Not ideal,
>> by any means.
>
> It's hard to apply in the general case, but I like the way Zope  
> handles
> this using the per-request transaction machinery.
>
> Basically, if any processing generates a "retry"able exception, all
> transactions attached to the request are rolled back and the entire
> request re-submitted.

That's definitely the preferable solution, but an additional problem  
is you still can't use transactions with MyISAM-backed tables.

Yeah yeah, we should be using postgres, sqllite, or even InnoDB ;-)

Of course sometimes that's just not an option...

-phil


From mlbright at gmail.com  Wed Aug 26 16:56:55 2009
From: mlbright at gmail.com (Martin-Louis Bright)
Date: Wed, 26 Aug 2009 16:56:55 -0400
Subject: [Twisted-Python] deciding to use twisted or not
Message-ID: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>

Hi!

I would like to write a small daemon that monitors (tails) a server log,
parses the entries and sends HTTP requests based on some of those entries. I
would like it if the reading of the log file and the sending of http
requests were asynchronous. Should I use twisted for this? Or is twisted
overkill...

Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090826/3a2340c3/attachment.htm 

From clay.gerrard at rackspace.com  Wed Aug 26 17:49:51 2009
From: clay.gerrard at rackspace.com (Clay Gerrard)
Date: Wed, 26 Aug 2009 16:49:51 -0500
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
	<4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
Message-ID: <18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>

I see this issue (ConnectionLost on MySQL) come up at least once a month.  It's actually the reason I originally joined this discussion list, but I've yet to see a wholly satisfactory solution.

Since there is no one true perfect generic way to safely rerun a failed interaction after ConnectionLost - the smart thing to do is just raise the exception and let the application deal with (or bomb out on) what *should* be a rare occurrence indicating some sort of problem.  

adabapi does exactly this.

However, with MySQL (>=v5.0 at least) you HAVE to make plans to deal with ConnectionLost (or "MySQL server has gone away" if cp_reconnect != True) or your twisted app WILL be quite broken.  Unfortunately, there's no obvious way to separate a real connection "problem" from the perfectly normal behavior of the MySQL server closing an idle connection without making your code provider specific.
e.g.
from MySQLdb import OperationalError

I've seen (and even begrudgingly implemented) non provider specific solutions that just create a new connection every time, or that qualify connections returned from the pool with "good_sql" before handing them over to the app.  But, that overhead is obviously not acceptable in many situations.

I suggest "the right way(tm)" to fix this is with an optional pool_recycle kwarg that sets the maximum time that a connection can be reused before it must be recycled (many ORM's provide precedent for this solution - sqlalchemy, dajngo.db, etc.)

reconnectionpool.py

'''
Created on Aug 26, 2009

@author: clayg
'''

from time import time

from twisted.enterprise import adbapi
from twisted.python import log

class ReConnectionPool(adbapi.ConnectionPool):
    '''
    subclass of adbapi.ConnectionPool that supports pool_recycle
    pool_recycle disabled by default (-1)
    '''


    def __init__(self, *args, **kwargs):
        self.pool_recycle = kwargs.pop('pool_recycle', -1)
        self.conn_starttime = {} # connections starttime, hashed on thread id
        adbapi.ConnectionPool.__init__(self, *args, **kwargs)
    
    def connect(self, *args, **kwargs):
        # ask ConnectionPool for a connection
        conn = adbapi.ConnectionPool.connect(self, *args, **kwargs)
        # if pool_recycling is enabled
        if self.pool_recycle > -1:
            # get the start time for this connection
            tid = self.threadID()
            starttime = self.conn_starttime.get(tid)
            now = time()
            if not starttime:
                # init starttime for new conn
                self.conn_starttime[tid] = starttime = now
                log.msg("Connection %s was created at %s." % (tid, now))
                
            # if the connection is older than limit in pool_recycle
            if (now - starttime >= self.pool_recycle):
                self.disconnect(conn)
                log.msg("Connection %s was recycled at %s." % (tid, now))
                conn = adbapi.ConnectionPool.connect(self, *args, **kwargs)
                self.conn_starttime[tid] = now
            
        return conn

I think it be quite a bit less messy if it was implemented inside the ConnectionPool class instead of a subclass.  Someone else could probably do a much better job than I, although I wouldn't mind taking a crack at it.

Thoughts?

Clay Gerrard
Office: 210-312-3443
Mobile: 210-788-9431

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Phil Christensen
Sent: Tuesday, August 25, 2009 10:30 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT

On Aug 25, 2009, at 11:25 AM, Phil Mayers wrote:
> Phil Christensen wrote:
>> Honestly, I have never actually solved it. I pretty much only write
>> webapps these days, so when a ConnectionLost happens, it just
>> propagates up the stack and displays an error to the user. Not ideal,
>> by any means.
>
> It's hard to apply in the general case, but I like the way Zope  
> handles
> this using the per-request transaction machinery.
>
> Basically, if any processing generates a "retry"able exception, all
> transactions attached to the request are rolled back and the entire
> request re-submitted.

That's definitely the preferable solution, but an additional problem  
is you still can't use transactions with MyISAM-backed tables.

Yeah yeah, we should be using postgres, sqllite, or even InnoDB ;-)

Of course sometimes that's just not an option...

-phil

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Confidentiality Notice: This e-mail message (including any attached or
embedded documents) is intended for the exclusive and confidential use of the
individual or entity to which this message is addressed, and unless otherwise
expressly indicated, is confidential and privileged information of Rackspace. 
Any dissemination, distribution or copying of the enclosed material is prohibited.
If you receive this transmission in error, please notify us immediately by e-mail
at abuse at rackspace.com, and delete the original message. 
Your cooperation is appreciated.



From exarkun at twistedmatrix.com  Wed Aug 26 18:25:58 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 26 Aug 2009 22:25:58 -0000
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
	<4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
	<18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <20090826222558.11298.2068421709.divmod.xquotient.71@localhost.localdomain>

On 09:49 pm, clay.gerrard at rackspace.com wrote:
>I see this issue (ConnectionLost on MySQL) come up at least once a 
>month.  It's actually the reason I originally joined this discussion 
>list, but I've yet to see a wholly satisfactory solution.
>
>Since there is no one true perfect generic way to safely rerun a failed 
>interaction after ConnectionLost - the smart thing to do is just raise 
>the exception and let the application deal with (or bomb out on) what 
>*should* be a rare occurrence indicating some sort of problem.
>
>adabapi does exactly this.
>
>However, with MySQL (>=v5.0 at least) you HAVE to make plans to deal 
>with ConnectionLost (or "MySQL server has gone away" if cp_reconnect != 
>True) or your twisted app WILL be quite broken.  Unfortunately, there's 
>no obvious way to separate a real connection "problem" from the 
>perfectly normal behavior of the MySQL server closing an idle 
>connection without making your code provider specific.
>e.g.
>from MySQLdb import OperationalError
>
>I've seen (and even begrudgingly implemented) non provider specific 
>solutions that just create a new connection every time, or that qualify 
>connections returned from the pool with "good_sql" before handing them 
>over to the app.  But, that overhead is obviously not acceptable in 
>many situations.
>
>I suggest "the right way(tm)" to fix this is with an optional 
>pool_recycle kwarg that sets the maximum time that a connection can be 
>reused before it must be recycled (many ORM's provide precedent for 
>this solution - sqlalchemy, dajngo.db, etc.)

Is this irrespective of idle time?  It sounds like not, though the MySQL 
idle timeout is the motivation you mention above.
>
>reconnectionpool.py
>
>'''
>Created on Aug 26, 2009
>
>@author: clayg
>'''
>
>from time import time
>
>from twisted.enterprise import adbapi
>from twisted.python import log
>
>class ReConnectionPool(adbapi.ConnectionPool):
>    '''
>    subclass of adbapi.ConnectionPool that supports pool_recycle
>    pool_recycle disabled by default (-1)
>    '''
>
>
>    def __init__(self, *args, **kwargs):
>        self.pool_recycle = kwargs.pop('pool_recycle', -1)
>        self.conn_starttime = {} # connections starttime, hashed on 
>thread id
>        adbapi.ConnectionPool.__init__(self, *args, **kwargs)
>
>    def connect(self, *args, **kwargs):
>        # ask ConnectionPool for a connection
>        conn = adbapi.ConnectionPool.connect(self, *args, **kwargs)
>        # if pool_recycling is enabled
>        if self.pool_recycle > -1:
>            # get the start time for this connection
>            tid = self.threadID()
>            starttime = self.conn_starttime.get(tid)
>            now = time()
>            if not starttime:
>                # init starttime for new conn
>                self.conn_starttime[tid] = starttime = now
>                log.msg("Connection %s was created at %s." % (tid, now))
>
>            # if the connection is older than limit in pool_recycle
>            if (now - starttime >= self.pool_recycle):
>                self.disconnect(conn)
>                log.msg("Connection %s was recycled at %s." % (tid, 
>now))
>                conn = adbapi.ConnectionPool.connect(self, *args, 
>**kwargs)
>                self.conn_starttime[tid] = now
>
>        return conn
>
>I think it be quite a bit less messy if it was implemented inside the 
>ConnectionPool class instead of a subclass.  Someone else could 
>probably do a much better job than I, although I wouldn't mind taking a 
>crack at it.
>
>Thoughts?

This could be a cool feature.  I'm sure a lot of people would certainly 
be happy for there to be a simple answer to the monthly MySQL question 
you referred to above.

Some random thoughts:

  * you should use the reactor to keep track of time - reactor.seconds() 
should someday actually be more reliable than time.time() (but it's the 
same today); also, parameterize the reactor and use reactor.seconds() 
and the code is more easily testable.
  * this will throw reconnect overhead in front of whichever query 
happens to get issued to a thread which has a connection which needs to 
be recycled.  If it avoids a connection lost error, that's great; if it 
doesn't, then it's just overhead.  This, combined with the fact that 
queries are dispatched to basically a random connection, might not be 
too nice.  It could be cool to do the reconnecting more proactively in 
idle threads and improve the dispatch logic to give preference to fresh, 
available connections when possible.
  * tests tests tests ;)

Jean-Paul


From clay.gerrard at rackspace.com  Wed Aug 26 19:08:30 2009
From: clay.gerrard at rackspace.com (Clay Gerrard)
Date: Wed, 26 Aug 2009 18:08:30 -0500
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <20090826222558.11298.2068421709.divmod.xquotient.71@localhost.localdomain>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
	<4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
	<18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>
	<20090826222558.11298.2068421709.divmod.xquotient.71@localhost.localdomain>
Message-ID: <30396_1251328118_n7QN8W2g021582_5DA4635225CBE24FB33D34EFB6C5304714B31409A0@DFW1MXM01.RACKSPACE.CORP>

The way that sqlalchemy implements pool_recycle is "irrespective of idle time" best I can tell from looking at it.  Keeping track of the last_used_time seems like it would have been equally reasonable, although perhaps even additional overhead.

I'm not sure I understand what you mean by "parameterize the reactor" - pass it as an argument when you initialize the (Re)ConnectionPool?  Can you point me to a twisted class that does this as an example?

I agree it would be very cool "to do the reconnecting more proactively in idle threads" - I'll have to think on that, do you know off-hand of any analogs?

Thanks for the feedback,

Clay Gerrard
Office: 210-312-3443
Mobile: 210-788-9431

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
Sent: Wednesday, August 26, 2009 5:26 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT

On 09:49 pm, clay.gerrard at rackspace.com wrote:
>I see this issue (ConnectionLost on MySQL) come up at least once a 
>month.  It's actually the reason I originally joined this discussion 
>list, but I've yet to see a wholly satisfactory solution.
>
>Since there is no one true perfect generic way to safely rerun a failed 
>interaction after ConnectionLost - the smart thing to do is just raise 
>the exception and let the application deal with (or bomb out on) what 
>*should* be a rare occurrence indicating some sort of problem.
>
>adabapi does exactly this.
>
>However, with MySQL (>=v5.0 at least) you HAVE to make plans to deal 
>with ConnectionLost (or "MySQL server has gone away" if cp_reconnect != 
>True) or your twisted app WILL be quite broken.  Unfortunately, there's 
>no obvious way to separate a real connection "problem" from the 
>perfectly normal behavior of the MySQL server closing an idle 
>connection without making your code provider specific.
>e.g.
>from MySQLdb import OperationalError
>
>I've seen (and even begrudgingly implemented) non provider specific 
>solutions that just create a new connection every time, or that qualify 
>connections returned from the pool with "good_sql" before handing them 
>over to the app.  But, that overhead is obviously not acceptable in 
>many situations.
>
>I suggest "the right way(tm)" to fix this is with an optional 
>pool_recycle kwarg that sets the maximum time that a connection can be 
>reused before it must be recycled (many ORM's provide precedent for 
>this solution - sqlalchemy, dajngo.db, etc.)

Is this irrespective of idle time?  It sounds like not, though the MySQL 
idle timeout is the motivation you mention above.
>
>reconnectionpool.py
>
>'''
>Created on Aug 26, 2009
>
>@author: clayg
>'''
>
>from time import time
>
>from twisted.enterprise import adbapi
>from twisted.python import log
>
>class ReConnectionPool(adbapi.ConnectionPool):
>    '''
>    subclass of adbapi.ConnectionPool that supports pool_recycle
>    pool_recycle disabled by default (-1)
>    '''
>
>
>    def __init__(self, *args, **kwargs):
>        self.pool_recycle = kwargs.pop('pool_recycle', -1)
>        self.conn_starttime = {} # connections starttime, hashed on 
>thread id
>        adbapi.ConnectionPool.__init__(self, *args, **kwargs)
>
>    def connect(self, *args, **kwargs):
>        # ask ConnectionPool for a connection
>        conn = adbapi.ConnectionPool.connect(self, *args, **kwargs)
>        # if pool_recycling is enabled
>        if self.pool_recycle > -1:
>            # get the start time for this connection
>            tid = self.threadID()
>            starttime = self.conn_starttime.get(tid)
>            now = time()
>            if not starttime:
>                # init starttime for new conn
>                self.conn_starttime[tid] = starttime = now
>                log.msg("Connection %s was created at %s." % (tid, now))
>
>            # if the connection is older than limit in pool_recycle
>            if (now - starttime >= self.pool_recycle):
>                self.disconnect(conn)
>                log.msg("Connection %s was recycled at %s." % (tid, 
>now))
>                conn = adbapi.ConnectionPool.connect(self, *args, 
>**kwargs)
>                self.conn_starttime[tid] = now
>
>        return conn
>
>I think it be quite a bit less messy if it was implemented inside the 
>ConnectionPool class instead of a subclass.  Someone else could 
>probably do a much better job than I, although I wouldn't mind taking a 
>crack at it.
>
>Thoughts?

This could be a cool feature.  I'm sure a lot of people would certainly 
be happy for there to be a simple answer to the monthly MySQL question 
you referred to above.

Some random thoughts:

  * you should use the reactor to keep track of time - reactor.seconds() 
should someday actually be more reliable than time.time() (but it's the 
same today); also, parameterize the reactor and use reactor.seconds() 
and the code is more easily testable.
  * this will throw reconnect overhead in front of whichever query 
happens to get issued to a thread which has a connection which needs to 
be recycled.  If it avoids a connection lost error, that's great; if it 
doesn't, then it's just overhead.  This, combined with the fact that 
queries are dispatched to basically a random connection, might not be 
too nice.  It could be cool to do the reconnecting more proactively in 
idle threads and improve the dispatch logic to give preference to fresh, 
available connections when possible.
  * tests tests tests ;)

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Confidentiality Notice: This e-mail message (including any attached or
embedded documents) is intended for the exclusive and confidential use of the
individual or entity to which this message is addressed, and unless otherwise
expressly indicated, is confidential and privileged information of Rackspace.
Any dissemination, distribution or copying of the enclosed material is prohibited.
If you receive this transmission in error, please notify us immediately by e-mail
at abuse at rackspace.com, and delete the original message.
Your cooperation is appreciated.



From glyph at twistedmatrix.com  Wed Aug 26 21:41:27 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 26 Aug 2009 21:41:27 -0400
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
Message-ID: <d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>

On Wed, Aug 26, 2009 at 4:56 PM, Martin-Louis Bright <mlbright at gmail.com>wrote:

> I would like to write a small daemon that monitors (tails) a server log,
> parses the entries and sends HTTP requests based on some of those entries. I
> would like it if the reading of the log file and the sending of http
> requests were asynchronous. Should I use twisted for this? Or is twisted
> overkill...
>
Twisted would be perfectly appropriate for this!  The HTTP requests will
certainly be non-blocking, assuming you use twisted.web.client (or the new,
better thing which I hope will be released before we all get old).

In fact, if anything, Twisted is under-kill; you'll need to go a bit
further.  The one minor issue is that Twisted has no explicit way to do
asynchronous file I/O (because most operating systems provide a bewildering
array of not-really-working systems for non-blocking file I/O, so it would
be challenging for Twisted to do in a way that was useful).  There are a
number of ways to emulate it though; for log files (which are fairly low
volume, and almost by definition will immediately be in your filesystem
cache as the parts you want to read become available) you can just do a
LoopingCall() which does .read() on a file that it leaves open to retrieve
the next chunk of data, and that will probably be good enough.  In practice
you won't actually block doing this read() because your kernel is just going
to pull the bytes directly out of filesystem cache memory and hand them back
to you.  It is of course possible to have to wait for the disk or even the
network, depending on your underlying filesystem.

I just filed http://twistedmatrix.com/trac/ticket/3983 for a more thorough
solution (mostly in the hopes that somebody will close it as a duplicate and
point to some pre-existing issue I couldn't find through search) so you can
monitor future discussion there if you like.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090826/076162d0/attachment-0001.htm 

From cary.hull at gmail.com  Wed Aug 26 21:54:04 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Wed, 26 Aug 2009 18:54:04 -0700
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
Message-ID: <3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>

On Wed, Aug 26, 2009 at 6:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On Wed, Aug 26, 2009 at 4:56 PM, Martin-Louis Bright <mlbright at gmail.com>wrote:
>
>> I would like to write a small daemon that monitors (tails) a server log,
>> parses the entries and sends HTTP requests based on some of those entries. I
>> would like it if the reading of the log file and the sending of http
>> requests were asynchronous. Should I use twisted for this? Or is twisted
>> overkill...
>>
> Twisted would be perfectly appropriate for this!  The HTTP requests will
> certainly be non-blocking, assuming you use twisted.web.client (or the new,
> better thing which I hope will be released before we all get old).
>
> In fact, if anything, Twisted is under-kill; you'll need to go a bit
> further.  The one minor issue is that Twisted has no explicit way to do
> asynchronous file I/O (because most operating systems provide a bewildering
> array of not-really-working systems for non-blocking file I/O, so it would
> be challenging for Twisted to do in a way that was useful).  There are a
> number of ways to emulate it though; for log files (which are fairly low
> volume, and almost by definition will immediately be in your filesystem
> cache as the parts you want to read become available) you can just do a
> LoopingCall() which does .read() on a file that it leaves open to retrieve
> the next chunk of data, and that will probably be good enough.  In practice
> you won't actually block doing this read() because your kernel is just going
> to pull the bytes directly out of filesystem cache memory and hand them back
> to you.  It is of course possible to have to wait for the disk or even the
> network, depending on your underlying filesystem.
>
> I just filed http://twistedmatrix.com/trac/ticket/3983 for a more thorough
> solution (mostly in the hopes that somebody will close it as a duplicate and
> point to some pre-existing issue I couldn't find through search) so you can
> monitor future discussion there if you like.
>

It would certainly be nice if Twisted supported async file io, but in this
case wouldn't a ProcessProtocol around 'tail -f' be a good solution as well?

-Cary


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090826/f9082060/attachment.htm 

From glyph at twistedmatrix.com  Wed Aug 26 22:08:48 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 26 Aug 2009 22:08:48 -0400
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
Message-ID: <d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>

On Wed, Aug 26, 2009 at 9:54 PM, Cary Hull <cary.hull at gmail.com> wrote:

> It would certainly be nice if Twisted supported async file io, but in this
> case wouldn't a ProcessProtocol around 'tail -f' be a good solution as well?
>

That could work, but there are a few potential issues.  'tail' does slightly
different stuff on different platforms.  Maybe you're on Windows and it
isn't available.  Maybe it mangles your output (I know that some coreutils
tools try to be encoding-aware, I don't know if 'tail' is one).  Maybe you
want to get blocks of bytes off the end rather than lines, etc.  Then you
also need to worry about housekeeping for a subprocess, which always turns
out to be a little trickier than you first expect.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090826/560e3988/attachment.htm 

From mlbright at gmail.com  Wed Aug 26 22:46:24 2009
From: mlbright at gmail.com (Martin-Louis Bright)
Date: Wed, 26 Aug 2009 22:46:24 -0400
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
	<d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
Message-ID: <3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>

Thanks! Your advice is much appreciated.

martin

On Wed, Aug 26, 2009 at 10:08 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

> On Wed, Aug 26, 2009 at 9:54 PM, Cary Hull <cary.hull at gmail.com> wrote:
>
>> It would certainly be nice if Twisted supported async file io, but in this
>> case wouldn't a ProcessProtocol around 'tail -f' be a good solution as well?
>>
>
> That could work, but there are a few potential issues.  'tail' does
> slightly different stuff on different platforms.  Maybe you're on Windows
> and it isn't available.  Maybe it mangles your output (I know that some
> coreutils tools try to be encoding-aware, I don't know if 'tail' is one).
>  Maybe you want to get blocks of bytes off the end rather than lines, etc.
>  Then you also need to worry about housekeeping for a subprocess, which
> always turns out to be a little trickier than you first expect.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090826/74b1844a/attachment.htm 

From chris at stemcel.co.uk  Thu Aug 27 08:11:46 2009
From: chris at stemcel.co.uk (Chris Adams)
Date: Thu, 27 Aug 2009 13:11:46 +0100
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
	<d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
	<3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>
Message-ID: <4120a220908270511l7798458ak870c6c81176aa77d@mail.gmail.com>

If you're using a linux based system, you may have some luck setting
up syslogger to forward logging packets to the remote ip address, and
running the twisted daemon on the other box, and sending notifications
if the heartbeat from the monitored machine stops.

I was working on a project recently to set up a monitor a RFID based
access control system for building, that runs on
twisted/openwrt/linux, we used an approach like this.

The link below shows a sample twisted python file that runs on a
monitoring machine.

http://github.com/derfred/doord/blob/cd300a1cde930c07cd13d98be3e45cb89df79809/log_watcher.py


From lvh at laurensvh.be  Thu Aug 27 09:31:24 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 27 Aug 2009 15:31:24 +0200
Subject: [Twisted-Python] twisted.positioning progress report
Message-ID: <cedc0c090908270631x5cc2d283ucdcfc1087b12b6cc@mail.gmail.com>

Time for a little show and tell :-) Watch as line noise gets
transformed into beautiful Python structures:

http://paste.pocoo.org/show/136539/

Yay.

Still to do:
    - A bit of documentation here and there, some of this NMEA stuff
is far too arcane to be docstringless
    - A few methods need removing, PositioningError should contain all
of the PositioningErrors really
    - Writing the lore docs (man, I hate that)
    - A bit of the stateful updates need to be moved around a bit
    - A factory for creating these

The advantage is that all except the second point will not
significantly change the API anymore. Yay!

(if you see something in that output you really dont like now would be
a good time to tell me)

The code, as always, is available in the usual places (launchpad
branch: https://code.launchpad.net/~lvh/twisted/positioning)

enjoy
Laurens


From artman328 at gmail.com  Thu Aug 27 09:33:42 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Thu, 27 Aug 2009 21:33:42 +0800
Subject: [Twisted-Python] A C/S Application over Internet
Message-ID: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>

Hi,
I want to develop an C/S app over internet using twisted Perspective Broker.
The server will run as a windows service, and the clients will be wxPython
desktop applications.
Has anyone done the same thing or known the trick to do it?   Shoud I use PB
or Pyro or SPyro? Which is the best?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090827/3c1540d3/attachment.htm 

From exarkun at twistedmatrix.com  Thu Aug 27 09:46:00 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 27 Aug 2009 13:46:00 -0000
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <30396_1251328118_n7QN8W2g021582_5DA4635225CBE24FB33D34EFB6C5304714B31409A0@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
	<4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
	<18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>
	<20090826222558.11298.2068421709.divmod.xquotient.71@localhost.localdomain>
	<30396_1251328118_n7QN8W2g021582_5DA4635225CBE24FB33D34EFB6C5304714B31409A0@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <20090827134600.7475.1532722245.divmod.xquotient.24@localhost.localdomain>

On 26 Aug, 11:08 pm, clay.gerrard at rackspace.com wrote:
>The way that sqlalchemy implements pool_recycle is "irrespective of 
>idle time" best I can tell from looking at it.  Keeping track of the 
>last_used_time seems like it would have been equally reasonable, 
>although perhaps even additional overhead.

It probably wouldn't be much more overhead.  The important question to 
consider is whether SQLAlchemy (and whoever else) had another good 
reason for doing it the way they do it.  Is monitoring idle time not 
sufficient for some systems?
>
>I'm not sure I understand what you mean by "parameterize the reactor" - 
>pass it as an argument when you initialize the (Re)ConnectionPool?  Can 
>you point me to a twisted class that does this as an example?

Yep, that's what I meant.  You can find examples of this in some of the 
newer code in Twisted (as we only started to encourage it relatively 
recently).  One example is twisted.web.wsgi.WSGIResource; another is 
twisted.internet.task.deferLater.
>
>I agree it would be very cool "to do the reconnecting more proactively 
>in idle threads" - I'll have to think on that, do you know off-hand of 
>any analogs?

Hm.  I can't think of any analogs, no.  I hope the implementation would 
be straightforward, though.  The connection pool can use 
reactor.callLater in the main thread to force old connections to be re- 
established, and it can take those connections out of the lineup while 
it's doing that, to make sure no queries are dispatched to them.  One 
tricky part, though, may be ensuring that a connection isn't actively 
servicing a query when time comes to recycle it.  The thread pool used 
by the connection pool may not currently have the features required for 
this (it doesn't allow messages to be directed at specific threads, for 
example).

This feature may also not be terribly important.  I don't know what the 
reconnect overhead actually is.

Jean-Paul


From mlbright at gmail.com  Thu Aug 27 09:48:58 2009
From: mlbright at gmail.com (Martin-Louis Bright)
Date: Thu, 27 Aug 2009 09:48:58 -0400
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <4120a220908270511l7798458ak870c6c81176aa77d@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
	<d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
	<3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>
	<4120a220908270511l7798458ak870c6c81176aa77d@mail.gmail.com>
Message-ID: <3055c0a0908270648n68863bfcmd093ffb3b94f190c@mail.gmail.com>

I am using linux, and I want the daemon to be as responsive as possible to
log events, so I think I would rather have it sit on the same box as where
the log is produced. (Perhaps I'm wrong about this?) So I'm going to try
Cary's ProcessProtocol approach, and if that doesn't work, Glyph's
LoopingCall with a read() approach.
Thanks for the link.

-martin

On Thu, Aug 27, 2009 at 8:11 AM, Chris Adams <chris at stemcel.co.uk> wrote:

> If you're using a linux based system, you may have some luck setting
> up syslogger to forward logging packets to the remote ip address, and
> running the twisted daemon on the other box, and sending notifications
> if the heartbeat from the monitored machine stops.
>
> I was working on a project recently to set up a monitor a RFID based
> access control system for building, that runs on
> twisted/openwrt/linux, we used an approach like this.
>
> The link below shows a sample twisted python file that runs on a
> monitoring machine.
>
>
> http://github.com/derfred/doord/blob/cd300a1cde930c07cd13d98be3e45cb89df79809/log_watcher.py
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090827/53716e30/attachment-0001.htm 

From exarkun at twistedmatrix.com  Thu Aug 27 09:52:31 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 27 Aug 2009 13:52:31 -0000
Subject: [Twisted-Python] Re : Telnet server using Twisted
	and	AuthenticatingTelnetProtocol
In-Reply-To: <140670.22919.qm@web26108.mail.ukl.yahoo.com>
References: <986632.28669.qm@web26103.mail.ukl.yahoo.com>
	<20090820164821.7726.1422282903.divmod.xquotient.79@localhost.localdomain>
	<140670.22919.qm@web26108.mail.ukl.yahoo.com>
Message-ID: <20090827135231.7475.428699872.divmod.xquotient.36@localhost.localdomain>

On 24 Aug, 11:07 pm, filoufake-python at yahoo.fr wrote:
>Thank you Jean-Paul for replying,
>
>I still have some things that I don't understand:
>
>If I put your piece of code in my factory's protocol, I can connect to 
>the server but as soon as I enter the username, I got the an error 
>message telling that Server doesn't support "will" ('Server' object has 
>no attribute 'will').

That means you've hooked up a telnet protocol to a tcp transport, rather 
than a telnet transport.  The telnet transport sits between these two 
things and adds features like "will" negotiation; it also is in charge 
of actually interpreting telnet command sequences received from the 
network and turning them into calls onto your telnet protocol instance. 
Without the telnet transport, the telnet protocol just gets raw data.
>[snip]
>
>I understand that this has something to do with TelnetTranport but how 
>to implement it?
>I read the telnet_echo.tac but in my case I have to manage the portal 
>also and that is a litle bit too complex for me.

If necessary, you can pass arguments to your telnet protocol. 
telnet_echo.tac
uses "lambda: TelnetTransport(TelnetEcho)" as its protocol.  If 
TelnetEcho took an argument to __init__, though, you could supply it by 
using this as your protocol instead: "lambda: 
TelnetTransport(TelnetEcho, foo)".

Does that help?
>
>You say also that AuthenticatingTelnetProtocol  expects to be connected 
>to an ITelnetTransport, but the documentation says "When the 
>information is collected, it is passed to a portal and an avatar
>implementing ITelnetProtocol is requested".
>I'm lost.

AuthenticatingTelnetProtocol is an ITelnetProtocol implementation.  So, 
it needs to be hooked up to an ITelnetTransport implementation, as all 
ITelnetProtocol implementations need to.

However, since the only thing it knows how to do is handle 
authentication, it also wants to get /another/ ITelnetProtocol 
implementation out of the portal you give it.  After authentication 
succeeds, that new ITelnetProtocol implementation will be given control 
of the connection and the AuthenticatingTelnetProtocol will get out of 
the way.

So you end up with one telnet transport and two telnet protocols.

Jean-Paul


From phil at bubblehouse.org  Thu Aug 27 10:26:27 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 27 Aug 2009 10:26:27 -0400
Subject: [Twisted-Python] A C/S Application over Internet
In-Reply-To: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
References: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
Message-ID: <25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>

On Aug 27, 2009, at 9:33 AM, ??? wrote:
> I want to develop an C/S app over internet using twisted Perspective  
> Broker. The server will run as a windows service, and the clients  
> will be wxPython desktop applications.
> Has anyone done the same thing or known the trick to do it?   Shoud  
> I use PB or Pyro or SPyro? Which is the best?

I started with Pyro on a project years ago, and ended up switching to  
PB in short order. I was less familiar with Twisted at the time, but I  
still found PB to be superior. Of course, I haven't paid attention to  
Pyro in years and know virtually nothing of SPyro.

Of course, you are coming into a Twisted list and asking if you should  
use Twisted or something else, so my response is naturally a little  
biased. ;-)

-phil

From artman328 at gmail.com  Thu Aug 27 10:57:24 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Thu, 27 Aug 2009 22:57:24 +0800
Subject: [Twisted-Python] A C/S Application over Internet
In-Reply-To: <25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>
References: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
	<25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>
Message-ID: <781411b30908270757s112e5d8blb2047a719fc83eed@mail.gmail.com>

Thank you, Phil.

Pyro has many examples, so I can understand it easily. I know Twisted is
great. I think your "switching" must mean something :) .
So I decide to use twisted PB.

2009/8/27 Phil Christensen <phil at bubblehouse.org>

> On Aug 27, 2009, at 9:33 AM, ??? wrote:
> > I want to develop an C/S app over internet using twisted Perspective
> > Broker. The server will run as a windows service, and the clients
> > will be wxPython desktop applications.
> > Has anyone done the same thing or known the trick to do it?   Shoud
> > I use PB or Pyro or SPyro? Which is the best?
>
> I started with Pyro on a project years ago, and ended up switching to
> PB in short order. I was less familiar with Twisted at the time, but I
> still found PB to be superior. Of course, I haven't paid attention to
> Pyro in years and know virtually nothing of SPyro.
>
> Of course, you are coming into a Twisted list and asking if you should
> use Twisted or something else, so my response is naturally a little
> biased. ;-)
>
> -phil
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090827/37e349d3/attachment.htm 

From phil at bubblehouse.org  Thu Aug 27 12:03:27 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 27 Aug 2009 12:03:27 -0400
Subject: [Twisted-Python] A C/S Application over Internet
In-Reply-To: <781411b30908270757s112e5d8blb2047a719fc83eed@mail.gmail.com>
References: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
	<25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>
	<781411b30908270757s112e5d8blb2047a719fc83eed@mail.gmail.com>
Message-ID: <2522177F-4336-4F7B-80DB-DFB361192349@bubblehouse.org>

On Aug 27, 2009, at 10:57 AM, ??? wrote:
> Thank you, Phil.
>
> Pyro has many examples, so I can understand it easily. I know  
> Twisted is great. I think your "switching" must mean something :) .
> So I decide to use twisted PB.


Great!

I also remembered one thing that I found was extremely useful when  
dealing with a GUI app that communicates over PB. Since PB assumes  
every remote method call will take an arbitrary amount of time to  
execute, you can delay the response from the client as long as you need.

For example, let's say the server sends a block of text to the client  
for editing. Your client-side function can create a Deferred, hold a  
reference to it somewhere, and return that from the client function.

PB won't actually send a response until you invoke the callback()  
method on that Deferred, so you can pop open a GUI window, let the  
user edit the text (or just sit there staring at it for an hour), and  
then trigger the callback when the user hits 'Save'.

Very useful, although I wrote some incredibly stupid code to emulate  
this long before I realized how easy it was ;-)

-phil

From termim at gmail.com  Thu Aug 27 12:19:19 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 27 Aug 2009 16:19:19 +0000 (UTC)
Subject: [Twisted-Python] deciding to use twisted or not
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
	<d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
	<3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>
	<4120a220908270511l7798458ak870c6c81176aa77d@mail.gmail.com>
	<3055c0a0908270648n68863bfcmd093ffb3b94f190c@mail.gmail.com>
Message-ID: <loom.20090827T181848-915@post.gmane.org>

Martin-Louis Bright <mlbright <at> gmail.com> writes:

> 
> 
> I am using linux, and I want the daemon to be as responsive as possible to log
events, so I think I would rather have it sit on the same box as where the log
is produced. (Perhaps I'm wrong about this?) So I'm going to try Cary's
ProcessProtocol approach, and if that doesn't work, Glyph's LoopingCall with a
read() approach.
> 

You can also use pyinotify to watch your log file changes.
http://trac.dbzteam.org/pyinotify

Regards,
Mikhail




From konrads at smelkovs.com  Thu Aug 27 14:30:19 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Thu, 27 Aug 2009 21:30:19 +0300
Subject: [Twisted-Python] How to capture output from transport of
	HTTPClientFactory?
Message-ID: <d79700b90908271130q2c67ef5bgcc35becf2dd67513@mail.gmail.com>

Hi,
HTTPClientFactory uses self.transport to do reads/writes. I would like to
have a copy of all data in and out for debugging/logging purposes.
How to do that (best?)?
--
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090827/09fd433e/attachment.htm 

From exarkun at twistedmatrix.com  Thu Aug 27 15:13:23 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 27 Aug 2009 19:13:23 -0000
Subject: [Twisted-Python] How to capture output from transport
	of	HTTPClientFactory?
In-Reply-To: <d79700b90908271130q2c67ef5bgcc35becf2dd67513@mail.gmail.com>
References: <d79700b90908271130q2c67ef5bgcc35becf2dd67513@mail.gmail.com>
Message-ID: <20090827191323.7475.363280842.divmod.xquotient.56@localhost.localdomain>

On 06:30 pm, konrads at smelkovs.com wrote:
>Hi,
>HTTPClientFactory uses self.transport to do reads/writes. I would like 
>to
>have a copy of all data in and out for debugging/logging purposes.
>How to do that (best?)?

twisted.protocols.policies.TrafficLoggingFactory may do what you want.

Jean-Paul


From ddwiggins at advpubtech.com  Thu Aug 27 16:00:40 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 27 Aug 2009 13:00:40 -0700
Subject: [Twisted-Python] Some way for Trial to allow selective running of
	tests?
Message-ID: <h76ol9$vfg$1@ger.gmane.org>

I've been successfully and happily using Trial for a while now for 
development of a server.  I have many tests at this point; during 
development of a new feature, I'd like to have a convenient way to only 
run the tests relevant to that feature.

I'm hacking it at this point by prefixing the names of all unwanted 
tests with "foo" to keep them from being recognized.  Naturally, I'd 
like a better way to do this.  Any good words welcome.

-- 
Don Dwiggins
Advanced Publishing Technology



From phil at bubblehouse.org  Thu Aug 27 16:08:13 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 27 Aug 2009 16:08:13 -0400
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <h76ol9$vfg$1@ger.gmane.org>
References: <h76ol9$vfg$1@ger.gmane.org>
Message-ID: <63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>

On Aug 27, 2009, at 4:00 PM, Don Dwiggins wrote:
> I've been successfully and happily using Trial for a while now for
> development of a server.  I have many tests at this point; during
> development of a new feature, I'd like to have a convenient way to  
> only
> run the tests relevant to that feature.
>
> I'm hacking it at this point by prefixing the names of all unwanted
> tests with "foo" to keep them from being recognized.  Naturally, I'd
> like a better way to do this.  Any good words welcome.

trial takes an argument at the command-line where you can specify a  
package or test case.

for example:

	trial twisted
	trial twisted.test
	trial twisted.test.test_explorer
	trial twisted.test.test_explorer.TestBrowser
	trial twisted.test.test_explorer.TestBrowser.test_chain

lets you get more and more specific.

-phil


From ddwiggins at advpubtech.com  Thu Aug 27 16:32:42 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 27 Aug 2009 13:32:42 -0700
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
References: <h76ol9$vfg$1@ger.gmane.org>
	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
Message-ID: <h76qha$5ks$1@ger.gmane.org>

Phil Christensen wrote:
> trial takes an argument at the command-line where you can specify a  
> package or test case.
> 
> for example:
> 
> 	trial twisted
> 	trial twisted.test
> 	trial twisted.test.test_explorer
> 	trial twisted.test.test_explorer.TestBrowser
> 	trial twisted.test.test_explorer.TestBrowser.test_chain
> 
> lets you get more and more specific.
> 
> -phil

Sorry, I'm feeling dense.  I currently run it as
"trial MyServerTestFile.py"; it's not a package or part of one.  In the 
file are several classes, each with several test cases.  How would I 
adapt the above to my needs?

-- 
Don Dwiggins
Advanced Publishing Technology



From gabriel.rossetti at arimaz.com  Thu Aug 27 16:37:31 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 27 Aug 2009 22:37:31 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX but
 not	on linux
In-Reply-To: <1250155371.16747.13.camel@dwaal>
References: <4A819346.8090800@arimaz.com> <4A819C99.8030100@arimaz.com>
	<1250155371.16747.13.camel@dwaal>
Message-ID: <4A96EE8B.4020405@arimaz.com>

Ralph Meijer wrote:
> On Tue, 2009-08-11 at 18:30 +0200, Gabriel Rossetti wrote:
>   
>> [..]
>>     
>
> Apparently you modified the original example here:
>
>   
>> [..]
>>         connector = XMPPClientConnector(reactor, "10.204.232.117", f)
>>         connector.connect()
>>     
>
> This would never work properly. XMPPClientConnector is designed to do an
> SRV record look up on the /domain/ provided as its second argument. You
> pass an IP address here and that will just fail.
>
> The original example passes client_jid.host. This extracts the domain
> from the JID you want to connect with and then follows the procedure of
> first trying to find xmpp-server SRV records for that domain, and if
> that fails, try to connect to the host that the domain name resolves to,
> using the default port (5222), as outlined in RFC 3920. Note that
> XMPPClientConnector avoids the problems sketched in ticket #3456 that
> was mentioned by Jean-Paul.
>
> If you really want to connect to a specific host instead of following
> the above procedure, you can do this instead of the code quoted above:
>
>     reactor.connectTCP("10.204.232.117", 5222, f)
>
>   
Hmmm, ok, it works on linux and windows though, but I did as you said 
anyways as it's still flacky on mac. Thanks,
Gabriel

-- 
Arimaz SA
Ing?nieur en Informatique
Av. du 24 Janvier 11
Ateliers de la Ville de Renens, Atelier 5
1020 Renens, Switzerland
www.arimaz.com
www.mydeskfriend.com
Mob: +41-(0)79-539-0069
Tel: +41-(0)21-566-7343



From listsin at integrateddevcorp.com  Thu Aug 27 17:23:52 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 27 Aug 2009 17:23:52 -0400
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <h76ol9$vfg$1@ger.gmane.org>
References: <h76ol9$vfg$1@ger.gmane.org>
Message-ID: <C37AA23D-4466-484B-B88D-7A5EBD85C23F@integrateddevcorp.com>


On Aug 27, 2009, at 4:00 PM, Don Dwiggins wrote:

> I've been successfully and happily using Trial for a while now for
> development of a server.  I have many tests at this point; during
> development of a new feature, I'd like to have a convenient way to  
> only
> run the tests relevant to that feature.
>
> I'm hacking it at this point by prefixing the names of all unwanted
> tests with "foo" to keep them from being recognized.  Naturally, I'd
> like a better way to do this.  Any good words welcome.

I was just running into this yesterday and had actually pulled the  
code for the one thing I use trial for ( the emacs line @ the top of  
the file to specify unit tests) out to make a nose plug-in since nose  
allows lists of tests to be put into config files.

I'd love to have another way as I will need Trial for the Twisted part  
of my code later.

Thanks,

S



From listsin at integrateddevcorp.com  Thu Aug 27 17:26:04 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 27 Aug 2009 17:26:04 -0400
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
References: <h76ol9$vfg$1@ger.gmane.org>
	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
Message-ID: <9FEFA3D3-1EFE-40C9-86B0-D746D5FD942D@integrateddevcorp.com>


On Aug 27, 2009, at 4:08 PM, Phil Christensen wrote:

> On Aug 27, 2009, at 4:00 PM, Don Dwiggins wrote:
>> I've been successfully and happily using Trial for a while now for
>> development of a server.  I have many tests at this point; during
>> development of a new feature, I'd like to have a convenient way to
>> only
>> run the tests relevant to that feature.
>>
>> I'm hacking it at this point by prefixing the names of all unwanted
>> tests with "foo" to keep them from being recognized.  Naturally, I'd
>> like a better way to do this.  Any good words welcome.
>
> trial takes an argument at the command-line where you can specify a
> package or test case.
>
> for example:
>
> 	trial twisted
> 	trial twisted.test
> 	trial twisted.test.test_explorer
> 	trial twisted.test.test_explorer.TestBrowser
> 	trial twisted.test.test_explorer.TestBrowser.test_chain
>
> lets you get more and more specific.

Right, but, far as I can tell, you can only do one at a time.

I just want to run the list of ones I know are working even though  
there are many more written and waiting to be pulled in and debugged  
(one at a time).

IOW, I want to specify a list of tests to run out of many that match  
the file pattern.

S



From nbdarvin at gmail.com  Thu Aug 27 18:19:57 2009
From: nbdarvin at gmail.com (Darvin nb)
Date: Fri, 28 Aug 2009 01:19:57 +0300
Subject: [Twisted-Python] Telnet example
Message-ID: <e1552c8b0908271519h1ed01be0r80346e233a9e75f3@mail.gmail.com>

Can anybody tell me, is there telnet example written with Twisted?


From johann.borck at densedata.com  Thu Aug 27 18:59:53 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Fri, 28 Aug 2009 00:59:53 +0200
Subject: [Twisted-Python] Telnet example
In-Reply-To: <e1552c8b0908271519h1ed01be0r80346e233a9e75f3@mail.gmail.com>
References: <e1552c8b0908271519h1ed01be0r80346e233a9e75f3@mail.gmail.com>
Message-ID: <4A970FE9.9060009@densedata.com>

Darvin nb wrote:
> Can anybody tell me, is there telnet example written with Twisted?
>   
like twisted.conch.telnet ?

hth, Johann


From nbdarvin at gmail.com  Thu Aug 27 20:02:42 2009
From: nbdarvin at gmail.com (Darvin nb)
Date: Fri, 28 Aug 2009 03:02:42 +0300
Subject: [Twisted-Python] Telnet example
In-Reply-To: <4A970FE9.9060009@densedata.com>
References: <e1552c8b0908271519h1ed01be0r80346e233a9e75f3@mail.gmail.com>
	<4A970FE9.9060009@densedata.com>
Message-ID: <e1552c8b0908271702y41118279sbe90ab1da5302604@mail.gmail.com>

yes!

2009/8/28 Johann Borck <johann.borck at densedata.com>:
> Darvin nb wrote:
>> Can anybody tell me, is there telnet example written with Twisted?
>>
> like twisted.conch.telnet ?
>
> hth, Johann
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From artman328 at gmail.com  Thu Aug 27 20:16:21 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 08:16:21 +0800
Subject: [Twisted-Python] A C/S Application over Internet
In-Reply-To: <2522177F-4336-4F7B-80DB-DFB361192349@bubblehouse.org>
References: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
	<25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>
	<781411b30908270757s112e5d8blb2047a719fc83eed@mail.gmail.com>
	<2522177F-4336-4F7B-80DB-DFB361192349@bubblehouse.org>
Message-ID: <781411b30908271716h400c46f0h48c86f9f181cd206@mail.gmail.com>

thank you for sharing your experience.
Frankly, I do love twisted for its decent implementation of asyn call
concept.

2009/8/28 Phil Christensen <phil at bubblehouse.org>

> On Aug 27, 2009, at 10:57 AM, ??? wrote:
> > Thank you, Phil.
> >
> > Pyro has many examples, so I can understand it easily. I know
> > Twisted is great. I think your "switching" must mean something :) .
> > So I decide to use twisted PB.
>
>
> Great!
>
> I also remembered one thing that I found was extremely useful when
> dealing with a GUI app that communicates over PB. Since PB assumes
> every remote method call will take an arbitrary amount of time to
> execute, you can delay the response from the client as long as you need.
>
> For example, let's say the server sends a block of text to the client
> for editing. Your client-side function can create a Deferred, hold a
> reference to it somewhere, and return that from the client function.
>
> PB won't actually send a response until you invoke the callback()
> method on that Deferred, so you can pop open a GUI window, let the
> user edit the text (or just sit there staring at it for an hour), and
> then trigger the callback when the user hits 'Save'.
>
> Very useful, although I wrote some incredibly stupid code to emulate
> this long before I realized how easy it was ;-)
>
> -phil
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/5440f0f9/attachment.htm 

From tim at commsecure.com.au  Thu Aug 27 20:32:21 2009
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 28 Aug 2009 10:32:21 +1000
Subject: [Twisted-Python] Some way for Trial to allow selective running
 of tests?
In-Reply-To: <h76qha$5ks$1@ger.gmane.org>
References: <h76ol9$vfg$1@ger.gmane.org>
	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
	<h76qha$5ks$1@ger.gmane.org>
Message-ID: <20090828103221.38ff8644@ws35.commsecure.com.au>

Don Dwiggins <ddwiggins at advpubtech.com> wrote:
> Phil Christensen wrote:
> > trial takes an argument at the command-line where you can specify a  
> > package or test case.
> > 
> > for example:
> > 
> > 	trial twisted
> > 	trial twisted.test
> > 	trial twisted.test.test_explorer
> > 	trial twisted.test.test_explorer.TestBrowser
> > 	trial twisted.test.test_explorer.TestBrowser.test_chain
> > 
> > lets you get more and more specific.
> > 
> > -phil
> 
> Sorry, I'm feeling dense.  I currently run it as
> "trial MyServerTestFile.py"; it's not a package or part of one.  In the 
> file are several classes, each with several test cases.  How would I 
> adapt the above to my needs?

trial takes either a path and filename, or a Python import name (I'm
not sure what the exact term here is).

If you ran python in the same directory where you ran "trial" in your
example, you could say:

    import MyServerTestFile
    MyServerTestFile.MyServerTestCase.test_my_server

...to refer to a particular test method, and trial will accept the same
syntax:

    trial MyServerTestFile.MyServerTestCase.test_my_server

In general though, a lot of distribution and packaging and deployment
things become easier if your project is laid out in Python packages. I
usually follow these rules and everything turns out pretty well:

    http://jcalderone.livejournal.com/39794.html
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/4ce7e306/attachment.pgp 

From artman328 at gmail.com  Fri Aug 28 01:35:16 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 13:35:16 +0800
Subject: [Twisted-Python] Twisted and wxPython
Message-ID: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>

Hi,
Anyone can give me a sample app skeleton to get two frameworks work together
well? Or just give me a link where I can figure out the technical details.

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/16d74957/attachment.htm 

From godson.g at gmail.com  Fri Aug 28 02:15:53 2009
From: godson.g at gmail.com (Godson Gera)
Date: Fri, 28 Aug 2009 11:45:53 +0530
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
References: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
Message-ID: <f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>

from twisted.internet import wxreactor
wxreactor.install()
from twisted.internet import reactor


.....
write your code here
.....

reactor.registerWxApp(app)
reactor.run()


You don't need wx mainloop. The key thing here is to import wxreactor first
and install it and then import reactor. 'app' in the last but one line is
the instance of your wx.App .


On Fri, Aug 28, 2009 at 11:05 AM, ??? <artman328 at gmail.com> wrote:

> Hi,
> Anyone can give me a sample app skeleton to get two frameworks work
> together well? Or just give me a link where I can figure out the technical
> details.
>
> Thanks.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Thanks & Regards,
Godson Gera
http://godson.in
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/d9b63d3c/attachment.htm 

From artman328 at gmail.com  Fri Aug 28 03:04:22 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 15:04:22 +0800
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>
References: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
	<f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>
Message-ID: <781411b30908280004k107fbda1h815a0544bcc314dc@mail.gmail.com>

Thanks. I'll try it out.

2009/8/28 Godson Gera <godson.g at gmail.com>

> from twisted.internet import wxreactor
> wxreactor.install()
> from twisted.internet import reactor
>
>
> .....
> write your code here
> .....
>
> reactor.registerWxApp(app)
> reactor.run()
>
>
> You don't need wx mainloop. The key thing here is to import wxreactor first
> and install it and then import reactor. 'app' in the last but one line is
> the instance of your wx.App .
>
>
> On Fri, Aug 28, 2009 at 11:05 AM, ??? <artman328 at gmail.com> wrote:
>
>> Hi,
>> Anyone can give me a sample app skeleton to get two frameworks work
>> together well? Or just give me a link where I can figure out the technical
>> details.
>>
>> Thanks.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> Thanks & Regards,
> Godson Gera
> http://godson.in
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/8f9170e1/attachment.htm 

From kevin.horn at gmail.com  Fri Aug 28 03:23:17 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 28 Aug 2009 02:23:17 -0500
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <781411b30908280004k107fbda1h815a0544bcc314dc@mail.gmail.com>
References: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
	<f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>
	<781411b30908280004k107fbda1h815a0544bcc314dc@mail.gmail.com>
Message-ID: <562bcc10908280023h6c3f9fd1s808ac7633eb86f9c@mail.gmail.com>

There's also a wxpython example in the twisted subversion repository.  See:

http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/wxdemo.py

It follows the basic pattern that Godson provided.

Kevin Horn

2009/8/28 ??? <artman328 at gmail.com>

> Thanks. I'll try it out.
>
> 2009/8/28 Godson Gera <godson.g at gmail.com>
>
> from twisted.internet import wxreactor
>> wxreactor.install()
>> from twisted.internet import reactor
>>
>>
>> .....
>> write your code here
>> .....
>>
>> reactor.registerWxApp(app)
>> reactor.run()
>>
>>
>> You don't need wx mainloop. The key thing here is to import wxreactor
>> first and install it and then import reactor. 'app' in the last but one line
>> is the instance of your wx.App .
>>
>>
>> On Fri, Aug 28, 2009 at 11:05 AM, ??? <artman328 at gmail.com> wrote:
>>
>>> Hi,
>>> Anyone can give me a sample app skeleton to get two frameworks work
>>> together well? Or just give me a link where I can figure out the technical
>>> details.
>>>
>>> Thanks.
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>>
>> --
>> Thanks & Regards,
>> Godson Gera
>> http://godson.in
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/a09f5691/attachment-0001.htm 

From artman328 at gmail.com  Fri Aug 28 04:04:51 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 16:04:51 +0800
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <562bcc10908280023h6c3f9fd1s808ac7633eb86f9c@mail.gmail.com>
References: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
	<f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>
	<781411b30908280004k107fbda1h815a0544bcc314dc@mail.gmail.com>
	<562bcc10908280023h6c3f9fd1s808ac7633eb86f9c@mail.gmail.com>
Message-ID: <781411b30908280104p1e6d33f3x9e69848f65e26c91@mail.gmail.com>

Thanks, it's absolutely a good sample.
It's grateful that there are so many people helpful out there :)

2009/8/28 Kevin Horn <kevin.horn at gmail.com>

> There's also a wxpython example in the twisted subversion repository.  See:
>
> http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/wxdemo.py
>
> It follows the basic pattern that Godson provided.
>
> Kevin Horn
>
> 2009/8/28 ??? <artman328 at gmail.com>
>
> Thanks. I'll try it out.
>>
>> 2009/8/28 Godson Gera <godson.g at gmail.com>
>>
>>  from twisted.internet import wxreactor
>>> wxreactor.install()
>>> from twisted.internet import reactor
>>>
>>>
>>> .....
>>> write your code here
>>> .....
>>>
>>> reactor.registerWxApp(app)
>>> reactor.run()
>>>
>>>
>>> You don't need wx mainloop. The key thing here is to import wxreactor
>>> first and install it and then import reactor. 'app' in the last but one line
>>> is the instance of your wx.App .
>>>
>>>
>>> On Fri, Aug 28, 2009 at 11:05 AM, ??? <artman328 at gmail.com> wrote:
>>>
>>>> Hi,
>>>> Anyone can give me a sample app skeleton to get two frameworks work
>>>> together well? Or just give me a link where I can figure out the technical
>>>> details.
>>>>
>>>> Thanks.
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>>
>>> --
>>> Thanks & Regards,
>>> Godson Gera
>>> http://godson.in
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/f9a84797/attachment.htm 

From artman328 at gmail.com  Fri Aug 28 07:49:44 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 19:49:44 +0800
Subject: [Twisted-Python] twisted windows service
Message-ID: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>

Hi,
I copied the code from:
http://twistedmatrix.com/pipermail/twisted-python/2007-May/015377.html and
it ran ok.
And then I followed David's advice from here:
http://twistedmatrix.com/pipermail/twisted-python/2007-May/015383.html to
use threading.Event to control server's stop, it ran ok too. But David's
boot_service.py just could install the service, error on start (error 1063).
Any help?
One more question, who can fill in David's 'py2exe' setup file more codes to
guide me moving to next step? David, are you there? :)

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/3140f256/attachment.htm 

From p.mayers at imperial.ac.uk  Fri Aug 28 07:56:29 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 28 Aug 2009 12:56:29 +0100
Subject: [Twisted-Python] IPv6
Message-ID: <4A97C5ED.40501@imperial.ac.uk>

What's the IPv6 support like in Twisted?


From lists at collab.nl  Fri Aug 28 08:04:46 2009
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Fri, 28 Aug 2009 13:04:46 +0100
Subject: [Twisted-Python] IPv6
In-Reply-To: <4A97C5ED.40501@imperial.ac.uk>
References: <4A97C5ED.40501@imperial.ac.uk>
Message-ID: <FC86CFB4-D4C5-4938-B62D-BACA974CFECA@collab.nl>

Hi Phil,

On 28 Aug 2009, at 12:56, Phil Mayers wrote:

> What's the IPv6 support like in Twisted?

See http://twistedmatrix.com/trac/ticket/3014

Cheers,

Thijs
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/c6626158/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090828/c6626158/attachment.pgp 

From ddwiggins at advpubtech.com  Fri Aug 28 11:39:44 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 28 Aug 2009 08:39:44 -0700
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <20090828103221.38ff8644@ws35.commsecure.com.au>
References: <h76ol9$vfg$1@ger.gmane.org>	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>	<h76qha$5ks$1@ger.gmane.org>
	<20090828103221.38ff8644@ws35.commsecure.com.au>
Message-ID: <h78to1$n9s$1@ger.gmane.org>

Tim Allen wrote:
> If you ran python in the same directory where you ran "trial" in your
> example, you could say:
> 
>     import MyServerTestFile
>     MyServerTestFile.MyServerTestCase.test_my_server
> 
> ...to refer to a particular test method, and trial will accept the same
> syntax:
> 
>     trial MyServerTestFile.MyServerTestCase.test_my_server

That's progress; thanks!  It gives me a choice of running either all 
tests in a particular class, or one test.  I could probably cobble up a 
shell or python script to wrap around it and allow me to run a list of 
"specs"; it'll be better than all the "foo"ing I've been doing. 8^)

A quick thought: maybe I could use decorators on test methods to apply 
"tags" to my tests, then write a script to run all tests with a given 
tag; this might be even handier.

> 
> In general though, a lot of distribution and packaging and deployment
> things become easier if your project is laid out in Python packages. I
> usually follow these rules and everything turns out pretty well:
> 
>     http://jcalderone.livejournal.com/39794.html

Good advice, if you're distributing a python library.  In my case, the 
end result is an installer that creates a single .exe (a Windows 
service; frozen with py2exe) and a config.ini file.  For me, there's no 
particular value in creating a package hierarchy just for testing. 
(With one possible exception: I may want to create a multi-level 
hierarchy of tests, rather than just the fixed file/class/method 
structure that unittest/trial gives you.

-- 
Don Dwiggins
Advanced Publishing Technology



From matusis at yahoo.com  Fri Aug 28 17:31:12 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Fri, 28 Aug 2009 14:31:12 -0700
Subject: [Twisted-Python] misleading error in twisted.enterprise.adbapi
In-Reply-To: <h78to1$n9s$1@ger.gmane.org>
References: <h76ol9$vfg$1@ger.gmane.org>	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>	<h76qha$5ks$1@ger.gmane.org>	<20090828103221.38ff8644@ws35.commsecure.com.au>
	<h78to1$n9s$1@ger.gmane.org>
Message-ID: <012701ca2826$dddce4f0$9996aed0$@com>


We are using twisted.enterprise.adbapi for connecting to MySQL.
In one of our large tables, the primary key reached its maximum value of
2147483647, and INSERTs became impossible.

When I executed the same INSERT from mysql command line manually, it gave:

ERROR 1062 (23000): Duplicate entry '2147483647' for key 1

In twisted logs however, for the same INSERT the error was much less
specific:

2014, "Commands out of sync; you can't run this command now"

I am concerned about this, since this 2014 error has appeared before in the
twisted logs, in many completely different contexts. Can you shed any light
on why we do not get the specific 1062 error, and what this 2014, "Commands
out of sync; you can't run this command now" is about?




From torrycn at gmail.com  Sat Aug 29 02:52:26 2009
From: torrycn at gmail.com (=?UTF-8?B?5aS05aSq5pmV?=)
Date: Sat, 29 Aug 2009 14:52:26 +0800
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
Message-ID: <5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>

On Fri, Aug 28, 2009 at 7:49 PM, ??? <artman328 at gmail.com> wrote:

> Hi,
> I copied the code from:
> http://twistedmatrix.com/pipermail/twisted-python/2007-May/015377.html and
> it ran ok.
> And then I followed David's advice from here:
> http://twistedmatrix.com/pipermail/twisted-python/2007-May/015383.html to
> use threading.Event to control server's stop, it ran ok too. But David's
> boot_service.py just could install the service, error on start (error 1063).
> Any help?
> One more question, who can fill in David's 'py2exe' setup file more codes
> to guide me moving to next step? David, are you there? :)
>
> Thanks.
>


????????????????????
?????????????

???????????ntservice?????????abcservice.py ,????

#coding=utf-8
import win32serviceutil
import os
import sys
import win32api
sys.path = sys.path + [os.path.dirname(win32api.GetModuleFileName(0))]
import server


class PowerService(win32serviceutil.ServiceFramework):
    _svc_name_ = "Your Service Name"
    _svc_display_name_ = "Your Service Display Name"
    _svc_description_ = unicode(""" ???????????
???? ????????
?????utf-8????????????gb2312????windows?????.
""",'utf-8').encode('gb2312')

    def SvcDoRun(self):
        server.start()

    def SvcStop(self):
        server.stop()

if __name__ == '__main__':
    win32serviceutil.HandleCommandLine(PowerService)


?????????.exe??????????????????????
????????????????????server.py????????


??????server.py

#coding=utf-8
from twisted.internet import reactor

def start():
    reactor.run(installSignalHandlers=0)

def stop():
    reactor.callFromThread(reactor.stop)


???py2exe????setup.py????

rom distutils.core import setup
import py2exe

import sys


setup(name='service name',
      version='1.0',
      author='your name',
      service=['abcservice'])

print "---Done---"


???python setup.py py2exe?????
???????????????
?????????????abcservice.exe?????????
????????????????????????????????????py2exe???
*

*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090829/8a3709f0/attachment.htm 

From glyph at twistedmatrix.com  Sat Aug 29 03:06:37 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 29 Aug 2009 03:06:37 -0400
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
	<5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
Message-ID: <d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>

On Sat, Aug 29, 2009 at 2:52 AM, ??? <torrycn at gmail.com> wrote:

> ????????????????????
> ?????????????
>

 ??????????????????????????????

??????????????????????

????????????????????? :)

???????????????????????????????
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090829/c1896743/attachment.htm 

From torrycn at gmail.com  Sat Aug 29 03:50:24 2009
From: torrycn at gmail.com (=?UTF-8?B?5aS05aSq5pmV?=)
Date: Sat, 29 Aug 2009 15:50:24 +0800
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
	<5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
	<d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>
Message-ID: <5ccd697a0908290050g16b6027bga87f752569e11251@mail.gmail.com>

2009/8/29 Glyph Lefkowitz <glyph at twistedmatrix.com>

> On Sat, Aug 29, 2009 at 2:52 AM, ??? <torrycn at gmail.com> wrote:
>
>> ????????????????????
>> ?????????????
>>
>
>  ??????????????????????????????
>
> ??????????????????????
>
> ????????????????????? :)
>
> ???????????????????????????????
>
>
The Chinese message by google translate is not readable. But I know what you
said.

Most people in China can read English.  But some of people (include me)
can't express our selves clearly in English.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090829/ba76801a/attachment.htm 

From artman328 at gmail.com  Sat Aug 29 10:11:21 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Sat, 29 Aug 2009 22:11:21 +0800
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
	<5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
Message-ID: <781411b30908290711r9ea4a4elae285db286fed5e3@mail.gmail.com>

Yes, I can read Chinese. Thank you for your help.
For respecting all friends in the list, I reply you still in English :)


2009/8/29 ??? <torrycn at gmail.com>

>
>
> On Fri, Aug 28, 2009 at 7:49 PM, ??? <artman328 at gmail.com> wrote:
>
>> Hi,
>> I copied the code from:
>> http://twistedmatrix.com/pipermail/twisted-python/2007-May/015377.htmland it ran ok.
>> And then I followed David's advice from here:
>> http://twistedmatrix.com/pipermail/twisted-python/2007-May/015383.html to
>> use threading.Event to control server's stop, it ran ok too. But David's
>> boot_service.py just could install the service, error on start (error 1063).
>> Any help?
>> One more question, who can fill in David's 'py2exe' setup file more codes
>> to guide me moving to next step? David, are you there? :)
>>
>> Thanks.
>>
>
>
> ????????????????????
> ?????????????
>
> ???????????ntservice?????????abcservice.py ,????
>
> #coding=utf-8
> import win32serviceutil
> import os
> import sys
> import win32api
> sys.path = sys.path + [os.path.dirname(win32api.GetModuleFileName(0))]
> import server
>
>
> class PowerService(win32serviceutil.ServiceFramework):
>     _svc_name_ = "Your Service Name"
>     _svc_display_name_ = "Your Service Display Name"
>     _svc_description_ = unicode(""" ???????????
> ???? ????????
> ?????utf-8????????????gb2312????windows?????.
> """,'utf-8').encode('gb2312')
>
>     def SvcDoRun(self):
>         server.start()
>
>     def SvcStop(self):
>         server.stop()
>
> if __name__ == '__main__':
>     win32serviceutil.HandleCommandLine(PowerService)
>
>
> ?????????.exe??????????????????????
> ????????????????????server.py????????
>
>
> ??????server.py
>
> #coding=utf-8
> from twisted.internet import reactor
>
> def start():
>     reactor.run(installSignalHandlers=0)
>
> def stop():
>     reactor.callFromThread(reactor.stop)
>
>
> ???py2exe????setup.py????
>
> rom distutils.core import setup
> import py2exe
>
> import sys
>
>
> setup(name='service name',
>       version='1.0',
>       author='your name',
>       service=['abcservice'])
>
> print "---Done---"
>
>
> ???python setup.py py2exe?????
> ???????????????
> ?????????????abcservice.exe?????????
> ????????????????????????????????????py2exe???
> *
>
> *
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090829/c58516d8/attachment-0001.htm 

From artman328 at gmail.com  Sat Aug 29 10:21:57 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Sat, 29 Aug 2009 22:21:57 +0800
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
	<5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
	<d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>
Message-ID: <781411b30908290721k9a5c2f2scb165be065781f5d@mail.gmail.com>

The translation is very funny, it will confuse Chinese reader totally
although I can understand what you mean (translate it back to english in my
mind to figure it out) :))
For example, the meaning of the last line in Chinese will be:
"Anyway, we're glad to see the Chinese users who have been twisted"...
Hahaha, LOL.
No offense, the google translation is so funny.

2009/8/29 Glyph Lefkowitz <glyph at twistedmatrix.com>

> On Sat, Aug 29, 2009 at 2:52 AM, ??? <torrycn at gmail.com> wrote:
>
>> ????????????????????
>> ?????????????
>>
>
>  ??????????????????????????????
>
> ??????????????????????
>
> ????????????????????? :)
>
> ???????????????????????????????
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090829/8f4ed25b/attachment.htm 

From exarkun at twistedmatrix.com  Sun Aug 30 00:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 30 Aug 2009 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1251605111.84.1407692698@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090830/21fa3960/attachment.htm 

From morbid.concept at gmail.com  Sun Aug 30 14:40:34 2009
From: morbid.concept at gmail.com (Nathan Lundquist)
Date: Sun, 30 Aug 2009 13:40:34 -0500
Subject: [Twisted-Python] TDD using Trial
In-Reply-To: <4A9AC689.8000404@gmail.com>
References: <4A9AC689.8000404@gmail.com>
Message-ID: <4A9AC7A2.8070104@gmail.com>

Hello everyone.

I was wondering if any tutorials existed for setting up unit tests for 
use with trial. I've done a fair share of googling and only found 
tickets suggesting that more documentation be made available for trial.

I've been attempting to make sense of the tests that ship with twisted 
but to be honest I'm having a hard.

Just thought a tutorial that walks through and explains things would 
help a lot.

Thanks.



From screwtape at froup.com  Sun Aug 30 21:08:35 2009
From: screwtape at froup.com (Tim Allen)
Date: Mon, 31 Aug 2009 11:08:35 +1000
Subject: [Twisted-Python] TDD using Trial
In-Reply-To: <4A9AC7A2.8070104@gmail.com>
References: <4A9AC689.8000404@gmail.com>
 <4A9AC7A2.8070104@gmail.com>
Message-ID: <20090831010835.GB3466@thristian.org>

On Sun, Aug 30, 2009 at 01:40:34PM -0500, Nathan Lundquist wrote:
> I was wondering if any tutorials existed for setting up unit tests for 
> use with trial. I've done a fair share of googling and only found 
> tickets suggesting that more documentation be made available for trial.

Setting up unit tests with trial is (deliberately) almost identical to
setting up unit tests with the "unittest" module in Python's standard
library. The key differences are:

    - Trial provides a subclass of unittest.TestCase called
      twisted.trial.unittest.TestCase, which adds the following features
      on top of the standard Python API:
	- t.t.u.TestCase supports testing of Twisted-based code,
	  spinning up the reactor and shutting it down when necessary,
	  etc.
	- t.t.u.TestCase allows the setUp, tearDown and individual test
	  methods to return Deferreds, which causes Trial to wait for
	  those Deferreds to fire before it continues on.
	- t.t.u.TestCase has an expanded set of assertions available,
	  including Twisted-specific ones like failUnlessFailure (to
	  check the Failure object returned by a deferred) but also
	  prettier output for simple ones like failUnlessEqual.
	- t.t.u.TestCase has a 'patch' method which allows you to
	  monkeypatch other code for testing purposes. All patches are
	  reverted at the end of the individual test.
	- t.t.u.TestCase subclasses and even individual test methods can
	  be given a 'skip' property, set to a string describing why
	  that TestCase or test should be skipped. This lets you stop
	  broken tests being reported as failures, but unlike just
	  commenting them out, you don't have to worry that the test
	  will be left out of refactorings or forgotten about and never
	  uncommented. You can even skip tests at runtime, for example
	  if a test is platform specific and the test is being run on
	  the 'wrong' platform.
    - Trial will happily run unittest.TestCase test cases, but they
      can't use Twisted features like the reactor or deferreds. If
      you just want to use Trial as an alternative to nosetests, you
      should be fine.
    - If you want the automatic test-discovery to work, you need to put
      your TestCase classes inside files named "test_whatever.py",
      inside a Python package. Then you can just give Trial the name of
      the Python package and it will run all the tests it can find
      inside it.

Is that helpful?


From hubbard at sdsc.edu  Mon Aug 31 13:04:44 2009
From: hubbard at sdsc.edu (Paul Hubbard)
Date: Mon, 31 Aug 2009 10:04:44 -0700
Subject: [Twisted-Python] TDD using Trial
In-Reply-To: <20090831010835.GB3466@thristian.org>
References: <4A9AC689.8000404@gmail.com> <4A9AC7A2.8070104@gmail.com>
	<20090831010835.GB3466@thristian.org>
Message-ID: <0654472F-2F5F-4F9E-9807-A0BA78137A39@sdsc.edu>


I also found this quite helpful in writing StringIO tests -

http://twistedmatrix.com/trac/browser/branches/trial-tutorial-2443-2/doc/core/howto/trial.xhtml

My code is nowhere near the standards of Twisted yet, but FWIW here's  
what I came up with:

http://amoeba.ucsd.edu:82/?p=attribute_store.git;a=blob;f=test/test_protocol.py;h=1d7df304a757adddfe98ab7e01e0aa15d29a1571;hb=HEAD

HTH,
Paul


On Aug 30, 2009, at 6:08 PM, Tim Allen wrote:

> On Sun, Aug 30, 2009 at 01:40:34PM -0500, Nathan Lundquist wrote:
>> I was wondering if any tutorials existed for setting up unit tests  
>> for
>> use with trial. I've done a fair share of googling and only found
>> tickets suggesting that more documentation be made available for  
>> trial.
>
> Setting up unit tests with trial is (deliberately) almost identical to
> setting up unit tests with the "unittest" module in Python's standard
> library. The key differences are:
>
>    - Trial provides a subclass of unittest.TestCase called
>      twisted.trial.unittest.TestCase, which adds the following  
> features
>      on top of the standard Python API:
> 	- t.t.u.TestCase supports testing of Twisted-based code,
> 	  spinning up the reactor and shutting it down when necessary,
> 	  etc.
> 	- t.t.u.TestCase allows the setUp, tearDown and individual test
> 	  methods to return Deferreds, which causes Trial to wait for
> 	  those Deferreds to fire before it continues on.
> 	- t.t.u.TestCase has an expanded set of assertions available,
> 	  including Twisted-specific ones like failUnlessFailure (to
> 	  check the Failure object returned by a deferred) but also
> 	  prettier output for simple ones like failUnlessEqual.
> 	- t.t.u.TestCase has a 'patch' method which allows you to
> 	  monkeypatch other code for testing purposes. All patches are
> 	  reverted at the end of the individual test.
> 	- t.t.u.TestCase subclasses and even individual test methods can
> 	  be given a 'skip' property, set to a string describing why
> 	  that TestCase or test should be skipped. This lets you stop
> 	  broken tests being reported as failures, but unlike just
> 	  commenting them out, you don't have to worry that the test
> 	  will be left out of refactorings or forgotten about and never
> 	  uncommented. You can even skip tests at runtime, for example
> 	  if a test is platform specific and the test is being run on
> 	  the 'wrong' platform.
>    - Trial will happily run unittest.TestCase test cases, but they
>      can't use Twisted features like the reactor or deferreds. If
>      you just want to use Trial as an alternative to nosetests, you
>      should be fine.
>    - If you want the automatic test-discovery to work, you need to put
>      your TestCase classes inside files named "test_whatever.py",
>      inside a Python package. Then you can just give Trial the name of
>      the Python package and it will run all the tests it can find
>      inside it.
>
> Is that helpful?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From phil at bubblehouse.org  Mon Aug 31 15:36:50 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 31 Aug 2009 15:36:50 -0400
Subject: [Twisted-Python] strange exception on Python 2.6 + Snow Leopard
Message-ID: <AE767569-997B-4F1C-9F4F-E984E4659B0E@bubblehouse.org>

hey all,

I just upgraded to Mac OS X 10.6 which includes Python 2.6.1. I'm  
running the latest SVN HEAD of Twisted, but when I run twistd I get an  
exception before it continues working (apparently) normally. Here's  
what I'm seeing:

thrawn:~ phil$ twistd
Traceback (most recent call last):
   File "/Users/phil/Workspace/Twisted/twisted/python/usage.py", line  
413, in __str__
     return self.getSynopsis() + '\n' + self.getUsage(width=None)
   File "/Users/phil/Workspace/Twisted/twisted/python/usage.py", line  
449, in getUsage
     for (cmd, short, parser, desc) in self.subCommands:
   File "/Users/phil/Workspace/Twisted/twisted/application/app.py",  
line 675, in subCommands
     for plug in plugins:
   File "/Users/phil/Workspace/Twisted/twisted/plugin.py", line 200,  
in getPlugins
     allDropins = getCache(package)
--- <exception caught here> ---
   File "/Users/phil/Workspace/Twisted/twisted/plugin.py", line 165,  
in getCache
     provider = pluginModule.load()
   File "/Users/phil/Workspace/Twisted/twisted/python/modules.py",  
line 381, in load
     return self.pathEntry.pythonPath.moduleLoader(self.name)
   File "/Users/phil/Workspace/Twisted/twisted/python/reflect.py",  
line 473, in namedAny
     obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'ssl_test'

[continues to print usage info]

I've deleted all my dropin.cache files, and grepped through my source  
and Twisted's for a reference to 'ssl_test', but to no avail.

Like I said, it doesn't appear to be a fatal exception, but I'd like  
to make it go away. Any ideas?

-phil


From listsin at integrateddevcorp.com  Mon Aug 31 15:47:16 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Mon, 31 Aug 2009 15:47:16 -0400
Subject: [Twisted-Python] strange exception on Python 2.6 + Snow Leopard
In-Reply-To: <AE767569-997B-4F1C-9F4F-E984E4659B0E@bubblehouse.org>
References: <AE767569-997B-4F1C-9F4F-E984E4659B0E@bubblehouse.org>
Message-ID: <B23801ED-A811-4221-A110-6B363DA00319@integrateddevcorp.com>


On Aug 31, 2009, at 3:36 PM, Phil Christensen wrote:

> hey all,
>
> I just upgraded to Mac OS X 10.6 which includes Python 2.6.1. I'm
> running the latest SVN HEAD of Twisted, but when I run twistd I get an
> exception before it continues working (apparently) normally. Here's
> what I'm seeing:
>
> thrawn:~ phil$ twistd
> Traceback (most recent call last):
>   File "/Users/phil/Workspace/Twisted/twisted/python/usage.py", line
> 413, in __str__
>     return self.getSynopsis() + '\n' + self.getUsage(width=None)
>   File "/Users/phil/Workspace/Twisted/twisted/python/usage.py", line
> 449, in getUsage
>     for (cmd, short, parser, desc) in self.subCommands:
>   File "/Users/phil/Workspace/Twisted/twisted/application/app.py",
> line 675, in subCommands
>     for plug in plugins:
>   File "/Users/phil/Workspace/Twisted/twisted/plugin.py", line 200,
> in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/Users/phil/Workspace/Twisted/twisted/plugin.py", line 165,
> in getCache
>     provider = pluginModule.load()
>   File "/Users/phil/Workspace/Twisted/twisted/python/modules.py",
> line 381, in load
>     return self.pathEntry.pythonPath.moduleLoader(self.name)
>   File "/Users/phil/Workspace/Twisted/twisted/python/reflect.py",
> line 473, in namedAny
>     obj = getattr(obj, n)
> exceptions.AttributeError: 'module' object has no attribute 'ssl_test'
>
> [continues to print usage info]
>
> I've deleted all my dropin.cache files, and grepped through my source
> and Twisted's for a reference to 'ssl_test', but to no avail.
>
> Like I said, it doesn't appear to be a fatal exception, but I'd like
> to make it go away. Any ideas?

I saw this too.  It has to do with the plugin cache directory not  
being writable; there's a bug filed on it on the Twisted Trac.  I  
ended up modifying the library code to get rid of it; the file to  
change is the one in the error message and the fix is listed in the  
bug in the Twisted Trac instance.


S



From phil at bubblehouse.org  Mon Aug 31 16:40:39 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 31 Aug 2009 16:40:39 -0400
Subject: [Twisted-Python] strange exception on Python 2.6 + Snow Leopard
In-Reply-To: <B23801ED-A811-4221-A110-6B363DA00319@integrateddevcorp.com>
References: <AE767569-997B-4F1C-9F4F-E984E4659B0E@bubblehouse.org>
	<B23801ED-A811-4221-A110-6B363DA00319@integrateddevcorp.com>
Message-ID: <413E681C-F5D0-4C8E-BF70-7B28347454FA@bubblehouse.org>

On Aug 31, 2009, at 3:47 PM, Steve Steiner (listsin) wrote:
> On Aug 31, 2009, at 3:36 PM, Phil Christensen wrote:
>> hey all,
>>
>> I just upgraded to Mac OS X 10.6 which includes Python 2.6.1. I'm
>> running the latest SVN HEAD of Twisted, but when I run twistd I get  
>> an
>> exception before it continues working (apparently) normally. Here's
>> what I'm seeing:
>>
>> thrawn:~ phil$ twistd
>> Traceback (most recent call last):
>>
[snip]
>>  File "/Users/phil/Workspace/Twisted/twisted/python/reflect.py",
>> line 473, in namedAny
>>    obj = getattr(obj, n)
>> exceptions.AttributeError: 'module' object has no attribute  
>> 'ssl_test'
>>
>> [continues to print usage info]
>>
>> I've deleted all my dropin.cache files, and grepped through my source
>> and Twisted's for a reference to 'ssl_test', but to no avail.
>>
>> Like I said, it doesn't appear to be a fatal exception, but I'd like
>> to make it go away. Any ideas?
>
> I saw this too.  It has to do with the plugin cache directory not
> being writable; there's a bug filed on it on the Twisted Trac.  I
> ended up modifying the library code to get rid of it; the file to
> change is the one in the error message and the fix is listed in the
> bug in the Twisted Trac instance.

Hmm, sorry to question, but are you sure?

I only ask because I'm fairly certain all my plugin directories  
(including Twisted's) are all writeable. I run them out of the SVN  
checkout in my home dir, using egg-/symlinks

AFAIK, the error you're referring to is mentioned in this ticket, and  
possibly others:

	http://twistedmatrix.com/trac/ticket/2409

and also this FAQ entry:

	http://preview.tinyurl.com/nbrjbw

which is a distinctly different exception, 'permission  
denied' (IOError, I think).

-phil


From konrads at smelkovs.com  Sat Aug  1 08:12:10 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Sat, 1 Aug 2009 17:12:10 +0300
Subject: [Twisted-Python] getPage using ssl proxy
In-Reply-To: <d79700b90907301215u5e74e501w7b5a960e34d3b33a@mail.gmail.com>
References: <d79700b90907301215u5e74e501w7b5a960e34d3b33a@mail.gmail.com>
Message-ID: <d79700b90908010712i4933c60fo4aa704f29f096235@mail.gmail.com>

I found answer to my own question:

class NoVerifyClientContextFactory:
    """A context factory for SSL clients."""

    isClient = 1
    method = SSL.SSLv3_METHOD

    def getContext(self):
        def x(*args):
            return True
        ctx=SSL.Context(self.method)
        #print dir(ctx)
        ctx.set_verify(SSL.VERIFY_NONE,x)
        return ctx
def getPage(url, contextFactory=None, *args, **kwargs):
    scheme, host, port, path = _parse(url)
    factory = HTTPClientFactory(url, *args, **kwargs)
    if 1: # use a proxy
        host, port = 'localhost', 8080
        factory.path = url
    if scheme == 'https':
        from twisted.internet import ssl
        if contextFactory is None:
            contextFactory = NoVerifyClientContextFactory()
        reactor.connectSSL(host, port, factory, contextFactory)
    else:
        reactor.connectTCP(host, port, factory)
    return factory.deferred

--
Konrads Smelkovs
Applied IT sorcery.


On Thu, Jul 30, 2009 at 10:15 PM, Konrads Smelkovs <konrads at smelkovs.com>wrote:

> Hello,
>
> I am writing some scraper scripts and need to pass them through an
> intercepting proxy. getPage does not support a proxy argument and this code
> I found on internet won't work with SSL proxy (stalls indefinitely):
>
> def getPage(url, contextFactory=None, *args, **kwargs):
>     scheme, host, port, path = _parse(url)
>     factory = HTTPClientFactory(url, *args, **kwargs)
>     if 0: # use a proxy
>         host, port = 'localhost', 8080
>         factory.path = url
>     if scheme == 'https':
>         from twisted.internet import ssl
>         if contextFactory is None:
>             contextFactory = ssl.ClientContextFactory()
>         reactor.connectSSL(host, port, factory, contextFactory)
>     else:
>         reactor.connectTCP(host, port, factory)
>     return factory.deferred
>
> Plain http proxying works. My guess is that there is an issue with
> self-signed or otherwise invalid certificate the http proxy supplies. Any
> clues?
>
> --
> Konrads Smelkovs
> Applied IT sorcery.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090801/646294d9/attachment.html>

From konrads at smelkovs.com  Sat Aug  1 10:54:45 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Sat, 1 Aug 2009 19:54:45 +0300
Subject: [Twisted-Python] AssertionError: '' for <module '__init__' from
	'nfscraper\__init__.pyc'> not in import cache
Message-ID: <d79700b90908010954g4942c8e1l5ee7459cf6abc8e@mail.gmail.com>

Hello,

I am running latest Twisted Python release 8.2.0 on Windows  / Python 2.6.
When running trial on my unittests, I get an AssertionError not in import
cache:

C:\Documents and Settings\Konrads\My Documents\nfscraper\src>tree /f
Folder PATH listing
Volume serial number is A899-B4C8
C:.
└───nfscraper
    │   httpclient.py
    │   httpclient.pyc
    │   interfaces.py
    │   interfaces.pyc
    │   scraper.py
    │   scraper.pyc
    │   settings.py
    │   settings.pyc
    │   util.py
    │   util.pyc
    │   __init__.py
    │   __init__.pyc
    │
    └───test
            test_scrapers.py
            test_scrapers.pyc
            __init__.py
            __init__.pyc

C:\Documents and Settings\Konrads\My Documents\nfscraper\src>set
PYTHONPATH="C:\
Documents and Settings\Konrads\My Documents\nfscraper\src"

C:\Documents and Settings\Konrads\My Documents\nfscraper\src>trial nfscraper
Traceback (most recent call last):
  File "C:\Python26\Scripts\trial.py", line 24, in <module>
    run()
  File "C:\Python26\lib\site-packages\twisted\scripts\trial.py", line 357,
in ru
n
    suite = _getSuite(config)
  File "C:\Python26\lib\site-packages\twisted\scripts\trial.py", line 315,
in _g
etSuite
    return loader.loadByNames(config['tests'], recurse)
  File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 647, in
loa
dByNames
    for thing in set(things)]
  File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 604, in
loa
dAnything
    return self.loadPackage(thing, recurse)
  File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 543, in
loa
dPackage
    pkgobj = modules.getModule(package.__name__)
  File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 741,
in g
etModule
    return theSystemPath[moduleName]
  File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 677,
in _
_getitem__
    self._findEntryPathString(moduleObject)),
  File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 630,
in _
findEntryPathString
    rval, modobj, pformat(self.importerCache))
AssertionError: '' for <module '__init__' from 'nfscraper\__init__.pyc'> not
in
import cache {'"C:\\Documents and Settings\\Konrads\\My
Documents\\nfscraper\\sr
c"': <imp.NullImporter object at 0x00A8F028>,
 'C:\\Documents and Settings\\Konrads\\My
Documents\\nfscraper\\src\\"C:\\Docume
nts and Settings\\Konrads\\My Documents\\nfscraper\\src"': <imp.NullImporter
obj
ect at 0x00A8F488>,
 'C:\\Documents and Settings\\Konrads\\My
Documents\\nfscraper\\src\\"C:\\Docume
nts and Settings\\Konrads\\My Documents\\nfscraper\\src"\\twisted\\plugins':
<im
p.NullImporter object at 0x00A8F528>,
 'C:\\Python26': None,
 'C:\\Python26\\DLLs': None,
 'C:\\Python26\\DLLs\\twisted\\plugins': <imp.NullImporter object at
0x00A8F538>
,
 'C:\\Python26\\Scripts': None,
 'C:\\Python26\\Scripts\\trial.py': <imp.NullImporter object at 0x00A8F498>,
 'C:\\Python26\\Scripts\\twisted\\plugins': <imp.NullImporter object at
0x00A8F5
00>,
 'C:\\Python26\\lib': None,
 'C:\\Python26\\lib\\ctypes': None,
 'C:\\Python26\\lib\\distutils': None,
 'C:\\Python26\\lib\\encodings': None,
 'C:\\Python26\\lib\\lib-tk': None,
 'C:\\Python26\\lib\\lib-tk\\twisted\\plugins': <imp.NullImporter object at
0x00
A8F550>,
 'C:\\Python26\\lib\\logging': None,
 'C:\\Python26\\lib\\plat-win': <imp.NullImporter object at 0x00A8F490>,
 'C:\\Python26\\lib\\plat-win\\twisted\\plugins': <imp.NullImporter object
at 0x
00A8F548>,
 'C:\\Python26\\lib\\site-packages': None,
 'C:\\Python26\\lib\\site-packages\\PIL': None,
 'C:\\Python26\\lib\\site-packages\\PIL\\twisted\\plugins':
<imp.NullImporter ob
ject at 0x00A8F560>,
 'C:\\Python26\\lib\\site-packages\\Pythonwin': None,
 'C:\\Python26\\lib\\site-packages\\Pythonwin\\twisted\\plugins':
<imp.NullImpor
ter object at 0x00A8F578>,
 'C:\\Python26\\lib\\site-packages\\beautifulsoup-3.1.0.1-py2.6.egg':
<zipimport
er object "C:\Python26\lib\site-packages\beautifulsoup-3.1.0.1-py2.6.egg">,
 'C:\\Python26\\lib\\site-packages\\beautifulsoup-3.1.0.1-py2.6.egg\\twisted\\pl
ugins': <zipimporter object
"C:\Python26\lib\site-packages\beautifulsoup-3.1.0.1
-py2.6.egg\twisted\plugins\">,
 'C:\\Python26\\lib\\site-packages\\django-1.1_beta_1-py2.6.egg': None,
 'C:\\Python26\\lib\\site-packages\\django-1.1_beta_1-py2.6.egg\\twisted\\plugin
s': <imp.NullImporter object at 0x00A8F508>,
 'C:\\Python26\\lib\\site-packages\\django_authopenid-1.0.1-py2.6.egg':
None,
 'C:\\Python26\\lib\\site-packages\\django_authopenid-1.0.1-py2.6.egg\\twisted\\
plugins': <imp.NullImporter object at 0x00A8F510>,
 'C:\\Python26\\lib\\site-packages\\django_registration-0.7-py2.6.egg':
<zipimpo
rter object
"C:\Python26\lib\site-packages\django_registration-0.7-py2.6.egg">,
 'C:\\Python26\\lib\\site-packages\\django_registration-0.7-py2.6.egg\\twisted\\
plugins': <zipimporter object
"C:\Python26\lib\site-packages\django_registration
-0.7-py2.6.egg\twisted\plugins\">,
 'C:\\Python26\\lib\\site-packages\\docutils-0.5-py2.6.egg': None,
 'C:\\Python26\\lib\\site-packages\\docutils-0.5-py2.6.egg\\twisted\\plugins':
<
imp.NullImporter object at 0x00A8F520>,
 'C:\\Python26\\lib\\site-packages\\epydoc-3.0.1-py2.6-win32.egg': None,
 'C:\\Python26\\lib\\site-packages\\epydoc-3.0.1-py2.6-win32.egg\\twisted\\plugi
ns': <imp.NullImporter object at 0x00A8F518>,
 'C:\\Python26\\lib\\site-packages\\python_openid-2.2.4-py2.6.egg':
<zipimporter
 object "C:\Python26\lib\site-packages\python_openid-2.2.4-py2.6.egg">,
 'C:\\Python26\\lib\\site-packages\\python_openid-2.2.4-py2.6.egg\\twisted\\plug
ins': <zipimporter object
"C:\Python26\lib\site-packages\python_openid-2.2.4-py2
.6.egg\twisted\plugins\">,
 'C:\\Python26\\lib\\site-packages\\setuptools-0.6c9-py2.6.egg':
<zipimporter ob
ject "C:\Python26\lib\site-packages\setuptools-0.6c9-py2.6.egg">,
 'C:\\Python26\\lib\\site-packages\\setuptools-0.6c9-py2.6.egg\\twisted\\plugins
': <zipimporter object
"C:\Python26\lib\site-packages\setuptools-0.6c9-py2.6.egg
\twisted\plugins\">,
 'C:\\Python26\\lib\\site-packages\\twisted': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\application': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\cred': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\internet': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\lore': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\lore\\scripts': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\persisted': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\plugins': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\python': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\scripts': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\trial': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\web': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\web2': None,
 'C:\\Python26\\lib\\site-packages\\twisted\\words': None,
 'C:\\Python26\\lib\\site-packages\\win32': None,
 'C:\\Python26\\lib\\site-packages\\win32\\lib': None,
 'C:\\Python26\\lib\\site-packages\\win32\\lib\\twisted\\plugins':
<imp.NullImpo
rter object at 0x00A8F570>,
 'C:\\Python26\\lib\\site-packages\\win32\\twisted\\plugins':
<imp.NullImporter
object at 0x00A8F568>,
 'C:\\Python26\\lib\\site-packages\\zope': None,
 'C:\\Python26\\lib\\site-packages\\zope\\interface': None,
 'C:\\Python26\\lib\\twisted\\plugins': <imp.NullImporter object at
0x00A8F540>,

 'C:\\Python26\\twisted\\plugins': <imp.NullImporter object at 0x00A8F558>,
 'C:\\WINDOWS\\system32\\python26.zip': <imp.NullImporter object at
0x00A8F030>,

 'C:\\WINDOWS\\system32\\python26.zip\\twisted\\plugins': <imp.NullImporter
obje
ct at 0x00A8F530>}

C:\Documents and Settings\Konrads\My Documents\nfscraper\src>
--
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090801/d91ea494/attachment.html>

From dave at davebritton.com  Sat Aug  1 12:54:04 2009
From: dave at davebritton.com (Dave Britton)
Date: Sat, 1 Aug 2009 14:54:04 -0400
Subject: [Twisted-Python] what's a workaround for Ticket #3472 (sendmail has
	no timeout)?
Message-ID: <197801ca12d9$71568820$0500a8c0@yoda>

Trying to implement a custom mail service I have run into the problem that
this ticket describes:
====
Ticket #3472 (new defect )
Opened 10 months ago
Last modified 10 months ago
twisted.mail.smtp sendmail() should [have] parameters to be passed for the
retry and timeout logic supported by SMTPClientFactory:
The method: def sendmail() spawns SMTPSenderFactories without a default
timeout value. These cause factories to wait forever if there is no response
from the remote server. On prolonged periods of time, stale
SMTPSenderFactories accumulates and will cause file descriptors to ran out
(Couldn't bind: 24: Too many open files.)
====
What would be the best way for me to work around this?
Specifically, when I use twisted.mail.smtp sendmail() for a lengthy list, I
fairly quickly get the "too many open files" message.

I tried using a coiterator to send small enough batches of emails, waiting
for each batch to be done before sending the next, because the "too many
files" error seemed to be caused by creating too many deferreds when a too
large batch of emails was sent at once. This worked in a test simulation,
but with real emails the system never completes the batch, it just hangs
waiting for sendmail to return.

Is there a best timeout mechanism I should use to force sendmail's return?
What I can think of so far are these:
option 1: Call setTimeout() on the deferred returned by sendmail despite
this warning in the  source for Deferred.setTimeout():
"warnings.warn("Deferred.setTimeout is deprecated.  Look for timeout support
specific to the API you are using instead.", DeprecationWarning,
stacklevel=2).
or option2: Patch a timeout argument into sendmail to have it passed to
SMTPSenderFactory(from_addr, to_addrs, msg, d)? Would this work? I can't
figure out how or if SMTPSenderFactory would handle a timeout argument.

Sorry for the long message. Thanks for your advice!
-Dave




From konrads at smelkovs.com  Sat Aug  1 13:50:21 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Sat, 1 Aug 2009 22:50:21 +0300
Subject: [Twisted-Python] AssertionError: '' for <module '__init__' from
	'nfscraper\__init__.pyc'> not in import cache
In-Reply-To: <d79700b90908010954g4942c8e1l5ee7459cf6abc8e@mail.gmail.com>
References: <d79700b90908010954g4942c8e1l5ee7459cf6abc8e@mail.gmail.com>
Message-ID: <d79700b90908011250k5b55e683re6545a1c8a22d793@mail.gmail.com>

Aand... i've solved it with help of idnar from #twisted:

set PYTHONPATH="C:\Documents and Settings\Konrads\My
Documents\nfscraper\src" on Windows is not the same as
PYTHONPATH=C:\Documents and Settings\Konrads\My Documents\nfscraper\src.
Note the doube quotes. Double quotes make sys.path look like this:


C:\Documents and Settings\Konrads>C:\Python26\python.exe
Python 2.6.2 (r262:71605, Apr 14 2009, 22:40:02) [MSC v.1500 32 bit (Intel)]
on
win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import sys
>>> filter(lambda x: x.find("foo")>-1,sys.path)
['C:\\Documents and Settings\\Konrads\\"C:\\foo"']
>>>


--
Konrads Smelkovs
Applied IT sorcery.


On Sat, Aug 1, 2009 at 7:54 PM, Konrads Smelkovs <konrads at smelkovs.com>wrote:

> Hello,
>
> I am running latest Twisted Python release 8.2.0 on Windows  / Python 2.6.
> When running trial on my unittests, I get an AssertionError not in import
> cache:
>
> C:\Documents and Settings\Konrads\My Documents\nfscraper\src>tree /f
> Folder PATH listing
> Volume serial number is A899-B4C8
> C:.
> └───nfscraper
>     │   httpclient.py
>     │   httpclient.pyc
>     │   interfaces.py
>     │   interfaces.pyc
>     │   scraper.py
>     │   scraper.pyc
>     │   settings.py
>     │   settings.pyc
>     │   util.py
>     │   util.pyc
>     │   __init__.py
>     │   __init__.pyc
>     │
>     └───test
>             test_scrapers.py
>             test_scrapers.pyc
>             __init__.py
>             __init__.pyc
>
> C:\Documents and Settings\Konrads\My Documents\nfscraper\src>set
> PYTHONPATH="C:\
> Documents and Settings\Konrads\My Documents\nfscraper\src"
>
> C:\Documents and Settings\Konrads\My Documents\nfscraper\src>trial
> nfscraper
> Traceback (most recent call last):
>   File "C:\Python26\Scripts\trial.py", line 24, in <module>
>     run()
>   File "C:\Python26\lib\site-packages\twisted\scripts\trial.py", line 357,
> in ru
> n
>     suite = _getSuite(config)
>   File "C:\Python26\lib\site-packages\twisted\scripts\trial.py", line 315,
> in _g
> etSuite
>     return loader.loadByNames(config['tests'], recurse)
>   File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 647,
> in loa
> dByNames
>     for thing in set(things)]
>   File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 604,
> in loa
> dAnything
>     return self.loadPackage(thing, recurse)
>   File "C:\Python26\lib\site-packages\twisted\trial\runner.py", line 543,
> in loa
> dPackage
>     pkgobj = modules.getModule(package.__name__)
>   File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 741,
> in g
> etModule
>     return theSystemPath[moduleName]
>   File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 677,
> in _
> _getitem__
>     self._findEntryPathString(moduleObject)),
>   File "C:\Python26\lib\site-packages\twisted\python\modules.py", line 630,
> in _
> findEntryPathString
>     rval, modobj, pformat(self.importerCache))
> AssertionError: '' for <module '__init__' from 'nfscraper\__init__.pyc'>
> not in
> import cache {'"C:\\Documents and Settings\\Konrads\\My
> Documents\\nfscraper\\sr
> c"': <imp.NullImporter object at 0x00A8F028>,
>  'C:\\Documents and Settings\\Konrads\\My
> Documents\\nfscraper\\src\\"C:\\Docume
> nts and Settings\\Konrads\\My Documents\\nfscraper\\src"':
> <imp.NullImporter obj
> ect at 0x00A8F488>,
>  'C:\\Documents and Settings\\Konrads\\My
> Documents\\nfscraper\\src\\"C:\\Docume
> nts and Settings\\Konrads\\My
> Documents\\nfscraper\\src"\\twisted\\plugins': <im
> p.NullImporter object at 0x00A8F528>,
>  'C:\\Python26': None,
>  'C:\\Python26\\DLLs': None,
>  'C:\\Python26\\DLLs\\twisted\\plugins': <imp.NullImporter object at
> 0x00A8F538>
> ,
>  'C:\\Python26\\Scripts': None,
>  'C:\\Python26\\Scripts\\trial.py': <imp.NullImporter object at
> 0x00A8F498>,
>  'C:\\Python26\\Scripts\\twisted\\plugins': <imp.NullImporter object at
> 0x00A8F5
> 00>,
>  'C:\\Python26\\lib': None,
>  'C:\\Python26\\lib\\ctypes': None,
>  'C:\\Python26\\lib\\distutils': None,
>  'C:\\Python26\\lib\\encodings': None,
>  'C:\\Python26\\lib\\lib-tk': None,
>  'C:\\Python26\\lib\\lib-tk\\twisted\\plugins': <imp.NullImporter object at
> 0x00
> A8F550>,
>  'C:\\Python26\\lib\\logging': None,
>  'C:\\Python26\\lib\\plat-win': <imp.NullImporter object at 0x00A8F490>,
>  'C:\\Python26\\lib\\plat-win\\twisted\\plugins': <imp.NullImporter object
> at 0x
> 00A8F548>,
>  'C:\\Python26\\lib\\site-packages': None,
>  'C:\\Python26\\lib\\site-packages\\PIL': None,
>  'C:\\Python26\\lib\\site-packages\\PIL\\twisted\\plugins':
> <imp.NullImporter ob
> ject at 0x00A8F560>,
>  'C:\\Python26\\lib\\site-packages\\Pythonwin': None,
>  'C:\\Python26\\lib\\site-packages\\Pythonwin\\twisted\\plugins':
> <imp.NullImpor
> ter object at 0x00A8F578>,
>  'C:\\Python26\\lib\\site-packages\\beautifulsoup-3.1.0.1-py2.6.egg':
> <zipimport
> er object "C:\Python26\lib\site-packages\beautifulsoup-3.1.0.1-py2.6.egg">,
>
>  'C:\\Python26\\lib\\site-packages\\beautifulsoup-3.1.0.1-py2.6.egg\\twisted\\pl
> ugins': <zipimporter object
> "C:\Python26\lib\site-packages\beautifulsoup-3.1.0.1
> -py2.6.egg\twisted\plugins\">,
>  'C:\\Python26\\lib\\site-packages\\django-1.1_beta_1-py2.6.egg': None,
>
>  'C:\\Python26\\lib\\site-packages\\django-1.1_beta_1-py2.6.egg\\twisted\\plugin
> s': <imp.NullImporter object at 0x00A8F508>,
>  'C:\\Python26\\lib\\site-packages\\django_authopenid-1.0.1-py2.6.egg':
> None,
>
>  'C:\\Python26\\lib\\site-packages\\django_authopenid-1.0.1-py2.6.egg\\twisted\\
> plugins': <imp.NullImporter object at 0x00A8F510>,
>  'C:\\Python26\\lib\\site-packages\\django_registration-0.7-py2.6.egg':
> <zipimpo
> rter object
> "C:\Python26\lib\site-packages\django_registration-0.7-py2.6.egg">,
>
>  'C:\\Python26\\lib\\site-packages\\django_registration-0.7-py2.6.egg\\twisted\\
> plugins': <zipimporter object
> "C:\Python26\lib\site-packages\django_registration
> -0.7-py2.6.egg\twisted\plugins\">,
>  'C:\\Python26\\lib\\site-packages\\docutils-0.5-py2.6.egg': None,
>  'C:\\Python26\\lib\\site-packages\\docutils-0.5-py2.6.egg\\twisted\\plugins':
> <
> imp.NullImporter object at 0x00A8F520>,
>  'C:\\Python26\\lib\\site-packages\\epydoc-3.0.1-py2.6-win32.egg': None,
>
>  'C:\\Python26\\lib\\site-packages\\epydoc-3.0.1-py2.6-win32.egg\\twisted\\plugi
> ns': <imp.NullImporter object at 0x00A8F518>,
>  'C:\\Python26\\lib\\site-packages\\python_openid-2.2.4-py2.6.egg':
> <zipimporter
>  object "C:\Python26\lib\site-packages\python_openid-2.2.4-py2.6.egg">,
>
>  'C:\\Python26\\lib\\site-packages\\python_openid-2.2.4-py2.6.egg\\twisted\\plug
> ins': <zipimporter object
> "C:\Python26\lib\site-packages\python_openid-2.2.4-py2
> .6.egg\twisted\plugins\">,
>  'C:\\Python26\\lib\\site-packages\\setuptools-0.6c9-py2.6.egg':
> <zipimporter ob
> ject "C:\Python26\lib\site-packages\setuptools-0.6c9-py2.6.egg">,
>
>  'C:\\Python26\\lib\\site-packages\\setuptools-0.6c9-py2.6.egg\\twisted\\plugins
> ': <zipimporter object
> "C:\Python26\lib\site-packages\setuptools-0.6c9-py2.6.egg
> \twisted\plugins\">,
>  'C:\\Python26\\lib\\site-packages\\twisted': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\application': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\cred': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\internet': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\lore': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\lore\\scripts': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\persisted': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\plugins': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\python': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\scripts': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\trial': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\web': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\web2': None,
>  'C:\\Python26\\lib\\site-packages\\twisted\\words': None,
>  'C:\\Python26\\lib\\site-packages\\win32': None,
>  'C:\\Python26\\lib\\site-packages\\win32\\lib': None,
>  'C:\\Python26\\lib\\site-packages\\win32\\lib\\twisted\\plugins':
> <imp.NullImpo
> rter object at 0x00A8F570>,
>  'C:\\Python26\\lib\\site-packages\\win32\\twisted\\plugins':
> <imp.NullImporter
> object at 0x00A8F568>,
>  'C:\\Python26\\lib\\site-packages\\zope': None,
>  'C:\\Python26\\lib\\site-packages\\zope\\interface': None,
>  'C:\\Python26\\lib\\twisted\\plugins': <imp.NullImporter object at
> 0x00A8F540>,
>
>  'C:\\Python26\\twisted\\plugins': <imp.NullImporter object at 0x00A8F558>,
>  'C:\\WINDOWS\\system32\\python26.zip': <imp.NullImporter object at
> 0x00A8F030>,
>
>  'C:\\WINDOWS\\system32\\python26.zip\\twisted\\plugins': <imp.NullImporter
> obje
> ct at 0x00A8F530>}
>
> C:\Documents and Settings\Konrads\My Documents\nfscraper\src>
> --
> Konrads Smelkovs
> Applied IT sorcery.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090801/b72623d4/attachment.html>

From glyph at twistedmatrix.com  Sat Aug  1 20:22:28 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 1 Aug 2009 22:22:28 -0400
Subject: [Twisted-Python] what's a workaround for Ticket #3472 (sendmail
	has no timeout)?
In-Reply-To: <197801ca12d9$71568820$0500a8c0@yoda>
References: <197801ca12d9$71568820$0500a8c0@yoda>
Message-ID: <d9047f780908011922q2d6cfe60x812c635b85d78acb@mail.gmail.com>

On Sat, Aug 1, 2009 at 2:54 PM, Dave Britton <dave at davebritton.com> wrote:


> What would be the best way for me to work around this?


Fix the bug :).  Then, I hope, contribute a patch... (see
http://twistedmatrix.com/trac/wiki/TwistedDevelopment for that part).


> Specifically, when I use twisted.mail.smtp sendmail() for a lengthy list, I
> fairly quickly get the "too many open files" message.
>
 (more detailed description of the problem snipped)

Yeah, that sounds like your problem is #3472.  There are two problems there:
one is that the default behavior is such that you run out of file
descriptors, and the other is that the behavior can't be customized.  The
customization issue should probably be fixed first, and then the default
behavior can be fixed by tweaking the default values for the customizations.

or option2: Patch a timeout argument into sendmail to have it passed to
> SMTPSenderFactory(from_addr, to_addrs, msg, d)? Would this work? I can't
> figure out how or if SMTPSenderFactory would handle a timeout argument.
>

I think this is what would be meant by "fixing the bug"; your description
seems a bit too vague for me to tell if your solution would be solving it in
a general way or not, but at first blush it seems about right.

Sorry for the long message. Thanks for your advice!
>

No need to apologize.  Thanks for your interest, and good luck!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090801/659f66e2/attachment.html>

From listsin at integrateddevcorp.com  Sat Aug  1 21:30:06 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Sat, 1 Aug 2009 23:30:06 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
	<9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
	<d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>
Message-ID: <FA651A3B-D3FA-4D7B-A278-89693189B19A@integrateddevcorp.com>

> I get it, really.
>
> I do tend to use a lot of words to get things across.  Sorry ;-).

Duly noted ;-).

> Where would we put an "inventory" project for it to be most useful?
>
>  As JP mentioned earlier in this thread, some work has already taken  
> place here: <http://twistedmatrix.com/trac/wiki/ 
> DocumentationAnalysis>.

It doesn't really look like that effort went anywhere.

On:

	http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList

The first document is User reviewed by JoeBlow with Expert Reviews by  
JaneBlogs.

There are only five more entries and only one is "completed" with a  
User and Expert review.

What the heck that properly vetted doc has to do with anything is not  
particularly clear.

Maybe we should have an auction?

     Auction: Document blah-de-blah

	Supplier will document blah-de-blah, work with Sponsors to  
incorporate blah-de-blah into their apps, and release the copyright to  
the resultant documentation and copyright to the Twisted Software  
Foundation.

	Supplier will provide up to X hour of consulting to each of the first  
three Sponsors (Founding Sponsors) to help refine the documentation  
and make sure it can be used in real-world projects.

	Minimum Founder bid is $50.

	Minimum Contributor bid is $35.

	Sponsor1:
		I'll give $50 for someone to explain blah-de-blah and how to use it  
in my app

	Sponsor2:
		I'd give another $50 if I could get this working in my app

	Supplier1:

		I'd have to have $200 to take this on.

		I'll also offer discounted consulting on the same topic at $??/hr.  
to anyone who contributes $35 or more to this documentation project  
after

	 Sponsor3:	

		I'll chip in the extra $100 if I can be one of the first three.  I'm  
really stuck on blah-de-blah and could use some help.

	Moderator:

		Ok, we seem to have a deal.  Sponsor 1 is in for $50, Sponsor 2 is  
in for $50, Sponsor 3 is in for $100.

		Each of them receives X hours of help from Supplier 1 which will be  
used to advance their projects and improve the documentation.

		Any future Contributors, over $35, receive discounted consulting  
from Supplier1 at $??/hr. for any work related to this issue as well  
as access to beta versions of the documentation and early-release  
versions of the sample code.

		Please sign off on this agreement and submit your payment.

		Supplier1 agrees to provide a first draft within X-period-of-time.
	
		Consulting arrangements begin then.  The Twisted Software Foundation  
accepts a donation of 10% of all transactions for facilitating these  
transactions and to generally advance Twisted.  (http://twistedmatrix.com/trac/wiki/TwistedSoftwareFoundation 
)

Just a thought...

S

P.S. I apologize in advance for any formatting issues with the above.   
Obviously, I'm not following the coding spec and pylint barfed on the  
whole thing... ;-).

s





-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090801/463a31af/attachment.html>

From zooko at zooko.com  Sat Aug  1 21:55:49 2009
From: zooko at zooko.com (Zooko Wilcox-O'Hearn)
Date: Sat, 1 Aug 2009 21:55:49 -0600
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Lofty-Atmospheric Filesystem,
	v1.5
Message-ID: <C2E0CC84-3594-4F1F-8C2D-747514082216@zooko.com>

Dear people of the twisted mailing list:

This release announcement is relevant to this list because Tahoe-LAFS  
is built on Twisted's networking and concurrency framework.  Also, we  
strive to emulate the UQDS.

Regards,

Zooko

The Tahoe-LAFS team is pleased to announce the immediate availability of
version 1.5 of Tahoe, the Lofty Atmospheric File System.

Tahoe-LAFS is the first cloud storage technology which offers security
and privacy in the sense that the cloud storage service provider itself
can't read or alter your data. Here is the one-page explanation of
its unique security and fault-tolerance properties:

http://allmydata.org/source/tahoe/trunk/docs/about.html

This release is the successor to v1.4.1, which was released April 13,
2009 [1]. This is a major new release, improving the user interface and
performance and fixing a few bugs, and adding ports to OpenBSD, NetBSD,
ArchLinux, NixOS, and embedded systems built on ARM CPUs. See the NEWS
file [2] for more information.

In addition to the functionality of Tahoe-LAFS itself, a crop of related
projects have sprung up to extend it and to integrate it into operating
systems and applications.  These include frontends for Windows,
Macintosh, JavaScript, and iPhone, and plugins for duplicity, bzr,
Hadoop, and TiddlyWiki, and more. See the Related Projects page on the
wiki [3].


COMPATIBILITY

Version 1.5 is fully compatible with the version 1 series of
Tahoe-LAFS. Files written by v1.5 clients can be read by clients of all
versions back to v1.0. v1.5 clients can read files produced by clients
of all versions since v1.0.  v1.5 servers can serve clients of all
versions back to v1.0 and v1.5 clients can use servers of all versions
back to v1.0.

This is the sixth release in the version 1 series. The version 1 series
of Tahoe-LAFS will be actively supported and maintained for the
forseeable future, and future versions of Tahoe-LAFS will retain the
ability to read and write files compatible with Tahoe-LAFS v1.

The version 1 series of Tahoe-LAFS is the basis of the consumer backup
product from Allmydata, Inc. -- http://allmydata.com .


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you can distribute your filesystem across a set of
servers, such that if some of them fail or even turn out to be
malicious, the entire filesystem continues to be available. You can
share your files with other users, using a simple and flexible access
control scheme.

We believe that the combination of erasure coding, strong encryption,
Free/Open Source Software and careful engineering make Tahoe-LAFS safer
than RAID, removable drive, tape, on-line backup or other Cloud storage
systems.

This software comes with extensive tests, and there are no known
security flaws which would compromise confidentiality or data integrity
in typical use.  (For all currently known issues please see the
known_issues.txt file [4].)


LICENCE

You may use this package under the GNU General Public License, version 2
or, at your option, any later version.  See the file "COPYING.GPL" [5]
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1 or, at your option, any later version.  (The
Transitive Grace Period Public Licence has requirements similar to the
GPL except that it allows you to wait for up to twelve months after you
redistribute a derived work before releasing the source code of your
derived work.) See the file "COPYING.TGPPL.html" [6] for the terms of
the Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris, *BSD, and
probably most other systems.  Start with "docs/install.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8].  Patches are gratefully accepted
-- the RoadMap page [9] shows the next improvements that we plan to make
and CREDITS [10] lists the names of people who've contributed to the
project.  The Dev page [11] contains resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed thanks to the sponsorship of
Allmydata, Inc. [12], a provider of commercial backup services.
Allmydata, Inc. created the Tahoe-LAFS project and contributed hardware,
software, ideas, bug reports, suggestions, demands, and money (employing
several Tahoe-LAFS hackers and instructing them to spend part of their
work time on this Free Software project).  Also they awarded customized
t-shirts to hackers who found security flaws in Tahoe-LAFS (see
http://hacktahoe.org ). After discontinuing funding of Tahoe-LAFS R&D in
early 2009, Allmydata, Inc. has continued to provide servers, co-lo
space and bandwidth to the open source project. Thank you to Allmydata,
Inc. for their generous and public-spirited support.

This is the second release of Tahoe-LAFS which was created solely as a
labor of love by volunteers; developer time is no longer funded by
allmydata.com (see [13] for details).

Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

Special acknowledgment goes to Brian Warner, whose superb engineering
skills and dedication are primarily responsible for the Tahoe
implementation, and significantly responsible for the Tahoe design as
well, not to mention most of the docs and tests. Tahoe-LAFS wouldn't
exist without him.

August 1, 2009
Boulder, Colorado, USA

P.S.  Just kidding about that acronym.  "LAFS" actually stands for
"Lightweight Authorization File System".  Or possibly for
"Least-Authority File System".  There is no truth to the rumour that it
actually stands for "Long-lived Axe-tolerant File System".

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=3853
[2] http://allmydata.org/trac/tahoe/browser/NEWS?rev=4033
[3] http://allmydata.org/trac/tahoe/wiki/RelatedProjects
[4] http://allmydata.org/trac/tahoe/browser/docs/known_issues.txt
[5] http://allmydata.org/trac/tahoe/browser/COPYING.GPL
[6] http://allmydata.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://allmydata.org/source/tahoe/trunk/docs/install.html
[8] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://allmydata.org/trac/tahoe/roadmap
[10] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=4035
[11] http://allmydata.org/trac/tahoe/wiki/Dev
[12] http://allmydata.com
[13] http://allmydata.org/pipermail/tahoe-dev/2009-March/001461.html




From exarkun at twistedmatrix.com  Sat Aug  1 22:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 02 Aug 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1249185912.18.1828771885@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090802/782c0760/attachment.html>

From glyph at twistedmatrix.com  Sat Aug  1 22:41:02 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 2 Aug 2009 00:41:02 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <FA651A3B-D3FA-4D7B-A278-89693189B19A@integrateddevcorp.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
	<9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
	<d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>
	<FA651A3B-D3FA-4D7B-A278-89693189B19A@integrateddevcorp.com>
Message-ID: <d9047f780908012141n30276500k2b2bd22072936f13@mail.gmail.com>

On Sat, Aug 1, 2009 at 11:30 PM, Steve Steiner (listsin) <
listsin at integrateddevcorp.com> wrote:

> Where would we put an "inventory" project for it to be most useful?
>>
>
>  As JP mentioned earlier in this thread, some work has already taken place
> here: <http://twistedmatrix.com/trac/wiki/DocumentationAnalysis>.
>
>
> It doesn't really look like that effort went anywhere.
>

I don't think it's quite fair to say it didn't go *anywhere*, it just didn't
get anywhere particularly complete.  I think the reviews that have been done
thus far are still a valuable resource for someone interested in working on
the documentation.


> Maybe we should have an auction?
>

(snipped lengthy description of labor-intensive bounty resolution process)

What we really need is for people in the community to knuckle down and do
the work of actually reviewing the documents, rewriting things, soliciting
feedback, copy-editing the documents, checking for accuracy, etc.  As
Jessica did when she started the thread :).

Frankly, the work is boring: what the documentation needs is not a dynamic
market-driven system for managing contributions and paying bounties, it's
not a comprehensive overhaul of our entire documentation toolchain.  What it
needs is for people to sit down and read all the documentation, make a list
of all of its problems, one at a time, and then write, delete, and edit as
necessary, incorporating feedback from the community.

Once we have people taking part in that effort and working with the docs on
a daily or weekly basis, *then* we can listen to the reality of the problems
and frustrations that they have working with the tools or determining
priorities or whatever and solve those problems.

Separately from that, if you're interested in contributing some time to
manage a bounty program for the TSF, that might be a reasonable idea.  Other
projects have experimented with bounty-based systems for resolving bugs.
Unfortunately there are a number of difficulties with those systems, which
are really out of the scope of this discussion, but they're worth talking
about if you have a real interest in doing it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090802/ccab5b33/attachment-0001.html>

From tarjei at nu.no  Mon Aug  3 01:35:25 2009
From: tarjei at nu.no (tarjei)
Date: Mon, 03 Aug 2009 09:35:25 +0200
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>	<4A72FD7E.8010205@gmail.com>	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
Message-ID: <4A76933D.4080101@nu.no>

A lot has been said in this discussion but I'll add one thing.
On 07/31/2009 06:32 PM, Reza Lotun wrote:
>> Even if I re-suggested the wiki based documentation, I think it's
>> important to be extra careful on how it's used. One thing I personally
>> hate is projects whose documentation is basically wiki-based, and what
>> you end having is a disconnected set of tips, many out of date, of how
>> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
>> 'Documentation' :).
>
> I agree - the wiki shouldn't *replace* the documentation, but the
> reality is I have loads of bookmarks of blog posts and discussions on
> the mailing list, and it'd be nice if I could to go one place to find
> all that type of info. A "recipe" or "cookbook" wiki might be all we
> need, with the ability to comment on each. The Activestate Python
> Cookbook is kinda what I'm thinking about:
> http://code.activestate.com/recipes/langs/python/

What I miss is a comment system related to the API docs so that it is 
possible for beginners and others to add small notes there without 
having to make a ticket, wait for it to be assigned etc.

Apart from that I will just welcome anyone who writes documentation.

Kind regards,
Tarjei



>
>> Alternatively, a separate doc repo with sphinx based doc could be built
>> so that it will allow for collaborative development making clear that is
>> a work in progress and a product with 'releases'. I say a different repo
>> to avoid having to give commit access to code for people who are working
>> on doc,  maybe same repo with different permissions would be better. And
>> I suggest sphinx to a) start from scratch and add existing doc as we see
>> it's relevant, b) have a more flexible base than HTML docs, and for the
>> reasons mentioned by Kevin (plus I want to learn it :P).
>
> I haven't yet looked at lore or sphinx, but is there a way to support
> sphinx via lore?
>
> Reza
>


-- 
Tarjei Huse
Mobil: 920 63 413



From micahel at gmail.com  Mon Aug  3 01:59:51 2009
From: micahel at gmail.com (Michael Hudson)
Date: Mon, 3 Aug 2009 19:59:51 +1200
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A76933D.4080101@nu.no>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
	<4A76933D.4080101@nu.no>
Message-ID: <aa0dfd860908030059k6846b039yd2d3441a7293c1ae@mail.gmail.com>

2009/8/3 tarjei <tarjei at nu.no>:
> A lot has been said in this discussion but I'll add one thing.
> On 07/31/2009 06:32 PM, Reza Lotun wrote:
>>> Even if I re-suggested the wiki based documentation, I think it's
>>> important to be extra careful on how it's used. One thing I personally
>>> hate is projects whose documentation is basically wiki-based, and what
>>> you end having is a disconnected set of tips, many out of date, of how
>>> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
>>> 'Documentation' :).
>>
>> I agree - the wiki shouldn't *replarce* the documentation, but the
>> reality is I have loads of bookmarks of blog posts and discussions on
>> the mailing list, and it'd be nice if I could to go one place to find
>> all that type of info. A "recipe" or "cookbook" wiki might be all we
>> need, with the ability to comment on each. The Activestate Python
>> Cookbook is kinda what I'm thinking about:
>> http://code.activestate.com/recipes/langs/python/
>
> What I miss is a comment system related to the API docs so that it is
> possible for beginners and others to add small notes there without
> having to make a ticket, wait for it to be assigned etc.

I have an old, half finished idea in this area, which is that pydoctor
has a mode which runs a web server and allows you to edit the
docstrings online.  It needs a bunch of work to get to useful --
probably user accounts, a way of not losing all changes when you
restart the server, a lot of polish and, indeed, maybe a comment
feature or discussion view -- but I think the idea is sound.

If you have pydoctor installed, you can try pydoctor --auto in a
directory containing some python modules.

Cheers,
mwh



From listsin at integrateddevcorp.com  Mon Aug  3 07:50:39 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Mon, 3 Aug 2009 09:50:39 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <d9047f780908012141n30276500k2b2bd22072936f13@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
	<9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
	<d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>
	<FA651A3B-D3FA-4D7B-A278-89693189B19A@integrateddevcorp.com>
	<d9047f780908012141n30276500k2b2bd22072936f13@mail.gmail.com>
Message-ID: <1C41B552-CC9A-4C73-939B-534C7CD7C814@integrateddevcorp.com>

On Aug 2, 2009, at 12:41 AM, Glyph Lefkowitz wrote:

> On Sat, Aug 1, 2009 at 11:30 PM, Steve Steiner (listsin) <listsin at integrateddevcorp.com 
> > wrote:
>> Where would we put an "inventory" project for it to be most useful?
>>
>>  As JP mentioned earlier in this thread, some work has already  
>> taken place here: <http://twistedmatrix.com/trac/wiki/DocumentationAnalysis 
>> >.
>
> It doesn't really look like that effort went anywhere.
>
> I don't think it's quite fair to say it didn't go anywhere, it just  
> didn't get anywhere particularly complete.  I think the reviews that  
> have been done thus far are still a valuable resource for someone  
> interested in working on the documentation.

Ok, fine, it went "over there."  Now...if you're just starting out,  
how much does "over there" help and how much has "over there" ever  
been integrated into anything else?  How would you even find "over  
there?"

I guess I'm still frustrated with the lack of an overarching doc  
organization scheme.

I've tried to use various parts of the Twisted eco-system, on a number  
of projects, and have repeatedly gotten stuck on outdated, disjointed,  
disorganized, and just plain wrong documentation.

As I've said before, the complete lack of date/version stamping on  
example code has been the greatest source of frustration.

I've, more than once, gotten half-way through a tutorial and realize  
that it just plain didn't work with the current version.

End of exploration.

I used the best result I found in my search and it just didn't work.   
Gotta move on; client's getting annoyed.  Unbillable time; bad.

> What we really need is for people in the community to knuckle down  
> and do the work of actually reviewing the documents, rewriting  
> things, soliciting feedback, copy-editing the documents, checking  
> for accuracy, etc.  As Jessica did when she started the thread :).

Hasn't happened, and isn't going to happen, in my opinion, until  
there's some actual incentive for "people in the community", which is  
a small subset of the "potential community", to actually do anything  
about it.  Documentation is not needed by the "community" as much as  
it's needed by the "potential community."

> Frankly, the work is boring: what the documentation needs is not a  
> dynamic market-driven system for managing contributions and paying  
> bounties, it's not a comprehensive overhaul of our entire  
> documentation toolchain.  What it needs is for people to sit down  
> and read all the documentation, make a list of all of its problems,  
> one at a time, and then write, delete, and edit as necessary,  
> incorporating feedback from the community.

Frankly, the work is boring and it ain't happening, never has, and  
never will unless something changes.  Bounty system, torture, Target  
coupons, whatever...

> Once we have people taking part in that effort and working with the  
> docs on a daily or weekly basis, then we can listen to the reality  
> of the problems and frustrations that they have working with the  
> tools or determining priorities or whatever and solve those problems.

See above.  How many years does the same thing have to happen for  
there to be a realization that, without a fundamental change, nothing  
is going to happen?

If you paid someone, 20 hours a week, to babysit the documentation  
effort, they would.  Depending on their competence, there would be  
progress.

If you wait, endlessly for "Once we have people taking part in that  
effort and working with the docs on a daily or weekly basis", you're  
going to get the same result.

> Separately from that, if you're interested in contributing some time  
> to manage a bounty program for the TSF, that might be a reasonable  
> idea.  Other projects have experimented with bounty-based systems  
> for resolving bugs.  Unfortunately there are a number of  
> difficulties with those systems, which are really out of the scope  
> of this discussion, but they're worth talking about if you have a  
> real interest in doing it.

I'm not sure what I'm interested in, at this point, but I certainly am  
not interested in doing it for free and neither is anyone else.

In my opinion, and by existing evidence, coherent documentation ain't  
happening, and won't, unless something fundamental changes.

It's not my project and it's not for me to decide but it seems to me  
that waiting for "people to take part in that effort" is doomed to  
waiting forever...

S

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090803/7df8093e/attachment-0001.html>

From disappearedng at gmail.com  Mon Aug  3 12:34:54 2009
From: disappearedng at gmail.com (disappearedng)
Date: Tue, 4 Aug 2009 02:34:54 +0800
Subject: [Twisted-Python] Twisted.web.client.getPage with proxy?
Message-ID: <15dd54ec0908031134s278bfe9ftc0fd6d31abae51fd@mail.gmail.com>

Hello world,
1) I have a proxy server running on my computer on port 8888. It's
listening on localhost.
I am wondering whether Twisted.web.client.getPage has some sort of
proxy kwargs that can do this for me. ( I checked the source and I
really doubt it has something like that)
What are my alternatives? I have looked at low-level alternatives, and
ProxyClient doesn't really seem to fit my situation.

2) I sometimes have 2 proxy servers running. I know urllib has a
method which allows you to build opener, then you can access webpages
with opener.open('site').read().
Does twisted have something like this which allows me to keep multiple
"proxy space" to access different websites at the same time on
different proxy servers?

Thx



From ezyang at MIT.EDU  Mon Aug  3 16:00:07 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Mon, 03 Aug 2009 18:00:07 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <1249079820-sup-3441@javelin>
	<d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
Message-ID: <1249336297-sup-7263@javelin>

I have updated my draft here:

    http://ezyang.com/twisted/defer2.html

The most notable change is I've removed the section "From Synchronous to
Asynchronous".  I believe (and I think other people agree with me) that
this is an important topic to cover, but it's really *hard* to teach
asynchronous programming and I'd like to think a bit more about how I'd
like to frame the subject.  There are at least two issues that we have
to deal with:

* Why asynchronous?
    - Define synchronous and asynchronous
    - Multiplexing IO
    - Introduce a simple reactor based on select()
* Why callbacks?
    - Asynchronous interaction to synchronous interaction
    - Delocalized execution (the parser example)
    - High level functions in Python review

Quite frankly, I'm stumped on "defining synchronous and asynchronous."
Asynchronous had always made sense to me, coming from JavaScript, since
it was "you click this button and something should happen!"  But that
is a very different use-case of asynchronous programming than Twisted is.
And Glyph raised some very salient concerns about what we were trying to
teach people.  I just don't know what direction people are coming from.

As such, the document now is targeted to "people who know the basics
of asynchronous programming and grok callbacks", and I've incorporated
Itamar's excellent suggesting of comparing explicit callback parameters
and the Deferred object, which I hope dispells the notion of Deferred
being magical fairly well (my assertion is Deferred is merely an
abstraction over said callback parameters.)  I've also fully fleshed
out the Deferreds reference; any omissions are my fault.

The plan next is to discuss composing deferreds (which will also
touch on when you should and how to create your own deferreds, as
well as deferredlist) and the convenience primitives.

Cheers,
Edward



From dave at davebritton.com  Mon Aug  3 17:08:36 2009
From: dave at davebritton.com (Dave Britton)
Date: Mon, 3 Aug 2009 19:08:36 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
References: <1248977158-sup-6989@javelin><aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com><1248986420-sup-4086@javelin>
	<1249079820-sup-3441@javelin><d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
	<1249336297-sup-7263@javelin>
Message-ID: <365b01ca148f$55712e00$0500a8c0@yoda>

----- Original Message -----
From: "Edward Z. Yang" <ezyang at MIT.EDU>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Monday, August 03, 2009 6:00 PM
Subject: Re: [Twisted-Python] Deferred documentation rewrite
================
I like the side-by-side regular and twisted versions,  that's helpful.
You are approaching the complicated stuff toward the end - please don't stop
there.
Show some more examples of more intricate cases of side-by-side logic,
eg how to use deferreds for this if all foo's are asynchronous:
x=foo1(y)
if x > 0:
    z=foo2(x)
    y = foo3(z)
else:
    z=foo4(x,y)
alldone=foo5(z)
# now add error handling for all the deferreds
# how would I debug things if foo3 had an unanticipated error?
================
My latest real question for the docs to answer is,
Are these different?
== example 1 ====
d=asynchronousprocess()
d.addCallback(b)
d.addCallback(c)
d.addErrback(errbc)
=== example 2 ====
d=asynchronousprocess().addCallback(b).d.addCallback(c).d.addErrback(errd)
=============
Why or why not? When might one use one form over the other?
-Dave




From lvh at laurensvh.be  Mon Aug  3 18:56:18 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 4 Aug 2009 02:56:18 +0200
Subject: [Twisted-Python] twisted.positioning preliminary review
Message-ID: <cedc0c090908031756u4d8ad906p3b2b52b95373e319@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hey :-)



I've been told that I need to produce a patch faster, and most of the
eyesores that I was really unhappy with have been removed (no more
mutable sentenceData dict \o/). As usual, comments welcome.

I could produce an actual patch, but perhaps it would be more useful
to do this with the Launchpad-published bzr branch? Obviously that
means I can't attach a real patch to a trac ticket. If people want me
to, I will.

Some of the obvious problems that I've seen myself or that come up on
the mailing list are tagged with "REVIEW", so if you only have 10
minutes to look at it, grep nmea.py for it :-)

Obvious TODO is howto documentation, but I'm not starting on that
until the API has been reviewed thoroughly for obvious reasons.


Here it is: http://bit.ly/3wWL2c

Or you could just: bzr branch lp:~lvh/twisted/positioning



Thanks for your time
Laurens
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkp3hvsACgkQT5v5zGkvKT4vTwCdG41LE0snM8vdK1L9ohF8wZRo
+T4An2RQz22QmjT1YFEAmOT8IHJyoT8C
=WbHv
-----END PGP SIGNATURE-----



From glyph at twistedmatrix.com  Mon Aug  3 20:37:39 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 3 Aug 2009 22:37:39 -0400
Subject: [Twisted-Python] twisted.positioning preliminary review
In-Reply-To: <cedc0c090908031756u4d8ad906p3b2b52b95373e319@mail.gmail.com>
References: <cedc0c090908031756u4d8ad906p3b2b52b95373e319@mail.gmail.com>
Message-ID: <d9047f780908031937w7c53e551vd23047f623955533@mail.gmail.com>

On Mon, Aug 3, 2009 at 8:56 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:


> I could produce an actual patch, but perhaps it would be more useful
> to do this with the Launchpad-published bzr branch? Obviously that
> means I can't attach a real patch to a trac ticket. If people want me
> to, I will.


The ticket is currently pending review, so when someone has some time for
Twisted reviews, you should get some feedback on it.  You might want to
attach a comment that makes it very clear for a reviewer where the code
actually is, since the ticket seems to have begun its life in the 'review'
state; it's a bit unorthodox for someone to keep working on a ticket once
it's been submitted for review.  The normal workflow is to have the comment
that attaches the 'review' keyword be the submission for review, and the
comment that removes it be the review commentary.  (Or something close to
that, trac's UI is so hard to drive.)

We've got a bit of a review backlog right now so there may be some latency
:-\.  Perhaps you should volunteer to review some tickets yourself? :)

The way to get from your launchpad branch to the relevant SVN-like diff is
this:

bzr get lp:~lvh/twisted/positioning positioning-3926
cd positioning-3926
bzr diff -r ancestor:lp:twisted

Attaching this patch to the ticket may make  a reviewer's life easier; not
everyone is equally facile with bzr.


> Some of the obvious problems that I've seen myself or that come up on
> the mailing list are tagged with "REVIEW", so if you only have 10
> minutes to look at it, grep nmea.py for it :-)
>
> Obvious TODO is howto documentation, but I'm not starting on that
> until the API has been reviewed thoroughly for obvious reasons.
>

This can be a separate ticket.

Here it is: http://bit.ly/3wWL2c
>
> Or you could just: bzr branch lp:~lvh/twisted/positioning
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090803/db3d5a66/attachment.html>

From vitaly at synapticvision.com  Tue Aug  4 08:17:53 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Tue, 04 Aug 2009 10:17:53 -0400
Subject: [Twisted-Python] OS for Twisted Framework to run on
Message-ID: <20090804101753.10214krmneg7nuw4@216.129.205.5>

hi,
is there any significant reason/advantage to run the Twisted Framework  
on Linux or on FreeBSD?

Appreciate the help.




From rlotun at gmail.com  Tue Aug  4 08:37:52 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 4 Aug 2009 15:37:52 +0100
Subject: [Twisted-Python] OS for Twisted Framework to run on
In-Reply-To: <20090804101753.10214krmneg7nuw4@216.129.205.5>
References: <20090804101753.10214krmneg7nuw4@216.129.205.5>
Message-ID: <95bb10690908040737x421417a2ob164c75d28936d71@mail.gmail.com>

Hi,

> is there any significant reason/advantage to run the Twisted Framework
> on Linux or on FreeBSD?

On Linux you can use the epoll reactor. FreeBSD's equivalent is kqueue
and I don't think that reactor is as stable as the epoll one. I could
be wrong though.

Cheers,
Reza


-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From johnaherne at rocs.co.uk  Tue Aug  4 09:08:24 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Tue, 4 Aug 2009 16:08:24 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
Message-ID: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>

This is a really basic problem we are trying to decide about,

We have programs that run quite happily, so far. Its main task is to receive
data from port A and send it out via port B. Then receive data via port B
and send it out via port A. It's pretty much like a chat setup. You just
build up a list of connected clients and send data to them as required

One side A receives some input from a tcp port - about 100-200 characters,
and forwards it to another port B. We do not need to wait for any response.
If we get a response we pick that up through line receiver. We also run a
calllater to check if we got a response on linereceiver within the timeframe
specified. If not we drop the connection.

Traffic coming in from port B is analysed and some subset is sent back to
port A.

Ignoring port A for the moment, just concentrating on port B, we have tried
three options:--

1. We set up a defer to handle the sendline to port B so that the reactor
would schedule it in its own good time. No threads involved using the
standard twisted setup. When we get a response through receiveline we fire
the callback defer. If we timeout via callLater we fire the errback to clear
the defer. In this case the defer does not seem to be doing very much

2. Now a fresh pair of eyes is looking at the code and saying why are we
using a deferred for sending data to port B. We could just issue a straight
sendline as part of the main code and carry on. If we get a response via
linereceiver,we process it normally, otherwise we set our callLater running
and timeout and lose the connection. So no deferreds required at all. It
does seem to work.What we are not sure about is what penalty is incurred in
terms of reliability or throughput by using sendline without a deferred. We
are not too sure what the holdup will be and whether it could end up halting
the show. Is it better to schedule these messages via deferreds or am I
missing something obvious

3. So we then did an experiment and used defertothread to run the sendline
in a separate thread with its own defer to maximise the asynchronous running
of the code. So now we are running threads when one of the reasons for
looking at twisted was that we could avoid threads as much as possible.

The conundrum we are trying to resolve now is which option should we use. Do
any of the options have a built-in problem awaiting the unwary. In theory
all 3 options work. But if No 1 works well enough for our volume of traffic
should we adopt that one. Or is it better to start using the defertothread
option. Is there a simple answer

The traffic is not large, upto a 100-200 remote devices on port B. They will
send GPS data every 20 secs, and about 500 messages of about 200 bytes
average throught the day. The remote devices will respond in an irregular
manner without dropping the connection, so we force a disconnectf if
important messages are not getting through. They are then forced to
reconnect.

We have looked through the code searching for enlightment and it does seem
to be well documented, but the information we are looking for comes well
before the doc strings.

Hopefully, someone can give us some pointers in the right direction.

Thanks for any help.

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090804/da9d3c85/attachment.html>

From andrewfr_ice at yahoo.com  Tue Aug  4 11:54:17 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 4 Aug 2009 10:54:17 -0700 (PDT)
Subject: [Twisted-Python] Deferred documentation rewrite
Message-ID: <962383.45156.qm@web34201.mail.mud.yahoo.com>


Hi Edward:

Message: 2
Date: Mon, 03 Aug 2009 18:00:07 -0400
From: "Edward Z. Yang" <ezyang at MIT.EDU>
Subject: Re: [Twisted-Python] Deferred documentation rewrite
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID: <1249336297-sup-7263 at javelin>
Content-Type: text/plain; charset=UTF-8

>Why callbacks?
>  - Asynchronous interaction to synchronous interaction
>  - Delocalized execution (the parser example)
>  - High level functions in Python review

I don't know if this is an aid but here goes: When I was preparing my
Pycon 2008 talk, amongst the many papers I read, was the Doug 
Schmitt's concurrency design pattern papers including the original 
Reactor Pattern paper. I also read the Microsoft "Cooperative Task Management without Manual Stack Management Event-driven Programming is Not the Opposite of Threaded Programming" paper. In the light of those papers, 
this is the way I see things:

1) Reactors provide a portable form of non-preemptive multitasking. By
implication, reactors are schedulers. 

2) If you buy Reactor as scheduler, then Deferreds can be viewed as representing a thread (or chain) of execution, each callback analogous to a continuation - the next address to resume execution when a result is ready.

3) One of the main differences between asychronous and synchronous processing becomes who is responsible for setting up shared state between
the links in the execution chain.

>Quite frankly, I'm stumped on "defining synchronous and asynchronous."

Simple definition: In a synchronous call, the caller blocks until a result is ready. Upon return the next statement is executed (barring something like an exception). In an asynchronous call, the caller does not wait for a result and continues.

> I just don't know what direction people are coming from.

I would suggest most people are trying to solve simple problems and want the least surprise. Unfortunately asynchronous programming has lots of
surprises. In case of terminology, try looking up how terms 
like 'asynchronous' or 'synchronous' as used in a few of the more 
popular network programming books.

Cheers,
Andrew






      



From ddwiggins at advpubtech.com  Tue Aug  4 12:30:12 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 04 Aug 2009 11:30:12 -0700
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <962383.45156.qm@web34201.mail.mud.yahoo.com>
References: <962383.45156.qm@web34201.mail.mud.yahoo.com>
Message-ID: <h59unk$kq4$1@ger.gmane.org>

Andrew Francis wrote:
> Simple definition: In a synchronous call, the caller blocks until a result is ready. Upon return the next statement is executed (barring something like an exception). In an asynchronous call, the caller does not wait for a result and continues.

Just a thought on terminology: in the syncrhonous situation, A calls B; 
in async, A initiates (or triggers) B.  The intent here is to remove any 
connotation that A might wait for a response.  In line with this, B 
isn't a function or method, it's a task, unit of work, process, ...

For what it may be worth...

-- 
Don Dwiggins
Advanced Publishing Technology




From kevin.horn at gmail.com  Tue Aug  4 12:35:10 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 4 Aug 2009 13:35:10 -0500
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
Message-ID: <562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>

On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

> This is a really basic problem we are trying to decide about,
>
> We have programs that run quite happily, so far. Its main task is to
> receive data from port A and send it out via port B. Then receive data via
> port B and send it out via port A. It's pretty much like a chat setup. You
> just build up a list of connected clients and send data to them as required
>
> One side A receives some input from a tcp port - about 100-200 characters,
> and forwards it to another port B. We do not need to wait for any response.
> If we get a response we pick that up through line receiver. We also run a
> calllater to check if we got a response on linereceiver within the timeframe
> specified. If not we drop the connection.
>
> Traffic coming in from port B is analysed and some subset is sent back to
> port A.
>
> Ignoring port A for the moment, just concentrating on port B, we have tried
> three options:--
>
> 1. We set up a defer to handle the sendline to port B so that the reactor
> would schedule it in its own good time. No threads involved using the
> standard twisted setup. When we get a response through receiveline we fire
> the callback defer. If we timeout via callLater we fire the errback to clear
> the defer. In this case the defer does not seem to be doing very much
>
> 2. Now a fresh pair of eyes is looking at the code and saying why are we
> using a deferred for sending data to port B. We could just issue a straight
> sendline as part of the main code and carry on. If we get a response via
> linereceiver,we process it normally, otherwise we set our callLater running
> and timeout and lose the connection. So no deferreds required at all. It
> does seem to work.What we are not sure about is what penalty is incurred in
> terms of reliability or throughput by using sendline without a deferred. We
> are not too sure what the holdup will be and whether it could end up halting
> the show. Is it better to schedule these messages via deferreds or am I
> missing something obvious
>
> 3. So we then did an experiment and used defertothread to run the sendline
> in a separate thread with its own defer to maximise the asynchronous running
> of the code. So now we are running threads when one of the reasons for
> looking at twisted was that we could avoid threads as much as possible.
>
> The conundrum we are trying to resolve now is which option should we use.
> Do any of the options have a built-in problem awaiting the unwary. In theory
> all 3 options work. But if No 1 works well enough for our volume of traffic
> should we adopt that one. Or is it better to start using the defertothread
> option. Is there a simple answer
>
> The traffic is not large, upto a 100-200 remote devices on port B. They
> will send GPS data every 20 secs, and about 500 messages of about 200 bytes
> average throught the day. The remote devices will respond in an irregular
> manner without dropping the connection, so we force a disconnectf if
> important messages are not getting through. They are then forced to
> reconnect.
>
> We have looked through the code searching for enlightment and it does seem
> to be well documented, but the information we are looking for comes well
> before the doc strings.
>
> Hopefully, someone can give us some pointers in the right direction.
>
> Thanks for any help.
>
> John Aherne
>
>
>
It seems to me that the volume of traffic you are dealing with isn't so high
that you need to worry too much about direct sendline causing problems.  If
I were writing this from scratch based on my understanding of what you've
written above, I would probably go with option 2. (Keep in mind, my
understanding may be flawed...so...)  However, if you've already got things
working with option 1, and the added complexity isn't causing you any
trouble, I don't see any real reason not to use that, since you've already
got that working.  Others may disagree...

Option 3 seems totally unnecessary to me.  I typically stay away from
threads in Twisted unless I have a long running non-network process to deal
with (disk access, db access, heavy math processing, etc.).  Especially
because of the relative "heaviness" of threads when using Python (due to
complex interactions with the GIL), I would avoid this method...it will
probably hurt performance more than Option 1 (though still probably not
enough to matter).

Others feel free to slap me if I'm giving bad advice :)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090804/471865af/attachment.html>

From koranthala at gmail.com  Tue Aug  4 13:28:33 2009
From: koranthala at gmail.com (Thalassery Koran)
Date: Wed, 5 Aug 2009 00:58:33 +0530
Subject: [Twisted-Python] My first wxPython App with Twisted
Message-ID: <3f81d4780908041228q251a14d9l1cf7bb3569236804@mail.gmail.com>

Hi,
    I am creating the first GUI app (wxPython based) using Twisted.
    I am facing an issue which I cannot seem to solve/understand due
to lack of trace or anything.

    I had a big app written on twisted and now I am creating a login
screen to the app.
    The app used to work without any issues. I added the login screen
and the login screen comes up.
     But then everything freezes up. I have to force quit the python
application to get anything back. Can anyone help me solve it?

    The code is as follows:

import wx
import os
import logging

from twisted.internet import wxreactor
wxreactor.install()
from twisted.internet import reactor #Called only after wxreactor.install()
from twisted.internet.task import LoopingCall

import clientapp

def opj(path):
    """ Convert paths to the platform-specific separator """
    st = apply(os.path.join, tuple(path.split('/')))
    if path.startswith('/'):
        st = '/' + st
    return st


class APPApp(wx.App):
    def OnInit(self):
        self.frame = APPFrame(None, -1, " APP Login", size=(200, 150))
        self.panel = APPPanel(self.frame,-1)
        client = clientapp.setup_app()
        call = LoopingCall(client.run)
        call.start(.51)
        return True


def main():
    app = APPApp(0)
    reactor.registerWxApp(app)
    try:
        reactor.run()
    except StandardError:
        raise


class APPPanel(wx.Panel):
    """ APP GUI PANEL

    The panel in which the user name and password is typed.
    @var ID_LOGIN: Login buttons id. When this button is clicked, the data
        is stored for logging.

    """
    ID_LOGIN = wx.NewId()

    def __init__(self, parent, id):
        self.parent = parent
        wx.Panel.__init__(self, parent, id, size=(200,150))
        self.quote = wx.StaticText(self, -1, "APP Login",wx.Point(60, 10))
        wx.StaticText(self, wx.ID_ANY, "User Name ", wx.Point(20, 33))
        wx.StaticText(self, wx.ID_ANY, "Password ", wx.Point(20, 58))
        self.usernameBox = wx.TextCtrl(self, wx.ID_ANY, "",
wx.Point(80, 31), wx.Size(100, wx.ID_ANY))
        self.usernameBox.SetFocus()
        self.passwordBox = wx.TextCtrl(self, wx.ID_ANY, "",
wx.Point(80, 56), wx.Size(100, wx.ID_ANY), style=wx.TE_PASSWORD)
        self.button =wx.Button(self, self.ID_LOGIN, "Login", wx.Point(60, 88))
        wx.EVT_BUTTON(parent, self.ID_LOGIN, self.on_login)

    def on_login(self, event):
        username = self.usernameBox.GetString(0, 128)
        password = self.passwordBox.GetString(0, 128)
        if username and password:
            self.parent.on_login_click(username, password)


class APPTaskBarIcon(wx.TaskBarIcon):
    ''' TaskBar Icon

    So that the application is always alive on the taskbar.
    3 operations are possible, DoubleClick on the taskbar would bring up the
    window, right click will bring up options to restore or exit the tool.

    '''
    TBMENU_RESTORE = wx.NewId()
    TBMENU_CLOSE   = wx.NewId()

    def __init__(self, frame):
        wx.TaskBarIcon.__init__(self)
        self.frame = frame
        # Set the image
        icon = self.MakeIcon(self.frame.get_image())
        self.SetIcon(icon, "APP")
        self.imgidx = 1
        # bind some events
        self.Bind(wx.EVT_TASKBAR_LEFT_DCLICK, self.OnTaskBarActivate)
        self.Bind(wx.EVT_MENU, self.OnTaskBarActivate, id=self.TBMENU_RESTORE)
        self.Bind(wx.EVT_MENU, self.OnTaskBarClose, id=self.TBMENU_CLOSE)

    def CreatePopupMenu(self):
        """ Right Click Popup Menu

        This method is called by the base class when it needs to popup
        the menu for the default EVT_RIGHT_DOWN event.

        """
        menu = wx.Menu()
        menu.Append(self.TBMENU_RESTORE, "Restore Window")
        menu.Append(self.TBMENU_CLOSE, "Exit APP")
        return menu

    def MakeIcon(self, img):
        """ Return the generated Icon.

        This function is required because various platforms have different
        requirements for the icon size.

        """
        if "wxMSW" in wx.PlatformInfo:
            img = img.Scale(16, 16)
        elif "wxGTK" in wx.PlatformInfo:
            img = img.Scale(22, 22)
        icon = wx.IconFromBitmap(img.ConvertToBitmap() )
        return icon

    def OnTaskBarActivate(self, evt):
        ''' Activation code - say DoubleClick etc. It raises the window '''
        if self.frame.IsIconized():
            self.frame.Iconize(False)
        if not self.frame.IsShown():
            self.frame.Show(True)
        self.frame.Raise()

    def OnTaskBarClose(self, evt):
        ''' On right click and close, the frame itself is closed '''
        wx.CallAfter(self.frame.Close)


class APPFrame(wx.Frame):
    def __init__(self, parent, id, title, size=None):
        wx.Frame.__init__(self, parent, id, title,
                          size=size, pos=wx.Point(400, 300))
        icon = self.get_icon()
        self.SetIcon(icon)
        self.tbicon = APPTaskBarIcon(self)
        self.Show(True)
        self.Bind(wx.EVT_CLOSE, self.OnCloseWindow)
        self.Bind(wx.EVT_ICONIZE, self.OnIconify)

    def on_login_click(self, username, password):
        self.Hide()

    def OnCloseWindow(self, event):
        if self.tbicon is not None:
            self.tbicon.Destroy()
        event.Skip()

    def OnIconify(self, event):
        self.Hide()

    def get_image(self):
        img= wx.Image(opj('client.ico'), wx.BITMAP_TYPE_ICO)
        return img

    def get_icon(self):
        img = self.get_image()
        icon = wx.IconFromBitmap(img.ConvertToBitmap() )
        return icon


if __name__ == '__main__':
    main()


--------------
If somebody can help me out, I would be much obliged.



From kevin.horn at gmail.com  Tue Aug  4 14:00:55 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 4 Aug 2009 15:00:55 -0500
Subject: [Twisted-Python] My first wxPython App with Twisted
In-Reply-To: <3f81d4780908041228q251a14d9l1cf7bb3569236804@mail.gmail.com>
References: <3f81d4780908041228q251a14d9l1cf7bb3569236804@mail.gmail.com>
Message-ID: <562bcc10908041300g80f0ad5tf7c6e1233d83cfb4@mail.gmail.com>

On Tue, Aug 4, 2009 at 2:28 PM, Thalassery Koran <koranthala at gmail.com>wrote:

> Hi,
>    I am creating the first GUI app (wxPython based) using Twisted.
>    I am facing an issue which I cannot seem to solve/understand due
> to lack of trace or anything.
>
>    I had a big app written on twisted and now I am creating a login
> screen to the app.
>    The app used to work without any issues. I added the login screen
> and the login screen comes up.
>     But then everything freezes up. I have to force quit the python
> application to get anything back. Can anyone help me solve it?
>
>    The code is as follows:
>
> import wx
> import os
> import logging
>
> from twisted.internet import wxreactor
> wxreactor.install()
> from twisted.internet import reactor #Called only after wxreactor.install()
> from twisted.internet.task import LoopingCall
>
> import clientapp
>
> def opj(path):
>    """ Convert paths to the platform-specific separator """
>    st = apply(os.path.join, tuple(path.split('/')))
>    if path.startswith('/'):
>        st = '/' + st
>    return st
>
>
> class APPApp(wx.App):
>    def OnInit(self):
>        self.frame = APPFrame(None, -1, " APP Login", size=(200, 150))
>        self.panel = APPPanel(self.frame,-1)
>        client = clientapp.setup_app()
>        call = LoopingCall(client.run)
>        call.start(.51)
>        return True
>
>
> def main():
>    app = APPApp(0)
>    reactor.registerWxApp(app)
>    try:
>        reactor.run()
>    except StandardError:
>        raise
>
>
> class APPPanel(wx.Panel):
>    """ APP GUI PANEL
>
>    The panel in which the user name and password is typed.
>    @var ID_LOGIN: Login buttons id. When this button is clicked, the data
>        is stored for logging.
>
>    """
>    ID_LOGIN = wx.NewId()
>
>    def __init__(self, parent, id):
>        self.parent = parent
>        wx.Panel.__init__(self, parent, id, size=(200,150))
>        self.quote = wx.StaticText(self, -1, "APP Login",wx.Point(60, 10))
>        wx.StaticText(self, wx.ID_ANY, "User Name ", wx.Point(20, 33))
>        wx.StaticText(self, wx.ID_ANY, "Password ", wx.Point(20, 58))
>        self.usernameBox = wx.TextCtrl(self, wx.ID_ANY, "",
> wx.Point(80, 31), wx.Size(100, wx.ID_ANY))
>        self.usernameBox.SetFocus()
>        self.passwordBox = wx.TextCtrl(self, wx.ID_ANY, "",
> wx.Point(80, 56), wx.Size(100, wx.ID_ANY), style=wx.TE_PASSWORD)
>        self.button =wx.Button(self, self.ID_LOGIN, "Login", wx.Point(60,
> 88))
>        wx.EVT_BUTTON(parent, self.ID_LOGIN, self.on_login)
>
>    def on_login(self, event):
>        username = self.usernameBox.GetString(0, 128)
>        password = self.passwordBox.GetString(0, 128)
>        if username and password:
>            self.parent.on_login_click(username, password)
>
>
> class APPTaskBarIcon(wx.TaskBarIcon):
>    ''' TaskBar Icon
>
>    So that the application is always alive on the taskbar.
>    3 operations are possible, DoubleClick on the taskbar would bring up the
>    window, right click will bring up options to restore or exit the tool.
>
>    '''
>    TBMENU_RESTORE = wx.NewId()
>    TBMENU_CLOSE   = wx.NewId()
>
>    def __init__(self, frame):
>        wx.TaskBarIcon.__init__(self)
>        self.frame = frame
>        # Set the image
>        icon = self.MakeIcon(self.frame.get_image())
>        self.SetIcon(icon, "APP")
>        self.imgidx = 1
>        # bind some events
>        self.Bind(wx.EVT_TASKBAR_LEFT_DCLICK, self.OnTaskBarActivate)
>        self.Bind(wx.EVT_MENU, self.OnTaskBarActivate,
> id=self.TBMENU_RESTORE)
>        self.Bind(wx.EVT_MENU, self.OnTaskBarClose, id=self.TBMENU_CLOSE)
>
>    def CreatePopupMenu(self):
>        """ Right Click Popup Menu
>
>        This method is called by the base class when it needs to popup
>        the menu for the default EVT_RIGHT_DOWN event.
>
>        """
>        menu = wx.Menu()
>        menu.Append(self.TBMENU_RESTORE, "Restore Window")
>        menu.Append(self.TBMENU_CLOSE, "Exit APP")
>        return menu
>
>    def MakeIcon(self, img):
>        """ Return the generated Icon.
>
>        This function is required because various platforms have different
>        requirements for the icon size.
>
>        """
>        if "wxMSW" in wx.PlatformInfo:
>            img = img.Scale(16, 16)
>        elif "wxGTK" in wx.PlatformInfo:
>            img = img.Scale(22, 22)
>        icon = wx.IconFromBitmap(img.ConvertToBitmap() )
>        return icon
>
>    def OnTaskBarActivate(self, evt):
>        ''' Activation code - say DoubleClick etc. It raises the window '''
>        if self.frame.IsIconized():
>            self.frame.Iconize(False)
>        if not self.frame.IsShown():
>            self.frame.Show(True)
>        self.frame.Raise()
>
>    def OnTaskBarClose(self, evt):
>        ''' On right click and close, the frame itself is closed '''
>        wx.CallAfter(self.frame.Close)
>
>
> class APPFrame(wx.Frame):
>    def __init__(self, parent, id, title, size=None):
>        wx.Frame.__init__(self, parent, id, title,
>                          size=size, pos=wx.Point(400, 300))
>        icon = self.get_icon()
>        self.SetIcon(icon)
>        self.tbicon = APPTaskBarIcon(self)
>        self.Show(True)
>        self.Bind(wx.EVT_CLOSE, self.OnCloseWindow)
>        self.Bind(wx.EVT_ICONIZE, self.OnIconify)
>
>    def on_login_click(self, username, password):
>        self.Hide()
>
>    def OnCloseWindow(self, event):
>        if self.tbicon is not None:
>            self.tbicon.Destroy()
>        event.Skip()
>
>    def OnIconify(self, event):
>        self.Hide()
>
>    def get_image(self):
>        img= wx.Image(opj('client.ico'), wx.BITMAP_TYPE_ICO)
>        return img
>
>    def get_icon(self):
>        img = self.get_image()
>        icon = wx.IconFromBitmap(img.ConvertToBitmap() )
>        return icon
>
>
> if __name__ == '__main__':
>    main()
>
>
> --------------
> If somebody can help me out, I would be much obliged.
>
>
Well, it's hard to say without looking at your Twisted code, but what
exactly is the LoopingCall for?  It seems like it would be run regardless of
whether the user had logged in or not.

I'm guessing, but maybe client.run() shouldn't be run until you have a
username and password?

Might be a place to start looking, anyway.  It looks like you've set things
up properly in main() an App.OnInit(), but I haven't worked with Twisted +
wx in a while (pre-wxreactor), so I'm not 100% sure...

I guess it boils down to what exactly client.run() does...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090804/a2ba56d8/attachment.html>

From cyli.ying.li at gmail.com  Tue Aug  4 14:23:16 2009
From: cyli.ying.li at gmail.com (Ying Li)
Date: Tue, 4 Aug 2009 16:23:16 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1249336297-sup-7263@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <1249079820-sup-3441@javelin>
	<d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
	<1249336297-sup-7263@javelin>
Message-ID: <668503780908041323v4075f62an6bc790fa639d4b87@mail.gmail.com>

In the Callbacks and errbacks section:
"Notice that in the synchronous version, process is inside the
try..except block. This translates over to the asynchronous code: if
process throws an exception, handle_twisted will get a Failure
object..." : I think you may mean "handle_twisted_error", not
"handle_twisted"

On Mon, Aug 3, 2009 at 6:00 PM, Edward Z. Yang<ezyang at mit.edu> wrote:
> I have updated my draft here:
>
>    http://ezyang.com/twisted/defer2.html



From ezyang at MIT.EDU  Tue Aug  4 14:59:30 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Tue, 04 Aug 2009 16:59:30 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: 1249336297-sup-7263@javelin
Message-ID: <1249419473-sup-8108@javelin>

Thanks!  I've updated the docs accordingly.

Cheers,
Edward



From johnaherne at rocs.co.uk  Tue Aug  4 15:26:17 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Tue, 4 Aug 2009 22:26:17 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
Message-ID: <faf2d7810908041426v5339760k4d8ac0634b9925fc@mail.gmail.com>

Kevin
Thanks for the reply.

It's good to get some feedback on how someone else would go about tackling a
particular issue. It helps to confirm whether what you a retrying makes
sense.

Thanks

John Aherne

On Tue, Aug 4, 2009 at 7:35 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>
>> This is a really basic problem we are trying to decide about,
>>
>> We have programs that run quite happily, so far. Its main task is to
>> receive data from port A and send it out via port B. Then receive data via
>> port B and send it out via port A. It's pretty much like a chat setup. You
>> just build up a list of connected clients and send data to them as required
>>
>> One side A receives some input from a tcp port - about 100-200 characters,
>> and forwards it to another port B. We do not need to wait for any response.
>> If we get a response we pick that up through line receiver. We also run a
>> calllater to check if we got a response on linereceiver within the timeframe
>> specified. If not we drop the connection.
>>
>> Traffic coming in from port B is analysed and some subset is sent back to
>> port A.
>>
>> Ignoring port A for the moment, just concentrating on port B, we have
>> tried three options:--
>>
>> 1. We set up a defer to handle the sendline to port B so that the reactor
>> would schedule it in its own good time. No threads involved using the
>> standard twisted setup. When we get a response through receiveline we fire
>> the callback defer. If we timeout via callLater we fire the errback to clear
>> the defer. In this case the defer does not seem to be doing very much
>>
>> 2. Now a fresh pair of eyes is looking at the code and saying why are we
>> using a deferred for sending data to port B. We could just issue a straight
>> sendline as part of the main code and carry on. If we get a response via
>> linereceiver,we process it normally, otherwise we set our callLater running
>> and timeout and lose the connection. So no deferreds required at all. It
>> does seem to work.What we are not sure about is what penalty is incurred in
>> terms of reliability or throughput by using sendline without a deferred. We
>> are not too sure what the holdup will be and whether it could end up halting
>> the show. Is it better to schedule these messages via deferreds or am I
>> missing something obvious
>>
>> 3. So we then did an experiment and used defertothread to run the sendline
>> in a separate thread with its own defer to maximise the asynchronous running
>> of the code. So now we are running threads when one of the reasons for
>> looking at twisted was that we could avoid threads as much as possible.
>>
>> The conundrum we are trying to resolve now is which option should we use.
>> Do any of the options have a built-in problem awaiting the unwary. In theory
>> all 3 options work. But if No 1 works well enough for our volume of traffic
>> should we adopt that one. Or is it better to start using the defertothread
>> option. Is there a simple answer
>>
>> The traffic is not large, upto a 100-200 remote devices on port B. They
>> will send GPS data every 20 secs, and about 500 messages of about 200 bytes
>> average throught the day. The remote devices will respond in an irregular
>> manner without dropping the connection, so we force a disconnectf if
>> important messages are not getting through. They are then forced to
>> reconnect.
>>
>> We have looked through the code searching for enlightment and it does seem
>> to be well documented, but the information we are looking for comes well
>> before the doc strings.
>>
>> Hopefully, someone can give us some pointers in the right direction.
>>
>> Thanks for any help.
>>
>> John Aherne
>>
>>
>>
> It seems to me that the volume of traffic you are dealing with isn't so
> high that you need to worry too much about direct sendline causing
> problems.  If I were writing this from scratch based on my understanding of
> what you've written above, I would probably go with option 2. (Keep in mind,
> my understanding may be flawed...so...)  However, if you've already got
> things working with option 1, and the added complexity isn't causing you any
> trouble, I don't see any real reason not to use that, since you've already
> got that working.  Others may disagree...
>
> Option 3 seems totally unnecessary to me.  I typically stay away from
> threads in Twisted unless I have a long running non-network process to deal
> with (disk access, db access, heavy math processing, etc.).  Especially
> because of the relative "heaviness" of threads when using Python (due to
> complex interactions with the GIL), I would avoid this method...it will
> probably hurt performance more than Option 1 (though still probably not
> enough to matter).
>
> Others feel free to slap me if I'm giving bad advice :)
>
> Kevin Horn
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090804/bd143bf6/attachment.html>

From jarrod at vertigrated.com  Tue Aug  4 16:52:42 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Tue, 4 Aug 2009 18:52:42 -0400
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
Message-ID: <fa3d0c740908041552w4c0b2addu19fc4bbefe29693e@mail.gmail.com>

Deferreds don't do what you think they do.
They don't do anything to make your code non-blocking.
They only adhere to a contract that something will eventually be returned.
The most common use of deferred's to make your code non-blocking is to use
.deferToThread()
or some other mechanism to make the long running code non-blocking, like
spawning a process.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090804/4e08ac9b/attachment.html>

From johann.borck at densedata.com  Tue Aug  4 17:14:03 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Wed, 05 Aug 2009 01:14:03 +0200
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
Message-ID: <4A78C0BB.3000100@densedata.com>


On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk 
<mailto:johnaherne at rocs.co.uk>> wrote:
> This is a really basic problem we are trying to decide about,
>
> We have programs that run quite happily, so far. Its main task is to 
> receive data from port A and send it out via port B. Then receive data 
> via port B and send it out via port A. It's pretty much like a chat 
> setup. You just build up a list of connected clients and send data to 
> them as required
>
> One side A receives some input from a tcp port - about 100-200 
> characters, and forwards it to another port B. We do not need to wait 
> for any response. If we get a response we pick that up through line 
> receiver. We also run a calllater to check if we got a response on 
> linereceiver within the timeframe specified. If not we drop the 
> connection.
>
> Traffic coming in from port B is analysed and some subset is sent back 
> to port A.
>
> Ignoring port A for the moment, just concentrating on port B, we have 
> tried three options:--
>
> 1. We set up a defer to handle the sendline to port B so that the 
> reactor would schedule it in its own good time.

The reactor always schedules reads and writes "in its own good time", 
which means it writes whenever there's data to write and the socket is 
ready for writing. If you have data that can't be written at once, 
because it's too much for the socket to handle in a non-blocking 
fashion, the reactor (along with the transport) will take care of it, 
and defer its delivery itself, no need for any deferreds you'd had to 
care about here.

Correct me if I'm wrong, but as I understand your description, option 1. 
and 2. do not behave identically. This is how I interpret it:
option 1:

A sends msg1 to [svc] : wrap msg1 in deferred1
[ - time - ]
B sends data? to [svc] :
                                        1. callback deferred1: [svc] 
sends msg1 to B
                                        2. handle data?
B sends rsp1 to [svc]: [svc] sends rsp1 to A

option 2:

A sends msg1 to [svc] : [svc] sends msg1 to B
B sends rsp1 to [svc] :  [svc] sends rsp1 to A

If this is the case, you rely on some data? being sent to [svc] before 
msg1 can be forwarded to B. That means that you have msg1 in memory 
until you receive data? from B. This doesn't cause problems in your 
case, since you handle small messages in big intervals. But if you'd 
increase the load significantly, you'd also need significantly more RAM 
for no good reason. A case where option 1 might make sense would be if 
it depended on data? provided by B, to decide if or how to continue 
processing msg1. Then you had a valid use-case for deferreds. Since 
there are no such requirements, option 2 is definitely the right choice.

> No threads involved using the standard twisted setup. When we get a 
> response through receiveline we fire the callback defer. If we timeout 
> via callLater we fire the errback to clear the defer. In this case the 
> defer does not seem to be doing very much
>
> 2. Now a fresh pair of eyes is looking at the code and saying why are 
> we using a deferred for sending data to port B. We could just issue a 
> straight sendline as part of the main code and carry on. If we get a 
> response via linereceiver,we process it normally, otherwise we set our 
> callLater running and timeout and lose the connection. So no deferreds 
> required at all. It does seem to work.What we are not sure about is 
> what penalty is incurred in terms of reliability or throughput by 
> using sendline without a deferred.

There's absolutely no penalty (unless you allow the notion of negative 
penalties). Using sendline directly is faster than using a deferred in 
between, even if you don't count the memory overhead. I think there's a 
bit confusion about the role of deferreds in twisted here. Deferreds 
don't help you (or the reactor) with scheduling, they only provide you 
with a means to continue some processing after a certain event occurred.
> We are not too sure what the holdup will be and whether it could end 
> up halting the show. Is it better to schedule these messages via 
> deferreds or am I missing something obvious
>
> 3. So we then did an experiment and used defertothread to run the 
> sendline in a separate thread with its own defer to maximise the 
> asynchronous running of the code. So now we are running threads when 
> one of the reasons for looking at twisted was that we could avoid 
> threads as much as possible.

Do you use sendline (the twisted api) from within the thread?  If yes 
and it works, it works accidentally, probably also due to the very small 
load, and is definitely wrong (as well as unnecessary), twisted is not 
threadsafe, with the exception of a few methods/functions like 
callInThread/callFromThread/defertoThread etc.


hope that helps,
Johann



From asb.bush at gmail.com  Tue Aug  4 18:11:30 2009
From: asb.bush at gmail.com (Aaron Bush)
Date: Tue, 4 Aug 2009 20:11:30 -0400
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
Message-ID: <5a8f2d170908041711y7eb0683cocf496b54dbcf2c96@mail.gmail.com>

A note on how I handled a similar situation in regards to the timeout
requirements you seem to have:

I had a similar setup where I was forwarding data from clients to servers
and back and forth, etc.  I wanted to timeout the connection after some idle
time and ended up using the TimeoutMixin found in
twisted.protocols.policies.  It probably does exactly what you are doing but
via a simple class inheritance and variable set.

-ab

On Tue, Aug 4, 2009 at 2:35 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>
>> This is a really basic problem we are trying to decide about,
>>
>>
>> One side A receives some input from a tcp port - about 100-200 characters,
>> and forwards it to another port B. We do not need to wait for any response.
>> If we get a response we pick that up through line receiver. We also run a
>> calllater to check if we got a response on linereceiver within the timeframe
>> specified. If not we drop the connection.
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090804/7a1da860/attachment.html>

From johnaherne at rocs.co.uk  Wed Aug  5 03:17:52 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Aug 2009 10:17:52 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <fa3d0c740908041552w4c0b2addu19fc4bbefe29693e@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<fa3d0c740908041552w4c0b2addu19fc4bbefe29693e@mail.gmail.com>
Message-ID: <faf2d7810908050217j768593ceube1703ceb1b6f73c@mail.gmail.com>

Thanks for the reminder about deferreds.

I think the problem is more to do with knowing what role the reactor and
select perform.

I assume that sending and receiving data with sendline and linereceived are
not blocking.

So for our simple case we can ignore deferreds. They provide no benefit.
This is what our option 2 does.

John Aherne

On Tue, Aug 4, 2009 at 11:52 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

> Deferreds don't do what you think they do.
> They don't do anything to make your code non-blocking.
> They only adhere to a contract that something will eventually be returned.
> The most common use of deferred's to make your code non-blocking is to use
> .deferToThread()
> or some other mechanism to make the long running code non-blocking, like
> spawning a process.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090805/c6fbdb55/attachment.html>

From johnaherne at rocs.co.uk  Wed Aug  5 03:33:28 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Aug 2009 10:33:28 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <4A78C0BB.3000100@densedata.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
Message-ID: <faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>

On Wed, Aug 5, 2009 at 12:14 AM, Johann Borck <johann.borck at densedata.com>wrote:

>
> On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk
> <mailto:johnaherne at rocs.co.uk>> wrote:
> > This is a really basic problem we are trying to decide about,
> >
> > We have programs that run quite happily, so far. Its main task is to
> > receive data from port A and send it out via port B. Then receive data
> > via port B and send it out via port A. It's pretty much like a chat
> > setup. You just build up a list of connected clients and send data to
> > them as required
> >
> > One side A receives some input from a tcp port - about 100-200
> > characters, and forwards it to another port B. We do not need to wait
> > for any response. If we get a response we pick that up through line
> > receiver. We also run a calllater to check if we got a response on
> > linereceiver within the timeframe specified. If not we drop the
> > connection.
> >
> > Traffic coming in from port B is analysed and some subset is sent back
> > to port A.
> >
> > Ignoring port A for the moment, just concentrating on port B, we have
> > tried three options:--
> >
> > 1. We set up a defer to handle the sendline to port B so that the
> > reactor would schedule it in its own good time.
>
> The reactor always schedules reads and writes "in its own good time",
> which means it writes whenever there's data to write and the socket is
> ready for writing. If you have data that can't be written at once,
> because it's too much for the socket to handle in a non-blocking
> fashion, the reactor (along with the transport) will take care of it,
> and defer its delivery itself, no need for any deferreds you'd had to
> care about here.
>
> Correct me if I'm wrong, but as I understand your description, option 1.
> and 2. do not behave identically. This is how I interpret it:
> option 1:
>
> A sends msg1 to [svc] : wrap msg1 in deferred1
> [ - time - ]
> B sends data? to [svc] :
>                                        1. callback deferred1: [svc]
> sends msg1 to B
>                                        2. handle data?
> B sends rsp1 to [svc]: [svc] sends rsp1 to A
>
> option 2:
>
> A sends msg1 to [svc] : [svc] sends msg1 to B
> B sends rsp1 to [svc] :  [svc] sends rsp1 to A
>
> If this is the case, you rely on some data? being sent to [svc] before
> msg1 can be forwarded to B. That means that you have msg1 in memory
> until you receive data? from B. This doesn't cause problems in your
> case, since you handle small messages in big intervals. But if you'd
> increase the load significantly, you'd also need significantly more RAM
> for no good reason. A case where option 1 might make sense would be if
> it depended on data? provided by B, to decide if or how to continue
> processing msg1. Then you had a valid use-case for deferreds. Since
> there are no such requirements, option 2 is definitely the right choice.
>
> > No threads involved using the standard twisted setup. When we get a
> > response through receiveline we fire the callback defer. If we timeout
> > via callLater we fire the errback to clear the defer. In this case the
> > defer does not seem to be doing very much
> >
> > 2. Now a fresh pair of eyes is looking at the code and saying why are
> > we using a deferred for sending data to port B. We could just issue a
> > straight sendline as part of the main code and carry on. If we get a
> > response via linereceiver,we process it normally, otherwise we set our
> > callLater running and timeout and lose the connection. So no deferreds
> > required at all. It does seem to work.What we are not sure about is
> > what penalty is incurred in terms of reliability or throughput by
> > using sendline without a deferred.
>
> There's absolutely no penalty (unless you allow the notion of negative
> penalties). Using sendline directly is faster than using a deferred in
> between, even if you don't count the memory overhead. I think there's a
> bit confusion about the role of deferreds in twisted here. Deferreds
> don't help you (or the reactor) with scheduling, they only provide you
> with a means to continue some processing after a certain event occurred.
> > We are not too sure what the holdup will be and whether it could end
> > up halting the show. Is it better to schedule these messages via
> > deferreds or am I missing something obvious
> >
> > 3. So we then did an experiment and used defertothread to run the
> > sendline in a separate thread with its own defer to maximise the
> > asynchronous running of the code. So now we are running threads when
> > one of the reasons for looking at twisted was that we could avoid
> > threads as much as possible.
>
> Do you use sendline (the twisted api) from within the thread?  If yes
> and it works, it works accidentally, probably also due to the very small
> load, and is definitely wrong (as well as unnecessary), twisted is not
> threadsafe, with the exception of a few methods/functions like
> callInThread/callFromThread/defertoThread etc.
>
>
> hope that helps,
> Johann
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Johann

Thanks for a very informative reply.

Our problem was more basic than deferreds. It was to with the reactor and
select command.

Sendline is not blocking so as you say we can avoid the use of deferreds and
continue to use sendline directly.

Regarding messages being stored in memory, we only store the sequence number
for each message so we can identify the message being responded to. We can
then report back to A with the original message sequence number. So the
memory footprint is quite small.

Our option 3 using defertothread does use sendline from the thread. Your
response implies that is OK since you say defertothread is threadsafe. Did
you really mean that.

Once again thanks for a very good response. That has cleared up a lot of
confusion.

I suppose it would help if there was a paragraph at the start of the twisted
documentation detailing what you have just said. So when they start on
deferreds you have some sort of context in which to interpret what is being
said

Regards

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090805/14ee349e/attachment.html>

From johnaherne at rocs.co.uk  Wed Aug  5 03:35:59 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Aug 2009 10:35:59 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <5a8f2d170908041711y7eb0683cocf496b54dbcf2c96@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<5a8f2d170908041711y7eb0683cocf496b54dbcf2c96@mail.gmail.com>
Message-ID: <faf2d7810908050235x28b59f2fwd035812dc09a08b@mail.gmail.com>

On Wed, Aug 5, 2009 at 1:11 AM, Aaron Bush <asb.bush at gmail.com> wrote:

> A note on how I handled a similar situation in regards to the timeout
> requirements you seem to have:
>
> I had a similar setup where I was forwarding data from clients to servers
> and back and forth, etc.  I wanted to timeout the connection after some idle
> time and ended up using the TimeoutMixin found in
> twisted.protocols.policies.  It probably does exactly what you are doing but
> via a simple class inheritance and variable set.
>
> -ab
>
> On Tue, Aug 4, 2009 at 2:35 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> On Tue, Aug 4, 2009 at 10:08 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>>
>>> This is a really basic problem we are trying to decide about,
>>>
>>>
>>> One side A receives some input from a tcp port - about 100-200
>>> characters, and forwards it to another port B. We do not need to wait for
>>> any response. If we get a response we pick that up through line receiver. We
>>> also run a calllater to check if we got a response on linereceiver within
>>> the timeframe specified. If not we drop the connection.
>>>
>>>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> Aaron

Thanks for the reply.

I have spent some time trying to find out how we might deal with timeouts
and not found anything we can use.

I'll take a look at that and see what it does.

Regards

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090805/e879aad3/attachment.html>

From exarkun at twistedmatrix.com  Wed Aug  5 09:17:53 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 05 Aug 2009 15:17:53 -0000
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
Message-ID: <20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>

On 09:33 am, johnaherne at rocs.co.uk wrote:
>On Wed, Aug 5, 2009 at 12:14 AM, Johann Borck 
><johann.borck at densedata.com>wrote:
>>
>[snip]
>
>Sendline is not blocking so as you say we can avoid the use of 
>deferreds and
>continue to use sendline directly.

LineReceiver.sendLine is not blocking, correct.  However, your statement
implies that if it were blocking, you could use Deferreds to address 
this
problem.  This is incorrect.  Deferreds do not make blocking APIs into
non-blocking APIs.
>[snip]
>
>Our option 3 using defertothread does use sendline from the thread. 
>Your
>response implies that is OK since you say defertothread is threadsafe. 
>Did
>you really mean that.

deferToThread is not thread-safe: you may only call it from the reactor 
thread
(the thread in which you called reactor.run).

Since deferToThread runs the function you pass to it in a non-reactor 
thread,
you may not use any non-thread-safe Twisted APIs in the function you 
pass to
it.
>
>Once again thanks for a very good response. That has cleared up a lot 
>of
>confusion.
>
>I suppose it would help if there was a paragraph at the start of the 
>twisted
>documentation detailing what you have just said. So when they start on
>deferreds you have some sort of context in which to interpret what is 
>being
>said

A significant effort is presently underway to improve the documentation 
about
Deferreds.  Any specific feedback you have about it would be much 
appreciated.
:)

Jean-Paul



From peter.westlake at pobox.com  Wed Aug  5 09:59:07 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 05 Aug 2009 16:59:07 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <1248457435.32636.1326651287@webmail.messagingengine.com>
References: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>
	<1248457435.32636.1326651287@webmail.messagingengine.com>
Message-ID: <1249487947.10070.1328437413@webmail.messagingengine.com>

Background: I have a client program that calls callRemote, but the
Deferred that callRemote returns is not fired. This is an intermittent
error that only happens after some hours of traffic.

By putting some logging into AMP, it's apparent that the server gets
as far as sending the reply using BoxDispatcher._safeEmit. The
original version of that ignores connection errors, but I overrode it
with one that doesn't:

    trace_tags = False
 
    def _safeEmit(self, aBox):
        """
        Emit a box, ignoring L{ProtocolSwitched} and L{ConnectionLost}
        errors
        which cannot be usefully handled.
        """
        tag = None
        if amp.ANSWER in aBox:
            tag = aBox[amp.ANSWER]
        elif amp.ERROR in aBox:
            tag = aBox[amp.ERROR]
        if self.trace_tags and tag:
            log.debug('_safeEmit', tag)
        try:
            aBox._sendTo(self.boxSender)
        except (ProtocolSwitched, ConnectionLost):
            log.debug('ProtocolSwitched or ConnectionLost in _safeEmit',
            tag)

The message in the last line is never seen, nor is there anything else
in the logs on client or server to suggest that there has been any
problem with the connection.

On the client, BoxDispatcher._answerReceived logs all replies:

    def _answerReceived(self, box):
        """
        An AMP box was received that answered a command previously sent
        with
        L{callRemote}.

        @param box: an AmpBox with a value for its L{ANSWER} key.
        """
        b = box[ANSWER]
        question = self._outstandingRequests.pop(box[ANSWER])
        question.addErrback(self.unhandledError)
        log.msg('_answerReceived', b, question)
        question.callback(box)
        log.msg('_answerReceived', b, 'returning')

Likewise _errorReceived.

I always see both log.msgs or neither, so it isn't something going
wrong in the callback.

The client sends a request.
The server sends a reply with the same tag, and logs a message.
Until it goes wrong, the client receives the reply and logs it.
When it goes wrong, the client does not see the reply.

The protocol has the unfired Deferred in _outstandingRequests,
with the missing tag as key.

All this suggests that the problem is either in the low-level
network code, or somewhere in the network between the client
and server. But doesn't TCP/IP tell you if a packet doesn't
get through?

I tried tracing the packets using a python-pycapy script (attached),
but it showed more packets disappearing than actually were. That
could be for several reasons, including the packet sniffer missing
packets, and the _ask or _answer key not being the first thing in
the box. It also made the problem go away to a large extent, though
that may have been the "tail -F" I was running against the log. It
does take a lot longer for the bug to manifest when tracing it.

At this point, I'm stuck! If there isn't a solution to this,
the only answer will be to time out and retry the command.
But since TCP connections are meant to be reliable (or to
give an error if they fail), I hope it won't come to that.

Peter.



From johnaherne at rocs.co.uk  Wed Aug  5 16:04:10 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Aug 2009 23:04:10 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
Message-ID: <faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>

On Wed, Aug 5, 2009 at 4:17 PM, <exarkun at twistedmatrix.com> wrote:

> On 09:33 am, johnaherne at rocs.co.uk wrote:
> >On Wed, Aug 5, 2009 at 12:14 AM, Johann Borck
> ><johann.borck at densedata.com>wrote:
> >>
> >[snip]
> >
> >Sendline is not blocking so as you say we can avoid the use of
> >deferreds and
> >continue to use sendline directly.
>
> LineReceiver.sendLine is not blocking, correct.  However, your statement
> implies that if it were blocking, you could use Deferreds to address
> this
> problem.  This is incorrect.  Deferreds do not make blocking APIs into
> non-blocking APIs.
> >[snip]
> >
> >Our option 3 using defertothread does use sendline from the thread.
> >Your
> >response implies that is OK since you say defertothread is threadsafe.
> >Did
> >you really mean that.
>
> deferToThread is not thread-safe: you may only call it from the reactor
> thread
> (the thread in which you called reactor.run).
>
> Since deferToThread runs the function you pass to it in a non-reactor
> thread,
> you may not use any non-thread-safe Twisted APIs in the function you
> pass to
> it.
> >
> >Once again thanks for a very good response. That has cleared up a lot
> >of
> >confusion.
> >
> >I suppose it would help if there was a paragraph at the start of the
> >twisted
> >documentation detailing what you have just said. So when they start on
> >deferreds you have some sort of context in which to interpret what is
> >being
> >said
>
> A significant effort is presently underway to improve the documentation
> about
> Deferreds.  Any specific feedback you have about it would be much
> appreciated.
> :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Jean-Paul

Thanks for the clarifications.

I assume what I meant by blocking was I would have to put a function into
deferToThread and add some callbacks to return the result. And not directly
calling sendline from the thread. This is what Jarrod suggested in his
reply. If I'm wrong, please say so.

I have read the thread regarding deferreds with interest, but did not feel I
knew enough to contribute.

I do feel qualified to ask some very daft questions. Unfortunately, I don't
see too many daft questions being asked in the list. I reckon if I need to
know the answer to them then some other people probably do as well but don't
put themselves forward. I see it as a way to document information that is
difficult to come by. And I really do appreciate the very good answers I get

However, after this little foray, I probably feel able to comment:--

The concept of deferreds is very simple. Everyone understands the concept -
even I do. The issue is how and why and where you should use them in
twisted.

Some Basic getting Started Points.

1. For simple network activity do not use deferreds. They are not necessary.
You can get a lot done without deferreds. And you don't know how to use them
yet. The reactor and the select will process the outgoing and incoming
buffers without blocking. Anyone familiar with networking and select will
already understand this. Anyone not familiar will not realise it and needs
to be made aware of how the select works.

2. If you have blocking code - please define blocking :), then first think
about  putting it into deferToThread with appropriate callbacks and return
the deferred. As suggested by Jarrod in his response.

3. John Goerzen in his Apress book Python Network Fundamentals has a very
simple chat server example. With a few comments for the uninitiated, this
would be a good starter. Possibly I could ask for permission to include it
in some twisted HOWTO documentation for beginners with suitable copyright
recognition.

4. With these few points as starters, maybe more people will be encouraged
to get started with twisted. And if you know you can ignore deferreds until
later you will find twisted is very simple to use and get some good results
with little effort.

5. The emphasis on how deferreds work probably ought to be counterbalanced
by some insight into how and why and where you would use them. For example,
if you have a text file of 10000 lines you need to read in and summarize,
presumably you would run this with deferToThread(+other options) and get the
result via the callback. If someone has a better example please let me know.

6. Blocking code is always put into a thread or like, and a deferred
callback or errback used to return the result or failure of the blocking
code from the thread. See jarrod's response above


You asked :)
I'm giving

I may be completely off track in what I have said above. And I would not
want anyone to fall upon this mail and think it represents the gospel truth.

Thank you for the response..

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090805/754a8c84/attachment.html>

From grickert at coldstorage.com  Wed Aug  5 16:35:36 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Wed, 5 Aug 2009 18:35:36 -0400
Subject: [Twisted-Python] Adbapi issues
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>

I'd like to use twisted's adbapi module (twisted 8.2.0 for python 2.5)
with cx_Oracle, but I'm having some issues with it.  
Specifically:

1.  It doesn't seem to reconnect (or possibly I just need enlightenment
on how reconnecting works):
If I tweak part of the test_adbapi.py script to work for Oracle (using a
proper "conn_str", and ignoring the irrelevant parts), I get something
like:

class OracleTests(unittest.TestCase):
    """Test adbapi for Oracle"""
  
    timeout = 10
  
    def setUp(self):
        self.dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str, 
               cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
cp_good_sql='select * from dual', threaded=True)
  
  
    def test_reconnect(self):
        d = defer.succeed(None)
        d.addCallback(self._testPool_1)
        d.addCallback(self._testPool_2)
        d.addCallback(self._testPool_3)
        return d
    
    def _testPool_1(self, res):
        def _success(rslt):
            self.failUnless(rslt[0][0] == 'X', "Select from dual not
working")
    
        d = self.dbpool.runQuery("select * from dual")
        d.addCallback(_success)
        return d
  
    def _testPool_2(self, res):
        self.dbpool.connections.values()[0].close()
  
    def _testPool_3(self, res):
    
        sql = "select * from dual"
        d = self.dbpool.runQuery(sql)
        def _check(row):
            self.failUnless(row[0][0] == 'X', " Select from dual not
working ")
        d.addCallback(_check)
        return d

I get this traceback:

[ERROR]: test_oracle.OracleTests.test_reconnect
Traceback (most recent call last):
  File "C:\Python25\Lib\site-packages\twisted\python\threadpool.py",
line 210, i
n _worker
    result = context.call(ctx, function, *args, **kwargs)
  File "C:\Python25\Lib\site-packages\twisted\python\context.py", line
59, in ca
llWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "C:\Python25\Lib\site-packages\twisted\python\context.py", line
37, in ca
llWithContext
    return func(*args,**kw)
  File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
line 429, i
n _runInteraction
    result = interaction(trans, *args, **kw)
  File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
line 443, i
n _runQuery
    trans.execute(*args, **kw)
cx_Oracle.InterfaceError: not connected

...am I doing something wrong, or is this something specific to Oracle?
I apologize for the seemingly rhetorical question, but does this
actually work for other databases (I don't have any others installed, so
trial just skips most of the tests when I run test_adbapi.py)?


2.  ...since I can't get it to reconnect properly, perhaps I could just
close the connections in the old connection pool, and create a new
one...

dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str, 
               cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
cp_good_sql='select * from dual', threaded=True)
dbpool.close()

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
line 359, i
n close
    if self.shutdownID:
AttributeError: ConnectionPool instance has no attribute 'shutdownID'

...shouldn't shutdownID be initialized in the class, or at least in
__init__ ?

3.  ...as stated in PEP 249, under fetchall(), "... Note that the
cursor's arraysize attribute can affect the performance of this
operation."  In the PEP, cursor.arraysize defaults to 1, which results
in absolutely terrible performance when retrieving a large number of
rows from the database (empirically tested).  Since twisted has already
gone through the trouble of wrapping simple calls to the database (like
it's runQuery), it would be ideal if this was an optional parameter that
could be passed in.  It doesn't look possible to do this in the current
adbapi module (or perhaps, I might just need enlightening again):

    def _runQuery(self, trans, *args, **kw):
        trans.execute(*args, **kw)
        return trans.fetchall() 

...perhaps it could be something more like:

    def _runQuery(self, trans, *args, **kw):
        if kw.has_key('arraysize'):
            trans._cursor.arraysize = kw['arraysize']
        trans.execute(*args, **kw)
        return trans.fetchall()


4.  Timeouts.  ...well, since Deferred.setTimeout is deprecated, and we
can't cancel deferreds, most protocols (or asynchronous "mechanisms" if
protocol isn't the right term here) should probably have a timeout
mechanism.  (...or is everyone looking at me like I'm from outer-space?)
Is there a canonical way of timing out a connection?  If I were to do a
dbpool.runQuery("select some_cols from some_table"); and attach a
timeout mechanism to the deferred that it returns, is there a way to
drop/recycle that particular connection from the pool if it didn't
respond in a timely fashion? ...or (assuming the dbpool.close() issue
went away), would "best-practice" be just closing the old pool, and
re-creating it?  


...is this module widely used in production, or are most people using
something like SqlAlchemy (or "rolling their own")?


Thanks,
	Gerrat





From jarrod at vertigrated.com  Wed Aug  5 18:12:11 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 5 Aug 2009 20:12:11 -0400
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
	<faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
Message-ID: <fa3d0c740908051712t6b962d92v57f0cbf02ccbc3a2@mail.gmail.com>

On Wed, Aug 5, 2009 at 6:04 PM, John Aherne <johnaherne at rocs.co.uk> wrote:

>
>
> 2. If you have blocking code - *please define blocking* :), then first
> think about  putting it into deferToThread with appropriate callbacks and
> return the deferred. As suggested by Jarrod in his response.
>
>
>
blocking code is code that will block or may potentially block the continued
execution of the main reactor thread.
think for the most part long running processes or operations that may be
long running.
doing file or network i/o, calculating cpu intensive work, operations that
may timeout like doing a remote call to another process or host machine,
database operations are usually a culprit, that may be flooded with work or
crashed, the examples go on but are mainly about i/o and cpu intensive
operations.
when these things happen on the reactor / main thread they block the server
from doing anything else, it can't accept new connections, it can't do
anything else until this blocking activity has completed and returned
control to the reactor thread.

you can handle this without deferToThread by breaking the blocking code up
into smaller pieces sometimes. need to transfer a large file to a socket,
instead of trying to send it all at once send 10KB at a time and yield back
to the reactor and reschedule the next 10KB until finished, this will work,
it might not be the fastest way and still may block for an unacceptable
amount of time on just 10KB, depending on how heavily taxed the i/o system
is at the moment. Usually deferToThread is just easier to implement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090805/4f421671/attachment.html>

From dave at krondo.com  Wed Aug  5 19:56:15 2009
From: dave at krondo.com (Dave Peticolas)
Date: Wed, 05 Aug 2009 18:56:15 -0700
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
Message-ID: <4A7A383F.7010900@krondo.com>

Gerrat Rickert wrote:
> I'd like to use twisted's adbapi module (twisted 8.2.0 for python 2.5)
> with cx_Oracle, but I'm having some issues with it.  
> Specifically:
> 
> 1.  It doesn't seem to reconnect (or possibly I just need enlightenment
> on how reconnecting works):
> If I tweak part of the test_adbapi.py script to work for Oracle (using a
> proper "conn_str", and ignoring the irrelevant parts), I get something
> like:
> 
> class OracleTests(unittest.TestCase):
>     """Test adbapi for Oracle"""
>   
>     timeout = 10
>   
>     def setUp(self):
>         self.dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str, 
>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
> cp_good_sql='select * from dual', threaded=True)
>   
>   
>     def test_reconnect(self):
>         d = defer.succeed(None)
>         d.addCallback(self._testPool_1)
>         d.addCallback(self._testPool_2)
>         d.addCallback(self._testPool_3)
>         return d
>     
>     def _testPool_1(self, res):
>         def _success(rslt):
>             self.failUnless(rslt[0][0] == 'X', "Select from dual not
> working")
>     
>         d = self.dbpool.runQuery("select * from dual")
>         d.addCallback(_success)
>         return d
>   
>     def _testPool_2(self, res):
>         self.dbpool.connections.values()[0].close()
>   
>     def _testPool_3(self, res):
>     
>         sql = "select * from dual"
>         d = self.dbpool.runQuery(sql)
>         def _check(row):
>             self.failUnless(row[0][0] == 'X', " Select from dual not
> working ")
>         d.addCallback(_check)
>         return d
> 
> I get this traceback:
> 
> [ERROR]: test_oracle.OracleTests.test_reconnect
> Traceback (most recent call last):
>   File "C:\Python25\Lib\site-packages\twisted\python\threadpool.py",
> line 210, i
> n _worker
>     result = context.call(ctx, function, *args, **kwargs)
>   File "C:\Python25\Lib\site-packages\twisted\python\context.py", line
> 59, in ca
> llWithContext
>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
>   File "C:\Python25\Lib\site-packages\twisted\python\context.py", line
> 37, in ca
> llWithContext
>     return func(*args,**kw)
>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
> line 429, i
> n _runInteraction
>     result = interaction(trans, *args, **kw)
>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
> line 443, i
> n _runQuery
>     trans.execute(*args, **kw)
> cx_Oracle.InterfaceError: not connected
> 
> ...am I doing something wrong, or is this something specific to Oracle?
> I apologize for the seemingly rhetorical question, but does this
> actually work for other databases (I don't have any others installed, so
> trial just skips most of the tests when I run test_adbapi.py)?

I didn't look at the code too closely, but here's something to note
about the 'reconnect' mode: If the connection fails, the first query
on the closed connection will still fail. Adbapi cannot, in general,
know whether the query went through and then the connection failed,
or not, so to be safe it doesn't retry.


> 2.  ...since I can't get it to reconnect properly, perhaps I could just
> close the connections in the old connection pool, and create a new
> one...
> 
> dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str, 
>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
> cp_good_sql='select * from dual', threaded=True)
> dbpool.close()
> 
> Traceback (most recent call last):
>   File "<stdin>", line 1, in <module>
>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
> line 359, i
> n close
>     if self.shutdownID:
> AttributeError: ConnectionPool instance has no attribute 'shutdownID'
> 
> ...shouldn't shutdownID be initialized in the class, or at least in
> __init__ ?

Yes, probably so. Feel submit a ticket, including a patch if you want.


> 3.  ...as stated in PEP 249, under fetchall(), "... Note that the
> cursor's arraysize attribute can affect the performance of this
> operation."  In the PEP, cursor.arraysize defaults to 1, which results
> in absolutely terrible performance when retrieving a large number of
> rows from the database (empirically tested).  Since twisted has already
> gone through the trouble of wrapping simple calls to the database (like
> it's runQuery), it would be ideal if this was an optional parameter that
> could be passed in.  It doesn't look possible to do this in the current
> adbapi module (or perhaps, I might just need enlightening again):
> 
>     def _runQuery(self, trans, *args, **kw):
>         trans.execute(*args, **kw)
>         return trans.fetchall() 
> 
> ...perhaps it could be something more like:
> 
>     def _runQuery(self, trans, *args, **kw):
>         if kw.has_key('arraysize'):
>             trans._cursor.arraysize = kw['arraysize']
>         trans.execute(*args, **kw)
>         return trans.fetchall()

Supporting arraysize in some form is probably a good idea. Another
ticket is in order.


> 
> 4.  Timeouts.  ...well, since Deferred.setTimeout is deprecated, and we
> can't cancel deferreds, most protocols (or asynchronous "mechanisms" if
> protocol isn't the right term here) should probably have a timeout
> mechanism.  (...or is everyone looking at me like I'm from outer-space?)
> Is there a canonical way of timing out a connection?  If I were to do a
> dbpool.runQuery("select some_cols from some_table"); and attach a
> timeout mechanism to the deferred that it returns, is there a way to
> drop/recycle that particular connection from the pool if it didn't
> respond in a timely fashion? ...or (assuming the dbpool.close() issue
> went away), would "best-practice" be just closing the old pool, and
> re-creating it?  

Since the query is running in a blocked thread, there's not much you
can do, as far as I know.


> 
> ...is this module widely used in production, or are most people using
> something like SqlAlchemy (or "rolling their own")?

I use it widely in production with cx_Oracle. I use a subclass so I can
set arraysize. I use it to provide connections to other scripts, so when
the connections go wonky I close and reopen the pool, or just restart
the process.


> Thanks,
> 	Gerrat
> 

dave



From glyph at twistedmatrix.com  Wed Aug  5 22:07:25 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 6 Aug 2009 00:07:25 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1249336297-sup-7263@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <1249079820-sup-3441@javelin>
	<d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>
	<1249336297-sup-7263@javelin>
Message-ID: <d9047f780908052107x606aca77ud405a89e4966f8e3@mail.gmail.com>

On Mon, Aug 3, 2009 at 6:00 PM, Edward Z. Yang <ezyang at mit.edu> wrote:

> I have updated my draft here:
>
>    http://ezyang.com/twisted/defer2.html
>

Thanks.  Looks like it's improving.  I've got more points to critique now,
but that's only because there's more meat to the tutorial now :).

   1. The coding standard in this document is PEP8, not the Twisted coding
   standard.  Have a look here:
   http://twistedmatrix.com/trac/browser/trunk/doc/core/development/policy/coding-standard.xhtml?format=raw
   2. "Callbacks are the lingua franca of asynchronous programming" strikes
   me as an odd turn of phrase, especially one to open the document with.
   3. "This document addresses ... Deferred.  It..." - "It" has an ambiguous
   antecedent.  Are you talking about the document or the Deferred class?  Of
   course it becomes obvious, but it should be phrased so you don't need to.
   4. It's far from obvious what "nonblocking_call" is supposed to be, given
   that its definition is "pass".  On my first skim through I thought it was a
   callback, then had to stop, go back and read again when I realized that
   didn't make sense.  Brevity is good in examples, but this is too brief.
      1. "input" is a builtin function.  You might want to avoid using it
      for a parameter name.
      5. "You might be tempted to define it like this": you're switching
   back and forth from second to third person; at first referring to the
   reader, then an anonymous different programmer.  It might be useful to give
   these roles different names; "Alice and Bob" are popular.
   6. If you must use a third-person pronoun (as you do the one time you
   refer to the API's anonymous user); you should stick to a gender-neutral one
   wherever possible, unless of course you're referring to a specific
   character.
   7. "The Deferred doesn't do anything that you couldn't have done with the
   two callback parameters."  This isn't strictly true; chaining callbacks, and
   dealing with errors that arise in different layers of an asynchronous
   callback chain, aren't strictly possible without some additional mechanism.
   8. Deferred is mentioned as an API link, Failure isn't.
   9. Your explanations of the examples seem backwards.  "At its very
   simplest, Deferred has a single callback attached to it".  I think you
   should be explaining the problem being solved by a single callback, since
   the synchronous example isn't addressed.  The synchronous example obviously
   doesn't have a single callback attached to it :).  In other words, document
   "here's what you might want to do, here's how you can do it" rather than
   "here's a thing you can do!  by the way, you might want to do it
   because...".  You've addressed the general why-you-want-to-do-it in the
   section above, but it would be helpful to do it in the small for each
   specific example.
   10. The DeferredList docs seem wonky in several ways.
      1. The opening is hard to follow.

>       We are now ready to consider our original problem

      what original problem?

>       a Deferred that would only fire

      "fire"?  what does "fire" mean?  The term hasn't yet been introduced.

>       after some other number of Deferreds fired

      Yeah, I'm still not sure what you're referring to.  Why would I want
      to do this, again?
      2. Users really shouldn't be subclassing Deferred themselves, so it's
      bad to have an example that does that.  Especially one which .  The fact
      that this is what DeferredList is is an implementation detail,
and an ugly
      one at that.  Try talking about gatherResults instead, and implementing a
      function which does the same thing without a subclass.  Or,
perhaps, a class
      of your own which just delegates to Deferred for Deferred
behavior, rather
      than inheriting it.
      3. Users *definitely* shouldn't be subclassing Deferred without
      upcalling to its __init__.  I haven't tested them, but I'm
pretty sure these
      examples will just blow up with tracebacks.
      4. The examples are never invoked.  It's semi-obvious how to use them,
      but semi-obvious things are often invoked semi-correctly.  Better to have
      examples with can be run, or at least ones with a 0-argument entry point
      named something like 'start'.
      5. "Consider the following interaction of two Deferreds:".  You're
      setting this up as if it's going to be very formal, but then
your language
      is sloppy; you don't name the different deferreds.  One of them is "one
      deferred", the other is "a Deferred".  You don't describe them
      independently, the relationship is implicit in the description.
Given that
      you're describing a fairly complex constellation of objects with
which the
      user isn't necessarily familiar yet, you should be clearly labeling the
      Deferreds in question in the code sample with variable names
(something as
      simple as "a" and "b" would probably do fine) and then consistently using
      those names to refer to them in the prose as well, so it's easy for the
      reader to follow exactly which thing you're talking about.  A big problem
      with technical documentation, *especially* documentation of Deferreds,
      is that it's very easy for a reader to start confusing which thing is
      which.  Once again, it would be good to set up some kind of
concrete problem
      first: *why* are we waiting on multiple Deferreds?
      11. "Fluent Interface"?  This is more new terminology — terminology
   that I am not familiar with, I might add — that isn't defined anywhere in
   the document.  I think it's more of an appendix than something important to
   the main narrative; composing Deferreds, returning a Deferred from another
   Deferred, firing a Deferred from another callback, etc, should be covered
   first.
   1. "Batons" looks like it's going to be more fancy ad-hoc terminology - I
      would recommend keeping the language simpler and consistent with other
      Twisted documentation :).
   12. Still a lot of enumerated lists.  Obviously a bad habit to which I am
   prone ;-), but when one uses an enumerated list, there should either be in
   an expectation that the numbers will be useful.  Either, as in this document
   review, or code reviews, where the numbers can be used to refer to points in
   subsequent discussion, or there's a clear separation of steps.  It's not
   really clear what the "two possible scenarios" lists are enumerations *of
   *.  Are they different things that can happen?
   13. You should try eliminating the word "consider" from the document.
   You seem to have the rhetorical habit, which I've seen from other people
   (myself included), of having a sentence which is missing a clear
   subject/verb/object relationship, and working around it by saying "consider"
   or "let's say".  For example, you want to communicate that there's a
   Deferred somewhere with some callbacks.  You can't just say "A Deferred with
   some callbacks.", so you say "Consider: a Deferred with some callbacks", and
   now the sentence *seems* complete, but it doesn't really communicate a
   full thought.

Okay, I think that's enough feedback for now.  I'll have to do more with
your next round of edits, or my feedback is going to be longer than the
document itself :).

* Why asynchronous?
>    - Define synchronous and asynchronous
>    - Multiplexing IO
>    - Introduce a simple reactor based on select()
> * Why callbacks?


You might want to start with this one, since callbacks are even more
generally useful than asynchronous programming.  Your suggestion of a parser
example makes this clear: even if you're parsing synchronously, you'll still
probably have callbacks for different parse rule matches.


>    - Asynchronous interaction to synchronous interaction
>    - Delocalized execution (the parser example)
>    - High level functions in Python review
>
> Quite frankly, I'm stumped on "defining synchronous and asynchronous."


I'd start with the words themselves.  synchronous means "at the same time".
This refers to the timing of the function call and its effects.  In a
synchronous program, if I say "read()", then at that same time that "read()"
is called, the reading happens and the data is returned.  But, in an
*a*synchronous
("not at the same time") program, "read()" is called, but its effects happen
later.

This can obviously be fleshed out quite a bit, but I think that core concept
is what's important to communicate.


> Asynchronous had always made sense to me, coming from JavaScript, since
> it was "you click this button and something should happen!"  But that
> is a very different use-case of asynchronous programming than Twisted is.


Your experience with JavaScript — or at least, with GUI programming, since
JavaScript itself is terrible — might actually be a good way to explain the
problem here.  One example I like to use to explain why sometimes you just
can't block is this:

    button1 = Button()
    button2 = Button()
    # I need to wait for the user to click on this button
    button1.waitForClick()
    # okay now they've clicked it.
    message("Hooray you clicked button 1")
    button2.waitForClick()
    # oh dang, but what if they want to click button 2 first!?!

although you can probably devise a more lucid variant of that :).

One of these days I really want to write a combined Twisted / GTK tutorial
that shows how to ask questions in dialog boxes without blocking and
sub-main-loops and other nasty tricks that GTK programs often get up to in
order to have a question-and-answer UI.  Unfortunately, although these
examples do serve as easy-to-identify for learning Twisted programmers, it's
not always immediately clear how this corresponds to networking data, and
the extra complexity of GUI libraries makes it more difficult to run the
examples.

And Glyph raised some very salient concerns about what we were trying to
> teach people.  I just don't know what direction people are coming from.
>

I think the best assumption of background for such an introductory tutorial
is to assume that the user doesn't really understand what problem Deferreds
solve, and has thus never done any substantial work in an asynchronous
environment.  More experienced users will skim some parts, but that's fine:
more experienced users are easily able to figure out what Deferreds are even
with just the current documentation :).

We shouldn't treat this as a Python tutorial, but it should at least touch
briefly on callable objects and nested variables.

As such, the document now is targeted to "people who know the basics
> of asynchronous programming and grok callbacks", and I've incorporated
> Itamar's excellent suggesting of comparing explicit callback parameters
> and the Deferred object, which I hope dispells the notion of Deferred
> being magical fairly well (my assertion is Deferred is merely an
> abstraction over said callback parameters.)  I've also fully fleshed
> out the Deferreds reference; any omissions are my fault.
>

Again, I think this might be assuming a bit too much.  At the very least,
you should find a very, very good tutorial on callbacks and higher-order
functions in Python to point people to as a dependency, so that users who *
don't* have that experience can go read about it somewhere else.  (Actually,
every dependency of every document *really* ought to have hyperlinks to
other resources that teach that dependency, so that a user who doesn't know
python but needs to dive into a Twisted codebase will be put on their way
quickly.)

Even people who have some Python experience, but use callbacks rarely, will
often discover there are things they don't know when they start programming
with Twisted and nesting 5 or 6 callbacks in a function.  For example, many
people don't know all the fiddly rules of scope nesting.  Take a poll of
some potential targets for this intro documentation and ask them if they can
explain why this produces an error:

    def f(x=1):
        def t():
            if x > 3:
                x = 2
            else:
                return x
        return t

... but adding 'x=x' to the parameter list of 't' makes it work (although
not like they would expect if they manipulated 'x' in f).

The plan next is to discuss composing deferreds (which will also
> touch on when you should and how to create your own deferreds, as
> well as deferredlist) and the convenience primitives.
>

I think you need to start talking about creating your own Deferreds, at
least implicitly, very early on in the document.  For example, rather than
having "nonblocking_call" be a dummy function, have it maintain a list of
yet-to-complete calls, like this:

    pending = []
    def process(data):
        return "Processed: <" + data + ">"
    def nonblockingCall(data, whenSucceeded, whenFailed):
        pending.append((data, whenSucceeded, whenFailed))
    def completeOneCall(succeeded=True):
        data, whenSucceeded, whenFailed = pending.pop(0)
        if succeeded:
            whenSucceeded(process(data))
        else:
            whenFailed(RuntimeError("It failed, for some reason."))

then (A) you can demonstrate how the callbacks actually get called in a tiny
little system that the reader can play around with and get comfortable in
before understanding Deferred, and (B) you can illustrate the same example
again with some Deferred logic involved.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090806/a11f9edf/attachment.html>

From johnaherne at rocs.co.uk  Thu Aug  6 00:59:24 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 6 Aug 2009 07:59:24 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
	<faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
Message-ID: <faf2d7810908052359q6243025av4762022b5b86a815@mail.gmail.com>

A point I missed out on:
The adbapi module seems to be a good example of using deferreds and threads.
The adbapi module returns a deferred it has created, you add your callbacks
to it. It calls your callback when ready. It does seem like the examplar for
doing deferreds.

The db stuff will normally block so put it in a thread and use deferreds to
get the result or failure.

A point about the db calls is that they can be very intensive. If you need
to run some db calls every 30 secs or 60 secs and the db takes 50% or more
of the time to generate the results, you won't have much time to service any
incoming requests to see the data results. The remote connections will be
failing bigtime.

So then I suppose you should break the code into 2 programs. One that does
the db stuff, the other to handle the remote connections. The db code when
it has a result will then connect to the other program and pass across its
results. There may be better ways of doing this of course.

So as Jarrod points out, deferToThread is an easy way of solving blocking
code, but not always. It seems good for short blocks, but you do need the
bulk of the time available for handling connections.

If anyone sees howlers in this, please let me know.

Regards

John Aherne



On Wed, Aug 5, 2009 at 11:04 PM, John Aherne <johnaherne at rocs.co.uk> wrote:

>
>
> On Wed, Aug 5, 2009 at 4:17 PM, <exarkun at twistedmatrix.com> wrote:
>
>> On 09:33 am, johnaherne at rocs.co.uk wrote:
>> >On Wed, Aug 5, 2009 at 12:14 AM, Johann Borck
>> ><johann.borck at densedata.com>wrote:
>> >>
>> >[snip]
>> >
>> >Sendline is not blocking so as you say we can avoid the use of
>> >deferreds and
>> >continue to use sendline directly.
>>
>> LineReceiver.sendLine is not blocking, correct.  However, your statement
>> implies that if it were blocking, you could use Deferreds to address
>> this
>> problem.  This is incorrect.  Deferreds do not make blocking APIs into
>> non-blocking APIs.
>> >[snip]
>> >
>> >Our option 3 using defertothread does use sendline from the thread.
>> >Your
>> >response implies that is OK since you say defertothread is threadsafe.
>> >Did
>> >you really mean that.
>>
>> deferToThread is not thread-safe: you may only call it from the reactor
>> thread
>> (the thread in which you called reactor.run).
>>
>> Since deferToThread runs the function you pass to it in a non-reactor
>> thread,
>> you may not use any non-thread-safe Twisted APIs in the function you
>> pass to
>> it.
>> >
>> >Once again thanks for a very good response. That has cleared up a lot
>> >of
>> >confusion.
>> >
>> >I suppose it would help if there was a paragraph at the start of the
>> >twisted
>> >documentation detailing what you have just said. So when they start on
>> >deferreds you have some sort of context in which to interpret what is
>> >being
>> >said
>>
>> A significant effort is presently underway to improve the documentation
>> about
>> Deferreds.  Any specific feedback you have about it would be much
>> appreciated.
>> :)
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> Jean-Paul
>
> Thanks for the clarifications.
>
> I assume what I meant by blocking was I would have to put a function into
> deferToThread and add some callbacks to return the result. And not directly
> calling sendline from the thread. This is what Jarrod suggested in his
> reply. If I'm wrong, please say so.
>
> I have read the thread regarding deferreds with interest, but did not feel
> I knew enough to contribute.
>
> I do feel qualified to ask some very daft questions. Unfortunately, I don't
> see too many daft questions being asked in the list. I reckon if I need to
> know the answer to them then some other people probably do as well but don't
> put themselves forward. I see it as a way to document information that is
> difficult to come by. And I really do appreciate the very good answers I get
>
> However, after this little foray, I probably feel able to comment:--
>
> The concept of deferreds is very simple. Everyone understands the concept -
> even I do. The issue is how and why and where you should use them in
> twisted.
>
> Some Basic getting Started Points.
>
> 1. For simple network activity do not use deferreds. They are not
> necessary. You can get a lot done without deferreds. And you don't know how
> to use them yet. The reactor and the select will process the outgoing and
> incoming buffers without blocking. Anyone familiar with networking and
> select will already understand this. Anyone not familiar will not realise it
> and needs to be made aware of how the select works.
>
> 2. If you have blocking code - please define blocking :), then first think
> about  putting it into deferToThread with appropriate callbacks and return
> the deferred. As suggested by Jarrod in his response.
>
> 3. John Goerzen in his Apress book Python Network Fundamentals has a very
> simple chat server example. With a few comments for the uninitiated, this
> would be a good starter. Possibly I could ask for permission to include it
> in some twisted HOWTO documentation for beginners with suitable copyright
> recognition.
>
> 4. With these few points as starters, maybe more people will be encouraged
> to get started with twisted. And if you know you can ignore deferreds until
> later you will find twisted is very simple to use and get some good results
> with little effort.
>
> 5. The emphasis on how deferreds work probably ought to be counterbalanced
> by some insight into how and why and where you would use them. For example,
> if you have a text file of 10000 lines you need to read in and summarize,
> presumably you would run this with deferToThread(+other options) and get the
> result via the callback. If someone has a better example please let me know.
>
> 6. Blocking code is always put into a thread or like, and a deferred
> callback or errback used to return the result or failure of the blocking
> code from the thread. See jarrod's response above
>
>
> You asked :)
> I'm giving
>
> I may be completely off track in what I have said above. And I would not
> want anyone to fall upon this mail and think it represents the gospel truth.
>
> Thank you for the response..
>
> John Aherne
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090806/f56dad02/attachment.html>

From johnaherne at rocs.co.uk  Thu Aug  6 01:02:04 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 6 Aug 2009 08:02:04 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <fa3d0c740908051712t6b962d92v57f0cbf02ccbc3a2@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
	<faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
	<fa3d0c740908051712t6b962d92v57f0cbf02ccbc3a2@mail.gmail.com>
Message-ID: <faf2d7810908060002x46b049b8iac07e18f79bf793b@mail.gmail.com>

On Thu, Aug 6, 2009 at 1:12 AM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

>
>
> On Wed, Aug 5, 2009 at 6:04 PM, John Aherne <johnaherne at rocs.co.uk> wrote:
>
>>
>>
>> 2. If you have blocking code - *please define blocking* :), then first
>> think about  putting it into deferToThread with appropriate callbacks and
>> return the deferred. As suggested by Jarrod in his response.
>>
>>
>>
> blocking code is code that will block or may potentially block the
> continued execution of the main reactor thread.
> think for the most part long running processes or operations that may be
> long running.
> doing file or network i/o, calculating cpu intensive work, operations that
> may timeout like doing a remote call to another process or host machine,
> database operations are usually a culprit, that may be flooded with work or
> crashed, the examples go on but are mainly about i/o and cpu intensive
> operations.
> when these things happen on the reactor / main thread they block the server
> from doing anything else, it can't accept new connections, it can't do
> anything else until this blocking activity has completed and returned
> control to the reactor thread.
>
> you can handle this without deferToThread by breaking the blocking code up
> into smaller pieces sometimes. need to transfer a large file to a socket,
> instead of trying to send it all at once send 10KB at a time and yield back
> to the reactor and reschedule the next 10KB until finished, this will work,
> it might not be the fastest way and still may block for an unacceptable
> amount of time on just 10KB, depending on how heavily taxed the i/o system
> is at the moment. Usually deferToThread is just easier to implement.
>
> Jarrod,


Thanks. I've incorporated some of what you said into a reply to my own mail.
A point I should have added to my other ones first time round.

John Aherne


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090806/6813c4f5/attachment.html>

From johnaherne at rocs.co.uk  Thu Aug  6 04:29:01 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 6 Aug 2009 11:29:01 +0100
Subject: [Twisted-Python] Really Basic clarification on defers
In-Reply-To: <faf2d7810908060002x46b049b8iac07e18f79bf793b@mail.gmail.com>
References: <faf2d7810908040808r60fbf304x2b02a6125aca3d46@mail.gmail.com>
	<562bcc10908041135vedfa628sa611dcc941859501@mail.gmail.com>
	<4A78C0BB.3000100@densedata.com>
	<faf2d7810908050233s5adf4464ybdf217cb3566ff17@mail.gmail.com>
	<20090805151753.19518.1309660004.divmod.xquotient.21@localhost.localdomain>
	<faf2d7810908051504x425bf8d0o94f79617213fff8a@mail.gmail.com>
	<fa3d0c740908051712t6b962d92v57f0cbf02ccbc3a2@mail.gmail.com>
	<faf2d7810908060002x46b049b8iac07e18f79bf793b@mail.gmail.com>
Message-ID: <faf2d7810908060329i69a03d41sbaf3efa27a349fbe@mail.gmail.com>

I'll try and put all my comments together with the feedback from everyone.
Then I can pass it over to the defer documentation thread to see if they are
interested in any part of it.

John

On Thu, Aug 6, 2009 at 8:02 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

>
>
> On Thu, Aug 6, 2009 at 1:12 AM, Jarrod Roberson <jarrod at vertigrated.com>wrote:
>
>>
>>
>> On Wed, Aug 5, 2009 at 6:04 PM, John Aherne <johnaherne at rocs.co.uk>wrote:
>>
>>>
>>>
>>> 2. If you have blocking code - *please define blocking* :), then first
>>> think about  putting it into deferToThread with appropriate callbacks and
>>> return the deferred. As suggested by Jarrod in his response.
>>>
>>>
>>>
>> blocking code is code that will block or may potentially block the
>> continued execution of the main reactor thread.
>> think for the most part long running processes or operations that may be
>> long running.
>> doing file or network i/o, calculating cpu intensive work, operations that
>> may timeout like doing a remote call to another process or host machine,
>> database operations are usually a culprit, that may be flooded with work or
>> crashed, the examples go on but are mainly about i/o and cpu intensive
>> operations.
>> when these things happen on the reactor / main thread they block the
>> server from doing anything else, it can't accept new connections, it can't
>> do anything else until this blocking activity has completed and returned
>> control to the reactor thread.
>>
>> you can handle this without deferToThread by breaking the blocking code up
>> into smaller pieces sometimes. need to transfer a large file to a socket,
>> instead of trying to send it all at once send 10KB at a time and yield back
>> to the reactor and reschedule the next 10KB until finished, this will work,
>> it might not be the fastest way and still may block for an unacceptable
>> amount of time on just 10KB, depending on how heavily taxed the i/o system
>> is at the moment. Usually deferToThread is just easier to implement.
>>
>> Jarrod,
>
>
> Thanks. I've incorporated some of what you said into a reply to my own
> mail. A point I should have added to my other ones first time round.
>
> John Aherne
>
>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090806/e5b80f7c/attachment.html>

From exarkun at twistedmatrix.com  Thu Aug  6 08:44:16 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 06 Aug 2009 14:44:16 -0000
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <4A7A383F.7010900@krondo.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
	<4A7A383F.7010900@krondo.com>
Message-ID: <20090806144416.19518.850204705.divmod.xquotient.37@localhost.localdomain>

On 01:56 am, dave at krondo.com wrote:
>Gerrat Rickert wrote:
>[snip]
>>2.  ...since I can't get it to reconnect properly, perhaps I could 
>>just
>>close the connections in the old connection pool, and create a new
>>one...
>>
>>dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str,
>>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
>>cp_good_sql='select * from dual', threaded=True)
>>dbpool.close()
>>
>>Traceback (most recent call last):
>>   File "<stdin>", line 1, in <module>
>>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
>>line 359, i
>>n close
>>     if self.shutdownID:
>>AttributeError: ConnectionPool instance has no attribute 'shutdownID'
>>
>>...shouldn't shutdownID be initialized in the class, or at least in
>>__init__ ?
>
>Yes, probably so. Feel submit a ticket, including a patch if you want.

This looks a lot like a bug that's fixed in trunk already.  I
suggest trying this out with a recent checkout of trunk to see
if it goes away before spending much time trying to track it down.

Jean-Paul



From grickert at coldstorage.com  Thu Aug  6 09:37:03 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Thu, 6 Aug 2009 11:37:03 -0400
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <20090806144416.19518.850204705.divmod.xquotient.37@localhost.localdomain>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com><4A7A383F.7010900@krondo.com>
	<20090806144416.19518.850204705.divmod.xquotient.37@localhost.localdomain>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0481F527@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
>Sent: Thursday, August 06, 2009 10:44 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Adbapi issues
>
>On 01:56 am, dave at krondo.com wrote:
>>Gerrat Rickert wrote:
>>[snip]
>>>2.  ...since I can't get it to reconnect properly, perhaps I could
>>>just
>>>close the connections in the old connection pool, and create a new
>>>one...
>>>
>>>dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str,
>>>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
>>>cp_good_sql='select * from dual', threaded=True)
>>>dbpool.close()
>>>
>>>Traceback (most recent call last):
>>>   File "<stdin>", line 1, in <module>
>>>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
>>>line 359, i
>>>n close
>>>     if self.shutdownID:
>>>AttributeError: ConnectionPool instance has no attribute 'shutdownID'
>>>
>>>...shouldn't shutdownID be initialized in the class, or at least in
>>>__init__ ?
>>
>>Yes, probably so. Feel submit a ticket, including a patch if you want.
>
>This looks a lot like a bug that's fixed in trunk already.  I
>suggest trying this out with a recent checkout of trunk to see
>if it goes away before spending much time trying to track it down.
>
>Jean-Paul

Well, before filing this as a bug, I found Ticket #2680, which I think
is the same issue.  Nothing's been fixed in the trunk though (...as of
30 seconds ago anyway).  ...and judging from all the discussion on that
ticket, maybe resolving this isn't as trivial as I would have expected.

Gerrat





From smhollingsworth at gmail.com  Thu Aug  6 09:47:43 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Thu, 6 Aug 2009 11:47:43 -0400
Subject: [Twisted-Python] Tunneling using conch (with application.service)
Message-ID: <66dccc4d0908060847y21a42afdt2c1d831419d710a0@mail.gmail.com>

I’ve got an app written that runs as a service using
twisted.application.service that I need to tunnel through SSH. Right now, I
use a script that makes use of Paramiko (and runs separate from my app) to
set up a tunnel. That more or less works, but I’ve had some problems with
the tunnel just going away and would like to integrate the tunneling into
the app, using conch. I’ve found an example of tunneling via conch, at
http://twistedmatrix.com/pipermail/twisted-python/2009-February/019196.html,
that I think I can use as a base to add the code to my app.

Right now my app is basically:

class DataPuller(service.Service):
    ...Code for my app...
    ... The app pulls data from a database and I can only connect to the
server via SSH...

application = service.Application(‘Data_puller’)
dpService = DataPuller()
dpService.setServiceParent(application)

My main problems are that I’m not sure whether or not the example linked to
above is a good one for tunneling with conch and, if it is, how do I merge
the example tunneling code with my app code. From the example, where the
code is:

 class Connection(connection.SSHConnection):
        .
        .
        .
        def serviceStarted(self):

Do I instantiate my DataPuller class there, in serviceStarted (and not
subclass from service.Service)? If so, how do I wrap the tunneling code so
that I can make it a service? If not, do I need put the tunneling code
inside my DataPuller class? What would that look like?

Any help will be greatly appreciated.

Sean M Hollingsworth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090806/9f8cfb99/attachment.html>

From lvh at laurensvh.be  Thu Aug  6 10:45:25 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 6 Aug 2009 18:45:25 +0200
Subject: [Twisted-Python] twisted.positioning preliminary review
In-Reply-To: <d9047f780908031937w7c53e551vd23047f623955533@mail.gmail.com>
References: <cedc0c090908031756u4d8ad906p3b2b52b95373e319@mail.gmail.com>
	<d9047f780908031937w7c53e551vd23047f623955533@mail.gmail.com>
Message-ID: <cedc0c090908060945gefb8844r41f1582a3705c824@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Patch added! Reviewers rejoice.

http://twistedmatrix.com/trac/ticket/3926

As usual, available on bzr: bzr branch lp:~lvh/twisted/positioning

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkp7CG4ACgkQT5v5zGkvKT7MywCfYL69jpqVupaYZ0nKC2A+JrmD
4skAmwXa5ua+iQWdZRdOeXuwhSipdnSF
=MXVb
-----END PGP SIGNATURE-----


> We've got a bit of a review backlog right now so there may be some latency
> :-\.  Perhaps you should volunteer to review some tickets yourself? :)

I've reviewed a few now, only the ones that I understand though, which
aren't that many :-D

>> Obvious TODO is howto documentation, but I'm not starting on that
>> until the API has been reviewed thoroughly for obvious reasons.
>
> This can be a separate ticket.

http://twistedmatrix.com/trac/ticket/3953

Enjoy
Laurens



From darren at ontrenet.com  Thu Aug  6 12:12:07 2009
From: darren at ontrenet.com (Darren Govoni)
Date: Thu, 06 Aug 2009 14:12:07 -0400
Subject: [Twisted-Python] Changing threadpool size in reactor
Message-ID: <1249582327.23367.5.camel@nuraku>

Hi,
  I could see from the docs I read how to increase the allotted threads
in the reactor.

I use reactor.callInThread(....) and it seems to max out at 10. I read
about ThreadPool class, but need to run mine in the reactor. 

thanks for any tips and sorry if it was more obvious than i could see.

Darren




From grickert at coldstorage.com  Thu Aug  6 12:57:22 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Thu, 6 Aug 2009 14:57:22 -0400
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <4A7A383F.7010900@krondo.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
	<4A7A383F.7010900@krondo.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0481F61D@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Dave Peticolas
>Sent: Wednesday, August 05, 2009 9:56 PM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Adbapi issues
>
>Gerrat Rickert wrote:
>> I'd like to use twisted's adbapi module (twisted 8.2.0 for python
2.5)
>> with cx_Oracle, but I'm having some issues with it.
>> Specifically:
>>
>> 1.  It doesn't seem to reconnect (or possibly I just need
>enlightenment
>> on how reconnecting works):
>> If I tweak part of the test_adbapi.py script to work for Oracle
(using
>a
>> proper "conn_str", and ignoring the irrelevant parts), I get
something
>> like:
>>
>> class OracleTests(unittest.TestCase):
>>     """Test adbapi for Oracle"""
>>
>>     timeout = 10
>>
>>     def setUp(self):
>>         self.dbpool = adbapi.ConnectionPool('cx_Oracle', conn_str,
>>                cp_noisy=True, cp_min=1, cp_reconnect=True, cp_max=3,
>> cp_good_sql='select * from dual', threaded=True)
>>
>>
>>     def test_reconnect(self):
>>         d = defer.succeed(None)
>>         d.addCallback(self._testPool_1)
>>         d.addCallback(self._testPool_2)
>>         d.addCallback(self._testPool_3)
>>         return d
>>
>>     def _testPool_1(self, res):
>>         def _success(rslt):
>>             self.failUnless(rslt[0][0] == 'X', "Select from dual not
>> working")
>>
>>         d = self.dbpool.runQuery("select * from dual")
>>         d.addCallback(_success)
>>         return d
>>
>>     def _testPool_2(self, res):
>>         self.dbpool.connections.values()[0].close()
>>
>>     def _testPool_3(self, res):
>>
>>         sql = "select * from dual"
>>         d = self.dbpool.runQuery(sql)
>>         def _check(row):
>>             self.failUnless(row[0][0] == 'X', " Select from dual not
>> working ")
>>         d.addCallback(_check)
>>         return d
>>
>> I get this traceback:
>>
>> [ERROR]: test_oracle.OracleTests.test_reconnect
>> Traceback (most recent call last):
>>   File "C:\Python25\Lib\site-packages\twisted\python\threadpool.py",
>> line 210, i
>> n _worker
>>     result = context.call(ctx, function, *args, **kwargs)
>>   File "C:\Python25\Lib\site-packages\twisted\python\context.py",
line
>> 59, in ca
>> llWithContext
>>     return self.currentContext().callWithContext(ctx, func, *args,
>**kw)
>>   File "C:\Python25\Lib\site-packages\twisted\python\context.py",
line
>> 37, in ca
>> llWithContext
>>     return func(*args,**kw)
>>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
>> line 429, i
>> n _runInteraction
>>     result = interaction(trans, *args, **kw)
>>   File "c:\python25\lib\site-packages\twisted\enterprise\adbapi.py",
>> line 443, i
>> n _runQuery
>>     trans.execute(*args, **kw)
>> cx_Oracle.InterfaceError: not connected
>>
>> ...am I doing something wrong, or is this something specific to
>Oracle?
>> I apologize for the seemingly rhetorical question, but does this
>> actually work for other databases (I don't have any others installed,
>so
>> trial just skips most of the tests when I run test_adbapi.py)?
>
>I didn't look at the code too closely, but here's something to note
>about the 'reconnect' mode: If the connection fails, the first query
>on the closed connection will still fail. Adbapi cannot, in general,
>know whether the query went through and then the connection failed,
>or not, so to be safe it doesn't retry.

Thanks Dave!  That explains it...and retrying, and issuing queries 
after that work.  Great!

<snip>

>
>> 3.  ...as stated in PEP 249, under fetchall(), "... Note that the
>> cursor's arraysize attribute can affect the performance of this
>> operation."  In the PEP, cursor.arraysize defaults to 1, which
results
>> in absolutely terrible performance when retrieving a large number of
>> rows from the database (empirically tested).  Since twisted has
>already
>> gone through the trouble of wrapping simple calls to the database
>(like
>> it's runQuery), it would be ideal if this was an optional parameter
>that
>> could be passed in.  It doesn't look possible to do this in the
>current
>> adbapi module (or perhaps, I might just need enlightening again):
>>
>>     def _runQuery(self, trans, *args, **kw):
>>         trans.execute(*args, **kw)
>>         return trans.fetchall()
>>
>> ...perhaps it could be something more like:
>>
>>     def _runQuery(self, trans, *args, **kw):
>>         if kw.has_key('arraysize'):
>>             trans._cursor.arraysize = kw['arraysize']
>>         trans.execute(*args, **kw)
>>         return trans.fetchall()
>
>Supporting arraysize in some form is probably a good idea. Another
>ticket is in order.

Ok, I filed ticket #3956
...along with a patch for adbapi.py, and test_adbapi.py.

My apologies in advance for the test patch :o)
I haven't written many tests, so I'm not exactly sure the best
(or perhaps even a good way) of testing some things.


>> 4.  Timeouts.  ...well, since Deferred.setTimeout is deprecated, and
>we
>> can't cancel deferreds, most protocols (or asynchronous "mechanisms"
>if
>> protocol isn't the right term here) should probably have a timeout
>> mechanism.  (...or is everyone looking at me like I'm from outer-
>space?)
>> Is there a canonical way of timing out a connection?  If I were to do
>a
>> dbpool.runQuery("select some_cols from some_table"); and attach a
>> timeout mechanism to the deferred that it returns, is there a way to
>> drop/recycle that particular connection from the pool if it didn't
>> respond in a timely fashion? ...or (assuming the dbpool.close() issue
>> went away), would "best-practice" be just closing the old pool, and
>> re-creating it?
>
>Since the query is running in a blocked thread, there's not much you
>can do, as far as I know.

...my understanding is that it's relatively easy to kill a thread on a 
Unix platform, but not as easy with Windows (which, unfortunately I 
use almost exclusively).  

...maybe once *most* users are up to at least python version 2.6 (I'm
not), 
I wonder if the threadpool in adbapi could be replaced with
functionality 
>From the multiprocessing package.  I would think it would be easier to 
just kill and restart dead connections then.

>> ...is this module widely used in production, or are most people using
>> something like SqlAlchemy (or "rolling their own")?
>
>I use it widely in production with cx_Oracle. I use a subclass so I can
>set arraysize. I use it to provide connections to other scripts, so
when
>the connections go wonky I close and reopen the pool, or just restart
>the process.

Thanks for your insight Dave.



From exarkun at twistedmatrix.com  Thu Aug  6 13:24:44 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 06 Aug 2009 19:24:44 -0000
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F0481F61D@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com>
	<4A7A383F.7010900@krondo.com>
	<BB13E4C4D649234F84A01F6DF64BB87F0481F61D@ccs-ex01.coldstorage.com>
Message-ID: <20090806192444.19518.384017450.divmod.xquotient.47@localhost.localdomain>

On 06:57 pm, grickert at coldstorage.com wrote:
>[snip]
>>
>>Supporting arraysize in some form is probably a good idea. Another
>>ticket is in order.
>
>Ok, I filed ticket #3956
>...along with a patch for adbapi.py, and test_adbapi.py.

Great.  Thanks a lot! :)
>My apologies in advance for the test patch :o)
>I haven't written many tests, so I'm not exactly sure the best
>(or perhaps even a good way) of testing some things.

No worries.  I've given you some feedback on the ticket (I did that
before I noticed this email).  Please feel free to ask if anything
I wrote is unclear.
>[snip]
>
>...my understanding is that it's relatively easy to kill a thread on a
>Unix platform, but not as easy with Windows (which, unfortunately I
>use almost exclusively).

It's about equally easy on either platform.  However, it's also
basically unreliable on both platforms.  What happens if the killed
thread held a mutex, for example?
>...maybe once *most* users are up to at least python version 2.6 (I'm
>not),
>I wonder if the threadpool in adbapi could be replaced with
>functionality
>> From the multiprocessing package.  I would think it would be easier to
>just kill and restart dead connections then.

Twisted actually has good support for running child processes already,
so we don't have to wait for Python 2.6, if this is a direction that's
interesting.

Perhaps something based on Ampoule would make sense?  It could be an API
compatible replacement for twisted.enterprise.adbapi, but use child 
processes
instead of threads, and add one new method for interrupting outstanding
work.

Jean-Paul



From grickert at coldstorage.com  Thu Aug  6 14:06:34 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Thu, 6 Aug 2009 16:06:34 -0400
Subject: [Twisted-Python] Adbapi issues
In-Reply-To: <20090806192444.19518.384017450.divmod.xquotient.47@localhost.localdomain>
References: <BB13E4C4D649234F84A01F6DF64BB87F0481F3C4@ccs-ex01.coldstorage.com><4A7A383F.7010900@krondo.com><BB13E4C4D649234F84A01F6DF64BB87F0481F61D@ccs-ex01.coldstorage.com>
	<20090806192444.19518.384017450.divmod.xquotient.47@localhost.localdomain>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0481F670@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
>Sent: Thursday, August 06, 2009 3:25 PM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Adbapi issues
>
>On 06:57 pm, grickert at coldstorage.com wrote:
>>[snip]
>>>
>>>Supporting arraysize in some form is probably a good idea. Another
>>>ticket is in order.
>>
>>Ok, I filed ticket #3956
>>...along with a patch for adbapi.py, and test_adbapi.py.
>
>Great.  Thanks a lot! :)
>>My apologies in advance for the test patch :o)
>>I haven't written many tests, so I'm not exactly sure the best
>>(or perhaps even a good way) of testing some things.
>
>No worries.  I've given you some feedback on the ticket (I did that
>before I noticed this email).  Please feel free to ask if anything
>I wrote is unclear.
>>[snip]

Wow, the feedback on the patch (attempt) had a much gentler tone than I
expected ;o)  Thanks.  I'll see what I can improve.

>>...my understanding is that it's relatively easy to kill a thread on a
>>Unix platform, but not as easy with Windows (which, unfortunately I
>>use almost exclusively).
>
>It's about equally easy on either platform.  However, it's also
>basically unreliable on both platforms.  What happens if the killed
>thread held a mutex, for example?
>>...maybe once *most* users are up to at least python version 2.6 (I'm
>>not),
>>I wonder if the threadpool in adbapi could be replaced with
>>functionality
>>> From the multiprocessing package.  I would think it would be easier
>to
>>just kill and restart dead connections then.
>
>Twisted actually has good support for running child processes already,
>so we don't have to wait for Python 2.6, if this is a direction that's
>interesting.
>
>Perhaps something based on Ampoule would make sense?  It could be an
API
>compatible replacement for twisted.enterprise.adbapi, but use child
>processes
>instead of threads, and add one new method for interrupting outstanding
>work.
>
>Jean-Paul

I've never looked at Ampoule, but I like the idea and wouldn't mind 
investigating the API compatible replacement idea (...not promising 
anything...).

Gerrat



From glyph at twistedmatrix.com  Thu Aug  6 14:53:45 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 6 Aug 2009 16:53:45 -0400
Subject: [Twisted-Python] Changing threadpool size in reactor
In-Reply-To: <1249582327.23367.5.camel@nuraku>
References: <1249582327.23367.5.camel@nuraku>
Message-ID: <d9047f780908061353h7d1c2166kc6646145aba2b9dc@mail.gmail.com>

On Thu, Aug 6, 2009 at 2:12 PM, Darren Govoni <darren at ontrenet.com> wrote:

> Hi,
>  I could see from the docs I read how to increase the allotted threads
> in the reactor.
>
> I use reactor.callInThread(....) and it seems to max out at 10. I read
> about ThreadPool class, but need to run mine in the reactor.
>

The reactor has a similar API:
http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.interfaces.IReactorThreads.html#suggestThreadPoolSize
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090806/09ddfaa0/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Aug  8 10:32:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 08 Aug 2009 16:32:13 -0000
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <1249487947.10070.1328437413@webmail.messagingengine.com>
References: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>
	<1248457435.32636.1326651287@webmail.messagingengine.com>
	<1249487947.10070.1328437413@webmail.messagingengine.com>
Message-ID: <20090808163213.7171.1638442843.divmod.xquotient.73@localhost.localdomain>

On 5 Aug, 03:59 pm, peter.westlake at pobox.com wrote:
>Background: I have a client program that calls callRemote, but the
>Deferred that callRemote returns is not fired. This is an intermittent
>error that only happens after some hours of traffic.
>
>By putting some logging into AMP, it's apparent that the server gets
>as far as sending the reply using BoxDispatcher._safeEmit. The
>original version of that ignores connection errors, but I overrode it
>with one that doesn't:
>
>[snip]
>
>On the client, BoxDispatcher._answerReceived logs all replies:
>
>[snip]
>
>Likewise _errorReceived.
>
>I always see both log.msgs or neither, so it isn't something going
>wrong in the callback.
>
>The client sends a request.
>The server sends a reply with the same tag, and logs a message.
>Until it goes wrong, the client receives the reply and logs it.
>When it goes wrong, the client does not see the reply.
>
>The protocol has the unfired Deferred in _outstandingRequests,
>with the missing tag as key.
>
>All this suggests that the problem is either in the low-level
>network code, or somewhere in the network between the client
>and server. But doesn't TCP/IP tell you if a packet doesn't
>get through?

It doesn't really /tell/ you.  But if there is some issue with
the network that prevents packet delivery for long enough, then
the connection breaks (giving you a connectionLost call in Twisted,
which should errback your Deferred).
>
>I tried tracing the packets using a python-pycapy script (attached),
>but it showed more packets disappearing than actually were.

It might be simpler to use something like wireshark, which already
knows how to do TCP stream re-assembly and such.

I know this isn't much of a suggestion, but it's the only thing that
really comes to mind.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Aug  8 10:49:25 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 08 Aug 2009 16:49:25 -0000
Subject: [Twisted-Python] Tunneling using conch (with
	application.service)
In-Reply-To: <66dccc4d0908060847y21a42afdt2c1d831419d710a0@mail.gmail.com>
References: <66dccc4d0908060847y21a42afdt2c1d831419d710a0@mail.gmail.com>
Message-ID: <20090808164925.7171.98799130.divmod.xquotient.104@localhost.localdomain>

On 6 Aug, 03:47 pm, smhollingsworth at gmail.com wrote:
>I 19ve got an app written that runs as a service using
>twisted.application.service that I need to tunnel through SSH. Right 
>now, I
>use a script that makes use of Paramiko (and runs separate from my app) 
>to
>set up a tunnel. That more or less works, but I 19ve had some problems 
>with
>the tunnel just going away and would like to integrate the tunneling 
>into
>the app, using conch. I 19ve found an example of tunneling via conch, at
>http://twistedmatrix.com/pipermail/twisted- 
>python/2009-February/019196.html,
>that I think I can use as a base to add the code to my app.
>
>Right now my app is basically:
>
>class DataPuller(service.Service):
>    ...Code for my app...
>    ... The app pulls data from a database and I can only connect to the
>server via SSH...
>
>application = service.Application( 18Data_puller 19)
>dpService = DataPuller()
>dpService.setServiceParent(application)
>
>My main problems are that I 19m not sure whether or not the example 
>linked to
>above is a good one for tunneling with conch and, if it is, how do I 
>merge
>the example tunneling code with my app code. From the example, where 
>the
>code is:

The example you linked to sets up the traditional port forwarding 
behavior.
A local port is opened and connections to it are tunneled over the SSH
connection, where data is then delivered to some address accessible from
the server on the other end of the SSH connection.

This is fine and should work, and probably very closely mirrors what 
you're
doing with Paramiko, so if you're happy with that, you should go for it.

However, it's also possible for you to do this tunneling without opening
the extra local port.  Since your application and the SSH client code 
are
all in the same process, you don't need the TCP connection to a local 
port
to do this IPC to interact wiht the tunnel.  You can set up the tunnel 
part
of things, but instead of binding a local port to accept connections on,
you can just open a connection over the tunnel and write bytes into it 
with
API calls.

I *don't* have an example of doing things this way, and I don't even 
know
exactly what it involves. ;)  However, the example you linked to gives a
clue about where to start on this approach: when it binds the local 
port,
it uses the forwarding.SSHListenForwardingFactory factory, so I'd start
by looking at that class and see what it does.  The rest is just 
mimicking
its behavior without actually using reactor.listenTCP.
>class Connection(connection.SSHConnection):
>        .
>        .
>        .
>        def serviceStarted(self):
>
>Do I instantiate my DataPuller class there, in serviceStarted (and not
>subclass from service.Service)? If so, how do I wrap the tunneling code 
>so
>that I can make it a service? If not, do I need put the tunneling code
>inside my DataPuller class? What would that look like?

If you want things to happen when your program starts or when it is 
about
to stop, then using service.Service is still a good idea.  That's the 
easy
way to hook into startup and shutdown events.  However, you may not want
to do anything other than set up (or tear down) the SSH connection in 
your
service.Service subclass.  Creating your new non-Service DataPuller in 
the
Connection's serviceStarted (or maybe even a little later - after you
actually set up the connection over the tunnel over the connection) then
makes sense.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Aug  8 22:05:18 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 09 Aug 2009 04:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1249790718.91.798412028@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090809/b36fc349/attachment-0001.html>

From lvh at laurensvh.be  Sun Aug  9 17:30:21 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Mon, 10 Aug 2009 01:30:21 +0200
Subject: [Twisted-Python] twisted.positioning -- Interface,
	or class with method stubs?
Message-ID: <cedc0c090908091630j669877a4q3b2ad117a48f886e@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi :-)


As you probably know, the interfaces for t.p live in t.p.ipositioning.
I still haven't quite understood why they are going to be awesome, but
anyway -- I'm running into a problem where keeping them would (I
think) imply a bunch of duplicated code.

The thing is, t.p.nmea.NMEAAdapter needs to (at least, I think so)
implement all of the methods of t.p.ipositioning.IPositioningProvider,
because people will subclass t.p.nmea.NMEAAdapter and override the
corresponding (stub) methods. In order to get all of the stub methods
implemented (otherwise people using the class need to implement
*every* method, which is dumb, since a lot of people won't care about
things like GPS climb), I would basically be copying every line of the
body of the interface into the t.p.nmea.NMEAAdapter. This sounds like
a dumb idea.

Subclassing the interface sounds like *entirely* the wrong thing to
do, since the class is-not-an Interface.

Another alternative is using getattr-with-default-value in order to
call the methods, since then missing (non-implemented) methods will be
handled gracefully. I kinda like this one, mainly because it's very
little work ;-)

A third alternative would be to scrap the interface all together and
use a base class with method stubs (I'm deliberately not using the
word abstract there). This sounds like a bad idea because we'd be
losing the interface, but I'm not entirely sure why we want it in the
first place...



thanks for your time
Laurens
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkp/W9QACgkQT5v5zGkvKT7inwCg0UP9d0zoiFnq1J8LrC/T1yUr
gXQAoIDbcp2jWg2Q5qIXTCRPsSGMiYCr
=kwgP
-----END PGP SIGNATURE-----



From glyph at twistedmatrix.com  Sun Aug  9 18:17:49 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 9 Aug 2009 20:17:49 -0400
Subject: [Twisted-Python] twisted.positioning -- Interface,
	or class with 	method stubs?
In-Reply-To: <cedc0c090908091630j669877a4q3b2ad117a48f886e@mail.gmail.com>
References: <cedc0c090908091630j669877a4q3b2ad117a48f886e@mail.gmail.com>
Message-ID: <d9047f780908091717u5fcd5b91s3668a2e240fd163f@mail.gmail.com>

On Sun, Aug 9, 2009 at 7:30 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:


> As you probably know, the interfaces for t.p live in t.p.ipositioning.
> I still haven't quite understood why they are going to be awesome, but
> anyway -- I'm running into a problem where keeping them would (I
> think) imply a bunch of duplicated code.
>

Have you read this?

http://glyph.twistedmatrix.com/2009/02/explaining-why-interfaces-are-great.html


> The thing is, t.p.nmea.NMEAAdapter needs to (at least, I think so)
> implement all of the methods of t.p.ipositioning.IPositioningProvider,
> because people will subclass t.p.nmea.NMEAAdapter and override the
> corresponding (stub) methods.


I don't think this is the case.  NMEAAdapter implements INMEAReceiver.  It
should take an IPositioningProvider as an *argument* somewhere, not
implement that interface itself.

A user implementing a position-aware application should be encouraged as
strongly as possible to avoid any NMEA-specific junk in their application
until it comes time to connect the app logic (IPositioningProvider) to the
actual device spitting out NMEA data.  After all, they're not going to be
able to easily make use of cell-tower positioning information if their
application class is hard-coded to subclass NMEAAdapter.

In order to get all of the stub methods implemented (otherwise people using
> the class need to implement *every* method, which is dumb, since a lot of
> people won't care about things like GPS climb),


The general sentiment here is right, despite the terminology problem I
pointed out: somewhere, a user is going to implement an IPositioningProvider
and it's quite likely that they won't want to implement every method.  So
let's assume there's going to be a BasePositioningProvider which stubs out
many of these methods or unifies / simplifies them.

I would basically be copying every line of the body of the interface into
> the t.p.nmea.NMEAAdapter.
>

Not quite.  For one thing, your method declaration lines will have a 'self'
in BasePositioningProvider, and in IPositioningProvider they won't.  (I
notice that this is not currently the case.  You should probably fix that:
interface method definitions should never include 'self'.)

Also, your methods' docstrings won't need to be as complete as those on the
interface, since they can just say "implement L{IPositioningProvider.foo}
to...".

Finally, I hope *most* of the methods will actually have a body that has
some implementation; some default behavior that will be useful  For example,
remembering the last position / heading / speed / error so that
'positionReceived' can conveniently expect the last error received without
implementing that method itself.  One or two might be completely stubbed
out, but the interface can't contain any implementation.

This sounds like a dumb idea.
>

Let's assume the worst case: BasePositioningProvider has absolutely no
default behavior besides a no-op.  The level of duplication we're talking
about here is this:

    def positionReceived(self, latitude, longitude):
    def positioningErrorReceived(self, positioningError):
    def headingReceived(self, heading):
    def headingErrorReceived(self, headingError):
    def magneticHeadingReceived(self, magneticHeading):
    def altitudeReceived(self, altitude):
    def altitudeErrorReceived(self, altitudeError):
    def speedReceived(self, speed):
    def speedErrorReceived(self, speedError):
    def climbReceived(self, climb):
    def climbErrorReceived(self, climbError):

In other words, the duplicated code in question will be considerably shorter
than the body of the message you composed to fret about code duplication,
and *way* shorter than my response :-). This doesn't really seem excessive,
considering that there's no duplication of *functionality* (the interface
only specifies behavior, the base class implements it), only duplication of
text.

Subclassing the interface sounds like *entirely* the wrong thing to do,
> since the class is-not-an Interface.
>

You're definitely right here.  It isn't just conceptually wrong, it's also
completely broken.  Subclassing an Interface creates another Interface (i.e.
instance of InterfaceClass) not a class or type.  In other words, you can't
instantiate it, and you can't call methods on it if you define any.  IIRC,
more recent versions of zope.interface will actually emit warnings if you
try to put methods which have definitions on an interface.

Another alternative is using getattr-with-default-value in order to
> call the methods, since then missing (non-implemented) methods will be
> handled gracefully. I kinda like this one, mainly because it's very
> little work ;-)


It's more work than you think.  If you misspell a method name, then the code
which invokes it will fail in a totally straightforward way: it won't invoke
your method, and as a result it will probably blow up.  If you use
getattr-with-default, then it silently does nothing.


> A third alternative would be to scrap the interface all together and
> use a base class with method stubs (I'm deliberately not using the
> word abstract there). This sounds like a bad idea because we'd be
> losing the interface, but I'm not entirely sure why we want it in the
> first place...
>

I believe the real problem here is that you don't quite get the value of
interfaces.  Read that blog post that I linked to if you haven't already,
and if you have, let's talk about that instead.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090809/1f475ea0/attachment.html>

From nharsha at gmail.com  Mon Aug 10 00:10:41 2009
From: nharsha at gmail.com (Harsha)
Date: Mon, 10 Aug 2009 11:40:41 +0530
Subject: [Twisted-Python] sending 'tail -f' command to a remote host using
	conch?
Message-ID: <560c16120908092310i14b46ec7j2cf7c7a11a9568d1@mail.gmail.com>

Hi All,

A day back I install Twisted and Conch on RHEL5. I am a novice user of
Twisted software.
I copied an example from dev-shed website (attached herewith). This example
script uses conch to talk to a ssh deamon.

This script was able to capture and return the output of simple commands
such as - ls, cat etc.
I mean, when I run the script to execute 'ls -al' on a remote machine it
does and returns the prompt.

Where as, when I run the script to execute '*tail -f /path/to/mylog.txt*' I
get the ouput of this command but the prompt never returns.
When I press ^C (Control-C) I get the following run-time error.

*Traceback (most recent call last):
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/internet/tcp.py",
line 520, in connectionLost
    protocol.connectionLost(reason)
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/conch/ssh/transport.py",
line 166, in connectionLost
    self.service.serviceStopped()
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/conch/ssh/connection.py",
line 59, in serviceStopped
    map(self.channelClosed, self.channels.values())
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/conch/ssh/connection.py",
line 580, in channelClosed
    log.callWithLogger(channel, channel.closed)
--- <exception caught here> ---
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/python/log.py",
line 84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/python/log.py",
line 69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
  File "shankha.py", line 56, in closed
    reactor.stop()
  File
"/usr/lib/python2.4/site-packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/internet/base.py",
line 526, in stop
    raise error.ReactorNotRunning(
twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
running.*


*I know that 'tail -f' command is expecting "Control-C" or Break to return
the prompt on remote host.
But my attempt to send the ^C character is failing..

I am doing somethink like this:

python sshc.py <hostname> 'tail -f mylog.txt ; \x03'

What is the recommended method to adopt such cases?

*Cheers!!
Harsha Reddy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090810/0dcc2764/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sshc.py
Type: text/x-python
Size: 2626 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090810/0dcc2764/attachment-0002.py>

From johnaherne at rocs.co.uk  Mon Aug 10 00:56:20 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Aug 2009 07:56:20 +0100
Subject: [Twisted-Python] Documentation
Message-ID: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>

Prompted by exarkun, I have put together some simple documentation for
beginners starting with Twisted.
The points are made up of things I wish I had known from the start as a
complete beginner.

It still needs lots of work. The layout needs to change, there are
duplications and the points need to be made more succinctly.

But before I spend more time on honing the document, I thought it would be a
good idea to get some feedback.

The information in the document may already exist and I have just overlooked
it.

People may feel it is not appropriate for the documentation in Twisted and
should go elsewhere.

Some of the information needs to be checked for accuracy and to avoid
misleading readers.

Anyway I would appreciate any feedback positive or negative.

John Aherne

Here ie the text:

Basic Information for anyone starting with Twisted

If you don't know mauch about TCP, then bear this in mind.

BASIC TCP

TCP is a stream of data.  Once the connection is open, it stays open until
closed.
It does not have a beginning or an end. It does not know about your
messages.
You cannot wait until it sends your message since it will not tell you the
message
has been sent. If you want to know if your message reached the other end,
you need
to have in place a protocol for each end to respond that it received the
data.
You will then need to implement a timeout for when there are problems
otherwise
you may wait a long time for a response. TCP will wait forever. But
intermediate
routers may time you out after 2 - 30 minutes if there is no traffic on the
port.

TCP is just a stream of data. You have to process the stream of data looking
for
a marker your application has placed that signifies the end of message to
your
end of the application program.

Twisted provide the linereceiver and sendline functions to help in the
common
case of using CR/LF as a terminator of messages, expecially for chat type
protocols and http.

The reactor and the select command will process the outgoing and incoming
buffers without blocking.

The reactor uses the select command. Each time the reactor cycles around, it
will
use select to check the read and write buffers to see if any buffer is ready
to
read or write. It will process those that are ready. Ignoring any not yet
ready.

Anyone familiar with networking and select will probably already understand
this.
Anyone not familiar will not realise it and needs to become familiar with
how
select works.

If you want to know how Twisted processes network traffic, you should read
up
on the select command.


TWISTED - DIRECT SEND DATA CALLS

For simple network activity you do not need to use deferreds. They are not
necessary. And you can get a lot done without deferreds just by using the
transport.write or sendline functions. This is shown in the simple Chat
Server
example following.

Provided you are dealing in small amounts of data you will not block the
reactor.
If you are sending megabytes of data in a file, that is a different
matter.

Using sendline directly is faster than using a deferred.

John Goerzen in his Apress book Python Network Fundamentals has a very
simple
chat server example.


WHAT IS BLOCKING CODE

Blocking code is code that will block or may potentially block the continued
execution of the main reactor thread. Think for the most part of long
running
processes or operations that may be long running, doing file or network i/o,
calculating cpu intensive work, operations that may timeout like doing a
remote
call to another process or host machine, database operations are usually a
culprit, that may be flooded with work or crashed, the examples go on but
are
mainly about i/o and cpu intensive operations.

When these things happen on the reactor / main thread they block the server
from
doing anything else, it can't accept new connections, it can't do anything
else
until this blocking activity has completed and returned control to the
reactor
thread.

WHAT ARE DEFERREDS

By and large they seem very similar to callbacks. They aren't, but seem to
perform the same sort of function. Please refer to other documentation on
defers
for more detailed explanation.

As everyone hears interminably on the twisted list, deferreds do not make
blocking code non-blocking. We all try it - but you shouldn't.

If you have blocking code, then first think about putting it into
deferToThread
which will run the code in its own thread. It's not the only thing you can
do
but it is a good start.

Return a deferred when setting up this threaded function and add appropriate
callbacks and errbacks. This will run the blocking code in its own thread.
You should not call transport.write or sendline functions directly from the
thread since this is not thread-safe.

In the thread you must call the callback or errback to return processing to
the
reactor thread and then send any data from the reactor thread.

You can handle this without deferToThread by breaking the blocking code up
into
smaller pieces. Sometimes you need to transfer a large file to a socket,
instead of trying to send it all at once send 10KB at a time and yield back
to
the reactor and reschedule the next 10KB until finished. This will work, it
might
not be the fastest way and still may block for an unacceptable amount of
time
on just 10KB, depending on how heavily taxed the i/o system is at the
moment.

Usually deferToThread is just easier to implement.

DATABASE PROCESSING TENDS TO BE BLOCKING

The adbapi module seems to be a good example of using deferreds and threads.
The
adbapi module returns a deferred it has created, you add your callbacks to
it.
The thread then calls your callback when ready. It does seem like the
examplar
for doing deferreds.

The db stuff will normally block so put it in a thread and use deferreds to
wait
the result or failure.

THREADS

twisted is meant to avoid the problems of using threads for network
processing.
So why are we using threads. It's a way of moving potentially blocking code
out
of the way so it avoids hanging the reactor.

THREADS WON'T NECESSARILY PREVENT BLOCKING

A point about the db calls is that they can be very intensive. If you need
to
run some db function every 30 secs or 60 secs and the db takes 50% or more
of the
time to generate the results, you won't have much time to service any
incoming
requests that want to get results. The remote connections will be failing
bigtime.

So then I suppose you should break the code into 2 programs. One that does
the
db stuff, the other to handle the remote connections. The db code when it
has
a result will then connect to the other program and pass across its
results.
There may be better ways of doing this of course depending on circumstances.

WHEN TO USE DEFERREDS

If you have a cpu intensive process, then in all probability it will block
the
reactor since it will take 100% cpu time while running - whether in the main
thread
or in a separate thread. These are not good for running in twisted.

If you have I/O activity, such as reading lines of text from a disk file,
this seems a good candidate for deferreds.

This is what the dbapi module does. So it seems like a good example to
follow.

As a general rule, it is simplest to use deferreds with threads. This is not
always true so circumstances may indicate a better way of running a
deferred.

You still need to make sure that the bulk of the time is available for
handling
connections. Otherwise you will start to have failing connections

Using sendline directly is faster than putting a deferred in between.

BEWARE WHEN USING DEFERREDS IN THREADS

Since deferToThread runs the function you pass to it in a non-reactor
thread, you may not use any non-thread-safe Twisted APIs in the function
you
pass to it.

Beware of using shared data when running in the thread such as lists and
dictionaries.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090810/cdf21a5b/attachment.html>

From lvh at laurensvh.be  Mon Aug 10 05:46:32 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Mon, 10 Aug 2009 13:46:32 +0200
Subject: [Twisted-Python] twisted.positioning -- Interface,
	or class with 	method stubs?
In-Reply-To: <d9047f780908091717u5fcd5b91s3668a2e240fd163f@mail.gmail.com>
References: <cedc0c090908091630j669877a4q3b2ad117a48f886e@mail.gmail.com>
	<d9047f780908091717u5fcd5b91s3668a2e240fd163f@mail.gmail.com>
Message-ID: <cedc0c090908100446x4d39446fv434e45f99d4362aa@mail.gmail.com>

> Have you read this?
>
> http://glyph.twistedmatrix.com/2009/02/explaining-why-interfaces-are-great.html

Yep, I have (and just read it again).  I think I get it, sort of, kind
of, but I don't think I'll really understand it until it all comes
together.

>> The thing is, t.p.nmea.NMEAAdapter needs to (at least, I think so)
>> implement all of the methods of t.p.ipositioning.IPositioningProvider,
>> because people will subclass t.p.nmea.NMEAAdapter and override the
>> corresponding (stub) methods.
>
> I don't think this is the case.  NMEAAdapter implements INMEAReceiver.  It
> should take an IPositioningProvider as an argument somewhere, not implement
> that interface itself.

Ah, that makes much more sense, indeed. I'm guessing that people
should be allowed to connect multiple such providers, instead of just
one? Otherwise I could always implement one that takes multiple such
providers as *its* argument later of course.

> A user implementing a position-aware application should be encouraged as
> strongly as possible to avoid any NMEA-specific junk in their application
> until it comes time to connect the app logic (IPositioningProvider) to the
> actual device spitting out NMEA data.  After all, they're not going to be
> able to easily make use of cell-tower positioning information if their
> application class is hard-coded to subclass NMEAAdapter.

That makes even more sense.

>> In order to get all of the stub methods implemented (otherwise people
>> using the class need to implement *every* method, which is dumb, since a lot
>> of people won't care about things like GPS climb),
>
> The general sentiment here is right, despite the terminology problem I
> pointed out: somewhere, a user is going to implement an IPositioningProvider
> and it's quite likely that they won't want to implement every method.  So
> let's assume there's going to be a BasePositioningProvider which stubs out
> many of these methods or unifies / simplifies them.
>
>> I would basically be copying every line of the body of the interface into
>> the t.p.nmea.NMEAAdapter.
>
> Not quite.  For one thing, your method declaration lines will have a 'self'
> in BasePositioningProvider, and in IPositioningProvider they won't.  (I
> notice that this is not currently the case.  You should probably fix that:
> interface method definitions should never include 'self'.)

Fixed in trunk, thanks.

> Also, your methods' docstrings won't need to be as complete as those on the
> interface, since they can just say "implement L{IPositioningProvider.foo}
> to...".

> Finally, I hope most of the methods will actually have a body that has some
> implementation; some default behavior that will be useful  For example,
> remembering the last position / heading / speed / error so that
> 'positionReceived' can conveniently expect the last error received without
> implementing that method itself.  One or two might be completely stubbed
> out, but the interface can't contain any implementation.

The adapter already keeps state. I think this is necessary, because of
the way NMEA fragments information in sentences. I'm not sure how that
implementation would work though -- wouldn't people that care about
position end up overriding that method, hence making the non-stub
useless?

>> This sounds like a dumb idea.
>
>
> Let's assume the worst case: BasePositioningProvider has absolutely no
> default behavior besides a no-op.  The level of duplication we're talking
> about here is this:
>
>     def positionReceived(self, latitude, longitude):
>     def positioningErrorReceived(self, positioningError):
>     def headingReceived(self, heading):
>     def headingErrorReceived(self, headingError):
>     def magneticHeadingReceived(self, magneticHeading):
>     def altitudeReceived(self, altitude):
>     def altitudeErrorReceived(self, altitudeError):
>     def speedReceived(self, speed):
>     def speedErrorReceived(self, speedError):
>     def climbReceived(self, climb):
>     def climbErrorReceived(self, climbError):
>
> In other words, the duplicated code in question will be considerably shorter
> than the body of the message you composed to fret about code duplication,
> and way shorter than my response :-). This doesn't really seem excessive,
> considering that there's no duplication of functionality (the interface only
> specifies behavior, the base class implements it), only duplication of text.

Okay, I'll implement that class, expect it in trunk soon :-)

thanks for your response
Laurens



From exarkun at twistedmatrix.com  Mon Aug 10 07:29:25 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 10 Aug 2009 13:29:25 -0000
Subject: [Twisted-Python] sending 'tail -f' command to a remote host
	using	conch?
In-Reply-To: <560c16120908092310i14b46ec7j2cf7c7a11a9568d1@mail.gmail.com>
References: <560c16120908092310i14b46ec7j2cf7c7a11a9568d1@mail.gmail.com>
Message-ID: <20090810132925.7136.2016719798.divmod.xquotient.8@localhost.localdomain>

On 06:10 am, nharsha at gmail.com wrote:
>Hi All,
>
>A day back I install Twisted and Conch on RHEL5. I am a novice user of
>Twisted software.
>I copied an example from dev-shed website (attached herewith). This 
>example
>script uses conch to talk to a ssh deamon.
>
>This script was able to capture and return the output of simple 
>commands
>such as - ls, cat etc.
>I mean, when I run the script to execute 'ls -al' on a remote machine 
>it
>does and returns the prompt.
>
>Where as, when I run the script to execute '*tail -f 
>/path/to/mylog.txt*' I
>get the ouput of this command but the prompt never returns.
>When I press ^C (Control-C) I get the following run-time error.
>[snip]
>  File "shankha.py", line 56, in closed
>    reactor.stop()
>  File
>"/usr/lib/python2.4/site- 
>packages/Twisted-8.2.0-py2.4-linux-i686.egg/twisted/internet/base.py",
>line 526, in stop
>    raise error.ReactorNotRunning(
>twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't
>running.*

This happens because your program tries to stop the reactor twice. 
First, it tries to stop it when you hit ^C - the default handing of ^C 
is to stop the reactor.  Then, your SSH connection is closed (because 
all connections are closed when the reactor is stopped).  Your code 
handles this by calling reactor.stop() again.
>
>
>*I know that 'tail -f' command is expecting "Control-C" or Break to 
>return
>the prompt on remote host.
>But my attempt to send the ^C character is failing..
>
>I am doing somethink like this:
>
>python sshc.py <hostname> 'tail -f mylog.txt ; \x03'
>
>What is the recommended method to adopt such cases?

You need to set up some glue.  Right now, ^C is not being sent to the 
remote process at all.  It's only being sent to your local sshc.py 
process.  You may want to install your own SIGINT handler, or you may 
want to add a before shutdown trigger (or use a service's stopService 
method) to send ^C to the remote process.  As to what the Conch API is 
for sending a signal to a process, I'm not sure.

Jean-Paul



From peter.westlake at pobox.com  Mon Aug 10 16:25:05 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 10 Aug 2009 23:25:05 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <20090808163213.7171.1638442843.divmod.xquotient.73@localhost.localdomain>
References: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com><1248457435.32636.1326651287@webmail.messagingengine.com><1249487947.10070.1328437413@webmail.messagingengine.com>
	<20090808163213.7171.1638442843.divmod.xquotient.73@localhost.localdomain>
Message-ID: <1249943105.24323.1329213329@webmail.messagingengine.com>


On Sat, 08 Aug 2009 16:32 +0000, exarkun at twistedmatrix.com wrote:
> On 5 Aug, 03:59 pm, peter.westlake at pobox.com wrote:
> >Background: I have a client program that calls callRemote, but the
> >Deferred that callRemote returns is not fired. This is an intermittent
> >error that only happens after some hours of traffic.
...
> >The client sends a request.
> >The server sends a reply with the same tag, and logs a message.
> >Until it goes wrong, the client receives the reply and logs it.
> >When it goes wrong, the client does not see the reply.
> >
> >The protocol has the unfired Deferred in _outstandingRequests,
> >with the missing tag as key.
> >
> >All this suggests that the problem is either in the low-level
> >network code, or somewhere in the network between the client
> >and server. But doesn't TCP/IP tell you if a packet doesn't
> >get through?
> 
> It doesn't really /tell/ you.  But if there is some issue with
> the network that prevents packet delivery for long enough, then
> the connection breaks (giving you a connectionLost call in Twisted,
> which should errback your Deferred).
> >
> >I tried tracing the packets using a python-pycapy script (attached),
> >but it showed more packets disappearing than actually were.
> 
> It might be simpler to use something like wireshark, which already
> knows how to do TCP stream re-assembly and such.
> 
> I know this isn't much of a suggestion, but it's the only thing that
> really comes to mind.

No, it's a good suggestion - the only problem is that it makes the
problem happen far less often! What I've done is to capture the first
few bytes of each packet, enough to show the whole of the AMP reply
packets (which are just {'_answer':tag, 'status':True}) without any
need for full-scale analysis and reassembly.

I'm pleased to say that after many hours of watching tcpdump,
the bug eventually happened again just minutes before I left
for a long weekend. Sure enough, TCP/IP delivers the packet
successfully. Tomorrow's first task is going to be putting
tracing into the low-level code where the reactor is meant
to receive the packet and call the AMP _outstandingRequests
entry for it.

It would have been almost impossible to get even this far
without the Manhole feature. I've been using it all along
to inspect the workings of the client code, and it was a big
help on the server side too. The server handles a lot of
connections, and I was able to set a debug flag in the protocol
object for the connection I was tracing. There would have been
very much more log data otherwise. It makes a big difference
being able to see values of variables without having to add
new log statements and spend another working day waiting for
the bug. Whoever invented it - thank you!

Peter.



From gabriel.rossetti at arimaz.com  Tue Aug 11 09:50:30 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 11 Aug 2009 17:50:30 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX but not
	on linux
Message-ID: <4A819346.8090800@arimaz.com>

Hello everyone,

I wrote a twisted app using the XMPP code that works fin on linux (and 
windows), but on Mac I get a twisted.names.error.DNSNameError, I 
searched google but found nothing on this, is there a known bug with 
Twisted on Mac?

I have Mac OS X 10.5.8, and the latest version of twisted from the website.

Thank you,
Gabriel



From exarkun at twistedmatrix.com  Tue Aug 11 10:17:10 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 11 Aug 2009 16:17:10 -0000
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX
	but	not on linux
In-Reply-To: <4A819346.8090800@arimaz.com>
References: <4A819346.8090800@arimaz.com>
Message-ID: <20090811161710.8427.2036177418.divmod.xquotient.7@localhost.localdomain>

On 03:50 pm, gabriel.rossetti at arimaz.com wrote:
>Hello everyone,
>
>I wrote a twisted app using the XMPP code that works fin on linux (and
>windows), but on Mac I get a twisted.names.error.DNSNameError, I
>searched google but found nothing on this, is there a known bug with
>Twisted on Mac?
>
>I have Mac OS X 10.5.8, and the latest version of twisted from the 
>website.

DNS is good at having behavior sensitive to the environment you are 
using it in.  I'm not sure if there are any known bugs which would 
explain the problem you're encountering, mostly because I don't really 
know what problem you're encountering. ;)  "twisted app using XMPP code" 
and "get a DNSNameError" don't say a whole lot.  What API is failing? 
What other details can you provide?  It may be a bug in Twisted, or it 
may be a configuration issue relating to your Mac host.

Jean-Paul



From gabriel.rossetti at arimaz.com  Tue Aug 11 10:30:17 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 11 Aug 2009 18:30:17 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX but
 not	on linux
In-Reply-To: <4A819346.8090800@arimaz.com>
References: <4A819346.8090800@arimaz.com>
Message-ID: <4A819C99.8030100@arimaz.com>

Gabriel Rossetti wrote:
> Hello everyone,
>
> I wrote a twisted app using the XMPP code that works fin on linux (and 
> windows), but on Mac I get a twisted.names.error.DNSNameError, I 
> searched google but found nothing on this, is there a known bug with 
> Twisted on Mac?
>
> I have Mac OS X 10.5.8, and the latest version of twisted from the website.
>
> Thank you,
> Gabriel
>   

Here is some example code (from Twisted), this works as-is on linux but 
not on Mac. I tried an internal and an external XMPP server. On Mac I 
get this :

python xmpp_client.py test at toto.com 123

2009/08/11 18:21 +0200 [-] Log opened.

2009/08/11 18:21 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [-] /etc/resolv.conf changed, reparsing

2009/08/11 18:21 +0200 [-] Resolver added ('83.219.127.194', 53) to 
server list

2009/08/11 18:21 +0200 [-] Resolver added ('83.219.127.226', 53) to 
server list

2009/08/11 18:21 +0200 [-] twisted.names.dns.DNSDatagramProtocol 
starting on 49226

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 2 seconds

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 7 seconds

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 14 
seconds

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 30 
seconds

2009/08/11 18:21 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:22 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:22 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 83 
seconds

2009/08/11 18:22 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:23 +0200 [-] Starting factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>

2009/08/11 18:23 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
<__main__.XMPPClientConnector instance at 0x1003aa8> will retry in 241 
seconds

2009/08/11 18:23 +0200 [twisted.names.dns.DNSDatagramProtocol (UDP)] 
Stopping factory 
<twisted.words.protocols.jabber.xmlstream.XmlStreamFactory instance at 
0x1003a80>


##############################################################

# -*- coding: utf-8 -*-
# Copyright (c) 2001-2006 Twisted Matrix Laboratories.
# See LICENSE for details.

import sys
from twisted.internet import reactor
from twisted.names.srvconnect import SRVConnector
from twisted.words.xish import domish
from twisted.words.protocols.jabber import xmlstream, client, jid
from twisted.python import log

log.startLogging(sys.stdout)


class XMPPClientConnector(SRVConnector):
    def __init__(self, reactor, domain, factory):
        SRVConnector.__init__(self, reactor, 'xmpp-client', domain, factory)
   
    def pickServer(self):
        host, port = SRVConnector.pickServer(self)
        if not self.servers and not self.orderedServers:
            # no SRV record, fall back..
            port = 5222
        return host, port


class Client(object):
    def __init__(self, client_jid, secret):
        f = client.XMPPClientFactory(client_jid, secret)
        f.addBootstrap(xmlstream.STREAM_CONNECTED_EVENT, self.connected)
        f.addBootstrap(xmlstream.STREAM_END_EVENT, self.disconnected)
        f.addBootstrap(xmlstream.STREAM_AUTHD_EVENT, self.authenticated)
        f.addBootstrap(xmlstream.INIT_FAILED_EVENT, self.init_failed)
        f.addBootstrap(xmlstream.STREAM_ERROR_EVENT, self.error)
        connector = XMPPClientConnector(reactor, "10.204.232.117", f)
        connector.connect()

    def rawDataIn(self, buf):
        print "RECV: %s" % unicode(buf, 'utf-8')

    def rawDataOut(self, buf):
        print "SEND: %s" % unicode(buf, 'utf-8')

    def connected(self, xs):
        print 'Connected.'
        self.xmlstream = xs
        # Log all traffic
        xs.rawDataInFn = self.rawDataIn
        xs.rawDataOutFn = self.rawDataOut
       
    def disconnected(self, xs):
        print 'Disconnected.'
        reactor.stop()

    def authenticated(self, xs):
        print "Authenticated."
        presence = domish.Element((None, 'presence'))
        xs.send(presence)

    def init_failed(self, failure):
        print "Initialization failed."
        print failure
        self.xmlstream.sendFooter()
       
    def error(self, failure):
        print "error"
        print failure
        self.xmlstream.sendFooter()


client_jid = jid.JID(sys.argv[1])
secret = sys.argv[2]
c = Client(client_jid, secret)

reactor.run()



From gabriel.rossetti at arimaz.com  Tue Aug 11 10:53:21 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 11 Aug 2009 18:53:21 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX	but
 not on linux
In-Reply-To: <20090811161710.8427.2036177418.divmod.xquotient.7@localhost.localdomain>
References: <4A819346.8090800@arimaz.com>
	<20090811161710.8427.2036177418.divmod.xquotient.7@localhost.localdomain>
Message-ID: <4A81A201.2080902@arimaz.com>

exarkun at twistedmatrix.com wrote:
> On 03:50 pm, gabriel.rossetti at arimaz.com wrote:
>   
>> Hello everyone,
>>
>> I wrote a twisted app using the XMPP code that works fin on linux (and
>> windows), but on Mac I get a twisted.names.error.DNSNameError, I
>> searched google but found nothing on this, is there a known bug with
>> Twisted on Mac?
>>
>> I have Mac OS X 10.5.8, and the latest version of twisted from the 
>> website.
>>     
>
> DNS is good at having behavior sensitive to the environment you are 
> using it in.  I'm not sure if there are any known bugs which would 
> explain the problem you're encountering, mostly because I don't really 
> know what problem you're encountering. ;)  "twisted app using XMPP code" 
> and "get a DNSNameError" don't say a whole lot.  What API is failing? 
> What other details can you provide?  It may be a bug in Twisted, or it 
> may be a configuration issue relating to your Mac host.
>
> Jean-Paul
>   
Hello jean-Paul, I just saw your msg, I have sent some example code. I 
think I nkow where this is comming from, Apple has a version of twisted 
installed in it's python frameworks, and it's version 2.5. I just 
remembered I had the same error when on version 2.5 on linux. The 
problem is I don't know how to cleanly resolve this problem, I would 
need python to use my cersion an not Apple's, but how to do this?

Gabriel



From exarkun at twistedmatrix.com  Tue Aug 11 10:55:00 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 11 Aug 2009 16:55:00 -0000
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX
	but	not on linux
In-Reply-To: <4A819C99.8030100@arimaz.com>
References: <4A819346.8090800@arimaz.com>
	<4A819C99.8030100@arimaz.com>
Message-ID: <20090811165500.8427.899749643.divmod.xquotient.9@localhost.localdomain>

On 04:30 pm, gabriel.rossetti at arimaz.com wrote:
>Gabriel Rossetti wrote:
>>Hello everyone,
>>
>>I wrote a twisted app using the XMPP code that works fin on linux (and
>>windows), but on Mac I get a twisted.names.error.DNSNameError, I
>>searched google but found nothing on this, is there a known bug with
>>Twisted on Mac?
>>
>>I have Mac OS X 10.5.8, and the latest version of twisted from the 
>>website.
>>
>>Thank you,
>>Gabriel
>
>Here is some example code (from Twisted), this works as-is on linux but
>not on Mac. I tried an internal and an external XMPP server. On Mac I
>get this :

Perhaps this is the problem:

  http://twistedmatrix.com/trac/ticket/3456

Jean-Paul



From glyph at twistedmatrix.com  Tue Aug 11 15:03:10 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 11 Aug 2009 17:03:10 -0400
Subject: [Twisted-Python] Documentation
In-Reply-To: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
References: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
Message-ID: <d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>

On Mon, Aug 10, 2009 at 2:56 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

> Prompted by exarkun, I have put together some simple documentation for
> beginners starting with Twisted.
>

Thanks for doing this.   All documentation help is useful :).


> But before I spend more time on honing the document, I thought it would be
> a good idea to get some feedback.
>

I've added a review of this document to my personal to-do list, but that
might take another couple of days.

In the meanwhile, I think the stuff you're trying to communicate is
valuable, but some of it seems pretty vague, and the ordering is a little
confusing.  For example,

For simple network activity you do not need to use deferreds
>

what constitutes "simple" network activity?  Does this means that there are
some types of network activity do require deferreds?  For that matter, is
"network activity" everything Twisted does, or just sending/receiving
bytes?  etc, etc.  I think it would be better to clearly and simply lay out
how to do "simple" network operations like sending and receiving data before
talking about Deferreds at all.  It may still be useful to say "you don't
need Deferreds" at some point, to make sure this is clear to the new user,
but that should come later, when you can illustrate more clearly *why* they
don't need Deferreds.

You also use the word "seem" a lot.  You should be more assertive, and just
say what things are or aren't, not what they seem like.  Don't worry about
being wrong.  If you write something wrong, we will correct you before it
goes into the docs :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090811/fc75f7cd/attachment.html>

From johnaherne at rocs.co.uk  Wed Aug 12 04:41:18 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 12 Aug 2009 11:41:18 +0100
Subject: [Twisted-Python] Documentation
In-Reply-To: <d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>
References: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
	<d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>
Message-ID: <faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>

On Tue, Aug 11, 2009 at 10:03 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

> On Mon, Aug 10, 2009 at 2:56 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>
>> Prompted by exarkun, I have put together some simple documentation for
>> beginners starting with Twisted.
>>
>
> Thanks for doing this.   All documentation help is useful :).
>
>
>> But before I spend more time on honing the document, I thought it would be
>> a good idea to get some feedback.
>>
>
> I've added a review of this document to my personal to-do list, but that
> might take another couple of days.
>
> In the meanwhile, I think the stuff you're trying to communicate is
> valuable, but some of it seems pretty vague, and the ordering is a little
> confusing.  For example,
>
> For simple network activity you do not need to use deferreds
>>
>
> what constitutes "simple" network activity?  Does this means that there are
> some types of network activity do require deferreds?  For that matter, is
> "network activity" everything Twisted does, or just sending/receiving
> bytes?  etc, etc.  I think it would be better to clearly and simply lay out
> how to do "simple" network operations like sending and receiving data before
> talking about Deferreds at all.  It may still be useful to say "you don't
> need Deferreds" at some point, to make sure this is clear to the new user,
> but that should come later, when you can illustrate more clearly *why*they don't need Deferreds.
>
> You also use the word "seem" a lot.  You should be more assertive, and just
> say what things are or aren't, not what they seem like.  Don't worry about
> being wrong.  If you write something wrong, we will correct you before it
> goes into the docs :).
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> Thanks for taking a look.

I appreciate it it was a bit confused, but I wanted to get it out sooner
rather than later and just get the basic facts confirmed.

So I will start putting my thoughts into better shape and more coherently.
This always takes a couple of rewrites, so I hope you can add some more
thoughts before I get too far.

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090812/1542fab7/attachment.html>

From jarrod at vertigrated.com  Wed Aug 12 07:20:52 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 12 Aug 2009 09:20:52 -0400
Subject: [Twisted-Python] Documentation
In-Reply-To: <faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>
References: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
	<d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>
	<faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>
Message-ID: <fa3d0c740908120620h47045ad4pf9143cdecc4c5dfc@mail.gmail.com>

On Wed, Aug 12, 2009 at 6:41 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

>
>
> On Tue, Aug 11, 2009 at 10:03 PM, Glyph Lefkowitz <glyph at twistedmatrix.com
> > wrote:
>
>> On Mon, Aug 10, 2009 at 2:56 AM, John Aherne <johnaherne at rocs.co.uk>wrote:
>>
>>> Prompted by exarkun, I have put together some simple documentation for
>>> beginners starting with Twisted.
>>>
>>
>> Thanks for doing this.   All documentation help is useful :).
>>
>>
>>> But before I spend more time on honing the document, I thought it would
>>> be a good idea to get some feedback.
>>>
>>
>> I've added a review of this document to my personal to-do list, but that
>> might take another couple of days.
>>
>> In the meanwhile, I think the stuff you're trying to communicate is
>> valuable, but some of it seems pretty vague, and the ordering is a little
>> confusing.  For example,
>>
>> For simple network activity you do not need to use deferreds
>>
>>
this should not say "simple" that is not quantiative, it should say
"non-blocking".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090812/862f566c/attachment-0001.html>

From petshmidt at googlemail.com  Wed Aug 12 09:28:30 2009
From: petshmidt at googlemail.com (Pet)
Date: Wed, 12 Aug 2009 17:28:30 +0200
Subject: [Twisted-Python] unicode for pyPgSQL
Message-ID: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>

Hello,

does pyPgSQL doesn't support unicode?

execute(query, params) #all items in params list are of  <type 'unicode'>

I'm getting
'ascii' codec can't encode character u'\xfc' in position 1: ordinal
not in range(128)

Do I need encode my params before sending a query and then decode all
results back to unicode?


Pet



From gabriel.rossetti at arimaz.com  Wed Aug 12 09:47:45 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 12 Aug 2009 17:47:45 +0200
Subject: [Twisted-Python] Twisted, wxPython & Mac OS X 10.5 freezes
Message-ID: <4A82E421.4080107@arimaz.com>

Hello everyone,

I have written an application using Twisted, WX and I wanted to test it 
under Mac. I have successfully used it on linux and windows before. When 
I run it, I often get the pinwheel of death and then the whole OS locks 
up, even SSH no longer accepts connections, I have to hard reboot it. 
Has anyone ever witnessed this? Does anyone know/have an idea of what 
could cause this? I was wondering if it is not the twisted + wx 
integration that could cause this.

Thank you,
Gabriel



From glyph at twistedmatrix.com  Wed Aug 12 09:51:15 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Aug 2009 11:51:15 -0400
Subject: [Twisted-Python] unicode for pyPgSQL
In-Reply-To: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
References: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
Message-ID: <d9047f780908120851y4e2439a0m1923b9a94ae464a1@mail.gmail.com>

On Wed, Aug 12, 2009 at 11:28 AM, Pet <petshmidt at googlemail.com> wrote:

> Hello,
>
> does pyPgSQL doesn't support unicode?
>

Sounds like a question for the pyPgSQL list, not the Twisted list :)

<https://lists.sourceforge.net/lists/listinfo/pypgsql-users>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090812/4b9330e3/attachment.html>

From glyph at twistedmatrix.com  Wed Aug 12 10:02:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Aug 2009 12:02:54 -0400
Subject: [Twisted-Python] Twisted, wxPython & Mac OS X 10.5 freezes
In-Reply-To: <4A82E421.4080107@arimaz.com>
References: <4A82E421.4080107@arimaz.com>
Message-ID: <d9047f780908120902q527ad1a5g90bb72bbd235c223@mail.gmail.com>

On Wed, Aug 12, 2009 at 11:47 AM, Gabriel Rossetti <
gabriel.rossetti at arimaz.com> wrote:

> I have written an application using Twisted, WX and I wanted to test it
> under Mac. I have successfully used it on linux and windows before. When
> I run it, I often get the pinwheel of death and then the whole OS locks
> up, even SSH no longer accepts connections, I have to hard reboot it.
> Has anyone ever witnessed this? Does anyone know/have an idea of what
> could cause this? I was wondering if it is not the twisted + wx
> integration that could cause this.
>

Without more detail it's impossible to say, but my guess would be "no".

MacOS X is a preemptively multitasking, multi-user OS.  The worst that
Twisted and WX should be able to do, even maliciously, is to freeze the
display for a single user.  The worst that a bug should reasonably cause is
to lock up the UI for a single process.

You might have discovered a bug in MacOS X, and you should take it up with
Apple.  Alternately, your Mac hardware might be broken, and Twisted is
interacting with its problems.  If you'd like any further help here, though,
a complete example program would be useful to anyone trying to help you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090812/1463fa38/attachment.html>

From exarkun at twistedmatrix.com  Wed Aug 12 10:51:15 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 12 Aug 2009 16:51:15 -0000
Subject: [Twisted-Python] unicode for pyPgSQL
In-Reply-To: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
References: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
Message-ID: <20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>

On 03:28 pm, petshmidt at googlemail.com wrote:
>Hello,
>
>does pyPgSQL doesn't support unicode?
>
>execute(query, params) #all items in params list are of  <type 
>'unicode'>
>
>I'm getting
>'ascii' codec can't encode character u'\xfc' in position 1: ordinal
>not in range(128)
>
>Do I need encode my params before sending a query and then decode all
>results back to unicode?

I don't know about pyPgSQL's unicode support.

I did recently learn that pyPgSQL doesn't support bind parameters, 
apparently resulting in almost any use of it insecure and vulnerable to 
SQL injection attacks.  You may want to investigate this further before 
deciding if it's worth figuring out how unicode works.

Jean-Paul



From glyph at twistedmatrix.com  Wed Aug 12 11:13:57 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Aug 2009 13:13:57 -0400
Subject: [Twisted-Python] unicode for pyPgSQL
In-Reply-To: <20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>
References: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com>
	<20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>
Message-ID: <d9047f780908121013j2e0868eel5c0e88c11891754@mail.gmail.com>

On Wed, Aug 12, 2009 at 12:51 PM, <exarkun at twistedmatrix.com> wrote:

> I did recently learn that pyPgSQL doesn't support bind parameters,
> apparently resulting in almost any use of it insecure and vulnerable to
> SQL injection attacks.  You may want to investigate this further before
> deciding if it's worth figuring out how unicode works.
>

I believe exarkun is referring to this article:

<
http://www.cerias.purdue.edu/site/blog/post/beware_sql_injections_due_to_missing_prepared_statement_support/
>

I had a private discussion with the author to clarify.  In order to avoid
spreading FUD, I'd like to draw your attention to this note he added to the
bottom of the post as a result of that discussion:

P.P.S.: To clarify, I haven't demonstrated an SQL injection vulnerability in
pyPGSQL. It's not about the performance penalty either. It's about escaping
done by the client library (the basic implementation of bind parameters
without using the database's support) being a second-rate security solution
to explicitly telling the database "here is the code. Now here's the data"
(prepared statements). It's about decreasing code complexity and reducing
chances for "misunderstandings" (and configuration, e.g., encoding,
discrepancies). It's about assurance and choosing safer technologies and
architectures.

So, to be clear, I don't believe there are any *demonstrated* injection
vulnerabilities (although if someone has a reference to a current one, that
would be helpful); it's just that pyPgSQL goes with an unnecessarily risky
and poorly-performing implementation strategy for quoting parameters.  This
dates back to Postgres itself having poor client-library support for bind
parameters in versions previous to 7; unfortunately this means that most of
the other database bindings for postgres use a similarly bad strategy (and
as Mr. Meunier mentions in his post, the ones which do support bind
parameters have other issues).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090812/54b67f82/attachment.html>

From smhollingsworth at gmail.com  Wed Aug 12 11:33:06 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Wed, 12 Aug 2009 17:33:06 +0000
Subject: [Twisted-Python] Tunneling using conch (with
	application.service)
In-Reply-To: <20090808164925.7171.98799130.divmod.xquotient.104@localhost.localdomain>
References: <66dccc4d0908060847y21a42afdt2c1d831419d710a0@mail.gmail.com>
	<20090808164925.7171.98799130.divmod.xquotient.104@localhost.localdomain>
Message-ID: <66dccc4d0908121033p36ee49ceh469e4dadad138ad@mail.gmail.com>

Your advice helped considerably. Thank  you.

Sean M Hollingsworth

On Sat, Aug 8, 2009 at 4:49 PM, <exarkun at twistedmatrix.com> wrote:

> On 6 Aug, 03:47 pm, smhollingsworth at gmail.com wrote:
> >I 19ve got an app written that runs as a service using
> >twisted.application.service that I need to tunnel through SSH. Right
> >now, I
> >use a script that makes use of Paramiko (and runs separate from my app)
> >to
> >set up a tunnel. That more or less works, but I 19ve had some problems
> >with
> >the tunnel just going away and would like to integrate the tunneling
> >into
> >the app, using conch. I 19ve found an example of tunneling via conch, at
> >http://twistedmatrix.com/pipermail/twisted-
> >python/2009-February/019196.html,
> >that I think I can use as a base to add the code to my app.
> >
> >Right now my app is basically:
> >
> >class DataPuller(service.Service):
> >    ...Code for my app...
> >    ... The app pulls data from a database and I can only connect to the
> >server via SSH...
> >
> >application = service.Application( 18Data_puller 19)
> >dpService = DataPuller()
> >dpService.setServiceParent(application)
> >
> >My main problems are that I 19m not sure whether or not the example
> >linked to
> >above is a good one for tunneling with conch and, if it is, how do I
> >merge
> >the example tunneling code with my app code. From the example, where
> >the
> >code is:
>
> The example you linked to sets up the traditional port forwarding
> behavior.
> A local port is opened and connections to it are tunneled over the SSH
> connection, where data is then delivered to some address accessible from
> the server on the other end of the SSH connection.
>
> This is fine and should work, and probably very closely mirrors what
> you're
> doing with Paramiko, so if you're happy with that, you should go for it.
>
> However, it's also possible for you to do this tunneling without opening
> the extra local port.  Since your application and the SSH client code
> are
> all in the same process, you don't need the TCP connection to a local
> port
> to do this IPC to interact wiht the tunnel.  You can set up the tunnel
> part
> of things, but instead of binding a local port to accept connections on,
> you can just open a connection over the tunnel and write bytes into it
> with
> API calls.
>
> I *don't* have an example of doing things this way, and I don't even
> know
> exactly what it involves. ;)  However, the example you linked to gives a
> clue about where to start on this approach: when it binds the local
> port,
> it uses the forwarding.SSHListenForwardingFactory factory, so I'd start
> by looking at that class and see what it does.  The rest is just
> mimicking
> its behavior without actually using reactor.listenTCP.
> >class Connection(connection.SSHConnection):
> >        .
> >        .
> >        .
> >        def serviceStarted(self):
> >
> >Do I instantiate my DataPuller class there, in serviceStarted (and not
> >subclass from service.Service)? If so, how do I wrap the tunneling code
> >so
> >that I can make it a service? If not, do I need put the tunneling code
> >inside my DataPuller class? What would that look like?
>
> If you want things to happen when your program starts or when it is
> about
> to stop, then using service.Service is still a good idea.  That's the
> easy
> way to hook into startup and shutdown events.  However, you may not want
> to do anything other than set up (or tear down) the SSH connection in
> your
> service.Service subclass.  Creating your new non-Service DataPuller in
> the
> Connection's serviceStarted (or maybe even a little later - after you
> actually set up the connection over the tunnel over the connection) then
> makes sense.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090812/46d624dd/attachment.html>

From fatblowfish at gmail.com  Wed Aug 12 23:18:06 2009
From: fatblowfish at gmail.com (Rebs Guarina)
Date: Thu, 13 Aug 2009 17:18:06 +1200
Subject: [Twisted-Python] newb help needed on syslog
Message-ID: <5240bd540908122218h21d289ebrfc789e053b3a5b91@mail.gmail.com>

Hello,

I'm currently looking at writing a remote syslog client (logs go to a
central log server running syslog-ng) using twisted. Do you guys have any
tips on this? If this somewhat appears to be a repost, please kindly
redirect me to the appropriate link.

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090813/6a5d9c82/attachment.html>

From terry at fluidinfo.com  Thu Aug 13 00:40:17 2009
From: terry at fluidinfo.com (Terry Jones)
Date: Thu, 13 Aug 2009 08:40:17 +0200
Subject: [Twisted-Python] newb help needed on syslog
In-Reply-To: Your message at 17:18:06 on Thursday, 13 August 2009
References: <5240bd540908122218h21d289ebrfc789e053b3a5b91@mail.gmail.com>
Message-ID: <19075.46417.424647.384261@jon.es>

>>>>> "Rebs" == Rebs Guarina <fatblowfish at gmail.com> writes:
Rebs> I'm currently looking at writing a remote syslog client (logs go to a
Rebs> central log server running syslog-ng) using twisted. Do you guys have
Rebs> any tips on this? If this somewhat appears to be a repost, please
Rebs> kindly redirect me to the appropriate link.

Hi Rebs

This on only a suggestion of a direction, one which we (Fluidinfo) are
very likely to take too.

The ingredients are Twisted (of course) and Scribe
(http://developers.facebook.com/scribe/). You can tie these together using
the Twisted support we added to Thrift (Scribe uses Thrift). You can
optionally be routing log messages through AMQP using txAMQP
(https://launchpad.net/txamqp).

That's actually a pretty simple solution, given the existence of Twisted
support for both Thrift and AMQP (if you want it). But OTOH it's not
something you'll get set up without some effort and perhaps head scratching
(especially if you add AMQP to the mix - it's considerably simpler if you
just use Thrift with its built-in Twisted support). So if your load isn't
going to be fairly heavy you'd probably be better doing something simpler.

Terry



From petshmidt at googlemail.com  Thu Aug 13 01:02:35 2009
From: petshmidt at googlemail.com (Pet)
Date: Thu, 13 Aug 2009 09:02:35 +0200
Subject: [Twisted-Python] unicode for pyPgSQL
In-Reply-To: <20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>
References: <b460e9630908120828j40870ff8yd2dc105e4c70952e@mail.gmail.com> 
	<20090812165115.10431.824940550.divmod.xquotient.62@localhost.localdomain>
Message-ID: <b460e9630908130002j464e4899m780a866fdb986f63@mail.gmail.com>

On Wed, Aug 12, 2009 at 6:51 PM, <exarkun at twistedmatrix.com> wrote:
> On 03:28 pm, petshmidt at googlemail.com wrote:
>>Hello,
>>
>>does pyPgSQL doesn't support unicode?
>>
>>execute(query, params) #all items in params list are of  <type
>>'unicode'>
>>
>>I'm getting
>>'ascii' codec can't encode character u'\xfc' in position 1: ordinal
>>not in range(128)
>>
>>Do I need encode my params before sending a query and then decode all
>>results back to unicode?
>
> I don't know about pyPgSQL's unicode support.
>
> I did recently learn that pyPgSQL doesn't support bind parameters,
> apparently resulting in almost any use of it insecure and vulnerable to
> SQL injection attacks.  You may want to investigate this further before
> deciding if it's worth figuring out how unicode works.


That's interesting. May be I should try psycorg2.
By the way, pyPgSQL has no problem with unicode, the problem was elsewhere

>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From twisted at ralphm.ik.nu  Thu Aug 13 03:22:51 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Thu, 13 Aug 2009 11:22:51 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX but
 not	on linux
In-Reply-To: <4A819C99.8030100@arimaz.com>
References: <4A819346.8090800@arimaz.com>  <4A819C99.8030100@arimaz.com>
Message-ID: <1250155371.16747.13.camel@dwaal>

On Tue, 2009-08-11 at 18:30 +0200, Gabriel Rossetti wrote:
> [..]

Apparently you modified the original example here:

> [..]
>         connector = XMPPClientConnector(reactor, "10.204.232.117", f)
>         connector.connect()

This would never work properly. XMPPClientConnector is designed to do an
SRV record look up on the /domain/ provided as its second argument. You
pass an IP address here and that will just fail.

The original example passes client_jid.host. This extracts the domain
from the JID you want to connect with and then follows the procedure of
first trying to find xmpp-server SRV records for that domain, and if
that fails, try to connect to the host that the domain name resolves to,
using the default port (5222), as outlined in RFC 3920. Note that
XMPPClientConnector avoids the problems sketched in ticket #3456 that
was mentioned by Jean-Paul.

If you really want to connect to a specific host instead of following
the above procedure, you can do this instead of the code quoted above:

    reactor.connectTCP("10.204.232.117", 5222, f)

-- 
Groetjes,

ralphm
-- 
Groetjes,

ralphm




From p.mayers at imperial.ac.uk  Thu Aug 13 04:00:30 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 13 Aug 2009 11:00:30 +0100
Subject: [Twisted-Python] Python/twisted BGP code
Message-ID: <4A83E43E.1090707@imperial.ac.uk>

All,

People might be interested in:

https://launchpad.net/pybgp

It is a VERY SIMPLE implementation of BGP4 in python. It's sufficient to 
advertise IPv4 prefixes, which is of use e.g. for doing DNS anycast, and 
withdrawing the routes if the local nameservers stops answering queries.

There is a small amount of test coverage; I intend to write more.

There is *NO* code for building a RIB or modifying the kernel; that is, 
this is *not* a replacement for Zebra/Quagga.



From lvh at laurensvh.be  Thu Aug 13 04:26:28 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 13 Aug 2009 12:26:28 +0200
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
Message-ID: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi!


Short question up front: what exactly should be in the proposed
factory class? What does it take? What does it return?

Second question: what should NMEASentence attributes look like?
Properties? There are some proposed things in t.p.nmea in trunk.


Also, progress report:
    - NMEAAdapters now correctly fire callbacks on receivers. There
are tests that show this working for multiple sentences.
    - NMEA date support. You now get callbacks with date and time.

New things can be found in trunk at the usual places (launchpad).

Work in progress:
    - satellite information support (this is hairy because unlike
other sentences, the *same* fields are across multiple sentences :/)
    - error support (this is hairy because the subset of NMEA that
everyone supports essentially has no useful information about this)

Basically error support is a lot of work but boring, satellite support
is not so much work but hairy and disgusting NMEA internals handling.

I'm working on error support first because it's still early in the morning.


thanks for listening
Laurens

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkqD6hgACgkQT5v5zGkvKT4EWgCeM9GVVKSqMOw/FqXVsqn0D+pT
iDMAoMvCY5imsfDrH+6gKnj+ssGrAYlb
=GnpZ
-----END PGP SIGNATURE-----



From matt at bennett.name  Thu Aug 13 08:32:18 2009
From: matt at bennett.name (Matt Bennett)
Date: Thu, 13 Aug 2009 15:32:18 +0100
Subject: [Twisted-Python] Clarification on returning exceptions via
	Perspective Broker
Message-ID: <e554908b0908130732j2b6dd897sc959f8d4b01915e4@mail.gmail.com>

Hi all,

I'm using the Perspective Broker to run functions on various remote
servers, and trying to pass exceptions raised in the remote functions
back to the client.

My exceptions subclass pb.Error, which means tracebacks are suppressed
on the server and errbacks triggered on the client, exactly as I'd
hoped. What I'm confused about though, is why the
serialization/deserialization process reduces my nice structured
exception into a mere string. Isn't PB's raison d'être to allow you to
send fully formed Python classes over the wire?

I'm not 100% convinced that I've not misinterpreted something, but
assuming that pb.Error subclasses are indeed reduced string
representations, I'd appreciate some insight into why PB behaves this
way. I have experimented with returning a standard Exception subclass
to the client, but what it receives is "Unpersistable ... instance
deemed insecure", which I guess has something to do with the design
rationale, but I don't know enough to understand why.

Finally, is there a standard workaround to this that allows structured
data to be returned as or along with the exception, rather than having
to generate structured text as the string representation and then
rebuild the object at the other end?

Many thanks,
Matt.



From gabriel.rossetti at arimaz.com  Thu Aug 13 09:26:40 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 13 Aug 2009 17:26:40 +0200
Subject: [Twisted-Python] Twisted, PushProducer, Words & big msgs, any limit?
Message-ID: <4A8430B0.9080600@arimaz.com>

Hello everyone,

I have a sort of XMPP router I wrote using Twisted and there seems to be 
a size limit of some sort. I have been using it for over a year now 
without any problems, but today I had a larger than usual msg (175213 
bytes) try to go through and it never did. I haven't pinpointed the 
problem yet, but I wanted to make sure there isn't some known problem. 
Also, I get no exception or error msg during this. I use Twisted 8.1.0 
on Linux. I ran my code in debug mode and I did notice that in tcp.py in 
doRead(), when it runs over this line "self.socket.accept()" it gets the 
following exception : error: (11, 'Resource temporarily unavailable') 
and I wonder if this is the problem. If so, why would it do this and why 
would Twisted just silently ignore this? Thank you,
Gabriel

Thank you,
Gabriel



From terry at fluidinfo.com  Thu Aug 13 09:49:39 2009
From: terry at fluidinfo.com (Terry Jones)
Date: Thu, 13 Aug 2009 17:49:39 +0200
Subject: [Twisted-Python] Twisted, PushProducer, Words & big msgs,
	any limit?
In-Reply-To: Your message at 17:26:40 on Thursday, 13 August 2009
References: <4A8430B0.9080600@arimaz.com>
Message-ID: <19076.13843.779113.760363@jon.es>

>>>>> "Gabriel" == Gabriel Rossetti <gabriel.rossetti at arimaz.com> writes:
Gabriel> I have a sort of XMPP router I wrote using Twisted and there seems
Gabriel> to be a size limit of some sort. I have been using it for over a
Gabriel> year now without any problems, but today I had a larger than usual
Gabriel> msg (175213 bytes) try to go through and it never did.

What protocol are you using?  You may be running into one of the MAX_LENGTH
limits in twisted.protocol.basic

Terry



From gabriel.rossetti at arimaz.com  Thu Aug 13 11:24:09 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 13 Aug 2009 19:24:09 +0200
Subject: [Twisted-Python] Twisted, PushProducer, Words & big msgs,
 any limit?
In-Reply-To: <19076.13843.779113.760363@jon.es>
References: <4A8430B0.9080600@arimaz.com> <19076.13843.779113.760363@jon.es>
Message-ID: <4A844C39.2010005@arimaz.com>

Terry Jones wrote:
>>>>>> "Gabriel" == Gabriel Rossetti <gabriel.rossetti at arimaz.com> writes:
>>>>>>             
> Gabriel> I have a sort of XMPP router I wrote using Twisted and there seems
> Gabriel> to be a size limit of some sort. I have been using it for over a
> Gabriel> year now without any problems, but today I had a larger than usual
> Gabriel> msg (175213 bytes) try to go through and it never did.
>
> What protocol are you using?  You may be running into one of the MAX_LENGTH
> limits in twisted.protocol.basic
>
> Terry
>   
XMPP (twisted.words.xish.xmlstream)

Gabriel



From glyph at twistedmatrix.com  Thu Aug 13 13:35:52 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Aug 2009 15:35:52 -0400
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
Message-ID: <d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>

On Thu, Aug 13, 2009 at 6:26 AM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> Short question up front: what exactly should be in the proposed
> factory class? What does it take? What does it return?
>

Factory class proposed by whom and for what?

If it's a thing that creates IPositionReceivers, it should return an
IPositionReceiver and take some description of where the position data is
coming from.  The existing analogue is IProtocolFactory.buildProtocol, which
is takes an IP address.  I assume that the "address" object in GPS's case is
something that identifies the capabilities of the
position-information-providing widget and its type (GPS, skyhook, tower
triangulation, etc).

Second question: what should NMEASentence attributes look like?
> Properties? There are some proposed things in t.p.nmea in trunk.


By "trunk" I hope you mean "not trunk, the branch".  Maybe you meant HEAD?

Also, progress report:
>    - NMEAAdapters now correctly fire callbacks on receivers. There
> are tests that show this working for multiple sentences.
>    - NMEA date support. You now get callbacks with date and time.
>

Great!


> New things can be found in trunk at the usual places (launchpad).


... "in the branch" at the usual place ;-).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090813/99acaedb/attachment.html>

From glyph at twistedmatrix.com  Thu Aug 13 13:50:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Aug 2009 15:50:42 -0400
Subject: [Twisted-Python] Clarification on returning exceptions via
	Perspective Broker
In-Reply-To: <e554908b0908130732j2b6dd897sc959f8d4b01915e4@mail.gmail.com>
References: <e554908b0908130732j2b6dd897sc959f8d4b01915e4@mail.gmail.com>
Message-ID: <d9047f780908131250r72aa37eemcbf96771ce679ef@mail.gmail.com>

On Thu, Aug 13, 2009 at 10:32 AM, Matt Bennett <matt at bennett.name> wrote:

> My exceptions subclass pb.Error, which means tracebacks are suppressed
> on the server and errbacks triggered on the client, exactly as I'd
> hoped. What I'm confused about though, is why the
> serialization/deserialization process reduces my nice structured
> exception into a mere string. Isn't PB's raison d'être to allow you to
> send fully formed Python classes over the wire?
>

It's been a while since I worked with this, but I believe the rationale goes
something like this:

the most common type of error in PB is a serialization or deserialization
error.  You sent too much, you didn't send enough, your jellier doesn't
quite match your unjellier, there's a version skew problem.

If exceptions contained structured data, there's a risk that that data will
*also* have a serialization error; or, worse yet, attempt to include the
problematic data which caused the error in the first place.  So it's
generally not a good idea to work around this, because you can easily cause
a mutually recursive loop where reporting the error causes another error
that needs to be reported.

That said, based on memory and a brief read-through of the code, PB does
support returning structured exceptions; you can't just return a normal
Exception subclass, you need to register it as serializable the same way you
would any other object, and it needs to subclass Jellyable (for example by
subclassing Copyable).

(I could be wrong, but I believe that is the intent.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090813/1597e6e5/attachment.html>

From lvh at laurensvh.be  Thu Aug 13 17:01:12 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 14 Aug 2009 01:01:12 +0200
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
	<d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
Message-ID: <cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Heh, sorry, I'm so used to saying stuff's in trunk it's become second nature :-)

On Thu, Aug 13, 2009 at 9:35 PM, Glyph Lefkowitz wrote:
>> Short question up front: what exactly should be in the proposed
>> factory class? What does it take? What does it return?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkqEmvwACgkQT5v5zGkvKT7QUACeNtOQcZigbzZNK8B+8pz9kjt0
Vf4AoMDt1+xS3aQjuFUeX09K5Fd3U1jL
=5wtd
-----END PGP SIGNATURE-----

>
> Factory class proposed by whom and for what?

I think that was you, and I think it was for gluing the classes in
NMEA together.  From your mail on July 30:

> There should also be a factory which nicely hooks everything together and takes only a factory for your IPositioningProvider, so that users can quickly get started with a positioning provider.

I'm not sure what a factory that takes a factory is. I'd think it's
something that implements IPositioningProvider (eg a class) and then
returns the instance?

> If it's a thing that creates IPositionReceivers, it should return an
> IPositionReceiver and take some description of where the position data is
> coming from.  The existing analogue is IProtocolFactory.buildProtocol, which
> is takes an IP address.  I assume that the "address" object in GPS's case is
> something that identifies the capabilities of the
> position-information-providing widget and its type (GPS, skyhook, tower
> triangulation, etc).

Would this be the correct place to implement behavior like "listen on
a bunch of serial ports, until you find something that spews things
that look like NMEA at you", or should that be another level of
abstraction up?

Would there be multiple such factories for different kinds of
positioning? I don't know what cell ID will need to know to set up an
IPositioningProvider, but the NMEA factory and gpsd factory need
completely different kinds of information, for example.

Thanks for your reply
Laurens



From fatblowfish at gmail.com  Thu Aug 13 20:47:05 2009
From: fatblowfish at gmail.com (fatblowfish)
Date: Fri, 14 Aug 2009 14:47:05 +1200
Subject: [Twisted-Python] newb help needed on syslog
In-Reply-To: <19075.46417.424647.384261@jon.es>
References: <5240bd540908122218h21d289ebrfc789e053b3a5b91@mail.gmail.com>
	<19075.46417.424647.384261@jon.es>
Message-ID: <5240bd540908131947n51fcd941yf76c3d4787a01106@mail.gmail.com>

Thanks Terry! That's a good jumpstart you gave me...(",)

On Thu, Aug 13, 2009 at 6:40 PM, Terry Jones <terry at fluidinfo.com> wrote:

> >>>>> "Rebs" == Rebs Guarina <fatblowfish at gmail.com> writes:
> Rebs> I'm currently looking at writing a remote syslog client (logs go to a
> Rebs> central log server running syslog-ng) using twisted. Do you guys have
> Rebs> any tips on this? If this somewhat appears to be a repost, please
> Rebs> kindly redirect me to the appropriate link.
>
> Hi Rebs
>
> This on only a suggestion of a direction, one which we (Fluidinfo) are
> very likely to take too.
>
> The ingredients are Twisted (of course) and Scribe
> (http://developers.facebook.com/scribe/). You can tie these together using
> the Twisted support we added to Thrift (Scribe uses Thrift). You can
> optionally be routing log messages through AMQP using txAMQP
> (https://launchpad.net/txamqp).
>
> That's actually a pretty simple solution, given the existence of Twisted
> support for both Thrift and AMQP (if you want it). But OTOH it's not
> something you'll get set up without some effort and perhaps head scratching
> (especially if you add AMQP to the mix - it's considerably simpler if you
> just use Thrift with its built-in Twisted support). So if your load isn't
> going to be fairly heavy you'd probably be better doing something simpler.
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090814/fcbc7e22/attachment.html>

From glyph at twistedmatrix.com  Fri Aug 14 10:09:51 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 14 Aug 2009 12:09:51 -0400
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
	<d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
	<cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>
Message-ID: <d9047f780908140909u588e602bp4d42c9bf498b309f@mail.gmail.com>

On Thu, Aug 13, 2009 at 7:01 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

>  On Thu, Aug 13, 2009 at 9:35 PM, Glyph Lefkowitz wrote:
> >> Short question up front: what exactly should be in the proposed
> >> factory class? What does it take? What does it return?
>
> >
> > Factory class proposed by whom and for what?
>
> I think that was you, and I think it was for gluing the classes in
> NMEA together.  From your mail on July 30:
>
> > There should also be a factory which nicely hooks everything together and
> takes only a factory for your IPositioningProvider, so that users can
> quickly get started with a positioning provider.
>
> I'm not sure what a factory that takes a factory is.


That was a typo.  There should be a *method* which nicely hooks everything
together and takes only a factory (etc).


> I'd think it's something that implements IPositioningProvider (eg a class)
> and then returns the instance?


That's basically right, but I think you might want a separate object.  There
are other notifications you might want to send to a factory that you
wouldn't want to send to an instance; for example, "no positioning
information is available, I will never send you any position data".

On the other hand, you could just have the class classProvides() the factory
interface and implements() the main interface for convenience, since a class
*is* really a factory in Python.

There should actually be several methods which hook things together.  One
would simply be to construct an NMEAReceiver and give it an
IPositionReceiver directly.  Another would be to call a function that scans
your serial ports, inspects your Windows registry (or whatever) and
discovers all GPS devices, normalizes them into a single stream of
positioning events, and calls
IPositionReceiverFactory.createPositionReceiver()

Would this be the correct place to implement behavior like "listen on
> a bunch of serial ports, until you find something that spews things
> that look like NMEA at you", or should that be another level of
> abstraction up?
>

There should be both levels of abstraction.  At one level you've got
SerialPort(NMEAReceiver(MyPositionReceiverFactory().createPositionReceiver(PositionSource(positioning.NMEA,
positioning.SerialPort("/dev/ttyS1")), "/dev/ttyS1") and at another you've
got startGettingPositioningDataSomehow(MyPositionReceiverFactory()).  The
latter should be implemented in terms of the former.

Would there be multiple such factories for different kinds of
> positioning? I don't know what cell ID will need to know to set up an
> IPositioningProvider, but the NMEA factory and gpsd factory need
> completely different kinds of information, for example.
>

Absolutely.  The key idea here is that you want there to be a complete
separation between application logic (which is your IPositioningReceiver or
IPositioningReceiverFactory) and your byte-level parsing code (which is your
NMEA or gpsd or Rockwell or cell triangulation or whatever).  Then, at the
top level

This is exactly analogous to the way that you can have an IProtocolFactory,
completely independent of any stream-communication API.  Later, you can do
listenSSL or listenTCP, or, with a very slight modification, connectSSL or
connectTCP.  listenSSL has a different signature from listenTCP, after all.
You need to be able to give it a certificate.  You could also have
connecting via SSH connections, via subprocesses, etc; all of these have
radically different requirements for construction and set-up, but once
you're going they should all be able to talk to an IProtocol.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090814/dedd1d54/attachment-0001.html>

From glyph at twistedmatrix.com  Fri Aug 14 14:07:51 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 14 Aug 2009 16:07:51 -0400
Subject: [Twisted-Python] Documentation
In-Reply-To: <faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>
References: <faf2d7810908092356u40d308e3lbc680f0640849088@mail.gmail.com>
	<d9047f780908111403l1ba57b0bi7e74f6c72ed7ef5c@mail.gmail.com>
	<faf2d7810908120341w547e1f78oeaefd340d575c8af@mail.gmail.com>
Message-ID: <d9047f780908141307o28665ba7k7b01969822cb1b73@mail.gmail.com>

On Wed, Aug 12, 2009 at 6:41 AM, John Aherne <johnaherne at rocs.co.uk> wrote:


> I appreciate it it was a bit confused, but I wanted to get it out sooner
> rather than later and just get the basic facts confirmed.
>

Yes, it's always good to share these early drafts.


> So I will start putting my thoughts into better shape and more coherently.
> This always takes a couple of rewrites, so I hope you can add some more
> thoughts before I get too far.
>

Actually I think I don't have too much more to say about your original
draft.  If you have a new one, would you like to share it?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090814/86f5eb39/attachment.html>

From thomas at apestaart.org  Sat Aug 15 06:36:13 2009
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Sat, 15 Aug 2009 14:36:13 +0200
Subject: [Twisted-Python] twisted.spread PB over a ProcessProtocol
Message-ID: <1250339773.17341.42.camel@ana.amantes>

Hi everyone,

for a project I'm working on I wanted to create a helper program which
can spawn an instance of itself as a separate process, slaving itself to
the spawner, and speaking PB to it.

The idea is that the master can spawn processes which will run code that
might segfault or otherwise behave badly (like consume too much memory).

I'm planning to use this as a job server for a django site, where the
spawned jobs then do all kind of media analysis (acoustical
fingerprinting, tag reading, ...)

The jobs themselves however I simply want to write in python, defining
them as methods on a slave-side pb object that the master process can
call on.

I prefer to go with spawnProcess and ProcessProtocol because that makes
cleanup easier - no sockets or anything to deal with.


I made a first implementation here:

https://thomas.apestaart.org/thomas/trac/browser/tests/twisted/daemon/daemon.py

Basically, I tried to respect Twisted's setup for protocols and
factories and such, providing a listenProcess and connectProcess method
much like the usual ones.

That would mean, I think, that this master/slave abstraction and the
ProcessProtocol could be used by any kind of server/client factory, not
just PB.
Currently, I have the processprotocol creates process pipes instead of
using stdin/stdout.  I'm guessing that would make it
windows-incompatible, correct ? I might have to fall back to using
stdin/stdout, which would make the debugging harder.

Questions:

a) anyone want to take a look at the code and comment ? Does it make
sense to do it like this ? Any obvious problems ?

b) as the comment at the bottom states, uncommenting that line gives me
a ProtocolError that I cannot figure out.  It is repeatable; however,
shuffling code around can make it go away (in fact, I had it in some
other location as well at some point).  I'm not sure what would be
triggering that, any ideas ? I am probably doing something dirty in some
part of the code.

c) on hitting ctrl-c, tracebacks are generated, due to this block of
code:
        # At least on OS X 10.4, exiting while stdout is non-blocking
can
        # result in data loss.  For some reason putting the file
descriptor
        # back into blocking mode seems to resolve this issue.
        fdesc.setBlocking(self.fd)

The exception is EBADF.

That code looks suspicious to me - shouldn't it be at least checking for
exceptions there ? the fd could already be closed IMO.

Comments welcome!

Thomas



-- 
I love the way you love
but I hate the way
I'm supposed to love you back
--
URGent, best radio on the net - 24/7 !
http://urgent.fm/





From lvh at laurensvh.be  Sat Aug 15 09:16:51 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sat, 15 Aug 2009 17:16:51 +0200
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <d9047f780908140909u588e602bp4d42c9bf498b309f@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
	<d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
	<cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>
	<d9047f780908140909u588e602bp4d42c9bf498b309f@mail.gmail.com>
Message-ID: <cedc0c090908150816s20985ce3g5486a6a15c21ee5d@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Not really a direct reply, but the following is big enough progress
that it warrants a minireport of its own. An excerpt from my test
suite running:

test_GSVSentences ...
, , , }>
, , , }>
, , }>


... meaning GSV sentences are now correctly parsed! :-) According to
esr (who knows what he's doing when it comes to NMEA parsers) this is
by far the hardest part: parsing GSV properly should take about as
long as everything else put together. It was a bit of a pain to glue
it together with everything else, but according to a few smart people
this probably means that the _rest_ of my parser is sane :-) (GPGSV
splits the same kind of field across multiple sentences, and whether
they override or not is dependent on other fields which may or may not
be in the same sentence. No other sentence does this.)

Also, there's support now for GPGLL (pure lat/lon) and GPHDT (true
heading made good) sentences, but those were so simple compared to the
disaster that is GPGSV it's not even funny.

Next up: GSA sentence support.

You can expect this behavior in the branch head on lp some time later
today, when I'm done committing test sentences from
known-pathologically-bad GPS devices, to see how badly the parser
chokes on them.

Bad news: I'm going to be extremely busy the next few days so very
little time to actively commit code.

Enjoy,
Laurens
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.8)

iEYEARECAAYFAkqG0SQACgkQT5v5zGkvKT5dOgCg1jWqrgvpOyIwHCrlcH48DE/C
eqQAoI9XdaSfIzNgICoJbXur/0LzwbRv
=4Uvy
-----END PGP SIGNATURE-----



From lvh at laurensvh.be  Sat Aug 15 09:18:45 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sat, 15 Aug 2009 17:18:45 +0200
Subject: [Twisted-Python] twisted.positioning: progress report + Factory
	question
In-Reply-To: <cedc0c090908150816s20985ce3g5486a6a15c21ee5d@mail.gmail.com>
References: <cedc0c090908130326p73a31f13sf3b7f138ad4825f3@mail.gmail.com>
	<d9047f780908131235g193183c1web5295c6a05e64c8@mail.gmail.com>
	<cedc0c090908131601t41c3220dpe0e2e1009652af87@mail.gmail.com>
	<d9047f780908140909u588e602bp4d42c9bf498b309f@mail.gmail.com>
	<cedc0c090908150816s20985ce3g5486a6a15c21ee5d@mail.gmail.com>
Message-ID: <cedc0c090908150818jba39b01x25cdcfc7febc2bc9@mail.gmail.com>

For some arcane reason, GMail (or maybe FireGPG) decided to mangle the
stuff in between commas. *sigh*

http://paste.pocoo.org/show/134450/

Laurens



From kgeorge at tcpsoft.com  Sat Aug 15 10:49:19 2009
From: kgeorge at tcpsoft.com (Kyle George)
Date: Sat, 15 Aug 2009 12:49:19 -0400 (EDT)
Subject: [Twisted-Python] TCP startTLS() negotiation
Message-ID: <Pine.LNX.4.64.0908150216250.15844@patton.tcpsoft.net>

I've noticed some behavior when negotiating TLS using startTLS().  I'm 
starting TLS on both sides of the connection at the same time to validate 
peer certificates using a custom callback.  If I call startTLS() without 
any subsequent writes to the socket the negotiation never completes. 
However, if I write data immediately post startTLS() the negotiation (and 
the callback to the OpenSSL verify callback) is successful.  But I don't 
want to do this because I want to wait until verification to proceed with 
communicating on the channel.  So I traced through tcp.py and noticed that 
in Connection.startTLS() reads and writes are stopped while the 
negotiation is taking place.  However, only reading is reenabled 
afterwards.  I suppose this is why doing a write unblocks the connection. 
When I do something like this in my code I don't have to make a write:

self.transport.startTLS(SSLContextFactory(...))
self.transport.startWriting()

The context factory makes its own SSL.Context very similar to _sslverify, 
but with a callback I can hook for verification.

So the question is, why is reading reenabled but not writing?  When I 
apply the patch below it works.

This is on Python 2.6.2, Twisted 8.2.0, pyOpenSSL-0.9-py2.6, win32.

Index: twisted/internet/tcp.py
===================================================================
--- twisted/internet/tcp.py     (revision 27226)
+++ twisted/internet/tcp.py     (working copy)
@@ -401,6 +401,7 @@
              self._startTLS()
              self.socket = SSL.Connection(ctx.getContext(), self.socket)
              self.fileno = self.socket.fileno
+            self.startWriting()
              self.startReading()
              return True

-- 
Kyle George



From exarkun at twistedmatrix.com  Sat Aug 15 22:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Aug 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1250395512.22.1479084481@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090816/06542f1f/attachment-0001.html>

From alessandro.d at gmail.com  Sun Aug 16 04:43:42 2009
From: alessandro.d at gmail.com (Alessandro Decina)
Date: Sun, 16 Aug 2009 12:43:42 +0200
Subject: [Twisted-Python] twisted.spread PB over a ProcessProtocol
In-Reply-To: <1250339773.17341.42.camel@ana.amantes>
References: <1250339773.17341.42.camel@ana.amantes>
Message-ID: <37eb22810908160343nb86dafck8e5509314effc10e@mail.gmail.com>

On Sat, Aug 15, 2009 at 2:36 PM, Thomas Vander
Stichele<thomas at apestaart.org> wrote:
> Hi everyone,
>
> for a project I'm working on I wanted to create a helper program which
> can spawn an instance of itself as a separate process, slaving itself to
> the spawner, and speaking PB to it.
>
> The idea is that the master can spawn processes which will run code that
> might segfault or otherwise behave badly (like consume too much memory).

Why not use ampoule https://launchpad.net/ampoule ?
Also, you may want to take a look at moovida, it has a master/slave
abstraction to run gst pipelines in separate processes (which should
probably be adapted to use ampoule now).

Ciao
Alessandro



From esteve at fluidinfo.com  Sun Aug 16 11:29:25 2009
From: esteve at fluidinfo.com (Esteve Fernandez)
Date: Sun, 16 Aug 2009 19:29:25 +0200
Subject: [Twisted-Python] txAMQP 0.3 released, better late than never
Message-ID: <200908161929.26024.esteve@fluidinfo.com>

Hi all,

with great joy and a little sweat, we're happy to announce txAMQP 0.3 
(https://launchpad.net/txamqp), a Python library for communicating with AMQP 
peers and brokers using Twisted.

This marks an important milestone, as it's the first release made with the 
help of two new committers not directly involved with Fluidinfo 
(http://fluidinfo.com): Dan Di Spaltro from Cloudkick 
(https://www.cloudkick.com) and Thomas Hervé from Canonical 
(http://www.canonical.com)

On the technical side, this release includes important features such as
heartbeat frames (contributed by Anthony Lenton), support for setuptools
(contributed by Zooko Wilcox-O'Hearn), support for basic_return, and improved
support for Thrift - among many other features and fixes.

As a side note, patching Thrift (http://incubator.apache.org/thrift/) is no
longer needed, as support for Twisted is now integrated in the official Thrift
distribution.

BTW, if you're curious to see what we wrote txAMQP to support, watch the 
Fluidinfo home page for the alpha launch of FluidDB on Monday :-)



From chris at stemcel.co.uk  Mon Aug 17 03:28:47 2009
From: chris at stemcel.co.uk (Chris Adams)
Date: Mon, 17 Aug 2009 10:28:47 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
Message-ID: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>

Hi there,

I'm new to twisted, so please excuse the noobish question, but:

I'm using twisted-web on an openwrt computer, using busybox, and after
looking through the docs, I'm a little unclear about how to implement
something like apache's htpasswd style authentication.

Using apache, I'd do something like:

htpasswd -c passwrods admin topSecretPassword

What's the simplest way to add a simple check for a username and
password like this using twisted web?

Where possible, I'd like to keep all of this inside twisted rather
than rely on installing other binaries, that might not work within the
confined of a small openwrt install.

C

-- 
---
I'm currently only checking my email at 9am, midday and at 4pm.
If you need a response from me urgently, please call or text my
mobile, or contact me via Skype (chris.d.adams).
---
Chris Adams
Stemcel Studios
The Hub
5 Torrens Street
London
EC1V 1NQ

email: chris at stemcel.co.uk
web:  www.stemcel.co.uk
twitter:chris_d_adams
skype: chris.d.adams
mob: 07974 368 229
tel: 0207 558 8971



From colin.alston at thusa.co.za  Mon Aug 17 03:37:10 2009
From: colin.alston at thusa.co.za (Colin Alston)
Date: Mon, 17 Aug 2009 11:37:10 +0200
Subject: [Twisted-Python] Ldaptor patch for Interfaces
Message-ID: <78bfcf050908170237g2a1a4bdcy3627c8b5b833c3ff@mail.gmail.com>

TV! Please fix Ldaptor.

Index: interfaces.py
===================================================================
--- interfaces.py       (revision 1506)
+++ interfaces.py       (working copy)
@@ -1,6 +1,6 @@
-from twisted.python import components
+from zope.interface import Interface

-class ILDAPEntry(components.Interface):
+class ILDAPEntry(Interface):
     """

     Pythonic API for LDAP object access and modification.
@@ -126,7 +126,7 @@
         incorrect.
         """

-class IEditableLDAPEntry(components.Interface):
+class IEditableLDAPEntry(Interface):
     """Interface definition for editable LDAP entries."""

     def __setitem__(self, key, value):
@@ -206,7 +206,7 @@

         """

-class IConnectedLDAPEntry(components.Interface):
+class IConnectedLDAPEntry(Interface):
     """Interface definition for LDAP entries that are part of a bigger
whole."""

     def namingContext(self):
@@ -334,7 +334,7 @@

         """

-class ILDAPConfig(components.Interface):
+class ILDAPConfig(Interface):
     """Generic LDAP configuration retrieval."""

     def getBaseDN(self):
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090817/8ee9dc8f/attachment.html>

From rlotun at gmail.com  Mon Aug 17 03:45:35 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 10:45:35 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
Message-ID: <95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>

Hi Chris,

> I'm using twisted-web on an openwrt computer, using busybox, and after
> looking through the docs, I'm a little unclear about how to implement
> something like apache's htpasswd style authentication.
>
> Using apache, I'd do something like:
>
> htpasswd -c passwrods admin topSecretPassword
>
> What's the simplest way to add a simple check for a username and
> password like this using twisted web?
>
> Where possible, I'd like to keep all of this inside twisted rather
> than rely on installing other binaries, that might not work within the
> confined of a small openwrt install.

The short answer is that you need to use twisted.cred. It's an
abstraction that allows you to implement authentication without
directly exposing the hashing method or password database details.
Take a look at this example:
http://twistedmatrix.com/projects/web/documentation/examples/webguard.py

It demonstrates an in memory database, which should generally be used
for testing/debugging only - but you might not care about that an be
happy to have an in memory database. If you want to use an .htaccess
apache style password db, you'll have to make a slight modification:

from twisted.web import guard, server
from twisted.cred.portal import Portal
from twisted.cred.checkers import FilePasswordDB

import crypt

def cmp_pass(uname, password, storedpass):
    return crypt.crypt(password, storedpass[:2])

checkers = [FilePasswordDB(path_to_htpasswd,
                                               hash=cmp_pass)]
 wrapper = guard.HTTPAuthSessionWrapper(
                    Portal(SimpleRealm(), checkers),
                    [guard.BasicCredentialFactory('yoursite.com')])
 return internet.TCPServer(8080, server.Site(resource=wrapper))

I'll probably contribute the Htaccess style checker to twisted at some
point, as I've found it useful in the past and others may too.

Cheers,
Reza



-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From colin.alston at thusa.co.za  Mon Aug 17 04:02:25 2009
From: colin.alston at thusa.co.za (Colin Alston)
Date: Mon, 17 Aug 2009 12:02:25 +0200
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
Message-ID: <78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>

On Mon, Aug 17, 2009 at 11:45 AM, Reza Lotun <rlotun at gmail.com> wrote:

> The short answer is that you need to use twisted.cred.


You don't need to do that at all, it just happens to be the best way.


>   wrapper = guard.HTTPAuthSessionWrapper(
>                    Portal(SimpleRealm(), checkers),
>                    [guard.BasicCredentialFactory('yoursite.com')])
>


Where is Portal and SimpleRealm in your example? Those are actually quite
large constructs which are crucial to guard doing anything useful at all.

Since there are numerous circumstances that people need Htauth, it is
implemented as follows

from twisted.web import http
# and other stuff...

class HTTPAuthPage(rend.Page):
    def renderHTTP(self, ctx):
        request = inevow.IRequest(ctx)
        username, password = request.getUser(), request.getPassword()

        if [My auth details check out]:
            return rend.Page.renderHTTP(self, ctx)

        else:
            request.setHeader('WWW-Authenticate', 'Basic realm="My realm
name"')
            request.setResponseCode(http.UNAUTHORIZED)
            return "Authentication required."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090817/6c8a77e7/attachment.html>

From rlotun at gmail.com  Mon Aug 17 04:13:32 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 11:13:32 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
Message-ID: <95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>

Hi Colin,

> Where is Portal and SimpleRealm in your example? Those are actually quite
> large constructs which are crucial to guard doing anything useful at all.

Sorry, this snippet of code I wrote tracked the webguard.py example
that I linked to.

from twisted.cred.portal import IRealm, Portal

class SimpleRealm(object):
    """
    A realm which gives out L{GuardedResource} instances for authenticated
    users.
    """
    implements(IRealm)

    def requestAvatar(self, avatarId, mind, *interfaces):
        if resource.IResource in interfaces:
            return resource.IResource, GuardedResource(), lambda: None
        raise NotImplementedError()

Does that make sense now?

> Since there are numerous circumstances that people need Htauth, it is
> implemented as follows

Ok, of course you can do that if you want. But you still need to be
able to *verify* credentials.

Anyway, to each their own.

Reza



-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From chris at stemcel.co.uk  Mon Aug 17 06:42:49 2009
From: chris at stemcel.co.uk (Chris Adams)
Date: Mon, 17 Aug 2009 13:42:49 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
	<95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
Message-ID: <4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>

Wow, thanks fo the quick replies guys.

I've tried to combine this with the example earlier, with some
annotations as to what I think is going on, but I'm on somewhat shaky
ground here.

Do these annotations sum up roughly what is going on here?

My annotated example is also up on github - http://gist.github.com/169102


The original on twisted matrix
http://twistedmatrix.com/projects/web/documentation/examples/webguard.py




2009/8/17 Reza Lotun <rlotun at gmail.com>:
> Hi Colin,
>
>> Where is Portal and SimpleRealm in your example? Those are actually quite
>> large constructs which are crucial to guard doing anything useful at all.
>
> Sorry, this snippet of code I wrote tracked the webguard.py example
> that I linked to.
>
> from twisted.cred.portal import IRealm, Portal
>
> class SimpleRealm(object):
>    """
>    A realm which gives out L{GuardedResource} instances for authenticated
>    users.
>    """
>    implements(IRealm)
>
>    def requestAvatar(self, avatarId, mind, *interfaces):
>        if resource.IResource in interfaces:
>            return resource.IResource, GuardedResource(), lambda: None
>        raise NotImplementedError()
>
> Does that make sense now?
>
>> Since there are numerous circumstances that people need Htauth, it is
>> implemented as follows
>
> Ok, of course you can do that if you want. But you still need to be
> able to *verify* credentials.
>
> Anyway, to each their own.
>
> Reza
>
>
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
---
I'm currently only checking my email at 9am, midday and at 4pm.
If you need a response from me urgently, please call or text my
mobile, or contact me via Skype (chris.d.adams).
---
Chris Adams
Stemcel Studios
The Hub
5 Torrens Street
London
EC1V 1NQ

email: chris at stemcel.co.uk
web:  www.stemcel.co.uk
twitter:chris_d_adams
skype: chris.d.adams
mob: 07974 368 229
tel: 0207 558 8971



From rlotun at gmail.com  Mon Aug 17 07:05:48 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 14:05:48 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
	<95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
	<4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>
Message-ID: <95bb10690908170605h370c3deen60cad99a08c9a65d@mail.gmail.com>

Hi Chris,

> My annotated example is also up on github - http://gist.github.com/169102
>
>
> The original on twisted matrix
> http://twistedmatrix.com/projects/web/documentation/examples/webguard.py

Generally it looks fine - but I should mention these random snippets
of code were given with the assumption that a .tac file is being used.
A .tac file is basically a "runner" script or driver for your twisted
program - it works in conjunction with the twistd command-line utility
and does fun stuff like automatic daemonization and reactor selection.

Anyway, the snippets I gave would integrate into the webguard.py
example like so (imports omitted for clarity):

class GuardedResource(resource.Resource):
    """
    A resource which is protected by guard and requires authentication in order
    to access.
    """
    def getChild(self, path, request):
        return self

    def render(self, request):
        return "Authorized!"


class SimpleRealm(object):
    """
    A realm which gives out L{GuardedResource} instances for authenticated
    users.
    """
    implements(IRealm)

    def requestAvatar(self, avatarId, mind, *interfaces):
        if resource.IResource in interfaces:
            return resource.IResource, GuardedResource(), lambda: None
        raise NotImplementedError()

def cmp_pass(uname, password, storedpass):
    return crypt.crypt(password, storedpass[:2])

def main():
    log.startLogging(sys.stdout)
    # add in the path to your .htpasswd in place of path_to_htpasswd
    checkers = [FilePasswordDB(path_to_htpasswd,
                       hash=cmp_pass)]
    wrapper = guard.HTTPAuthSessionWrapper(
                    Portal(SimpleRealm(), checkers),
                    [guard.BasicCredentialFactory('yoursite.com')])
    reactor.listenTCP(8080, server.Site(
                               resource = wrapper))
    reactor.run()

if __name__ == '__main__':
    main()


This should basically run (though I haven't tested this specific example).

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From chris at stemcel.co.uk  Mon Aug 17 07:55:46 2009
From: chris at stemcel.co.uk (Chris Adams)
Date: Mon, 17 Aug 2009 14:55:46 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <95bb10690908170605h370c3deen60cad99a08c9a65d@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
	<95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
	<4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>
	<95bb10690908170605h370c3deen60cad99a08c9a65d@mail.gmail.com>
Message-ID: <4120a220908170655r2aa9d3bdre918b422348540d3@mail.gmail.com>

Thanks Reza,

> Generally it looks fine - but I should mention these random snippets
> of code were given with the assumption that a .tac file is being used.
> A .tac file is basically a "runner" script or driver for your twisted
> program - it works in conjunction with the twistd command-line utility
> and does fun stuff like automatic daemonization and reactor selection.
>



Automatic daemonization and monitoring? This sounds like exactly what I'm after.

I've been calling twisted like so for a project: explicitly setting
the process id, logger and source file here. And relying on a separate
cron script to check if all is well:

twistd --pidfile=$PIDFILE --syslog --prefix=program_name --python
program_name.py

Would using a .tac file make some of these flags redundant?

All I could found about .tac files is here -
http://twistedmatrix.com/projects/core/documentation/howto/application.html

Are there any other resources where I can found out about the
advantages of using .tac files instead the way I've bee doing stuff?

-- 
---
I'm currently only checking my email at 9am, midday and at 4pm.
If you need a response from me urgently, please call or text my
mobile, or contact me via Skype (chris.d.adams).
---
Chris Adams
Stemcel Studios
The Hub
5 Torrens Street
London
EC1V 1NQ

email: chris at stemcel.co.uk
web:  www.stemcel.co.uk
twitter:chris_d_adams
skype: chris.d.adams
mob: 07974 368 229
tel: 0207 558 8971



From rlotun at gmail.com  Mon Aug 17 08:24:39 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 15:24:39 +0100
Subject: [Twisted-Python] How to do basic authentication on twisted web
In-Reply-To: <4120a220908170655r2aa9d3bdre918b422348540d3@mail.gmail.com>
References: <4120a220908170228m4cd4349bvf8aecf9b08e09b97@mail.gmail.com>
	<95bb10690908170245x4f968145o48a2578e9e0e4678@mail.gmail.com>
	<78bfcf050908170302x65599cc7rd2cde37503047e7d@mail.gmail.com>
	<95bb10690908170313o2e746ce8hfaadbc3de8e0bd64@mail.gmail.com>
	<4120a220908170542q48472300o94ac86825232739a@mail.gmail.com>
	<95bb10690908170605h370c3deen60cad99a08c9a65d@mail.gmail.com>
	<4120a220908170655r2aa9d3bdre918b422348540d3@mail.gmail.com>
Message-ID: <95bb10690908170724r2a87d6a0jf282578f7d743010@mail.gmail.com>

Hi Chris,

> Automatic daemonization and monitoring? This sounds like exactly what I'm after.
>
> I've been calling twisted like so for a project: explicitly setting
> the process id, logger and source file here. And relying on a separate
> cron script to check if all is well:
>
> twistd --pidfile=$PIDFILE --syslog --prefix=program_name --python
> program_name.py
>
> Would using a .tac file make some of these flags redundant?
>
> All I could found about .tac files is here -
> http://twistedmatrix.com/projects/core/documentation/howto/application.html
>
> Are there any other resources where I can found out about the
> advantages of using .tac files instead the way I've bee doing stuff?

Well, it won't make all the flags redundant - the default .pid file is
still twistd.pid, and you'd have to set your --prefix, etc. However,
you definitely should be using .tac files since you can handle
daemonization through twistd by using the application framework (you
can select a reactor from twistd by using the -r flag - for example
`twistd -r epoll -y myapp.tac --pidfile=...`).

The link you've posted is the de-facto source for .tac file
documentation. I can post a simple .tac file used for an internal web
tool:

---
from twisted.application import service, internet
from twisted.internet import defer
from twisted.python.log import ILogObserver, FileLogObserver
from twisted.python.logfile import DailyLogFile
from twisted.web import guard, server
from twisted.cred.portal import Portal
from twisted.cred.checkers import FilePasswordDB

from tdusers.lookup import SimpleRealm

import crypt

def cmp_pass(uname, password, storedpass):
    return crypt.crypt(password, storedpass[:2])

def get_api_service():
    """ Return a service suitable for creating an application object. """
    checkers = [FilePasswordDB('/home/repo/.htpasswd',
                hash=cmp_pass)]
    wrapper = guard.HTTPAuthSessionWrapper(
                    Portal(SimpleRealm(), checkers),
                    [guard.BasicCredentialFactory('auth')])
    return internet.TCPServer(8080, server.Site(resource=wrapper))

application = service.Application('Lookup')
logfile = DailyLogFile('lookup.log', '.')
application.setComponent(ILogObserver, FileLogObserver(logfile).emit)

# attach the service to its parent application
service = get_api_service()
service.setServiceParent(application)
----

I then start my tool using twistd -r epoll -y mytacfile.tac. The good
thing about this approach is that your code can live in a seperate
file and no mention of the *running* of it has to be made in that file
- that is, you shouldn't have to explicity choose what reactor you're
using since that's more of a deployment question.

I don't really know of a more comprehensive source for twistd and .tac
files - I suppose if you fancy dong a writeup that'd be appreciated by
the rest of us ;-)

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From rlotun at gmail.com  Mon Aug 17 11:27:11 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 18:27:11 +0100
Subject: [Twisted-Python] Happy Twisted User
Message-ID: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>

Hi All,

Forgive this random spammy shoutout - but I work for TweetDeck (a
real-time web client offering), and we're happy users of Twisted for
our backend. More specifically we use it to handle our account signups
and syncing of client information.

So...if you're a twitter or facebook user and ever thought about
organizing tweets maybe check it out? Just to let you know - it's
available in two client favours, one for iPhone and one a
cross-platform Adobe AIR client.

http://www.tweetdeck.com/

Ok, that's all ;-)

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From glyph at twistedmatrix.com  Mon Aug 17 12:45:24 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 17 Aug 2009 14:45:24 -0400
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
Message-ID: <d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>

On Mon, Aug 17, 2009 at 1:27 PM, Reza Lotun <rlotun at gmail.com> wrote:


> Forgive this random spammy shoutout - but I work for TweetDeck (a
> real-time web client offering), and we're happy users of Twisted for
> our backend. More specifically we use it to handle our account signups
> and syncing of client information.
>

As a matter of fact I already use TweetDeck!  I'm happy to hear it uses
Twisted :).

If you're happy users, perhaps you'd like to consider becoming a sponsor?
The minimum contribution is pretty modest ($500).

Or, if you don't have the resources for that, perhaps you could just write a
blurb for http://twistedmatrix.com/trac/wiki/SuccessStories ?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090817/88571891/attachment.html>

From tv at eagain.net  Mon Aug 17 12:58:36 2009
From: tv at eagain.net (Tommi Virtanen)
Date: Mon, 17 Aug 2009 11:58:36 -0700
Subject: [Twisted-Python] Ldaptor patch for Interfaces
In-Reply-To: <78bfcf050908170237g2a1a4bdcy3627c8b5b833c3ff@mail.gmail.com>
References: <78bfcf050908170237g2a1a4bdcy3627c8b5b833c3ff@mail.gmail.com>
Message-ID: <20090817185836.GA21887@owl.eagain.net>

On Mon, Aug 17, 2009 at 11:37:10AM +0200, Colin Alston wrote:
> TV! Please fix Ldaptor.

We discussed this on IM, replying here for anyone looking at the
archives.

The SVN repo is dead, long live saner version control..

http://eagain.net/gitweb/?p=ldaptor.git

-- 
:(){ :|:&};:



From rlotun at gmail.com  Mon Aug 17 13:04:36 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 17 Aug 2009 20:04:36 +0100
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
	<d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
Message-ID: <95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>

Hi Glyph,

> As a matter of fact I already use TweetDeck!  I'm happy to hear it uses
> Twisted :).

That's great news!

> If you're happy users, perhaps you'd like to consider becoming a sponsor?
> The minimum contribution is pretty modest ($500).

I will definitely push for this. I've contributed financially on a
personal level, though it's been a modest amount.

> Or, if you don't have the resources for that, perhaps you could just write a
> blurb for http://twistedmatrix.com/trac/wiki/SuccessStories ?

I'll do that as well! Shall I just post the blurb to the list, or
email you personally?

Thanks,
Reza


-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From glyph at twistedmatrix.com  Mon Aug 17 13:09:17 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 17 Aug 2009 15:09:17 -0400
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
	<d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
	<95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>
Message-ID: <d9047f780908171209u4a5045d3l5bde7d443b9a389f@mail.gmail.com>

On Mon, Aug 17, 2009 at 3:04 PM, Reza Lotun <rlotun at gmail.com> wrote:

> Hi Glyph,
>
> > As a matter of fact I already use TweetDeck!  I'm happy to hear it uses
> > Twisted :).
>
> That's great news!
>

Don't get too excited.  Now I know I can blame you when it breaks! ;-)

> If you're happy users, perhaps you'd like to consider becoming a sponsor?
> > The minimum contribution is pretty modest ($500).
>
> I will definitely push for this.


Thanks.


> I've contributed financially on a personal level, though it's been a modest
> amount.


Ah, I knew I'd seen your name somewhere else recently :).  Thanks for that,
too; we should probably get better about honoring individual contributors.

> Or, if you don't have the resources for that, perhaps you could just write
> a
> > blurb for http://twistedmatrix.com/trac/wiki/SuccessStories ?
>
> I'll do that as well! Shall I just post the blurb to the list, or
> email you personally?
>

Go ahead and post it to the list.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090817/83fc4637/attachment.html>

From exarkun at twistedmatrix.com  Mon Aug 17 19:50:05 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 18 Aug 2009 01:50:05 -0000
Subject: [Twisted-Python] twisted.spread PB over a ProcessProtocol
In-Reply-To: <1250339773.17341.42.camel@ana.amantes>
References: <1250339773.17341.42.camel@ana.amantes>
Message-ID: <20090818015005.8740.29130984.divmod.xquotient.72@localhost.localdomain>

On 15 Aug, 12:36 pm, thomas at apestaart.org wrote:
>[snip]
>
>c) on hitting ctrl-c, tracebacks are generated, due to this block of
>code:
>        # At least on OS X 10.4, exiting while stdout is non-blocking
>can
>        # result in data loss.  For some reason putting the file
>descriptor
>        # back into blocking mode seems to resolve this issue.
>        fdesc.setBlocking(self.fd)
>
>The exception is EBADF.
>
>That code looks suspicious to me - shouldn't it be at least checking 
>for
>exceptions there ? the fd could already be closed IMO.

I think the code was written with the assumption that the fd couldn't 
possibly by closed by that point.  If you have an example where this 
assumption is invalid, cool!  Any chance of shortening the code to just 
highlight this point?

Jean-Paul



From exarkun at twistedmatrix.com  Mon Aug 17 19:51:59 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 18 Aug 2009 01:51:59 -0000
Subject: [Twisted-Python] TCP startTLS() negotiation
In-Reply-To: <Pine.LNX.4.64.0908150216250.15844@patton.tcpsoft.net>
References: <Pine.LNX.4.64.0908150216250.15844@patton.tcpsoft.net>
Message-ID: <20090818015159.8740.1252942931.divmod.xquotient.74@localhost.localdomain>

On 15 Aug, 04:49 pm, kgeorge at tcpsoft.com wrote:
>I've noticed some behavior when negotiating TLS using startTLS().  I'm
>starting TLS on both sides of the connection at the same time to 
>validate
>peer certificates using a custom callback.  If I call startTLS() 
>without
>any subsequent writes to the socket the negotiation never completes.
>However, if I write data immediately post startTLS() the negotiation 
>(and
>the callback to the OpenSSL verify callback) is successful.  But I 
>don't
>want to do this because I want to wait until verification to proceed 
>with
>communicating on the channel.  So I traced through tcp.py and noticed 
>that
>in Connection.startTLS() reads and writes are stopped while the
>negotiation is taking place.  However, only reading is reenabled
>afterwards.  I suppose this is why doing a write unblocks the 
>connection.
>When I do something like this in my code I don't have to make a write:
>
>self.transport.startTLS(SSLContextFactory(...))
>self.transport.startWriting()
>
>The context factory makes its own SSL.Context very similar to 
>_sslverify,
>but with a callback I can hook for verification.
>
>So the question is, why is reading reenabled but not writing?  When I
>apply the patch below it works.

This sounds like a real bug.  Probably it came from a naive copying of 
some TCP code which doesn't have to do the initial writing that is 
necessary for SSL.  Can you file a ticket?

Jean-Paul



From jonathan at garetjax.info  Tue Aug 18 03:41:36 2009
From: jonathan at garetjax.info (Jonathan Stoppani)
Date: Tue, 18 Aug 2009 11:41:36 +0200
Subject: [Twisted-Python] AMQP Twisted Application and authentication
Message-ID: <c50d9eb70908180241l49320c59pb1be88f28556ef18@mail.gmail.com>

Hi All,
I'm new to twisted but already fall in love with it... ;-)

I'm using the txAMQP library to connect and consume messages from an
AMQP server.

The examples of the txamqp library shown how to connect to the message
broker using the ClientCreator class.
What I'm trying to do is to use the twisted application framework.
Until now I succeeded to connect by creating a factory to use with
twisted.application.internet.TCPClient.

My two questions are:
1) Is this the right way to do this? Is it not possible to use the
ClientCreator class directly?
and
2) If this is the right way, when and where should I handle the AMQP
authentication?
   To authenticate to the message broker, the "authenticate" method of
the AMQClient instance must be called. This class is instantiated in
the buildProtocol method of the client factory. Is this the right
place to call this method too? Or is it better if I create a wrapper
class around the AMQPClient which then authenticates when the
connectionMade callback is called?

Thanks for the help

~jonathan

-- 
Best Regards,
Jonathan Stoppani



From gabriel.rossetti at arimaz.com  Tue Aug 18 05:43:21 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 18 Aug 2009 13:43:21 +0200
Subject: [Twisted-Python] self.socket.accept() in doRead() in tcp.py has (11,
 'Resource temporarily unavailable') error
Message-ID: <4A8A93D9.60603@arimaz.com>

Hello everyone,

I have been trying to debug a Twisted app of mine and I noticed that in tcp.py in 
doRead() self.socket.accept() raises the following exception : error: (11, 'Resource temporarily unavailable'). It seems to just smother the exception though. I read in the python doc that sockets raise that exception if the call would block, when the socket is configuered in non-blocking mode. It seems to do that because the data it receives is too big, how am I supposed to resolve this?

Thank you, Gabriel 




From exarkun at twistedmatrix.com  Tue Aug 18 05:56:53 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 18 Aug 2009 11:56:53 -0000
Subject: [Twisted-Python] self.socket.accept() in doRead() in tcp.py
	has	(11, 'Resource temporarily unavailable') error
In-Reply-To: <4A8A93D9.60603@arimaz.com>
References: <4A8A93D9.60603@arimaz.com>
Message-ID: <20090818115653.7602.1673863681.divmod.xquotient.3@localhost.localdomain>

On 11:43 am, gabriel.rossetti at arimaz.com wrote:
>Hello everyone,
>
>I have been trying to debug a Twisted app of mine and I noticed that in 
>tcp.py in
>doRead() self.socket.accept() raises the following exception : error: 
>(11, 'Resource temporarily unavailable'). It seems to just smother the 
>exception though. I read in the python doc that sockets raise that 
>exception if the call would block, when the socket is configuered in 
>non-blocking mode. It seems to do that because the data it receives is 
>too big, how am I supposed to resolve this?

This exception is normal, correct, and harmless.  Whatever in your app 
is not behaving as you would like, it is almost certainly not related to 
this exception.

socket.accept() how new connections are accepted.  This is not related 
to how data is read from connections.

Jean-Paul



From rlotun at gmail.com  Tue Aug 18 06:02:29 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 18 Aug 2009 13:02:29 +0100
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <d9047f780908171209u4a5045d3l5bde7d443b9a389f@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
	<d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
	<95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>
	<d9047f780908171209u4a5045d3l5bde7d443b9a389f@mail.gmail.com>
Message-ID: <95bb10690908180502if66c577l2340ed8844e3be1b@mail.gmail.com>

> Don't get too excited.  Now I know I can blame you when it breaks! ;-)

No worries. Fee free to ping me directly if you have any problems with it.

>> > blurb for http://twistedmatrix.com/trac/wiki/SuccessStories ?
> Go ahead and post it to the list.

Ok, here's our Success Story blurb:

==
TweetDeck (http://www.tweetdeck.com) aims to build a browser for the
real-time web. Right now we're the biggest Twitter client after the
website itself, and are rolling out full integration with Facebook and
other services. With TweetDeck you can organize real-time streams of
information into a convenient grid format that allows easy digestion.

We use Twisted to power our backend services, specifically our new
accounts system and sync functionality we introduced recently
(http://tweetdeck.com/beta/features/take-tweetdeck-with-you/). We've
deployed our Twisted services over the Amazon cloud - specifically, we
use EC2 and SimpleDB. Writing a REST api service used by hundreds of
thousands active users was a snap with Twisted. We'll continue to use
Twisted as we broaden our server-side processing goals.

-- Reza Lotun, Software Engineer, TweetDeck Inc.
==

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From gabriel.rossetti at arimaz.com  Tue Aug 18 06:07:26 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 18 Aug 2009 14:07:26 +0200
Subject: [Twisted-Python] self.socket.accept() in doRead() in tcp.py	has
 (11, 'Resource temporarily unavailable') error
In-Reply-To: <20090818115653.7602.1673863681.divmod.xquotient.3@localhost.localdomain>
References: <4A8A93D9.60603@arimaz.com>
	<20090818115653.7602.1673863681.divmod.xquotient.3@localhost.localdomain>
Message-ID: <4A8A997E.2000605@arimaz.com>

exarkun at twistedmatrix.com wrote:
> On 11:43 am, gabriel.rossetti at arimaz.com wrote:
>   
>> Hello everyone,
>>
>> I have been trying to debug a Twisted app of mine and I noticed that in 
>> tcp.py in
>> doRead() self.socket.accept() raises the following exception : error: 
>> (11, 'Resource temporarily unavailable'). It seems to just smother the 
>> exception though. I read in the python doc that sockets raise that 
>> exception if the call would block, when the socket is configuered in 
>> non-blocking mode. It seems to do that because the data it receives is 
>> too big, how am I supposed to resolve this?
>>     
>
> This exception is normal, correct, and harmless.  Whatever in your app 
> is not behaving as you would like, it is almost certainly not related to 
> this exception.
>
> socket.accept() how new connections are accepted.  This is not related 
> to how data is read from connections.
>
> Jean-Paul
>   
Ok, thank you Jean-Paul. My app just drops those msgs, if I make them 
smaller they go though, so I though maybe that was it.

Gabriel



From matt at bennett.name  Wed Aug 19 03:33:21 2009
From: matt at bennett.name (Matt Bennett)
Date: Wed, 19 Aug 2009 10:33:21 +0100
Subject: [Twisted-Python] Clarification on returning exceptions via
	Perspective Broker
In-Reply-To: <d9047f780908131250r72aa37eemcbf96771ce679ef@mail.gmail.com>
References: <e554908b0908130732j2b6dd897sc959f8d4b01915e4@mail.gmail.com>
	<d9047f780908131250r72aa37eemcbf96771ce679ef@mail.gmail.com>
Message-ID: <e554908b0908190233v20c552c7x41accf01f96a5b53@mail.gmail.com>

Thank you for the explanation Glyph. Having spent some time
understanding the mechanics of the jellying process, I can see why
things are implemented as they are.

In my path to understanding I came across pb.CopyableFailure, which is
where the state to be passed through PB is extracted from an
Exception. For future reference, I believe patching CopyableFailure to
allow certain parts of the exception to persist would be the quickest,
dirtiest workaround. But for the good reasons outlined I'm not going
to ;-)

Thanks again for the prompt feedback.

Matt.



On Thu, Aug 13, 2009 at 8:50 PM, Glyph Lefkowitz<glyph at twistedmatrix.com> wrote:
> On Thu, Aug 13, 2009 at 10:32 AM, Matt Bennett <matt at bennett.name> wrote:
>>
>> My exceptions subclass pb.Error, which means tracebacks are suppressed
>> on the server and errbacks triggered on the client, exactly as I'd
>> hoped. What I'm confused about though, is why the
>> serialization/deserialization process reduces my nice structured
>> exception into a mere string. Isn't PB's raison d'être to allow you to
>> send fully formed Python classes over the wire?
>
> It's been a while since I worked with this, but I believe the rationale goes
> something like this:
>
> the most common type of error in PB is a serialization or deserialization
> error.  You sent too much, you didn't send enough, your jellier doesn't
> quite match your unjellier, there's a version skew problem.
>
> If exceptions contained structured data, there's a risk that that data will
> also have a serialization error; or, worse yet, attempt to include the
> problematic data which caused the error in the first place.  So it's
> generally not a good idea to work around this, because you can easily cause
> a mutually recursive loop where reporting the error causes another error
> that needs to be reported.
>
> That said, based on memory and a brief read-through of the code, PB does
> support returning structured exceptions; you can't just return a normal
> Exception subclass, you need to register it as serializable the same way you
> would any other object, and it needs to subclass Jellyable (for example by
> subclassing Copyable).
>
> (I could be wrong, but I believe that is the intent.)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From phil at bubblehouse.org  Wed Aug 19 08:34:52 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 19 Aug 2009 10:34:52 -0400
Subject: [Twisted-Python] weird spammy trac emails?
Message-ID: <723580A7-21F3-4A29-9685-BB95A7082D6C@bubblehouse.org>

Hey all,

Have any of you gotten these weird spammy messages from trac? I'm  
getting change notifications on tickets I opened years ago, with no  
apparent info in it about what the change is except a spam URL.

I've attached the ones I've received. I can't figure out how this  
would even be possible for a spammer to do; there must be some kind of  
exploit in trac....

-phil


Begin forwarded message:

> From: trac at twistedmatrix.com
> Date: August 19, 2009 10:28:44 AM EDT
> To: phil at bubblehouse.org, exarkun at twistedmatrix.com
> Subject: greg changed [#2152 - web2 dependency issue in svn trunk]
> Reply-To: twisted-python at twistedmatrix.com
>
> Ticket [#2152 - web2 dependency issue in svn trunk] changed by greg  
> <greg>:
>
> [http://nissan.osa.pl/tuning/map.html #2152 (web2 dependency issue  
> in svn trunk) – Twisted]
>
> ---------
>
> ---------
> http://twistedmatrix.com/trac/ticket/2152
Begin forwarded message:

> From: trac at twistedmatrix.com
> Date: August 18, 2009 4:49:00 AM EDT
> To: phil at bubblehouse.org, glyph at divmod.com
> Subject: domtop changed [#1856 - setup.py broken in SVN?]
> Reply-To: twisted-python at twistedmatrix.com
>
> Ticket [#1856 - setup.py broken in SVN?] changed by domtop <domtop>:
>
> [http://stokke.blog.hr #1856 (setup.py broken in SVN?) – Twisted]
>
> ---------
>
> ---------
> http://twistedmatrix.com/trac/ticket/1856
Begin forwarded message:

> From: trac at twistedmatrix.com
> Date: August 17, 2009 4:54:35 AM EDT
> To: phil at bubblehouse.org, therve at free.fr
> Subject: albass changed [#2752 - t.w.http.Request docstrings]
> Reply-To: twisted-python at twistedmatrix.com
>
> Ticket [#2752 - t.w.http.Request docstrings] changed by albass  
> <albass>:
>
> [http://egostatic.345.pl/forum/ #2752 (t.w.http.Request docstrings)  
> – Twisted]
>
> ---------
>
> ---------
> http://twistedmatrix.com/trac/ticket/2752




From exarkun at twistedmatrix.com  Wed Aug 19 08:53:24 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Aug 2009 14:53:24 -0000
Subject: [Twisted-Python] weird spammy trac emails?
In-Reply-To: <723580A7-21F3-4A29-9685-BB95A7082D6C@bubblehouse.org>
References: <723580A7-21F3-4A29-9685-BB95A7082D6C@bubblehouse.org>
Message-ID: <20090819145324.7711.849941027.divmod.xquotient.13@localhost.localdomain>

On 02:34 pm, phil at bubblehouse.org wrote:
>Hey all,
>
>Have any of you gotten these weird spammy messages from trac? I'm
>getting change notifications on tickets I opened years ago, with no
>apparent info in it about what the change is except a spam URL.
>
>I've attached the ones I've received. I can't figure out how this
>would even be possible for a spammer to do; there must be some kind of
>exploit in trac....

The exploit is open registration.  I'm open to suggestions about how to 
deal with this problem.

Jean-Paul



From filoufake-python at yahoo.fr  Thu Aug 20 01:07:24 2009
From: filoufake-python at yahoo.fr (filoufake-python at yahoo.fr)
Date: Thu, 20 Aug 2009 07:07:24 +0000 (GMT)
Subject: [Twisted-Python] Telnet server using Twisted and
	AuthenticatingTelnetProtocol
Message-ID: <986632.28669.qm@web26103.mail.ukl.yahoo.com>

Hello,

I have created a telnet server in python.

Maybe you wonder why to create a telnet server while Windows has one?
Because the windows telnet server does not allow to interract with the
desktop. If you try to start a GUI app, it will start and run but will
not be displayed on the server desktop.

My telnet server will allow to start a GUI application interracting with the windows desktop of the server.
Ex. : typing "notepad" in the telnet console will pop up the notepad on the Windows desktop of the server.

At the time this server works but has no authentication feature implemented.

I would like to implement the authentication using AuthenticatingTelnetProtocol and credential.
I found the "cred.py" example on the twistedmatrix website (in the example section) and looked fine as starting point.

I quite well understand this expample.

I modified the code as follow but always got the same error message when a connectiion is attempted.
I have been trying since two weeks but I cannot get it work.

Is there a problem with "AuthenticatingTelnetProtocol"

The error message:
************************************************************
D:\workspace\twisted>telnet_cred.py
2009-08-20 08:57:11+0200 [-] Log opened.
2009-08-20 08:57:11+0200 [-] __main__.ServerFactory starting on 4738
2009-08-20 08:57:11+0200 [-] Starting factory <__main__.ServerFactory instance at 0x00D79C60>
2009-08-20 08:57:15+0200 [__main__.ServerFactory] DEBUG: buildProtocol - addr IPv4Address(TCP, '127.0.0.1', 4978)
2009-08-20 08:57:15+0200 [__main__.ServerFactory] Unhandled Error
        Traceback (most recent call last):
          File "C:\Python25\lib\site-packages\twisted\python\log.py", line 69, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "C:\Python25\lib\site-packages\twisted\python\context.py", line 59, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, **kw)
          File "C:\Python25\lib\site-packages\twisted\python\context.py", line 37, in callWithContext
            return func(*args,**kw)
          File "C:\Python25\lib\site-packages\twisted\internet\selectreactor.py", line 146, in _doReadOrWrite
            why = getattr(selectable, method)()
        --- <exception caught here> ---
          File "C:\Python25\lib\site-packages\twisted\internet\tcp.py", line 932, in doRead
            protocol = self.factory.buildProtocol(self._buildAddr(addr))
          File "D:\workspace\twisted\telnet_cred.py", line 130, in buildProtocol
            p = protocol.ServerFactory.buildProtocol(self, addr)
          File "C:\Python25\lib\site-packages\twisted\internet\protocol.py", line 98, in buildProtocol
            p = self.protocol()
        exceptions.TypeError: __init__() takes exactly 2 arguments (1 given)
************************************************************

The modified code:
************************************************************

# Copyright (c) 2001-2004 Twisted Matrix Laboratories.
# See LICENSE for details.



import sys
from zope.interface import implements, Interface

from twisted.protocols import basic
from twisted.internet import protocol
from twisted.python import log

from twisted.cred import error
from twisted.cred import portal
from twisted.cred import checkers
from twisted.cred import credentials

from twisted.conch.telnet import AuthenticatingTelnetProtocol, ITelnetProtocol, TelnetProtocol

class IProtocolUser(Interface):
    def getPrivileges():
        """Return a list of privileges this user has."""

    def logout():
        """Cleanup per-login resources allocated to this avatar"""

class AnonymousUser:
    implements(IProtocolUser)
    
    def getPrivileges(self):
        return [1, 2, 3]

    def logout(self):
        print "Cleaning up anonymous user resources"

class RegularUser:
    implements(IProtocolUser)
    
    def getPrivileges(self):
        return [1, 2, 3, 5, 6]

    def logout(self):
        print "Cleaning up regular user resources"

class Administrator:
    implements(IProtocolUser)
    
    def getPrivileges(self):
        return range(50)

    def logout(self):
        print "Cleaning up administrator resources"

class Protocol(basic.LineReceiver):
    user = None
    portal = None
    avatar = None
    logout = None

    def connectionMade(self):
        self.sendLine("Login with USER <name> followed by PASS <password> or ANON")
        self.sendLine("Check privileges with PRIVS")

    def connectionLost(self, reason):
        if self.logout:
            self.logout()
            self.avatar = None
            self.logout = None
    
    def lineReceived(self, line):
        f = getattr(self, 'cmd_' + line.upper().split()[0])
        if f:
            try:
                f(*line.split()[1:])
            except TypeError:
                self.sendLine("Wrong number of arguments.")
            except:
                self.sendLine("Server error (probably your fault)")

    def cmd_ANON(self):
        if self.portal:
            self.portal.login(credentials.Anonymous(), None, IProtocolUser
                ).addCallbacks(self._cbLogin, self._ebLogin
                )
        else:
            self.sendLine("DENIED")
    
    def cmd_USER(self, name):
        self.user = name
        self.sendLine("Alright.  Now PASS?")
    
    def cmd_PASS(self, password):
        if not self.user:
            self.sendLine("USER required before PASS")
        else:
            if self.portal:
                self.portal.login(
                    credentials.UsernamePassword(self.user, password),
                    None,
                    IProtocolUser
                ).addCallbacks(self._cbLogin, self._ebLogin
                )
            else:
                self.sendLine("DENIED")

    def cmd_PRIVS(self):
        self.sendLine("You have the following privileges: ")
        self.sendLine(" ".join(map(str, self.avatar.getPrivileges())))

    def _cbLogin(self, (interface, avatar, logout)):
        assert interface is IProtocolUser
        self.avatar = avatar
        self.logout = logout
        self.sendLine("Login successful.  Available commands: PRIVS")
    
    def _ebLogin(self, failure):
        failure.trap(error.UnauthorizedLogin)
        self.sendLine("Login denied!  Go away.")

class ServerFactory(protocol.ServerFactory):
##    protocol = Protocol
    protocol = AuthenticatingTelnetProtocol
    
    def __init__(self, portal):
        self.portal = portal
    
    def buildProtocol(self, addr):
        print "DEBUG: buildProtocol - addr", addr
        p = protocol.ServerFactory.buildProtocol(self, addr)
        print "DEBUG2: buildProtocol - addr", addr
        p.portal = self.portal
        return p

class Realm:
    implements(portal.IRealm)

    def requestAvatar(self, avatarId, mind, *interfaces):
        if IProtocolUser in interfaces:
            if avatarId == checkers.ANONYMOUS:
                av = AnonymousUser()
            elif avatarId.isupper():
                # Capitalized usernames are administrators.
                av = Administrator()
            else:
                av = RegularUser()
            return IProtocolUser, av, av.logout
        elif ITelnetProtocol in interfaces:
            print "BEGUG: aaaa"
            if avatarId.isupper():
                av = TelnetProtocol()
            return ITelnetProtocol, av, None
        raise NotImplementedError("Only IProtocolUser interface is supported by this realm")

def main():
    r = Realm()
    p = portal.Portal(r)
    c = checkers.InMemoryUsernamePasswordDatabaseDontUse()
    c.addUser("auser", "thepass")
    c.addUser("SECONDUSER", "secret")
    p.registerChecker(c)
    p.registerChecker(checkers.AllowAnonymousAccess())
    
    f = ServerFactory(p)
    
    log.startLogging(sys.stdout)

    from twisted.internet import reactor
    reactor.listenTCP(4738, f)
    reactor.run()

if __name__ == '__main__':
    main()

************************************************************

If someone could help me.

Philippe


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090820/37542693/attachment.html>

From gabriel.rossetti at arimaz.com  Thu Aug 20 03:20:59 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 20 Aug 2009 11:20:59 +0200
Subject: [Twisted-Python] Twistd .tac + wxpython
Message-ID: <4A8D157B.8010301@arimaz.com>

Hello everyone,

I have some services written that I'd like to run in a ta.c w/ twistd. 
One of them uses wxpython. I originally used the wxreactor but it seams 
to have some problems on Mac OS X and Windows, so with help from some 
people on this list I ended up using the wx mainloop as the mainloop and 
putting the reactor in a separate thread. This seams to work well, but 
now that I want to create a .tac I don't think this is possible.

The problem that prompted me to create a .tac is that if I want to use 
py2app, I need just one main file and my app works using a launcher that 
accepts a service name as a param and it takes care of running it. On 
Windows with py2exe, I had created a main script that called the 
launcher with the param in a new process. Py2exe is capable of creating 
several .exe files, so I would generate the launcher and the main 
script. Not being able to do this with py2app I though of ditching my 
launcher and using twistd. Even in the event that I got everything to 
work with the wx reactor, from what I understand twistd uses one reactor 
(that can be specified via command-line), and thus I would either have 
to use the wxreactor for all the services (which doesn't work), or a 
standard reactor, but then it's my wx service that won't work. I thought 
of maybe putting the wx mainloop in a thread and using the standard 
reactor but I don't know how well this works or even if it's possible.

Does anyone have an idea? I'm open to all suggestions and proposals,

Gabriel



From colin.alston at thusa.co.za  Thu Aug 20 03:32:46 2009
From: colin.alston at thusa.co.za (Colin Alston)
Date: Thu, 20 Aug 2009 11:32:46 +0200
Subject: [Twisted-Python] Happy Twisted User
In-Reply-To: <95bb10690908180502if66c577l2340ed8844e3be1b@mail.gmail.com>
References: <95bb10690908171027v5a8cc54av5384e6107094fa7b@mail.gmail.com>
	<d9047f780908171145t48f34266yd4c0edd9ceaffc81@mail.gmail.com>
	<95bb10690908171204x1e37b309n5bdb4b174fb03476@mail.gmail.com>
	<d9047f780908171209u4a5045d3l5bde7d443b9a389f@mail.gmail.com>
	<95bb10690908180502if66c577l2340ed8844e3be1b@mail.gmail.com>
Message-ID: <78bfcf050908200232t6fa3e44dtc4ed2b33a3c47cb2@mail.gmail.com>

On Tue, Aug 18, 2009 at 2:02 PM, Reza Lotun <rlotun at gmail.com> wrote:

> > Don't get too excited.  Now I know I can blame you when it breaks! ;-)
>
> No worries. Fee free to ping me directly if you have any problems with it.
>

Feature request: Let me make regex filters for tweets. Ie. so I can filter
off when people decide it's a good idea to tweet the football score every 5
minutes.

Actually, Open Source the damn thing so I can do it myself ;-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090820/fe0a4125/attachment.html>

From gabriel.rossetti at arimaz.com  Thu Aug 20 05:24:31 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 20 Aug 2009 13:24:31 +0200
Subject: [Twisted-Python] Twisted Trac keeps on bugging
Message-ID: <4A8D326F.2090602@arimaz.com>

Hello everyone,

I must be the onlyone having problems with this, sin no one has said 
anything, but the Twisted Trac keeps on bugging out on me, I get :

Traceback (most recent call last):
  File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/api.py", line 382, in send_error
    'text/html')
  File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/chrome.py", line 475, in render_template
    return stream.render(method, doctype=doctype)
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py", line 146, in render
    output = u''.join(list(generator))
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/output.py", line 200, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/output.py", line 486, in __call__
    for kind, data, pos in chain(stream, [(None, None, None)]):
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/output.py", line 436, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py", line 207, in _ensure
    for event in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py", line 207, in _ensure
    for event in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/chrome.py", line 478, in _strip_accesskeys
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/filters.py", line 313, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 1145, in _match
    content = list(content)
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/filters.py", line 313, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 1120, in _match
    for event in stream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 1109, in _strip
    event = stream.next()
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 941, in _eval
    for event in substream:
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 920, in _eval
    ctxt):
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/template.py", line 930, in _eval
    result = data.evaluate(ctxt)
  File "/srv/trac/.local/lib/python2.5/site-packages/genshi/eval.py", line 101, in evaluate
    {'data': data})
  File "/home/trac/.local/share/trac/templates/error.html", line 36, in <Expression u"get_reporter_id(req)">
    <input type="hidden" name="reporter" value="${get_reporter_id(req)}" />
  File "/srv/trac/.local/lib/python2.5/site-packages/trac/util/__init__.py", line 50, in get_reporter_id
    name = req.session.get('name', None)
AttributeError: 'NoneType' object has no attribute 'get'



when I try to access it, it has been doing this for several days now.

Cheers,
Gabriel



From glyph at twistedmatrix.com  Thu Aug 20 11:29:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Aug 2009 13:29:42 -0400
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <4A8D157B.8010301@arimaz.com>
References: <4A8D157B.8010301@arimaz.com>
Message-ID: <d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>

Hi Gabriel,

On Thu, Aug 20, 2009 at 5:20 AM, Gabriel Rossetti <
gabriel.rossetti at arimaz.com> wrote:

> I thought
> of maybe putting the wx mainloop in a thread and using the standard
> reactor but I don't know how well this works or even if it's possible.
>

If you've already got all the appropriate code to separate out the GUI into
a separate thread and communicate with the networking components via message
queues, then this should work just fine.  Normally I'd suspect wx (which I
find to be a highly idiosyncratic, buggy, and arbitrarily limited library:
have you considered using something else for your GUI?) might have some
difficulties that I'm not aware of, but I'm pretty sure several other
Twisted users have already done this exact type of integration.

Personally, regardless of UI toolkit, in this situation I'd have the server
start up with a "normal" reactor (select, poll, epoll, kqueue: take your
pick) and have it spawn a separate GUI process with the GUI reactor, and
communicate via a socket.  That way the GUI can be shut down and restarted
without killing the back-end, and the back-end could be moved to a different
machine.  But I don't know a lot about your application and there may be
some requirements I'm not aware of :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090820/1a212887/attachment.html>

From cyclops at speakeasy.net  Thu Aug 20 11:55:20 2009
From: cyclops at speakeasy.net (John Crawford)
Date: Thu, 20 Aug 2009 13:55:20 -0400
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <mailman.61627.1250760773.23374.twisted-python@twistedmatri x.com>
References: <mailman.61627.1250760773.23374.twisted-python@twistedmatrix.com>
Message-ID: <mailman.6.1574573435.12674.twisted-python@twistedmatrix.com>


>I have some services written that I'd like to run in a ta.c w/ twistd.
>One of them uses wxpython. I originally used the wxreactor but it seams
>to have some problems on Mac OS X and Windows, so with help from some
>people on this list I ended up using the wx mainloop as the mainloop and
>putting the reactor in a separate thread. This seams to work well, but
>now that I want to create a .tac I don't think this is possible.

I have been working through the Finger example section, and also use 
wxPython for a GUI, and although it was a bit tricky to setup, it 
works fine. I also setup my Finger server code as a .tac, and twistd 
starts it up also. Here is some of the code fragments I used:

     # finger_server.py
     from twisted.python import log
     from twisted.internet import wxreactor

     wxreactor.install()

     # import t.i.reactor only after installing wxreactor:
     from twisted.application import internet, service
     from twisted.internet import reactor, protocol, defer
     from twisted.protocols import basic

The first step is importing *and* installing wxreactor. After that, 
you have to create and register a wxPython App with the Reactor, and 
it takes care of the wx loop.

     app = MyApp(0)
     reactor.registerWxApp(app)
     msgWin = app.frame.foundText # this is a textCtrl I send output to.

     fs = FingerService(msgWin)
     ff = fs.getFingerFactory()
     fsf = fs.getFingerSetterFactory()
     global application
     application = service.Application('finger', uid=1, gid=1)
     sc = service.IServiceCollection(application)
     internet.TCPServer(79, ff).setServiceParent(sc)
     internet.TCPServer(179, fsf).setServiceParent(sc)

In my code, I actually use:

         if __name__ == '__main__':
             main_code()
         else:
             service_code()

This lets me run the code in Eclipse for testing, then I copy the .py 
file to a .tac file, and it works as a twistd daemon, including 
popping up a wxPython window for output. It *also* works as a 
standalone file when I use py2exe on the .py file - but I don't see 
how you could use twistd with a .exe, since twistd expects a script.

I hope this is clear - if not, I can send you my entire 
finger_server.py file, for your amusement :)

John C>




From termim at gmail.com  Thu Aug 20 14:58:57 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 20 Aug 2009 20:58:57 +0000 (UTC)
Subject: [Twisted-Python] Twistd .tac + wxpython
References: <4A8D157B.8010301@arimaz.com>
Message-ID: <loom.20090820T224308-714@post.gmane.org>

> One of them uses wxpython. I originally used the wxreactor but it seams 
> to have some problems on Mac OS X and Windows, so with help from some 

I've used wxreactor the same way as John and used py2exe on Windows and cxFreeze
and PyInstaller on Linux to crate a single executable file. This was a client
with a GUI and I've not used twistd. What problems do you have with wxreactor?

> Windows with py2exe, I had created a main script that called the 
> launcher with the param in a new process. Py2exe is capable of creating 
> several .exe files, so I would generate the launcher and the main 
> script. Not being able to do this with py2app I though of ditching my 
> launcher and using twistd. Even in the event that I got everything to 
> work with the wx reactor, from what I understand twistd uses one reactor 

In completely different app (a server without GUI) I needed a part of the
functionality provided by twistd and at the same time the possibility to crate a
single file executable. I ended subclassing ProcessOption and ApplicationRunner
as Jared recommended here 
http://twistedmatrix.com/pipermail/twisted-python/2009-July/019917.html

Regards,
Mikhail




From termim at gmail.com  Thu Aug 20 15:00:52 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 20 Aug 2009 21:00:52 +0000 (UTC)
Subject: [Twisted-Python] Twistd .tac + wxpython
References: <4A8D157B.8010301@arimaz.com>
	<d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
Message-ID: <loom.20090820T225916-395@post.gmane.org>

Hi Glyph,

Glyph Lefkowitz <glyph <at> twistedmatrix.com> writes:

> 
> If you've already got all the appropriate code to separate out the GUI into a
separate thread and communicate with the networking components via message
queues, then this should work just fine.  Normally I'd suspect wx (which I find
to be a highly idiosyncratic, buggy, and arbitrarily limited library: have you
considered using something else for your GUI?) might have some difficulties that
I'm not aware of, but I'm pretty sure several other Twisted users have already
done this exact type of integration.
> 

What GUI library would you recommend instead of wx?

Regards,
Mikhail




From exarkun at twistedmatrix.com  Thu Aug 20 15:23:28 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 20 Aug 2009 21:23:28 -0000
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <loom.20090820T225916-395@post.gmane.org>
References: <4A8D157B.8010301@arimaz.com>
	<d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
	<loom.20090820T225916-395@post.gmane.org>
Message-ID: <20090820212328.7726.2141293078.divmod.xquotient.86@localhost.localdomain>

On 09:00 pm, termim at gmail.com wrote:
>Hi Glyph,
>
>Glyph Lefkowitz <glyph <at> twistedmatrix.com> writes:
>>
>>If you've already got all the appropriate code to separate out the GUI 
>>into a
>separate thread and communicate with the networking components via 
>message
>queues, then this should work just fine. �Normally I'd suspect wx 
>(which I find
>to be a highly idiosyncratic, buggy, and arbitrarily limited library: 
>have you
>considered using something else for your GUI?) might have some 
>difficulties that
>I'm not aware of, but I'm pretty sure several other Twisted users have 
>already
>done this exact type of integration.
>>
>
>What GUI library would you recommend instead of wx?

Gtk2 is significantly more well integrated with Twisted (because it's 
significantly easier to integrate with, although many Twisted developers 
also rather like it apart from that fact).

Jean-Paul



From exarkun at twistedmatrix.com  Thu Aug 20 10:48:21 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 20 Aug 2009 16:48:21 -0000
Subject: [Twisted-Python] Telnet server using Twisted
	and	AuthenticatingTelnetProtocol
In-Reply-To: <986632.28669.qm@web26103.mail.ukl.yahoo.com>
References: <986632.28669.qm@web26103.mail.ukl.yahoo.com>
Message-ID: <20090820164821.7726.1422282903.divmod.xquotient.79@localhost.localdomain>

On 07:07 am, filoufake-python at yahoo.fr wrote:
>Hello,
>
>I have created a telnet server in python.
>
>Maybe you wonder why to create a telnet server while Windows has one?
>Because the windows telnet server does not allow to interract with the
>desktop. If you try to start a GUI app, it will start and run but will
>not be displayed on the server desktop.
>
>My telnet server will allow to start a GUI application interracting 
>with the windows desktop of the server.
>Ex. : typing "notepad" in the telnet console will pop up the notepad on 
>the Windows desktop of the server.
>
>At the time this server works but has no authentication feature 
>implemented.
>
>I would like to implement the authentication using 
>AuthenticatingTelnetProtocol and credential.
>I found the "cred.py" example on the twistedmatrix website (in the 
>example section) and looked fine as starting point.
>
>I quite well understand this expample.
>
>I modified the code as follow but always got the same error message 
>when a connectiion is attempted.
>I have been trying since two weeks but I cannot get it work.
>
>Is there a problem with "AuthenticatingTelnetProtocol"

AuthenticatingTelnetProtocol requires an argument to its constructor - 
the cred portal to use to do the authentication and authorization with. 
However, ServerFactory.buildProtocol doesn't invoke it with any 
arguments, so you get a TypeError.  You can fix this by making your 
factory's protocol be a no-argument callable instead - eg, by making it 
a lambda that closes over the portal or the factory:

    def __init__(self, portal):
        self.protocol = lambda: AuthenticatingTelnetProtocol(portal)


However, this won't completely fix your problems. 
AuthenticatingTelnetProtocol expects to be connected to an 
ITelnetTransport, not an ITCPTransport.

http://twistedmatrix.com/trac/browser/branches/telnet-server- 
example-3940/doc/conch/examples/telnet_echo.tac might help illuminate 
the way telnet transports and telnet protocols are intended to be 
assembled.

Jean-Paul



From dripton at ripton.net  Thu Aug 20 17:18:49 2009
From: dripton at ripton.net (David Ripton)
Date: Thu, 20 Aug 2009 16:18:49 -0700
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <loom.20090820T225916-395@post.gmane.org>
References: <4A8D157B.8010301@arimaz.com>
	<d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
	<loom.20090820T225916-395@post.gmane.org>
Message-ID: <20090820231849.GB6505@vidar.dreamhost.com>

On 2009.08.20 21:00:52 +0000, Mikhail wrote:
> What GUI library would you recommend instead of wx?

If clean integration with Twisted is the primary goal, PyGTK.  The
gtk2reactor integration is fantastic.

-- 
David Ripton    dripton at ripton.net



From exarkun at twistedmatrix.com  Thu Aug 20 06:08:49 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 20 Aug 2009 12:08:49 -0000
Subject: [Twisted-Python] Twisted Trac keeps on bugging
In-Reply-To: <4A8D326F.2090602@arimaz.com>
References: <4A8D326F.2090602@arimaz.com>
Message-ID: <20090820120849.7726.245687165.divmod.xquotient.2@localhost.localdomain>

On 11:24 am, gabriel.rossetti at arimaz.com wrote:
>Hello everyone,
>
>I must be the onlyone having problems with this, sin no one has said
>anything, but the Twisted Trac keeps on bugging out on me, I get :

This is an intermittent failure.  Most people encounter it at some 
point.  If you're interested in helping fix it, please let me know.

Jean-Paul



From gabriel.rossetti at arimaz.com  Fri Aug 21 07:11:34 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 21 Aug 2009 15:11:34 +0200
Subject: [Twisted-Python] Twistd .tac + wxpython
In-Reply-To: <d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
References: <4A8D157B.8010301@arimaz.com>
	<d9047f780908201029n704ac645idff1659eef293e37@mail.gmail.com>
Message-ID: <4A8E9D06.4080108@arimaz.com>

Glyph Lefkowitz wrote:
> Hi Gabriel,
>
> On Thu, Aug 20, 2009 at 5:20 AM, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com <mailto:gabriel.rossetti at arimaz.com>> wrote:
>
>     I thought
>     of maybe putting the wx mainloop in a thread and using the standard
>     reactor but I don't know how well this works or even if it's possible.
>
>
> If you've already got all the appropriate code to separate out the GUI 
> into a separate thread and communicate with the networking components 
> via message queues, then this should work just fine.  Normally I'd 
> suspect wx (which I find to be a highly idiosyncratic, buggy, and 
> arbitrarily limited library: have you considered using something else 
> for your GUI?) might have some difficulties that I'm not aware of, but 
> I'm pretty sure several other Twisted users have already done this 
> exact type of integration.
>
> Personally, regardless of UI toolkit, in this situation I'd have the 
> server start up with a "normal" reactor (select, poll, epoll, kqueue: 
> take your pick) and have it spawn a separate GUI process with the GUI 
> reactor, and communicate via a socket.  That way the GUI can be shut 
> down and restarted without killing the back-end, and the back-end 
> could be moved to a different machine.  But I don't know a lot about 
> your application and there may be some requirements I'm not aware of :).
>
Hi Glyph,

I have 3 versions of my code, one using wxreactor, one where the 
mainloop is wx's and Twisted's reactor is in a thread, and one where 
it's Twisted's reactor as the mainloop and wx is in a thread.

To answer your question, originally I considered pyQT but when I saw 
that it wasn't free I changed my mind. pyGTK, the problem is the 
integration in different OSes, I need great integration in Linux, Mac OS 
X and Windows and  GTK apps don't do that as well.

Yes, that is what I ended up doing :-)

Cheers,
Gabriel



From mail.sensenmann at googlemail.com  Fri Aug 21 08:47:51 2009
From: mail.sensenmann at googlemail.com (Christian Scharkus)
Date: Fri, 21 Aug 2009 16:47:51 +0200
Subject: [Twisted-Python] twisted and qtreactor
Message-ID: <717b5780908210747h40602347p74f61f11bb2c05ec@mail.gmail.com>

Hi :)

I'm at extending our existing twisted application
(http://github.com/jem777/rattlekekz) with an qtview using qtreactor
(http://www.tarbox.org/qtreactor) and pyqt.

I wrote this two examples to demonstrate the problem: http://dpaste.com/83246/

The Applications are supposed to print "fu" or "stfu" then the last
window is closed. This works with pyqt just fine but don't work then
twisted is involved. The signal connection is set up successful so I
think twisted swallows or blocks the signals from the QApplication or
they're not emitted.



From stephen.c.waterbury at nasa.gov  Fri Aug 21 09:40:15 2009
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Fri, 21 Aug 2009 11:40:15 -0400
Subject: [Twisted-Python] twisted-wave?
Message-ID: <4A8EBFDF.6050602@nasa.gov>

Just curious what the twisted minions think of google wave
and whether anyone is considering or working on a twisted
implementation of the federation protocol,
<http://www.waveprotocol.org/draft-protocol-spec>.

Steve



From david at strotos.com  Fri Aug 21 10:20:16 2009
From: david at strotos.com (David Guerin)
Date: Fri, 21 Aug 2009 17:20:16 +0100
Subject: [Twisted-Python] twisted-wave?
In-Reply-To: <4A8EBFDF.6050602@nasa.gov>
References: <4A8EBFDF.6050602@nasa.gov>
Message-ID: <A68ED14E-6FFD-4909-BAA9-97A8B715A1F3@strotos.com>

Hey,

I had considered starting something.....
When I was finished my thesis that is, sometime next month...

Looks very promising, all in all. Really need to look into the spec in  
more detail first.

Has anyone else started anything?

Dave


On 21 Aug 2009, at 16:40, Stephen Waterbury wrote:

> Just curious what the twisted minions think of google wave
> and whether anyone is considering or working on a twisted
> implementation of the federation protocol,
> <http://www.waveprotocol.org/draft-protocol-spec>.
>
> Steve
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2417 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090821/52685015/attachment-0002.bin>

From exarkun at twistedmatrix.com  Sat Aug 22 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Aug 2009 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1251000311.2.536346421@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090823/259f2e5e/attachment-0001.html>

From gabriel.rossetti at arimaz.com  Sun Aug 23 14:40:11 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Sun, 23 Aug 2009 22:40:11 +0200
Subject: [Twisted-Python] Twisted, wxPython & Mac OS X 10.5 freezes
In-Reply-To: <d9047f780908120902q527ad1a5g90bb72bbd235c223@mail.gmail.com>
References: <4A82E421.4080107@arimaz.com>
	<d9047f780908120902q527ad1a5g90bb72bbd235c223@mail.gmail.com>
Message-ID: <4A91A92B.3080607@arimaz.com>

Glyph Lefkowitz wrote:
> On Wed, Aug 12, 2009 at 11:47 AM, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com <mailto:gabriel.rossetti at arimaz.com>> wrote:
>
>     I have written an application using Twisted, WX and I wanted to
>     test it
>     under Mac. I have successfully used it on linux and windows
>     before. When
>     I run it, I often get the pinwheel of death and then the whole OS
>     locks
>     up, even SSH no longer accepts connections, I have to hard reboot it.
>     Has anyone ever witnessed this? Does anyone know/have an idea of what
>     could cause this? I was wondering if it is not the twisted + wx
>     integration that could cause this.
>
>
> Without more detail it's impossible to say, but my guess would be "no".
>
> MacOS X is a preemptively multitasking, multi-user OS.  The worst that 
> Twisted and WX should be able to do, even maliciously, is to freeze 
> the display for a single user.  The worst that a bug should reasonably 
> cause is to lock up the UI for a single process.
>
> You might have discovered a bug in MacOS X, and you should take it up 
> with Apple.  Alternately, your Mac hardware might be broken, and 
> Twisted is interacting with its problems.  If you'd like any further 
> help here, though, a complete example program would be useful to 
> anyone trying to help you.
>
Hmm, well that is what I though but it really freezes up good. I changed 
my way of using wx & twisted, opted into using the normal reactor and 
having wx's mainloop in a seperate thread, this seams to work great on 
other platforms. I still get the lockup on Mac though but I think it's 
comming from my using pyserial on a bluetooth device. I have to 
investigate more but it's a bit hard too as I don't know how to provoke 
the lockup and I can't debug it once it does. I think it has nothing to 
do with wx nor twisted though. I will test it on other mac hardware and 
software asap. Thanks for your advice,

Gabriel



From powdahound at gmail.com  Mon Aug 24 12:58:14 2009
From: powdahound at gmail.com (Garret Heaton)
Date: Mon, 24 Aug 2009 11:58:14 -0700
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com> 
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>

There is a solution to the reconnection issue posted
here<http://www.gelens.org/2008/09/12/reinitializing-twisted-connectionpool/>which
one of my friends improved upon. He wasn't on the list at the time of
this posting so I'm replying to this on his behalf. The improved solution
is:

class ReconnectingConnectionPool(adbapi.ConnectionPool):

    def _runInteraction(self, interaction, *args, **kw):
        try:
            return adbapi.ConnectionPool._runInteraction(self,
interaction, *args, **kw)
        except MySQLdb.OperationalError, e:
            if e[0] not in (2006, 2013):
                raise
            log.msg("RCP: got error %s, retrying operation" %(e))
            conn = self.connections.get(self.threadID())
            self.disconnect(conn)

            # try the interaction again
            return adbapi.ConnectionPool._runInteraction(self,
interaction, *args, **kw)

Also on GitHub: http://gist.github.com/174056

It's working well for both of us so far.


On Wed, Jul 22, 2009 at 7:06 AM, Clay Gerrard <clay.gerrard at rackspace.com>wrote:

> In my experience "re-running the query" has not been sufficient.
>
> All of the connections in the pool time out around the same time.
>
> Using cp_reconnect just forces the "idle" connection (cursor) to be removed
> from the pool before raising the generic "ConnectionLost":
>
>    def rollback(self):
>        if not self._pool.reconnect:
>            self._connection.rollback()
>            return
>
>        try:
>            self._connection.rollback()
>            curs = self._connection.cursor()
>            curs.execute(self._pool.good_sql)
>            curs.close()
>            self._connection.commit()
>            return
>        except:
>            log.err(None, "Rollback failed")
>
>        self._pool.disconnect(self._connection)
>
>        if self._pool.noisy:
>            log.msg("Connection lost.")
>
>        raise ConnectionLost()
>
> But when I go to re-run the query it's very unlikely that I'll get that
> same thread id again (and therefore a fresh connection).  More than likely
> I'll get another stale connection which will also get dropped.  Repeat ad
> infinitum
>
> I'm fairly sure the right thing to do is to make adbapi.Connection objects
> aware of their created time, and allow adbapi.ConnectionPool.connect to
> potentially refresh "old" connections based on an optional kwarg when
> creating the connection pool:
>
> "pool_recycle"
>
> That's what I'm working on anyway...
>
> Clay Gerrard
> Office: 210-312-3443
> Mobile: 210-788-9431
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] On Behalf Of Gabriel Rossetti
> Sent: Wednesday, July 22, 2009 1:34 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
>
> Hello Garret,
>
> yes, I finally did did something like that, I am currently testing the
> code.
>
> Thanks,
> Gabriel
>
> Garret Heaton wrote:
> > Instead of trying to keep the connection alive you can also just
> > reconnect when necessary. Example code here:
> >
> http://stackoverflow.com/questions/207981/how-to-enable-mysql-client-auto-re-connect-with-mysqldb/982873#982873
> >
> > On Tue, Jul 21, 2009 at 2:18 PM, Clay Gerrard
> > <clay.gerrard at rackspace.com <mailto:clay.gerrard at rackspace.com>> wrote:
> >
> >     Regarding the original question:
> >     "how to make mysql's idle timeouts shorter so that I can debug my
> >     code?"
> >
> >     You should be able to do that in the mysql shell:
> >     mysql> show variables like '%timeout%';
> >     +----------------------------+-------+
> >     | Variable_name              | Value |
> >     +----------------------------+-------+
> >     | connect_timeout            | 5     |
> >     | delayed_insert_timeout     | 300   |
> >     | innodb_lock_wait_timeout   | 50    |
> >     | innodb_rollback_on_timeout | OFF   |
> >     | interactive_timeout        | 600   |
> >     | net_read_timeout           | 30    |
> >     | net_write_timeout          | 60    |
> >     | slave_net_timeout          | 3600  |
> >     | table_lock_wait_timeout    | 50    |
> >     | wait_timeout               | 600   |
> >     +----------------------------+-------+
> >     10 rows in set (0.00 sec)
> >
> >     > set global variable interactive_timeout = 5;
> >
> >     But in my experience MySQLdb makes the idle connection timeout
> >     very difficult to debug effectively.
> >
> >     Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw
> >     like sqlalchemy?
> >
> >     Clay Gerrard
> >     Office: 210-312-3443
> >     Mobile: 210-788-9431
> >     -----Original Message-----
> >     From: twisted-python-bounces at twistedmatrix.com
> >     <mailto:twisted-python-bounces at twistedmatrix.com>
> >     [mailto:twisted-python-bounces at twistedmatrix.com
> >     <mailto:twisted-python-bounces at twistedmatrix.com>] On Behalf Of
> >     Werner Thie
> >     Sent: Tuesday, July 21, 2009 4:05 PM
> >     To: Twisted general discussion
> >     Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts,
> >     mysql - OT
> >
> >     Hi Gabriel
> >
> >     had the same problem, solved it by having keepalive() called in a
> >     LoopingCall(), MySQL sitting at defaults timingwise.
> >
> >     DB_DRIVER = "MySQLdb"
> >
> >     USERDB_ARGS = {
> >       'host': '',
> >       'db': '',
> >       'user': '',
> >       'passwd': '',
> >       'cp_reconnect': True
> >     }
> >
> >     storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
> >
> >     ka = task.LoopingCall(storekeeper.store.keepAlive)
> >     ka.start(300)
> >
> >     class StoreKeeper(object):
> >       def __init__(self, dbapiName, **params):
> >         self.store = Store(dbapiName, **params)
> >
> >       def dbdisconn(self, reason):
> >         print 'db disconnected for ', reason
> >
> >       def keepAlive(self):
> >         d = self.store.runQuery('SELECT 1')
> >         d.addErrback(self.dbdisconn)
> >
> >
> >     #with store being something like:
> >
> >     class Store(object):
> >       def __init__(self, dbapiName, **params):
> >         self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
> >         print self.__pool.__getstate__()
> >         self.runOperation('SET autocommit = %s', 1)
> >
> >       def runQuery(self, query, *args):
> >         d = self.__pool.runInteraction(self.mapQuery, query, args)
> >         return d
> >
> >       def mapQuery(self, curs, query, *args):
> >         try:
> >           curs.execute(query, *args)
> >         except adbapi.ConnectionLost:
> >           print
> >           print '++++++++++++ rerunning query'
> >           print
> >           curs.execute(query, *args)                    #simply resend
> >     query, assuming cp_reconnect=True
> >         result = curs.fetchall()
> >         columns = [d[0] for d in curs.description]
> >         return [dict(zip(columns, r)) for r in result]
> >
> >       def runOperation(self, query, *args):
> >         d = self.__pool.runOperation(query, args)
> >         return d
> >
> >       def runInteraction(self, fun, queries=(), args=()):
> >         d = self.__pool.runInteraction(fun, queries, args)
> >         return d
> >
> >
> >     HTH, Werner
> >
> >     Gabriel Rossetti wrote:
> >     > Hello everyone,
> >     >
> >     > I have been experiencing the ConnectionError with adbapi &
> >     > cp_reconnect=True. I know that because of the cp_reconnect=True
> >     param
> >     > tha is reconnects and that the query is not re-run. I have
> >     written some
> >     > code that should re-run the query in that case (if I get a
> >     Failure back
> >     > because of a ConnectionError), but it doesn't seem to work. My
> >     question
> >     > is if anyone knows how to make mysql's idle timeouts shorter so
> >     that I
> >     > can debug my code? I searched google and the mysql site with no
> >     luck.
> >     >
> >     > thank you,
> >     > Gabriel
> >     >
> >     > _______________________________________________
> >     > Twisted-Python mailing list
> >     > Twisted-Python at twistedmatrix.com
> >     <mailto:Twisted-Python at twistedmatrix.com>
> >     > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >     _______________________________________________
> >     Twisted-Python mailing list
> >     Twisted-Python at twistedmatrix.com
> >     <mailto:Twisted-Python at twistedmatrix.com>
> >     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >     Confidentiality Notice: This e-mail message (including any attached
> or
> >     embedded documents) is intended for the exclusive and confidential
> >     use of the
> >     individual or entity to which this message is addressed, and
> >     unless otherwise
> >     expressly indicated, is confidential and privileged information of
> >     Rackspace.
> >     Any dissemination, distribution or copying of the enclosed
> >     material is prohibited.
> >     If you receive this transmission in error, please notify us
> >     immediately by e-mail
> >     at abuse at rackspace.com <mailto:abuse at rackspace.com>, and delete
> >     the original message.
> >     Your cooperation is appreciated.
> >
> >
> >     _______________________________________________
> >     Twisted-Python mailing list
> >     Twisted-Python at twistedmatrix.com
> >     <mailto:Twisted-Python at twistedmatrix.com>
> >     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> Confidentiality Notice: This e-mail message (including any attached or
> embedded documents) is intended for the exclusive and confidential use of
> the
> individual or entity to which this message is addressed, and unless
> otherwise
> expressly indicated, is confidential and privileged information of
> Rackspace.
> Any dissemination, distribution or copying of the enclosed material is
> prohibited.
> If you receive this transmission in error, please notify us immediately by
> e-mail
> at abuse at rackspace.com, and delete the original message.
> Your cooperation is appreciated.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090824/97e94adb/attachment.html>

From paulswartz at gmail.com  Mon Aug 24 14:31:10 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Mon, 24 Aug 2009 16:31:10 -0400
Subject: [Twisted-Python] SFTP 2.
In-Reply-To: <430a10ee0908132331w1eef50d8t1d366084b6c618d1@mail.gmail.com>
References: <430a10ee0908132331w1eef50d8t1d366084b6c618d1@mail.gmail.com>
Message-ID: <324cfb540908241331v2485fe64hddfd29fc7efb2a46@mail.gmail.com>

(cc-ing the mailing list to move the discussion there)

On Fri, Aug 14, 2009 at 2:31 AM, Simply4IT<simply4it at gmail.com> wrote:
> Dear Paul,
>
> unfortunately I was not really specific in what do I really want to achieve.
> I would like to be able to send and receive files through a secure
> connection. I don't really need any other features/functions of an SSH
> server, just the ones which are needed for serving files. As you are using
> Conch frequently, I would appreciate if you  could give me some useful
> information and suggestion.

You're looking for twisted.conch.ssh.filetransfer, which implements
both client/server ends of the SFTP protocol.  I think some people on
the list have examples of using it in production; otherwise I'd look
at the unittests.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin



From phil at bubblehouse.org  Mon Aug 24 16:53:45 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 24 Aug 2009 18:53:45 -0400
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
Message-ID: <EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>

On Aug 24, 2009, at 2:58 PM, Garret Heaton wrote:
> There is a solution to the reconnection issue posted here which one  
> of my friends improved upon. He wasn't on the list at the time of  
> this posting so I'm replying to this on his behalf. The improved  
> solution is:
[snip]
>             # try the interaction again
>             return adbapi.ConnectionPool._runInteraction(self,  
> interaction, *args, **kw)

The thing that would concern me is that you can get a ConnectionLost  
error for a variety of different reasons, and they might not be raised  
by the first query issued in your interaction.

I feel like I can think of any number of ways running the same series  
of queries twice would be a bad thing. I have some very important  
queries that are run inside a interaction because they do a series of  
operations in sequence. I can't use transactions because my tables are  
MyISAM.

Perhaps I'm jumping at shadows, but automatic re-querying just seems  
dangerous to me. Only the particular application knows when it's safe.

-phil
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090824/46f2b990/attachment.html>

From filoufake-python at yahoo.fr  Mon Aug 24 17:07:51 2009
From: filoufake-python at yahoo.fr (filoufake-python at yahoo.fr)
Date: Mon, 24 Aug 2009 23:07:51 +0000 (GMT)
Subject: [Twisted-Python] Re : Telnet server using Twisted and
	AuthenticatingTelnetProtocol
In-Reply-To: <20090820164821.7726.1422282903.divmod.xquotient.79@localhost.localdomain>
References: <986632.28669.qm@web26103.mail.ukl.yahoo.com>
	<20090820164821.7726.1422282903.divmod.xquotient.79@localhost.localdomain>
Message-ID: <140670.22919.qm@web26108.mail.ukl.yahoo.com>

Thank you Jean-Paul for replying,

I still have some things that I don't understand:

If I put your piece of code in my factory's protocol, I can connect to the server but as soon as I enter the username, I got the an error message telling that Server doesn't support "will" ('Server' object has no attribute 'will').

2009-08-25 00:32:40+0200 [-] Log opened.
2009-08-25 00:32:40+0200 [-] twisted.internet.protocol.ServerFactory starting on 4738
2009-08-25 00:32:40+0200 [-] Starting factory <twisted.internet.protocol.ServerFactory instance at 0x00D828F0>
2009-08-25 00:32:45+0200 [AuthenticatingTelnetProtocol,0,127.0.0.1] Unhandled Error
        Traceback (most recent call last):
          File "C:\Python26\lib\site-packages\twisted\python\log.py", line 84, in callWithLogger
            return callWithContext({"system": lp}, func, *args, **kw)
          File "C:\Python26\lib\site-packages\twisted\python\log.py", line 69, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "C:\Python26\lib\site-packages\twisted\python\context.py", line 59, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, **kw)
          File "C:\Python26\lib\site-packages\twisted\python\context.py", line 37, in callWithContext
            return func(*args,**kw)
        --- <exception caught here> ---
          File "C:\Python26\lib\site-packages\twisted\internet\selectreactor.py", line 146, in _doReadOrWrite
            why = getattr(selectable, method)()
          File "C:\Python26\lib\site-packages\twisted\internet\tcp.py", line 463, in doRead
            return self.protocol.dataReceived(data)
          File "C:\Python26\lib\site-packages\twisted\protocols\basic.py", line 231, in dataReceived
            why = self.lineReceived(line)
          File "C:\Python26\lib\site-packages\twisted\conch\telnet.py", line 925, in lineReceived
            newState = getattr(self, "telnet_" + oldState)(line)
          File "C:\Python26\lib\site-packages\twisted\conch\telnet.py", line 967, in telnet_User
            self.transport.will(ECHO)
        exceptions.AttributeError: 'Server' object has no attribute 'will'

I understand that this has something to do with TelnetTranport but how to implement it?
I read the telnet_echo.tac but in my case I have to manage the portal also and that is a litle bit too complex for me.

You say also that AuthenticatingTelnetProtocol  expects to be connected to an ITelnetTransport, but the documentation says "When the information is collected, it is passed to a portal and an avatar 
implementing ITelnetProtocol is requested". 
I'm lost.

May I abuse to ask you to tell how to do?

Many thanks

Philippe



      



From ddwiggins at advpubtech.com  Mon Aug 24 19:03:09 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon, 24 Aug 2009 18:03:09 -0700
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
References: <4A645A66.1000301@arimaz.com>
	<4A662D80.1060009@thiengineering.ch>	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>	<4A66B2ED.3090503@arimaz.com>	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
Message-ID: <h6vd8e$uru$1@ger.gmane.org>

Phil Christensen wrote:
> The thing that would concern me is that you can get a ConnectionLost 
> error for a variety of different reasons, and they might not be raised 
> by the first query issued in your interaction.
> 
> I feel like I can think of any number of ways running the same series of 
> queries twice would be a bad thing. I have some very important queries 
> that are run inside a interaction because they do a series of operations 
> in sequence. I can't use transactions because my tables are MyISAM.
> 
> Perhaps I'm jumping at shadows, but automatic re-querying just seems 
> dangerous to me. Only the particular application knows when it's safe.

I agree strongly.  A case I've run into with Sql Server accessed through 
ODBC: some work is done resulting in some open connections in the pool. 
  At some point, the DB server goes down, or maybe connectivity is lost, 
and later restored.  Any following attempt to use one of the pool 
connections will fail, with one of several error messages, and I at 
least was unable to use them to clearly distinguish this case from an 
error on the request itself.

I wound up putting a wrapper around adbapi that closes the connection 
after each request.

-- 
Don Dwiggins
Advanced Publishing Technology




From powdahound at gmail.com  Mon Aug 24 19:14:46 2009
From: powdahound at gmail.com (Garret Heaton)
Date: Mon, 24 Aug 2009 18:14:46 -0700
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com> 
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com> 
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
Message-ID: <812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>

On Mon, Aug 24, 2009 at 3:53 PM, Phil Christensen <phil at bubblehouse.org>wrote:

> On Aug 24, 2009, at 2:58 PM, Garret Heaton wrote:
>
> There is a solution to the reconnection issue posted here<http://www.gelens.org/2008/09/12/reinitializing-twisted-connectionpool/>which one of my friends improved upon. He wasn't on the list at the time of
> this posting so I'm replying to this on his behalf. The improved solution
> is:
>
> [snip]
>
>             # try the interaction again
>             return adbapi.ConnectionPool._runInteraction(self, interaction, *args, **kw)
>
> The thing that would concern me is that you can get a ConnectionLost error
> for a variety of different reasons, and they might not be raised by the
> first query issued in your interaction.
>

Interesting, I'll have to look in to this a bit more.


> I feel like I can think of any number of ways running the same series of
> queries twice would be a bad thing. I have some very important queries that
> are run inside a interaction because they do a series of operations in
> sequence. I can't use transactions because my tables are MyISAM.
>
> Perhaps I'm jumping at shadows, but automatic re-querying just seems
> dangerous to me. Only the particular application knows when it's safe.
>

This is very true, and I should have mentioned it in my reply. Re-running
queries is only possible when you know your application can do it safely.

How would you solve the issue of a lost connection in your case?


> -phil
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090824/c2913c4a/attachment.html>

From glyph at twistedmatrix.com  Tue Aug 25 06:44:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 25 Aug 2009 08:44:54 -0400
Subject: [Twisted-Python] exarkun changed [#3974 - reader/writer
	interface docs incomplete]
In-Reply-To: <E1Mfv0W-0005ZM-RB@cube.twistedmatrix.com>
References: <E1Mfv0W-0005ZM-RB@cube.twistedmatrix.com>
Message-ID: <d9047f780908250544j4834025u98f60a9934a1c907@mail.gmail.com>

-- 
Apologies for any cryptic brevity or errors, this was sent from a mobile
device.

On Aug 25, 2009 8:20 AM, <trac at twistedmatrix.com> wrote:

Ticket [#3974 - reader/writer interface docs incomplete] changed by exarkun
<exarkun at twistedmatrix.com>:

#3980 was a duplicate of this.

---------

---------
http://twistedmatrix.com/trac/ticket/3974
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090825/9e5a50a7/attachment.html>

From phil at bubblehouse.org  Tue Aug 25 08:31:19 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 25 Aug 2009 10:31:19 -0400
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
Message-ID: <4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>

On Aug 24, 2009, at 9:14 PM, Garret Heaton wrote:
> On Mon, Aug 24, 2009 at 3:53 PM, Phil Christensen <phil at bubblehouse.org 
> > wrote:
>> I feel like I can think of any number of ways running the same  
>> series of queries twice would be a bad thing. I have some very  
>> important queries that are run inside a interaction because they do  
>> a series of operations in sequence. I can't use transactions  
>> because my tables are MyISAM.
>>
>> Perhaps I'm jumping at shadows, but automatic re-querying just  
>> seems dangerous to me. Only the particular application knows when  
>> it's safe.
>
> This is very true, and I should have mentioned it in my reply. Re- 
> running queries is only possible when you know your application can  
> do it safely.
>
> How would you solve the issue of a lost connection in your case?

Honestly, I have never actually solved it. I pretty much only write  
webapps these days, so when a ConnectionLost happens, it just  
propagates up the stack and displays an error to the user. Not ideal,  
by any means.

However, in my case, the only time I really get ConnectionLost errors  
is when the MySQL connection timeout closes idle connections in the  
pool. I accidentally fixed this months ago by setting up Nagios to  
monitor the web services, and it runs often enough that it usually  
hits every open connection within that timeout (8hrs).

The only safe way I can think of to do this is run a simple query  
(like SELECT 1) before every interaction. Then you would only  
reconnect/requery if that fails.

The only problem with this is that it still doesn't protect you from  
lost connections that occur during a multi-query interaction.

-phil



From p.mayers at imperial.ac.uk  Tue Aug 25 09:25:35 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 25 Aug 2009 16:25:35 +0100
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
References: <4A645A66.1000301@arimaz.com>
	<4A662D80.1060009@thiengineering.ch>	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>	<4A66B2ED.3090503@arimaz.com>	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
Message-ID: <4A94026F.2090203@imperial.ac.uk>

Phil Christensen wrote:
> On Aug 24, 2009, at 9:14 PM, Garret Heaton wrote:
>> On Mon, Aug 24, 2009 at 3:53 PM, Phil Christensen <phil at bubblehouse.org 
>>> wrote:
>>> I feel like I can think of any number of ways running the same  
>>> series of queries twice would be a bad thing. I have some very  
>>> important queries that are run inside a interaction because they do  
>>> a series of operations in sequence. I can't use transactions  
>>> because my tables are MyISAM.
>>>
>>> Perhaps I'm jumping at shadows, but automatic re-querying just  
>>> seems dangerous to me. Only the particular application knows when  
>>> it's safe.
>> This is very true, and I should have mentioned it in my reply. Re- 
>> running queries is only possible when you know your application can  
>> do it safely.
>>
>> How would you solve the issue of a lost connection in your case?
> 
> Honestly, I have never actually solved it. I pretty much only write  
> webapps these days, so when a ConnectionLost happens, it just  
> propagates up the stack and displays an error to the user. Not ideal,  
> by any means.

It's hard to apply in the general case, but I like the way Zope handles 
this using the per-request transaction machinery.

Basically, if any processing generates a "retry"able exception, all 
transactions attached to the request are rolled back and the entire 
request re-submitted.

This works really, really well for HTML<->SQL CRUD apps.

I can't see how Twisted could support that currently, given the 
deferToThread == 1 transaction nature of adbapi.



From phil at bubblehouse.org  Tue Aug 25 09:29:32 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 25 Aug 2009 11:29:32 -0400
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A94026F.2090203@imperial.ac.uk>
References: <4A645A66.1000301@arimaz.com>
	<4A662D80.1060009@thiengineering.ch>	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>	<4A66B2ED.3090503@arimaz.com>	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
Message-ID: <4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>

On Aug 25, 2009, at 11:25 AM, Phil Mayers wrote:
> Phil Christensen wrote:
>> Honestly, I have never actually solved it. I pretty much only write
>> webapps these days, so when a ConnectionLost happens, it just
>> propagates up the stack and displays an error to the user. Not ideal,
>> by any means.
>
> It's hard to apply in the general case, but I like the way Zope  
> handles
> this using the per-request transaction machinery.
>
> Basically, if any processing generates a "retry"able exception, all
> transactions attached to the request are rolled back and the entire
> request re-submitted.

That's definitely the preferable solution, but an additional problem  
is you still can't use transactions with MyISAM-backed tables.

Yeah yeah, we should be using postgres, sqllite, or even InnoDB ;-)

Of course sometimes that's just not an option...

-phil



From mlbright at gmail.com  Wed Aug 26 14:56:55 2009
From: mlbright at gmail.com (Martin-Louis Bright)
Date: Wed, 26 Aug 2009 16:56:55 -0400
Subject: [Twisted-Python] deciding to use twisted or not
Message-ID: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>

Hi!

I would like to write a small daemon that monitors (tails) a server log,
parses the entries and sends HTTP requests based on some of those entries. I
would like it if the reading of the log file and the sending of http
requests were asynchronous. Should I use twisted for this? Or is twisted
overkill...

Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090826/3a2340c3/attachment.html>

From clay.gerrard at rackspace.com  Wed Aug 26 15:49:51 2009
From: clay.gerrard at rackspace.com (Clay Gerrard)
Date: Wed, 26 Aug 2009 16:49:51 -0500
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
	<4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
Message-ID: <18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>

I see this issue (ConnectionLost on MySQL) come up at least once a month.  It's actually the reason I originally joined this discussion list, but I've yet to see a wholly satisfactory solution.

Since there is no one true perfect generic way to safely rerun a failed interaction after ConnectionLost - the smart thing to do is just raise the exception and let the application deal with (or bomb out on) what *should* be a rare occurrence indicating some sort of problem.  

adabapi does exactly this.

However, with MySQL (>=v5.0 at least) you HAVE to make plans to deal with ConnectionLost (or "MySQL server has gone away" if cp_reconnect != True) or your twisted app WILL be quite broken.  Unfortunately, there's no obvious way to separate a real connection "problem" from the perfectly normal behavior of the MySQL server closing an idle connection without making your code provider specific.
e.g.
from MySQLdb import OperationalError

I've seen (and even begrudgingly implemented) non provider specific solutions that just create a new connection every time, or that qualify connections returned from the pool with "good_sql" before handing them over to the app.  But, that overhead is obviously not acceptable in many situations.

I suggest "the right way(tm)" to fix this is with an optional pool_recycle kwarg that sets the maximum time that a connection can be reused before it must be recycled (many ORM's provide precedent for this solution - sqlalchemy, dajngo.db, etc.)

reconnectionpool.py

'''
Created on Aug 26, 2009

@author: clayg
'''

from time import time

from twisted.enterprise import adbapi
from twisted.python import log

class ReConnectionPool(adbapi.ConnectionPool):
    '''
    subclass of adbapi.ConnectionPool that supports pool_recycle
    pool_recycle disabled by default (-1)
    '''


    def __init__(self, *args, **kwargs):
        self.pool_recycle = kwargs.pop('pool_recycle', -1)
        self.conn_starttime = {} # connections starttime, hashed on thread id
        adbapi.ConnectionPool.__init__(self, *args, **kwargs)
    
    def connect(self, *args, **kwargs):
        # ask ConnectionPool for a connection
        conn = adbapi.ConnectionPool.connect(self, *args, **kwargs)
        # if pool_recycling is enabled
        if self.pool_recycle > -1:
            # get the start time for this connection
            tid = self.threadID()
            starttime = self.conn_starttime.get(tid)
            now = time()
            if not starttime:
                # init starttime for new conn
                self.conn_starttime[tid] = starttime = now
                log.msg("Connection %s was created at %s." % (tid, now))
                
            # if the connection is older than limit in pool_recycle
            if (now - starttime >= self.pool_recycle):
                self.disconnect(conn)
                log.msg("Connection %s was recycled at %s." % (tid, now))
                conn = adbapi.ConnectionPool.connect(self, *args, **kwargs)
                self.conn_starttime[tid] = now
            
        return conn

I think it be quite a bit less messy if it was implemented inside the ConnectionPool class instead of a subclass.  Someone else could probably do a much better job than I, although I wouldn't mind taking a crack at it.

Thoughts?

Clay Gerrard
Office: 210-312-3443
Mobile: 210-788-9431

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Phil Christensen
Sent: Tuesday, August 25, 2009 10:30 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT

On Aug 25, 2009, at 11:25 AM, Phil Mayers wrote:
> Phil Christensen wrote:
>> Honestly, I have never actually solved it. I pretty much only write
>> webapps these days, so when a ConnectionLost happens, it just
>> propagates up the stack and displays an error to the user. Not ideal,
>> by any means.
>
> It's hard to apply in the general case, but I like the way Zope  
> handles
> this using the per-request transaction machinery.
>
> Basically, if any processing generates a "retry"able exception, all
> transactions attached to the request are rolled back and the entire
> request re-submitted.

That's definitely the preferable solution, but an additional problem  
is you still can't use transactions with MyISAM-backed tables.

Yeah yeah, we should be using postgres, sqllite, or even InnoDB ;-)

Of course sometimes that's just not an option...

-phil

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Confidentiality Notice: This e-mail message (including any attached or
embedded documents) is intended for the exclusive and confidential use of the
individual or entity to which this message is addressed, and unless otherwise
expressly indicated, is confidential and privileged information of Rackspace. 
Any dissemination, distribution or copying of the enclosed material is prohibited.
If you receive this transmission in error, please notify us immediately by e-mail
at abuse at rackspace.com, and delete the original message. 
Your cooperation is appreciated.




From exarkun at twistedmatrix.com  Wed Aug 26 16:25:58 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 26 Aug 2009 22:25:58 -0000
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
	<4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
	<18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <20090826222558.11298.2068421709.divmod.xquotient.71@localhost.localdomain>

On 09:49 pm, clay.gerrard at rackspace.com wrote:
>I see this issue (ConnectionLost on MySQL) come up at least once a 
>month.  It's actually the reason I originally joined this discussion 
>list, but I've yet to see a wholly satisfactory solution.
>
>Since there is no one true perfect generic way to safely rerun a failed 
>interaction after ConnectionLost - the smart thing to do is just raise 
>the exception and let the application deal with (or bomb out on) what 
>*should* be a rare occurrence indicating some sort of problem.
>
>adabapi does exactly this.
>
>However, with MySQL (>=v5.0 at least) you HAVE to make plans to deal 
>with ConnectionLost (or "MySQL server has gone away" if cp_reconnect != 
>True) or your twisted app WILL be quite broken.  Unfortunately, there's 
>no obvious way to separate a real connection "problem" from the 
>perfectly normal behavior of the MySQL server closing an idle 
>connection without making your code provider specific.
>e.g.
>from MySQLdb import OperationalError
>
>I've seen (and even begrudgingly implemented) non provider specific 
>solutions that just create a new connection every time, or that qualify 
>connections returned from the pool with "good_sql" before handing them 
>over to the app.  But, that overhead is obviously not acceptable in 
>many situations.
>
>I suggest "the right way(tm)" to fix this is with an optional 
>pool_recycle kwarg that sets the maximum time that a connection can be 
>reused before it must be recycled (many ORM's provide precedent for 
>this solution - sqlalchemy, dajngo.db, etc.)

Is this irrespective of idle time?  It sounds like not, though the MySQL 
idle timeout is the motivation you mention above.
>
>reconnectionpool.py
>
>'''
>Created on Aug 26, 2009
>
>@author: clayg
>'''
>
>from time import time
>
>from twisted.enterprise import adbapi
>from twisted.python import log
>
>class ReConnectionPool(adbapi.ConnectionPool):
>    '''
>    subclass of adbapi.ConnectionPool that supports pool_recycle
>    pool_recycle disabled by default (-1)
>    '''
>
>
>    def __init__(self, *args, **kwargs):
>        self.pool_recycle = kwargs.pop('pool_recycle', -1)
>        self.conn_starttime = {} # connections starttime, hashed on 
>thread id
>        adbapi.ConnectionPool.__init__(self, *args, **kwargs)
>
>    def connect(self, *args, **kwargs):
>        # ask ConnectionPool for a connection
>        conn = adbapi.ConnectionPool.connect(self, *args, **kwargs)
>        # if pool_recycling is enabled
>        if self.pool_recycle > -1:
>            # get the start time for this connection
>            tid = self.threadID()
>            starttime = self.conn_starttime.get(tid)
>            now = time()
>            if not starttime:
>                # init starttime for new conn
>                self.conn_starttime[tid] = starttime = now
>                log.msg("Connection %s was created at %s." % (tid, now))
>
>            # if the connection is older than limit in pool_recycle
>            if (now - starttime >= self.pool_recycle):
>                self.disconnect(conn)
>                log.msg("Connection %s was recycled at %s." % (tid, 
>now))
>                conn = adbapi.ConnectionPool.connect(self, *args, 
>**kwargs)
>                self.conn_starttime[tid] = now
>
>        return conn
>
>I think it be quite a bit less messy if it was implemented inside the 
>ConnectionPool class instead of a subclass.  Someone else could 
>probably do a much better job than I, although I wouldn't mind taking a 
>crack at it.
>
>Thoughts?

This could be a cool feature.  I'm sure a lot of people would certainly 
be happy for there to be a simple answer to the monthly MySQL question 
you referred to above.

Some random thoughts:

  * you should use the reactor to keep track of time - reactor.seconds() 
should someday actually be more reliable than time.time() (but it's the 
same today); also, parameterize the reactor and use reactor.seconds() 
and the code is more easily testable.
  * this will throw reconnect overhead in front of whichever query 
happens to get issued to a thread which has a connection which needs to 
be recycled.  If it avoids a connection lost error, that's great; if it 
doesn't, then it's just overhead.  This, combined with the fact that 
queries are dispatched to basically a random connection, might not be 
too nice.  It could be cool to do the reconnecting more proactively in 
idle threads and improve the dispatch logic to give preference to fresh, 
available connections when possible.
  * tests tests tests ;)

Jean-Paul



From clay.gerrard at rackspace.com  Wed Aug 26 17:08:30 2009
From: clay.gerrard at rackspace.com (Clay Gerrard)
Date: Wed, 26 Aug 2009 18:08:30 -0500
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <20090826222558.11298.2068421709.divmod.xquotient.71@localhost.localdomain>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
	<4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
	<18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>
	<20090826222558.11298.2068421709.divmod.xquotient.71@localhost.localdomain>
Message-ID: <30396_1251328118_n7QN8W2g021582_5DA4635225CBE24FB33D34EFB6C5304714B31409A0@DFW1MXM01.RACKSPACE.CORP>

The way that sqlalchemy implements pool_recycle is "irrespective of idle time" best I can tell from looking at it.  Keeping track of the last_used_time seems like it would have been equally reasonable, although perhaps even additional overhead.

I'm not sure I understand what you mean by "parameterize the reactor" - pass it as an argument when you initialize the (Re)ConnectionPool?  Can you point me to a twisted class that does this as an example?

I agree it would be very cool "to do the reconnecting more proactively in idle threads" - I'll have to think on that, do you know off-hand of any analogs?

Thanks for the feedback,

Clay Gerrard
Office: 210-312-3443
Mobile: 210-788-9431

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
Sent: Wednesday, August 26, 2009 5:26 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT

On 09:49 pm, clay.gerrard at rackspace.com wrote:
>I see this issue (ConnectionLost on MySQL) come up at least once a 
>month.  It's actually the reason I originally joined this discussion 
>list, but I've yet to see a wholly satisfactory solution.
>
>Since there is no one true perfect generic way to safely rerun a failed 
>interaction after ConnectionLost - the smart thing to do is just raise 
>the exception and let the application deal with (or bomb out on) what 
>*should* be a rare occurrence indicating some sort of problem.
>
>adabapi does exactly this.
>
>However, with MySQL (>=v5.0 at least) you HAVE to make plans to deal 
>with ConnectionLost (or "MySQL server has gone away" if cp_reconnect != 
>True) or your twisted app WILL be quite broken.  Unfortunately, there's 
>no obvious way to separate a real connection "problem" from the 
>perfectly normal behavior of the MySQL server closing an idle 
>connection without making your code provider specific.
>e.g.
>from MySQLdb import OperationalError
>
>I've seen (and even begrudgingly implemented) non provider specific 
>solutions that just create a new connection every time, or that qualify 
>connections returned from the pool with "good_sql" before handing them 
>over to the app.  But, that overhead is obviously not acceptable in 
>many situations.
>
>I suggest "the right way(tm)" to fix this is with an optional 
>pool_recycle kwarg that sets the maximum time that a connection can be 
>reused before it must be recycled (many ORM's provide precedent for 
>this solution - sqlalchemy, dajngo.db, etc.)

Is this irrespective of idle time?  It sounds like not, though the MySQL 
idle timeout is the motivation you mention above.
>
>reconnectionpool.py
>
>'''
>Created on Aug 26, 2009
>
>@author: clayg
>'''
>
>from time import time
>
>from twisted.enterprise import adbapi
>from twisted.python import log
>
>class ReConnectionPool(adbapi.ConnectionPool):
>    '''
>    subclass of adbapi.ConnectionPool that supports pool_recycle
>    pool_recycle disabled by default (-1)
>    '''
>
>
>    def __init__(self, *args, **kwargs):
>        self.pool_recycle = kwargs.pop('pool_recycle', -1)
>        self.conn_starttime = {} # connections starttime, hashed on 
>thread id
>        adbapi.ConnectionPool.__init__(self, *args, **kwargs)
>
>    def connect(self, *args, **kwargs):
>        # ask ConnectionPool for a connection
>        conn = adbapi.ConnectionPool.connect(self, *args, **kwargs)
>        # if pool_recycling is enabled
>        if self.pool_recycle > -1:
>            # get the start time for this connection
>            tid = self.threadID()
>            starttime = self.conn_starttime.get(tid)
>            now = time()
>            if not starttime:
>                # init starttime for new conn
>                self.conn_starttime[tid] = starttime = now
>                log.msg("Connection %s was created at %s." % (tid, now))
>
>            # if the connection is older than limit in pool_recycle
>            if (now - starttime >= self.pool_recycle):
>                self.disconnect(conn)
>                log.msg("Connection %s was recycled at %s." % (tid, 
>now))
>                conn = adbapi.ConnectionPool.connect(self, *args, 
>**kwargs)
>                self.conn_starttime[tid] = now
>
>        return conn
>
>I think it be quite a bit less messy if it was implemented inside the 
>ConnectionPool class instead of a subclass.  Someone else could 
>probably do a much better job than I, although I wouldn't mind taking a 
>crack at it.
>
>Thoughts?

This could be a cool feature.  I'm sure a lot of people would certainly 
be happy for there to be a simple answer to the monthly MySQL question 
you referred to above.

Some random thoughts:

  * you should use the reactor to keep track of time - reactor.seconds() 
should someday actually be more reliable than time.time() (but it's the 
same today); also, parameterize the reactor and use reactor.seconds() 
and the code is more easily testable.
  * this will throw reconnect overhead in front of whichever query 
happens to get issued to a thread which has a connection which needs to 
be recycled.  If it avoids a connection lost error, that's great; if it 
doesn't, then it's just overhead.  This, combined with the fact that 
queries are dispatched to basically a random connection, might not be 
too nice.  It could be cool to do the reconnecting more proactively in 
idle threads and improve the dispatch logic to give preference to fresh, 
available connections when possible.
  * tests tests tests ;)

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Confidentiality Notice: This e-mail message (including any attached or
embedded documents) is intended for the exclusive and confidential use of the
individual or entity to which this message is addressed, and unless otherwise
expressly indicated, is confidential and privileged information of Rackspace.
Any dissemination, distribution or copying of the enclosed material is prohibited.
If you receive this transmission in error, please notify us immediately by e-mail
at abuse at rackspace.com, and delete the original message.
Your cooperation is appreciated.




From glyph at twistedmatrix.com  Wed Aug 26 19:41:27 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 26 Aug 2009 21:41:27 -0400
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
Message-ID: <d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>

On Wed, Aug 26, 2009 at 4:56 PM, Martin-Louis Bright <mlbright at gmail.com>wrote:

> I would like to write a small daemon that monitors (tails) a server log,
> parses the entries and sends HTTP requests based on some of those entries. I
> would like it if the reading of the log file and the sending of http
> requests were asynchronous. Should I use twisted for this? Or is twisted
> overkill...
>
Twisted would be perfectly appropriate for this!  The HTTP requests will
certainly be non-blocking, assuming you use twisted.web.client (or the new,
better thing which I hope will be released before we all get old).

In fact, if anything, Twisted is under-kill; you'll need to go a bit
further.  The one minor issue is that Twisted has no explicit way to do
asynchronous file I/O (because most operating systems provide a bewildering
array of not-really-working systems for non-blocking file I/O, so it would
be challenging for Twisted to do in a way that was useful).  There are a
number of ways to emulate it though; for log files (which are fairly low
volume, and almost by definition will immediately be in your filesystem
cache as the parts you want to read become available) you can just do a
LoopingCall() which does .read() on a file that it leaves open to retrieve
the next chunk of data, and that will probably be good enough.  In practice
you won't actually block doing this read() because your kernel is just going
to pull the bytes directly out of filesystem cache memory and hand them back
to you.  It is of course possible to have to wait for the disk or even the
network, depending on your underlying filesystem.

I just filed http://twistedmatrix.com/trac/ticket/3983 for a more thorough
solution (mostly in the hopes that somebody will close it as a duplicate and
point to some pre-existing issue I couldn't find through search) so you can
monitor future discussion there if you like.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090826/076162d0/attachment.html>

From cary.hull at gmail.com  Wed Aug 26 19:54:04 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Wed, 26 Aug 2009 18:54:04 -0700
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
Message-ID: <3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>

On Wed, Aug 26, 2009 at 6:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On Wed, Aug 26, 2009 at 4:56 PM, Martin-Louis Bright <mlbright at gmail.com>wrote:
>
>> I would like to write a small daemon that monitors (tails) a server log,
>> parses the entries and sends HTTP requests based on some of those entries. I
>> would like it if the reading of the log file and the sending of http
>> requests were asynchronous. Should I use twisted for this? Or is twisted
>> overkill...
>>
> Twisted would be perfectly appropriate for this!  The HTTP requests will
> certainly be non-blocking, assuming you use twisted.web.client (or the new,
> better thing which I hope will be released before we all get old).
>
> In fact, if anything, Twisted is under-kill; you'll need to go a bit
> further.  The one minor issue is that Twisted has no explicit way to do
> asynchronous file I/O (because most operating systems provide a bewildering
> array of not-really-working systems for non-blocking file I/O, so it would
> be challenging for Twisted to do in a way that was useful).  There are a
> number of ways to emulate it though; for log files (which are fairly low
> volume, and almost by definition will immediately be in your filesystem
> cache as the parts you want to read become available) you can just do a
> LoopingCall() which does .read() on a file that it leaves open to retrieve
> the next chunk of data, and that will probably be good enough.  In practice
> you won't actually block doing this read() because your kernel is just going
> to pull the bytes directly out of filesystem cache memory and hand them back
> to you.  It is of course possible to have to wait for the disk or even the
> network, depending on your underlying filesystem.
>
> I just filed http://twistedmatrix.com/trac/ticket/3983 for a more thorough
> solution (mostly in the hopes that somebody will close it as a duplicate and
> point to some pre-existing issue I couldn't find through search) so you can
> monitor future discussion there if you like.
>

It would certainly be nice if Twisted supported async file io, but in this
case wouldn't a ProcessProtocol around 'tail -f' be a good solution as well?

-Cary


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090826/f9082060/attachment.html>

From glyph at twistedmatrix.com  Wed Aug 26 20:08:48 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 26 Aug 2009 22:08:48 -0400
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
Message-ID: <d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>

On Wed, Aug 26, 2009 at 9:54 PM, Cary Hull <cary.hull at gmail.com> wrote:

> It would certainly be nice if Twisted supported async file io, but in this
> case wouldn't a ProcessProtocol around 'tail -f' be a good solution as well?
>

That could work, but there are a few potential issues.  'tail' does slightly
different stuff on different platforms.  Maybe you're on Windows and it
isn't available.  Maybe it mangles your output (I know that some coreutils
tools try to be encoding-aware, I don't know if 'tail' is one).  Maybe you
want to get blocks of bytes off the end rather than lines, etc.  Then you
also need to worry about housekeeping for a subprocess, which always turns
out to be a little trickier than you first expect.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090826/560e3988/attachment.html>

From mlbright at gmail.com  Wed Aug 26 20:46:24 2009
From: mlbright at gmail.com (Martin-Louis Bright)
Date: Wed, 26 Aug 2009 22:46:24 -0400
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
	<d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
Message-ID: <3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>

Thanks! Your advice is much appreciated.

martin

On Wed, Aug 26, 2009 at 10:08 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

> On Wed, Aug 26, 2009 at 9:54 PM, Cary Hull <cary.hull at gmail.com> wrote:
>
>> It would certainly be nice if Twisted supported async file io, but in this
>> case wouldn't a ProcessProtocol around 'tail -f' be a good solution as well?
>>
>
> That could work, but there are a few potential issues.  'tail' does
> slightly different stuff on different platforms.  Maybe you're on Windows
> and it isn't available.  Maybe it mangles your output (I know that some
> coreutils tools try to be encoding-aware, I don't know if 'tail' is one).
>  Maybe you want to get blocks of bytes off the end rather than lines, etc.
>  Then you also need to worry about housekeeping for a subprocess, which
> always turns out to be a little trickier than you first expect.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090826/74b1844a/attachment.html>

From chris at stemcel.co.uk  Thu Aug 27 06:11:46 2009
From: chris at stemcel.co.uk (Chris Adams)
Date: Thu, 27 Aug 2009 13:11:46 +0100
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
	<d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
	<3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>
Message-ID: <4120a220908270511l7798458ak870c6c81176aa77d@mail.gmail.com>

If you're using a linux based system, you may have some luck setting
up syslogger to forward logging packets to the remote ip address, and
running the twisted daemon on the other box, and sending notifications
if the heartbeat from the monitored machine stops.

I was working on a project recently to set up a monitor a RFID based
access control system for building, that runs on
twisted/openwrt/linux, we used an approach like this.

The link below shows a sample twisted python file that runs on a
monitoring machine.

http://github.com/derfred/doord/blob/cd300a1cde930c07cd13d98be3e45cb89df79809/log_watcher.py



From lvh at laurensvh.be  Thu Aug 27 07:31:24 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 27 Aug 2009 15:31:24 +0200
Subject: [Twisted-Python] twisted.positioning progress report
Message-ID: <cedc0c090908270631x5cc2d283ucdcfc1087b12b6cc@mail.gmail.com>

Time for a little show and tell :-) Watch as line noise gets
transformed into beautiful Python structures:

http://paste.pocoo.org/show/136539/

Yay.

Still to do:
    - A bit of documentation here and there, some of this NMEA stuff
is far too arcane to be docstringless
    - A few methods need removing, PositioningError should contain all
of the PositioningErrors really
    - Writing the lore docs (man, I hate that)
    - A bit of the stateful updates need to be moved around a bit
    - A factory for creating these

The advantage is that all except the second point will not
significantly change the API anymore. Yay!

(if you see something in that output you really dont like now would be
a good time to tell me)

The code, as always, is available in the usual places (launchpad
branch: https://code.launchpad.net/~lvh/twisted/positioning)

enjoy
Laurens



From artman328 at gmail.com  Thu Aug 27 07:33:42 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Thu, 27 Aug 2009 21:33:42 +0800
Subject: [Twisted-Python] A C/S Application over Internet
Message-ID: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>

Hi,
I want to develop an C/S app over internet using twisted Perspective Broker.
The server will run as a windows service, and the clients will be wxPython
desktop applications.
Has anyone done the same thing or known the trick to do it?   Shoud I use PB
or Pyro or SPyro? Which is the best?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090827/3c1540d3/attachment.html>

From exarkun at twistedmatrix.com  Thu Aug 27 07:46:00 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 27 Aug 2009 13:46:00 -0000
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <30396_1251328118_n7QN8W2g021582_5DA4635225CBE24FB33D34EFB6C5304714B31409A0@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
	<31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>
	<812f32000908241158nf2c879eh75a74fe6a780fae3@mail.gmail.com>
	<EDAA841C-86FD-4204-BA00-2E95F17425EA@bubblehouse.org>
	<812f32000908241814u3cbddd92r5daa301b06185837@mail.gmail.com>
	<4F06DBDD-7E67-4513-8EE6-F1406014C141@bubblehouse.org>
	<4A94026F.2090203@imperial.ac.uk>
	<4457E39E-8E98-48B9-A62B-439B1CDC3521@bubblehouse.org>
	<18894_1251323399_n7QLnr6H021342_5DA4635225CBE24FB33D34EFB6C5304714B3140957@DFW1MXM01.RACKSPACE.CORP>
	<20090826222558.11298.2068421709.divmod.xquotient.71@localhost.localdomain>
	<30396_1251328118_n7QN8W2g021582_5DA4635225CBE24FB33D34EFB6C5304714B31409A0@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <20090827134600.7475.1532722245.divmod.xquotient.24@localhost.localdomain>

On 26 Aug, 11:08 pm, clay.gerrard at rackspace.com wrote:
>The way that sqlalchemy implements pool_recycle is "irrespective of 
>idle time" best I can tell from looking at it.  Keeping track of the 
>last_used_time seems like it would have been equally reasonable, 
>although perhaps even additional overhead.

It probably wouldn't be much more overhead.  The important question to 
consider is whether SQLAlchemy (and whoever else) had another good 
reason for doing it the way they do it.  Is monitoring idle time not 
sufficient for some systems?
>
>I'm not sure I understand what you mean by "parameterize the reactor" - 
>pass it as an argument when you initialize the (Re)ConnectionPool?  Can 
>you point me to a twisted class that does this as an example?

Yep, that's what I meant.  You can find examples of this in some of the 
newer code in Twisted (as we only started to encourage it relatively 
recently).  One example is twisted.web.wsgi.WSGIResource; another is 
twisted.internet.task.deferLater.
>
>I agree it would be very cool "to do the reconnecting more proactively 
>in idle threads" - I'll have to think on that, do you know off-hand of 
>any analogs?

Hm.  I can't think of any analogs, no.  I hope the implementation would 
be straightforward, though.  The connection pool can use 
reactor.callLater in the main thread to force old connections to be re- 
established, and it can take those connections out of the lineup while 
it's doing that, to make sure no queries are dispatched to them.  One 
tricky part, though, may be ensuring that a connection isn't actively 
servicing a query when time comes to recycle it.  The thread pool used 
by the connection pool may not currently have the features required for 
this (it doesn't allow messages to be directed at specific threads, for 
example).

This feature may also not be terribly important.  I don't know what the 
reconnect overhead actually is.

Jean-Paul



From mlbright at gmail.com  Thu Aug 27 07:48:58 2009
From: mlbright at gmail.com (Martin-Louis Bright)
Date: Thu, 27 Aug 2009 09:48:58 -0400
Subject: [Twisted-Python] deciding to use twisted or not
In-Reply-To: <4120a220908270511l7798458ak870c6c81176aa77d@mail.gmail.com>
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
	<d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
	<3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>
	<4120a220908270511l7798458ak870c6c81176aa77d@mail.gmail.com>
Message-ID: <3055c0a0908270648n68863bfcmd093ffb3b94f190c@mail.gmail.com>

I am using linux, and I want the daemon to be as responsive as possible to
log events, so I think I would rather have it sit on the same box as where
the log is produced. (Perhaps I'm wrong about this?) So I'm going to try
Cary's ProcessProtocol approach, and if that doesn't work, Glyph's
LoopingCall with a read() approach.
Thanks for the link.

-martin

On Thu, Aug 27, 2009 at 8:11 AM, Chris Adams <chris at stemcel.co.uk> wrote:

> If you're using a linux based system, you may have some luck setting
> up syslogger to forward logging packets to the remote ip address, and
> running the twisted daemon on the other box, and sending notifications
> if the heartbeat from the monitored machine stops.
>
> I was working on a project recently to set up a monitor a RFID based
> access control system for building, that runs on
> twisted/openwrt/linux, we used an approach like this.
>
> The link below shows a sample twisted python file that runs on a
> monitoring machine.
>
>
> http://github.com/derfred/doord/blob/cd300a1cde930c07cd13d98be3e45cb89df79809/log_watcher.py
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090827/53716e30/attachment.html>

From exarkun at twistedmatrix.com  Thu Aug 27 07:52:31 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 27 Aug 2009 13:52:31 -0000
Subject: [Twisted-Python] Re : Telnet server using Twisted
	and	AuthenticatingTelnetProtocol
In-Reply-To: <140670.22919.qm@web26108.mail.ukl.yahoo.com>
References: <986632.28669.qm@web26103.mail.ukl.yahoo.com>
	<20090820164821.7726.1422282903.divmod.xquotient.79@localhost.localdomain>
	<140670.22919.qm@web26108.mail.ukl.yahoo.com>
Message-ID: <20090827135231.7475.428699872.divmod.xquotient.36@localhost.localdomain>

On 24 Aug, 11:07 pm, filoufake-python at yahoo.fr wrote:
>Thank you Jean-Paul for replying,
>
>I still have some things that I don't understand:
>
>If I put your piece of code in my factory's protocol, I can connect to 
>the server but as soon as I enter the username, I got the an error 
>message telling that Server doesn't support "will" ('Server' object has 
>no attribute 'will').

That means you've hooked up a telnet protocol to a tcp transport, rather 
than a telnet transport.  The telnet transport sits between these two 
things and adds features like "will" negotiation; it also is in charge 
of actually interpreting telnet command sequences received from the 
network and turning them into calls onto your telnet protocol instance. 
Without the telnet transport, the telnet protocol just gets raw data.
>[snip]
>
>I understand that this has something to do with TelnetTranport but how 
>to implement it?
>I read the telnet_echo.tac but in my case I have to manage the portal 
>also and that is a litle bit too complex for me.

If necessary, you can pass arguments to your telnet protocol. 
telnet_echo.tac
uses "lambda: TelnetTransport(TelnetEcho)" as its protocol.  If 
TelnetEcho took an argument to __init__, though, you could supply it by 
using this as your protocol instead: "lambda: 
TelnetTransport(TelnetEcho, foo)".

Does that help?
>
>You say also that AuthenticatingTelnetProtocol  expects to be connected 
>to an ITelnetTransport, but the documentation says "When the 
>information is collected, it is passed to a portal and an avatar
>implementing ITelnetProtocol is requested".
>I'm lost.

AuthenticatingTelnetProtocol is an ITelnetProtocol implementation.  So, 
it needs to be hooked up to an ITelnetTransport implementation, as all 
ITelnetProtocol implementations need to.

However, since the only thing it knows how to do is handle 
authentication, it also wants to get /another/ ITelnetProtocol 
implementation out of the portal you give it.  After authentication 
succeeds, that new ITelnetProtocol implementation will be given control 
of the connection and the AuthenticatingTelnetProtocol will get out of 
the way.

So you end up with one telnet transport and two telnet protocols.

Jean-Paul



From phil at bubblehouse.org  Thu Aug 27 08:26:27 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 27 Aug 2009 10:26:27 -0400
Subject: [Twisted-Python] A C/S Application over Internet
In-Reply-To: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
References: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
Message-ID: <25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>

On Aug 27, 2009, at 9:33 AM, 陶艺夫 wrote:
> I want to develop an C/S app over internet using twisted Perspective  
> Broker. The server will run as a windows service, and the clients  
> will be wxPython desktop applications.
> Has anyone done the same thing or known the trick to do it?   Shoud  
> I use PB or Pyro or SPyro? Which is the best?

I started with Pyro on a project years ago, and ended up switching to  
PB in short order. I was less familiar with Twisted at the time, but I  
still found PB to be superior. Of course, I haven't paid attention to  
Pyro in years and know virtually nothing of SPyro.

Of course, you are coming into a Twisted list and asking if you should  
use Twisted or something else, so my response is naturally a little  
biased. ;-)

-phil


From artman328 at gmail.com  Thu Aug 27 08:57:24 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Thu, 27 Aug 2009 22:57:24 +0800
Subject: [Twisted-Python] A C/S Application over Internet
In-Reply-To: <25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>
References: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
	<25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>
Message-ID: <781411b30908270757s112e5d8blb2047a719fc83eed@mail.gmail.com>

Thank you, Phil.

Pyro has many examples, so I can understand it easily. I know Twisted is
great. I think your "switching" must mean something :) .
So I decide to use twisted PB.

2009/8/27 Phil Christensen <phil at bubblehouse.org>

> On Aug 27, 2009, at 9:33 AM, 陶艺夫 wrote:
> > I want to develop an C/S app over internet using twisted Perspective
> > Broker. The server will run as a windows service, and the clients
> > will be wxPython desktop applications.
> > Has anyone done the same thing or known the trick to do it?   Shoud
> > I use PB or Pyro or SPyro? Which is the best?
>
> I started with Pyro on a project years ago, and ended up switching to
> PB in short order. I was less familiar with Twisted at the time, but I
> still found PB to be superior. Of course, I haven't paid attention to
> Pyro in years and know virtually nothing of SPyro.
>
> Of course, you are coming into a Twisted list and asking if you should
> use Twisted or something else, so my response is naturally a little
> biased. ;-)
>
> -phil
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090827/37e349d3/attachment-0001.html>

From phil at bubblehouse.org  Thu Aug 27 10:03:27 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 27 Aug 2009 12:03:27 -0400
Subject: [Twisted-Python] A C/S Application over Internet
In-Reply-To: <781411b30908270757s112e5d8blb2047a719fc83eed@mail.gmail.com>
References: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
	<25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>
	<781411b30908270757s112e5d8blb2047a719fc83eed@mail.gmail.com>
Message-ID: <2522177F-4336-4F7B-80DB-DFB361192349@bubblehouse.org>

On Aug 27, 2009, at 10:57 AM, 陶艺夫 wrote:
> Thank you, Phil.
>
> Pyro has many examples, so I can understand it easily. I know  
> Twisted is great. I think your "switching" must mean something :) .
> So I decide to use twisted PB.


Great!

I also remembered one thing that I found was extremely useful when  
dealing with a GUI app that communicates over PB. Since PB assumes  
every remote method call will take an arbitrary amount of time to  
execute, you can delay the response from the client as long as you need.

For example, let's say the server sends a block of text to the client  
for editing. Your client-side function can create a Deferred, hold a  
reference to it somewhere, and return that from the client function.

PB won't actually send a response until you invoke the callback()  
method on that Deferred, so you can pop open a GUI window, let the  
user edit the text (or just sit there staring at it for an hour), and  
then trigger the callback when the user hits 'Save'.

Very useful, although I wrote some incredibly stupid code to emulate  
this long before I realized how easy it was ;-)

-phil


From termim at gmail.com  Thu Aug 27 10:19:19 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 27 Aug 2009 16:19:19 +0000 (UTC)
Subject: [Twisted-Python] deciding to use twisted or not
References: <3055c0a0908261356l5453665cg4e25e2777c4f8d@mail.gmail.com>
	<d9047f780908261841g268bd8fdh3af9faac727f943c@mail.gmail.com>
	<3fce0ae70908261854o2348f433y3e91847687925409@mail.gmail.com>
	<d9047f780908261908m70897fa1x757e934517ad1cb8@mail.gmail.com>
	<3055c0a0908261946j6f668069m1459928c21aa63d1@mail.gmail.com>
	<4120a220908270511l7798458ak870c6c81176aa77d@mail.gmail.com>
	<3055c0a0908270648n68863bfcmd093ffb3b94f190c@mail.gmail.com>
Message-ID: <loom.20090827T181848-915@post.gmane.org>

Martin-Louis Bright <mlbright <at> gmail.com> writes:

> 
> 
> I am using linux, and I want the daemon to be as responsive as possible to log
events, so I think I would rather have it sit on the same box as where the log
is produced. (Perhaps I'm wrong about this?) So I'm going to try Cary's
ProcessProtocol approach, and if that doesn't work, Glyph's LoopingCall with a
read() approach.
> 

You can also use pyinotify to watch your log file changes.
http://trac.dbzteam.org/pyinotify

Regards,
Mikhail





From konrads at smelkovs.com  Thu Aug 27 12:30:19 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Thu, 27 Aug 2009 21:30:19 +0300
Subject: [Twisted-Python] How to capture output from transport of
	HTTPClientFactory?
Message-ID: <d79700b90908271130q2c67ef5bgcc35becf2dd67513@mail.gmail.com>

Hi,
HTTPClientFactory uses self.transport to do reads/writes. I would like to
have a copy of all data in and out for debugging/logging purposes.
How to do that (best?)?
--
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090827/09fd433e/attachment.html>

From exarkun at twistedmatrix.com  Thu Aug 27 13:13:23 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 27 Aug 2009 19:13:23 -0000
Subject: [Twisted-Python] How to capture output from transport
	of	HTTPClientFactory?
In-Reply-To: <d79700b90908271130q2c67ef5bgcc35becf2dd67513@mail.gmail.com>
References: <d79700b90908271130q2c67ef5bgcc35becf2dd67513@mail.gmail.com>
Message-ID: <20090827191323.7475.363280842.divmod.xquotient.56@localhost.localdomain>

On 06:30 pm, konrads at smelkovs.com wrote:
>Hi,
>HTTPClientFactory uses self.transport to do reads/writes. I would like 
>to
>have a copy of all data in and out for debugging/logging purposes.
>How to do that (best?)?

twisted.protocols.policies.TrafficLoggingFactory may do what you want.

Jean-Paul



From ddwiggins at advpubtech.com  Thu Aug 27 14:00:40 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 27 Aug 2009 13:00:40 -0700
Subject: [Twisted-Python] Some way for Trial to allow selective running of
	tests?
Message-ID: <h76ol9$vfg$1@ger.gmane.org>

I've been successfully and happily using Trial for a while now for 
development of a server.  I have many tests at this point; during 
development of a new feature, I'd like to have a convenient way to only 
run the tests relevant to that feature.

I'm hacking it at this point by prefixing the names of all unwanted 
tests with "foo" to keep them from being recognized.  Naturally, I'd 
like a better way to do this.  Any good words welcome.

-- 
Don Dwiggins
Advanced Publishing Technology




From phil at bubblehouse.org  Thu Aug 27 14:08:13 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 27 Aug 2009 16:08:13 -0400
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <h76ol9$vfg$1@ger.gmane.org>
References: <h76ol9$vfg$1@ger.gmane.org>
Message-ID: <63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>

On Aug 27, 2009, at 4:00 PM, Don Dwiggins wrote:
> I've been successfully and happily using Trial for a while now for
> development of a server.  I have many tests at this point; during
> development of a new feature, I'd like to have a convenient way to  
> only
> run the tests relevant to that feature.
>
> I'm hacking it at this point by prefixing the names of all unwanted
> tests with "foo" to keep them from being recognized.  Naturally, I'd
> like a better way to do this.  Any good words welcome.

trial takes an argument at the command-line where you can specify a  
package or test case.

for example:

	trial twisted
	trial twisted.test
	trial twisted.test.test_explorer
	trial twisted.test.test_explorer.TestBrowser
	trial twisted.test.test_explorer.TestBrowser.test_chain

lets you get more and more specific.

-phil



From ddwiggins at advpubtech.com  Thu Aug 27 14:32:42 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 27 Aug 2009 13:32:42 -0700
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
References: <h76ol9$vfg$1@ger.gmane.org>
	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
Message-ID: <h76qha$5ks$1@ger.gmane.org>

Phil Christensen wrote:
> trial takes an argument at the command-line where you can specify a  
> package or test case.
> 
> for example:
> 
> 	trial twisted
> 	trial twisted.test
> 	trial twisted.test.test_explorer
> 	trial twisted.test.test_explorer.TestBrowser
> 	trial twisted.test.test_explorer.TestBrowser.test_chain
> 
> lets you get more and more specific.
> 
> -phil

Sorry, I'm feeling dense.  I currently run it as
"trial MyServerTestFile.py"; it's not a package or part of one.  In the 
file are several classes, each with several test cases.  How would I 
adapt the above to my needs?

-- 
Don Dwiggins
Advanced Publishing Technology




From gabriel.rossetti at arimaz.com  Thu Aug 27 14:37:31 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 27 Aug 2009 22:37:31 +0200
Subject: [Twisted-Python] twisted.names.error.DNSNameError on MacOsX but
 not	on linux
In-Reply-To: <1250155371.16747.13.camel@dwaal>
References: <4A819346.8090800@arimaz.com> <4A819C99.8030100@arimaz.com>
	<1250155371.16747.13.camel@dwaal>
Message-ID: <4A96EE8B.4020405@arimaz.com>

Ralph Meijer wrote:
> On Tue, 2009-08-11 at 18:30 +0200, Gabriel Rossetti wrote:
>   
>> [..]
>>     
>
> Apparently you modified the original example here:
>
>   
>> [..]
>>         connector = XMPPClientConnector(reactor, "10.204.232.117", f)
>>         connector.connect()
>>     
>
> This would never work properly. XMPPClientConnector is designed to do an
> SRV record look up on the /domain/ provided as its second argument. You
> pass an IP address here and that will just fail.
>
> The original example passes client_jid.host. This extracts the domain
> from the JID you want to connect with and then follows the procedure of
> first trying to find xmpp-server SRV records for that domain, and if
> that fails, try to connect to the host that the domain name resolves to,
> using the default port (5222), as outlined in RFC 3920. Note that
> XMPPClientConnector avoids the problems sketched in ticket #3456 that
> was mentioned by Jean-Paul.
>
> If you really want to connect to a specific host instead of following
> the above procedure, you can do this instead of the code quoted above:
>
>     reactor.connectTCP("10.204.232.117", 5222, f)
>
>   
Hmmm, ok, it works on linux and windows though, but I did as you said 
anyways as it's still flacky on mac. Thanks,
Gabriel

-- 
Arimaz SA
Ingénieur en Informatique
Av. du 24 Janvier 11
Ateliers de la Ville de Renens, Atelier 5
1020 Renens, Switzerland
www.arimaz.com
www.mydeskfriend.com
Mob: +41-(0)79-539-0069
Tel: +41-(0)21-566-7343




From listsin at integrateddevcorp.com  Thu Aug 27 15:23:52 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 27 Aug 2009 17:23:52 -0400
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <h76ol9$vfg$1@ger.gmane.org>
References: <h76ol9$vfg$1@ger.gmane.org>
Message-ID: <C37AA23D-4466-484B-B88D-7A5EBD85C23F@integrateddevcorp.com>


On Aug 27, 2009, at 4:00 PM, Don Dwiggins wrote:

> I've been successfully and happily using Trial for a while now for
> development of a server.  I have many tests at this point; during
> development of a new feature, I'd like to have a convenient way to  
> only
> run the tests relevant to that feature.
>
> I'm hacking it at this point by prefixing the names of all unwanted
> tests with "foo" to keep them from being recognized.  Naturally, I'd
> like a better way to do this.  Any good words welcome.

I was just running into this yesterday and had actually pulled the  
code for the one thing I use trial for ( the emacs line @ the top of  
the file to specify unit tests) out to make a nose plug-in since nose  
allows lists of tests to be put into config files.

I'd love to have another way as I will need Trial for the Twisted part  
of my code later.

Thanks,

S




From listsin at integrateddevcorp.com  Thu Aug 27 15:26:04 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 27 Aug 2009 17:26:04 -0400
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
References: <h76ol9$vfg$1@ger.gmane.org>
	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
Message-ID: <9FEFA3D3-1EFE-40C9-86B0-D746D5FD942D@integrateddevcorp.com>


On Aug 27, 2009, at 4:08 PM, Phil Christensen wrote:

> On Aug 27, 2009, at 4:00 PM, Don Dwiggins wrote:
>> I've been successfully and happily using Trial for a while now for
>> development of a server.  I have many tests at this point; during
>> development of a new feature, I'd like to have a convenient way to
>> only
>> run the tests relevant to that feature.
>>
>> I'm hacking it at this point by prefixing the names of all unwanted
>> tests with "foo" to keep them from being recognized.  Naturally, I'd
>> like a better way to do this.  Any good words welcome.
>
> trial takes an argument at the command-line where you can specify a
> package or test case.
>
> for example:
>
> 	trial twisted
> 	trial twisted.test
> 	trial twisted.test.test_explorer
> 	trial twisted.test.test_explorer.TestBrowser
> 	trial twisted.test.test_explorer.TestBrowser.test_chain
>
> lets you get more and more specific.

Right, but, far as I can tell, you can only do one at a time.

I just want to run the list of ones I know are working even though  
there are many more written and waiting to be pulled in and debugged  
(one at a time).

IOW, I want to specify a list of tests to run out of many that match  
the file pattern.

S




From nbdarvin at gmail.com  Thu Aug 27 16:19:57 2009
From: nbdarvin at gmail.com (Darvin nb)
Date: Fri, 28 Aug 2009 01:19:57 +0300
Subject: [Twisted-Python] Telnet example
Message-ID: <e1552c8b0908271519h1ed01be0r80346e233a9e75f3@mail.gmail.com>

Can anybody tell me, is there telnet example written with Twisted?



From johann.borck at densedata.com  Thu Aug 27 16:59:53 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Fri, 28 Aug 2009 00:59:53 +0200
Subject: [Twisted-Python] Telnet example
In-Reply-To: <e1552c8b0908271519h1ed01be0r80346e233a9e75f3@mail.gmail.com>
References: <e1552c8b0908271519h1ed01be0r80346e233a9e75f3@mail.gmail.com>
Message-ID: <4A970FE9.9060009@densedata.com>

Darvin nb wrote:
> Can anybody tell me, is there telnet example written with Twisted?
>   
like twisted.conch.telnet ?

hth, Johann



From nbdarvin at gmail.com  Thu Aug 27 18:02:42 2009
From: nbdarvin at gmail.com (Darvin nb)
Date: Fri, 28 Aug 2009 03:02:42 +0300
Subject: [Twisted-Python] Telnet example
In-Reply-To: <4A970FE9.9060009@densedata.com>
References: <e1552c8b0908271519h1ed01be0r80346e233a9e75f3@mail.gmail.com>
	<4A970FE9.9060009@densedata.com>
Message-ID: <e1552c8b0908271702y41118279sbe90ab1da5302604@mail.gmail.com>

yes!

2009/8/28 Johann Borck <johann.borck at densedata.com>:
> Darvin nb wrote:
>> Can anybody tell me, is there telnet example written with Twisted?
>>
> like twisted.conch.telnet ?
>
> hth, Johann
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From artman328 at gmail.com  Thu Aug 27 18:16:21 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 08:16:21 +0800
Subject: [Twisted-Python] A C/S Application over Internet
In-Reply-To: <2522177F-4336-4F7B-80DB-DFB361192349@bubblehouse.org>
References: <781411b30908270633q434413c6ne6015dbac5aa3569@mail.gmail.com>
	<25F0D92C-DDCD-47BC-996F-0AE70493ABDC@bubblehouse.org>
	<781411b30908270757s112e5d8blb2047a719fc83eed@mail.gmail.com>
	<2522177F-4336-4F7B-80DB-DFB361192349@bubblehouse.org>
Message-ID: <781411b30908271716h400c46f0h48c86f9f181cd206@mail.gmail.com>

thank you for sharing your experience.
Frankly, I do love twisted for its decent implementation of asyn call
concept.

2009/8/28 Phil Christensen <phil at bubblehouse.org>

> On Aug 27, 2009, at 10:57 AM, 陶艺夫 wrote:
> > Thank you, Phil.
> >
> > Pyro has many examples, so I can understand it easily. I know
> > Twisted is great. I think your "switching" must mean something :) .
> > So I decide to use twisted PB.
>
>
> Great!
>
> I also remembered one thing that I found was extremely useful when
> dealing with a GUI app that communicates over PB. Since PB assumes
> every remote method call will take an arbitrary amount of time to
> execute, you can delay the response from the client as long as you need.
>
> For example, let's say the server sends a block of text to the client
> for editing. Your client-side function can create a Deferred, hold a
> reference to it somewhere, and return that from the client function.
>
> PB won't actually send a response until you invoke the callback()
> method on that Deferred, so you can pop open a GUI window, let the
> user edit the text (or just sit there staring at it for an hour), and
> then trigger the callback when the user hits 'Save'.
>
> Very useful, although I wrote some incredibly stupid code to emulate
> this long before I realized how easy it was ;-)
>
> -phil
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090828/5440f0f9/attachment.html>

From tim at commsecure.com.au  Thu Aug 27 18:32:21 2009
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 28 Aug 2009 10:32:21 +1000
Subject: [Twisted-Python] Some way for Trial to allow selective running
 of tests?
In-Reply-To: <h76qha$5ks$1@ger.gmane.org>
References: <h76ol9$vfg$1@ger.gmane.org>
	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>
	<h76qha$5ks$1@ger.gmane.org>
Message-ID: <20090828103221.38ff8644@ws35.commsecure.com.au>

Don Dwiggins <ddwiggins at advpubtech.com> wrote:
> Phil Christensen wrote:
> > trial takes an argument at the command-line where you can specify a  
> > package or test case.
> > 
> > for example:
> > 
> > 	trial twisted
> > 	trial twisted.test
> > 	trial twisted.test.test_explorer
> > 	trial twisted.test.test_explorer.TestBrowser
> > 	trial twisted.test.test_explorer.TestBrowser.test_chain
> > 
> > lets you get more and more specific.
> > 
> > -phil
> 
> Sorry, I'm feeling dense.  I currently run it as
> "trial MyServerTestFile.py"; it's not a package or part of one.  In the 
> file are several classes, each with several test cases.  How would I 
> adapt the above to my needs?

trial takes either a path and filename, or a Python import name (I'm
not sure what the exact term here is).

If you ran python in the same directory where you ran "trial" in your
example, you could say:

    import MyServerTestFile
    MyServerTestFile.MyServerTestCase.test_my_server

...to refer to a particular test method, and trial will accept the same
syntax:

    trial MyServerTestFile.MyServerTestCase.test_my_server

In general though, a lot of distribution and packaging and deployment
things become easier if your project is laid out in Python packages. I
usually follow these rules and everything turns out pretty well:

    http://jcalderone.livejournal.com/39794.html
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090828/4ce7e306/attachment.sig>

From artman328 at gmail.com  Thu Aug 27 23:35:16 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 13:35:16 +0800
Subject: [Twisted-Python] Twisted and wxPython
Message-ID: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>

Hi,
Anyone can give me a sample app skeleton to get two frameworks work together
well? Or just give me a link where I can figure out the technical details.

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090828/16d74957/attachment.html>

From godson.g at gmail.com  Fri Aug 28 00:15:53 2009
From: godson.g at gmail.com (Godson Gera)
Date: Fri, 28 Aug 2009 11:45:53 +0530
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
References: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
Message-ID: <f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>

from twisted.internet import wxreactor
wxreactor.install()
from twisted.internet import reactor


.....
write your code here
.....

reactor.registerWxApp(app)
reactor.run()


You don't need wx mainloop. The key thing here is to import wxreactor first
and install it and then import reactor. 'app' in the last but one line is
the instance of your wx.App .


On Fri, Aug 28, 2009 at 11:05 AM, 陶艺夫 <artman328 at gmail.com> wrote:

> Hi,
> Anyone can give me a sample app skeleton to get two frameworks work
> together well? Or just give me a link where I can figure out the technical
> details.
>
> Thanks.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Thanks & Regards,
Godson Gera
http://godson.in
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090828/d9b63d3c/attachment.html>

From artman328 at gmail.com  Fri Aug 28 01:04:22 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 15:04:22 +0800
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>
References: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
	<f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>
Message-ID: <781411b30908280004k107fbda1h815a0544bcc314dc@mail.gmail.com>

Thanks. I'll try it out.

2009/8/28 Godson Gera <godson.g at gmail.com>

> from twisted.internet import wxreactor
> wxreactor.install()
> from twisted.internet import reactor
>
>
> .....
> write your code here
> .....
>
> reactor.registerWxApp(app)
> reactor.run()
>
>
> You don't need wx mainloop. The key thing here is to import wxreactor first
> and install it and then import reactor. 'app' in the last but one line is
> the instance of your wx.App .
>
>
> On Fri, Aug 28, 2009 at 11:05 AM, 陶艺夫 <artman328 at gmail.com> wrote:
>
>> Hi,
>> Anyone can give me a sample app skeleton to get two frameworks work
>> together well? Or just give me a link where I can figure out the technical
>> details.
>>
>> Thanks.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> Thanks & Regards,
> Godson Gera
> http://godson.in
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090828/8f9170e1/attachment.html>

From kevin.horn at gmail.com  Fri Aug 28 01:23:17 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 28 Aug 2009 02:23:17 -0500
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <781411b30908280004k107fbda1h815a0544bcc314dc@mail.gmail.com>
References: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
	<f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>
	<781411b30908280004k107fbda1h815a0544bcc314dc@mail.gmail.com>
Message-ID: <562bcc10908280023h6c3f9fd1s808ac7633eb86f9c@mail.gmail.com>

There's also a wxpython example in the twisted subversion repository.  See:

http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/wxdemo.py

It follows the basic pattern that Godson provided.

Kevin Horn

2009/8/28 陶艺夫 <artman328 at gmail.com>

> Thanks. I'll try it out.
>
> 2009/8/28 Godson Gera <godson.g at gmail.com>
>
> from twisted.internet import wxreactor
>> wxreactor.install()
>> from twisted.internet import reactor
>>
>>
>> .....
>> write your code here
>> .....
>>
>> reactor.registerWxApp(app)
>> reactor.run()
>>
>>
>> You don't need wx mainloop. The key thing here is to import wxreactor
>> first and install it and then import reactor. 'app' in the last but one line
>> is the instance of your wx.App .
>>
>>
>> On Fri, Aug 28, 2009 at 11:05 AM, 陶艺夫 <artman328 at gmail.com> wrote:
>>
>>> Hi,
>>> Anyone can give me a sample app skeleton to get two frameworks work
>>> together well? Or just give me a link where I can figure out the technical
>>> details.
>>>
>>> Thanks.
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>>
>> --
>> Thanks & Regards,
>> Godson Gera
>> http://godson.in
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090828/a09f5691/attachment.html>

From artman328 at gmail.com  Fri Aug 28 02:04:51 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 16:04:51 +0800
Subject: [Twisted-Python] Twisted and wxPython
In-Reply-To: <562bcc10908280023h6c3f9fd1s808ac7633eb86f9c@mail.gmail.com>
References: <781411b30908272235t47d8387byb7938c210b1c9536@mail.gmail.com>
	<f9822b400908272315i3327152dve21a50897d369122@mail.gmail.com>
	<781411b30908280004k107fbda1h815a0544bcc314dc@mail.gmail.com>
	<562bcc10908280023h6c3f9fd1s808ac7633eb86f9c@mail.gmail.com>
Message-ID: <781411b30908280104p1e6d33f3x9e69848f65e26c91@mail.gmail.com>

Thanks, it's absolutely a good sample.
It's grateful that there are so many people helpful out there :)

2009/8/28 Kevin Horn <kevin.horn at gmail.com>

> There's also a wxpython example in the twisted subversion repository.  See:
>
> http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/wxdemo.py
>
> It follows the basic pattern that Godson provided.
>
> Kevin Horn
>
> 2009/8/28 陶艺夫 <artman328 at gmail.com>
>
> Thanks. I'll try it out.
>>
>> 2009/8/28 Godson Gera <godson.g at gmail.com>
>>
>>  from twisted.internet import wxreactor
>>> wxreactor.install()
>>> from twisted.internet import reactor
>>>
>>>
>>> .....
>>> write your code here
>>> .....
>>>
>>> reactor.registerWxApp(app)
>>> reactor.run()
>>>
>>>
>>> You don't need wx mainloop. The key thing here is to import wxreactor
>>> first and install it and then import reactor. 'app' in the last but one line
>>> is the instance of your wx.App .
>>>
>>>
>>> On Fri, Aug 28, 2009 at 11:05 AM, 陶艺夫 <artman328 at gmail.com> wrote:
>>>
>>>> Hi,
>>>> Anyone can give me a sample app skeleton to get two frameworks work
>>>> together well? Or just give me a link where I can figure out the technical
>>>> details.
>>>>
>>>> Thanks.
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>>
>>> --
>>> Thanks & Regards,
>>> Godson Gera
>>> http://godson.in
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090828/f9a84797/attachment-0001.html>

From artman328 at gmail.com  Fri Aug 28 05:49:44 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Fri, 28 Aug 2009 19:49:44 +0800
Subject: [Twisted-Python] twisted windows service
Message-ID: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>

Hi,
I copied the code from:
http://twistedmatrix.com/pipermail/twisted-python/2007-May/015377.html and
it ran ok.
And then I followed David's advice from here:
http://twistedmatrix.com/pipermail/twisted-python/2007-May/015383.html to
use threading.Event to control server's stop, it ran ok too. But David's
boot_service.py just could install the service, error on start (error 1063).
Any help?
One more question, who can fill in David's 'py2exe' setup file more codes to
guide me moving to next step? David, are you there? :)

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090828/3140f256/attachment.html>

From p.mayers at imperial.ac.uk  Fri Aug 28 05:56:29 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 28 Aug 2009 12:56:29 +0100
Subject: [Twisted-Python] IPv6
Message-ID: <4A97C5ED.40501@imperial.ac.uk>

What's the IPv6 support like in Twisted?



From lists at collab.nl  Fri Aug 28 06:04:46 2009
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Fri, 28 Aug 2009 13:04:46 +0100
Subject: [Twisted-Python] IPv6
In-Reply-To: <4A97C5ED.40501@imperial.ac.uk>
References: <4A97C5ED.40501@imperial.ac.uk>
Message-ID: <FC86CFB4-D4C5-4938-B62D-BACA974CFECA@collab.nl>

Hi Phil,

On 28 Aug 2009, at 12:56, Phil Mayers wrote:

> What's the IPv6 support like in Twisted?

See http://twistedmatrix.com/trac/ticket/3014

Cheers,

Thijs
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090828/c6626158/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20090828/c6626158/attachment.sig>

From ddwiggins at advpubtech.com  Fri Aug 28 09:39:44 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 28 Aug 2009 08:39:44 -0700
Subject: [Twisted-Python] Some way for Trial to allow selective running
	of tests?
In-Reply-To: <20090828103221.38ff8644@ws35.commsecure.com.au>
References: <h76ol9$vfg$1@ger.gmane.org>	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>	<h76qha$5ks$1@ger.gmane.org>
	<20090828103221.38ff8644@ws35.commsecure.com.au>
Message-ID: <h78to1$n9s$1@ger.gmane.org>

Tim Allen wrote:
> If you ran python in the same directory where you ran "trial" in your
> example, you could say:
> 
>     import MyServerTestFile
>     MyServerTestFile.MyServerTestCase.test_my_server
> 
> ...to refer to a particular test method, and trial will accept the same
> syntax:
> 
>     trial MyServerTestFile.MyServerTestCase.test_my_server

That's progress; thanks!  It gives me a choice of running either all 
tests in a particular class, or one test.  I could probably cobble up a 
shell or python script to wrap around it and allow me to run a list of 
"specs"; it'll be better than all the "foo"ing I've been doing. 8^)

A quick thought: maybe I could use decorators on test methods to apply 
"tags" to my tests, then write a script to run all tests with a given 
tag; this might be even handier.

> 
> In general though, a lot of distribution and packaging and deployment
> things become easier if your project is laid out in Python packages. I
> usually follow these rules and everything turns out pretty well:
> 
>     http://jcalderone.livejournal.com/39794.html

Good advice, if you're distributing a python library.  In my case, the 
end result is an installer that creates a single .exe (a Windows 
service; frozen with py2exe) and a config.ini file.  For me, there's no 
particular value in creating a package hierarchy just for testing. 
(With one possible exception: I may want to create a multi-level 
hierarchy of tests, rather than just the fixed file/class/method 
structure that unittest/trial gives you.

-- 
Don Dwiggins
Advanced Publishing Technology




From matusis at yahoo.com  Fri Aug 28 15:31:12 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Fri, 28 Aug 2009 14:31:12 -0700
Subject: [Twisted-Python] misleading error in twisted.enterprise.adbapi
In-Reply-To: <h78to1$n9s$1@ger.gmane.org>
References: <h76ol9$vfg$1@ger.gmane.org>	<63058AC9-2F17-457E-85AD-AAB8E1C65576@bubblehouse.org>	<h76qha$5ks$1@ger.gmane.org>	<20090828103221.38ff8644@ws35.commsecure.com.au>
	<h78to1$n9s$1@ger.gmane.org>
Message-ID: <012701ca2826$dddce4f0$9996aed0$@com>


We are using twisted.enterprise.adbapi for connecting to MySQL.
In one of our large tables, the primary key reached its maximum value of
2147483647, and INSERTs became impossible.

When I executed the same INSERT from mysql command line manually, it gave:

ERROR 1062 (23000): Duplicate entry '2147483647' for key 1

In twisted logs however, for the same INSERT the error was much less
specific:

2014, "Commands out of sync; you can't run this command now"

I am concerned about this, since this 2014 error has appeared before in the
twisted logs, in many completely different contexts. Can you shed any light
on why we do not get the specific 1062 error, and what this 2014, "Commands
out of sync; you can't run this command now" is about?





From torrycn at gmail.com  Sat Aug 29 00:52:26 2009
From: torrycn at gmail.com (=?UTF-8?B?5aS05aSq5pmV?=)
Date: Sat, 29 Aug 2009 14:52:26 +0800
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
Message-ID: <5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>

On Fri, Aug 28, 2009 at 7:49 PM, 陶艺夫 <artman328 at gmail.com> wrote:

> Hi,
> I copied the code from:
> http://twistedmatrix.com/pipermail/twisted-python/2007-May/015377.html and
> it ran ok.
> And then I followed David's advice from here:
> http://twistedmatrix.com/pipermail/twisted-python/2007-May/015383.html to
> use threading.Event to control server's stop, it ran ok too. But David's
> boot_service.py just could install the service, error on start (error 1063).
> Any help?
> One more question, who can fill in David's 'py2exe' setup file more codes
> to guide me moving to next step? David, are you there? :)
>
> Thanks.
>


看你的名字，我认为我写中文你应该能看懂。
我给你段可以通用的代码吧。

首先，是一个你要编译成ntservice的模块的文件。似设abcservice.py ,内容如下

#coding=utf-8
import win32serviceutil
import os
import sys
import win32api
sys.path = sys.path + [os.path.dirname(win32api.GetModuleFileName(0))]
import server


class PowerService(win32serviceutil.ServiceFramework):
    _svc_name_ = "Your Service Name"
    _svc_display_name_ = "Your Service Display Name"
    _svc_description_ = unicode(""" 这里可以写多行的中文。
也可以写 作者：你的名字。
因为文件是utf-8的，在这里，要把中文转成gb2312，才能在windows里正常显示.
""",'utf-8').encode('gb2312')

    def SvcDoRun(self):
        server.start()

    def SvcStop(self):
        server.stop()

if __name__ == '__main__':
    win32serviceutil.HandleCommandLine(PowerService)


用把这个程序打包成.exe以后，它就是一个可以通用的启动服务的程序了。
你的不同程序，只要在同一目录下，修改你的server.py文件，就可以了。


下面举例一个server.py

#coding=utf-8
from twisted.internet import reactor

def start():
    reactor.run(installSignalHandlers=0)

def stop():
    reactor.callFromThread(reactor.stop)


下面是py2exe打包用的setup.py文件内容

rom distutils.core import setup
import py2exe

import sys


setup(name='service name',
      version='1.0',
      author='your name',
      service=['abcservice'])

print "---Done---"


然后用python setup.py py2exe命令打包。
打包好以后，就可以直接发布了。
如果缺什么模块，直接复到到abcservice.exe文件所有目录就行。
如果你的程序修改什么，只直接修改好代码，放在目录下就行。修改程序不用重新py2exe打包。
*

*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090829/8a3709f0/attachment.html>

From glyph at twistedmatrix.com  Sat Aug 29 01:06:37 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 29 Aug 2009 03:06:37 -0400
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
	<5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
Message-ID: <d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>

On Sat, Aug 29, 2009 at 2:52 AM, 头太晕 <torrycn at gmail.com> wrote:

> 看你的名字，我认为我写中文你应该能看懂。
> 我给你段可以通用的代码吧。
>

 这是正确的，但在这个名单很多人（包括我自己在内）无法读取中。

在未来，请为我们其他人的利益，在英国的职位。

不过，我们很高兴地看到，扭曲了中国的用户！ :)

（谢谢你，谷歌翻译。我很抱歉，如果这无法真正为在中国的感觉。）
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090829/c1896743/attachment.html>

From torrycn at gmail.com  Sat Aug 29 01:50:24 2009
From: torrycn at gmail.com (=?UTF-8?B?5aS05aSq5pmV?=)
Date: Sat, 29 Aug 2009 15:50:24 +0800
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
	<5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
	<d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>
Message-ID: <5ccd697a0908290050g16b6027bga87f752569e11251@mail.gmail.com>

2009/8/29 Glyph Lefkowitz <glyph at twistedmatrix.com>

> On Sat, Aug 29, 2009 at 2:52 AM, 头太晕 <torrycn at gmail.com> wrote:
>
>> 看你的名字，我认为我写中文你应该能看懂。
>> 我给你段可以通用的代码吧。
>>
>
>  这是正确的，但在这个名单很多人（包括我自己在内）无法读取中。
>
> 在未来，请为我们其他人的利益，在英国的职位。
>
> 不过，我们很高兴地看到，扭曲了中国的用户！ :)
>
> （谢谢你，谷歌翻译。我很抱歉，如果这无法真正为在中国的感觉。）
>
>
The Chinese message by google translate is not readable. But I know what you
said.

Most people in China can read English.  But some of people (include me)
can't express our selves clearly in English.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090829/ba76801a/attachment.html>

From artman328 at gmail.com  Sat Aug 29 08:11:21 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Sat, 29 Aug 2009 22:11:21 +0800
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
	<5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
Message-ID: <781411b30908290711r9ea4a4elae285db286fed5e3@mail.gmail.com>

Yes, I can read Chinese. Thank you for your help.
For respecting all friends in the list, I reply you still in English :)


2009/8/29 头太晕 <torrycn at gmail.com>

>
>
> On Fri, Aug 28, 2009 at 7:49 PM, 陶艺夫 <artman328 at gmail.com> wrote:
>
>> Hi,
>> I copied the code from:
>> http://twistedmatrix.com/pipermail/twisted-python/2007-May/015377.htmland it ran ok.
>> And then I followed David's advice from here:
>> http://twistedmatrix.com/pipermail/twisted-python/2007-May/015383.html to
>> use threading.Event to control server's stop, it ran ok too. But David's
>> boot_service.py just could install the service, error on start (error 1063).
>> Any help?
>> One more question, who can fill in David's 'py2exe' setup file more codes
>> to guide me moving to next step? David, are you there? :)
>>
>> Thanks.
>>
>
>
> 看你的名字，我认为我写中文你应该能看懂。
> 我给你段可以通用的代码吧。
>
> 首先，是一个你要编译成ntservice的模块的文件。似设abcservice.py ,内容如下
>
> #coding=utf-8
> import win32serviceutil
> import os
> import sys
> import win32api
> sys.path = sys.path + [os.path.dirname(win32api.GetModuleFileName(0))]
> import server
>
>
> class PowerService(win32serviceutil.ServiceFramework):
>     _svc_name_ = "Your Service Name"
>     _svc_display_name_ = "Your Service Display Name"
>     _svc_description_ = unicode(""" 这里可以写多行的中文。
> 也可以写 作者：你的名字。
> 因为文件是utf-8的，在这里，要把中文转成gb2312，才能在windows里正常显示.
> """,'utf-8').encode('gb2312')
>
>     def SvcDoRun(self):
>         server.start()
>
>     def SvcStop(self):
>         server.stop()
>
> if __name__ == '__main__':
>     win32serviceutil.HandleCommandLine(PowerService)
>
>
> 用把这个程序打包成.exe以后，它就是一个可以通用的启动服务的程序了。
> 你的不同程序，只要在同一目录下，修改你的server.py文件，就可以了。
>
>
> 下面举例一个server.py
>
> #coding=utf-8
> from twisted.internet import reactor
>
> def start():
>     reactor.run(installSignalHandlers=0)
>
> def stop():
>     reactor.callFromThread(reactor.stop)
>
>
> 下面是py2exe打包用的setup.py文件内容
>
> rom distutils.core import setup
> import py2exe
>
> import sys
>
>
> setup(name='service name',
>       version='1.0',
>       author='your name',
>       service=['abcservice'])
>
> print "---Done---"
>
>
> 然后用python setup.py py2exe命令打包。
> 打包好以后，就可以直接发布了。
> 如果缺什么模块，直接复到到abcservice.exe文件所有目录就行。
> 如果你的程序修改什么，只直接修改好代码，放在目录下就行。修改程序不用重新py2exe打包。
> *
>
> *
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090829/c58516d8/attachment.html>

From artman328 at gmail.com  Sat Aug 29 08:21:57 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Sat, 29 Aug 2009 22:21:57 +0800
Subject: [Twisted-Python] twisted windows service
In-Reply-To: <d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>
References: <781411b30908280449n5a9a94bek6309fbfb68fad24c@mail.gmail.com>
	<5ccd697a0908282352h14f3d5f1j678860bb97dae369@mail.gmail.com>
	<d9047f780908290006x195e0c0cy79d0be04af54bfe2@mail.gmail.com>
Message-ID: <781411b30908290721k9a5c2f2scb165be065781f5d@mail.gmail.com>

The translation is very funny, it will confuse Chinese reader totally
although I can understand what you mean (translate it back to english in my
mind to figure it out) :))
For example, the meaning of the last line in Chinese will be:
"Anyway, we're glad to see the Chinese users who have been twisted"...
Hahaha, LOL.
No offense, the google translation is so funny.

2009/8/29 Glyph Lefkowitz <glyph at twistedmatrix.com>

> On Sat, Aug 29, 2009 at 2:52 AM, 头太晕 <torrycn at gmail.com> wrote:
>
>> 看你的名字，我认为我写中文你应该能看懂。
>> 我给你段可以通用的代码吧。
>>
>
>  这是正确的，但在这个名单很多人（包括我自己在内）无法读取中。
>
> 在未来，请为我们其他人的利益，在英国的职位。
>
> 不过，我们很高兴地看到，扭曲了中国的用户！ :)
>
> （谢谢你，谷歌翻译。我很抱歉，如果这无法真正为在中国的感觉。）
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090829/8f4ed25b/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Aug 29 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 30 Aug 2009 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1251605111.84.1407692698@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090830/21fa3960/attachment-0001.html>

From morbid.concept at gmail.com  Sun Aug 30 12:40:34 2009
From: morbid.concept at gmail.com (Nathan Lundquist)
Date: Sun, 30 Aug 2009 13:40:34 -0500
Subject: [Twisted-Python] TDD using Trial
In-Reply-To: <4A9AC689.8000404@gmail.com>
References: <4A9AC689.8000404@gmail.com>
Message-ID: <4A9AC7A2.8070104@gmail.com>

Hello everyone.

I was wondering if any tutorials existed for setting up unit tests for 
use with trial. I've done a fair share of googling and only found 
tickets suggesting that more documentation be made available for trial.

I've been attempting to make sense of the tests that ship with twisted 
but to be honest I'm having a hard.

Just thought a tutorial that walks through and explains things would 
help a lot.

Thanks.




From screwtape at froup.com  Sun Aug 30 19:08:35 2009
From: screwtape at froup.com (Tim Allen)
Date: Mon, 31 Aug 2009 11:08:35 +1000
Subject: [Twisted-Python] TDD using Trial
In-Reply-To: <4A9AC7A2.8070104@gmail.com>
References: <4A9AC689.8000404@gmail.com>
 <4A9AC7A2.8070104@gmail.com>
Message-ID: <20090831010835.GB3466@thristian.org>

On Sun, Aug 30, 2009 at 01:40:34PM -0500, Nathan Lundquist wrote:
> I was wondering if any tutorials existed for setting up unit tests for 
> use with trial. I've done a fair share of googling and only found 
> tickets suggesting that more documentation be made available for trial.

Setting up unit tests with trial is (deliberately) almost identical to
setting up unit tests with the "unittest" module in Python's standard
library. The key differences are:

    - Trial provides a subclass of unittest.TestCase called
      twisted.trial.unittest.TestCase, which adds the following features
      on top of the standard Python API:
	- t.t.u.TestCase supports testing of Twisted-based code,
	  spinning up the reactor and shutting it down when necessary,
	  etc.
	- t.t.u.TestCase allows the setUp, tearDown and individual test
	  methods to return Deferreds, which causes Trial to wait for
	  those Deferreds to fire before it continues on.
	- t.t.u.TestCase has an expanded set of assertions available,
	  including Twisted-specific ones like failUnlessFailure (to
	  check the Failure object returned by a deferred) but also
	  prettier output for simple ones like failUnlessEqual.
	- t.t.u.TestCase has a 'patch' method which allows you to
	  monkeypatch other code for testing purposes. All patches are
	  reverted at the end of the individual test.
	- t.t.u.TestCase subclasses and even individual test methods can
	  be given a 'skip' property, set to a string describing why
	  that TestCase or test should be skipped. This lets you stop
	  broken tests being reported as failures, but unlike just
	  commenting them out, you don't have to worry that the test
	  will be left out of refactorings or forgotten about and never
	  uncommented. You can even skip tests at runtime, for example
	  if a test is platform specific and the test is being run on
	  the 'wrong' platform.
    - Trial will happily run unittest.TestCase test cases, but they
      can't use Twisted features like the reactor or deferreds. If
      you just want to use Trial as an alternative to nosetests, you
      should be fine.
    - If you want the automatic test-discovery to work, you need to put
      your TestCase classes inside files named "test_whatever.py",
      inside a Python package. Then you can just give Trial the name of
      the Python package and it will run all the tests it can find
      inside it.

Is that helpful?



From hubbard at sdsc.edu  Mon Aug 31 11:04:44 2009
From: hubbard at sdsc.edu (Paul Hubbard)
Date: Mon, 31 Aug 2009 10:04:44 -0700
Subject: [Twisted-Python] TDD using Trial
In-Reply-To: <20090831010835.GB3466@thristian.org>
References: <4A9AC689.8000404@gmail.com> <4A9AC7A2.8070104@gmail.com>
	<20090831010835.GB3466@thristian.org>
Message-ID: <0654472F-2F5F-4F9E-9807-A0BA78137A39@sdsc.edu>


I also found this quite helpful in writing StringIO tests -

http://twistedmatrix.com/trac/browser/branches/trial-tutorial-2443-2/doc/core/howto/trial.xhtml

My code is nowhere near the standards of Twisted yet, but FWIW here's  
what I came up with:

http://amoeba.ucsd.edu:82/?p=attribute_store.git;a=blob;f=test/test_protocol.py;h=1d7df304a757adddfe98ab7e01e0aa15d29a1571;hb=HEAD

HTH,
Paul


On Aug 30, 2009, at 6:08 PM, Tim Allen wrote:

> On Sun, Aug 30, 2009 at 01:40:34PM -0500, Nathan Lundquist wrote:
>> I was wondering if any tutorials existed for setting up unit tests  
>> for
>> use with trial. I've done a fair share of googling and only found
>> tickets suggesting that more documentation be made available for  
>> trial.
>
> Setting up unit tests with trial is (deliberately) almost identical to
> setting up unit tests with the "unittest" module in Python's standard
> library. The key differences are:
>
>    - Trial provides a subclass of unittest.TestCase called
>      twisted.trial.unittest.TestCase, which adds the following  
> features
>      on top of the standard Python API:
> 	- t.t.u.TestCase supports testing of Twisted-based code,
> 	  spinning up the reactor and shutting it down when necessary,
> 	  etc.
> 	- t.t.u.TestCase allows the setUp, tearDown and individual test
> 	  methods to return Deferreds, which causes Trial to wait for
> 	  those Deferreds to fire before it continues on.
> 	- t.t.u.TestCase has an expanded set of assertions available,
> 	  including Twisted-specific ones like failUnlessFailure (to
> 	  check the Failure object returned by a deferred) but also
> 	  prettier output for simple ones like failUnlessEqual.
> 	- t.t.u.TestCase has a 'patch' method which allows you to
> 	  monkeypatch other code for testing purposes. All patches are
> 	  reverted at the end of the individual test.
> 	- t.t.u.TestCase subclasses and even individual test methods can
> 	  be given a 'skip' property, set to a string describing why
> 	  that TestCase or test should be skipped. This lets you stop
> 	  broken tests being reported as failures, but unlike just
> 	  commenting them out, you don't have to worry that the test
> 	  will be left out of refactorings or forgotten about and never
> 	  uncommented. You can even skip tests at runtime, for example
> 	  if a test is platform specific and the test is being run on
> 	  the 'wrong' platform.
>    - Trial will happily run unittest.TestCase test cases, but they
>      can't use Twisted features like the reactor or deferreds. If
>      you just want to use Trial as an alternative to nosetests, you
>      should be fine.
>    - If you want the automatic test-discovery to work, you need to put
>      your TestCase classes inside files named "test_whatever.py",
>      inside a Python package. Then you can just give Trial the name of
>      the Python package and it will run all the tests it can find
>      inside it.
>
> Is that helpful?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From phil at bubblehouse.org  Mon Aug 31 13:36:50 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 31 Aug 2009 15:36:50 -0400
Subject: [Twisted-Python] strange exception on Python 2.6 + Snow Leopard
Message-ID: <AE767569-997B-4F1C-9F4F-E984E4659B0E@bubblehouse.org>

hey all,

I just upgraded to Mac OS X 10.6 which includes Python 2.6.1. I'm  
running the latest SVN HEAD of Twisted, but when I run twistd I get an  
exception before it continues working (apparently) normally. Here's  
what I'm seeing:

thrawn:~ phil$ twistd
Traceback (most recent call last):
   File "/Users/phil/Workspace/Twisted/twisted/python/usage.py", line  
413, in __str__
     return self.getSynopsis() + '\n' + self.getUsage(width=None)
   File "/Users/phil/Workspace/Twisted/twisted/python/usage.py", line  
449, in getUsage
     for (cmd, short, parser, desc) in self.subCommands:
   File "/Users/phil/Workspace/Twisted/twisted/application/app.py",  
line 675, in subCommands
     for plug in plugins:
   File "/Users/phil/Workspace/Twisted/twisted/plugin.py", line 200,  
in getPlugins
     allDropins = getCache(package)
--- <exception caught here> ---
   File "/Users/phil/Workspace/Twisted/twisted/plugin.py", line 165,  
in getCache
     provider = pluginModule.load()
   File "/Users/phil/Workspace/Twisted/twisted/python/modules.py",  
line 381, in load
     return self.pathEntry.pythonPath.moduleLoader(self.name)
   File "/Users/phil/Workspace/Twisted/twisted/python/reflect.py",  
line 473, in namedAny
     obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'ssl_test'

[continues to print usage info]

I've deleted all my dropin.cache files, and grepped through my source  
and Twisted's for a reference to 'ssl_test', but to no avail.

Like I said, it doesn't appear to be a fatal exception, but I'd like  
to make it go away. Any ideas?

-phil



From listsin at integrateddevcorp.com  Mon Aug 31 13:47:16 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Mon, 31 Aug 2009 15:47:16 -0400
Subject: [Twisted-Python] strange exception on Python 2.6 + Snow Leopard
In-Reply-To: <AE767569-997B-4F1C-9F4F-E984E4659B0E@bubblehouse.org>
References: <AE767569-997B-4F1C-9F4F-E984E4659B0E@bubblehouse.org>
Message-ID: <B23801ED-A811-4221-A110-6B363DA00319@integrateddevcorp.com>


On Aug 31, 2009, at 3:36 PM, Phil Christensen wrote:

> hey all,
>
> I just upgraded to Mac OS X 10.6 which includes Python 2.6.1. I'm
> running the latest SVN HEAD of Twisted, but when I run twistd I get an
> exception before it continues working (apparently) normally. Here's
> what I'm seeing:
>
> thrawn:~ phil$ twistd
> Traceback (most recent call last):
>   File "/Users/phil/Workspace/Twisted/twisted/python/usage.py", line
> 413, in __str__
>     return self.getSynopsis() + '\n' + self.getUsage(width=None)
>   File "/Users/phil/Workspace/Twisted/twisted/python/usage.py", line
> 449, in getUsage
>     for (cmd, short, parser, desc) in self.subCommands:
>   File "/Users/phil/Workspace/Twisted/twisted/application/app.py",
> line 675, in subCommands
>     for plug in plugins:
>   File "/Users/phil/Workspace/Twisted/twisted/plugin.py", line 200,
> in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/Users/phil/Workspace/Twisted/twisted/plugin.py", line 165,
> in getCache
>     provider = pluginModule.load()
>   File "/Users/phil/Workspace/Twisted/twisted/python/modules.py",
> line 381, in load
>     return self.pathEntry.pythonPath.moduleLoader(self.name)
>   File "/Users/phil/Workspace/Twisted/twisted/python/reflect.py",
> line 473, in namedAny
>     obj = getattr(obj, n)
> exceptions.AttributeError: 'module' object has no attribute 'ssl_test'
>
> [continues to print usage info]
>
> I've deleted all my dropin.cache files, and grepped through my source
> and Twisted's for a reference to 'ssl_test', but to no avail.
>
> Like I said, it doesn't appear to be a fatal exception, but I'd like
> to make it go away. Any ideas?

I saw this too.  It has to do with the plugin cache directory not  
being writable; there's a bug filed on it on the Twisted Trac.  I  
ended up modifying the library code to get rid of it; the file to  
change is the one in the error message and the fix is listed in the  
bug in the Twisted Trac instance.


S




From phil at bubblehouse.org  Mon Aug 31 14:40:39 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 31 Aug 2009 16:40:39 -0400
Subject: [Twisted-Python] strange exception on Python 2.6 + Snow Leopard
In-Reply-To: <B23801ED-A811-4221-A110-6B363DA00319@integrateddevcorp.com>
References: <AE767569-997B-4F1C-9F4F-E984E4659B0E@bubblehouse.org>
	<B23801ED-A811-4221-A110-6B363DA00319@integrateddevcorp.com>
Message-ID: <413E681C-F5D0-4C8E-BF70-7B28347454FA@bubblehouse.org>

On Aug 31, 2009, at 3:47 PM, Steve Steiner (listsin) wrote:
> On Aug 31, 2009, at 3:36 PM, Phil Christensen wrote:
>> hey all,
>>
>> I just upgraded to Mac OS X 10.6 which includes Python 2.6.1. I'm
>> running the latest SVN HEAD of Twisted, but when I run twistd I get  
>> an
>> exception before it continues working (apparently) normally. Here's
>> what I'm seeing:
>>
>> thrawn:~ phil$ twistd
>> Traceback (most recent call last):
>>
[snip]
>>  File "/Users/phil/Workspace/Twisted/twisted/python/reflect.py",
>> line 473, in namedAny
>>    obj = getattr(obj, n)
>> exceptions.AttributeError: 'module' object has no attribute  
>> 'ssl_test'
>>
>> [continues to print usage info]
>>
>> I've deleted all my dropin.cache files, and grepped through my source
>> and Twisted's for a reference to 'ssl_test', but to no avail.
>>
>> Like I said, it doesn't appear to be a fatal exception, but I'd like
>> to make it go away. Any ideas?
>
> I saw this too.  It has to do with the plugin cache directory not
> being writable; there's a bug filed on it on the Twisted Trac.  I
> ended up modifying the library code to get rid of it; the file to
> change is the one in the error message and the fix is listed in the
> bug in the Twisted Trac instance.

Hmm, sorry to question, but are you sure?

I only ask because I'm fairly certain all my plugin directories  
(including Twisted's) are all writeable. I run them out of the SVN  
checkout in my home dir, using egg-/symlinks

AFAIK, the error you're referring to is mentioned in this ticket, and  
possibly others:

	http://twistedmatrix.com/trac/ticket/2409

and also this FAQ entry:

	http://preview.tinyurl.com/nbrjbw

which is a distinctly different exception, 'permission  
denied' (IOError, I think).

-phil



