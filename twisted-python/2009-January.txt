From johnaherne at rocs.co.uk  Fri Jan  2 05:14:40 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 2 Jan 2009 10:14:40 +0000
Subject: [Twisted-Python] Best place to put application code
Message-ID: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>

One thing that has been puzzling me is where is the best place to put
application code.

The case I am using is straightforward TCP server with client connections
making simple requests and waiting for responses retrieved from database
tables to be sent back.

Reading the docs and looking at various examples provided in books and
documentation has left me a bit confused.

Is there a best practice for where application code should go - either the
protcocol class or the factory class or somewhere else. Does it actually
matter.

Is there any downside to putting application code in the protocol or
factory. What pitfalls are there for either approach.

I see examples where application code appears in both classes, but the
examples are very small so may not be indicative of what should be done.

In the docs I see reference to most of the code will be written in the
protocol class, but that seems to be referring to actually writing protocols
not application code. It also says that when the protocol needs to call
application code to make it a method call -  not to mix protocol and
application code. This could just mean creating some methods in the protocol
class to handle the task.

However, if the application code needs to run for 10-12 seconds looking up
database tables and accumulating results and waiting on  deferreds, should
all this code reside in the protocol class or the factory.

If I keep it in the protocol, then I already have my client connection to
write back to. So that seems to be the place to keep the code.

If I put the code in the factory, then I need to pass the client connection
so it can write back to the client. Or is there another way of doing this I
have missed.
.
The factory seems to be the place where other classes can be passed in and
the protocol can call them via self.factory. That seems to imply that
application code should be put into the factory, but I can't see any way of
passing back information from deferred results to the call from protocol.
It's ok if it was just a simple method call that returns a result, but if
the code has to run a series of deferreds then it will be the called method
that will have the result and it will need a means of writing this back to
the client. I don't think I can signal the protocol to say I now have the
result.Of course I could easily be mistaken. So please correct.

Of course if I passs the client connection to the factory, then it can use
this to write back. But that means passing around the client connection.
Should I avoid doing that or is that not a problem.

I hope I have explained myself clearly. I'm just looking for some guidance
and pointers to what is best to do or what is best to avoid.

Regards

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090102/94e1efd2/attachment.htm 

From apenon at gmail.com  Fri Jan  2 10:20:46 2009
From: apenon at gmail.com (Deniz Pecel)
Date: Fri, 2 Jan 2009 15:20:46 +0000
Subject: [Twisted-Python] ssh v1 support
In-Reply-To: <3fce0ae70812260817r463a8248i935375f304302072@mail.gmail.com>
References: <6a9316280812260747r12b0cafaq187a8e1311a23b09@mail.gmail.com>
	<3fce0ae70812260817r463a8248i935375f304302072@mail.gmail.com>
Message-ID: <6a9316280901020720o47b8a8fbo9e8d5d4c2429340e@mail.gmail.com>

Thanks Cary. Are there any available easy to use library other than twisted
that supports ssh v1?
Deniz

On Fri, Dec 26, 2008 at 4:17 PM, Cary Hull <cary.hull at gmail.com> wrote:

> Not out of the box. Conch is ssh2 only. However, you can attain ssh1
> support by wrapping the binary (ssh) with a ProcessProtocol:
>
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
> Before you start on your own implementation I would wait to see if
> anyone has done this already and wouldn't mind sharing. :)
>
> -Cary
>
> On Fri, Dec 26, 2008 at 7:47 AM, Deniz Pecel <apenon at gmail.com> wrote:
> > Hi List
> > Does twisted support ssh v1?
> > thanks
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
>
>
> --
> 01100011 01100001 01110010 01111001
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090102/fe338b25/attachment.htm 

From exarkun at divmod.com  Fri Jan  2 10:59:56 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 2 Jan 2009 10:59:56 -0500
Subject: [Twisted-Python] Best place to put application code
In-Reply-To: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
Message-ID: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>

On Fri, 2 Jan 2009 10:14:40 +0000, John Aherne <johnaherne at rocs.co.uk> wrote:
>One thing that has been puzzling me is where is the best place to put
>application code.

It depends. :)

>
>The case I am using is straightforward TCP server with client connections
>making simple requests and waiting for responses retrieved from database
>tables to be sent back.
>
>Reading the docs and looking at various examples provided in books and
>documentation has left me a bit confused.
>
>Is there a best practice for where application code should go - either the
>protcocol class or the factory class or somewhere else. Does it actually
>matter.
>
>Is there any downside to putting application code in the protocol or
>factory. What pitfalls are there for either approach.

Best practice for a Protocol class is to include code which is necessary
to interpret bytes which are received and turn them into a structured form
which is easier to deal with; code which starts from some structured form
and emits bytes to be sent should also be part of a Protocol class.

It is common practice to have a class which includes just these things and
then a subclass which adds application-specific logic based on top of this
functionality.  It is also common practice to connect a protocol which has
only these things, no application-specific code, and then have application
code elsewhere (in a free function, a method of a factory, another class's
method, user input, etc) make calls onto it.  Which of these approaches is
most well suited to a particular application depends.  For example, if the application code creates multiple connections with shared state adding the application logic to a Protocol subclass isn't a good approach.

>I see examples where application code appears in both classes, but the
>examples are very small so may not be indicative of what should be done.

Generally they're so small that there's no advantage to any approach over
any other, yes.

>In the docs I see reference to most of the code will be written in the
>protocol class, but that seems to be referring to actually writing protocols
>not application code. It also says that when the protocol needs to call
>application code to make it a method call -  not to mix protocol and
>application code. This could just mean creating some methods in the protocol
>class to handle the task.

Consider all of the code you write to be part of a library you're developing.
If you implement a protocol, then you've just written part of a library which
provides a slightly higher-level API for interacting with the network in some
way.  With that in hand, you can move on to some other part of your library
which uses that higher-level API to accomplish something even higher-level,
perhaps presenting yet another API to some other part of your application
which is higher-level still.  The motivation to not mix protocol and
application code is just the motivation to have clear boundaries in your
library to make as much of it reusable as possible.  If you have a protocol
implementation mixed together with application A, when you come along to
write application B which needs to use the same protocol, you'll have to
re-implement the protocol, or refactor your original implementation to move
the application A code elsewhere (of course, there's nothing wrong with
having to refactor your code - it's a common part of programming, and since
it's very difficult to predict the future, it's often best *not* to try to
anticipate your future requirements when writing code - just write what works
and is easily testable, and when your future requirements come along, deal
with them then; as you do this more and more, you'll probably get a sense of
how to structure your code to minimize the effort required for refactoring,
but aside from experience with this process, I don't know of any way to learn
this skill).

>However, if the application code needs to run for 10-12 seconds looking up
>database tables and accumulating results and waiting on  deferreds, should
>all this code reside in the protocol class or the factory.

I wouldn't take the duration of the task into consideration when trying to
decide where to put it.  I'd consider reusability, testability, simplicity,
and correctness.

>
>If I keep it in the protocol, then I already have my client connection to
>write back to. So that seems to be the place to keep the code.
>
>If I put the code in the factory, then I need to pass the client connection
>so it can write back to the client. Or is there another way of doing this I
>have missed.

This isn't much different from the trade-off you have to consider when you
decide to implement anything as two classes instead of one.  Since you can
no longer just use `self? everywhere, you'll have to figure out how to get
a reference to the other instance that you need sometimes.  This shouldn't
be difficult though - just invoke a method on one class with an instance of
the other.

>.
>The factory seems to be the place where other classes can be passed in and
>the protocol can call them via self.factory. That seems to imply that
>application code should be put into the factory, but I can't see any way of
>passing back information from deferred results to the call from protocol.
>It's ok if it was just a simple method call that returns a result, but if
>the code has to run a series of deferreds then it will be the called method
>that will have the result and it will need a means of writing this back to
>the client. I don't think I can signal the protocol to say I now have the
>result.Of course I could easily be mistaken. So please correct.

This is just what Deferreds are for.  For example, let's consider a protocol
and factory for a game server lobby.  The protocol has a message type which
lets the server inform the client of the list of games which are currently
available to be joined.  The Protocol subclass sends this information to
the client when the connection is established, but it uses the factory
to actually find the list of games that are available.  Again, this
division is probably desirable for a number of reasons (it simplifies
unit testing, for example).

class GameFactory(ServerFactory):
    def availableGames(self):
        """
        Return a Deferred which will fire with a list of the games
        currently available to be joined.
        """
        return self.connectionPool.runQuery(
            "SELECT game_id FROM available_games")


class GameProtocol(Protocol):
    def connectionMade(self):
        """
        Send the available-games message so the client can pick one to
        join.
        """
        d = self.factory.availableGames()
        def cbGotGames(games):
            self.transport.write(" ".join(games))
        d.addCallback(cbGotGames)
        d.addErrback(log.err)

>
>Of course if I passs the client connection to the factory, then it can use
>this to write back. But that means passing around the client connection.
>Should I avoid doing that or is that not a problem.

It's an option, but I hope the above example will show how you can use
Deferreds to avoid needing to do this.

>
>I hope I have explained myself clearly. I'm just looking for some guidance
>and pointers to what is best to do or what is best to avoid.
>

Hope this helps,

Jean-Paul



From jarrod at vertigrated.com  Fri Jan  2 17:21:46 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 2 Jan 2009 17:21:46 -0500
Subject: [Twisted-Python] Best place to put application code
In-Reply-To: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
References: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
Message-ID: <fa3d0c740901021421n6192a884y7a295a6eaa768421@mail.gmail.com>

On Fri, Jan 2, 2009 at 5:14 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

> One thing that has been puzzling me is where is the best place to put
> application code.


business logic should go in the "Service" class.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090102/70c83b85/attachment.htm 

From toreason at fastmail.fm  Fri Jan  2 17:35:22 2009
From: toreason at fastmail.fm (V S P)
Date: Fri, 02 Jan 2009 17:35:22 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
Message-ID: <1230935722.15394.1292733079@webmail.messagingengine.com>

Hi, 
I am in the process of evaluating a tool for the newtorking architecture
I need. And wanted to ask the group questions, I could not easily get
answered from reading docs and various posts:

Basically my architecutre requires the following

a) multi-CPU/multi-core scalability

b) multi-machine horizontal scalability

c) Event dispatching:  having a single 'dispatcher' instance
being able to read rows (events) from postgresql database and 
being able to dispatch it to available 'worker' processes

d) chat server


For c) and d) am looking for a framework such that it will allow me
to develop the 'worker' processes such that they reside on mulitple
machines, and a lot of the 'hard work' of registration, message passing,
restarting, SNMP compatibilty .

Twisted appears to already have message passing, chat server and many
many other neat things that if I do not need now -- probably will need
in the future.

However, I cannot quite understand how the 'multi-process' part is
supported.

I have read this: 
http://www.python.org/workshops/2002-02/papers/09/index.htm
(found it via Bruce Eckel's log)
and it says that:
"... 
and since forking Python processes has many disadvantages, like Python's
reference counting not playing well with copy-on-write and problems with
shared state, it was felt the best option was an event-driven framework.
"

I also looked at the docs for the 
http://twistedmatrix.com/projects/core/documentation/howto/process.html


But I got confused there


Basically I am looking to 'pre-spawn' a number of worker threads
configured from command line (and each of the worker threads will
precreate a database connection).  So each multi-cpu machine will
have one twisted Server, each server will pre-spawn N worker processes
and each process will have its own database connection (and therefore
each can do its own caching and transaction control (or use memchaced
server) to share cache).


I did not see however how to:
a) make the Deferred mechanism to pass the event data received
in the Asynch loop to one of the worker processes
(there are appeared to be no 'inheritance' structure to where derive
the worker processes from).


b) I did not see how multiple twisted servers, each running on a
separate
multi-cpu machine can register together to be in one 'cluster' -- so
that
my dispatcher process that reads the events from the database can
'round-robin' the events to them.

c) I did not see if twisted 'figures out' that given process runs on a
local machine vs remote and optimises the IPC communication for local
IPC.


Because I did not see the above -- it lead me to believe that I am
trying to ask Twisted have something it was not meant to do 
(My view of the architecture is somewhat similar to how would ACE/TAO
ORB notification service would work -- as I am familiar with those).


I kind of did not go into the multi-box architecutre of how the 
Twisted chart server is working, because I thought I need to understand
the above first.

So wanted to ask you guys if I am looking for the right documentation
or may be there is a separate sub-project that is doing what I am
looking for.

thanks in advance,
Vlad




-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Or how I learned to stop worrying and
                          love email again




From johnaherne at rocs.co.uk  Sat Jan  3 06:16:41 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Sat, 3 Jan 2009 11:16:41 +0000
Subject: [Twisted-Python] Best place to put application code
In-Reply-To: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
References: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
	<20090102155956.20272.958450739.divmod.quotient.30688@ohm>
Message-ID: <faf2d7810901030316m6da00d34v4217385d475c1ec0@mail.gmail.com>

Thanks for the reply.
Very helpful. despite the question being like 'How long is a piece of
string'.

It's good to just hear what someone else reckons is the way to structure the
code.

I like the code sample.It makes clearer what some of my options are. So I'll
have a look and see how I can make use of it.

Thanks once again.

John Aherne



On Fri, Jan 2, 2009 at 3:59 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Fri, 2 Jan 2009 10:14:40 +0000, John Aherne <johnaherne at rocs.co.uk>
> wrote:
>
>> One thing that has been puzzling me is where is the best place to put
>> application code.
>>
>
> It depends. :)
>
>
>> The case I am using is straightforward TCP server with client connections
>> making simple requests and waiting for responses retrieved from database
>> tables to be sent back.
>>
>> Reading the docs and looking at various examples provided in books and
>> documentation has left me a bit confused.
>>
>> Is there a best practice for where application code should go - either the
>> protcocol class or the factory class or somewhere else. Does it actually
>> matter.
>>
>> Is there any downside to putting application code in the protocol or
>> factory. What pitfalls are there for either approach.
>>
>
> Best practice for a Protocol class is to include code which is necessary
> to interpret bytes which are received and turn them into a structured form
> which is easier to deal with; code which starts from some structured form
> and emits bytes to be sent should also be part of a Protocol class.
>
> It is common practice to have a class which includes just these things and
> then a subclass which adds application-specific logic based on top of this
> functionality.  It is also common practice to connect a protocol which has
> only these things, no application-specific code, and then have application
> code elsewhere (in a free function, a method of a factory, another class's
> method, user input, etc) make calls onto it.  Which of these approaches is
> most well suited to a particular application depends.  For example, if the
> application code creates multiple connections with shared state adding the
> application logic to a Protocol subclass isn't a good approach.
>
>  I see examples where application code appears in both classes, but the
>> examples are very small so may not be indicative of what should be done.
>>
>
> Generally they're so small that there's no advantage to any approach over
> any other, yes.
>
>  In the docs I see reference to most of the code will be written in the
>> protocol class, but that seems to be referring to actually writing
>> protocols
>> not application code. It also says that when the protocol needs to call
>> application code to make it a method call -  not to mix protocol and
>> application code. This could just mean creating some methods in the
>> protocol
>> class to handle the task.
>>
>
> Consider all of the code you write to be part of a library you're
> developing.
> If you implement a protocol, then you've just written part of a library
> which
> provides a slightly higher-level API for interacting with the network in
> some
> way.  With that in hand, you can move on to some other part of your library
> which uses that higher-level API to accomplish something even higher-level,
> perhaps presenting yet another API to some other part of your application
> which is higher-level still.  The motivation to not mix protocol and
> application code is just the motivation to have clear boundaries in your
> library to make as much of it reusable as possible.  If you have a protocol
> implementation mixed together with application A, when you come along to
> write application B which needs to use the same protocol, you'll have to
> re-implement the protocol, or refactor your original implementation to move
> the application A code elsewhere (of course, there's nothing wrong with
> having to refactor your code - it's a common part of programming, and since
> it's very difficult to predict the future, it's often best *not* to try to
> anticipate your future requirements when writing code - just write what
> works
> and is easily testable, and when your future requirements come along, deal
> with them then; as you do this more and more, you'll probably get a sense
> of
> how to structure your code to minimize the effort required for refactoring,
> but aside from experience with this process, I don't know of any way to
> learn
> this skill).
>
>  However, if the application code needs to run for 10-12 seconds looking up
>> database tables and accumulating results and waiting on  deferreds, should
>> all this code reside in the protocol class or the factory.
>>
>
> I wouldn't take the duration of the task into consideration when trying to
> decide where to put it.  I'd consider reusability, testability, simplicity,
> and correctness.
>
>
>> If I keep it in the protocol, then I already have my client connection to
>> write back to. So that seems to be the place to keep the code.
>>
>> If I put the code in the factory, then I need to pass the client
>> connection
>> so it can write back to the client. Or is there another way of doing this
>> I
>> have missed.
>>
>
> This isn't much different from the trade-off you have to consider when you
> decide to implement anything as two classes instead of one.  Since you can
> no longer just use `self? everywhere, you'll have to figure out how to get
> a reference to the other instance that you need sometimes.  This shouldn't
> be difficult though - just invoke a method on one class with an instance of
> the other.
>
>  .
>> The factory seems to be the place where other classes can be passed in and
>> the protocol can call them via self.factory. That seems to imply that
>> application code should be put into the factory, but I can't see any way
>> of
>> passing back information from deferred results to the call from protocol.
>> It's ok if it was just a simple method call that returns a result, but if
>> the code has to run a series of deferreds then it will be the called
>> method
>> that will have the result and it will need a means of writing this back to
>> the client. I don't think I can signal the protocol to say I now have the
>> result.Of course I could easily be mistaken. So please correct.
>>
>
> This is just what Deferreds are for.  For example, let's consider a
> protocol
> and factory for a game server lobby.  The protocol has a message type which
> lets the server inform the client of the list of games which are currently
> available to be joined.  The Protocol subclass sends this information to
> the client when the connection is established, but it uses the factory
> to actually find the list of games that are available.  Again, this
> division is probably desirable for a number of reasons (it simplifies
> unit testing, for example).
>
> class GameFactory(ServerFactory):
>   def availableGames(self):
>       """
>       Return a Deferred which will fire with a list of the games
>       currently available to be joined.
>       """
>       return self.connectionPool.runQuery(
>           "SELECT game_id FROM available_games")
>
>
> class GameProtocol(Protocol):
>   def connectionMade(self):
>       """
>       Send the available-games message so the client can pick one to
>       join.
>       """
>       d = self.factory.availableGames()
>       def cbGotGames(games):
>           self.transport.write(" ".join(games))
>       d.addCallback(cbGotGames)
>       d.addErrback(log.err)
>
>
>> Of course if I passs the client connection to the factory, then it can use
>> this to write back. But that means passing around the client connection.
>> Should I avoid doing that or is that not a problem.
>>
>
> It's an option, but I hope the above example will show how you can use
> Deferreds to avoid needing to do this.
>
>
>> I hope I have explained myself clearly. I'm just looking for some guidance
>> and pointers to what is best to do or what is best to avoid.
>>
>>
> Hope this helps,
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090103/b8500549/attachment.htm 

From johnaherne at rocs.co.uk  Sat Jan  3 06:19:09 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Sat, 3 Jan 2009 11:19:09 +0000
Subject: [Twisted-Python] Best place to put application code
In-Reply-To: <fa3d0c740901021421n6192a884y7a295a6eaa768421@mail.gmail.com>
References: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
	<fa3d0c740901021421n6192a884y7a295a6eaa768421@mail.gmail.com>
Message-ID: <faf2d7810901030319q2151ea86ucae4d1e3d8850f66@mail.gmail.com>

Thanks for the reply.
Very interesting thought. I had used the service for some work, but hadn't
thought I should use it to put business logic in.

So thanks for the information.

John Aherne


On Fri, Jan 2, 2009 at 10:21 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

>
>
> On Fri, Jan 2, 2009 at 5:14 AM, John Aherne <johnaherne at rocs.co.uk> wrote:
>
>> One thing that has been puzzling me is where is the best place to put
>> application code.
>
>
> business logic should go in the "Service" class.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090103/bbba821c/attachment.htm 

From cary.hull at gmail.com  Sat Jan  3 11:31:52 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Sat, 3 Jan 2009 08:31:52 -0800
Subject: [Twisted-Python] ssh v1 support
In-Reply-To: <6a9316280901020720o47b8a8fbo9e8d5d4c2429340e@mail.gmail.com>
References: <6a9316280812260747r12b0cafaq187a8e1311a23b09@mail.gmail.com>
	<3fce0ae70812260817r463a8248i935375f304302072@mail.gmail.com>
	<6a9316280901020720o47b8a8fbo9e8d5d4c2429340e@mail.gmail.com>
Message-ID: <3fce0ae70901030831w7abe6280ob4289cd79951943a@mail.gmail.com>

I suppose it depends on what you mean by support. Libraries like
paramiko and conch provide an actual protocol implementation in
Python, which means you can do some interesting things with channels.
Otherwise it seems you're stuck with an expect like model for driving
the ssh1 binary. Pexpect provides some built in support for driving
ssh this way:
http://pexpect.sourceforge.net/pxssh.html

On Fri, Jan 2, 2009 at 7:20 AM, Deniz Pecel <apenon at gmail.com> wrote:
> Thanks Cary. Are there any available easy to use library other than twisted
> that supports ssh v1?
> Deniz
>
> On Fri, Dec 26, 2008 at 4:17 PM, Cary Hull <cary.hull at gmail.com> wrote:
>>
>> Not out of the box. Conch is ssh2 only. However, you can attain ssh1
>> support by wrapping the binary (ssh) with a ProcessProtocol:
>>
>> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>>
>> Before you start on your own implementation I would wait to see if
>> anyone has done this already and wouldn't mind sharing. :)
>>
>> -Cary
>>
>> On Fri, Dec 26, 2008 at 7:47 AM, Deniz Pecel <apenon at gmail.com> wrote:
>> > Hi List
>> > Does twisted support ssh v1?
>> > thanks
>> >
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>> >
>>
>>
>>
>> --
>> 01100011 01100001 01110010 01111001
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
01100011 01100001 01110010 01111001



From cary.hull at gmail.com  Sat Jan  3 16:14:48 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Sat, 3 Jan 2009 13:14:48 -0800
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <1230935722.15394.1292733079@webmail.messagingengine.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
Message-ID: <3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>

Take a look at ampoule:
https://launchpad.net/ampoule

On Fri, Jan 2, 2009 at 2:35 PM, V S P <toreason at fastmail.fm> wrote:
> Hi,
> I am in the process of evaluating a tool for the newtorking architecture
> I need. And wanted to ask the group questions, I could not easily get
> answered from reading docs and various posts:
>
> Basically my architecutre requires the following
>
> a) multi-CPU/multi-core scalability
>
> b) multi-machine horizontal scalability
>
> c) Event dispatching:  having a single 'dispatcher' instance
> being able to read rows (events) from postgresql database and
> being able to dispatch it to available 'worker' processes
>
> d) chat server
>
>
> For c) and d) am looking for a framework such that it will allow me
> to develop the 'worker' processes such that they reside on mulitple
> machines, and a lot of the 'hard work' of registration, message passing,
> restarting, SNMP compatibilty .
>
> Twisted appears to already have message passing, chat server and many
> many other neat things that if I do not need now -- probably will need
> in the future.
>
> However, I cannot quite understand how the 'multi-process' part is
> supported.
>
> I have read this:
> http://www.python.org/workshops/2002-02/papers/09/index.htm
> (found it via Bruce Eckel's log)
> and it says that:
> "...
> and since forking Python processes has many disadvantages, like Python's
> reference counting not playing well with copy-on-write and problems with
> shared state, it was felt the best option was an event-driven framework.
> "
>
> I also looked at the docs for the
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
>
> But I got confused there
>
>
> Basically I am looking to 'pre-spawn' a number of worker threads
> configured from command line (and each of the worker threads will
> precreate a database connection).  So each multi-cpu machine will
> have one twisted Server, each server will pre-spawn N worker processes
> and each process will have its own database connection (and therefore
> each can do its own caching and transaction control (or use memchaced
> server) to share cache).
>
>
> I did not see however how to:
> a) make the Deferred mechanism to pass the event data received
> in the Asynch loop to one of the worker processes
> (there are appeared to be no 'inheritance' structure to where derive
> the worker processes from).
>
>
> b) I did not see how multiple twisted servers, each running on a
> separate
> multi-cpu machine can register together to be in one 'cluster' -- so
> that
> my dispatcher process that reads the events from the database can
> 'round-robin' the events to them.
>
> c) I did not see if twisted 'figures out' that given process runs on a
> local machine vs remote and optimises the IPC communication for local
> IPC.
>
>
> Because I did not see the above -- it lead me to believe that I am
> trying to ask Twisted have something it was not meant to do
> (My view of the architecture is somewhat similar to how would ACE/TAO
> ORB notification service would work -- as I am familiar with those).
>
>
> I kind of did not go into the multi-box architecutre of how the
> Twisted chart server is working, because I thought I need to understand
> the above first.
>
> So wanted to ask you guys if I am looking for the right documentation
> or may be there is a separate sub-project that is doing what I am
> looking for.
>
> thanks in advance,
> Vlad
>
>
>
>
> --
>  V S P
>  toreason at fastmail.fm
>
> --
> http://www.fastmail.fm - Or how I learned to stop worrying and
>                          love email again
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
01100011 01100001 01110010 01111001



From toreason at fastmail.fm  Sat Jan  3 17:32:10 2009
From: toreason at fastmail.fm (V S P)
Date: Sat, 03 Jan 2009 17:32:10 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
Message-ID: <1231021930.1898.1292840297@webmail.messagingengine.com>

Thank you so much
Yes, this plugin is what I am looking for process pool
" 
    """
    This plugin provides ways to create a process pool service in your
    system listening on a given port and interface and answering to a
    given set of commands.
    """
"

So I just need to inherit from 
AMPConnector and have a trully scalable server!


Two more questions:

What's the mechanism of 'registring' multiple twisted servers
(something similar to a Name server in Corba) -- so an event
dispatching client can 'discover' the servers running on 
multiple machines

And how does one run multiple XAMPP servers in twisted -- such
that work to each server is distributed either by a hash on a user
name or some other way (or does such mechanism exist).

thank you again for such a helpful reply.







On Sat, 3 Jan 2009 13:14:48 -0800, "Cary Hull" <cary.hull at gmail.com>
said:
> Take a look at ampoule:
> https://launchpad.net/ampoule
> 
> On Fri, Jan 2, 2009 at 2:35 PM, V S P <toreason at fastmail.fm> wrote:
> > Hi,
> > I am in the process of evaluating a tool for the newtorking architecture
> > I need. And wanted to ask the group questions, I could not easily get
> > answered from reading docs and various posts:
> >
> > Basically my architecutre requires the following
> >
> > a) multi-CPU/multi-core scalability
> >
> > b) multi-machine horizontal scalability
> >
> > c) Event dispatching:  having a single 'dispatcher' instance
> > being able to read rows (events) from postgresql database and
> > being able to dispatch it to available 'worker' processes
> >
> > d) chat server
> >
> >
> > For c) and d) am looking for a framework such that it will allow me
> > to develop the 'worker' processes such that they reside on mulitple
> > machines, and a lot of the 'hard work' of registration, message passing,
> > restarting, SNMP compatibilty .
> >
> > Twisted appears to already have message passing, chat server and many
> > many other neat things that if I do not need now -- probably will need
> > in the future.
> >
> > However, I cannot quite understand how the 'multi-process' part is
> > supported.
> >
> > I have read this:
> > http://www.python.org/workshops/2002-02/papers/09/index.htm
> > (found it via Bruce Eckel's log)
> > and it says that:
> > "...
> > and since forking Python processes has many disadvantages, like Python's
> > reference counting not playing well with copy-on-write and problems with
> > shared state, it was felt the best option was an event-driven framework.
> > "
> >
> > I also looked at the docs for the
> > http://twistedmatrix.com/projects/core/documentation/howto/process.html
> >
> >
> > But I got confused there
> >
> >
> > Basically I am looking to 'pre-spawn' a number of worker threads
> > configured from command line (and each of the worker threads will
> > precreate a database connection).  So each multi-cpu machine will
> > have one twisted Server, each server will pre-spawn N worker processes
> > and each process will have its own database connection (and therefore
> > each can do its own caching and transaction control (or use memchaced
> > server) to share cache).
> >
> >
> > I did not see however how to:
> > a) make the Deferred mechanism to pass the event data received
> > in the Asynch loop to one of the worker processes
> > (there are appeared to be no 'inheritance' structure to where derive
> > the worker processes from).
> >
> >
> > b) I did not see how multiple twisted servers, each running on a
> > separate
> > multi-cpu machine can register together to be in one 'cluster' -- so
> > that
> > my dispatcher process that reads the events from the database can
> > 'round-robin' the events to them.
> >
> > c) I did not see if twisted 'figures out' that given process runs on a
> > local machine vs remote and optimises the IPC communication for local
> > IPC.
> >
> >
> > Because I did not see the above -- it lead me to believe that I am
> > trying to ask Twisted have something it was not meant to do
> > (My view of the architecture is somewhat similar to how would ACE/TAO
> > ORB notification service would work -- as I am familiar with those).
> >
> >
> > I kind of did not go into the multi-box architecutre of how the
> > Twisted chart server is working, because I thought I need to understand
> > the above first.
> >
> > So wanted to ask you guys if I am looking for the right documentation
> > or may be there is a separate sub-project that is doing what I am
> > looking for.
> >
> > thanks in advance,
> > Vlad
> >
> >
> >
> >
> > --
> >  V S P
> >  toreason at fastmail.fm
> >
> > --
> > http://www.fastmail.fm - Or how I learned to stop worrying and
> >                          love email again
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> 
> 
> 
> -- 
> 01100011 01100001 01110010 01111001
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - mmm... Fastmail...




From exarkun at twistedmatrix.com  Sun Jan  4 00:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Jan 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1231045511.29.1920708934@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090104/3ea16f0a/attachment.htm 

From hancock.robert at gmail.com  Sun Jan  4 21:52:59 2009
From: hancock.robert at gmail.com (Robert Hancock)
Date: Sun, 4 Jan 2009 21:52:59 -0500
Subject: [Twisted-Python] Looping
Message-ID: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>

I have a process that takes a list of URLs, uses client.getPage() to
retrieve the data, writes the contents to disk, and then moves the
file to another directory.

   # get feed list - this is a list tuples
    # url, name, username, password
    url_tuples = feed_list(feed_file)

    global C_URLS
    d =  defer.succeed(log_start(log))

    for tup_url in url_tuples:
        C_URLS += 1

        d.addCallback(get_page, tup_url)
        d.addErrback(get_page_error, tup_url[0])

        d.addCallback(page_to_file, tup_url)
        d.addErrback(page_to_file_error)

        d.addCallback(file_to_rsync_queue)
        d.addErrback(file_to_rsync_queue)

        d.addCallback(stop_working)
        #d.addErrback(self.gotError, (feed[0], 'while stopping'))

    reactor.run()

I want to put this into a loop and run it as a daemon, but the looping
is causing me a problem.  I've tried making the above into a procedure
(minus the stop working call back and reactor.run())  and it does not
run.  Any suggestions on how to encapsulate this into loop would be
gratefully appreciated.



From terry at jon.es  Sun Jan  4 22:08:14 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 5 Jan 2009 04:08:14 +0100
Subject: [Twisted-Python] Looping
In-Reply-To: Your message at 21:52:59 on Sunday, 4 January 2009
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
Message-ID: <18785.31134.721239.346967@jon.es>

>>>>> "Robert" == Robert Hancock <hancock.robert at gmail.com> writes:

Robert> I want to put this into a loop and run it as a daemon, but the
Robert> looping is causing me a problem.  I've tried making the above into
Robert> a procedure (minus the stop working call back and reactor.run())
Robert> and it does not run.  Any suggestions on how to encapsulate this
Robert> into loop would be gratefully appreciated.

It's hard to help unless you post more of your code or are more specific.
What do you mean "the looping is causing me a problem"?

How many urls are in url_tuples?

Is there a reason why you're using just one deferred?

Also why not use client.downloadPage to put the contents into files?

Terry



From Andy at newworldelectric.com  Sun Jan  4 22:19:23 2009
From: Andy at newworldelectric.com (Andy Fundinger)
Date: Sun, 4 Jan 2009 22:19:23 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
Message-ID: <37d49ed40901041919g6e566e09x3de8fffb5b0097e2@mail.gmail.com>

In twisted a polling loop usually translates into either a system of
reactor.callLaters or a twisted.internet.task.LoopingCall.

Either like this this:

    def __init__(self,oaf,interval=600):

        self.interval=interval
        reactor.callLater(5,self.checkSystem)

    def checkSystem(self):
        reactor.callLater(self.interval,self.checkSystem)

or like this:

    def __init__(self,oaf,interval=600):

        self.interval=interval
        task.LoopingCall(self.checkSystem).start(self.interval)

When I wrote what may be a similar system I actually set it up to refresh
only when a client requested the output and the local copy was out of date,
so you may actually prefer that approach.

-Andy Fundinger

On Sun, Jan 4, 2009 at 9:52 PM, Robert Hancock <hancock.robert at gmail.com>wrote:

> I have a process that takes a list of URLs, uses client.getPage() to
> retrieve the data, writes the contents to disk, and then moves the
> file to another directory.
>
>   # get feed list - this is a list tuples
>    # url, name, username, password
>    url_tuples = feed_list(feed_file)
>
>    global C_URLS
>    d =  defer.succeed(log_start(log))
>
>    for tup_url in url_tuples:
>        C_URLS += 1
>
>        d.addCallback(get_page, tup_url)
>        d.addErrback(get_page_error, tup_url[0])
>
>        d.addCallback(page_to_file, tup_url)
>        d.addErrback(page_to_file_error)
>
>        d.addCallback(file_to_rsync_queue)
>        d.addErrback(file_to_rsync_queue)
>
>        d.addCallback(stop_working)
>        #d.addErrback(self.gotError, (feed[0], 'while stopping'))
>
>    reactor.run()
>
> I want to put this into a loop and run it as a daemon, but the looping
> is causing me a problem.  I've tried making the above into a procedure
> (minus the stop working call back and reactor.run())  and it does not
> run.  Any suggestions on how to encapsulate this into loop would be
> gratefully appreciated.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

How could you possibly think typing 'import skynet' was a good idea?
http://xkcd.com/521/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090104/309fa3a5/attachment.htm 

From hancock.robert at gmail.com  Sun Jan  4 23:21:36 2009
From: hancock.robert at gmail.com (Robert Hancock)
Date: Sun, 4 Jan 2009 23:21:36 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <18785.31134.721239.346967@jon.es>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
Message-ID: <613d56580901042021m2691a924r922f78147127b93@mail.gmail.com>

 How many urls are in url_tuples?

>
> Is there a reason why you're using just one deferred?
>
> Also why not use client.downloadPage to put the contents into files?
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From hancock.robert at gmail.com  Sun Jan  4 23:23:06 2009
From: hancock.robert at gmail.com (Robert Hancock)
Date: Sun, 4 Jan 2009 23:23:06 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <18785.31134.721239.346967@jon.es>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
Message-ID: <613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>

> How many urls are in url_tuples?
4 - 32
> Is there a reason why you're using just one deferred?
What is the advantage of using more?

> Also why not use client.downloadPage to put the contents into files?
Because I may want to parse the output before writing to a file.



From Andy at newworldelectric.com  Mon Jan  5 08:34:58 2009
From: Andy at newworldelectric.com (Andy Fundinger)
Date: Mon, 5 Jan 2009 08:34:58 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
	<613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
Message-ID: <37d49ed40901050534y53c79842ibcbade79d183c76d@mail.gmail.com>

>
>
> > Is there a reason why you're using just one deferred?
> What is the advantage of using more?
>

If you use more with a DeferredList you can have [effectively] parallel page
fetches.  It's like spawning threads for each page, but twisted doesn't
actually spawn threads for this I don't think.  The net effect is pretty
much the same since it will send out all the requests before the replies
come in and then handle all of them as they come in.  Especially, for a
system reading multiple websites, if two or more are down in a DeferredList
your system will overlap the timeout periods rather than waiting them out
sequentially.

-Andy

-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

How could you possibly think typing 'import skynet' was a good idea?
http://xkcd.com/521/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090105/940f263d/attachment.htm 

From maik.friedmann at googlemail.com  Mon Jan  5 10:55:11 2009
From: maik.friedmann at googlemail.com (Maik Friedmann)
Date: Mon, 5 Jan 2009 17:55:11 +0200
Subject: [Twisted-Python] Perspective broker and inlineCallbacks exception
	handling problem
Message-ID: <21d642ab0901050755l3110cf52x72ef84f794d98d57@mail.gmail.com>

Hello,

I am developing a basic client/server application based on twisted.
For communication purposes I am using perspective broker. I have
problems with inlineCallbacks and remotely raised errors:

My client code looks like this (pseudo code):

class Client:
  @defer.inlineCallbacks
  def login(self, prms):
    self.factory = pb.PBClientFactory()
    reactor.connect(host, port)
    self.perspective = yield self.factory.login()
    self.services = yield self.perspective.callRemote('getClientServices')

When using this class in application, I want to handle errors raised remotely:

@defer.inlineCallbacks
def main():
  client = Client()
  try:
    yield client.login(prms)
  except Exception, e:
    print 'Handled exception:', e

However, no matter what is raised on remote side, except block is
never used. But if I change the code to plain except, exception is
handled:

@defer.inlineCallbacks
def main():
  client = Client()
  try:
    client.login(prms)
  except:
    print 'Some error occurred'

If I rewrite this function using classic deferred style, it works as
excepted (prints error with the correct type):

def eb_failure(failure):
  print type(failure), failure

def cb_success(result):
  print 'OK', result

def main():
  client = Client()
  d = client.login(prms)
  d.addCallbacks(cb_success, eb_failure)

I am purposely raising errors derived from pb.Error. Using the
inlineCallbacks version I can only inspect remote errors with
sys.exc_info(), and that results in a plain string object, which
includes the classname of the original error like
'myerror.MyAuthenticationError'

What am I doing wrong? Is there a way to resolve this?

Regards,
Maik



From drew.smathers at gmail.com  Mon Jan  5 11:53:10 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 5 Jan 2009 11:53:10 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
	<613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
Message-ID: <368574aa0901050853t5d7f2603xa6e63301a42e1517@mail.gmail.com>

On Sun, Jan 4, 2009 at 11:23 PM, Robert Hancock
<hancock.robert at gmail.com> wrote:
>> How many urls are in url_tuples?
> 4 - 32
>> Is there a reason why you're using just one deferred?
> What is the advantage of using more?
>

Concurrency.

-Drew



From terry at jon.es  Mon Jan  5 12:15:11 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 5 Jan 2009 18:15:11 +0100
Subject: [Twisted-Python] Perspective broker and inlineCallbacks exception
	handling problem
In-Reply-To: Your message at 17:55:11 on Monday, 5 January 2009
References: <21d642ab0901050755l3110cf52x72ef84f794d98d57@mail.gmail.com>
Message-ID: <18786.16415.15492.53811@jon.es>

Hi Maik

I'm not an expert on inlineCallbacks, but I know enough to give something
of an answer.

> I am developing a basic client/server application based on twisted.
> For communication purposes I am using perspective broker. I have
> problems with inlineCallbacks and remotely raised errors:
> 
> My client code looks like this (pseudo code):
> 
> class Client:
>   @defer.inlineCallbacks
>   def login(self, prms):
>     self.factory = pb.PBClientFactory()
>     reactor.connect(host, port)
>     self.perspective = yield self.factory.login()
>     self.services = yield self.perspective.callRemote('getClientServices')
> 
> When using this class in application, I want to handle errors raised remotely:
> 
> @defer.inlineCallbacks
> def main():
>   client = Client()
>   try:
>     yield client.login(prms)
>   except Exception, e:
>     print 'Handled exception:', e
> 
> However, no matter what is raised on remote side, except block is
> never used.

The first thing to say is that you shouldn't send us pseudo code. It will
help you understand what's going on if you write a small example and play
with it. And that will help us help you because we'll be able to see
exactly what's going on and run your code ourselves.

Without a real example, it's hard to give a concrete answer. There are
quite a few subtleties involved in using inlineCallbacks, and you're using
it twice.

Below is some working code that has something like the calling pattern you
seem to be trying to set up. If I cause _login to raise an exception, it IS
propagated all the way back to the except Exception clause.


> But if I change the code to plain except, exception is handled:
> 
> @defer.inlineCallbacks
> def main():
>   client = Client()
>   try:
>     client.login(prms)
>   except:
>     print 'Some error occurred'

Note that in the above snippet, you're using inlineCallbacks but you're not
yielding anything. If you try calling this main() function, it will give
you an exception: Failure instance: Traceback: <type
'exceptions.AttributeError'>: 'NoneType' object has no attribute 'send'

That's just an example of the subtleties (and it's not so sublte in this
case), and underlines why you should send us real code.

Are you actually trying to call main()?


> If I rewrite this function using classic deferred style, it works as
> excepted (prints error with the correct type):
> 
> def eb_failure(failure):
>   print type(failure), failure
> 
> def cb_success(result):
>   print 'OK', result
> 
> def main():
>   client = Client()
>   d = client.login(prms)
>   d.addCallbacks(cb_success, eb_failure)

Right. But that code is very different from what's going on behind the
scenes when you use inlineCallbacks.

> I am purposely raising errors derived from pb.Error. Using the
> inlineCallbacks version I can only inspect remote errors with
> sys.exc_info(), and that results in a plain string object, which
> includes the classname of the original error like
> 'myerror.MyAuthenticationError'

How do you raise the error? Let's see the code.

> What am I doing wrong? Is there a way to resolve this?

Sure. But we need to know more first.

Below is some code that might be useful.  It's also worth trying to figure
out how inlineCallbacks does its magic.

Terry

---

#!/usr/bin/python

from twisted.internet import defer, reactor

def _login(d):
    try:
        hello
    except Exception:
        d.errback()
    else:
        d.callback(True)

def login():
    d = defer.Deferred()
    reactor.callLater(1, _login, d)
    return d

class Client:
    @defer.inlineCallbacks
    def login(self, prms):
        yield login()

@defer.inlineCallbacks
def main():
    client = Client()
    try:
        yield client.login(33)
    except Exception, e:
        print 'Handled exception:', e

def ok(result):
    print "ok", result

def nok(failure):
    print "nok", failure

def stop(_):
    reactor.stop()

def go():
    x = main()
    x.addCallback(ok)
    x.addErrback(nok)
    x.addBoth(stop)

if __name__ == '__main__':
    reactor.callLater(0, go)
    reactor.run()



From hancock.robert at gmail.com  Mon Jan  5 23:01:16 2009
From: hancock.robert at gmail.com (Robert Hancock)
Date: Mon, 5 Jan 2009 23:01:16 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <368574aa0901050853t5d7f2603xa6e63301a42e1517@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
	<613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
	<368574aa0901050853t5d7f2603xa6e63301a42e1517@mail.gmail.com>
Message-ID: <613d56580901052001w1a40145n20ec6d78d779383f@mail.gmail.com>

I understand how the deferreds can create concurrency, but I still
cant' figure out how to get the process to loop correctly

I changed the code to use multiple deffereds, but I feel I'm missing a
basic architectural design on how to get the process to run in a loop.
 Any help would be greatly appreciated.

Case 1
-------------
If I execute if with:
   (RSSFeedStorage(GROUPS)).refreshAllFeeds()
    reactor.run()

If executes perfectly, one time.  Or from a loop in a shell script it
also runs fine multiple times.

I would like to perform the same function every 30 seconds from within
the script, but when I try:
    while True:
        (RSSFeedStorage(GROUPS)).refreshAllFeeds()
        reactor.run()
        time.sleep(5)

Case 2
------------
It executes twice and hangs, and when you hit Ctrl-C the traceback is:

  File "main_rss.py", line 94, in <module>
    reactor.run()
  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
line 1128, in run
    self.mainLoop()
  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
line 1137, in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
line 729, in runUntilCurrent
    f(*a, **kw)
  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
line 527, in stop
    "Can't stop reactor that isn't running.")
twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't running.

Case 3
-------------
I tried th task.LoopingCall() example from the manual and wrote:
    rf = RSSFeedStorage(GROUPS)
    l = task.LoopingCall(rf.refreshAllFeeds())
    l.start(10)
[commented out reactor.stop in sto_working()]

and it raises the following exception, I assume because the function
returns a deferred list.

exceptions.AttributeError: DeferredList instance has no __call__ method



==== Code ======

import os
import time
import xml.sax.saxutils

from twisted.internet import reactor, defer, protocol, task
from twisted.web import client

GROUPS = { 'yahoo' : 'http://finance.yahoo.com/rss/usmarkets',
           'bbc':
'http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml',
           'npr': 'http://www.npr.org/rss/rss.php?id=1006',
           'nytimes':
'http://www.nytimes.com/services/xml/rss/nyt/WorldBusiness.xml'
           }
RSYNC_DIR = '/local/apps/rdretrvl/rdsync/rssfeed'
escape_dict = {'/': '_'}


class RssFeed(object):

    def __init__(self, groupName, feedUrl):
        self.refreshRate = 10
        self.title = ''
        self.groupName = groupName
        self.feedUrl = feedUrl
        self.articles = []
        self.articlesById = {}
        self.lastRefreshTime = 0
        self.refreshing = None

    def refreshIfNeeded(self):
        timeSinceRefersh = time.time() - self.lastRefreshTime
        if timeSinceRefersh > self.refreshRate:
            if not self.refreshing:
                self.refreshing = client.getPage(self.feedUrl).addCallback(
                    self._gotFeedData).addErrback(self._getDataFailed)
            d = defer.Deferred()
            self.refreshing.chainDeferred(d)
            return d
        else:
            return defer.succeed(None)

    def _gotFeedData(self, data):
        print "Loaded feed data from %s" % self.feedUrl
        self.refreshing = None
        self.lastRefreshTime = time.time()
        # write to rsync directory
        name = xml.sax.saxutils.escape(self.feedUrl, escape_dict)
        try:
            fnout = os.path.join(RSYNC_DIR, name)
            fout = open(fnout, 'w')
        except IOError, e:
            print e
            #log.error('Opening %s: %s' % (fnout, e))
            return

        try:
            fout.write(data)
            #log.info('Wrote %s.' % fnout)
            print 'Wrote %s.' % fnout
        except IOError, e:
            print e
            #log.error('Wrting to %s: %s' % (fnout, e))
        finally:
            fout.close()

    def _getDataFailed(self, failure):
        print 'Failed to load RSS data from %s: %s' % (self.feedUrl,
failure.getErrorMessage())
        self.refreshing = None
        return failure

class RSSFeedStorage(object):

    def __init__(self, feeds):
        self.feeds = {}
        for groupName, url in feeds.iteritems():
            self.feeds[groupName] = RssFeed(groupName, url)

    def refreshAllFeeds(self):
        refreshes = [feed.refreshIfNeeded() for feed in self.feeds.values()]
        return defer.DeferredList(refreshes).addCallback(self.stop_working).addErrback(self.handleError)

    def stop_working(self, data):
        reactor.stop()
        print 'Reactor stopped'

    def handleError(self, failure):
        print failure

if __name__ == "__main__":

          {execution code goes here]

On Mon, Jan 5, 2009 at 11:53 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Sun, Jan 4, 2009 at 11:23 PM, Robert Hancock
> <hancock.robert at gmail.com> wrote:
>>> How many urls are in url_tuples?
>> 4 - 32
>>> Is there a reason why you're using just one deferred?
>> What is the advantage of using more?
>>
>
> Concurrency.
>
> -Drew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From hoadley at gmail.com  Tue Jan  6 01:09:21 2009
From: hoadley at gmail.com (Rob Hoadley)
Date: Mon, 5 Jan 2009 22:09:21 -0800
Subject: [Twisted-Python] Looping
In-Reply-To: <613d56580901052001w1a40145n20ec6d78d779383f@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
	<613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
	<368574aa0901050853t5d7f2603xa6e63301a42e1517@mail.gmail.com>
	<613d56580901052001w1a40145n20ec6d78d779383f@mail.gmail.com>
Message-ID: <9bb390e70901052209o12a9f175h2163b09a9822a366@mail.gmail.com>

So one problem is understanding the reactor.  It's only meant to be
run once.  Some of your code looks like it's trying to start it more
than once.   You only want one started at a time or weird things
happen.  I'd start here and make sure you understand the reactor:

http://twistedmatrix.com/projects/core/documentation/howto/reactor-basics.html

As far as your problem, you should make your URL grabbing service a
twisted service so you can reach your goal of running it as a daemon
and so you can make a programmatic avenue to add new urls to grab.
You'd also want to learn about making twisted services.   As a
previous poster recommends, you have a two straightforward ways to
call things.  reactor.callLater is the one I like to use.  The example
l show you below is going every 10 seconds.

The way to daemonize things is by using twistd using a tac file.  So
there are a number of things you'll need to cover.  You may want to
slowly go through the twisted tutorial.

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

As a teaser,  In your service __init__ you'd create your
self.localUrls aka GROUPS from above as an object complex or simple as
you want.  You may want to carry around more info. want it to persist,
or not.  Below the data doesn't persist as it's pop'd off a deque.
It's up to you to figure out how you want it to work.

Here are some modules you'd probably want to use and a semi working example:

from twisted.internet import  reactor
from twisted.python import  log
from twisted.web import client
from twisted.application import  service
from collections import deque

class URLGrabService(service.Service):

    def __init__ ( self ):
        # self.urls  = deque() something that contains your urls I like deque
        self.call = reactor.callLater(10,self.getPages)

   def startService( self ):
        # implement your start service code if needed
        # twistd would call this from a succesful Application Object
don't call directly
        service.Service.startService( self )

    def stopService( self ):
       # stop your reactor.call
       if self.call:
           self.call.cancel()
       service.Service.stopService( self )

    def getPages( self ):

        if len( self.urls ):
            localUrls = deque()

            while self.urls:
                localQueue.append( self.localUrls.popleft() )

            # clear out the localUrls and move to a localQueue var

            while localQueue:
                urlObj = localQueue.popleft() # mucho faster than a
list doing pop(0)
                log.msg( 'sending %s' % urlObj.url )
                self._getPage( urlObj )
                # I just create a bunch of deferreds

        self.call = reactor.callLater(10,self.getPages)

	def _getPage( self, urlObj ):
		d = client.getPage( urlObj.url )
	        d.addCallback( self._checkWebStatus, urlObj )
	        d.addErrback( self._readdUrl, urlObj )
	        return d

        def _checkWebStatus( self, page, urlObj ):
               # do the work you'd do on a successful grab

        def _readdUrl( self, urlObj ):
                # handle errors... I generally retry them on the next
cycle and set a urlObj.retry +1

Then you'd want a tac file to pull it all together.  Hope this helps.

-rob




On Mon, Jan 5, 2009 at 8:01 PM, Robert Hancock <hancock.robert at gmail.com> wrote:
> I understand how the deferreds can create concurrency, but I still
> cant' figure out how to get the process to loop correctly
>
> I changed the code to use multiple deffereds, but I feel I'm missing a
> basic architectural design on how to get the process to run in a loop.
>  Any help would be greatly appreciated.
>
> Case 1
> -------------
> If I execute if with:
>   (RSSFeedStorage(GROUPS)).refreshAllFeeds()
>    reactor.run()
>
> If executes perfectly, one time.  Or from a loop in a shell script it
> also runs fine multiple times.
>
> I would like to perform the same function every 30 seconds from within
> the script, but when I try:
>    while True:
>        (RSSFeedStorage(GROUPS)).refreshAllFeeds()
>        reactor.run()
>        time.sleep(5)
>
> Case 2
> ------------
> It executes twice and hangs, and when you hit Ctrl-C the traceback is:
>
>  File "main_rss.py", line 94, in <module>
>    reactor.run()
>  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
> line 1128, in run
>    self.mainLoop()
>  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
> line 1137, in mainLoop
>    self.runUntilCurrent()
> --- <exception caught here> ---
>  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
> line 729, in runUntilCurrent
>    f(*a, **kw)
>  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
> line 527, in stop
>    "Can't stop reactor that isn't running.")
> twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't running.
>
> Case 3
> -------------
> I tried th task.LoopingCall() example from the manual and wrote:
>    rf = RSSFeedStorage(GROUPS)
>    l = task.LoopingCall(rf.refreshAllFeeds())
>    l.start(10)
> [commented out reactor.stop in sto_working()]
>
> and it raises the following exception, I assume because the function
> returns a deferred list.
>
> exceptions.AttributeError: DeferredList instance has no __call__ method
>
>
>
> ==== Code ======
>
> import os
> import time
> import xml.sax.saxutils
>
> from twisted.internet import reactor, defer, protocol, task
> from twisted.web import client
>
> GROUPS = { 'yahoo' : 'http://finance.yahoo.com/rss/usmarkets',
>           'bbc':
> 'http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml',
>           'npr': 'http://www.npr.org/rss/rss.php?id=1006',
>           'nytimes':
> 'http://www.nytimes.com/services/xml/rss/nyt/WorldBusiness.xml'
>           }
> RSYNC_DIR = '/local/apps/rdretrvl/rdsync/rssfeed'
> escape_dict = {'/': '_'}
>
>
> class RssFeed(object):
>
>    def __init__(self, groupName, feedUrl):
>        self.refreshRate = 10
>        self.title = ''
>        self.groupName = groupName
>        self.feedUrl = feedUrl
>        self.articles = []
>        self.articlesById = {}
>        self.lastRefreshTime = 0
>        self.refreshing = None
>
>    def refreshIfNeeded(self):
>        timeSinceRefersh = time.time() - self.lastRefreshTime
>        if timeSinceRefersh > self.refreshRate:
>            if not self.refreshing:
>                self.refreshing = client.getPage(self.feedUrl).addCallback(
>                    self._gotFeedData).addErrback(self._getDataFailed)
>            d = defer.Deferred()
>            self.refreshing.chainDeferred(d)
>            return d
>        else:
>            return defer.succeed(None)
>
>    def _gotFeedData(self, data):
>        print "Loaded feed data from %s" % self.feedUrl
>        self.refreshing = None
>        self.lastRefreshTime = time.time()
>        # write to rsync directory
>        name = xml.sax.saxutils.escape(self.feedUrl, escape_dict)
>        try:
>            fnout = os.path.join(RSYNC_DIR, name)
>            fout = open(fnout, 'w')
>        except IOError, e:
>            print e
>            #log.error('Opening %s: %s' % (fnout, e))
>            return
>
>        try:
>            fout.write(data)
>            #log.info('Wrote %s.' % fnout)
>            print 'Wrote %s.' % fnout
>        except IOError, e:
>            print e
>            #log.error('Wrting to %s: %s' % (fnout, e))
>        finally:
>            fout.close()
>
>    def _getDataFailed(self, failure):
>        print 'Failed to load RSS data from %s: %s' % (self.feedUrl,
> failure.getErrorMessage())
>        self.refreshing = None
>        return failure
>
> class RSSFeedStorage(object):
>
>    def __init__(self, feeds):
>        self.feeds = {}
>        for groupName, url in feeds.iteritems():
>            self.feeds[groupName] = RssFeed(groupName, url)
>
>    def refreshAllFeeds(self):
>        refreshes = [feed.refreshIfNeeded() for feed in self.feeds.values()]
>        return defer.DeferredList(refreshes).addCallback(self.stop_working).addErrback(self.handleError)
>
>    def stop_working(self, data):
>        reactor.stop()
>        print 'Reactor stopped'
>
>    def handleError(self, failure):
>        print failure
>
> if __name__ == "__main__":
>
>          {execution code goes here]
>
> On Mon, Jan 5, 2009 at 11:53 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
>> On Sun, Jan 4, 2009 at 11:23 PM, Robert Hancock
>> <hancock.robert at gmail.com> wrote:
>>>> How many urls are in url_tuples?
>>> 4 - 32
>>>> Is there a reason why you're using just one deferred?
>>> What is the advantage of using more?
>>>
>>
>> Concurrency.
>>
>> -Drew
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From maik.friedmann at googlemail.com  Tue Jan  6 05:43:58 2009
From: maik.friedmann at googlemail.com (Maik Friedmann)
Date: Tue, 6 Jan 2009 12:43:58 +0200
Subject: [Twisted-Python] Perspective broker and inlineCallbacks exception
	handling problem
In-Reply-To: <18786.16415.15492.53811@jon.es>
References: <21d642ab0901050755l3110cf52x72ef84f794d98d57@mail.gmail.com>
	<18786.16415.15492.53811@jon.es>
Message-ID: <21d642ab0901060243u4a8111ddge6c0e6e0077dafd7@mail.gmail.com>

Hello Again,

> The first thing to say is that you shouldn't send us pseudo code. It will
> help you understand what's going on if you write a small example and play
> with it. And that will help us help you because we'll be able to see
> exactly what's going on and run your code ourselves.

That is right, hopefully this new mail will explain what am I asking.

> Note that in the above snippet, you're using inlineCallbacks but you're not
> yielding anything. If you try calling this main() function, it will give
> you an exception: Failure instance: Traceback: <type
> 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'send'
>
> That's just an example of the subtleties (and it's not so sublte in this
> case), and underlines why you should send us real code.
>
> Are you actually trying to call main()?

You are right again, my mistake.

Anyway, I tried running the code you wrote and it works as expected.
My problem is handling exceptions raised on remote calls (via pb).
Attached three scripts are:

server.py: Server implementation, a basic perspective broker example
that includes a custom checker, which in turn uses inlineCallbacks.
client1.py: Client implementation 1, uses inlineCallbacks
client2.py: Client implementation 2, uses plain deferreds

Clients should be same in functionality AFAIK (noting that I am new to
inlineCallbacks). Both clients have wrong passwords configured, so
that they will fail in checker with a custom exception derived from
pb.Error.

My problem is, with the plain deferred version (client2.py), it is
easy to handle (inspect) the error in a errback since I got a Failure
object. However, for inline callbacks, the only way I can catch the
error is using this ugly code (copied from client1.py):

        try:
            ... (pb related calls)
        except:
            print 'Login Failed:',
            print sys.exc_info()[0]

Even this does not catch the error:

        try:
            ... (pb related calls)
        except Exception, e:
            print 'Login Failed:',
            print sys.exc_info()[0]

Furthermore, inlineCallbacks version also prints this deprecation warning:

/usr/lib/python2.5/site-packages/twisted/python/failure.py:331:
DeprecationWarning: raising string exceptions is deprecated
  return g.throw(self.type, self.value, self.tb)

Is there a better way to do this, or am I missing something? BTW I am
running this on a Ubuntu 8.10 (Twisted 8.1).

Regards,
Maik
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: server.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090106/699fea36/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: client1.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090106/699fea36/attachment-0001.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: client2.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090106/699fea36/attachment-0002.txt 

From radix at twistedmatrix.com  Tue Jan  6 15:07:34 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 6 Jan 2009 15:07:34 -0500
Subject: [Twisted-Python] ANN: Twisted 8.2 released
Message-ID: <60ed19d40901061207p4260331en8a4021a0dda0df4c@mail.gmail.com>

Version 8.2 of Twisted is now out (actually, it's been out for over a
week now!). You can download it (in Windows, Mac, and source forms)
at:

    http://twistedmatrix.com/

Twisted 8.2 is a major feature release, also including many important bug fixes:

 * twistd now has a --umask option for specifying the umask
 * Log observers can now be configured in .tac files
 * ProcessProtocols can now implement processExited to get reliable
notification of a process exiting
 * FTPClient has many more convenience methods
 * Twisted.words now has a standalone XMPP router
 * Twisted.names now supports NAPTR records
 * Twisted.web can now deal with multi-value headers and supports the
Range header in requests for static files

There have been many additional improvements which you can read all
about in the release notes:

    http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/NEWS?format=raw


What is Twisted? From the web site:

Twisted is an event-driven networking engine written in Python and
licensed under the MIT license.

Twisted projects variously support TCP, UDP, SSL/TLS, multicast, Unix
sockets, a large number of protocols (including HTTP, NNTP, IMAP, SSH,
IRC, FTP, and others), and much more. See more at:

    http://twistedmatrix.com/


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From lasizoillo at gmail.com  Tue Jan  6 16:26:23 2009
From: lasizoillo at gmail.com (lasizoillo)
Date: Tue, 6 Jan 2009 22:26:23 +0100
Subject: [Twisted-Python] Re: [Twisted-web] ANN: Twisted 8.2 released
In-Reply-To: <60ed19d40901061207p4260331en8a4021a0dda0df4c@mail.gmail.com>
References: <60ed19d40901061207p4260331en8a4021a0dda0df4c@mail.gmail.com>
Message-ID: <49414f570901061326v1d500b35ob95c603ca7d4449f@mail.gmail.com>

2009/1/6 Christopher Armstrong <radix at twistedmatrix.com>:
> Version 8.2 of Twisted is now out (actually, it's been out for over a
> week now!). You can download it (in Windows, Mac, and source forms)
> at:
>
>    http://twistedmatrix.com/

This year is for 9.x version, isn't?

A query to cheese shop returns 8.1 Version:

http://pypi.python.org/pypi?%3Aaction=search&term=twisted&submit=search

:-(

Thanks a lot for all twisted contributors

>
> Twisted 8.2 is a major feature release, also including many important bug fixes:
>
>  * twistd now has a --umask option for specifying the umask
>  * Log observers can now be configured in .tac files
>  * ProcessProtocols can now implement processExited to get reliable
> notification of a process exiting
>  * FTPClient has many more convenience methods
>  * Twisted.words now has a standalone XMPP router
>  * Twisted.names now supports NAPTR records
>  * Twisted.web can now deal with multi-value headers and supports the
> Range header in requests for static files
>
> There have been many additional improvements which you can read all
> about in the release notes:
>
>    http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/NEWS?format=raw
>
>
> What is Twisted? From the web site:
>
> Twisted is an event-driven networking engine written in Python and
> licensed under the MIT license.
>
> Twisted projects variously support TCP, UDP, SSL/TLS, multicast, Unix
> sockets, a large number of protocols (including HTTP, NNTP, IMAP, SSH,
> IRC, FTP, and others), and much more. See more at:
>
>    http://twistedmatrix.com/
>
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



From markus at bluegap.ch  Wed Jan  7 06:05:01 2009
From: markus at bluegap.ch (Markus Wanner)
Date: Wed, 07 Jan 2009 12:05:01 +0100
Subject: [Twisted-Python] [Job] Senior Programmer - SQL, Python, C/C++, PHP
Message-ID: <49648C5D.8080800@bluegap.ch>

Hello,

I'm pleased to announce the following position in our team of talented
engineers. I personally enjoy working here and recommend this job to the
dynamic, motivated self-starter looking for his/ her next career step in
the open source world. Please feel free to forward this to anybody
interested.

Based in beautiful Berlin, we are a medium sized but growing database
solutions provider for various industries and the public sector. Our
main product is easydb, a customizable web-based front-end for SQL
databases, which is being used to organize and share multimedia content.
Thanks to our commitment to provide State-of-the-Art technology, the
number of easydb clients is steadily growing.

Due to growth, we are currently seeking to hire a passionate A-class
senior programmer. You should be a good team player and be fluent in
written and spoken English.  We would love to meet with you, if you have
these must-have skills:

 - Excellent SQL Database Knowledge ( Postgres, Oracle prefered )
 - Excellent Linux User Space Knowledge ( Bash Scripting )
 - Excellent Python, C/C++, PHP Knowledge ( Python Twisted Framework )
 - 5 years of Job or Similar Experience

As a group team leader your main task would be implementing new features
and maintaining easydb (PHP) and easydb Media Server (Python Twisted).

We offer you interesting and challenging projects in a stable environment:

 - successful company with a solid growth model and a corporate
   mission you can believe in
 - good working atmosphere within a highly motivated team with
   flat hierarchies
 - guided familiarization and extraordinary cooperativeness
   opportunity to improve your human and technical skills
 - chance to work on your own authority
 - based in Prenzlauer Berg, conveniently located near
   Alexanderplatz in an historical industrial building
 - excellent pay

For consideration please send your full resume in German or English,
your reference projects and/ or a letter of recommendation to
jobs at programmfabrik.de. Your first day would be 30th March 2009, on site
in Berlin.

Kind Regards

Markus Wanner



From alessio.pace at gmail.com  Fri Jan  9 08:23:12 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Fri, 9 Jan 2009 14:23:12 +0100
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
Message-ID: <84987d20901090523m2afeeb44p44d4589982fa9ed0@mail.gmail.com>

Hi,

I would lilke tro listen on a given TCP port and initiate multiple TCP
client connections from the same port, but I'm encountering the classical:

  <class 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98:
Address already in use

My code is:

######################################

    factory = Factory()
    # an almost empy subclass of Protocol
    factory.protocol = TCPServer

    reactor.listenTCP(12345, factory)

    # ClientFactory subclass which simply instantiate a TCPClient Protocol
    client_factory = TCPClientFactory()

    # last tuple is the bindAdress parameter
    reactor.connectTCP(target_addr, 12345, client_factory, 30, (source_addr,
12345))

#######################################

I've tried to look on the Internet and in the source code but I've not found
a proper solution.

Thanks in advance for any suggestion.
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090109/be1f9de2/attachment.htm 

From adelagon at gmail.com  Fri Jan  9 09:01:13 2009
From: adelagon at gmail.com (Alvin Delagon)
Date: Fri, 9 Jan 2009 22:01:13 +0800
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
In-Reply-To: <84987d20901090523m2afeeb44p44d4589982fa9ed0@mail.gmail.com>
References: <84987d20901090523m2afeeb44p44d4589982fa9ed0@mail.gmail.com>
Message-ID: <7a01f6c00901090601o77fc0b7fn8dcfbe6cec728c49@mail.gmail.com>

You shouldn't bind your client on a port where your server is listening to.

---
Alvin

On Fri, Jan 9, 2009 at 9:23 PM, Alessio Pace <alessio.pace at gmail.com> wrote:

> Hi,
>
> I would lilke tro listen on a given TCP port and initiate multiple TCP
> client connections from the same port, but I'm encountering the classical:
>
>   <class 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98:
> Address already in use
>
> My code is:
>
> ######################################
>
>     factory = Factory()
>     # an almost empy subclass of Protocol
>     factory.protocol = TCPServer
>
>     reactor.listenTCP(12345, factory)
>
>     # ClientFactory subclass which simply instantiate a TCPClient Protocol
>     client_factory = TCPClientFactory()
>
>     # last tuple is the bindAdress parameter
>     reactor.connectTCP(target_addr, 12345, client_factory, 30,
> (source_addr, 12345))
>
> #######################################
>
> I've tried to look on the Internet and in the source code but I've not
> found a proper solution.
>
> Thanks in advance for any suggestion.
> Alessio Pace.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090109/1c56507c/attachment.htm 

From alessio.pace at gmail.com  Fri Jan  9 09:13:10 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Fri, 9 Jan 2009 15:13:10 +0100
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
In-Reply-To: <7a01f6c00901090601o77fc0b7fn8dcfbe6cec728c49@mail.gmail.com>
References: <84987d20901090523m2afeeb44p44d4589982fa9ed0@mail.gmail.com>
	<7a01f6c00901090601o77fc0b7fn8dcfbe6cec728c49@mail.gmail.com>
Message-ID: <84987d20901090613y801067dv9e00e95ec97b14c9@mail.gmail.com>

On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> You shouldn't bind your client on a port where your server is listening to.


I'm following what is written in "Peer-to-Peer Communication Across Network
Address Translators" in order to implement TCP hole punching, and they
suggested to do so..

Regards,
--
Alessio Pace.



>
>
> ---
> Alvin
>
> On Fri, Jan 9, 2009 at 9:23 PM, Alessio Pace <alessio.pace at gmail.com>wrote:
>
>> Hi,
>>
>> I would lilke tro listen on a given TCP port and initiate multiple TCP
>> client connections from the same port, but I'm encountering the classical:
>>
>>   <class 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98:
>> Address already in use
>>
>> My code is:
>>
>> ######################################
>>
>>     factory = Factory()
>>     # an almost empy subclass of Protocol
>>     factory.protocol = TCPServer
>>
>>     reactor.listenTCP(12345, factory)
>>
>>     # ClientFactory subclass which simply instantiate a TCPClient Protocol
>>     client_factory = TCPClientFactory()
>>
>>     # last tuple is the bindAdress parameter
>>     reactor.connectTCP(target_addr, 12345, client_factory, 30,
>> (source_addr, 12345))
>>
>> #######################################
>>
>> I've tried to look on the Internet and in the source code but I've not
>> found a proper solution.
>>
>> Thanks in advance for any suggestion.
>> Alessio Pace.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090109/6d12fd63/attachment.htm 

From exarkun at divmod.com  Fri Jan  9 09:29:40 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Jan 2009 09:29:40 -0500
Subject: [Twisted-Python] How to listen on and connect from same TCP
	port with Twisted?
In-Reply-To: <84987d20901090613y801067dv9e00e95ec97b14c9@mail.gmail.com>
Message-ID: <20090109142940.20272.2027493384.divmod.quotient.33864@ohm>

On Fri, 9 Jan 2009 15:13:10 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com> wrote:
>
>> You shouldn't bind your client on a port where your server is listening to.
>
>I'm following what is written in "Peer-to-Peer Communication Across Network
>Address Translators" in order to implement TCP hole punching, and they
>suggested to do so..

Are you talking about section 4.2?  If so, try creating the client before
you create the server.  This is a somewhat arbitrary limitation imposed by
your platform's implementation of the BSD socket API.

Jean-Paul



From toreason at fastmail.fm  Fri Jan  9 16:42:34 2009
From: toreason at fastmail.fm (V S P)
Date: Fri, 09 Jan 2009 16:42:34 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
Message-ID: <1231537354.4396.1293952417@webmail.messagingengine.com>

Hi,
I am sorry I am reasking the same question I asked before
(but I did not get any replies)

Basically wanted to know -- for running Twisted on multiple servers

is there such a thing as a "Naming" server that 
would register all the currently running twisted servers

-- so that asynchronious event dispatching can be done in some
round-robin to available twisted servers


thank you in advance
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - And now for something completely different?




From glyph at divmod.com  Fri Jan  9 21:47:28 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 10 Jan 2009 02:47:28 -0000
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1231537354.4396.1293952417@webmail.messagingengine.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
Message-ID: <20090110024728.12555.1156756591.divmod.xquotient.3301@weber.divmod.com>

On 9 Jan, 09:42 pm, toreason at fastmail.fm wrote:
>Hi,
>I am sorry I am reasking the same question I asked before
>(but I did not get any replies)
>
>Basically wanted to know -- for running Twisted on multiple servers
>is there such a thing as a "Naming" server that
>would register all the currently running twisted servers
>-- so that asynchronious event dispatching can be done in some
>round-robin to available twisted servers

Not that I know of.  It probably wouldn't be too hard to write such a 
thing for your application, but it might be kind of difficult to make 
one that's general enough to be used for all "twisted servers".

If you write one, please let us know how it goes!



From jarrod at vertigrated.com  Fri Jan  9 22:29:22 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 9 Jan 2009 22:29:22 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1231537354.4396.1293952417@webmail.messagingengine.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
Message-ID: <fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>

2009/1/9 V S P <toreason at fastmail.fm>

> Hi,
> I am sorry I am reasking the same question I asked before
> (but I did not get any replies)
>
> Basically wanted to know -- for running Twisted on multiple servers
>
> is there such a thing as a "Naming" server that
> would register all the currently running twisted servers
>
> -- so that asynchronious event dispatching can be done in some
> round-robin to available twisted servers
>
>
> we used ZeroConf for autodiscovery that way the clients can decide for
themselves which server to connect to.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090109/45ca0e5a/attachment.htm 

From toreason at fastmail.fm  Fri Jan  9 23:06:46 2009
From: toreason at fastmail.fm (V S P)
Date: Fri, 09 Jan 2009 23:06:46 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
Message-ID: <1231560406.1745.1293990179@webmail.messagingengine.com>

Thank you for the replies.  Wanted to make sure I was not missing
a 'twisted goodie'

What is ZeroConf?  Can you please point me to the project page
(I searched for some but did not find something twisted/python
specific).

my client will be a program that reads rows of 'requests' from the
database and dispatch them to available twisted servers (I call it
Dispatcher).  Then twisted servers will use the pool of worker threads
(with help of Ampula plugin I guess) to do the work (that will take
hours
of not more).

So there will be just one program that needs to be
aware of all the available servers in my scenario.

Also I can see that some people might have needed a 'proxy'
that sits infront of the cluster of twisted servers and that proxy
has some balancing mechanism.  And if there is any body that has that
solution I would like to know as well.



thank you again.


On Fri, 9 Jan 2009 22:29:22 -0500, "Jarrod Roberson"
<jarrod at vertigrated.com> said:
> 2009/1/9 V S P <toreason at fastmail.fm>
> 
> > Hi,
> > I am sorry I am reasking the same question I asked before
> > (but I did not get any replies)
> >
> > Basically wanted to know -- for running Twisted on multiple servers
> >
> > is there such a thing as a "Naming" server that
> > would register all the currently running twisted servers
> >
> > -- so that asynchronious event dispatching can be done in some
> > round-robin to available twisted servers
> >
> >
> > we used ZeroConf for autodiscovery that way the clients can decide for
> themselves which server to connect to.
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - And now for something completely different?




From alessio.pace at gmail.com  Sat Jan 10 04:24:46 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Sat, 10 Jan 2009 10:24:46 +0100
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
In-Reply-To: <20090109142940.20272.2027493384.divmod.quotient.33864@ohm>
References: <84987d20901090613y801067dv9e00e95ec97b14c9@mail.gmail.com>
	<20090109142940.20272.2027493384.divmod.quotient.33864@ohm>
Message-ID: <84987d20901100124s781b676ajb7efa44fbf454723@mail.gmail.com>

On Fri, Jan 9, 2009 at 3:29 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Fri, 9 Jan 2009 15:13:10 +0100, Alessio Pace <alessio.pace at gmail.com>
> wrote:
>
>> On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com> wrote:
>>
>>  You shouldn't bind your client on a port where your server is listening
>>> to.
>>>
>>
>> I'm following what is written in "Peer-to-Peer Communication Across
>> Network
>> Address Translators" in order to implement TCP hole punching, and they
>> suggested to do so..
>>
>
> Are you talking about section 4.2?  If so, try creating the client before
> you create the server.  This is a somewhat arbitrary limitation imposed by
> your platform's implementation of the BSD socket API.


Thanks for the suggestion, I'll try this and let you know.

Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090110/40aa9e99/attachment.htm 

From dripton at ripton.net  Sat Jan 10 14:27:35 2009
From: dripton at ripton.net (David Ripton)
Date: Sat, 10 Jan 2009 11:27:35 -0800
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1231560406.1745.1293990179@webmail.messagingengine.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
Message-ID: <20090110192735.GA30464@vidar.dreamhost.com>

On 2009.01.09 23:06:46 -0500, V S P wrote:
> What is ZeroConf?  Can you please point me to the project page
> (I searched for some but did not find something twisted/python
> specific).

ZeroConf is the generic protocol name, not a particular project.  The
most popular implementations are Bonjour and Avahi.  Both are portable
and open source.  Macs ship with Bonjour.  Avahi seems more popular on
Linux.

In theory, it's pretty easy to use Avahi from Python.  Avahi is a C
daemon that always runs and does all the network stuff.  It shares
information with other programs via DBus.  Your Python program can
interact with the information using dbus-python.  dbus-python features
an asynchronous interface that should work great with Twisted.

In practice, it all ends in tears because dbus-python is one big
Heisenbug.  After about 18 months with mostly-working service discovery,
we finally gave up on it and wrote our own custom service discovery
protocol.  (Which works well, but doesn't help you because it's
proprietary and IPv6.)

Bonjour appears to have Python bindings; maybe you can try those.  Or
maybe a newer version of dbus-python actually works reliably.

But if not, it's not hard to write your own simple service discovery
protocol.  Create a common multicast group that all your clients listen
to, and that all your servers send a packet of service information to
every few seconds.  Most of the complexity in ZeroConf is about
minimizing the combination of latency and network traffic, so if you
don't need low latency or don't mind a bit more traffic then a simpler
protocol will work fine.

-- 
David Ripton    dripton at ripton.net



From donwsmith at gmail.com  Sat Jan 10 17:27:18 2009
From: donwsmith at gmail.com (Don Smith)
Date: Sat, 10 Jan 2009 14:27:18 -0800
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1231560406.1745.1293990179@webmail.messagingengine.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
Message-ID: <24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>

Why not use a Message Queue? I developed a very similar program to what you
have described, only each agent would connect to the Queue to get their data
to work on. However, I think something like Apache ActiveMQ or AmazonSQS
would be a better approach.

=Don

2009/1/9 V S P <toreason at fastmail.fm>

> Thank you for the replies.  Wanted to make sure I was not missing
> a 'twisted goodie'
>
> What is ZeroConf?  Can you please point me to the project page
> (I searched for some but did not find something twisted/python
> specific).
>
> my client will be a program that reads rows of 'requests' from the
> database and dispatch them to available twisted servers (I call it
> Dispatcher).  Then twisted servers will use the pool of worker threads
> (with help of Ampula plugin I guess) to do the work (that will take
> hours
> of not more).
>
> So there will be just one program that needs to be
> aware of all the available servers in my scenario.
>
> Also I can see that some people might have needed a 'proxy'
> that sits infront of the cluster of twisted servers and that proxy
> has some balancing mechanism.  And if there is any body that has that
> solution I would like to know as well.
>
>
>
> thank you again.
>
>
> On Fri, 9 Jan 2009 22:29:22 -0500, "Jarrod Roberson"
> <jarrod at vertigrated.com> said:
> > 2009/1/9 V S P <toreason at fastmail.fm>
> >
> > > Hi,
> > > I am sorry I am reasking the same question I asked before
> > > (but I did not get any replies)
> > >
> > > Basically wanted to know -- for running Twisted on multiple servers
> > >
> > > is there such a thing as a "Naming" server that
> > > would register all the currently running twisted servers
> > >
> > > -- so that asynchronious event dispatching can be done in some
> > > round-robin to available twisted servers
> > >
> > >
> > > we used ZeroConf for autodiscovery that way the clients can decide for
> > themselves which server to connect to.
> --
>   V S P
>  toreason at fastmail.fm
>
> --
> http://www.fastmail.fm - And now for something completely different?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090110/d057d0cb/attachment.htm 

From jon at indelible.org  Sat Jan 10 17:50:35 2009
From: jon at indelible.org (Jon Parise)
Date: Sat, 10 Jan 2009 14:50:35 -0800
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <20090110192735.GA30464@vidar.dreamhost.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
	<20090110192735.GA30464@vidar.dreamhost.com>
Message-ID: <1aff89d70901101450v24c8123ej399c61257379d71a@mail.gmail.com>

On Sat, Jan 10, 2009 at 11:27 AM, David Ripton <dripton at ripton.net> wrote:
> On 2009.01.09 23:06:46 -0500, V S P wrote:
>> What is ZeroConf?  Can you please point me to the project page
>> (I searched for some but did not find something twisted/python
>> specific).
>
> ZeroConf is the generic protocol name, not a particular project.  The
> most popular implementations are Bonjour and Avahi.  Both are portable
> and open source.  Macs ship with Bonjour.  Avahi seems more popular on
> Linux.
>
> In theory, it's pretty easy to use Avahi from Python.  Avahi is a C
> daemon that always runs and does all the network stuff.  It shares
> information with other programs via DBus.  Your Python program can
> interact with the information using dbus-python.  dbus-python features
> an asynchronous interface that should work great with Twisted.

Coincidentally, I just wrote up a short article on my experiences
playing with Twisted and Bonjour (via pybonjour).  You can read it
here:

    http://www.indelible.org/ink/twisted-bonjour/

In short, it's quite easy to wrap pybonjour's file descriptor-like
interface in an IReadDescriptor object and add it to the reactor.

-- 
Jon Parise (jon of indelible.org)  ::  "Scientia potentia est"



From exarkun at twistedmatrix.com  Sun Jan 11 00:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Jan 2009 05:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1231650312.27.243268721@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090111/0b6248ae/attachment.htm 

From esteve at sindominio.net  Sun Jan 11 03:59:18 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sun, 11 Jan 2009 09:59:18 +0100
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
	<24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>
Message-ID: <200901110959.18222.esteve@sindominio.net>

On Saturday 10 January 2009 23:27:18 Don Smith wrote:
> Why not use a Message Queue? I developed a very similar program to what you
> have described, only each agent would connect to the Queue to get their
> data to work on. However, I think something like Apache ActiveMQ or
> AmazonSQS would be a better approach.

There's also AMQP [1], and (shameless plug) a Twisted-friendly library called 
txAMQP [2], which includes support for easy RPC using Thrift.

Cheers.

1 - http://amqp.org/
2 - https://launchpad.net/txamqp



From rob at 185vfx.com  Sun Jan 11 18:55:03 2009
From: rob at 185vfx.com (Rob Bredow)
Date: Sun, 11 Jan 2009 15:55:03 -0800
Subject: [Twisted-Python] connectionLost not always getting called?
Message-ID: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>

I've implemented a twisted server using the basic.lineReceiver class.  The
client is a socket based client implemented in flash and the connections are
long-lived (minutes or hours).  To handle cleaning up the players when they
disconnect, I'm using the connectionLost function in my player class.  99%
of the time, things work as expected.

However in rare cases, connectionLost is not getting called when the
flash-based client disappears.  Even completely quitting the client's
web-browser does not always trigger a connectionLost call.  I tracked down
one specific instance yesterday where the server thought the client was
still connected even though the client had been gone for 30+ minutes--but
after a few hours the server noticed that the client was gone and then
connectionLost was called like normal.  That made me think that it might be
a problem on the server side and maybe not client related.

I'm starting on a workaround now where the client will issue a "PING" every
30 seconds and the server will use the ping information to manually trigger
loseConnection when needed.  Are there a better workarounds for this, better
practices or some error checking I can do to avoid these intermidant laggy
connectionLost calls?

Thanks in advance.

Rob

P.S.  I've found twisted to have incredible performance compared to
everything else we've tried.  If you're interested you can see the client at
http://www.guessasketch.com/ .  I'm happy to post server code excerpts if it
would be helpful.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090111/c9112933/attachment.htm 

From toreason at fastmail.fm  Sun Jan 11 18:58:28 2009
From: toreason at fastmail.fm (V S P)
Date: Sun, 11 Jan 2009 18:58:28 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
	<24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>
Message-ID: <1231718308.31243.1294199569@webmail.messagingengine.com>

Hi, I thought that 
MQ is quite 'heavy' for my needs 

Basically the whole system allows users to request 'reports'
and those reports can rung for days (or hours).

Instead of having 'one' persistent queue (or a service)
such as provided for typical MQ implementations -- I thought
just to have a 'little' message queue that for each user -- that
would be visible from their profile
(since there is no 'admin' interface to administer 'jobs' as in typical
message queues)


So I just simply planned a process scan each profiles queue,
and send the job requests in round robin to available twisted servers.

You might ask -- well you will store events to be dispatched in 
a table with profile IDs -- so that's what message queues do anyways.

However, the system is built such there is more than one database
instance
(where users are destributed based on a hashing scheme acrsoss multiple
databases) -- so it is not simply one table (that's also why there is
a need for multiple Twsited servers  as they would serve their own
'partitions' in the system)


On the other hand ... may be I need to look at open source and free
MQ solutions to see if I is easier to 


Thank you again for all the suggestions so far,
I am writting up a small summary of the replies for
furthere analysis.

On Sat, 10 Jan 2009 14:27:18 -0800, "Don Smith" <donwsmith at gmail.com>
said:
> Why not use a Message Queue? I developed a very similar program to what
> you
> have described, only each agent would connect to the Queue to get their
> data
> to work on. However, I think something like Apache ActiveMQ or AmazonSQS
> would be a better approach.
> 
> =Don
> 
> 2009/1/9 V S P <toreason at fastmail.fm>
> 
> > Thank you for the replies.  Wanted to make sure I was not missing
> > a 'twisted goodie'
> >
> > What is ZeroConf?  Can you please point me to the project page
> > (I searched for some but did not find something twisted/python
> > specific).
> >
> > my client will be a program that reads rows of 'requests' from the
> > database and dispatch them to available twisted servers (I call it
> > Dispatcher).  Then twisted servers will use the pool of worker threads
> > (with help of Ampula plugin I guess) to do the work (that will take
> > hours
> > of not more).
> >
> > So there will be just one program that needs to be
> > aware of all the available servers in my scenario.
> >
> > Also I can see that some people might have needed a 'proxy'
> > that sits infront of the cluster of twisted servers and that proxy
> > has some balancing mechanism.  And if there is any body that has that
> > solution I would like to know as well.
> >
> >
> >
> > thank you again.
> >
> >
> > On Fri, 9 Jan 2009 22:29:22 -0500, "Jarrod Roberson"
> > <jarrod at vertigrated.com> said:
> > > 2009/1/9 V S P <toreason at fastmail.fm>
> > >
> > > > Hi,
> > > > I am sorry I am reasking the same question I asked before
> > > > (but I did not get any replies)
> > > >
> > > > Basically wanted to know -- for running Twisted on multiple servers
> > > >
> > > > is there such a thing as a "Naming" server that
> > > > would register all the currently running twisted servers
> > > >
> > > > -- so that asynchronious event dispatching can be done in some
> > > > round-robin to available twisted servers
> > > >
> > > >
> > > > we used ZeroConf for autodiscovery that way the clients can decide for
> > > themselves which server to connect to.
> > --
> >   V S P
> >  toreason at fastmail.fm
> >
> > --
> > http://www.fastmail.fm - And now for something completely different?
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - IMAP accessible web-mail




From toreason at fastmail.fm  Sun Jan 11 19:14:09 2009
From: toreason at fastmail.fm (V S P)
Date: Sun, 11 Jan 2009 19:14:09 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1aff89d70901101450v24c8123ej399c61257379d71a@mail.gmail.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
	<20090110192735.GA30464@vidar.dreamhost.com>
	<1aff89d70901101450v24c8123ej399c61257379d71a@mail.gmail.com>
Message-ID: <1231719249.2133.1294197919@webmail.messagingengine.com>


Thank you for all the replies regarding my question
of the Twisted Naming Server and in general multi-machine Event
Dispatching systems.

So far my understanding from all the replies is as follows

1) there is no pre-built naming server for twisted

2) there is no multi-machine message/event dispatching for twisted
(but there is, of course, a communication mechanism called Prospective
Broker)

3) for message/event dispatching people use Message Queue brokers
http://activemq.apache.org/  (Java)
or more peer-oriented http://www.openamq.org/  (C++ but no windows
support)

4) Naming service is considered to be part of 'Resource Discovery'
and therefore generic resource discovery tools can be deployed
such as Apple's Bonjour or Avahi (C, does not support windows)

5) Message Queueing / Brokers have several python libraries available
and some of them are already 'twisted-friendly'
such as https://launchpad.net/txamqp for O-AMQ
or http://pypi.python.org/pypi/stomper/0.1.0 for MQ 


6) message queuing servers, of course, already have name service
(that's part of the solution)

7)dbus-python library for python (the one that can be used to
communicate
with Bonjour or Avahi) appeared to be difficult to deploy.  
However, bonjour or Avahi specific python clients/examples are available
http://www.indelible.org/ink/twisted-bonjour/
http://avahi.org/wiki/PythonPublishExample


8) I did not ask this question -- but I was struggling to understand
how people implement long-running DB requests queries in twisted if it
if the whole framework is just single threaded (because of python GIL)
and cannot use more than one CPU core in parallel.

So far my understanding on that is as follows:
   a) Twisted developers can use Ampula for creating a pool of processes
   and asking the processes do the work (processes run an independed
   python
interpreter).  
   b) Twisted threads, while will use global lock on python operations
   -- will call concurently the C-level libraries that do database
   access (or other activities that are implemented in C libraries).  So
   the Twisted Event loop will not block waiting for a DB to respond, as
   long as the DB request was issued from a Thread.
   c) Twisted (now including Asynchronious event loop)
 works on JPython -- and that one (unlike CPython) has a fully threaded 
( and may be even more efficient) virtual machine and garbage collector.



Vlad
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Faster than the air-speed velocity of an
                          unladen european swallow




From exarkun at divmod.com  Sun Jan 11 20:27:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Jan 2009 20:27:19 -0500
Subject: [Twisted-Python] connectionLost not always getting called?
In-Reply-To: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
Message-ID: <20090112012719.9754.586942866.divmod.quotient.755@henry.divmod.com>

On Sun, 11 Jan 2009 15:55:03 -0800, Rob Bredow <rob at 185vfx.com> wrote:
>I've implemented a twisted server using the basic.lineReceiver class.  The
>client is a socket based client implemented in flash and the connections are
>long-lived (minutes or hours).  To handle cleaning up the players when they
>disconnect, I'm using the connectionLost function in my player class.  99%
>of the time, things work as expected.
>
>However in rare cases, connectionLost is not getting called when the
>flash-based client disappears.  Even completely quitting the client's
>web-browser does not always trigger a connectionLost call.  I tracked down
>one specific instance yesterday where the server thought the client was
>still connected even though the client had been gone for 30+ minutes--but
>after a few hours the server noticed that the client was gone and then
>connectionLost was called like normal.  That made me think that it might be
>a problem on the server side and maybe not client related.
>
>I'm starting on a workaround now where the client will issue a "PING" every
>30 seconds and the server will use the ping information to manually trigger
>loseConnection when needed.  Are there a better workarounds for this, better
>practices or some error checking I can do to avoid these intermidant laggy
>connectionLost calls?

This is a FAQ, so I've just added it to the FAQ.  Please let me know what
you think of the entry:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhyisntmyconnectionLostmethodcalled

Jean-Paul



From andrew-twisted at puzzling.org  Sun Jan 11 20:59:06 2009
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 12 Jan 2009 12:59:06 +1100
Subject: [Twisted-Python] connectionLost not always getting called?
In-Reply-To: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
References: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
Message-ID: <20090112015906.GD7522@steerpike.home.puzzling.org>

Rob Bredow wrote:
[...]
> web-browser does not always trigger a connectionLost call.  I tracked down one
> specific instance yesterday where the server thought the client was still
> connected even though the client had been gone for 30+ minutes--but after a few
> hours the server noticed that the client was gone and then connectionLost was
> called like normal.  That made me think that it might be a problem on the
> server side and maybe not client related.
> 
> I'm starting on a workaround now where the client will issue a "PING" every 30
> seconds and the server will use the ping information to manually trigger
> loseConnection when needed.  Are there a better workarounds for this, better
> practices or some error checking I can do to avoid these intermidant laggy
> connectionLost calls?

This is a property of TCP.  If a peer drops off the network suddenly, your side
never receives a RST packet, and if your side never tries sending to a dead
connection like this then TCP won't notice that the peer is now unreachable.

You can probably enable something called "TCP keepalives" in your OS, but
they'll still tend to take a few hours to notice an unreachable peer.  So your
workaround is about as good as it gets.

-Andrew.




From glyph at divmod.com  Sun Jan 11 21:23:11 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Jan 2009 02:23:11 -0000
Subject: [Twisted-Python] connectionLost not always getting called?
In-Reply-To: <20090112012719.9754.586942866.divmod.quotient.755@henry.divmod.com>
References: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
	<20090112012719.9754.586942866.divmod.quotient.755@henry.divmod.com>
Message-ID: <20090112022311.12555.1315328793.divmod.xquotient.3342@weber.divmod.com>


On 01:27 am, exarkun at divmod.com wrote:
>This is a FAQ, so I've just added it to the FAQ.  Please let me know 
>what
>you think of the entry:
>
>http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhyisntmyconnectionLostmethodcalled

Thanks for finally adding that to the FAQ.  It seems to me that it's 
important to clarify that this is a problem with TCP, not with Twisted, 
before getting into the details, though; communicating that a non- 
Twisted program would have this same problem.  You want me to have a go 
at editing it?



From rob at 185vfx.com  Mon Jan 12 00:37:42 2009
From: rob at 185vfx.com (Rob Bredow)
Date: Sun, 11 Jan 2009 21:37:42 -0800
Subject: [Twisted-Python] connectionLost not always getting called?
In-Reply-To: <20090112022311.12555.1315328793.divmod.xquotient.3342@weber.divmod.com>
References: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
	<20090112012719.9754.586942866.divmod.quotient.755@henry.divmod.com>
	<20090112022311.12555.1315328793.divmod.xquotient.3342@weber.divmod.com>
Message-ID: <fc181d510901112137l16023tfcf7691d1ae7c976@mail.gmail.com>

Thanks so much for the quick help.  I had done some searching and stumbled
into that 2 hour TCP/IP limitation but I didn't find anything as clear as
your FAQ entry.  My messages every 30 seconds seem to have solved my issue
and I'm glad to know it's a TCP/IP thing not related to my server or
twisted.

Thanks again.

-Rob
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090111/5534378c/attachment.htm 

From dialtone at gmail.com  Mon Jan 12 01:56:48 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sun, 11 Jan 2009 22:56:48 -0800
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <1231021930.1898.1292840297@webmail.messagingengine.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
Message-ID: <8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>


On Jan 3, 2009, at 2:32 PM, V S P wrote:

> Thank you so much
> Yes, this plugin is what I am looking for process pool
> "
>    """
>    This plugin provides ways to create a process pool service in your
>    system listening on a given port and interface and answering to a
>    given set of commands.
>    """
> "
>
> So I just need to inherit from
> AMPConnector and have a trully scalable server!

No. Wait there... AMPConnector is only a frontend and it's not
made to be inherited. You might want to inherit it only to add some
weird functionality to it. Another option is to not use it but create
a new one to avoid using AMP as a child-parent protocol.

You really want to subclass AMPChild and create a good AMPParent
by subclassing amp.AMP.

There are some examples in the code and to expose a process pool
on the net you shouldn't do anything more than adding the right argument
to the command line twistd plugin.

> Two more questions:
>
> What's the mechanism of 'registring' multiple twisted servers
> (something similar to a Name server in Corba) -- so an event
> dispatching client can 'discover' the servers running on
> multiple machines

I haven't written such a mechanism yet. It shouldn't be too hard to have
a simple version but having everything go through the same master node
is kind of problematic from a scalability point of view. It would be  
better to
have a routing system where each system knows each other but probably
this has a lot of memory overhead to keep in memory the list of nearby
servers... If anyone is willing to spend some time to design some kind  
of
solution for this I'd be happy to implement it in ampoule. I'm pretty  
sure that
this was done in other projects already.

> And how does one run multiple XAMPP servers in twisted -- such
> that work to each server is distributed either by a hash on a user
> name or some other way (or does such mechanism exist).

It's just AMP, XMPP is another protocol.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090111/28adefbe/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090111/28adefbe/attachment.pgp 

From alessio.pace at gmail.com  Mon Jan 12 04:23:00 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Mon, 12 Jan 2009 10:23:00 +0100
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
In-Reply-To: <84987d20901100124s781b676ajb7efa44fbf454723@mail.gmail.com>
References: <84987d20901090613y801067dv9e00e95ec97b14c9@mail.gmail.com>
	<20090109142940.20272.2027493384.divmod.quotient.33864@ohm>
	<84987d20901100124s781b676ajb7efa44fbf454723@mail.gmail.com>
Message-ID: <84987d20901120123s21f9a2deo616c70510012cf8d@mail.gmail.com>

On Sat, Jan 10, 2009 at 10:24 AM, Alessio Pace <alessio.pace at gmail.com>wrote:

>
>
> On Fri, Jan 9, 2009 at 3:29 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>
>> On Fri, 9 Jan 2009 15:13:10 +0100, Alessio Pace <alessio.pace at gmail.com>
>> wrote:
>>
>>> On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com>
>>> wrote:
>>>
>>>  You shouldn't bind your client on a port where your server is listening
>>>> to.
>>>>
>>>
>>> I'm following what is written in "Peer-to-Peer Communication Across
>>> Network
>>> Address Translators" in order to implement TCP hole punching, and they
>>> suggested to do so..
>>>
>>
>> Are you talking about section 4.2?  If so, try creating the client before
>> you create the server.  This is a somewhat arbitrary limitation imposed by
>> your platform's implementation of the BSD socket API.
>
>
> Thanks for the suggestion, I'll try this and let you know.
>

Well, apparently at least on my Linux box, I still have the same address
already bound error even if I first do connect() and then listen() using the
Twisted reactor APIs  (connectTcp(), listenTcp() ).

Any clue?
--
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090112/3a20e4fc/attachment.htm 

From exarkun at divmod.com  Mon Jan 12 08:35:37 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Jan 2009 08:35:37 -0500
Subject: [Twisted-Python] How to listen on and connect from same TCP
	port with Twisted?
In-Reply-To: <84987d20901120123s21f9a2deo616c70510012cf8d@mail.gmail.com>
Message-ID: <20090112133537.9754.296378441.divmod.quotient.1244@henry.divmod.com>

On Mon, 12 Jan 2009 10:23:00 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>On Sat, Jan 10, 2009 at 10:24 AM, Alessio Pace <alessio.pace at gmail.com>wrote:
>
>>
>>
>> On Fri, Jan 9, 2009 at 3:29 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>>
>>> On Fri, 9 Jan 2009 15:13:10 +0100, Alessio Pace <alessio.pace at gmail.com>
>>> wrote:
>>>
>>>> On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com>
>>>> wrote:
>>>>
>>>>  You shouldn't bind your client on a port where your server is listening
>>>>> to.
>>>>>
>>>>
>>>> I'm following what is written in "Peer-to-Peer Communication Across
>>>> Network
>>>> Address Translators" in order to implement TCP hole punching, and they
>>>> suggested to do so..
>>>>
>>>
>>> Are you talking about section 4.2?  If so, try creating the client before
>>> you create the server.  This is a somewhat arbitrary limitation imposed by
>>> your platform's implementation of the BSD socket API.
>>
>>
>> Thanks for the suggestion, I'll try this and let you know.
>>
>
>Well, apparently at least on my Linux box, I still have the same address
>already bound error even if I first do connect() and then listen() using the
>Twisted reactor APIs  (connectTcp(), listenTcp() ).
>
>Any clue?

You might have to create and connect the socket before giving it to Twisted
then.

Jean-Paul



From Zoran.Bosnjak at sloveniacontrol.si  Mon Jan 12 17:09:40 2009
From: Zoran.Bosnjak at sloveniacontrol.si (=?iso-8859-1?Q?Zoran_Bosnjak?=)
Date: Mon, 12 Jan 2009 23:09:40 +0100
Subject: [Twisted-Python] Manhole and StandardIO
Message-ID: <97CB875FEE63B24BA0D0E5B759F22D5BE6FCB5@soncek1.sloveniacontrol.si>

Hello all,
I would like to have a simple console python interactive shell,
powered by twisted.

I am looking for something like this...
---
from twisted.internet import reactor, stdio
from twisted.conch.manhole import Manhole

stdio.StandardIO(Manhole())
reactor.run()
---
... but it does not work.

Please advice.

Thanks,
Zoran
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090112/5a95b7a3/attachment.htm 

From exarkun at divmod.com  Mon Jan 12 17:21:31 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Jan 2009 17:21:31 -0500
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <97CB875FEE63B24BA0D0E5B759F22D5BE6FCB5@soncek1.sloveniacontrol.si>
Message-ID: <20090112222131.9754.163298153.divmod.quotient.1372@henry.divmod.com>

On Mon, 12 Jan 2009 23:09:40 +0100, Zoran Bosnjak <zoran.bosnjak at sloveniacontrol.si> wrote:
>Hello all,
>I would like to have a simple console python interactive shell,
>powered by twisted.
>
>I am looking for something like this...
>---
>from twisted.internet import reactor, stdio
>from twisted.conch.manhole import Manhole
>
>stdio.StandardIO(Manhole())
>reactor.run()
>---
>... but it does not work.
>

StandardIO accepts an IProtocol provider as an argument.  Manhole does not
implement IProtocol, it implements ITerminalProtocol.  So you cannot use
these two classes together like this.

See twisted/conch/stdio.py for examples of how to use manhole on stdio.

Jean-Paul



From glyph at divmod.com  Mon Jan 12 17:53:29 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Jan 2009 22:53:29 -0000
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <20090112222131.9754.163298153.divmod.quotient.1372@henry.divmod.com>
References: <97CB875FEE63B24BA0D0E5B759F22D5BE6FCB5@soncek1.sloveniacontrol.si>
	<20090112222131.9754.163298153.divmod.quotient.1372@henry.divmod.com>
Message-ID: <20090112225329.12555.1585885174.divmod.xquotient.3496@weber.divmod.com>


On 10:21 pm, exarkun at divmod.com wrote:
>On Mon, 12 Jan 2009 23:09:40 +0100, Zoran Bosnjak 
><zoran.bosnjak at sloveniacontrol.si> wrote:
>>Hello all,
>>I would like to have a simple console python interactive shell,
>>powered by twisted.

>See twisted/conch/stdio.py for examples of how to use manhole on stdio.

It doesn't sound like you need to write any code.  Just run the module 
exarkun mentions:

    python -m twisted/conch/stdio

and you should get an interactive shell.

(If you are using GNOME, you may have to use the workaround mentioned on 
ticket 2637: <http://twistedmatrix.com/trac/ticket/2637>.)



From exarkun at divmod.com  Mon Jan 12 18:17:28 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Jan 2009 18:17:28 -0500
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <20090112225329.12555.1585885174.divmod.xquotient.3496@weber.divmod.com>
Message-ID: <20090112231728.9754.1182865694.divmod.quotient.1392@henry.divmod.com>

On Mon, 12 Jan 2009 22:53:29 -0000, glyph at divmod.com wrote:
>
>On 10:21 pm, exarkun at divmod.com wrote:
>>On Mon, 12 Jan 2009 23:09:40 +0100, Zoran Bosnjak 
>><zoran.bosnjak at sloveniacontrol.si> wrote:
>>>Hello all,
>>>I would like to have a simple console python interactive shell,
>>>powered by twisted.
>
>>See twisted/conch/stdio.py for examples of how to use manhole on stdio.
>
>It doesn't sound like you need to write any code.  Just run the module 
>exarkun mentions:
>
>    python -m twisted/conch/stdio
>
>and you should get an interactive shell.
>
>(If you are using GNOME, you may have to use the workaround mentioned on 
>ticket 2637: <http://twistedmatrix.com/trac/ticket/2637>.)
>

I think you mixed up #2637 with a different bug (which has been fixed).

Jean-Paul



From terry at jon.es  Mon Jan 12 20:36:24 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 13 Jan 2009 02:36:24 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
Message-ID: <18795.61464.631046.43215@jon.es>

I think I've finally gotten to the bottom of why exceptions sometimes lose
their tracebacks when using inlineCallbacks.

I've spent many hours trying to track down problems that result from
this. I find the code handling failures, deferreds, and inlineCallbacks
non-trivial even in isolation, let alone when those things start
interacting. There are a lot of things that are subtle and some that I
still haven't gotten to the bottom of. The following ignores some of these
subtleties in the interest of showing how things can go wrong for the
innocent user of inlineCallbacks. I'm happy to go into detail later.

First, consider this:

    import sys
    from twisted.internet import defer
    from twisted.python import failure

    d = defer.Deferred()
    try:
        1 / 0
    except Exception:
        info = sys.exc_info()
        f = failure.Failure(*info)
        print "f.tb is %r" % f.tb
        d.errback(f)
        print "f.tb is %r" % f.tb


Which prints:

    f.tb is <traceback object at 0x9a19e0>
    f.tb is None
    Unhandled error in Deferred:

That's the heart of the issue. We make a failure object, it has a
traceback, but after passing it to the errback method on a deferred the
traceback is gone.

This happens because _runCallbacks in defer.py finds no call/errback
functions to call on the deferred, drops into this code:

        if isinstance(self.result, failure.Failure):
            self.result.cleanFailure()

which sets the __dict__ on the failure object to the result of the
failure's __getstate__ method, which sets the traceback to None:

        # added 2003-06-23. See comment above in __init__
        c['tb'] = None

But the comment in __init__ seems to have been deleted.

So in summary, passing the failure to errback() results in its traceback
disappearing.


(Note that, as mentioned, there are subtleties here. E.g., try calling
failure() with no args. The above is just a very simple example.)


So what does this have to do with inlineCallbacks?

Briefly: when you decorate a function F1 with inlineCallbacks, a new
function F2 is created. When you call F2, you get back a deferred. But
before you get that deferred, F2 calls F1. F1 returns a generator G (it
yields, right?). F2 passes that generator G to _inlineCallbacks.
_inlineCallbacks initially starts G by calling its send (passing None). If
G raises an exception (other than StopIteration or returning a final value
via _DefGen_Return), _inlineCallbacks catches it via:

        except:
            deferred.errback()
            return deferred

I.e., it calls the errback on the deferred that F2 is about to hand back to
your original code (which called the inlineCallbacks decorated F1 function).

Unfortunately, the result of this is as above. A failure is created in
errback, it correctly has a traceback on it, but the traceback is then
immediately removed in _runCallbacks!

By the time your code gets its deferred back from calling the
inlineCallbacks decorated F1, the exception has fired, the errback has been
called, the deferred you get has its result sitting there waiting for you,
but the traceback is gone, gone, gone. Without the original traceback, you
end up cursing inlineCallbacks and digging around in what your function
called and what that called, and so on. Not fun :-(

I'll stop for now. I have some suggestions for fixes, but I'm already in
over my head.

BTW, I get the impression that the Twisted core developers don't really use
inlineCallbacks. Is that correct?

Terry



From phil at bubblehouse.org  Mon Jan 12 21:58:44 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 12 Jan 2009 21:58:44 -0500
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <18795.61464.631046.43215@jon.es>
References: <18795.61464.631046.43215@jon.es>
Message-ID: <04A13F3D-57B3-469B-A825-011B2FF852C2@bubblehouse.org>

On Jan 12, 2009, at 8:36 PM, Terry Jones wrote:
> I think I've finally gotten to the bottom of why exceptions  
> sometimes lose
> their tracebacks when using inlineCallbacks.
[snip snip]
> I'll stop for now. I have some suggestions for fixes, but I'm  
> already in
> over my head.
>
> BTW, I get the impression that the Twisted core developers don't  
> really use
> inlineCallbacks. Is that correct?

I don't have a whole lot to contribute here, except to encourage  
discussion of this issue. I *love* inlineCallbacks, and have found the  
availability of the technique has made me far more inclined to chose  
Twisted as the basis for applications that will require a great deal  
of serial-but-asynchronous operations.

I don't know if I've run into this particular issue, but I know that I  
have run into some error-handling issues when using inlineCallbacks  
that I wasn't able to debug in the usual ways, but I think I ended up  
just fixing the bug that I was trying to catch at the time.

My impression is that there's a reluctance to advertise  
inlineCallbacks too loudly, since using it still requires a thorough  
understanding of Deferreds and asynchronous development to be used  
effectively. New users really need to be starting with the 'old- 
fashioned-way', and even experienced users must be careful that their  
'mental model' of what the code is doing actually reflects reality...

-phil



From Zoran.Bosnjak at sloveniacontrol.si  Tue Jan 13 04:08:06 2009
From: Zoran.Bosnjak at sloveniacontrol.si (=?iso-8859-1?Q?Zoran_Bosnjak?=)
Date: Tue, 13 Jan 2009 10:08:06 +0100
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <20090112222131.9754.163298153.divmod.quotient.1372@henry.divmod.com>
Message-ID: <97CB875FEE63B24BA0D0E5B759F22D5B018532C0@soncek1.sloveniacontrol.si>

> StandardIO accepts an IProtocol provider as an argument.  
> Manhole does not implement IProtocol, it implements 
> ITerminalProtocol.  So you cannot use these two classes 
> together like this.
> 
> See twisted/conch/stdio.py for examples of how to use manhole 
> on stdio.

Thanks for your suggestion. It works well.

But the screen is cleared before prompt is displayed. Can I prevent this?

Here is my script:
---
import os, tty, sys, termios

from twisted.internet import reactor, stdio

from twisted.conch.insults.insults import ServerProtocol 
from twisted.conch.manhole import Manhole

class ConsoleManhole(Manhole):
    def connectionLost(self, reason):
        reactor.stop()

fd = sys.__stdin__.fileno()
oldSettings = termios.tcgetattr(fd)
tty.setraw(fd)
try:
    p = ServerProtocol(ConsoleManhole)
    stdio.StandardIO(p)
    reactor.run()
finally:
    termios.tcsetattr(fd, termios.TCSANOW, oldSettings)
    os.write(fd, "\r\x1bc\r")
---

Zoran



From exarkun at divmod.com  Tue Jan 13 09:03:15 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Jan 2009 09:03:15 -0500
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <97CB875FEE63B24BA0D0E5B759F22D5B018532C0@soncek1.sloveniacontrol.si>
Message-ID: <20090113140315.9754.635859262.divmod.quotient.1859@henry.divmod.com>

On Tue, 13 Jan 2009 10:08:06 +0100, Zoran Bosnjak <zoran.bosnjak at sloveniacontrol.si> wrote:
>> StandardIO accepts an IProtocol provider as an argument.
>> Manhole does not implement IProtocol, it implements
>> ITerminalProtocol.  So you cannot use these two classes
>> together like this.
>>
>> See twisted/conch/stdio.py for examples of how to use manhole
>> on stdio.
>
>Thanks for your suggestion. It works well.
>
>But the screen is cleared before prompt is displayed. Can I prevent this?

This is one of the unresolved problems mentioned in <http://twistedmatrix.com/trac/ticket/2991>.  The comment I left on that ticket regarding this was:

    Clearing the screen is a side-effect of resetting the terminal.
    Resetting the terminal is a shortcut for figuring out what the
    current terminate state is (for example, the position of the cursor,
    the current character attributes, etc). All of those things could
    be dealt with separately to avoid also clearing the screen.

So this can be fixed, it's just a matter of programming. :)

Jean-Paul



From alessio.pace at gmail.com  Tue Jan 13 09:34:19 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Tue, 13 Jan 2009 15:34:19 +0100
Subject: [Twisted-Python] connectTCP() passing a ClientFactory: how to get
	the local port of the created client socket?
Message-ID: <84987d20901130634w8d6ca95j554182b6aa3e22a2@mail.gmail.com>

Hi,

I'm having some difficulties in trying to figure out how to get a reference
to the connector or anyway the local port to which a client socket is bound
in a reactor.connectTCP() call, where the bindAddress is not passed as
parameter, thus letting the OS pick an available port.

In fact in the ClientFactory has a buildProtocol(self, addr) method, but
'addr' is the address of the remote endpoint of the client socket created..

Thanks in advance for any suggestion.
Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090113/7fc70be0/attachment.htm 

From exarkun at divmod.com  Tue Jan 13 09:42:38 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Jan 2009 09:42:38 -0500
Subject: [Twisted-Python] connectTCP() passing a ClientFactory: how to
	get the local port of the created client socket?
In-Reply-To: <84987d20901130634w8d6ca95j554182b6aa3e22a2@mail.gmail.com>
Message-ID: <20090113144238.9754.1723923745.divmod.quotient.1873@henry.divmod.com>

On Tue, 13 Jan 2009 15:34:19 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>Hi,
>
>I'm having some difficulties in trying to figure out how to get a reference
>to the connector or anyway the local port to which a client socket is bound
>in a reactor.connectTCP() call, where the bindAddress is not passed as
>parameter, thus letting the OS pick an available port.
>
>In fact in the ClientFactory has a buildProtocol(self, addr) method, but
>'addr' is the address of the remote endpoint of the client socket created..
>
>Thanks in advance for any suggestion.

The protocol gets connected to a transport with a `getHost? method which
returns an IPv4Address object with `host? and `port? attributes.  You
can't get this information from the connector, since the connector exists
for longer than a single connection.

Jean-Paul



From alessio.pace at gmail.com  Tue Jan 13 10:06:21 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Tue, 13 Jan 2009 16:06:21 +0100
Subject: [Twisted-Python] connectTCP() passing a ClientFactory: how to get
	the local port of the created client socket?
In-Reply-To: <20090113144238.9754.1723923745.divmod.quotient.1873@henry.divmod.com>
References: <84987d20901130634w8d6ca95j554182b6aa3e22a2@mail.gmail.com>
	<20090113144238.9754.1723923745.divmod.quotient.1873@henry.divmod.com>
Message-ID: <84987d20901130706u6d01bd42r6bf3768674089568@mail.gmail.com>

On Tue, Jan 13, 2009 at 3:42 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Tue, 13 Jan 2009 15:34:19 +0100, Alessio Pace <alessio.pace at gmail.com>
> wrote:
>
>> Hi,
>>
>> I'm having some difficulties in trying to figure out how to get a
>> reference
>> to the connector or anyway the local port to which a client socket is
>> bound
>> in a reactor.connectTCP() call, where the bindAddress is not passed as
>> parameter, thus letting the OS pick an available port.
>>
>> In fact in the ClientFactory has a buildProtocol(self, addr) method, but
>> 'addr' is the address of the remote endpoint of the client socket
>> created..
>>
>> Thanks in advance for any suggestion.
>>
>
> The protocol gets connected to a transport with a `getHost? method which
> returns an IPv4Address object with `host? and `port? attributes.  You
> can't get this information from the connector, since the connector exists
> for longer than a single connection.


Thanks a lot, this perfectly replies to my question. I should have looked a
bit more in the sources :-)

Regards,
Alessio Pace.



>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090113/3c584228/attachment.htm 

From gabriel.rossetti at arimaz.com  Tue Jan 13 10:34:29 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 13 Jan 2009 16:34:29 +0100
Subject: [Twisted-Python] IPushProducer problem
Message-ID: <496CB485.9040001@arimaz.com>

Hello everyone,

I implemented a push-produce a while back and I though it works, but it 
didn't. When the msgs where spaced out, it worked, but if several msgs 
were sent one after the other, then things go bad (the msgs get mixed up)...

I found this thread : 
http://www.twistedmatrix.com/pipermail/twisted-python/2007-March/014983.html

and I think I ave the same problem, my code looks a bit like his :

    def pauseProducing(self):
        """
        Pause the producer
        """
        self.__paused = True

    def resumeProducing(self):
        """
        Resume the producer
        """
        self.__paused = False

        while(not self.__paused and self.__startLimit < self.__total):
            data = self.__buf[self.__startLimit:self.__endLimit]
            self.transport.write(data)
            self.__startLimit = self.__endLimit
            self.__endLimit += self.__burstSize
            if(not self.__stream):
                break

        if(not self.__paused or self.__startLimit >= self.__total):
            self.stopProducing()

    def stopProducing(self):
        """
        Stop the producer
        """
        self.__paused = False
        self.__startLimit = 0
        self.__buf = None
        self.__total = None
        self.__endLimit = self.__burstSize

and when I send a msg I use this :

def sendMessage(self, msg):
        if domish.IElement.providedBy(msg):
            msg = msg.toXml()
       
        if isinstance(msg, unicode):
            msg = msg.encode('utf-8')
               
        self.__buf = msg
        self.__total = len(msg)
        if(self.__stream):
            self.resumeProducing()

I think what happens is that the code is re-entered, just like Jean-Paul 
suggested in the other thread. The thing is I didn't understand the 
solution, could somebody please explain it to me or suggest something else?

Thank you,
Gabriel



From exarkun at divmod.com  Tue Jan 13 11:03:21 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Jan 2009 11:03:21 -0500
Subject: [Twisted-Python] IPushProducer problem
In-Reply-To: <496CB485.9040001@arimaz.com>
Message-ID: <20090113160321.9754.2135396551.divmod.quotient.1901@henry.divmod.com>

On Tue, 13 Jan 2009 16:34:29 +0100, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>Hello everyone,
>
>I implemented a push-produce a while back and I though it works, but it 
>didn't. When the msgs where spaced out, it worked, but if several msgs were 
>sent one after the other, then things go bad (the msgs get mixed up)...
>
>I found this thread : http://www.twistedmatrix.com/pipermail/twisted-python 
>/2007-March/014983.html
>
>and I think I ave the same problem, my code looks a bit like his :
>
>    def pauseProducing(self):
>        """
>        Pause the producer
>        """
>        self.__paused = True
>
>    def resumeProducing(self):
>        """
>        Resume the producer
>        """
>        self.__paused = False
>
>        while(not self.__paused and self.__startLimit < self.__total):
>            data = self.__buf[self.__startLimit:self.__endLimit]
>            self.transport.write(data)
>            self.__startLimit = self.__endLimit
>            self.__endLimit += self.__burstSize
>            if(not self.__stream):
>                break
>
>        if(not self.__paused or self.__startLimit >= self.__total):
>            self.stopProducing()
>
>    def stopProducing(self):
>        """
>        Stop the producer
>        """
>        self.__paused = False
>        self.__startLimit = 0
>        self.__buf = None
>        self.__total = None
>        self.__endLimit = self.__burstSize
>
>and when I send a msg I use this :
>
>def sendMessage(self, msg):
>        if domish.IElement.providedBy(msg):
>            msg = msg.toXml()
>              if isinstance(msg, unicode):
>            msg = msg.encode('utf-8')
>                      self.__buf = msg
>        self.__total = len(msg)
>        if(self.__stream):
>            self.resumeProducing()
>
>I think what happens is that the code is re-entered, just like Jean-Paul 
>suggested in the other thread. The thing is I didn't understand the 
>solution, could somebody please explain it to me or suggest something else?

It's extremely difficult to say without seeing a complete example and without
knowing exactly how the code is failing.  However, one thing I do see is that
it is not safe to call your `sendMessage` a second time before all of the
data from the first call has been written.  Since you are using `__buf? to
record the message to send, if you try to send another message, the first
buffer will be clobbered.  Could this be the problem you're having?

Perhaps consider appending to `__buf? instead of overwriting it.  There are
probably lots of other areas where this code could improve too, but not
corrupting the internal state of the producer is a good start. :)

Jean-Paul



From 2le at 2le.net  Tue Jan 13 15:32:45 2009
From: 2le at 2le.net (=?ISO-8859-1?Q?S=E9bastien_HEITZMANN?=)
Date: Tue, 13 Jan 2009 21:32:45 +0100
Subject: [Twisted-Python] adbapi and ConnectionLost.
Message-ID: <496CFA6D.2040800@2le.net>

Hi,

for a couple of week i search how i should handle mysql disconnection on
my twisted web service. When I restart the database without restarting
my service i got some ConnectionLost fired. I have used the cp_reconnect
on the connection pool and it seem to work ( the lost connection is
restarted ) but the current query isn't executed.

So my question is how should I handle this case. Should I intercept the
connectionLost and restart the query ? I have several queries in a
single deffer so this method is not easy and clear.

Any advice whould be welcome.

I join the code of a sample resource.

Thanks

S?bastien HEITZMANN


class StartResource(resource.Resource):
    def __init__(self, dbConnection, mdbConnection, config):
        self.db = dbConnection
        self.mdb = mdbConnection
        resource.Resource.__init__(self)

    def render_POST(self, request):
        try:
            uid = request.args['uid'][0]
            key = request.args['kkey'][0]
            conf = unicode(request.args['conf'][0],'utf8')
            self.db.runInteraction(self._start, uid, key, conf, request)
            return server.NOT_DONE_YET
        except Exception, e:
            print str(e)
            request.setResponseCode(http.INTERNAL_SERVER_ERROR, str(e))
            request.write('ERROR:'+str(e))
            request.finish()

    def _start(self, trans, uid, key, conf, request):
        try:
            if not utils.checkKKEY(uid, key, trans):
                r_status = 'ko'
                r_action = ''
                r_params = 'kkey invalid'
                request.write(json.write([r_status, r_action, r_params]))
                request.finish()
                return None

            query = "UPDATE kserver.b set status=-1 where status=0 and
uid=%s"
            query %= (str(uid))
            trans.execute(query)

            query = u"INSERT INTO `b` (uid, conf)"
            query += " VALUES(%s, '%s');" % ( str(uid), dbutil.safe(conf) )
            trans.execute(query)
            bid = trans._cursor.connection.insert_id()
            #trans.commit()
            r_status = 'ok'
            r_action = ''
            r_params = {'bid':str(bid)}
            request.write(json.write([r_status, r_action, r_params]))
            request.finish()
        except Exception, e:
            print str(e)
            request.setResponseCode(http.INTERNAL_SERVER_ERROR, str(e))
            request.write('ERROR:'+str(e))
            request.finish()





From toreason at fastmail.fm  Tue Jan 13 16:11:09 2009
From: toreason at fastmail.fm (V S P)
Date: Tue, 13 Jan 2009 16:11:09 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
	<8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
Message-ID: <1231881069.16735.1294598841@webmail.messagingengine.com>

Hi, thank you for the correction on how to use Ampula.

Naming service serves
really as a 'discovery' tool -- and then the participating
components talk to each other.  When new component comes
on online, it registers, and the Naming Service broadcasts
the new updates to all the subscribed components.  It also
can 'ping' the components to see if they are alive and if not
it deletes an entry and broadcasts the updates to the remaning 
components.

This way the message dispatchers (or components themselves) have
almost up-to-date information about their peers on the network (the  is
a delay controlled by ping interval).

The naming service data is sometimes stored on a file system
(in case it crashes and needs to restart -- sort of like a
'session') with Python's serialization it has to be easy to do.

But yes, a naming service while not a bottleneck --  can be
a single point of failure in a distributed env, and that's why
for 'fault safety' it is typically ran on fail-over hardware
(although since it is not doing much, it rarely crashes :-))

I certainly agree that using a naming service as a mechanism
to get a 'context' of a remote process to invoke its methods 
(sort of get a Prospective Broker object from a naming service)
every time a call is made -- would be inefficient and not correct.

But if each component has the table of the registered components,
then simply using that table to insanciate a Prospective Broker's
RemoteReference for the needed remote component -- would be nice.  


Few people pointed out that a more generic service discovery
systems exist and they use Dbus protocol (they are used to discover
printers on the network, fileshares, etc) -- I have to study those.

As far as XAMPP, I meant to ask: in twisted, does it run distributed
on multiple machines (that is multiple xampp servers each on its own
machine) -- if yes -- I thought it would have to have some kind of a
naming service built in (I did not mean that XA (AMP) in the naming
suggested that it is derived from Ampula :-)).  But may be it is
single-machine/single-thread process only (I just did not know).


thanks,
Vlad




On Sun, 11 Jan 2009 22:56:48 -0800, "Valentino Volonghi"
<dialtone at gmail.com> said:
> 
> On Jan 3, 2009, at 2:32 PM, V S P wrote:
> 
> > Thank you so much
> > Yes, this plugin is what I am looking for process pool
> > "
> >    """
> >    This plugin provides ways to create a process pool service in your
> >    system listening on a given port and interface and answering to a
> >    given set of commands.
> >    """
> > "
> >
> > So I just need to inherit from
> > AMPConnector and have a trully scalable server!
> 
> No. Wait there... AMPConnector is only a frontend and it's not
> made to be inherited. You might want to inherit it only to add some
> weird functionality to it. Another option is to not use it but create
> a new one to avoid using AMP as a child-parent protocol.
> 
> You really want to subclass AMPChild and create a good AMPParent
> by subclassing amp.AMP.
> 
> There are some examples in the code and to expose a process pool
> on the net you shouldn't do anything more than adding the right argument
> to the command line twistd plugin.
> 
> > Two more questions:
> >
> > What's the mechanism of 'registring' multiple twisted servers
> > (something similar to a Name server in Corba) -- so an event
> > dispatching client can 'discover' the servers running on
> > multiple machines
> 
> I haven't written such a mechanism yet. It shouldn't be too hard to have
> a simple version but having everything go through the same master node
> is kind of problematic from a scalability point of view. It would be  
> better to
> have a routing system where each system knows each other but probably
> this has a lot of memory overhead to keep in memory the list of nearby
> servers... If anyone is willing to spend some time to design some kind  
> of
> solution for this I'd be happy to implement it in ampoule. I'm pretty  
> sure that
> this was done in other projects already.
> 
> > And how does one run multiple XAMPP servers in twisted -- such
> > that work to each server is distributed either by a hash on a user
> > name or some other way (or does such mechanism exist).
> 
> It's just AMP, XMPP is another protocol.
> 
> -- 
> Valentino Volonghi aka Dialtone
> Now running MacOS X 10.5
> Home Page: http://www.twisted.it
> http://www.adroll.com
> 
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - The way an email service should be




From glyph at divmod.com  Tue Jan 13 20:34:52 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 14 Jan 2009 01:34:52 -0000
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <04A13F3D-57B3-469B-A825-011B2FF852C2@bubblehouse.org>
References: <18795.61464.631046.43215@jon.es>
	<04A13F3D-57B3-469B-A825-011B2FF852C2@bubblehouse.org>
Message-ID: <20090114013452.12555.1126212627.divmod.xquotient.3514@weber.divmod.com>


On 13 Jan, 02:58 am, phil at bubblehouse.org wrote:
>On Jan 12, 2009, at 8:36 PM, Terry Jones wrote:
>>I think I've finally gotten to the bottom of why exceptions  sometimes 
>>lose
>>their tracebacks when using inlineCallbacks.
>[snip snip]
>>I'll stop for now. I have some suggestions for fixes, but I'm  already 
>>in
>>over my head.
>>
>>BTW, I get the impression that the Twisted core developers don't 
>>really use
>>inlineCallbacks. Is that correct?

>My impression is that there's a reluctance to advertise 
>inlineCallbacks too loudly, since using it still requires a thorough 
>understanding of Deferreds and asynchronous development to be used 
>effectively. New users really need to be starting with the 'old- 
>fashioned-way', and even experienced users must be careful that their 
>'mental model' of what the code is doing actually reflects reality...

This is partially true, but another big motivating factor here is that 
we *can't* use it, yet.  That'll be true until we want to drop python 
2.3 and 2.4 support, which seems like it's a ways off yet.

Even when that is available, it's really Twisted application / 
orchestration code that will benefit the most from inlineCallbacks; the 
lower-level infrastructure stuff in Twisted itself has more failure 
modes and more states that are inconvenient to account for using 
try/except blocks.

But hey, I'm glad you're finding it useful.  And we *should* fix the 
error-handling problems.  If it weren't useful, we wouldn't provide it 
:).  (And, IMHO, inlineCallbacks is a heck of a lot better than any of 
the earlier hackish mechanisms that tried to do the same thing, like 
deferredGenerator.)



From drew.smathers at gmail.com  Tue Jan 13 20:42:24 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 13 Jan 2009 20:42:24 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <1231881069.16735.1294598841@webmail.messagingengine.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
	<8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
	<1231881069.16735.1294598841@webmail.messagingengine.com>
Message-ID: <368574aa0901131742s9fc9decla02d1f64ed61aca7@mail.gmail.com>

On Tue, Jan 13, 2009 at 4:11 PM, V S P <toreason at fastmail.fm> wrote
> Hi, thank you for the correction on how to use Ampula.
>
> Naming service serves
> really as a 'discovery' tool -- and then the participating
> components talk to each other.  When new component comes
> on online, it registers, and the Naming Service broadcasts
> the new updates to all the subscribed components.  It also
> can 'ping' the components to see if they are alive and if not
> it deletes an entry and broadcasts the updates to the remaning
> components.

It's sounds like what you want is erlang.  I'm only saying this
half-seriously.  Neither python or twisted have builtin mechanisms for
doing what you want.

> This way the message dispatchers (or components themselves) have
> almost up-to-date information about their peers on the network (the  is
> a delay controlled by ping interval).

Hmmm ... message dispatchers.  Are you building messaging middleware?
If so, you should probably stop now.  Here's something that already
works: http://www.rabbitmq.com

>
> The naming service data is sometimes stored on a file system
> (in case it crashes and needs to restart -- sort of like a
> 'session') with Python's serialization it has to be easy to do.
>
> But yes, a naming service while not a bottleneck --  can be
> a single point of failure in a distributed env, and that's why
> for 'fault safety' it is typically ran on fail-over hardware
> (although since it is not doing much, it rarely crashes :-))
>
> I certainly agree that using a naming service as a mechanism
> to get a 'context' of a remote process to invoke its methods
> (sort of get a Prospective Broker object from a naming service)
> every time a call is made -- would be inefficient and not correct.
>
> But if each component has the table of the registered components,
> then simply using that table to insanciate a Prospective Broker's
> RemoteReference for the needed remote component -- would be nice.
>
>
> Few people pointed out that a more generic service discovery
> systems exist and they use Dbus protocol (they are used to discover
> printers on the network, fileshares, etc) -- I have to study those.
>
> As far as XAMPP, I meant to ask: in twisted, does it run distributed
> on multiple machines (that is multiple xampp servers each on its own
> machine) -- if yes -- I thought it would have to have some kind of a
> naming service built in (I did not mean that XA (AMP) in the naming
> suggested that it is derived from Ampula :-)).  But may be it is
> single-machine/single-thread process only (I just did not know).
>

Still, what is XAMPP?  I think Valentino was assuming you mispelled
XMPP.  To partially answer this question though (excluding XAMPP as a
component), Twisted has protocols (AMP, PB, etc.) that make relatively
easy to build simple distributed systems (running on multiple
machines).  If you study hard and work hard you can also build more
complex distributed systems with grander scalability requirements.
Twisted does not magically cluster itself on multiple machines.

-Drew



From toreason at fastmail.fm  Wed Jan 14 01:56:22 2009
From: toreason at fastmail.fm (V S P)
Date: Wed, 14 Jan 2009 01:56:22 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <368574aa0901131742s9fc9decla02d1f64ed61aca7@mail.gmail.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
	<8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
	<1231881069.16735.1294598841@webmail.messagingengine.com>
	<368574aa0901131742s9fc9decla02d1f64ed61aca7@mail.gmail.com>
Message-ID: <1231916182.26350.1294676453@webmail.messagingengine.com>

Hi,
thank you for the reply, yes I meant XMPP and thought that it might
be written to be deployed on multiple machines.  But from what you
are saying it is not.

Yes, started looking at Erlang as well (and its Mnesia component)
rabbitMQ seems like what I need in terms of scalable multi-machine
support.

Basically what I need is to request reports, run reports (for long time,
joining database and file data(where files can be in netCDF4)),
 and then upload results (some times in excel, some times other
formats) back to user-specific database.

I certainly do not want to develop 'middleware' -- I just wanted
to use it.  

And Twisted/Python had bunch of libraries (including excel support,
math libraries, NetCDF4, pyTables (that I will need) ), books, community
support, etc -- compared to Erlang.

So I just was missing a multi-machine distribution scheme... I thought
the Twisted community would run into something similar and have
solutions (google-apps have to be using something to as well to run
on multiple machines)

Another option for me of course TAO ORB, or as you pointed out Erlang
RabbitMQ (especially since Erlang was designed to do this), or as people
suggested one of the open source Message Queuing systems.

In the selection process, I just wanted to stay within Python (rather
than C++, Java, Erlang or a mix of those).

Another option I also thought about (if Twisted would be too
difficult to use for multimachine support) would be to use
Tao ORB, and for each Corba Server simply use Boost C++ Python
binder and then pretty much have all the python stuff I need.

However, there are unknowns there too ... while I am pretty
comfortable with C++, I do not know how Python Database access libraries
will behave when invoked from with TAO's Corba servers...
is there connection pooling there/etc.  Also may be there gottchas
there I do not even think of now.

Anyways, this is not twisted specific... just wanted to explain
why I was looking.








On Tue, 13 Jan 2009 20:42:24 -0500, "Drew Smathers"
<drew.smathers at gmail.com> said:
> On Tue, Jan 13, 2009 at 4:11 PM, V S P <toreason at fastmail.fm> wrote
> > Hi, thank you for the correction on how to use Ampula.
> >
> > Naming service serves
> > really as a 'discovery' tool -- and then the participating
> > components talk to each other.  When new component comes
> > on online, it registers, and the Naming Service broadcasts
> > the new updates to all the subscribed components.  It also
> > can 'ping' the components to see if they are alive and if not
> > it deletes an entry and broadcasts the updates to the remaning
> > components.
> 
> It's sounds like what you want is erlang.  I'm only saying this
> half-seriously.  Neither python or twisted have builtin mechanisms for
> doing what you want.
> 
> > This way the message dispatchers (or components themselves) have
> > almost up-to-date information about their peers on the network (the  is
> > a delay controlled by ping interval).
> 
> Hmmm ... message dispatchers.  Are you building messaging middleware?
> If so, you should probably stop now.  Here's something that already
> works: http://www.rabbitmq.com
> 
> >
> > The naming service data is sometimes stored on a file system
> > (in case it crashes and needs to restart -- sort of like a
> > 'session') with Python's serialization it has to be easy to do.
> >
> > But yes, a naming service while not a bottleneck --  can be
> > a single point of failure in a distributed env, and that's why
> > for 'fault safety' it is typically ran on fail-over hardware
> > (although since it is not doing much, it rarely crashes :-))
> >
> > I certainly agree that using a naming service as a mechanism
> > to get a 'context' of a remote process to invoke its methods
> > (sort of get a Prospective Broker object from a naming service)
> > every time a call is made -- would be inefficient and not correct.
> >
> > But if each component has the table of the registered components,
> > then simply using that table to insanciate a Prospective Broker's
> > RemoteReference for the needed remote component -- would be nice.
> >
> >
> > Few people pointed out that a more generic service discovery
> > systems exist and they use Dbus protocol (they are used to discover
> > printers on the network, fileshares, etc) -- I have to study those.
> >
> > As far as XAMPP, I meant to ask: in twisted, does it run distributed
> > on multiple machines (that is multiple xampp servers each on its own
> > machine) -- if yes -- I thought it would have to have some kind of a
> > naming service built in (I did not mean that XA (AMP) in the naming
> > suggested that it is derived from Ampula :-)).  But may be it is
> > single-machine/single-thread process only (I just did not know).
> >
> 
> Still, what is XAMPP?  I think Valentino was assuming you mispelled
> XMPP.  To partially answer this question though (excluding XAMPP as a
> component), Twisted has protocols (AMP, PB, etc.) that make relatively
> easy to build simple distributed systems (running on multiple
> machines).  If you study hard and work hard you can also build more
> complex distributed systems with grander scalability requirements.
> Twisted does not magically cluster itself on multiple machines.
> 
> -Drew
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Choose from over 50 domains or use your own




From gabriel.rossetti at arimaz.com  Wed Jan 14 03:59:29 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 14 Jan 2009 09:59:29 +0100
Subject: [Twisted-Python] IPushProducer problem
In-Reply-To: <20090113160321.9754.2135396551.divmod.quotient.1901@henry.divmod.com>
References: <20090113160321.9754.2135396551.divmod.quotient.1901@henry.divmod.com>
Message-ID: <496DA971.8040906@arimaz.com>

Jean-Paul Calderone wrote:
> On Tue, 13 Jan 2009 16:34:29 +0100, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com> wrote:
>> Hello everyone,
>>
>> I implemented a push-produce a while back and I though it works, but 
>> it didn't. When the msgs where spaced out, it worked, but if several 
>> msgs were sent one after the other, then things go bad (the msgs get 
>> mixed up)...
>>
>> I found this thread : 
>> http://www.twistedmatrix.com/pipermail/twisted-python 
>> /2007-March/014983.html
>>
>> and I think I ave the same problem, my code looks a bit like his :
>>
>>    def pauseProducing(self):
>>        """
>>        Pause the producer
>>        """
>>        self.__paused = True
>>
>>    def resumeProducing(self):
>>        """
>>        Resume the producer
>>        """
>>        self.__paused = False
>>
>>        while(not self.__paused and self.__startLimit < self.__total):
>>            data = self.__buf[self.__startLimit:self.__endLimit]
>>            self.transport.write(data)
>>            self.__startLimit = self.__endLimit
>>            self.__endLimit += self.__burstSize
>>            if(not self.__stream):
>>                break
>>
>>        if(not self.__paused or self.__startLimit >= self.__total):
>>            self.stopProducing()
>>
>>    def stopProducing(self):
>>        """
>>        Stop the producer
>>        """
>>        self.__paused = False
>>        self.__startLimit = 0
>>        self.__buf = None
>>        self.__total = None
>>        self.__endLimit = self.__burstSize
>>
>> and when I send a msg I use this :
>>
>> def sendMessage(self, msg):
>>        if domish.IElement.providedBy(msg):
>>            msg = msg.toXml()
>>              if isinstance(msg, unicode):
>>            msg = msg.encode('utf-8')
>>                      self.__buf = msg
>>        self.__total = len(msg)
>>        if(self.__stream):
>>            self.resumeProducing()
>>
>> I think what happens is that the code is re-entered, just like 
>> Jean-Paul suggested in the other thread. The thing is I didn't 
>> understand the solution, could somebody please explain it to me or 
>> suggest something else?
>
> It's extremely difficult to say without seeing a complete example and 
> without
> knowing exactly how the code is failing.  However, one thing I do see 
> is that
> it is not safe to call your `sendMessage` a second time before all of the
> data from the first call has been written.  Since you are using 
> `__buf? to
> record the message to send, if you try to send another message, the first
> buffer will be clobbered.  Could this be the problem you're having?
>
> Perhaps consider appending to `__buf? instead of overwriting it.  
> There are
> probably lots of other areas where this code could improve too, but not
> corrupting the internal state of the producer is a good start. :)
>
> Jean-Paul
>
Thanks for your answer Jean-Paul, yes, not currupting the internal state 
of my producer is a good start :-). I re-wrote it like this and it seems 
to work correctly now :

    def pauseProducing(self):
        """
        Pause the producer
        """
        self.__paused = True

    def resumeProducing(self):
        """
        Resume the producer
        """
        self.__paused = False

        while(not self.__paused and self.__buf):
            self.transport.write(self.__buf[:self.__burstSize])
            self.__buf = self.__buf[self.__burstSize:]
            if(not self.__stream):
                break

        if(not self.__paused or not self.__buf):
            self.stopProducing()

    def stopProducing(self):
        """
        Stop the producer
        """
        self.__paused = False

    def sendMessage(self, msg):
        if domish.IElement.providedBy(msg):
            msg = msg.toXml()
       
        if isinstance(msg, unicode):
            msg = msg.encode('utf-8')
               
        self.__buf += msg
        if(self.__stream and not self.__paused):
            self.resumeProducing()


Thanks again for pointing that out :-),
Gabriel



From rodrigoarancibiapla at winctp.com  Tue Jan 13 16:32:31 2009
From: rodrigoarancibiapla at winctp.com (rodrigoarancibiapla at winctp.com)
Date: Tue, 13 Jan 2009 14:32:31 -0700
Subject: [Twisted-Python] Software that uses Twisted
Message-ID: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090113/7bca83ab/attachment.htm 

From gabriel.rossetti at arimaz.com  Wed Jan 14 09:48:13 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 14 Jan 2009 15:48:13 +0100
Subject: [Twisted-Python] IPushProducer problem
In-Reply-To: <496DA971.8040906@arimaz.com>
References: <20090113160321.9754.2135396551.divmod.quotient.1901@henry.divmod.com>
	<496DA971.8040906@arimaz.com>
Message-ID: <496DFB2D.5050604@arimaz.com>

Gabriel Rossetti wrote:
> Jean-Paul Calderone wrote:
>> On Tue, 13 Jan 2009 16:34:29 +0100, Gabriel Rossetti 
>> <gabriel.rossetti at arimaz.com> wrote:
>>> Hello everyone,
>>>
>>> I implemented a push-produce a while back and I though it works, but 
>>> it didn't. When the msgs where spaced out, it worked, but if several 
>>> msgs were sent one after the other, then things go bad (the msgs get 
>>> mixed up)...
>>>
>>> I found this thread : 
>>> http://www.twistedmatrix.com/pipermail/twisted-python 
>>> /2007-March/014983.html
>>>
>>> and I think I ave the same problem, my code looks a bit like his :
>>>
>>>    def pauseProducing(self):
>>>        """
>>>        Pause the producer
>>>        """
>>>        self.__paused = True
>>>
>>>    def resumeProducing(self):
>>>        """
>>>        Resume the producer
>>>        """
>>>        self.__paused = False
>>>
>>>        while(not self.__paused and self.__startLimit < self.__total):
>>>            data = self.__buf[self.__startLimit:self.__endLimit]
>>>            self.transport.write(data)
>>>            self.__startLimit = self.__endLimit
>>>            self.__endLimit += self.__burstSize
>>>            if(not self.__stream):
>>>                break
>>>
>>>        if(not self.__paused or self.__startLimit >= self.__total):
>>>            self.stopProducing()
>>>
>>>    def stopProducing(self):
>>>        """
>>>        Stop the producer
>>>        """
>>>        self.__paused = False
>>>        self.__startLimit = 0
>>>        self.__buf = None
>>>        self.__total = None
>>>        self.__endLimit = self.__burstSize
>>>
>>> and when I send a msg I use this :
>>>
>>> def sendMessage(self, msg):
>>>        if domish.IElement.providedBy(msg):
>>>            msg = msg.toXml()
>>>              if isinstance(msg, unicode):
>>>            msg = msg.encode('utf-8')
>>>                      self.__buf = msg
>>>        self.__total = len(msg)
>>>        if(self.__stream):
>>>            self.resumeProducing()
>>>
>>> I think what happens is that the code is re-entered, just like 
>>> Jean-Paul suggested in the other thread. The thing is I didn't 
>>> understand the solution, could somebody please explain it to me or 
>>> suggest something else?
>>
>> It's extremely difficult to say without seeing a complete example and 
>> without
>> knowing exactly how the code is failing.  However, one thing I do see 
>> is that
>> it is not safe to call your `sendMessage` a second time before all of 
>> the
>> data from the first call has been written.  Since you are using 
>> `__buf? to
>> record the message to send, if you try to send another message, the 
>> first
>> buffer will be clobbered.  Could this be the problem you're having?
>>
>> Perhaps consider appending to `__buf? instead of overwriting it.  
>> There are
>> probably lots of other areas where this code could improve too, but not
>> corrupting the internal state of the producer is a good start. :)
>>
>> Jean-Paul
>>
> Thanks for your answer Jean-Paul, yes, not currupting the internal 
> state of my producer is a good start :-). I re-wrote it like this and 
> it seems to work correctly now :
>
>    def pauseProducing(self):
>        """
>        Pause the producer
>        """
>        self.__paused = True
>
>    def resumeProducing(self):
>        """
>        Resume the producer
>        """
>        self.__paused = False
>
>        while(not self.__paused and self.__buf):
>            self.transport.write(self.__buf[:self.__burstSize])
>            self.__buf = self.__buf[self.__burstSize:]
>            if(not self.__stream):
>                break
>
>        if(not self.__paused or not self.__buf):
>            self.stopProducing()
>
>    def stopProducing(self):
>        """
>        Stop the producer
>        """
>        self.__paused = False
>
>    def sendMessage(self, msg):
>        if domish.IElement.providedBy(msg):
>            msg = msg.toXml()
>              if isinstance(msg, unicode):
>            msg = msg.encode('utf-8')
>                      self.__buf += msg
>        if(self.__stream and not self.__paused):
>            self.resumeProducing()
>
>
> Thanks again for pointing that out :-),
> Gabriel
>
Just a quick question, should I do the producer 
registration/unregisteration once (e.g. in 
connectionMade()/connectionLost()) or have the registration be done in 
my sendMessage() method and the unregistration in the stopProducing() 
method? I noticed that if I set streaming to False, it reacts like a 
PullProducer and calls resumeProducing() in the registration, which is 
what made me wonder if I should move the registration to sendMessage().

Thank you,
Gabriel



From challman at gmail.com  Wed Jan 14 11:30:01 2009
From: challman at gmail.com (Chris Hallman)
Date: Wed, 14 Jan 2009 11:30:01 -0500
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
Message-ID: <9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>

I don't mean to be picky, but whomever ever wrote that site used poor
English grammar. To be taken more serious, you need to correct the
grammatical mistakes.



chris



On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com> wrote:

> Description: A control panel for Windows visible form any part of the
> world through web browsers
> URL: www.winctp.com
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090114/3c306801/attachment.htm 

From moof at metamoof.net  Wed Jan 14 11:42:00 2009
From: moof at metamoof.net (Giles Antonio Radford)
Date: Wed, 14 Jan 2009 16:42:00 +0000
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
	<9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
Message-ID: <8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>

Surely "seriously"?

HTH, HAND,

Moof

On Wed, Jan 14, 2009 at 4:30 PM, Chris Hallman <challman at gmail.com> wrote:
>
> I don't mean to be picky, but whomever ever wrote that site used poor
> English grammar. To be taken more serious, you need to correct the
> grammatical mistakes.
>
>
>
> chris
>
>
>
> On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com> wrote:
>>
>> Description: A control panel for Windows visible form any part of the
>> world through web browsers
>> URL: www.winctp.com
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From listsin at integrateddevcorp.com  Wed Jan 14 12:35:29 2009
From: listsin at integrateddevcorp.com (s s)
Date: Wed, 14 Jan 2009 12:35:29 -0500
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
	<9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
	<8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>
Message-ID: <93061796-5588-4661-BDEF-7D74788890C2@integrateddevcorp.com>

With seriously, taken you will be more.

S

On Jan 14, 2009, at 11:42 AM, Giles Antonio Radford wrote:

> Surely "seriously"?
>
> HTH, HAND,
>
> Moof
>
> On Wed, Jan 14, 2009 at 4:30 PM, Chris Hallman <challman at gmail.com>  
> wrote:
>>
>> I don't mean to be picky, but whomever ever wrote that site used poor
>> English grammar. To be taken more serious, you need to correct the
>> grammatical mistakes.
>>
>>
>>
>> chris
>>
>>
>>
>> On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com>  
>> wrote:
>>>
>>> Description: A control panel for Windows visible form any part of  
>>> the
>>> world through web browsers
>>> URL: www.winctp.com
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From alecf at metaweb.com  Wed Jan 14 17:28:58 2009
From: alecf at metaweb.com (Alec Flett)
Date: Wed, 14 Jan 2009 14:28:58 -0800
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <1231916182.26350.1294676453@webmail.messagingengine.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
	<8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
	<1231881069.16735.1294598841@webmail.messagingengine.com>
	<368574aa0901131742s9fc9decla02d1f64ed61aca7@mail.gmail.com>
	<1231916182.26350.1294676453@webmail.messagingengine.com>
Message-ID: <2730242B-5D45-4FBE-BF85-AA8D3980A13E@metaweb.com>


On Jan 13, 2009, at 10:56 PM, V S P wrote:

> Hi,
>
> Another option for me of course TAO ORB, or as you pointed out Erlang
> RabbitMQ (especially since Erlang was designed to do this), or as  
> people
> suggested one of the open source Message Queuing systems.
>

For simple service discovery on a network, the Bonjour stuff works  
reasonably well - plus the avahi libraries, which have a python  
adapter, are asynchronous, event-loop based, in a way that I believe  
would fit in well with Twisted. That at least gives you discovery,  
though not queuing.

Alec
>




From toreason at fastmail.fm  Wed Jan 14 17:48:39 2009
From: toreason at fastmail.fm (V S P)
Date: Wed, 14 Jan 2009 17:48:39 -0500
Subject: [Twisted-Python] django with twisted 8.2.x:  2009
Message-ID: <1231973319.19140.1294828191@webmail.messagingengine.com>

Hi,
wanted to ask for some help in getting django running with
twisted webserver for my experiments.

Using Python 2.6
Twisted 8.2.0
Django 1.0.2
on windows xp for now.

I searched the documentation , most of the blog entries/etc were
in '07 about this setup.  And most refer to web2 plugin for twisted
as it support for wsgi.

I looked at the web2 page on twisted matrix and it said that its
functionality will be ported back to 'web' module as they become stable.
I then browsed 'web' module subdirectory and I saw wsgi there
(and I assume this is what's needed for django).

So to shorten the story, this is what I tried:
I downloaded the example web server web.py, made sure it works
with the test file (and it does).

Then I added another 'processor' for files with extensions .wpy

root.processors = {
            '.cgi': twcgi.CGIScript,
            '.php3': twcgi.PHP3Script,
            '.php': twcgi.PHPScript,
'.wpy':  wsgi.WSGIResource,
            '.epy': script.PythonScript,
            '.rpy': script.ResourceScript,
            '.trp': trp.ResourceUnpickler,
}


then I created a simple django file
------------- views.wpy ------------
from django.http import HttpResponse

def hello(request):
    return HttpResponse("Hello world")
--------------------------------------

and tried to run it.  That, of course did not work,
for one because I did not create a 'resource' global.

But basically, I do not think I am going right way about it,
therefore decided to stop and ask.


thanks in advance
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - mmm... Fastmail...




From exarkun at divmod.com  Wed Jan 14 18:00:01 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Jan 2009 18:00:01 -0500
Subject: [Twisted-Python] django with twisted 8.2.x:  2009
In-Reply-To: <1231973319.19140.1294828191@webmail.messagingengine.com>
Message-ID: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>

On Wed, 14 Jan 2009 17:48:39 -0500, V S P <toreason at fastmail.fm> wrote:
>Hi,
>wanted to ask for some help in getting django running with
>twisted webserver for my experiments.
>
>Using Python 2.6
>Twisted 8.2.0
>Django 1.0.2
>on windows xp for now.
>
>I searched the documentation , most of the blog entries/etc were
>in '07 about this setup.  And most refer to web2 plugin for twisted
>as it support for wsgi.
>
>I looked at the web2 page on twisted matrix and it said that its
>functionality will be ported back to 'web' module as they become stable.
>I then browsed 'web' module subdirectory and I saw wsgi there
>(and I assume this is what's needed for django).
>
>So to shorten the story, this is what I tried:
>I downloaded the example web server web.py, made sure it works
>with the test file (and it does).
>
>Then I added another 'processor' for files with extensions .wpy
>
>root.processors = {
>            '.cgi': twcgi.CGIScript,
>            '.php3': twcgi.PHP3Script,
>            '.php': twcgi.PHPScript,
>'.wpy':  wsgi.WSGIResource,
>            '.epy': script.PythonScript,
>            '.rpy': script.ResourceScript,
>            '.trp': trp.ResourceUnpickler,
>}
>

WSGIResource isn't a "processor", so you can't add it to the processors
dictionary like this.

>
>then I created a simple django file
>------------- views.wpy ------------
>from django.http import HttpResponse
>
>def hello(request):
>    return HttpResponse("Hello world")
>--------------------------------------

I don't think HttpResponse instances are wsgi applications, nor is that
hello function.

>
>and tried to run it.  That, of course did not work,
>for one because I did not create a 'resource' global.
>
>But basically, I do not think I am going right way about it,
>therefore decided to stop and ask.
>

Take a look at http://code.google.com/p/modwsgi/wiki/IntegrationWithDjango
which explains how to create a Django WSGI application object.

Then, take a look at <http://twistedmatrix.com/trac/attachment/ticket/3510/t.w.wsgi-doc.diff> which is a work-in-progress Twisted documentation
addition which explains how to serve a WSGI application using Twisted Web's
WSGI container.

Once you understand those two pieces, you should be able to combine them
and get a working Twisted Web/Django server.

Jean-Paul



From vvangelovski at gmail.com  Wed Jan 14 18:33:17 2009
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Thu, 15 Jan 2009 00:33:17 +0100
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <93061796-5588-4661-BDEF-7D74788890C2@integrateddevcorp.com>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
	<9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
	<8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>
	<93061796-5588-4661-BDEF-7D74788890C2@integrateddevcorp.com>
Message-ID: <406b9fda0901141533x1769394nb5c7aee07a5365ca@mail.gmail.com>

Would you be interested in getting internet providings that is better
than your current providings?
Seriously

On Wed, Jan 14, 2009 at 6:35 PM, s s <listsin at integrateddevcorp.com> wrote:
> With seriously, taken you will be more.
>
> S
>
> On Jan 14, 2009, at 11:42 AM, Giles Antonio Radford wrote:
>
>> Surely "seriously"?
>>
>> HTH, HAND,
>>
>> Moof
>>
>> On Wed, Jan 14, 2009 at 4:30 PM, Chris Hallman <challman at gmail.com> wrote:
>>>
>>> I don't mean to be picky, but whomever ever wrote that site used poor
>>> English grammar. To be taken more serious, you need to correct the
>>> grammatical mistakes.
>>>
>>>
>>>
>>> chris
>>>
>>>
>>>
>>> On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com> wrote:
>>>>
>>>> Description: A control panel for Windows visible form any part of the
>>>> world through web browsers
>>>> URL: www.winctp.com
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From toreason at fastmail.fm  Wed Jan 14 20:48:55 2009
From: toreason at fastmail.fm (V S P)
Date: Wed, 14 Jan 2009 20:48:55 -0500
Subject: [Twisted-Python] django with twisted 8.2.x:  2009
In-Reply-To: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
References: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
Message-ID: <1231984135.20890.1294853465@webmail.messagingengine.com>

Ok, thank you for the pointers, I got it working
(or at least I get "It worked" django page :-) )

I also used 
http://code.google.com/appengine/articles/django.html
to get a basic wsgi server working

and 
http://www.sitepoint.com/article/build-to-do-list-30-minutes/
to get basic django installation


It ended up pretty painless (sofar)

step 0) install python 2.6.1, twisted 8.2.0 and django 1.0.1

step 1) select a subdirectory as the root of your
twisted wsgi server

step 2) copy in there this file
------------ wsgi_web.py -----------------
import logging, os

# Force Django to reload its settings.
from django.conf import settings
settings._target = None

# Must set this env var before importing any part of Django
os.environ['DJANGO_SETTINGS_MODULE'] = 'mytestproj.settings'


from twisted.web import server 
from twisted.web.wsgi import WSGIResource 
from twisted.python.threadpool import ThreadPool 
from twisted.internet import reactor 

import django.core.handlers.wsgi
import django.core.signals
import django.db
import django.dispatch.dispatcher


def log_exception(*args, **kwds):
  logging.exception('Exception in request:')


def main():
  # Create a Django application for WSGI.
  application = django.core.handlers.wsgi.WSGIHandler()

	 
	 
# Create and start a thread pool, 
# ensuring that it will be stopped when the reactor shuts down 
thread_pool = ThreadPool() 
thread_pool.start() 
reactor.addSystemEventTrigger('after', 'shutdown', thread_pool.stop) 
	 
# Create the WSGI resource 
#wsgi_app_as_resource = WSGIResource(reactor, thread_pool,
basic_wsgi_app) 
wsgi_app_as_resource = WSGIResource(reactor, thread_pool,
django.core.handlers.wsgi.WSGIHandler())       
	 
site = server.Site(wsgi_app_as_resource) 
reactor.listenTCP(8080, site) 
reactor.run()

----------------- end of wsgi_web.py -----------------------


3) your project name will be mytestproj
(and that project directory is relative to the place where
 wsgi_web.py file is started


4) cd to directory where wsgi_web.py is
and run

python.exe <pathtopython>\Lib\site-packages\django\bin\django-admin.py
startproject mytestproj

5) execute 
python.exe   wsgi_web.py


6) from your browser http://localhost:8080  should give you
the django page.


that's it,
Vlad








On Wed, 14 Jan 2009 18:00:01 -0500, "Jean-Paul Calderone"
<exarkun at divmod.com> said:
> On Wed, 14 Jan 2009 17:48:39 -0500, V S P <toreason at fastmail.fm> wrote:
> >Hi,
> >wanted to ask for some help in getting django running with
> >twisted webserver for my experiments.
> >
> >Using Python 2.6
> >Twisted 8.2.0
> >Django 1.0.2
> >on windows xp for now.
> >
> >I searched the documentation , most of the blog entries/etc were
> >in '07 about this setup.  And most refer to web2 plugin for twisted
> >as it support for wsgi.
>
> 
> Take a look at
> http://code.google.com/p/modwsgi/wiki/IntegrationWithDjango
> which explains how to create a Django WSGI application object.
> 
> Then, take a look at
> <http://twistedmatrix.com/trac/attachment/ticket/3510/t.w.wsgi-doc.diff>
> which is a work-in-progress Twisted documentation
> addition which explains how to serve a WSGI application using Twisted
> Web's
> WSGI container.
> 
> Once you understand those two pieces, you should be able to combine them
> and get a working Twisted Web/Django server.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - And now for something completely different?




From clemesha at gmail.com  Wed Jan 14 23:45:39 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 14 Jan 2009 20:45:39 -0800
Subject: [Twisted-Python] django with twisted 8.2.x: 2009
In-Reply-To: <1231984135.20890.1294853465@webmail.messagingengine.com>
References: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
	<1231984135.20890.1294853465@webmail.messagingengine.com>
Message-ID: <d272f0690901142045v93a9709nce1a90df677c80cd@mail.gmail.com>

> It ended up pretty painless (sofar)

Hey Vlad,

Thanks for posting your solution!

Care to discuss your use case for mixing Django and Twisted?

I have considered mixing the two for a project that combines
a web interface and some XMPP functionality, but I have not yet
gone down this route ...

What about using deferreds in your views? (is that even a useful/good idea ?)
and what about blocking model calls, have you consider these scenarios?

Thanks for any feedback on this interesting topic.
-Alex


-- 
Alex Clemesha
clemesha.org



From challman at gmail.com  Thu Jan 15 01:19:08 2009
From: challman at gmail.com (Chris Hallman)
Date: Thu, 15 Jan 2009 01:19:08 -0500
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <406b9fda0901141533x1769394nb5c7aee07a5365ca@mail.gmail.com>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
	<9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
	<8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>
	<93061796-5588-4661-BDEF-7D74788890C2@integrateddevcorp.com>
	<406b9fda0901141533x1769394nb5c7aee07a5365ca@mail.gmail.com>
Message-ID: <9f68812f0901142219m334581fegd11cad03b2f2024d@mail.gmail.com>

I apologize to all on the mailing. I meant to reply only to the original
sender, not all.



On Wed, Jan 14, 2009 at 6:33 PM, Vasil Vangelovski
<vvangelovski at gmail.com>wrote:

> Would you be interested in getting internet providings that is better
> than your current providings?
> Seriously
>
> On Wed, Jan 14, 2009 at 6:35 PM, s s <listsin at integrateddevcorp.com>
> wrote:
> > With seriously, taken you will be more.
> >
> > S
> >
> > On Jan 14, 2009, at 11:42 AM, Giles Antonio Radford wrote:
> >
> >> Surely "seriously"?
> >>
> >> HTH, HAND,
> >>
> >> Moof
> >>
> >> On Wed, Jan 14, 2009 at 4:30 PM, Chris Hallman <challman at gmail.com>
> wrote:
> >>>
> >>> I don't mean to be picky, but whomever ever wrote that site used poor
> >>> English grammar. To be taken more serious, you need to correct the
> >>> grammatical mistakes.
> >>>
> >>>
> >>>
> >>> chris
> >>>
> >>>
> >>>
> >>> On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com>
> wrote:
> >>>>
> >>>> Description: A control panel for Windows visible form any part of the
> >>>> world through web browsers
> >>>> URL: www.winctp.com
> >>>>
> >>>> _______________________________________________
> >>>> Twisted-Python mailing list
> >>>> Twisted-Python at twistedmatrix.com
> >>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>>>
> >>>
> >>>
> >>> _______________________________________________
> >>> Twisted-Python mailing list
> >>> Twisted-Python at twistedmatrix.com
> >>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>>
> >>>
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090115/3c74e41c/attachment.htm 

From alessio.pace at gmail.com  Thu Jan 15 05:44:44 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 15 Jan 2009 11:44:44 +0100
Subject: [Twisted-Python] TCP: can't redo connectTCP() from same local port
	if server did not explicitly close connection ??
Message-ID: <84987d20901150244t360fcb83xfa5c2059aa079a12@mail.gmail.com>

Hi,

I would like to have a client connect via TCP to a server (say, server "A"),
then the client close the connection and connect via TCP to another server
(say, server "B") using the same TCP port that was bound locally while
connecting to "A". And then this done over and over again switching from B
to A to B etc..

The fact is that it all works if both the client and the server do
transport.loseConnection() before the client tries to connect to the other
server from the same local port, instead if *only* the client does
transport.loseConnection(), I obtain:

[Failure instance: Traceback (failure with no frames): <class
> 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98: Address
> already in use.


which it is strange to me as the next connectTCP() attempt is called in the
connectionLost() method of the client, so the socket should be closed
already.

For the very generous readers, I post at http://pastebin.com/m31b0d911 the
code which can be just executed in this way:

* on a terminal, for the server:  python tcp_listen_connect.py -server

* on another terminal, for the client:  python tcp_listen_connect.py -client
127.0.0.1

Comment/uncomment line number 21 to see the affected behaviour.

Sorry for the "please download and verify" approach, but it's 2 days I'm
struggling with it and I was wondering if there is really something I'm
doing wrong or it's just that it works like that.

Thanks in advance.
Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090115/f5d71b63/attachment.htm 

From exarkun at divmod.com  Thu Jan 15 07:58:06 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Jan 2009 07:58:06 -0500
Subject: [Twisted-Python] TCP: can't redo connectTCP() from same local
	port if server did not explicitly close connection ??
In-Reply-To: <84987d20901150244t360fcb83xfa5c2059aa079a12@mail.gmail.com>
Message-ID: <20090115125806.9754.304071028.divmod.quotient.2983@henry.divmod.com>

On Thu, 15 Jan 2009 11:44:44 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>Hi,
>
>I would like to have a client connect via TCP to a server (say, server "A"),
>then the client close the connection and connect via TCP to another server
>(say, server "B") using the same TCP port that was bound locally while
>connecting to "A". And then this done over and over again switching from B
>to A to B etc..
>
>The fact is that it all works if both the client and the server do
>transport.loseConnection() before the client tries to connect to the other
>server from the same local port, instead if *only* the client does
>transport.loseConnection(), I obtain:
>
>[Failure instance: Traceback (failure with no frames): <class
>> 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98: Address
>> already in use.
>
>
>which it is strange to me as the next connectTCP() attempt is called in the
>connectionLost() method of the client, so the socket should be closed
>already.

This is because the client connection goes into the CLOSE_WAIT state instead
of really closing all the way right away.  Google for "tcp state diagram"
and take a look at how a socket can close - notice that of the two paths
there are to get to CLOSED, only one of them goes through CLOSE_WAIT.

There are ways to change this (on most platforms, you can reduce the amount
of time a socket spends in CLOSE_WAIT before going to CLOSED), but it may not
be a good idea to use them.  The CLOSE_WAIT state helps make sure that all
data is delivered to the right TCP connection and not a different, unrelated
TCP connection by accident.

Jean-Paul



From Tamika  Thu Jan 15 08:13:21 2009
From: Tamika (twisted-python@twistedmatrix.com)
Date: Thu, 15 Jan 2009 13:13:21 -0000
Subject: [Twisted-Python] Real Viagra Professional - for real sex pros


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
              
<html>
<head>
<center>
<a href="http://rqf.entercompassion.com"><img src="http://mediapix.ru/pics/685207b3dd437eff7f15c0744b5c1d3a.gif">

    <title>
    
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" href="http://gfx8.nnt.com/mail/12.0.1187.0824/positioning.css" />
</head>
<body style="overflow:auto;">
    <div id="PrintShellToolbar">
    <div class="ContainerPadding">
        <span class="FloatRight">
            <a href                <img alt="" src="http://gfx1.nfi.com/mail/w2/pr02/ltr/glyph_close_rest.gif" /> <Close window>

            <a href                <img alt="" src="http://gfx2.czb.com/mail/w2/pr02/ltr/i_print.gif" /> <Print>
            </a>
        </span>
    </div>
</div>
    <div>
        <div class="BorderContainerOutline ContainerPadding">
            <div class="ClearBoth">
                <span class="HeaderData" style="font-size:large;">
                    <TuPostal.com Cambia de nombre?>
                </span>
            </div>
            <div class="ClearBoth">
                <span class="HeaderLabel">
                    <From:>
                </span>
                <span class="HeaderData">
                    <b><TuPostal.com></b>
                </span>
            </div>
            <div class="ClearBoth">
                <span class="HeaderLabel">
                    <Sent:>
                </span>
                <span class="HeaderData">
              

            <div class="ClearBoth">
                <span class="HeaderLabel">
                    To: 
                </span>
                <span class="HeaderData">
                    Mikelelliott (mikelelliott at rlo.com)
                </span>
            </div>
            <br />
            
        </div>
    </div>
    <div class="MessageBody" style="">
        
        <br />
        <div id="MessageBodyText" class="ExternalClass" style="border: 1px solid 
          
          #fff
          ;">
            <pre>Hola!<br> <br>Tupostal es ahora parte de Sonico!<br> <br>Para conocer nuestro nuevo sitio, haz clic en el siguiente link:<br><a href='http://www.gwpcom/index1.php' target='_blank'>http://www.bjncom/index1.php</a><br> <br>Sonico es un sitio donde puedes...<br>- Guardar fotos ilimitadas<br>- Re encontrarte con viejos amigos<br>- Recibir novedades de tus amigos.<br> <br>Te Esperamos! Ya somos mas de 21 millones de usuarios!!<br> <br>Sonico - Amigos Conectados<br> <br> <br>PD: Ahora tambien podras guardar tus postales<br> <br> <br>------------------------------------------<br>Haz recibido este email porque te encuentras registrado en fdm.com.<br>Si no deseas recibir mas mensajes como este, por favor haz clic en el siguiente link:<br><a href='http://www.cehcom/unsubscribe.php?type=2' target='_blank'>http://www.fyocom/unsubscribe.php?type=2</a><br> <br></pre>
        </div>
    </div>

          </div>
    
    </body>
</html>






From alessio.pace at gmail.com  Thu Jan 15 09:02:13 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 15 Jan 2009 15:02:13 +0100
Subject: [Twisted-Python] TCP: can't redo connectTCP() from same local
	port if server did not explicitly close connection ??
In-Reply-To: <20090115125806.9754.304071028.divmod.quotient.2983@henry.divmod.com>
References: <84987d20901150244t360fcb83xfa5c2059aa079a12@mail.gmail.com>
	<20090115125806.9754.304071028.divmod.quotient.2983@henry.divmod.com>
Message-ID: <84987d20901150602y3e1a45b9t4fc46bf89721780b@mail.gmail.com>

Hi,

On Thu, Jan 15, 2009 at 1:58 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Thu, 15 Jan 2009 11:44:44 +0100, Alessio Pace <alessio.pace at gmail.com>
> wrote:
>
>> Hi,
>>
>> I would like to have a client connect via TCP to a server (say, server
>> "A"),
>> then the client close the connection and connect via TCP to another server
>> (say, server "B") using the same TCP port that was bound locally while
>> connecting to "A". And then this done over and over again switching from B
>> to A to B etc..
>>
>> The fact is that it all works if both the client and the server do
>> transport.loseConnection() before the client tries to connect to the other
>> server from the same local port, instead if *only* the client does
>> transport.loseConnection(), I obtain:
>>
>> [Failure instance: Traceback (failure with no frames): <class
>>
>>> 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98: Address
>>> already in use.
>>>
>>
>>
>> which it is strange to me as the next connectTCP() attempt is called in
>> the
>> connectionLost() method of the client, so the socket should be closed
>> already.
>>
>
> This is because the client connection goes into the CLOSE_WAIT state
> instead
> of really closing all the way right away.  Google for "tcp state diagram"
> and take a look at how a socket can close - notice that of the two paths
> there are to get to CLOSED, only one of them goes through CLOSE_WAIT.
>
> There are ways to change this (on most platforms, you can reduce the amount
> of time a socket spends in CLOSE_WAIT before going to CLOSED), but it may
> not
> be a good idea to use them.  The CLOSE_WAIT state helps make sure that all
> data is delivered to the right TCP connection and not a different,
> unrelated
> TCP connection by accident.
>
> Jean-Paul


Thank you very much Jean-Paul, this answer my issue.

And sorry for having doubted of Twisted for a moment ;-)

Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090115/d40b7662/attachment.htm 

From p.mayers at imperial.ac.uk  Thu Jan 15 09:07:41 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 15 Jan 2009 14:07:41 +0000
Subject: [Twisted-Python] SIP support
Message-ID: <496F432D.4070803@imperial.ac.uk>

What's the current status of SIP support in twisted?

I know the support in trunk is older, and there's some newer stuff 
(Sine) on divmod.org (see below) but that's seems heavily dependent on 
mantissa, and crucially doesn't support TCP.

Also - I'm having problems resolving divmod.org from here, as I think 
"ohm.divmod.org" is not responding to DNS queries.



From ddwiggins at advpubtech.com  Thu Jan 15 12:28:22 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 15 Jan 2009 09:28:22 -0800
Subject: [Twisted-Python] Re: adbapi and ConnectionLost.
In-Reply-To: <496CFA6D.2040800@2le.net>
References: <496CFA6D.2040800@2le.net>
Message-ID: <gknrnn$t8v$1@ger.gmane.org>

S?bastien HEITZMANN wrote:
> Hi,
> 
> for a couple of week i search how i should handle mysql disconnection on
> my twisted web service. When I restart the database without restarting
> my service i got some ConnectionLost fired. I have used the cp_reconnect
> on the connection pool and it seem to work ( the lost connection is
> restarted ) but the current query isn't executed.

I ran into a similar thing using mssql with adbapi (through pyodbc). 
The adbapi connection pool holds connections open and uses them to do 
the access, which was causing problems when the database (or the network 
connection between my server and the database) was reset between 
accesses to my service.  I hacked a workaround by creating a thin 
wrapper around adbapi that closes each connection when I'm through with it.

FWIW,
-- 
Don Dwiggins
Advanced Publishing Technology




From washort at twistedmatrix.com  Thu Jan 15 13:13:05 2009
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 15 Jan 2009 13:13:05 -0500
Subject: [Twisted-Python] SIP support
In-Reply-To: <496F432D.4070803@imperial.ac.uk>
References: <496F432D.4070803@imperial.ac.uk>
Message-ID: <20090115181305.GM22704@divmod.org>

On Thu, Jan 15, 2009 at 02:07:41PM +0000, Phil Mayers wrote:
> What's the current status of SIP support in twisted?
>
> I know the support in trunk is older, and there's some newer stuff  
> (Sine) on divmod.org (see below) but that's seems heavily dependent on  
> mantissa, and crucially doesn't support TCP.

I'm currently working on getting RFC 3261-compliant SIP code into
twisted, based on the work in Sine.  A description is here:
http://twistedmatrix.com/trac/wiki/SIPPlan

I'm currently working on #3584, which will provide the transaction and
transport layers described by the RFC.

> Also - I'm having problems resolving divmod.org from here, as I think  
> "ohm.divmod.org" is not responding to DNS queries.

There was a DNS misconfiguration, that should be fixed now.



From toreason at fastmail.fm  Thu Jan 15 14:39:24 2009
From: toreason at fastmail.fm (V S P)
Date: Thu, 15 Jan 2009 14:39:24 -0500
Subject: [Twisted-Python] django with twisted 8.2.x: 2009
In-Reply-To: <d272f0690901142045v93a9709nce1a90df677c80cd@mail.gmail.com>
References: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
	<1231984135.20890.1294853465@webmail.messagingengine.com>
	<d272f0690901142045v93a9709nce1a90df677c80cd@mail.gmail.com>
Message-ID: <1232048364.25572.1295000789@webmail.messagingengine.com>

Hi Alex,
This is just a plan sofar (not implemented yet)

But I plan use twisted for Reports that join
file data and database data.  I also plan to use Twisted
to 'serv' those reports up to the requestor.

Therefore The wisted web server will be used to serve up
the reports,

and twisted Processes that will be pre-spawned using Ampoule
would be the ones that creating the reports.


Some of the reports will be just Excel, some other will be
a more sophisticated web page with bunch of data associated
with it in JSON.  So Django will be used to create a UI
for these report (because I am using Dojo Javascript framework
for the report gui).


Most likely that the serving of the reports will be just one or
two twisted servers, and the 'report workers' will be distributed
across multiple machines.  But in the beginning, or for small
implementations, one server will be doing everything -- it is just
going to be one 'Report Server'.

I still do not have a decision on what to use to 'register' all
the twisted servers on the network, and how to distribute the report
requests to non-busy 'report worker' servers.  Twisted does not
have  a prebuilt solution for this so I have solicited enough input
from the members of the list here to continue my investigation.

I do not plan to use 'twisted defferred' in my viewes -- because
I separate the 'really long-running' tasks out.  In that
sense I will not make the view available at all -- before
the long running task is complete.  After all -- If I want
the user to see something -- I should not expect him to be glued
to the monitor for a couple of hours waiting for something.
Other than that, of course my views are all AJAX -- so they will
be 'asynchronious' from the user prospective.

Since database and file system calls are implemented in C 
even the poorly scalable Python's threading model should be sufficiently
usefull on
multicore system. As long as the file sytem calls and the
DB calls are started from within separate threads (because the GIL
blocking would take effect only when the IO calls return -- and it is
unlikely that they all return at the same time).
But just in case, I personally will still use Ampoule's process model
(it mimics Twisted's thread interface)

My DB is postgres and psycopg2 database access module is specifically
designed for non-blocking multithreaded access.


If yo have a really long running tasks, I suggest you donot
'bind' gui into those -- and instead do what I am doing -- just
submit requests to the database, have background servers process them
and then change the status of the request to 'Done' so that the GUI
can either poll it or the user will see the task is completed.
Because during those tasks you can have user logoff, DB shutdown, etc.

Vlad

On Wed, 14 Jan 2009 20:45:39 -0800, "Alex Clemesha" <clemesha at gmail.com>
said:
> > It ended up pretty painless (sofar)
> 
> Hey Vlad,
> 
> Thanks for posting your solution!
> 
> Care to discuss your use case for mixing Django and Twisted?
> 
> I have considered mixing the two for a project that combines
> a web interface and some XMPP functionality, but I have not yet
> gone down this route ...
> 
> What about using deferreds in your views? (is that even a useful/good
> idea ?)
> and what about blocking model calls, have you consider these scenarios?
> 
> Thanks for any feedback on this interesting topic.
> -Alex
> 
> 
> -- 
> Alex Clemesha
> clemesha.org
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Access all of your messages and folders
                          wherever you are




From gabriel.rossetti at arimaz.com  Fri Jan 16 02:37:54 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 16 Jan 2009 08:37:54 +0100
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
Message-ID: <49703952.20003@arimaz.com>

Hello everyone,

I have written some code using Twisted that spawns threads and another 
using wxPython integration. For some reason when reactor.stop() is 
called they don't always exit. I suspect that the reactor is waiting on 
the threads to finish, which they apparently don't do, and as for the wx 
integration, I don't know, maybe wx's main loop is in a separate thread 
and it would be the same problem. Does anyone know/have an idea or has 
anyone else experienced this?

Thank you,
Gabriel



From reza at getpeer.com  Fri Jan 16 04:08:24 2009
From: reza at getpeer.com (Reza Lotun)
Date: Fri, 16 Jan 2009 09:08:24 +0000
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
In-Reply-To: <49703952.20003@arimaz.com>
References: <49703952.20003@arimaz.com>
Message-ID: <356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>

Hi Gabriel,

I don't quite understand your question. Do you mean to say that you
have written some code with wx and Twisted in an integrated event
loop, and are doing something like reactor.callInThread(someCall), and
when you call reactor.stop the app doesn't exit? AFAIK, any thread
spawning goes through Twisted's internal thread pool and thread
joining should be handled by reactor.stop - I suppose it depends on
what those threads are doing.

Based on my experience with wx and Twisted, I found the following
works quite well:

* Have the reactor run in a seperate thread from wx (making sure to
use reactor.run(installSignalHandlers=False))
* Spawn threads from wx->Twisted in the proper way: use
reactor.callFromThread(reactor.callInThread(someCall))

Hope this helped,
Reza

On Fri, Jan 16, 2009 at 7:37 AM, Gabriel Rossetti
<gabriel.rossetti at arimaz.com> wrote:
> Hello everyone,
>
> I have written some code using Twisted that spawns threads and another using
> wxPython integration. For some reason when reactor.stop() is called they
> don't always exit. I suspect that the reactor is waiting on the threads to
> finish, which they apparently don't do, and as for the wx integration, I
> don't know, maybe wx's main loop is in a separate thread and it would be the
> same problem. Does anyone know/have an idea or has anyone else experienced
> this?
>
> Thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Reza Lotun
Senior Software Engineer
Peer Technologies Limited
reza at getpeer.com



From jean-francois.boeuf at eads.com  Fri Jan 16 07:33:31 2009
From: jean-francois.boeuf at eads.com (Boeuf, Jean-Francois)
Date: Fri, 16 Jan 2009 13:33:31 +0100
Subject: [Twisted-Python] Write into a persistent connection before stopping
Message-ID: <050AD9702349384DADA9CD248005366902459753@SMFIDF806A.main.fr.ds.corp>

 
Hello,

I have an application using twisted in which the web browser opens a
persistent connection when a user logs in (COMET model). I want to write
data into active persistent connections at server stop to notify client to
logout properly.

To do that, I add a system event trigger to the reactor calling the method
that closes session before shutdown when I start the webService. This method
is called when twisted receives a SIGTERM and I can see in twistd.log traces
of writing to the persistent connexion before services stops and connexions
are closed. But the web browser never receives this content and listening
the traffic between server and client with wireshark, I can't see anything
else than the [FIN, ACK] packets that are sent when server ends all
connections (delayed for maximum clarity in the logs).

The same method is called to logout client properly when session expires and
does work fully.

You can see below the twistd.log file when the servers stops.

Thank you for your help.

Regards

Jean-Fran?ois


twistd.log
----------
2009-01-16 13:26:16+0100 [-] Received SIGTERM, shutting down.
2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - [16/Jan/2009:12:26:16 +0000]
"GET /sim/listen?sourceScreen=216 HTTP/1.1" 200 166
"http://peyo:8080/sim?id=216" "Mozilla/5.0 (Windows; U; Windows NT 5.1; fr;
rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16"
2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - [16/Jan/2009:12:26:16 +0000]
"GET /sim/listen?sourceScreen=217 HTTP/1.1" 200 166
"http://peyo:8080/sim?id=217" "Mozilla/5.0 (Windows; U; Windows NT 5.1; fr;
rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16"
2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - [16/Jan/2009:12:26:16 +0000]
"GET /sim/listen?sourceScreen=218 HTTP/1.1" 200 166
"http://peyo:8080/sim?id=218&screen0=216&screen1=217&nbScreen=2"
"Mozilla/5.0 (Windows; U; Windows NT 5.1; fr; rv:1.8.1.16) Gecko/20080702
Firefox/2.0.0.16"
2009-01-16 13:26:25+0100 [-] (Port 8080 Closed)
2009-01-16 13:26:25+0100 [-] Stopping factory
<cockpitServer.userSessionManagement.cockpitSite.CockpitSite object at
0xb6db9e6c>
2009-01-16 13:26:25+0100 [-] (Port 8082 Closed)
2009-01-16 13:26:25+0100 [-] Stopping factory
<cockpitServer.soapService.SoapSite object at 0xb7092d0c>
2009-01-16 13:26:25+0100 [-] Main loop terminated.
2009-01-16 13:26:25+0100 [-] Server Shut Down



From gabriel.rossetti at arimaz.com  Fri Jan 16 07:45:12 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 16 Jan 2009 13:45:12 +0100
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
In-Reply-To: <356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
References: <49703952.20003@arimaz.com>
	<356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
Message-ID: <49708158.6020300@arimaz.com>


Reza Lotun wrote:
> Hi Gabriel,
>
> I don't quite understand your question. Do you mean to say that you
> have written some code with wx and Twisted in an integrated event
> loop, and are doing something like reactor.callInThread(someCall), and
> when you call reactor.stop the app doesn't exit? AFAIK, any thread
> spawning goes through Twisted's internal thread pool and thread
> joining should be handled by reactor.stop - I suppose it depends on
> what those threads are doing.
>
>   

Almost :-) I have 2 programs, one is Twisted + wx using the integrated 
event loop, as described in the Twisted documentation. This program has 
no threads, but I use reactor.callFromThread sometimes from the wx part.

The other program is Twisted with no wx but it uses threads 
(threads.deferToThread).

They both have trouble sometimes closing when reactor.stop() is called, 
not always though.


> Based on my experience with wx and Twisted, I found the following
> works quite well:
>
> * Have the reactor run in a seperate thread from wx (making sure to
> use reactor.run(installSignalHandlers=False))
> * Spawn threads from wx->Twisted in the proper way: use
> reactor.callFromThread(reactor.callInThread(someCall))
>
>   

Hmmm, I'll give that a try later on, does it work better than the 
official way of doing it? Has anyone else tried this?

> Hope this helped,
> Reza
>
>   
Thanks Reza
> On Fri, Jan 16, 2009 at 7:37 AM, Gabriel Rossetti
> <gabriel.rossetti at arimaz.com> wrote:
>   
>> Hello everyone,
>>
>> I have written some code using Twisted that spawns threads and another using
>> wxPython integration. For some reason when reactor.stop() is called they
>> don't always exit. I suspect that the reactor is waiting on the threads to
>> finish, which they apparently don't do, and as for the wx integration, I
>> don't know, maybe wx's main loop is in a separate thread and it would be the
>> same problem. Does anyone know/have an idea or has anyone else experienced
>> this?
>>
>> Thank you,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>     
>
>
>
>   



From waterbug at pangalactic.us  Fri Jan 16 09:06:14 2009
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Fri, 16 Jan 2009 09:06:14 -0500
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
In-Reply-To: <356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
References: <49703952.20003@arimaz.com>
	<356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
Message-ID: <49709456.1020102@pangalactic.us>

Reza Lotun wrote:
> * Have the reactor run in a seperate thread from wx (making sure to
> use reactor.run(installSignalHandlers=False))
> * Spawn threads from wx->Twisted in the proper way: use
> reactor.callFromThread(reactor.callInThread(someCall))

I'd second that -- I've used the pattern described here:
http://netofpeers.com/wiki2/index.php/WxPython_And_Twisted_Example

... to implement a wxpython client for David Ripton's ampchat example
(his uses a pygtk client):
http://ripton.net/hg/ampchat

... you can access my clone of ampchat (with wxpython client) here:
https://pangalactic.us/repo/ampchat/

Steve



From reza at getpeer.com  Fri Jan 16 09:23:01 2009
From: reza at getpeer.com (Reza Lotun)
Date: Fri, 16 Jan 2009 14:23:01 +0000
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
In-Reply-To: <49708158.6020300@arimaz.com>
References: <49703952.20003@arimaz.com>
	<356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
	<49708158.6020300@arimaz.com>
Message-ID: <356e30830901160623j36e3dc34ic2e12780ad5a77ac@mail.gmail.com>

>> * Have the reactor run in a seperate thread from wx (making sure to
>> use reactor.run(installSignalHandlers=False))
>> * Spawn threads from wx->Twisted in the proper way: use
>> reactor.callFromThread(reactor.callInThread(someCall))

A small point, but my code snippet example should have been:

reactor.callFromThread(reactor.callInThread, someCall)

Cheers,
Reza

-- 
Reza Lotun
Senior Software Engineer
Peer Technologies Limited
reza at getpeer.com



From clemesha at gmail.com  Fri Jan 16 16:54:30 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Fri, 16 Jan 2009 13:54:30 -0800
Subject: [Twisted-Python] django with twisted 8.2.x: 2009
In-Reply-To: <1232048364.25572.1295000789@webmail.messagingengine.com>
References: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
	<1231984135.20890.1294853465@webmail.messagingengine.com>
	<d272f0690901142045v93a9709nce1a90df677c80cd@mail.gmail.com>
	<1232048364.25572.1295000789@webmail.messagingengine.com>
Message-ID: <d272f0690901161354x13f0eec4lf730eaac443eccf@mail.gmail.com>

Vlad,

I appreciate you detailed response, thanks.
>
> If yo have a really long running tasks, I suggest you donot
> 'bind' gui into those -- and instead do what I am doing -- just
> submit requests to the database, have background servers process them
> and then change the status of the request to 'Done' so that the GUI
> can either poll it or the user will see the task is completed.
> Because during those tasks you can have user logoff, DB shutdown, etc.
Absolutely - I agree that the pattern of having background server
process handle the
work of long running tasks is the way to go.

Good luck on implementing your app.
-Alex


-- 
Alex Clemesha
clemesha.org



From phil at bubblehouse.org  Fri Jan 16 19:28:06 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 16 Jan 2009 19:28:06 -0500
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <18795.61464.631046.43215@jon.es>
References: <18795.61464.631046.43215@jon.es>
Message-ID: <A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>

On Jan 12, 2009, at 8:36 PM, Terry Jones wrote:
> I think I've finally gotten to the bottom of why exceptions  
> sometimes lose
> their tracebacks when using inlineCallbacks.
[snip]
> We make a failure object, it has a
> traceback, but after passing it to the errback method on a deferred  
> the
> traceback is gone.
>
> This happens because _runCallbacks in defer.py finds no call/errback
> functions to call on the deferred, drops into this code:
>
>        if isinstance(self.result, failure.Failure):
>            self.result.cleanFailure()
>
> which sets the __dict__ on the failure object to the result of the
> failure's __getstate__ method, which sets the traceback to None:
>
>        # added 2003-06-23. See comment above in __init__
>        c['tb'] = None
>
> But the comment in __init__ seems to have been deleted.

The comment was this:

         # added 2003-06-23 by Chris Armstrong. Yes, I actually have a
         # use case where I need this traceback object, and I've made
         # sure that it'll be cleaned up.
         self.tb = tb

presumably referring to the problem with keeping references to  
tracebacks that was a potential pitfall in the Python version of that  
time. That's a non-issue since Python 2.2, though, which is probably  
why the comment got deleted.

Originally all __getstate__ did was stringify the object's state,  
which is probably why cleanFailure calls it directly. It looks to me  
like most of the code from __getstate__ should really be moved into a  
separate method, which would be called from cleanFailure as well as  
__getstate__.

This assumes that __getstate__ would still set c['tb'] to None, but  
that cleanFailure would not. I'm not sure what the repercussions of  
this would be, though. It seems the old problem with keeping  
references to tracebacks is less of an issue now, based on this from  
the current Python docs:

> Note Beginning with Python 2.2, such cycles are automatically  
> reclaimed when garbage collection is enabled and they become  
> unreachable, but it remains more efficient to avoid creating cycles.

I'd appreciate any feedback.

-phil



From terry at jon.es  Fri Jan 16 19:51:16 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 17 Jan 2009 01:51:16 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: Your message at 19:28:06 on Friday, 16 January 2009
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
Message-ID: <18801.11140.7108.766495@jon.es>

Hi Phil

>>>>> "Phil" == Phil Christensen <phil at bubblehouse.org> writes:
Phil> On Jan 12, 2009, at 8:36 PM, Terry Jones wrote:
>> # added 2003-06-23. See comment above in __init__
>> c['tb'] = None
>> 
>> But the comment in __init__ seems to have been deleted.

Phil> The comment was this:

Phil> # added 2003-06-23 by Chris Armstrong. Yes, I actually have a
Phil> # use case where I need this traceback object, and I've made
Phil> # sure that it'll be cleaned up.
Phil> self.tb = tb

I'd seen that comment, and even the same date on it, but assumed there was
more detail in __init__.  I don't know what Chris' use case was, but we
definitely have another one now.

I don't really understand the comment in any case. If someone creates a
Failure instance by explicitly passing in all of exc_value, exc_type, and
exc_tb - with the probable intention that this failure instance is passed
along an errback chain - then I think it's reasonable for them to expect
the Failure will keep the tb and not toss it.

I may well be misunderstanding things, but I don't see how there can be any
question that the self.tb = tb line is desirable.

Phil> Originally all __getstate__ did was stringify the object's state,
Phil> which is probably why cleanFailure calls it directly. It looks to me
Phil> like most of the code from __getstate__ should really be moved into a
Phil> separate method, which would be called from cleanFailure as well as
Phil> __getstate__.

That sounds fine to me.

If I understand you and the code correctly, the only reason for calling
cleanFailure is to reduce the number of references to other objects, thus
clearing the way for garbage collection that would not otherwise happen. Is
that right?

Phil> I'd appreciate any feedback.

And thanks a lot for yours. It would be very useful to get this fixed. I'm
happy to submit a patch, though your suggested change looks like a couple
of minutes' work (just swapping the names of the cleanFailure and
__getstate__ methods gets you almost all the way there).

Terry



From shawn at schurchcomputers.com  Fri Jan 16 20:54:30 2009
From: shawn at schurchcomputers.com (Shawn Church)
Date: Fri, 16 Jan 2009 17:54:30 -0800
Subject: [Twisted-Python] getProcessOutput on windows
Message-ID: <f4a7d4e0901161754q4fe9ca73m927cb0a60857e3b6@mail.gmail.com>

I am developing an application on Linux for deployment on Windows.  I want
to use the getProcessOutput function but seem to remember problems with the
windows reactor and processes last time I tried this (a couple years ago).
I've gone through the active bugs and did not see anything critical to my
usage except maybe #2789,  which is a year old and apparently not going to
be addressed due to Windows limitations.

Is getProcessOutput usable on Windows?  If not any suggestions for an
alternative?  Note that for this application I do not care about output
while the process is running,  I just want to reap the output (or error)
when the process is done.

Thanks for your help,


Shawn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090116/e2d44c0a/attachment.htm 

From radix at twistedmatrix.com  Fri Jan 16 21:31:58 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 16 Jan 2009 21:31:58 -0500
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when 
	using inlineCallbacks
In-Reply-To: <A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
Message-ID: <60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>

On Fri, Jan 16, 2009 at 7:28 PM, Phil Christensen <phil at bubblehouse.org> wrote:
> The comment was this:
>
>        # added 2003-06-23 by Chris Armstrong. Yes, I actually have a
>        # use case where I need this traceback object, and I've made
>        # sure that it'll be cleaned up.
>        self.tb = tb
>
> presumably referring to the problem with keeping references to tracebacks
> that was a potential pitfall in the Python version of that time. That's a
> non-issue since Python 2.2, though, which is probably why the comment got
> deleted.

Keeping references to tracebacks still has many potential pitfalls.
It's a fundamental problem: tracebacks refer to all their frames,
which refer to all their locals; this makes it *really* easy to create
uncollectable cycles if you have any __del__ methods *anywhere*. It's
just not safe to keep the traceback reference in the general case.
Failure needs to work with arbitrary code.

> Originally all __getstate__ did was stringify the object's state, which is
> probably why cleanFailure calls it directly. It looks to me like most of the
> code from __getstate__ should really be moved into a separate method, which
> would be called from cleanFailure as well as __getstate__.

Sure, that would be a slightly better factoring.

> This assumes that __getstate__ would still set c['tb'] to None, but that
> cleanFailure would not. I'm not sure what the repercussions of this would
> be, though. It seems the old problem with keeping references to tracebacks
> is less of an issue now, based on this from the current Python docs:
>
>> Note Beginning with Python 2.2, such cycles are automatically reclaimed
>> when garbage collection is enabled and they become unreachable, but it
>> remains more efficient to avoid creating cycles.
>
> I'd appreciate any feedback.
>
> -phil

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From glyph at divmod.com  Sat Jan 17 02:54:45 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 17 Jan 2009 07:54:45 -0000
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
Message-ID: <20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>


On 02:31 am, radix at twistedmatrix.com wrote:
>On Fri, Jan 16, 2009 at 7:28 PM, Phil Christensen 
><phil at bubblehouse.org> wrote:

>Keeping references to tracebacks still has many potential pitfalls.
>It's a fundamental problem: tracebacks refer to all their frames,
>which refer to all their locals; this makes it *really* easy to create
>uncollectable cycles if you have any __del__ methods *anywhere*. It's
>just not safe to keep the traceback reference in the general case.
>Failure needs to work with arbitrary code.

This used to be pretty much 100% of the time, since Deferred itself used 
to have a __del__, so if you had a Deferred anywhere on the stack you 
were dead.  Nowadays it's a little better than that, but a surprising 
number of objects from elsewhere are uncollectable.
>>Originally all __getstate__ did was stringify the object's state, 
>>which is
>>probably why cleanFailure calls it directly. It looks to me like most 
>>of the
>>code from __getstate__ should really be moved into a separate method, 
>>which
>>would be called from cleanFailure as well as __getstate__.

Nevertheless cleanFailure will still need to remove the traceback, for 
the reasons that Chris mentioned.
>Sure, that would be a slightly better factoring.

Would that help, though?

I don't fully understand the issue, so this is probably wrong in some 
obvious way, but: do we really need to hang on to a real traceback 
object to resolve the issue in question?  It sounds like the real issue 
here is that we don't have a channel to communicate a "cleaned 
traceback" (i.e., failure with stringified frames, but no traceback) 
from one bit of code to another?
>>>Note Beginning with Python 2.2, such cycles are automatically 
>>>reclaimed
>>>when garbage collection is enabled and they become unreachable, but 
>>>it
>>>remains more efficient to avoid creating cycles.

I'm not sure what Python documentation you're quoting here, but that's 
not accurate in the general case.  For example, see 
<http://docs.python.org/library/gc.html#gc.garbage>:

    "Objects that have __del__() methods and are part of a reference 
cycle     cause the entire reference cycle to be uncollectable".
>>I'd appreciate any feedback.

Two bits of feedback:

1. More of this discussion should be on a ticket.  The mailing list is 
good for getting discussions started and figuring out what needs to be 
done, but now we're talking about the technical specifics of resolving a 
specific problem.  Someone (terry?) should take the specifics in the 
email that started this thread and file an appropriate ticket.

2. When filing that ticket, I'd really like a full working example of 
inlineCallbacks not showing a traceback to play with, not just examples 
of portions of the problem.  The obvious example I tried,

    from twisted.internet.defer import inlineCallbacks

    def buggy2():
        raise RuntimeError("Whoops!")

    @inlineCallbacks
    def buggy():
        yield buggy2()

    buggy()

actually prints a nice descriptive traceback.



From glyph at divmod.com  Sat Jan 17 03:18:40 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 17 Jan 2009 08:18:40 -0000
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
Message-ID: <20090117081840.12555.411923736.divmod.xquotient.3620@weber.divmod.com>

On 07:54 am, glyph at divmod.com wrote:
>2. When filing that ticket, I'd really like a full working example of 
>inlineCallbacks not showing a traceback to play with

Just to drive that point home, Terry, I found an interesting error in 
your initial example.  Your example does this:

        info = sys.exc_info()
        f = failure.Failure(*info)

but sys.exc_info() is a tuple of (type, value, traceback), whereas 
Failure takes a tuple of (value, type, traceback).  This is why the 
default behavior of Failure() with no arguments is to capture the 
current exception.

Creating an invalid Failure, as you do here, has some _very_ weird 
ramifications for the low-level error-formatting code in the guts of the 
logging system; the reason the traceback doesn't get logged is due to an 
exception where your ZeroDivisionError instance doesn't have a 
__module__ attribute (since it's in the "type" slot).

If I modify your example to pass the arguments in the correct order, 
like so:

    import sys
    from twisted.internet import defer
    from twisted.python import failure

    d = defer.Deferred()
    try:
        1 / 0
    except Exception:
        exc_type, exc_value, exc_tb = sys.exc_info()
        f = failure.Failure(exc_value, exc_type, exc_tb)
        print "f.tb is %r" % f.tb
        d.errback(f)
        print "f.tb is %r" % f.tb

then I get a nice traceback, like this:

    f.tb is <traceback object at 0xb7c628c4>
    f.tb is None
    Unhandled error in Deferred:
    Traceback (most recent call last):
      File "example.py", line 10, in <module>
        f = failure.Failure(exc_value, exc_type, exc_tb)
    --- <exception caught here> ---
      File "example.py", line 7, in <module>
        1 / 0
    exceptions.ZeroDivisionError: integer division or modulo by zero

which is exactly what Failure is designed to do, i.e. produce useful 
tracebacks once the actual "traceback" instance is gone.

So, we still have some diagnosis to do on why you don't seem to be 
getting useful tracebacks from inlineCallbacks :).  Now, not only can I 
not reproduce the bug, your reasoning doesn't make sense any more 
either.



From terry at jon.es  Sat Jan 17 12:11:09 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 17 Jan 2009 18:11:09 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: Your message at 07:54:45 on Saturday, 17 January 2009
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
Message-ID: <18802.4397.269231.160969@jon.es>

Hi Glyph

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> It sounds like the real issue here is that we don't have a channel
glyph> to communicate a "cleaned traceback" (i.e., failure with stringified
glyph> frames, but no traceback) from one bit of code to another?

Yes, now that I better understand what's going on with cleaning failures, I
think that's completely accurate.

glyph> 1. More of this discussion should be on a ticket.  The mailing list
glyph> is good for getting discussions started and figuring out what needs
glyph> to be done, but now we're talking about the technical specifics of
glyph> resolving a specific problem.  Someone (terry?) should take the
glyph> specifics in the email that started this thread and file an
glyph> appropriate ticket.

OK, I will do that, because I do still think there is a problem. Code below.

glyph> 2. When filing that ticket, I'd really like a full working example
glyph> of inlineCallbacks not showing a traceback to play with, not just
glyph> examples of portions of the problem.  The obvious example I tried,

glyph> from twisted.internet.defer import inlineCallbacks

glyph> def buggy2():
glyph>     raise RuntimeError("Whoops!")

glyph> @inlineCallbacks
glyph> def buggy():
glyph>     yield buggy2()

glyph> buggy()

glyph> actually prints a nice descriptive traceback.

That's because buggy2 is raising an exception, there's no failure coming
back via a deferred into buggy (where its traceback would ultimately be
replaced with None in cleanFailure).

Here's a example:

    from twisted.internet import reactor, defer

    def ok(r): print 'OK', r
    def nok(r): print 'FAILED', r

    def two():
        try:
            1 / 0
        except Exception:
            return defer.fail()

    @defer.inlineCallbacks
    def one():
        yield two()

    def zero():
        one().addCallbacks(ok, nok).addBoth(lambda _: reactor.stop())

    reactor.callLater(0, zero)
    reactor.run()


Because two returns a deferred whose errback has been called, one gets a
result that's a failure and that failure gets cleaned.  The output of
running this example is:

    FAILED [Failure instance: Traceback: <type 'exceptions.ZeroDivisionError'>: integer division or modulo by zero
    /usr/lib/python2.5/site-packages/twisted/internet/posixbase.py:228:mainLoop
    /usr/lib/python2.5/site-packages/twisted/internet/base.py:561:runUntilCurrent
    five.py:17:zero
    /usr/lib/python2.5/site-packages/twisted/internet/defer.py:813:unwindGenerator
    --- <exception caught here> ---
    /usr/lib/python2.5/site-packages/twisted/internet/defer.py:724:_inlineCallbacks
    five.py:14:one
    ]

Showing the exception caught on line 14 (in one) not line 8. If you look at
the deferred that comes back from calling two, its failure result has None
as its tb attribute (via the process described in my original mail).


However if we replace one with a version that doesn't use inlineCallbacks:

    def one():
        return two()

Then the failure has the original traceback:

    FAILED [Failure instance: Traceback: <type 'exceptions.ZeroDivisionError'>: integer division or modulo by zero
    /usr/lib/python2.5/site-packages/twisted/internet/posixbase.py:228:mainLoop
    /usr/lib/python2.5/site-packages/twisted/internet/base.py:561:runUntilCurrent
    five.py:17:zero
    five.py:14:one
    --- <exception caught here> ---
    five.py:8:two
    ]


I'll file a ticket and we can take discussion about what to do into the
tracker.

Thanks!

Terry



From terry at jon.es  Sat Jan 17 12:20:32 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 17 Jan 2009 18:20:32 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: Your message at 08:18:40 on Saturday, 17 January 2009
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
	<20090117081840.12555.411923736.divmod.xquotient.3620@weber.divmod.com>
Message-ID: <18802.4960.309146.265761@jon.es>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:

glyph> Just to drive that point home, Terry, I found an interesting error
glyph> in your initial example.  Your example does this:

glyph> info = sys.exc_info()
glyph> f = failure.Failure(*info)

glyph> but sys.exc_info() is a tuple of (type, value, traceback), whereas
glyph> Failure takes a tuple of (value, type, traceback).

OMG!  I guess I should learn to read.

glyph> So, we still have some diagnosis to do on why you don't seem to be
glyph> getting useful tracebacks from inlineCallbacks :).  Now, not only
glyph> can I not reproduce the bug, your reasoning doesn't make sense any
glyph> more either.

Glyph, sometimes I think you must be the most patient human ever. What a
friendly and gentle correcting paragraph that is. I'm sure you'd make a
great parent.  (And I'm still a child, besides.)  Still, I'd love to have
been a fly on the wall when you realized I had the args reversed :-) I'm a
big fan of expletives.

Thanks a lot. I'm sure that's going to save me many hours of frustration
and confusion.

Terry



From terry at jon.es  Sat Jan 17 15:52:11 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 17 Jan 2009 21:52:11 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: Your message at 07:54:45 on Saturday, 17 January 2009
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
Message-ID: <18802.17659.193302.233779@jon.es>

Hi all.

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> 1. More of this discussion should be on a ticket.

See http://twistedmatrix.com/trac/ticket/3622

Terry



From exarkun at twistedmatrix.com  Sun Jan 18 00:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jan 2009 05:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1232255113.54.1351725487@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090118/2e9e589e/attachment.htm 

From glyph at divmod.com  Sun Jan 18 03:51:45 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 18 Jan 2009 08:51:45 -0000
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <18802.4960.309146.265761@jon.es>
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
	<20090117081840.12555.411923736.divmod.xquotient.3620@weber.divmod.com>
	<18802.4960.309146.265761@jon.es>
Message-ID: <20090118085145.12555.1356338263.divmod.xquotient.3642@weber.divmod.com>

On 17 Jan, 05:20 pm, terry at jon.es wrote:
>>>>>>"glyph" == glyph  <glyph at divmod.com> writes:

>glyph> So, we still have some diagnosis to do on why you don't seem to 
>be
>glyph> getting useful tracebacks from inlineCallbacks :).  Now, not 
>only
>glyph> can I not reproduce the bug, your reasoning doesn't make sense 
>any
>glyph> more either.
>
>Glyph, sometimes I think you must be the most patient human ever. What 
>a
>friendly and gentle correcting paragraph that is. I'm sure you'd make a
>great parent.  (And I'm still a child, besides.)  Still, I'd love to 
>have
>been a fly on the wall when you realized I had the args reversed :-) 
>I'm a
>big fan of expletives.

Heh.  Not at all.  There were some expletives /leading up/ to that 
discovery, and I do often have to exercise... patience... when 
responding to certain internet fora, but not this time.  Your error was 
quite subtle, and it had me fooled for at least an hour before I could 
figure out what was wrong.  I was starting to think you'd discovered 
some insane bug in logging, in Failure, or maybe even Python exception 
handling (for some reason I couldn't get pdb.pm() to help me debug this, 
and I'm still looking into that).
>Thanks a lot. I'm sure that's going to save me many hours of 
>frustration
>and confusion.

No problem.  I'm just glad to see there isn't a bug in Failure here!



From hackingkk at gmail.com  Mon Jan 19 02:15:28 2009
From: hackingkk at gmail.com (Krishnakant)
Date: Mon, 19 Jan 2009 12:45:28 +0530
Subject: [Twisted-Python] strangely getting 8002 can't serialise output when
	returning some list objects
Message-ID: <1232349328.6745.2.camel@krishna-laptop>

hello hackers,
        I am a new user so perhaps I might be bothering with some
question
        already answered.
        I am getting a strange response from a published object with
twisted.
        I find no problem returning lists from a function.
        but when that same function returns records from a postgresql
database
        using psycopg2 (again converted to list ) I get the dredded 8002
can't
        serialise output error.
        I have confirmed that i indeed casted the results into a list
and the
        terminal where I run the twisted published object, I can print
the list
        properly.
        but on the python prompt i use xmlrpclib and when I execute the
function
        from the client, I get that error.
        how is this possible that a list created normally is getting
returned
        and when i create an exact same list this time with a database
record
        with psycopg2, i get error?
        can any one solve the suspence?
        happy hacking.
        Krishnakant.
        





From hackingkk at gmail.com  Mon Jan 19 05:46:04 2009
From: hackingkk at gmail.com (Krishnakant)
Date: Mon, 19 Jan 2009 16:16:04 +0530
Subject: [Twisted-Python] confused on combining different py moduels to make
	a twisted app
Message-ID: <1232361964.6745.45.camel@krishna-laptop>

hello hackers,
I am a new comer to twisted and find it very interesting.
By the way I got my previous problem solved regarding returning lists.

Now I have another confusion.

I have a lot of modules (.py) which I wish to combine and create a
server application in twisted.
for example I have organisation.py which gets and sets organisation
related data in the application.

there is a vendor.py for getting and setting vendor related data and
such other modules related to inventory.
Now, I understand that we can publish one object at a time and listen to
the incoming requests on the given port with the reactor running.
But I want to use these other modules together with the main module.
How can i create a package for such a situation?

I have the __init__.py file in the folder to make a python package,
What I can't understand is how can I register all the classes in the
different files to listen for function calls from the client?
I am confused on managing the entry point so to say.
happy hacking.
Krishnakant.




From spongelavapaul at googlemail.com  Mon Jan 19 06:09:06 2009
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Mon, 19 Jan 2009 11:09:06 +0000
Subject: [Twisted-Python] spawnProcess() works after reactor.stop()
Message-ID: <8EB5C56E-945D-4036-AF6B-29573549B7EA@googlemail.com>

I'm using SelectReactor on Linux for a system that spawns a lot of sub- 
processes. I'm finding that there are some cases where a signal to the  
twistd process doesn't reap the children and I think it's because the  
SIGINT handler defers the shutdown but doesn't prevent spawnProcess()  
from working in the meantime.

What's happening is the signal gets handled by calling stop(). This  
sets a flag and schedules the shutdown event for later.
  - Then Linux signals all the sub-processes.
  - Then my code gets scheduled and spawns a process or 2.
  - The shutdown event runs

The result is that any process spawned after the signal is orphaned.

So, my question is: is this a bug in the reactor (should it check  
self._stopped)?

If it's a bug, I expect it's a bit more general than just processes -  
would it be better to have the select loop check _stopped.

If it's not a bug, would it be possible to add a public accessor for  
the stopped state so application code can decide whether to run or not?

ta,
pt.



From dkarnows at gmail.com  Mon Jan 19 11:59:28 2009
From: dkarnows at gmail.com (David Karnowski)
Date: Mon, 19 Jan 2009 11:59:28 -0500
Subject: [Twisted-Python] Mailing list archive search?
Message-ID: <a399cf060901190859s79a97c25h1d93d3d2e9b9ec64@mail.gmail.com>

Is there a search function available for the mailing list archives? I don't
see a search field
anywhere<http://twistedmatrix.com/pipermail/twisted-python/>.
Am I missing something obvious? The search field on your home page appears
to just search the Tickets, Changesets, & the Wiki, and not the mailing list
archives. I ended just doing it manually through a custom Google
search<http://www.google.com/advanced_search?q=+site:http://twistedmatrix.com/pipermail/twisted-python>(adding
a "site:
http://twistedmatrix.com/pipermail/twisted-python" parameter to the Google
query). If there isn't search functionality for the mailing list archives
it'd be nice to have it added.

regards,
David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090119/432767fd/attachment.htm 

From exarkun at divmod.com  Mon Jan 19 12:07:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Jan 2009 12:07:00 -0500
Subject: [Twisted-Python] Mailing list archive search?
In-Reply-To: <a399cf060901190859s79a97c25h1d93d3d2e9b9ec64@mail.gmail.com>
Message-ID: <20090119170700.9754.1982968642.divmod.quotient.5195@henry.divmod.com>

On Mon, 19 Jan 2009 11:59:28 -0500, David Karnowski <dkarnows at gmail.com> wrote:
>Is there a search function available for the mailing list archives? I don't
>see a search field
>anywhere<http://twistedmatrix.com/pipermail/twisted-python/>.
>Am I missing something obvious? The search field on your home page appears
>to just search the Tickets, Changesets, & the Wiki, and not the mailing list
>archives. I ended just doing it manually through a custom Google
>search<http://www.google.com/advanced_search?q=+site:http://twistedmatrix.com/pipermail/twisted-python>(adding
>a "site:
>http://twistedmatrix.com/pipermail/twisted-python" parameter to the Google
>query). If there isn't search functionality for the mailing list archives
>it'd be nice to have it added.

Okay, I added a search engine.

Jean-Paul



From mg at daimi.au.dk  Mon Jan 19 13:20:00 2009
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 19 Jan 2009 19:20:00 +0100
Subject: [Twisted-Python] Re: Mailing list archive search?
In-Reply-To: <a399cf060901190859s79a97c25h1d93d3d2e9b9ec64@mail.gmail.com>
	(David Karnowski's message of "Mon, 19 Jan 2009 11:59:28 -0500")
References: <a399cf060901190859s79a97c25h1d93d3d2e9b9ec64@mail.gmail.com>
Message-ID: <87ab9n5fan.fsf@hbox.dyndns.org>

"David Karnowski" <dkarnows at gmail.com> writes:

> Is there a search function available for the mailing list archives?

Just use Gmane -- there you can also read and post using a newsreader.
The Twisted lists are here:

  http://dir.gmane.org/index.php?prefix=gmane.comp.python.twisted

and in particular here:

  http://dir.gmane.org/gmane.comp.python.twisted

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 196 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090119/47cb459f/attachment.pgp 

From dkarnows at gmail.com  Mon Jan 19 13:42:14 2009
From: dkarnows at gmail.com (David Karnowski)
Date: Mon, 19 Jan 2009 13:42:14 -0500
Subject: [Twisted-Python] pb: callRemotes execute serially on server-side
Message-ID: <a399cf060901191042q1a1f05fflfc35c99ba05cad2e@mail.gmail.com>

Hi all,

I'm having a client-side pb app call the same server-side function 10
times with this client-side code:

 def process_test(rootObject):
     for i in range(10):
         _logger.debug("Calling remote with arg: %d" % (i))
         deferred = rootObject.callRemote("test_it", i)
         deferred.addCallbacks(success, problem,
callbackKeywords={'i': i}, errbackKeywords={'i': i})

The server-side "remote_test_it" function takes 5 seconds to complete
(per call). I find the following. The first point is what I'd expect,
but points 2 & 3 are not:

1) The above for-loop completes asynchronously, with no blocking. It's
complete in a few-thousand milliseconds.
2) The server-side executes serially. The second client-side call to
"remote_test_it" doesn't start executing "test_it" on the server-side
until after the first call has finished. I'd have thought these 10
calls would occur in parallel (in separate server-side threads). No?
3) None of the callbacks you see in the above client-side for-loop get
executed until ALL 10 callRemotes have finished on the server-side.
e.g. the callRemote for the first loop iteration finishes on the
server-side in 5 seconds, but the associated client-side callback
isn't executed until after 50 seconds (after the 10th loop iteration's
server-side call finishes).

I'm just starting with Twisted. Are points 2 & 3 expected, and is
there a way for me to have them run in parallel rather than serially?

thanks,
David



From exarkun at divmod.com  Mon Jan 19 15:36:11 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Jan 2009 15:36:11 -0500
Subject: [Twisted-Python] pb: callRemotes execute serially on server-side
In-Reply-To: <a399cf060901191042q1a1f05fflfc35c99ba05cad2e@mail.gmail.com>
Message-ID: <20090119203611.9754.1856452398.divmod.quotient.5278@henry.divmod.com>

On Mon, 19 Jan 2009 13:42:14 -0500, David Karnowski <dkarnows at gmail.com> wrote:
>Hi all,
>
>I'm having a client-side pb app call the same server-side function 10
>times with this client-side code:
>
> def process_test(rootObject):
>     for i in range(10):
>         _logger.debug("Calling remote with arg: %d" % (i))
>         deferred = rootObject.callRemote("test_it", i)
>         deferred.addCallbacks(success, problem,
>callbackKeywords={'i': i}, errbackKeywords={'i': i})
>
>The server-side "remote_test_it" function takes 5 seconds to complete
>(per call). I find the following. The first point is what I'd expect,
>but points 2 & 3 are not:
>
>1) The above for-loop completes asynchronously, with no blocking. It's
>complete in a few-thousand milliseconds.
>2) The server-side executes serially. The second client-side call to
>"remote_test_it" doesn't start executing "test_it" on the server-side
>until after the first call has finished. I'd have thought these 10
>calls would occur in parallel (in separate server-side threads). No?
>3) None of the callbacks you see in the above client-side for-loop get
>executed until ALL 10 callRemotes have finished on the server-side.
>e.g. the callRemote for the first loop iteration finishes on the
>server-side in 5 seconds, but the associated client-side callback
>isn't executed until after 50 seconds (after the 10th loop iteration's
>server-side call finishes).
>
>I'm just starting with Twisted. Are points 2 & 3 expected, and is
>there a way for me to have them run in parallel rather than serially?

Twisted is based on "cooperative multitasking" - not preemptive
multithreading.  If you have a task which will take ten seconds
to complete, then you have several options:

  * Just let it take ten seconds.  Since there is no preemption, no
    events will be serviced until the task has finished (ie, for 10
    seconds).  This means you will have serial processing, rather
    than parallel.  This is what you're seeing now.

  * Bring preemptive multithreading into the picture.  Explicitly run
    the task in a thread.  This is probably what you were expecting to
    happen automatically, but it doesn't.  Fortunately, it's quite easy
    to do this - see twisted.internet.threads.deferToThread for the most
    basic (and usually adequate) solution.  You will end up with a Deferred
    which PB knows how to interact with (just return it from your remote_
    method).

  * Convert the implementation of your 10 second task into an asynchronous
    version without using preemptive multithreading.  If your task is CPU
    bound, this may not be suitable (but you might want to consider running
    it in another process rather than another thread, depending on what
    hardware you have available and other concerns).  However, if you're
    waiting for 10 seconds for an HTTP request to complete, then you should
    use some Twisted facility to do the slow network I/O asynchronously
    than blocking on it.  Depending on the network protocol being used, you
    may find a nice high-level asynchronous API somewhere in Twisted, or you
    may need to implement something yourself.

Hope this helps,

Jean-Paul



From Sven-Erik.Tiberg at ltu.se  Tue Jan 20 04:39:17 2009
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Tue, 20 Jan 2009 10:39:17 +0100
Subject: [Twisted-Python] Newbee searching test script for web-servers
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910565C6B2@EMMA.personal.adp.ltu.se>

Hi

Been lurcking this list for some time w/o contributing with only some
questions.

Mostly working with Disrtibuted Interactive 3D simulations and have used
twisted as one solution transfere states between 3D browser nodes.

As I'm using both apache and www.plone.org to store files that builds up
3D applications, I'm curious on how fast a file are delivered from a
web-server.

What I would like to use are a test scripts that accesses files by url
and log access-times.
If I can define multipel files it would be even better.

Will use the same mashine to run the test-script as are hosting both
apache and plone servers.

Sven-Erik Tiberg / ITS
Lulea Univ of Technology
sweden



From wthie at thiengineering.ch  Tue Jan 20 04:50:47 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 20 Jan 2009 10:50:47 +0100
Subject: [Twisted-Python] high server loads on FreeBSD - does kqueue reactor
	help?
In-Reply-To: <20090119203611.9754.1856452398.divmod.quotient.5278@henry.divmod.com>
References: <20090119203611.9754.1856452398.divmod.quotient.5278@henry.divmod.com>
Message-ID: <49759E77.5070309@thiengineering.ch>

Hi all

With a four core, four twisted http server processes (nevow/athena on 
top), dual 100 MBps interfaces, all four cores showing CPU loads of 50% 
  plus, I observe the following degradation in the network traffic with 
tcpdump:

- 'TCP checksum incorrect' raising to almost 25% of all packets observed 
  from one client IP
- TCP Ack'ed lost segment raising to 0.5% of all packets observed

This was with poll reactor on FreeBSD 7.0

- Would it be of any help to switch to kqueue in this case?
- If so, is the documentation about using and patching PyKQueue-1.3 as 
given in

http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.kqreactor.html

correct and up to date, given that on

http://people.freebsd.org/~dwhite/PyKQueue/

the actual version mentioned is 1.2

Thanks in advance, Werner



From terry at jon.es  Tue Jan 20 06:23:26 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 20 Jan 2009 12:23:26 +0100
Subject: [Twisted-Python] Plugins in files with hyphenated names found in
	2.5.0 but not in 8.1.0
Message-ID: <18805.46126.921529.765516@jon.es>

We just upgraded to Twisted 8.1 from 2.5 and discovered that
twisted.plugin.getPlugins no longer finds our plugins.

After much head scratching, Esteve noticed that the plugins were not being
returned because the are in files that have hyphens in their names. There's
no mention of this in the release notes, at least that I can see. Perhaps
the change crept in unnoticed.

I guess this restriction on plugin-containing filenames should either be
documented, or the code should be made to work as it did. I'm happy to open
a ticket - though the text of the ticket would depend on which solution is
preferred.

Terry



From mithrandi at mithrandi.net  Tue Jan 20 07:53:09 2009
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 20 Jan 2009 14:53:09 +0200
Subject: [Twisted-Python] Plugins in files with hyphenated names found
	in 2.5.0 but not in 8.1.0
In-Reply-To: <18805.46126.921529.765516@jon.es>
References: <18805.46126.921529.765516@jon.es>
Message-ID: <20090120125309.GD2417@mithrandi.net>

* Terry Jones <terry at jon.es> [2009-01-20 12:23:26 +0100]:

> We just upgraded to Twisted 8.1 from 2.5 and discovered that
> twisted.plugin.getPlugins no longer finds our plugins.
> 
> After much head scratching, Esteve noticed that the plugins were not being
> returned because the are in files that have hyphens in their names. There's
> no mention of this in the release notes, at least that I can see. Perhaps
> the change crept in unnoticed.

The exact change, I believe, is that plugin source files have to be
valid python modules; that is to say, you have to be able to do:

import foo.plugins.some_plugin

> I guess this restriction on plugin-containing filenames should either be
> documented, or the code should be made to work as it did. I'm happy to open
> a ticket - though the text of the ticket would depend on which solution is
> preferred.

I believe this change was deliberate, so I expect it won't be reverted,
but perhaps someone else can comment further on the design motivations
(and confirm that my explanation is correct).
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090120/1d3c5702/attachment.pgp 

From Sven-Erik.Tiberg at ltu.se  Tue Jan 20 08:37:34 2009
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Tue, 20 Jan 2009 14:37:34 +0100
Subject: [Twisted-Python] Newbee searching test script for web-servers
In-Reply-To: <668D1B8AD729C94DB91D17EC19B8BB910565C6B2@EMMA.personal.adp.ltu.se>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910565C6B5@EMMA.personal.adp.ltu.se>

Sorry for my Q.
After a second thought: on unix > time wget ...... Or Windows with
CygWin the same command.
Pls. Drop my request.
/Sven-Erik 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Sven-Erik
Tiberg
Sent: den 20 januari 2009 10:39
To: Twisted general discussion
Subject: [Twisted-Python] Newbee searching test script for web-servers

Hi

Been lurcking this list for some time w/o contributing with only some
questions.

Mostly working with Disrtibuted Interactive 3D simulations and have used
twisted as one solution transfere states between 3D browser nodes.

As I'm using both apache and www.plone.org to store files that builds up
3D applications, I'm curious on how fast a file are delivered from a
web-server.

What I would like to use are a test scripts that accesses files by url
and log access-times.
If I can define multipel files it would be even better.

Will use the same mashine to run the test-script as are hosting both
apache and plone servers.

Sven-Erik Tiberg / ITS
Lulea Univ of Technology
sweden

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From maarten at treewalker.org  Tue Jan 20 09:16:51 2009
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 20 Jan 2009 15:16:51 +0100
Subject: [Twisted-Python] high server loads on FreeBSD - does kqueue
	reactor help?
Message-ID: <200901201516.51211.maarten@treewalker.org>

On Tuesday 20 January 2009, Werner Thie wrote:

> With a four core, four twisted http server processes (nevow/athena on
> top), dual 100 MBps interfaces, all four cores showing CPU loads of 50%
>   plus, I observe the following degradation in the network traffic with
> tcpdump:
>
> - 'TCP checksum incorrect' raising to almost 25% of all packets observed
>   from one client IP
> - TCP Ack'ed lost segment raising to 0.5% of all packets observed

Incorrect checksums sounds like a hardware problem. Or possibly a driver 
problem if the checksum calculation is done by the CPU instead of the 
network card. In any case it is not possible for user space code like 
Twisted to generate incorrect TCP checksums.

Bye,
		Maarten




From glyph at divmod.com  Tue Jan 20 14:25:59 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 20 Jan 2009 19:25:59 -0000
Subject: [Twisted-Python] Plugins in files with hyphenated names found in
	2.5.0 but not in 8.1.0
In-Reply-To: <20090120125309.GD2417@mithrandi.net>
References: <18805.46126.921529.765516@jon.es>
	<20090120125309.GD2417@mithrandi.net>
Message-ID: <20090120192559.12555.966403788.divmod.xquotient.3660@weber.divmod.com>


On 12:53 pm, mithrandi at mithrandi.net wrote:
>* Terry Jones <terry at jon.es> [2009-01-20 12:23:26 +0100]:

>The exact change, I believe, is that plugin source files have to be
>valid python modules; that is to say, you have to be able to do:
>
>import foo.plugins.some_plugin

This was always the intent.  The change from 2.5 to 8.0 was essentially 
a bugfix; although not an entirely intentional one.  I'm actually 
surprised that dashes in plugin filenames ever worked.  I suspect things 
defined in "some-plugin.py" would have bogus __module__ attributes under 
2.5, and interact oddly with some introspection tools.
>>I guess this restriction on plugin-containing filenames should either 
>>be
>>documented, or the code should be made to work as it did. I'm happy to 
>>open
>>a ticket - though the text of the ticket would depend on which 
>>solution is
>>preferred.
>
>I believe this change was deliberate, so I expect it won't be reverted,
>but perhaps someone else can comment further on the design motivations
>(and confirm that my explanation is correct).

It definitely won't be reverted :).  I don't think it should be 
documented in terms of a filename restriction, either.

In my opinion, the best way to deal with this would be to really improve 
the plugin documentation to make it clear that plugins are not magical 
.py files executed in a weird context, but modules which are imported 
normally and then have their contents inspected.  I've tried writing 
this up a few times, but the difficulty is that there just isn't much to 
write: the full impact of "this is just a module" is hard to 
communicate.



From michael.worsham at morris.com  Tue Jan 20 15:57:38 2009
From: michael.worsham at morris.com (Worsham, Michael)
Date: Tue, 20 Jan 2009 15:57:38 -0500
Subject: [Twisted-Python] Seeking OSS 'point to point' data transfer solution
Message-ID: <B1A201FF94D34E4F8D517B506869354D01DE23C2@MTCEBEW101.internal.morris.com>

I was recommended to look at the Twisted application framework for
replacing a legacy application that relies on RPC portmapper, so here's
my issue and question...

 

Currently, we use an in-house designed application called 'Fileman',
which acts as a combined bi-directional shared library (client) and
server system to transfer data files between other 'Fileman' server
points. The problem is that the Fileman application requires portmapper
under Linux which exposes all TCP ports (i.e. a network security
nightmare). Fileman also has the ability to send data in either ASCII or
binary format and at receiver end -- change directories, modify user id
(uid) and group id (gid) of file once data is received.

---

Here is what Fileman can perform via following functions from client
side code:

struct StatResult   *pFileMan_FileStat(char *host, char *file, int
userid, int groupid);
struct StatResult   *pFileMan_GetDirectoryListing(char *host, char *dir,
int userid, int groupid, int *entries);
int                 iFileMan_PutAsciiFile(char *host, char *file, char
*cpBuf, int bMakeDir, int userid, int groupid);
char                *cpFileMan_GetAsciiFile(char *host, char *file, int
userid, int groupid, int *result);
int                 iFileMan_PutBinaryFile(char *host, char *file, char
*cpBuf, int bMakeDir, int userid, int groupid, int length);
char                *cpFileMan_GetBinaryFile(char *host, char *file, int
userid, int groupid, int *result, int *length);
int                 iFileMan_DeleteFile(char *host, char *file, int
userid, int groupid);
int                 bFileMan_Ping(char *cpHost);
void                vFileMan_ResetStats(void);
int                 iFileMan_GetNumOps();
double              dFileMan_GetSecsSpent();
void                vFileMan_SetTimeout(int iSecs);

Above functions translates to 'over the wire' execution of:
stat
opendir, readdir
fopen, fwrite with any necessary mkdir, chown/chgrp to given group
fopen, read, subject to uid/gid restrictions
fopen, fwrite with any necessary mkdir, chown/chgrp to given group
fopen, read, subject to uid/gid restrictions
unlink subject to uid/gid restrictions
noop response from server
Internal stat change
Internal stat info
Internal stat info
Set network timeout parameters for operation



 

Usage/Syntax from 'Fileman' client:

 

void printUsage()

{

    printf("Usage: \n");

    printf("  \n");

    printf(" fileman Get [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman GetAscii [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman GetBinary [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman Put [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman PutAscii [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman PutBinary [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman Stat [remote_host] [remote_file] [remote_uid]
[remote_gid] \n");

    printf(" fileman Ping [remote_host] \n");

    printf("  \n");

}


---

My question is can the Twisted framework be utilized in a way that can
do actions of sending and receiving data in either ASCII or binary
format, change uid or gid permissions of files once delivered, run as a
client/server client & listener and utilize one (or two) TCP ports for
both sending and listening upon?

Known application replacement requirements:
1) Application must be able to run upon RHEL/CentOS 5.x Linux platform.
2) Application must be able to be locked down to one or two TCP ports
for listening and sending data upon.
3) Application must be able to take command line (CLI) instructions
4) Application must be able to transfer data in ASCII or binary format
(i.e. graphic images)
5) Application must be able to [at receiver end]: change directories,
modify user id (uid) and group id (gid) of file once data is received.

Current solutions we are actively looking at now:
 -- Apache's WebDAV: Uses port 80; Needs apache instance on each server;
cannot change uid or gid permissions of files
 -- Apache's ActiveMQ: Uses channel/queue/broker system; requires
trigger queue and external program for dumping queue data; Needs Java
platform
 -- JBoss Messaging: Suffers same issues as Apache's ActiveMQ; Requires
costly licensing
 -- IBM Websphere MQ: Suffers same issues as Apache's ActiveMQ; Requires
costly licensing

 -- XML-RPC Library for C & C++ -- http://xmlrpc-c.sourceforge.net/


Anyone have any ideas or other plausible solutions for solving this
problem?

 

-- Michael

 

---
Michael Worsham
Sr. System Engineer, IT Architect
Morris Technology Services, IHS Division

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090120/3dde488b/attachment.htm 

From michael.worsham at morris.com  Wed Jan 21 08:50:56 2009
From: michael.worsham at morris.com (Worsham, Michael)
Date: Wed, 21 Jan 2009 08:50:56 -0500
Subject: [Twisted-Python] Seeking OSS 'point to point' data transfer solution
Message-ID: <B1A201FF94D34E4F8D517B506869354D01DE241A@MTCEBEW101.internal.morris.com>

I was recommended to look at the Twisted application framework for
replacing a legacy application that relies on RPC portmapper, so here's
my issue and question...

 

Currently, we use an in-house designed application called 'Fileman',
which acts as a combined bi-directional shared library (client) and
server system to transfer data files between other 'Fileman' server
points. The problem is that the Fileman application requires portmapper
under Linux which exposes all TCP ports (i.e. a network security
nightmare). Fileman also has the ability to send data in either ASCII or
binary format and at receiver end -- change directories, modify user id
(uid) and group id (gid) of file once data is received.

---

Here is what Fileman can perform via following functions from client
side code:

struct StatResult   *pFileMan_FileStat(char *host, char *file, int
userid, int groupid);
struct StatResult   *pFileMan_GetDirectoryListing(char *host, char *dir,
int userid, int groupid, int *entries);
int                 iFileMan_PutAsciiFile(char *host, char *file, char
*cpBuf, int bMakeDir, int userid, int groupid);
char                *cpFileMan_GetAsciiFile(char *host, char *file, int
userid, int groupid, int *result);
int                 iFileMan_PutBinaryFile(char *host, char *file, char
*cpBuf, int bMakeDir, int userid, int groupid, int length);
char                *cpFileMan_GetBinaryFile(char *host, char *file, int
userid, int groupid, int *result, int *length);
int                 iFileMan_DeleteFile(char *host, char *file, int
userid, int groupid);
int                 bFileMan_Ping(char *cpHost);
void                vFileMan_ResetStats(void);
int                 iFileMan_GetNumOps();
double              dFileMan_GetSecsSpent();
void                vFileMan_SetTimeout(int iSecs);

Above functions translates to 'over the wire' execution of:
stat
opendir, readdir
fopen, fwrite with any necessary mkdir, chown/chgrp to given group
fopen, read, subject to uid/gid restrictions
fopen, fwrite with any necessary mkdir, chown/chgrp to given group
fopen, read, subject to uid/gid restrictions
unlink subject to uid/gid restrictions
noop response from server
Internal stat change
Internal stat info
Internal stat info
Set network timeout parameters for operation

 

Usage/Syntax from 'Fileman' client:

 

void printUsage()

{

    printf("Usage: \n");

    printf("  \n");

    printf(" fileman Get [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman GetAscii [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman GetBinary [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman Put [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman PutAscii [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman PutBinary [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman Stat [remote_host] [remote_file] [remote_uid]
[remote_gid] \n");

    printf(" fileman Ping [remote_host] \n");

    printf("  \n");

}


---

My question is can the Twisted framework be utilized in a way that can
do actions of sending and receiving data in either ASCII or binary
format, change uid or gid permissions of files once delivered, run as a
client/server client & listener and utilize one (or two) TCP ports for
both sending and listening upon?

Known application replacement requirements:
1) Application must be able to run upon RHEL/CentOS 5.x Linux platform.
2) Application must be able to be locked down to one or two TCP ports
for listening and sending data upon.
3) Application must be able to take command line (CLI) instructions
4) Application must be able to transfer data in ASCII or binary format
(i.e. graphic images)
5) Application must be able to [at receiver end]: change directories,
modify user id (uid) and group id (gid) of file once data is received.

Current solutions we are actively looking at now:
 -- Apache's WebDAV: Uses port 80; Needs apache instance on each server;
cannot change uid or gid permissions of files
 -- Apache's ActiveMQ: Uses channel/queue/broker system; requires
trigger queue and external program for dumping queue data; Needs Java
platform
 -- JBoss Messaging: Suffers same issues as Apache's ActiveMQ; Requires
costly licensing
 -- IBM Websphere MQ: Suffers same issues as Apache's ActiveMQ; Requires
costly licensing

 -- XML-RPC Library for C & C++ -- http://xmlrpc-c.sourceforge.net/


Anyone have any ideas or other plausible solutions for solving this
problem?

 

-- Michael

 

---
Michael Worsham
Sr. System Engineer, IT Architect
Morris Technology Services, IHS Division

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090121/b1becc80/attachment.htm 

From alessio.pace at gmail.com  Thu Jan 22 03:14:48 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 22 Jan 2009 09:14:48 +0100
Subject: [Twisted-Python] A Java protocol on Twisted?
Message-ID: <84987d20901220014v12a2a70dv6b08aee0e5271baa@mail.gmail.com>

Hi,

recently I was asked if it would be possible to plug a Java protocol in a
Twisted-based P2P library I'm working on.

Up to now this heterogenous languages integration was not a concern, but
apparently the possibility to write an high level protocol in Java for
external developers seem to become very important and would otherwise block
their choice in using the library..

Could anyone, if have any experience or knowledge, let me know if this is
possible and under which conditions? I heard infact that Jython and Twisted
are not working together..

Thanks in advance. Best regards,
--
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090122/6748efec/attachment.htm 

From sakalsiz at gmail.com  Fri Jan 23 04:17:55 2009
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Fri, 23 Jan 2009 11:17:55 +0200
Subject: [Twisted-Python] Possible error on key authentication of twisted
	conch
In-Reply-To: <ea694fbf0901230115j681129a6jd223b39634afd040@mail.gmail.com>
References: <ea694fbf0901230114u765c0e0di6265af485f4732fd@mail.gmail.com>
	<ea694fbf0901230115j681129a6jd223b39634afd040@mail.gmail.com>
Message-ID: <767e5e0d0901230117u519b2963u47bc03aea3674dee@mail.gmail.com>

 Hello,

I have a python script that executes a python code on a remote host using
SSH. It was working perfectly with Twisted 2.5. The method of returning
private and public has changed in userauth.SSHUserAuthClient (Twisted 8.1).

I was using (Twisted 2.5)
------------------------------------------------
def getPublicKey(self):
  return keys.getPublicKeyString(self.keyfile+'.pub')

def getPrivateKey(self):
  return defer.succeed(keys.getPrivateKeyObject(self.keyfile))


Now I am using (Twisted 8.1)
----------------------------------------------------
def getPublicKey(self):
  return keys.Key.fromFile(self.keyfile+'.pub')

def getPrivateKey(self):
  return defer.succeed(keys.Key.fromFile(self.keyfile))

and it doesn't work any more. I have attached the simplified script. Here is
the scenario I am using and the exception I got. Any help is greatly
appreciated.

Scenario
----------------------
I am creating a DSA key using ssh-keygen (in Debian and Ubuntu) with an
empty password

$ ssh-keygen -t dsa

and copy it to my localhost

$ ssh-copy-id -i ~/.ssh/id_dsa localhost

then run the attached script, which tries to execute a python script
remotely using SSH and get the following error

Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line 362,
in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/transport.py",
line 314, in dataReceived
    self.dispatchMessage(messageNum, packet[1:])
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/transport.py",
line 336, in dispatchMessage
    messageNum, payload)
--- <exception caught here> ---
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 51, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 36, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/service.py", line
44, in packetReceived
    return f(packet)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 262, in ssh_USERAUTH_FAILURE
    if method not in self.authenticatedWith and self.tryAuth(method):
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 234, in tryAuth
    return f()
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 338, in auth_publickey
    keyType = getNS(publicKey)[0]
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/common.py", line
51, in getNS
    l, = struct.unpack('!L',s[c:c+4])
exceptions.TypeError: 'Key' object is unsubscriptable

Sincerely

Saki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090123/4a1e8681/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mysshconnection.py
Type: text/x-python
Size: 7644 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090123/4a1e8681/attachment.py 

From sakalsiz at gmail.com  Fri Jan 23 07:55:28 2009
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Fri, 23 Jan 2009 14:55:28 +0200
Subject: [Twisted-Python] Possible error on key authentication of twisted
	conch
In-Reply-To: <767e5e0d0901230117u519b2963u47bc03aea3674dee@mail.gmail.com>
References: <ea694fbf0901230114u765c0e0di6265af485f4732fd@mail.gmail.com>
	<ea694fbf0901230115j681129a6jd223b39634afd040@mail.gmail.com>
	<767e5e0d0901230117u519b2963u47bc03aea3674dee@mail.gmail.com>
Message-ID: <767e5e0d0901230455j6a027fa6kb162df04ad02512a@mail.gmail.com>

Hello,

I have a python script that executes a python code on a remote host using
SSH. It was working perfectly with Twisted 2.5. The method of returning
private and public has changed in userauth.SSHUserAuthClient (Twisted 8.1).

I was using (Twisted 2.5)
------------------------------------------------
def getPublicKey(self):
  return keys.getPublicKeyString(self.keyfile+'.pub')

def getPrivateKey(self):
  return defer.succeed(keys.getPrivateKeyObject(self.keyfile))


Now I am using (Twisted 8.1)
----------------------------------------------------
def getPublicKey(self):
  return keys.Key.fromFile(self.keyfile+'.pub')

def getPrivateKey(self):
  return defer.succeed(keys.Key.fromFile(self.keyfile))

and it doesn't work any more. I have attached the simplified script. Here is
the scenario I am using and the exception I got. Any help is greatly
appreciated.

Scenario
----------------------
I am creating a DSA key using ssh-keygen (in Debian and Ubuntu) with an
empty password

$ ssh-keygen -t dsa

and copy it to my localhost

$ ssh-copy-id -i ~/.ssh/id_dsa localhost

then run the attached script, which tries to execute a python script
remotely using SSH and get the following error

Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line 362,
in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/transport.py",
line 314, in dataReceived
    self.dispatchMessage(messageNum, packet[1:])
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/transport.py",
line 336, in dispatchMessage
    messageNum, payload)
--- <exception caught here> ---
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 51, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 36, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/service.py", line
44, in packetReceived
    return f(packet)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 262, in ssh_USERAUTH_FAILURE
    if method not in self.authenticatedWith and self.tryAuth(method):
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 234, in tryAuth
    return f()
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 338, in auth_publickey
    keyType = getNS(publicKey)[0]
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/common.py", line
51, in getNS
    l, = struct.unpack('!L',s[c:c+4])
exceptions.TypeError: 'Key' object is unsubscriptable

Sincerely

Saki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090123/109940b8/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mysshconnection.py
Type: text/x-python
Size: 7644 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090123/109940b8/attachment.py 

From aixer77 at gmail.com  Fri Jan 23 13:17:32 2009
From: aixer77 at gmail.com (Kangkook Jee)
Date: Fri, 23 Jan 2009 13:17:32 -0500
Subject: [Twisted-Python] Truncated exception message for reactor instance 
Message-ID: <D8BE4B95-11F1-4CB1-91CD-F1626C4F9EEB@gmail.com>

Hi all

I'm a Twisted newbie and I have  a question about exception handling  
of Twisted framework.
Whenever I got some exception raised from somewhere, I got truncated  
exception message like this.

 >>>Traceback (most recent call last):
   File "./fcli.py", line 68, in <module>
     reactor.run()
   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
posixbase.py", line 223, in run
     self.mainLoop()
   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
posixbase.py", line 234, in mainLoop
     self.doIteration(t)
   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
selectreactor.py", line 140, in doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
   File "/opt/local/lib/python2.5/site-packages/twisted/python/ 
log.py", line 51, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File "/opt/local/lib/python2.5/site-packages/twisted/python/ 
log.py", line 36, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File "/opt/local/lib/python2.5/site-packages/twisted/python/ 
context.py", line 59, in callWithContext
     return self.currentContext().callWithContext(ctx

and this make me so hard to find exact cause of the problem.
Can anyone tell me how can I solve this problem?

Thanks a lot for your help in advance!
/Kangkook
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090123/73e37ca6/attachment.htm 

From exarkun at twistedmatrix.com  Sun Jan 25 00:05:22 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jan 2009 05:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1232859922.2.1300573875@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090125/e1dc18f8/attachment.htm 

From Andy at NewWorldElectric.com  Sun Jan 25 09:52:37 2009
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Sun, 25 Jan 2009 09:52:37 -0500
Subject: [Twisted-Python] confused on combining different py moduels to 
	make a twisted app
In-Reply-To: <1232361964.6745.45.camel@krishna-laptop>
References: <1232361964.6745.45.camel@krishna-laptop>
Message-ID: <37d49ed40901250652y324b4d18yd07b0a18d536d7bb@mail.gmail.com>

That's a somewhat general question, but consider this as a solution,
in __init__.py for that package imports one or more classes from each
of the other modules.  Then, within init.py create a root object (a
resource if you're using http) and let it instantiate each of the
classes as sub-objects (children if you're using http).  That would
let you access all the functions and continue exploring, though it's
not a good design in general.

It's hard to be more specific without knowing what sort of design
you'd like to wind up with.  This is one of those questions where the
honest answer is "however you want to do it."  You may want to study
some of the examples to see the kinds of design typically used in
twisted applications and adopt one of those until you get more
comfortable.

Andy Fundinger

On Mon, Jan 19, 2009 at 5:46 AM, Krishnakant <hackingkk at gmail.com> wrote:
> hello hackers,
> I am a new comer to twisted and find it very interesting.
> By the way I got my previous problem solved regarding returning lists.
>
> Now I have another confusion.
>
> I have a lot of modules (.py) which I wish to combine and create a
> server application in twisted.
> for example I have organisation.py which gets and sets organisation
> related data in the application.
>
> there is a vendor.py for getting and setting vendor related data and
> such other modules related to inventory.
> Now, I understand that we can publish one object at a time and listen to
> the incoming requests on the given port with the reactor running.
> But I want to use these other modules together with the main module.
> How can i create a package for such a situation?
>
> I have the __init__.py file in the folder to make a python package,
> What I can't understand is how can I register all the classes in the
> different files to listen for function calls from the client?
> I am confused on managing the entry point so to say.
> happy hacking.
> Krishnakant.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

How could you possibly think typing 'import skynet' was a good idea?
http://xkcd.com/521/



From ntoper at gmail.com  Sun Jan 25 10:54:15 2009
From: ntoper at gmail.com (Nicolas Toper)
Date: Sun, 25 Jan 2009 16:54:15 +0100
Subject: [Twisted-Python] Seeking OSS 'point to point' data transfer 
	solution
In-Reply-To: <B1A201FF94D34E4F8D517B506869354D01DE23C2@MTCEBEW101.internal.morris.com>
References: <B1A201FF94D34E4F8D517B506869354D01DE23C2@MTCEBEW101.internal.morris.com>
Message-ID: <fcbb46050901250754r78d4ea2bp25d8ab7175fb73ce@mail.gmail.com>

Hi,

SCP? FTP?

My company will be releasing soon in OSS an application built on top of
Twisted that in other things perform this

Nicolas

On Tue, Jan 20, 2009 at 9:57 PM, Worsham, Michael <
michael.worsham at morris.com> wrote:

>  I was recommended to look at the Twisted application framework for
> replacing a legacy application that relies on RPC portmapper, so here's my
> issue and question?
>
>
>
> Currently, we use an in-house designed application called 'Fileman', which
> acts as a combined bi-directional shared library (client) and server system
> to transfer data files between other 'Fileman' server points. The problem is
> that the Fileman application requires portmapper under Linux which exposes
> all TCP ports (i.e. a network security nightmare). Fileman also has the
> ability to send data in either ASCII or binary format and at receiver end --
> change directories, modify user id (uid) and group id (gid) of file once
> data is received.
>
> ---
>
> Here is what Fileman can perform via following functions from client side
> code:
>
> struct StatResult   *pFileMan_FileStat(char *host, char *file, int userid,
> int groupid);
> struct StatResult   *pFileMan_GetDirectoryListing(char *host, char *dir,
> int userid, int groupid, int *entries);
> int                 iFileMan_PutAsciiFile(char *host, char *file, char
> *cpBuf, int bMakeDir, int userid, int groupid);
> char                *cpFileMan_GetAsciiFile(char *host, char *file, int
> userid, int groupid, int *result);
> int                 iFileMan_PutBinaryFile(char *host, char *file, char
> *cpBuf, int bMakeDir, int userid, int groupid, int length);
> char                *cpFileMan_GetBinaryFile(char *host, char *file, int
> userid, int groupid, int *result, int *length);
> int                 iFileMan_DeleteFile(char *host, char *file, int userid,
> int groupid);
> int                 bFileMan_Ping(char *cpHost);
> void                vFileMan_ResetStats(void);
> int                 iFileMan_GetNumOps();
> double              dFileMan_GetSecsSpent();
> void                vFileMan_SetTimeout(int iSecs);
>
> Above functions translates to 'over the wire' execution of:
> stat
> opendir, readdir
> fopen, fwrite with any necessary mkdir, chown/chgrp to given group
> fopen, read, subject to uid/gid restrictions
> fopen, fwrite with any necessary mkdir, chown/chgrp to given group
> fopen, read, subject to uid/gid restrictions
> unlink subject to uid/gid restrictions
> noop response from server
> Internal stat change
> Internal stat info
> Internal stat info
> Set network timeout parameters for operation
>
>
>
> Usage/Syntax from 'Fileman' client:
>
>
>
> void printUsage()
>
> {
>
>     printf("Usage: \n");
>
>     printf("  \n");
>
>     printf(" fileman Get [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman GetAscii [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman GetBinary [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman Put [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman PutAscii [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman PutBinary [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman Stat [remote_host] [remote_file] [remote_uid]
> [remote_gid] \n");
>
>     printf(" fileman Ping [remote_host] \n");
>
>     printf("  \n");
>
> }
>
>
> ---
>
> My question is can the Twisted framework be utilized in a way that can do
> actions of sending and receiving data in either ASCII or binary format,
> change uid or gid permissions of files once delivered, run as a
> client/server client & listener and utilize one (or two) TCP ports for both
> sending and listening upon?
>
> Known application replacement requirements:
> 1) Application must be able to run upon RHEL/CentOS 5.x Linux platform.
> 2) Application must be able to be locked down to one or two TCP ports for
> listening and sending data upon.
> 3) Application must be able to take command line (CLI) instructions
> 4) Application must be able to transfer data in ASCII or binary format
> (i.e. graphic images)
> 5) Application must be able to [at receiver end]: change directories,
> modify user id (uid) and group id (gid) of file once data is received.
>
> Current solutions we are actively looking at now:
>  -- Apache's WebDAV: Uses port 80; Needs apache instance on each server;
> cannot change uid or gid permissions of files
>  -- Apache's ActiveMQ: Uses channel/queue/broker system; requires trigger
> queue and external program for dumping queue data; Needs Java platform
>  -- JBoss Messaging: Suffers same issues as Apache's ActiveMQ; Requires
> costly licensing
>  -- IBM Websphere MQ: Suffers same issues as Apache's ActiveMQ; Requires
> costly licensing
>
>  -- XML-RPC Library for C & C++ -- http://xmlrpc-c.sourceforge.net/
>
>
> Anyone have any ideas or other plausible solutions for solving this
> problem?
>
>
>
> -- Michael
>
>
>
> ---
> Michael Worsham
> Sr. System Engineer, IT Architect
> Morris Technology Services, IHS Division
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
A+
Nico
http://www.deviant-abstraction.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090125/432fede7/attachment.htm 

From broder79 at gmail.com  Mon Jan 26 01:06:37 2009
From: broder79 at gmail.com (Adan Broderick)
Date: Mon, 26 Jan 2009 01:06:37 -0500
Subject: [Twisted-Python] Beginner's question about names and callbacks
Message-ID: <ed9894e50901252206p2e5a7fedlc6dc93f95ae648dc@mail.gmail.com>

I'm trying to write a program that will call my own function whenever a
query to a nameserver times out. I have figured out how to run the DNS
server. And I also know how to use filterAnswers(). But how do I catch the
"Failure: twisted.names.error.DNSQueryTimeoutError:" messages by adding code
to the resolver I've constructed?
I've got something like this:

class myResolver(client.Resolver):
    def filterAnswers(self, message):
        print "answer:",message
        [snipped code]

resolver = myResolver(servers=[('10.0.1.1', 53)])
f = server.DNSServerFactory(clients=[resolver])
reactor.listenTCP(4053, f)
reactor.run()

But I don't see where to add an addErrback call. The important thing here is
that I'm not getting the  domains to look up on the command line or from the
user. They are coming in over a socket from, say, dig. So I'm trying to
avoid parsing those queries myself since the full DNS query protocol is
hefty; that is, I want twisted to do the work of the parsing the input.
Thanks for your help.

-Broder
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090126/8a05b0c0/attachment.htm 

From screwtape at froup.com  Mon Jan 26 01:46:20 2009
From: screwtape at froup.com (Tim Allen)
Date: Mon, 26 Jan 2009 17:46:20 +1100
Subject: [Twisted-Python] Beginner's question about names and callbacks
In-Reply-To: <ed9894e50901252206p2e5a7fedlc6dc93f95ae648dc@mail.gmail.com>
References: <ed9894e50901252206p2e5a7fedlc6dc93f95ae648dc@mail.gmail.com>
Message-ID: <20090126064620.GB5868@thristian.org>

On Mon, Jan 26, 2009 at 01:06:37AM -0500, Adan Broderick wrote:
> I'm trying to write a program that will call my own function whenever a
> query to a nameserver times out. I have figured out how to run the DNS
> server. And I also know how to use filterAnswers(). But how do I catch the
> "Failure: twisted.names.error.DNSQueryTimeoutError:" messages by adding code
> to the resolver I've constructed?

I'm not familiar with twisted.names, but looking at the source to
client.Resolver, it seems that something winds up calling _lookup() with
a timeout, which passes it off to the queryUDP() and sets up the basic
result handling. If queryUDP() returns a result, it goes to filterAnswers,
which checks for truncation and re-sends with queryTCP().

Since the actual deferreds that deal with the timeouts are returned from
queryUDP() and queryTCP(), it looks like you should be overriding those
methods and capturing the results instead. Something like this:

class MyResolver(client.Resolver):

    def _handle_query_timeout(self, fail):
	fail.trap(DNSQueryTimeoutError)
	print "Got an error:", fail.getErrorMessage()

    def queryUDP(self, *args, **kwargs):
	d = client.Resolver.queryUDP(self, *args, **kwargs)
	d.addErrback(self._handle_query_timeout)
	return d

    def queryTCP(self, *args, **kwargs):
	d = client.Resolver.queryTCP(self, *args, **kwargs)
	d.addErrback(self._handle_query_timeout)
	return d



From alessio.pace at gmail.com  Mon Jan 26 03:02:56 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Mon, 26 Jan 2009 09:02:56 +0100
Subject: [Twisted-Python] How to write (network) integration tests with
	Twisted?
Message-ID: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>

Hi,

I would like to put in my suite of tests some integration tests which deal
with running some exchange of messages among 2 endpoints (bound locally on
the same machine on 2 different ports).

I noticed (and read afterwards..) that I can't run()/stop() the reactor
multiple times, so I was wondering what's the suggested way to deal with
this kind of situation.
Sorry if perhaps it is documented somewhere on the Twisted doc but apart
from the mention to "Trial" (which I'm not sure responds to my needs) I
haven't found much.

Thanks in advance.
Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090126/f8bebb8f/attachment.htm 

From delroth at gmail.com  Mon Jan 26 05:13:43 2009
From: delroth at gmail.com (Pierre Bourdon)
Date: Mon, 26 Jan 2009 11:13:43 +0100
Subject: [Twisted-Python] About twistedmatrix.com design license
Message-ID: <1ba9eaed0901260213p3c13222eta53a812f367309d@mail.gmail.com>

Hello,

I would like to reuse parts of the twistedmatrix.com design for my own
Trac powered project, and would like to know about its license. I
asked huwshimi as he is the design creator, and he answered me the
Twisted team was the design copyright owner.

Would it be possible to release the design under a free license to
make other people able to reuse [parts of] it, as it is one of the
most complete Trac design I've ever seen while browsing the web ? :)

Thanks in advance,
Delroth.



From drew.smathers at gmail.com  Mon Jan 26 06:09:39 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 26 Jan 2009 19:09:39 +0800
Subject: [Twisted-Python] How to write (network) integration tests with 
	Twisted?
In-Reply-To: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
Message-ID: <368574aa0901260309j7e0bf9edk2cc440ae96d534cb@mail.gmail.com>

On Mon, Jan 26, 2009 at 4:02 PM, Alessio Pace <alessio.pace at gmail.com> wrote:
> Hi,
>
> I would like to put in my suite of tests some integration tests which deal
> with running some exchange of messages among 2 endpoints (bound locally on
> the same machine on 2 different ports).
>

Trial allows you to return a Deferred, which in you case is something
you would call after your endpoints close their connections.  You can
grep through twisted sources though to see how this can be done
without network connections in unit tests - look for test cases using
the module simio.

> I noticed (and read afterwards..) that I can't run()/stop() the reactor
> multiple times, so I was wondering what's the suggested way to deal with
> this kind of situation.

You can close connections and reconnect etc. without "restarting" the
reactor - so I don't see how this is an obstacle.

> Sorry if perhaps it is documented somewhere on the Twisted doc but apart
> from the mention to "Trial" (which I'm not sure responds to my needs) I
> haven't found much.
>

This isn't really documented. But again, unit tests for twisted itself
provide good examples.

-Drew



From alessio.pace at gmail.com  Mon Jan 26 08:00:18 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Mon, 26 Jan 2009 14:00:18 +0100
Subject: [Twisted-Python] How to write (network) integration tests with 
	Twisted?
In-Reply-To: <368574aa0901260309j7e0bf9edk2cc440ae96d534cb@mail.gmail.com>
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
	<368574aa0901260309j7e0bf9edk2cc440ae96d534cb@mail.gmail.com>
Message-ID: <84987d20901260500kb3024efk8e4c54648a655d35@mail.gmail.com>

On Mon, Jan 26, 2009 at 12:09 PM, Drew Smathers <drew.smathers at gmail.com>wrote:

> On Mon, Jan 26, 2009 at 4:02 PM, Alessio Pace <alessio.pace at gmail.com>
> wrote:
> > Hi,
> >
> > I would like to put in my suite of tests some integration tests which
> deal
> > with running some exchange of messages among 2 endpoints (bound locally
> on
> > the same machine on 2 different ports).
> >
>
> Trial allows you to return a Deferred, which in you case is something
> you would call after your endpoints close their connections.  You can
> grep through twisted sources though to see how this can be done
> without network connections in unit tests - look for test cases using
> the module simio.
>
> > I noticed (and read afterwards..) that I can't run()/stop() the reactor
> > multiple times, so I was wondering what's the suggested way to deal with
> > this kind of situation.
>
> You can close connections and reconnect etc. without "restarting" the
> reactor - so I don't see how this is an obstacle.


The point is that I must assure multiple test classes have their test
methods run within an active reactor. So somewhere a reactor.run() has to be
called.. Necessarily, if I want that my tests battery to terminate, a
reactor.stop() must be invoked by somebody, otherwise the main loop remains
running...

The trivial -and not working- idea was to do reactor.run() / reactor.stop()
in setUp() / tearDown() methods.

I believe extening Trial TestCase is the good way to go, but as you are
mentioning, there is not so much documentation... I'm trying to understand
how to do from the UDP test case in Twisted trunk..

Thanks. Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090126/e9d77cab/attachment.htm 

From jean-francois.boeuf at eads.com  Mon Jan 26 10:12:57 2009
From: jean-francois.boeuf at eads.com (Boeuf, Jean-Francois)
Date: Mon, 26 Jan 2009 16:12:57 +0100
Subject: [Twisted-Python] RE: Write into a persistent connection before
	stopping
Message-ID: <050AD9702349384DADA9CD24800536690250879A@SMFIDF806A.main.fr.ds.corp>

Hi,

As i didn't get any answer to my problem i writed a little test code to
reproduce it (I can't divulgate the production code, and then it would be to
much complicated to expose the matter). You can just run it using twistd -y
test.py and then connect to the 8080 tcp port with a browser. As we can see
in the browser the connection is active and periodicaly writed. The logs
indicate that the conections are notifyied before port and connection close,
but the browser never receives the notification.

Thanks for your help

##################test.py begins here#######################
from twisted.application import internet, service
from twisted.internet import reactor
from twisted.web import resource, server, static
import threading

application = service.Application("test")

LISTENING   = list()
CHECK       = threading.Event()

def writeToActiveConnections():
    while not CHECK.isSet():
        for request in LISTENING:
            request.write("active<br />")
        CHECK.wait(2)

def onStop():
    print "ON STOP CALLED"
    CHECK.set()
    for request in LISTENING:
        request.write("<strong>Connection closed because of server
shutdown</strong>")
    print "ALL CONNECTIONS HAVE BEEN NOTIFIED"

def onError(_error, _request):
    print "Connection Closed %s" % _error
    LISTENING.remove(_request)

class ListenRessource(resource.Resource):
    def render_GET(self, _request):
        _request.write("listen connection opened<br />")
        LISTENING.append(_request)
        d = _request.notifyFinish()
        d.addCallback(LISTENING.remove, _request)
        d.addErrback(onError, _request)
        return server.NOT_DONE_YET

class MainRessource(resource.Resource):
    def render_GET(self, _request):
        return """
<html>
    <head></head>
    <body>
        <h1>Test page</h1>
        <iframe src=/listen></iframe>
    </body>
</html>
        """

class TestSite(server.Site):
    def __init__(self):
        root = static.File("/tmp")
        root.putChild("test", MainRessource())
        root.putChild("listen", ListenRessource() )
        server.Site.__init__(self, root)

class TestService(internet.TCPServer):
    def __init__(self):
        internet.TCPServer.__init__(
            self,
            8080,
            TestSite()
        )
        reactor.callInThread(writeToActiveConnections)
        reactor.addSystemEventTrigger('before', 'shutdown', onStop)

TestService().setServiceParent(application)
##################test.py ends here#######################


> -----Message d'origine-----
> De : Boeuf, Jean-Francois 
> Envoy? : vendredi 16 janvier 2009 13:26
> ? : 'twisted-python at twistedmatrix.com'
> Objet : Write into a persistent connection before stopping
> 
>  
> Hello,
> 
> I have an application using twisted in which the web browser 
> opens a persistent connection when a user logs in (COMET 
> model). I want to write data into active persistent 
> connections at server stop to notify client to logout properly.
> 
> To do that, I add a system event trigger to the reactor 
> calling the method that closes session before shutdown when I 
> start the webService. This method is called when twisted 
> receives a SIGTERM and I can see in twistd.log traces of 
> writing to the persistent connexion before services stops and 
> connexions are closed. But the web browser never receives 
> this content and listening the traffic between server and 
> client with wireshark, I can't see anything else than the 
> [FIN, ACK] packets that are sent when server ends all 
> connections (delayed for maximum clarity in the logs).
> 
> The same method is called to logout client properly when 
> session expires and does work fully.
> 
> You can see below the twistd.log file when the servers stops.
> 
> Thank you for your help.
> 
> Regards
> 
> Jean-Fran?ois
> 
> 
> twistd.log
> ----------
> 2009-01-16 13:26:16+0100 [-] Received SIGTERM, shutting down.
> 2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - 
> [16/Jan/2009:12:26:16 +0000] "GET 
> /sim/listen?sourceScreen=216 HTTP/1.1" 200 166 
> "http://peyo:8080/sim?id=216" "Mozilla/5.0 (Windows; U; 
> Windows NT 5.1; fr; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16"
> 2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - 
> [16/Jan/2009:12:26:16 +0000] "GET 
> /sim/listen?sourceScreen=217 HTTP/1.1" 200 166 
> "http://peyo:8080/sim?id=217" "Mozilla/5.0 (Windows; U; 
> Windows NT 5.1; fr; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16"
> 2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - 
> [16/Jan/2009:12:26:16 +0000] "GET 
> /sim/listen?sourceScreen=218 HTTP/1.1" 200 166 
> "http://peyo:8080/sim?id=218&screen0=216&screen1=217&nbScreen=
> 2" "Mozilla/5.0 (Windows; U; Windows NT 5.1; fr; rv:1.8.1.16) 
> Gecko/20080702 Firefox/2.0.0.16"
> 2009-01-16 13:26:25+0100 [-] (Port 8080 Closed)
> 2009-01-16 13:26:25+0100 [-] Stopping factory 
> <cockpitServer.userSessionManagement.cockpitSite.CockpitSite 
> object at 0xb6db9e6c>
> 2009-01-16 13:26:25+0100 [-] (Port 8082 Closed)
> 2009-01-16 13:26:25+0100 [-] Stopping factory 
> <cockpitServer.soapService.SoapSite object at 0xb7092d0c>
> 2009-01-16 13:26:25+0100 [-] Main loop terminated.
> 2009-01-16 13:26:25+0100 [-] Server Shut Down
> 



From exarkun at divmod.com  Mon Jan 26 10:22:45 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 10:22:45 -0500
Subject: [Twisted-Python] RE: Write into a persistent connection before
	stopping
In-Reply-To: <050AD9702349384DADA9CD24800536690250879A@SMFIDF806A.main.fr.ds.corp>
Message-ID: <20090126152245.24460.2109813100.divmod.quotient.2141@henry.divmod.com>

On Mon, 26 Jan 2009 16:12:57 +0100, "Boeuf, Jean-Francois" <jean-francois.boeuf at eads.com> wrote:
>Hi,
>
>As i didn't get any answer to my problem i writed a little test code to
>reproduce it (I can't divulgate the production code, and then it would be to
>much complicated to expose the matter). You can just run it using twistd -y
>test.py and then connect to the 8080 tcp port with a browser. As we can see
>in the browser the connection is active and periodicaly writed. The logs
>indicate that the conections are notifyied before port and connection close,
>but the browser never receives the notification.
>
>Thanks for your help
>
>##################test.py begins here#######################
>from twisted.application import internet, service
>from twisted.internet import reactor
>from twisted.web import resource, server, static
>import threading
>
>application = service.Application("test")
>
>LISTENING   = list()
>CHECK       = threading.Event()
>
>def writeToActiveConnections():
>    while not CHECK.isSet():
>        for request in LISTENING:
>            request.write("active<br />")
>        CHECK.wait(2)
>
>def onStop():
>    print "ON STOP CALLED"
>    CHECK.set()
>    for request in LISTENING:
>        request.write("<strong>Connection closed because of server
>shutdown</strong>")
>    print "ALL CONNECTIONS HAVE BEEN NOTIFIED"
>
>def onError(_error, _request):
>    print "Connection Closed %s" % _error
>    LISTENING.remove(_request)
>
>class ListenRessource(resource.Resource):
>    def render_GET(self, _request):
>        _request.write("listen connection opened<br />")
>        LISTENING.append(_request)
>        d = _request.notifyFinish()
>        d.addCallback(LISTENING.remove, _request)
>        d.addErrback(onError, _request)
>        return server.NOT_DONE_YET
>
>class MainRessource(resource.Resource):
>    def render_GET(self, _request):
>        return """
><html>
>    <head></head>
>    <body>
>        <h1>Test page</h1>
>        <iframe src=/listen></iframe>
>    </body>
></html>
>        """
>
>class TestSite(server.Site):
>    def __init__(self):
>        root = static.File("/tmp")
>        root.putChild("test", MainRessource())
>        root.putChild("listen", ListenRessource() )
>        server.Site.__init__(self, root)
>
>class TestService(internet.TCPServer):
>    def __init__(self):
>        internet.TCPServer.__init__(
>            self,
>            8080,
>            TestSite()
>        )
>        reactor.callInThread(writeToActiveConnections)
>        reactor.addSystemEventTrigger('before', 'shutdown', onStop)
>
>TestService().setServiceParent(application)

Twisted APIs are generally not safe to be invoked from any thread except
for the thread in which the reactor is running.

If you want to run some code periodically, don't do it with threads and
events, do it with reactor.callLater or twisted.internet.task.LoopingCall.

Jean-Paul



From phil at bubblehouse.org  Mon Jan 26 10:25:15 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 26 Jan 2009 10:25:15 -0500
Subject: [Twisted-Python] How to write (network) integration tests with
	Twisted?
In-Reply-To: <84987d20901260500kb3024efk8e4c54648a655d35@mail.gmail.com>
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
	<368574aa0901260309j7e0bf9edk2cc440ae96d534cb@mail.gmail.com>
	<84987d20901260500kb3024efk8e4c54648a655d35@mail.gmail.com>
Message-ID: <5BC91D05-F3AE-4357-9693-15A59A53D311@bubblehouse.org>

On Jan 26, 2009, at 8:00 AM, Alessio Pace wrote:
> The point is that I must assure multiple test classes have their  
> test methods run within an active reactor. So somewhere a  
> reactor.run() has to be called.. Necessarily, if I want that my  
> tests battery to terminate, a reactor.stop() must be invoked by  
> somebody, otherwise the main loop remains running...
>
> The trivial -and not working- idea was to do reactor.run() /  
> reactor.stop() in setUp() / tearDown() methods.

Trial takes care of starting and stopping the reactor for you. Just  
write your tests assuming the reactor is already running. I believe it  
will restart the reactor between every test, so you're always dealing  
with a 'fresh' reactor.

You can also select which reactor to use inside Trial with the -- 
reactor parameter (call `trial --help-reactors` for more). That's  
usually not necessary unless you have a special case that requires a  
particular reactor.

-phil



From exarkun at divmod.com  Mon Jan 26 10:26:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 10:26:19 -0500
Subject: [Twisted-Python] A Java protocol on Twisted?
In-Reply-To: <84987d20901220014v12a2a70dv6b08aee0e5271baa@mail.gmail.com>
Message-ID: <20090126152619.24460.434919123.divmod.quotient.2143@henry.divmod.com>

On Thu, 22 Jan 2009 09:14:48 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>Hi,
>
>recently I was asked if it would be possible to plug a Java protocol in a
>Twisted-based P2P library I'm working on.
>
>Up to now this heterogenous languages integration was not a concern, but
>apparently the possibility to write an high level protocol in Java for
>external developers seem to become very important and would otherwise block
>their choice in using the library..

Can you clarify what you're after?  Does plugging in a "Java protocol" mean
that you have some .java (or .class?) files which implement a protocol and
you want to use that code in your Twisted-based application?

Or does it mean that you need to interoperate with a Java client or server
by implementing in Python the protocol that is used by that Java software?

>Could anyone, if have any experience or knowledge, let me know if this is
>possible and under which conditions? I heard infact that Jython and Twisted
>are not working together..

Twisted indeed does not work on Jython currently.  There are some efforts to
get it working there.  You may want to help out with these. :)

Jean-Paul



From exarkun at divmod.com  Mon Jan 26 10:28:04 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 10:28:04 -0500
Subject: [Twisted-Python] Truncated exception message for reactor instance 
In-Reply-To: <D8BE4B95-11F1-4CB1-91CD-F1626C4F9EEB@gmail.com>
Message-ID: <20090126152804.24460.365337006.divmod.quotient.2144@henry.divmod.com>

On Fri, 23 Jan 2009 13:17:32 -0500, Kangkook Jee <aixer77 at gmail.com> wrote:
>Hi all
>
>I'm a Twisted newbie and I have  a question about exception handling  of 
>Twisted framework.
>Whenever I got some exception raised from somewhere, I got truncated 
>exception message like this.
>
> >>>Traceback (most recent call last):
>   File "./fcli.py", line 68, in <module>
>     reactor.run()
>   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
>posixbase.py", line 223, in run
>     self.mainLoop()
>   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
>posixbase.py", line 234, in mainLoop
>     self.doIteration(t)
>   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
>selectreactor.py", line 140, in doSelect
>     _logrun(selectable, _drdw, selectable, method, dict)
>--- <exception caught here> ---
>   File "/opt/local/lib/python2.5/site-packages/twisted/python/ log.py", line 
>51, in callWithLogger
>     return callWithContext({"system": lp}, func, *args, **kw)
>   File "/opt/local/lib/python2.5/site-packages/twisted/python/ log.py", line 
>36, in callWithContext
>     return context.call({ILogContext: newCtx}, func, *args, **kw)
>   File "/opt/local/lib/python2.5/site-packages/twisted/python/ context.py", 
>line 59, in callWithContext
>     return self.currentContext().callWithContext(ctx
>
>and this make me so hard to find exact cause of the problem.
>Can anyone tell me how can I solve this problem?

This isn't the usual behavior of the exception reporting code in Twisted.
Normally the entire traceback and exception are reported.  Can you post a
minimal example which reproduces this behavior?

Jean-Paul



From jean-francois.boeuf at eads.com  Mon Jan 26 11:07:23 2009
From: jean-francois.boeuf at eads.com (Boeuf, Jean-Francois)
Date: Mon, 26 Jan 2009 17:07:23 +0100
Subject: [Twisted-Python] RE: Write into a persistent connection befor
	estopping
Message-ID: <050AD9702349384DADA9CD2480053669025087F8@SMFIDF806A.main.fr.ds.corp>

 

> -----Message d'origine-----
> De : twisted-python-bounces at twistedmatrix.com 
> [mailto:twisted-python-bounces at twistedmatrix.com] De la part 
> de Jean-Paul Calderone
> Envoy? : lundi 26 janvier 2009 16:23
> ? : Twisted general discussion
> Objet : Re: [Twisted-Python] RE: Write into a persistent 
> connection beforestopping
> 
> On Mon, 26 Jan 2009 16:12:57 +0100, "Boeuf, Jean-Francois" 
> <jean-francois.boeuf at eads.com> wrote:
> >Hi,
> >
> >As i didn't get any answer to my problem i writed a little 
> test code to 
> >reproduce it (I can't divulgate the production code, and 
> then it would 
> >be to much complicated to expose the matter). You can just 
> run it using 
> >twistd -y test.py and then connect to the 8080 tcp port with 
> a browser. 
> >As we can see in the browser the connection is active and 
> periodicaly 
> >writed. The logs indicate that the conections are notifyied 
> before port 
> >and connection close, but the browser never receives the 
> notification.
> >
> >Thanks for your help
> >
> >##################test.py begins here####################### from 
> >twisted.application import internet, service from twisted.internet 
> >import reactor from twisted.web import resource, server, 
> static import 
> >threading
> >
> >application = service.Application("test")
> >
> >LISTENING   = list()
> >CHECK       = threading.Event()
> >
> >def writeToActiveConnections():
> >    while not CHECK.isSet():
> >        for request in LISTENING:
> >            request.write("active<br />")
> >        CHECK.wait(2)
> >
> >def onStop():
> >    print "ON STOP CALLED"
> >    CHECK.set()
> >    for request in LISTENING:
> >        request.write("<strong>Connection closed because of server
> >shutdown</strong>")
> >    print "ALL CONNECTIONS HAVE BEEN NOTIFIED"
> >
> >def onError(_error, _request):
> >    print "Connection Closed %s" % _error
> >    LISTENING.remove(_request)
> >
> >class ListenRessource(resource.Resource):
> >    def render_GET(self, _request):
> >        _request.write("listen connection opened<br />")
> >        LISTENING.append(_request)
> >        d = _request.notifyFinish()
> >        d.addCallback(LISTENING.remove, _request)
> >        d.addErrback(onError, _request)
> >        return server.NOT_DONE_YET
> >
> >class MainRessource(resource.Resource):
> >    def render_GET(self, _request):
> >        return """
> ><html>
> >    <head></head>
> >    <body>
> >        <h1>Test page</h1>
> >        <iframe src=/listen></iframe>
> >    </body>
> ></html>
> >        """
> >
> >class TestSite(server.Site):
> >    def __init__(self):
> >        root = static.File("/tmp")
> >        root.putChild("test", MainRessource())
> >        root.putChild("listen", ListenRessource() )
> >        server.Site.__init__(self, root)
> >
> >class TestService(internet.TCPServer):
> >    def __init__(self):
> >        internet.TCPServer.__init__(
> >            self,
> >            8080,
> >            TestSite()
> >        )
> >        reactor.callInThread(writeToActiveConnections)
> >        reactor.addSystemEventTrigger('before', 'shutdown', onStop)
> >
> >TestService().setServiceParent(application)
> 
> Twisted APIs are generally not safe to be invoked from any 
> thread except for the thread in which the reactor is running.
> 
> If you want to run some code periodically, don't do it with 
> threads and events, do it with reactor.callLater or 
> twisted.internet.task.LoopingCall.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
I'm Ok with that but it is no more than test sample code. The server does
write periodically the connection but doesn't send "<strong>Connection
closed because of server shutdown</strong>" whereas the onStop method is
correctly called!

Jean-Fran?ois



From exarkun at divmod.com  Mon Jan 26 11:15:22 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 11:15:22 -0500
Subject: [Twisted-Python] RE: Write into a persistent connection befor
	estopping
In-Reply-To: <050AD9702349384DADA9CD2480053669025087F8@SMFIDF806A.main.fr.ds.corp>
Message-ID: <20090126161522.24460.1213857364.divmod.quotient.2161@henry.divmod.com>

On Mon, 26 Jan 2009 17:07:23 +0100, "Boeuf, Jean-Francois" <jean-francois.boeuf at eads.com> wrote:
>> [snip]
>>
>I'm Ok with that but it is no more than test sample code. The server does
>write periodically the connection but doesn't send "<strong>Connection
>closed because of server shutdown</strong>" whereas the onStop method is
>correctly called!
>
>Jean-Fran?ois
>

This is probably because the reactor stops before the bytes are actually
sent.  You may need to delay reactor shutdown until you know the bytes
have been sent.  This may mean waiting for the connections to close or
it may mean waiting for a timeout to expire or it may mean something
else - it depends on which precise behavior you want.

"before" "shutdown" hooks can return a Deferred.  The shutdown process
will pause until that Deferred fires.  This lets you make the reactor
wait for whatever extra events you want it to wait for.

Jean-Paul



From mg at daimi.au.dk  Mon Jan 26 12:00:07 2009
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 26 Jan 2009 18:00:07 +0100
Subject: [Twisted-Python] Re: How to write (network) integration tests with
	Twisted?
In-Reply-To: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
	(Alessio Pace's message of "Mon, 26 Jan 2009 09:02:56 +0100")
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
Message-ID: <87ocxuknoo.fsf@hbox.dyndns.org>

Alessio Pace <alessio.pace at gmail.com> writes:

> I would like to put in my suite of tests some integration tests which
> deal with running some exchange of messages among 2 endpoints (bound
> locally on the same machine on 2 different ports).
>
> I noticed (and read afterwards..) that I can't run()/stop() the
> reactor multiple times, so I was wondering what's the suggested way to
> deal with this kind of situation.
>
> Sorry if perhaps it is documented somewhere on the Twisted doc but
> apart from the mention to "Trial" (which I'm not sure responds to my
> needs) I haven't found much.

Trial is what you want, it knows how to deal with the Deferreds you are
likely to return from your tests.

The point is that you can do stuff like this where getPage is a function
which returns a Deferred:

  def test_something(self):
    p = getPage("http://example.com/")
    p.addCallback(self.assertEquals, "<html>...</html>")
    return p

When you return p from the test, the reactor will wait until p has fired
before starting the next test. When p fires, the callbacks are executed
like normal, and here the callsback compares the HTML retrieved with the
expected content. If p does not fire within a given timeout (120 seconds
by default, I think) the reactor will declare the test a failure.

Take a look at the tutorial here:

  http://twistedmatrix.com/trac/browser/branches/trial-tutorial-2443/doc/core/howto/trial.xhtml

Use the link for "Original Format" at the bottom to view as HTML, though
I'm getting an XML parse error from my browser when I do this.

I'm using the twisted.protocols.loopback module for connecting several
parties with a pseudo-transport. This allows the testing code to behave
like in your normal application, but the communication is done with
function calls instead of actual network traffic.


-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 196 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090126/14f50402/attachment.pgp 

From exarkun at divmod.com  Mon Jan 26 18:10:32 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 18:10:32 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: 0
Message-ID: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>

Hello All,

I'd like to organize another Twisted sprint in Cambridge, MA in February.
As with previous sprints, this is an all day event, most likely hosted at
the Divmod office in Porter Square, for Twisted hacking.  The two topics
which have been raised thus far for this sprint are documentation - in
particular, looking at Twisted documentation from a high-level and coming
up with a coherent overall strategy for improving it - and deprecation 
(looking for old, bad APIs in Twisted which we should get rid of).  Of
course, other topics are welcome as well.

Which weekend in February would work best for people interested in attending?

Jean-Paul



From glyph at divmod.com  Mon Jan 26 20:15:32 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jan 2009 01:15:32 -0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
References: 0
	<20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
Message-ID: <20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>

On 26 Jan, 11:10 pm, exarkun at divmod.com wrote:
>I'd like to organize another Twisted sprint in Cambridge, MA in 
>February.

Thanks for putting it together!
>Which weekend in February would work best for people interested in 
>attending?

I'd like to recommend the 7th.



From radix at twistedmatrix.com  Mon Jan 26 20:48:41 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 26 Jan 2009 20:48:41 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
Message-ID: <60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>

On Mon, Jan 26, 2009 at 8:15 PM,  <glyph at divmod.com> wrote:
> On 26 Jan, 11:10 pm, exarkun at divmod.com wrote:
>>
>> I'd like to organize another Twisted sprint in Cambridge, MA in February.
>
> Thanks for putting it together!
>>
>> Which weekend in February would work best for people interested in
>> attending?
>
> I'd like to recommend the 7th.

I'd like to go to the sprint, but for what it's worth, I won't be able
to make it on that weekend. I'm leaving for business the afternoon of
the 7th.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From alessio.pace at gmail.com  Tue Jan 27 01:34:28 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Tue, 27 Jan 2009 07:34:28 +0100
Subject: [Twisted-Python] Re: How to write (network) integration tests 
	with Twisted?
In-Reply-To: <87ocxuknoo.fsf@hbox.dyndns.org>
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
	<87ocxuknoo.fsf@hbox.dyndns.org>
Message-ID: <84987d20901262234k8b492efwb89fdff694bd7703@mail.gmail.com>

Hi all,

thanks your suggestions are very helpfull and I managed to have something
resembling an integration test using Trial :-)

Indeed the HTML version does not work for me either but the document still
remains helpfull. So, is this documentation something going to be published
sooner or later (as I see it's in a branch) ?

Thank you. Regards,
Alessio Pace


On Mon, Jan 26, 2009 at 6:00 PM, Martin Geisler <mg at daimi.au.dk> wrote:

> Alessio Pace <alessio.pace at gmail.com> writes:
>
> > I would like to put in my suite of tests some integration tests which
> > deal with running some exchange of messages among 2 endpoints (bound
> > locally on the same machine on 2 different ports).
> >
> > I noticed (and read afterwards..) that I can't run()/stop() the
> > reactor multiple times, so I was wondering what's the suggested way to
> > deal with this kind of situation.
> >
> > Sorry if perhaps it is documented somewhere on the Twisted doc but
> > apart from the mention to "Trial" (which I'm not sure responds to my
> > needs) I haven't found much.
>
> Trial is what you want, it knows how to deal with the Deferreds you are
> likely to return from your tests.
>
> The point is that you can do stuff like this where getPage is a function
> which returns a Deferred:
>
>  def test_something(self):
>    p = getPage("http://example.com/")
>    p.addCallback(self.assertEquals, "<html>...</html>")
>    return p
>
> When you return p from the test, the reactor will wait until p has fired
> before starting the next test. When p fires, the callbacks are executed
> like normal, and here the callsback compares the HTML retrieved with the
> expected content. If p does not fire within a given timeout (120 seconds
> by default, I think) the reactor will declare the test a failure.
>
> Take a look at the tutorial here:
>
>
> http://twistedmatrix.com/trac/browser/branches/trial-tutorial-2443/doc/core/howto/trial.xhtml
>
> Use the link for "Original Format" at the bottom to view as HTML, though
> I'm getting an XML parse error from my browser when I do this.
>
> I'm using the twisted.protocols.loopback module for connecting several
> parties with a pseudo-transport. This allows the testing code to behave
> like in your normal application, but the communication is done with
> function calls instead of actual network traffic.
>
>
> --
> Martin Geisler
>
> VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
> SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090127/590b4ffd/attachment.htm 

From ceronman at gmail.com  Tue Jan 27 12:12:07 2009
From: ceronman at gmail.com (=?ISO-8859-1?Q?Manuel_Alejandro_Cer=F3n_Estrada?=)
Date: Tue, 27 Jan 2009 12:12:07 -0500
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
Message-ID: <796874fc0901270912v6f21f723p570d9d12260e0b52@mail.gmail.com>

Hello.

This year I'm going to start my graduation project for software
engineering and I want to use Python and Twisted. I want to use Python
3.0 but unfortunately, Twisted doesn't support 3.0 yet and I've read
that this is not exactly a high priority right now. As this is an open
source project, I thought the best thing I can do is to contribute
with the porting. Then I have some questions:

Is someone leading the porting process?
Have you defined a porting strategy?
What is the best way in which I can contribute to this?

Thanks.

Manuel.



From glyph at divmod.com  Tue Jan 27 14:08:15 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jan 2009 19:08:15 -0000
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
In-Reply-To: <796874fc0901270912v6f21f723p570d9d12260e0b52@mail.gmail.com>
References: <796874fc0901270912v6f21f723p570d9d12260e0b52@mail.gmail.com>
Message-ID: <20090127190815.12555.61101946.divmod.xquotient.3862@weber.divmod.com>


On 05:12 pm, ceronman at gmail.com wrote:
>This year I'm going to start my graduation project for software
>engineering and I want to use Python and Twisted. I want to use Python
>3.0 but unfortunately, Twisted doesn't support 3.0 yet and I've read
>that this is not exactly a high priority right now. As this is an open
>source project, I thought the best thing I can do is to contribute
>with the porting. Then I have some questions:

Thanks!  We can always use help, and the 3.0 port is a major project 
which we currently have no manpower for, so we can especially use help 
for that.
>Is someone leading the porting process?

You, now :).
>Have you defined a porting strategy?

Yes.  It's outlined here:

http://stackoverflow.com/questions/172306/how-are-you-planning-on- 
handling-the-migration-to-python-3#214601
>What is the best way in which I can contribute to this?

Twisted's test suite currently emits a _lot_ of warnings.  In order to 
do a python 3 port, we'll need to be getting zero warnings on python 2.6 
with the -3 switch.  If we are even going to be able to _see_ those 
warnings, we need to get down to zero warnings and adopt a zero- 
tolerance policy on new warnings being added.

So the first thing you should do is find, file, and fix as many tickets 
as you can related to warnings in tests; warnings from Twisted itself, 
warnings from the stdlib, warnings from dependencies.

When you're done with that we can talk about what comes next :).



From glyph at divmod.com  Tue Jan 27 14:22:18 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jan 2009 19:22:18 -0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
	<60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
Message-ID: <20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>


On 01:48 am, radix at twistedmatrix.com wrote:
>I'd like to go to the sprint, but for what it's worth, I won't be able
>to make it on that weekend. I'm leaving for business the afternoon of
>the 7th.

Do you have a different recommendation?  How long will your trip take?



From radix at twistedmatrix.com  Tue Jan 27 14:30:02 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 27 Jan 2009 14:30:02 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
	<60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
	<20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>
Message-ID: <60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>

On Tue, Jan 27, 2009 at 2:22 PM,  <glyph at divmod.com> wrote:
>
> On 01:48 am, radix at twistedmatrix.com wrote:
>>
>> I'd like to go to the sprint, but for what it's worth, I won't be able
>> to make it on that weekend. I'm leaving for business the afternoon of
>> the 7th.
>
> Do you have a different recommendation?  How long will your trip take?

I could sprint this weekend. The trip is two weeks, so I could
feasibly also sprint on the Sunday the 22nd (with the chance of
jetlag). Any other weekend is probably good, I'm just unavailable 7th
through 21st.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From itamar at itamarst.org  Tue Jan 27 15:47:22 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 27 Jan 2009 15:47:22 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
	<60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
	<20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>
	<60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>
Message-ID: <1233089242.7991.18.camel@pintsize>

On Tue, 2009-01-27 at 14:30 -0500, Christopher Armstrong wrote:

> I could sprint this weekend. The trip is two weeks, so I could
> feasibly also sprint on the Sunday the 22nd (with the chance of
> jetlag). Any other weekend is probably good, I'm just unavailable 7th
> through 21st.

This Saturday works for me (in so far as I can do anything at all)...




From glyph at divmod.com  Tue Jan 27 17:27:25 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jan 2009 22:27:25 -0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
	<60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
	<20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>
	<60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>
Message-ID: <20090127222725.12555.1656498035.divmod.xquotient.3886@weber.divmod.com>

On 07:30 pm, radix at twistedmatrix.com wrote:
>I could sprint this weekend. The trip is two weeks, so I could
>feasibly also sprint on the Sunday the 22nd (with the chance of
>jetlag). Any other weekend is probably good, I'm just unavailable 7th
>through 21st.

OK then, the 1st could work for me too.



From exarkun at divmod.com  Tue Jan 27 17:45:09 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jan 2009 17:45:09 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090127222725.12555.1656498035.divmod.xquotient.3886@weber.divmod.com>
Message-ID: <20090127224509.24460.1902917997.divmod.quotient.2837@henry.divmod.com>

On Tue, 27 Jan 2009 22:27:25 -0000, glyph at divmod.com wrote:
>On 07:30 pm, radix at twistedmatrix.com wrote:
>>I could sprint this weekend. The trip is two weeks, so I could
>>feasibly also sprint on the Sunday the 22nd (with the chance of
>>jetlag). Any other weekend is probably good, I'm just unavailable 7th
>>through 21st.
>
>OK then, the 1st could work for me too.
>

There is a 50% chance that the 1st won't work for me.

Jean-Paul



From ted.pederson at gmail.com  Tue Jan 27 18:05:46 2009
From: ted.pederson at gmail.com (Ted Pederson)
Date: Tue, 27 Jan 2009 15:05:46 -0800
Subject: [Twisted-Python] multiple log files
Message-ID: <834bba420901271505k1b9adfb8p5b9f1088a6464f0c@mail.gmail.com>

I am new to twisted. If I understand it correctly, the framework doesn't
support multiple log files. I can still use python's logging, but will there
be problems with blocking?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090127/154268e5/attachment.htm 

From exarkun at divmod.com  Tue Jan 27 18:36:21 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jan 2009 18:36:21 -0500
Subject: [Twisted-Python] multiple log files
In-Reply-To: <834bba420901271505k1b9adfb8p5b9f1088a6464f0c@mail.gmail.com>
Message-ID: <20090127233621.24460.1314447734.divmod.quotient.2854@henry.divmod.com>

On Tue, 27 Jan 2009 15:05:46 -0800, Ted Pederson <ted.pederson at gmail.com> wrote:
>I am new to twisted. If I understand it correctly, the framework doesn't
>support multiple log files.

You can implement any logging policy you want.  See the logging documentation
(<http://twistedmatrix.com/projects/core/documentation/howto/logging.html>)
for details on how.

Jean-Paul



From broder79 at gmail.com  Tue Jan 27 20:19:17 2009
From: broder79 at gmail.com (Adan Broderick)
Date: Tue, 27 Jan 2009 20:19:17 -0500
Subject: [Twisted-Python] Beginner's question about names and callbacks
In-Reply-To: <20090126064620.GB5868@thristian.org>
References: <ed9894e50901252206p2e5a7fedlc6dc93f95ae648dc@mail.gmail.com>
	<20090126064620.GB5868@thristian.org>
Message-ID: <ed9894e50901271719p3c858359hb77756bdc8df758c@mail.gmail.com>

Fantastic, that is exactly what I was looking for.  Thank you very much for
helping me.


On Mon, Jan 26, 2009 at 1:46 AM, Tim Allen <screwtape at froup.com> wrote:

> On Mon, Jan 26, 2009 at 01:06:37AM -0500, Adan Broderick wrote:
> > I'm trying to write a program that will call my own function whenever a
> > query to a nameserver times out. I have figured out how to run the DNS
> > server. And I also know how to use filterAnswers(). But how do I catch
> the
> > "Failure: twisted.names.error.DNSQueryTimeoutError:" messages by adding
> code
> > to the resolver I've constructed?
>
> I'm not familiar with twisted.names, but looking at the source to
> client.Resolver, it seems that something winds up calling _lookup() with
> a timeout, which passes it off to the queryUDP() and sets up the basic
> result handling. If queryUDP() returns a result, it goes to filterAnswers,
> which checks for truncation and re-sends with queryTCP().
>
> Since the actual deferreds that deal with the timeouts are returned from
> queryUDP() and queryTCP(), it looks like you should be overriding those
> methods and capturing the results instead. Something like this:
>
> class MyResolver(client.Resolver):
>
>    def _handle_query_timeout(self, fail):
>        fail.trap(DNSQueryTimeoutError)
>        print "Got an error:", fail.getErrorMessage()
>
>    def queryUDP(self, *args, **kwargs):
>        d = client.Resolver.queryUDP(self, *args, **kwargs)
>        d.addErrback(self._handle_query_timeout)
>        return d
>
>    def queryTCP(self, *args, **kwargs):
>        d = client.Resolver.queryTCP(self, *args, **kwargs)
>        d.addErrback(self._handle_query_timeout)
>        return d
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090127/9a596a95/attachment.htm 

From exarkun at divmod.com  Tue Jan 27 20:40:58 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jan 2009 20:40:58 -0500
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
In-Reply-To: <20090127190815.12555.61101946.divmod.xquotient.3862@weber.divmod.com>
Message-ID: <20090128014058.24460.2001823193.divmod.quotient.2913@henry.divmod.com>

On Tue, 27 Jan 2009 19:08:15 -0000, glyph at divmod.com wrote:
>
>On 05:12 pm, ceronman at gmail.com wrote:
>>This year I'm going to start my graduation project for software
>>engineering and I want to use Python and Twisted. I want to use Python
>>3.0 but unfortunately, Twisted doesn't support 3.0 yet and I've read
>>that this is not exactly a high priority right now. As this is an open
>>source project, I thought the best thing I can do is to contribute
>>with the porting. Then I have some questions:
>
>Thanks!  We can always use help, and the 3.0 port is a major project which 
>we currently have no manpower for, so we can especially use help for that.
>>Is someone leading the porting process?
>
>You, now :).
>>Have you defined a porting strategy?
>
>Yes.  It's outlined here:
>
>http://stackoverflow.com/questions/172306/how-are-you-planning-on- handling- 
>the-migration-to-python-3#214601
>>What is the best way in which I can contribute to this?
>
>Twisted's test suite currently emits a _lot_ of warnings.  In order to do a 
>python 3 port, we'll need to be getting zero warnings on python 2.6 with the 
>-3 switch.  If we are even going to be able to _see_ those warnings, we need 
>to get down to zero warnings and adopt a zero- tolerance policy on new 
>warnings being added.
>
>So the first thing you should do is find, file, and fix as many tickets as 
>you can related to warnings in tests; warnings from Twisted itself, warnings 
>from the stdlib, warnings from dependencies.

To expand on this, you can find the warnings which are currently emitted from
the Twisted test suite by looking at one of the build result pages on our
buildbot.  Our buildbot's website is at <http://buildbot.twistedmatrix.com/>.
Warnings have a special page, linked from each build result page.  For
example, <http://buildbot.twistedmatrix.com/builders/debian-py2.3-select/builds/258/steps/trial/logs/warnings>.

There is also a builder which runs using the -3 warning option: 
<http://buildbot.twistedmatrix.com/builders/python-3k-warnings>.

And another which runs against Python 3.0: <http://buildbot.twistedmatrix.com/builders/ubuntu64-py3.0-select>.

The general Twisted development process is described on the Divmod wiki:
<http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem>.

You can find more information on <http://twistedmatrix.com/trac/wiki/TwistedDevelopment>.

Jean-Paul



From mpyle101+twisted at gmail.com  Tue Jan 27 21:37:39 2009
From: mpyle101+twisted at gmail.com (Michael Pyle)
Date: Tue, 27 Jan 2009 18:37:39 -0800
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
In-Reply-To: <20090128014058.24460.2001823193.divmod.quotient.2913@henry.divmod.com>
References: <20090127190815.12555.61101946.divmod.xquotient.3862@weber.divmod.com>
	<20090128014058.24460.2001823193.divmod.quotient.2913@henry.divmod.com>
Message-ID: <f0d1ca940901271837x55ef6dfdq28de9bf34e85e6f4@mail.gmail.com>

On Tue, Jan 27, 2009 at 5:40 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Tue, 27 Jan 2009 19:08:15 -0000, glyph at divmod.com wrote:
>
>>
>> On 05:12 pm, ceronman at gmail.com wrote:
>>
>>> This year I'm going to start my graduation project for software
>>> engineering and I want to use Python and Twisted. I want to use Python
>>> 3.0 but unfortunately, Twisted doesn't support 3.0 yet and I've read
>>> that this is not exactly a high priority right now. As this is an open
>>> source project, I thought the best thing I can do is to contribute
>>> with the porting. Then I have some questions:
>>>
>>
>> Thanks!  We can always use help, and the 3.0 port is a major project which
>> we currently have no manpower for, so we can especially use help for that.
>>
>>> Is someone leading the porting process?
>>>
>>
>> You, now :).
>>
>>> Have you defined a porting strategy?
>>>
>>
>> Yes.  It's outlined here:
>>
>> http://stackoverflow.com/questions/172306/how-are-you-planning-on-handling- the-migration-to-python-3#214601
>>
>>> What is the best way in which I can contribute to this?
>>>
>>
>> Twisted's test suite currently emits a _lot_ of warnings.  In order to do
>> a python 3 port, we'll need to be getting zero warnings on python 2.6 with
>> the -3 switch.  If we are even going to be able to _see_ those warnings, we
>> need to get down to zero warnings and adopt a zero- tolerance policy on new
>> warnings being added.
>>
>> So the first thing you should do is find, file, and fix as many tickets as
>> you can related to warnings in tests; warnings from Twisted itself, warnings
>> from the stdlib, warnings from dependencies.
>>
>
Is there a way you prefer to see the tickets entered? Looking at the
buildbot log for build 45 it seems like there's a few different ways to
slice and dice things depending on how granular you want the tickets. You
could do it by "fix deprecated calls" or narrow it down to "fix
DeprecationWarning for xxx" or break it up by module or even on a file by
file or call by call basis (granted the latter seems like overkill for a
porting effort).

--mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090127/97187456/attachment.htm 

From exarkun at divmod.com  Tue Jan 27 21:54:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jan 2009 21:54:00 -0500
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
In-Reply-To: <f0d1ca940901271837x55ef6dfdq28de9bf34e85e6f4@mail.gmail.com>
Message-ID: <20090128025400.24460.1984552729.divmod.quotient.2945@henry.divmod.com>

On Tue, 27 Jan 2009 18:37:39 -0800, Michael Pyle <mpyle101+twisted at gmail.com> wrote:
>> On Tue, 27 Jan 2009 19:08:15 -0000, glyph at divmod.com wrote:
>>> [snip]
>>>
>>> So the first thing you should do is find, file, and fix as many tickets as
>>> you can related to warnings in tests; warnings from Twisted itself, warnings
>>> from the stdlib, warnings from dependencies.
>>>
>>
>Is there a way you prefer to see the tickets entered? Looking at the
>buildbot log for build 45 it seems like there's a few different ways to
>slice and dice things depending on how granular you want the tickets. You
>could do it by "fix deprecated calls" or narrow it down to "fix
>DeprecationWarning for xxx" or break it up by module or even on a file by
>file or call by call basis (granted the latter seems like overkill for a
>porting effort).
>

You'll find some tickets already exist in the tracker.  For example,

  http://twistedmatrix.com/trac/ticket/3493
  http://twistedmatrix.com/trac/ticket/3431
  http://twistedmatrix.com/trac/ticket/3424
  http://twistedmatrix.com/trac/ticket/3231
  http://twistedmatrix.com/trac/ticket/3153

For other issues, I would lean towards filing a ticket per test_*.py file.
However, this is just a general rule of thumb.  You may find it easy to fix
several test_*.py files at once with one set of changes, or you may find
that the fixes for one set of deprecations from a single test file are
totally unrelated to another set of fixes for other deprecations (cases in
which I would file just one ticket or multiple tickets, respectively).  So
feel free to exercise your own judgment.  We won't bite your head off if
we disagree with your decision, but we might ask you to split one patch
into two or more pieces.

One thing that's probably worth watching out for is that there are a couple
large, old Conch branches outstanding.  Changes to Conch's test suite may
conflict with these branches.  I wouldn't let this stop you from fixing
things in Conch, but it would probably be best to try to coordinate with
Paul Swartz before digging in too deeply.

Jean-Paul



From huffman at tokyo.email.ne.jp  Wed Jan 28 03:46:27 2009
From: huffman at tokyo.email.ne.jp (Theron D. Huffman)
Date: Wed, 28 Jan 2009 17:46:27 +0900
Subject: [Twisted-Python] Which twisted should I install?
Message-ID: <911E63F103BF4319A5C68DE5C45C5A75@Podcaster>

On the Twisted website there is an 8.2.0 for Python 2.6 on Windows, and an 8.2.0 for Python 2.5 on OS X 10.5. 

But I got OS X 10.5 running Python 2.6 from MacPorts. Which Twisted should I download and install?

Regards,
Tokyo Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090128/4524fbb9/attachment.htm 

From ntoper at gmail.com  Wed Jan 28 03:57:07 2009
From: ntoper at gmail.com (Nicolas Toper)
Date: Wed, 28 Jan 2009 09:57:07 +0100
Subject: [Twisted-Python] Which twisted should I install?
In-Reply-To: <911E63F103BF4319A5C68DE5C45C5A75@Podcaster>
References: <911E63F103BF4319A5C68DE5C45C5A75@Podcaster>
Message-ID: <fcbb46050901280057x58b257aenc70c4acee6a2a0bc@mail.gmail.com>

Hi,
there is a dmg already  for MacOS Why don't you install it?

On Wed, Jan 28, 2009 at 9:46 AM, Theron D. Huffman <
huffman at tokyo.email.ne.jp> wrote:

>  On the Twisted website there is an 8.2.0 for Python 2.6 on Windows, and
> an 8.2.0 for Python 2.5 on OS X 10.5.
>
> But I got OS X 10.5 running Python 2.6 from MacPorts. Which Twisted should
> I download and install?
>
> Regards,
> Tokyo Dan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
A+
Nico
http://www.deviant-abstraction.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090128/0d733866/attachment.htm 

From hackingkk at gmail.com  Wed Jan 28 06:20:10 2009
From: hackingkk at gmail.com (Krishnakant)
Date: Wed, 28 Jan 2009 16:50:10 +0530
Subject: [Twisted-Python] getting "can't serialize output " error while
	returning numeric data from postgresql.
In-Reply-To: <fcbb46050901280057x58b257aenc70c4acee6a2a0bc@mail.gmail.com>
References: <911E63F103BF4319A5C68DE5C45C5A75@Podcaster>
	<fcbb46050901280057x58b257aenc70c4acee6a2a0bc@mail.gmail.com>
Message-ID: <1233141610.23264.7.camel@krishna-laptop>

hello all,
I think this must be a simple thing and many of you might be knowing the
solution,
But I am new to twisted and for me this is a big challenge.
I am connecting my xmlrpc based twisted application (server ) to a
postgresql database using python-psycopg2
I am returning a result set from a function and the resultset is as a
list which cursor.fetchone() returns.
now  my function called xmlrpc_getDetails(product_code):
   #code to execute query on cursur 
   return resultset

All works well untill i encounter a field of type numeric which has
decimal values.

I et the can't serialize output error.
I believe I have to register some kind of a system to cast the data in a
way that twisted understands?
how can I do this?
happy hacking.
Krishnakant.





From exarkun at divmod.com  Wed Jan 28 08:49:06 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 28 Jan 2009 08:49:06 -0500
Subject: [Twisted-Python] getting "can't serialize output " error while
	returning numeric data from postgresql.
In-Reply-To: <1233141610.23264.7.camel@krishna-laptop>
Message-ID: <20090128134906.24460.1239051899.divmod.quotient.3214@henry.divmod.com>

On Wed, 28 Jan 2009 16:50:10 +0530, Krishnakant <hackingkk at gmail.com> wrote:
>hello all,
>I think this must be a simple thing and many of you might be knowing the
>solution,
>But I am new to twisted and for me this is a big challenge.
>I am connecting my xmlrpc based twisted application (server ) to a
>postgresql database using python-psycopg2
>I am returning a result set from a function and the resultset is as a
>list which cursor.fetchone() returns.
>now  my function called xmlrpc_getDetails(product_code):
>   #code to execute query on cursur
>   return resultset
>
>All works well untill i encounter a field of type numeric which has
>decimal values.
>
>I et the can't serialize output error.
>I believe I have to register some kind of a system to cast the data in a
>way that twisted understands?
>how can I do this?

Twisted's XML-RPC support is based on the stdlib module `xmlrpclib?.
See http://docs.python.org/library/xmlrpclib.html for details.

Jean-Paul



From huffman at tokyo.email.ne.jp  Wed Jan 28 18:28:10 2009
From: huffman at tokyo.email.ne.jp (Theron D. Huffman)
Date: Thu, 29 Jan 2009 08:28:10 +0900
Subject: [Twisted-Python] "there is a dmg already for MacOS Why don't you
	install it?"
Message-ID: <FBA60A3F9FF5485C960C30B0736AB1DF@Podcaster>

"there is a dmg already  for MacOS Why don't you install it?"

Because the dmg for MacOS states that it is for Python 2.5. I'm running Python 2.6 that I installed from MacPorts.


Kindest Regards,
Dan Huffman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090129/79754ce6/attachment.htm 

From huffman at tokyo.email.ne.jp  Wed Jan 28 18:29:23 2009
From: huffman at tokyo.email.ne.jp (Theron D. Huffman)
Date: Thu, 29 Jan 2009 08:29:23 +0900
Subject: [Twisted-Python] "there is a dmg already for MacOS Why don't you
	install it?"
Message-ID: <5F3DEBE3741B4ACFB67BF75D2A0E00E9@Podcaster>

"there is a dmg already  for MacOS Why don't you install it?"

Because the dmg for MacOS states that it is for Python 2.5. I'm running 
Python 2.6 that I installed from MacPorts.


Kindest Regards,
Dan Huffman 




From huffman at tokyo.email.ne.jp  Wed Jan 28 18:35:26 2009
From: huffman at tokyo.email.ne.jp (Theron D. Huffman)
Date: Thu, 29 Jan 2009 08:35:26 +0900
Subject: [Twisted-Python] "there is a dmg already for MacOS Why don't you
	install it?"
Message-ID: <7B6841D90E63401B9375019803CF8A4D@Podcaster>

"there is a dmg already  for MacOS Why don't you install it?"

Because the dmg for MacOS states that it is for Python 2.5. I'm running 
Python 2.6 that I installed from MacPorts.

Kindest Regards,
Dan Huffman




From alessio.pace at gmail.com  Thu Jan 29 04:53:30 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 29 Jan 2009 10:53:30 +0100
Subject: [Twisted-Python] A Java protocol on Twisted?
In-Reply-To: <20090126152619.24460.434919123.divmod.quotient.2143@henry.divmod.com>
References: <84987d20901220014v12a2a70dv6b08aee0e5271baa@mail.gmail.com>
	<20090126152619.24460.434919123.divmod.quotient.2143@henry.divmod.com>
Message-ID: <84987d20901290153p63b5d994gd03d87fbe312aa0@mail.gmail.com>

Hi,

first of all sorry for my delayed answer.


On Mon, Jan 26, 2009 at 4:26 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Thu, 22 Jan 2009 09:14:48 +0100, Alessio Pace <alessio.pace at gmail.com>
> wrote:
>
>> Hi,
>>
>> recently I was asked if it would be possible to plug a Java protocol in a
>> Twisted-based P2P library I'm working on.
>>
>> Up to now this heterogenous languages integration was not a concern, but
>> apparently the possibility to write an high level protocol in Java for
>> external developers seem to become very important and would otherwise
>> block
>> their choice in using the library..
>>
>
> Can you clarify what you're after?  Does plugging in a "Java protocol" mean
> that you have some .java (or .class?) files which implement a protocol and
> you want to use that code in your Twisted-based application?
>
> Or does it mean that you need to interoperate with a Java client or server
> by implementing in Python the protocol that is used by that Java software?



Yes, this is closer to my need. There is the Python+Twisted library that
takes care of networking communication. Then on top of this people may want
to write their higher level application with their Java protocol which may
or may not have to directly use networking sockets used internally by the
Python/Twisted layer.


|  Java protocols |    | Python protocols |
         |  Python library  |
         |       twisted       |
          <-- networking -->


>
>  Could anyone, if have any experience or knowledge, let me know if this is
>> possible and under which conditions? I heard infact that Jython and
>> Twisted
>> are not working together..
>>
>
> Twisted indeed does not work on Jython currently.  There are some efforts
> to
> get it working there.  You may want to help out with these. :)


Yes, I would like to, but it depends if I get the possibility to allocate
time on it... Unless the Java integration becomes blocking for us, we will
continue just with pure Python and Twisted.

Thanks,
Alessio Pace.



>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090129/54e8afee/attachment.htm 

From alessio.pace at gmail.com  Thu Jan 29 07:42:25 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 29 Jan 2009 13:42:25 +0100
Subject: [Twisted-Python] Having different tests run with Trial using
	different reactor implementations ?
Message-ID: <84987d20901290442s2d834692ne35dee61538bf36@mail.gmail.com>

Hi,

I would like to know if (but I heard it is..) and how it is possible to run
with Trial a test suite where some tests use a reactor implementation and
some instead another one..

In fact I have some tests extending Trial's TestCase (hence expecting to use
the selector reactor) while some others use the "plain" TestCase and in the
setUp() / tearDown()  do install/uninstall of the custom reactor I wrote.

Running both tests causes using the wrong reactor when another one is
expected, so I was thinking about migrating my custom reactor based tests to
Trial.

Any suggestions? Thanks again in advance.

Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090129/9e832902/attachment.htm 

From dr.marc.byrd at gmail.com  Thu Jan 29 13:08:29 2009
From: dr.marc.byrd at gmail.com (Marc Byrd)
Date: Thu, 29 Jan 2009 10:08:29 -0800
Subject: [Twisted-Python] Commissiion / Bounty for Twisted CloudCache
Message-ID: <a33934630901291008j6591a4abxfe5fbc558fabe89d@mail.gmail.com>

Hello,

We're building out a service, launching in the next 30 days, that provides
low-latency elastic caching in the AWS environment - more info at
http://cloudscape.ws .  The service is purely ReSTful and uses an
authentication approach which is consistent with other AWS services
(signature is HMAC hash of service+operation+timestamp with secret-key).

We would like to commission the development of an open source Twisted module
that takes advantage of CloudCache.  It should be as close as possible to
the twisted memcache interface, perhaps requiring only a change in the
constructor.

I can provide basic python test cases for all API methods.

BTW [OT], would also be interested in non-twisted replacements of other
popular memcached libs, similar constructor-only diffs in the interface.

If interested, please reply with qualifications and experience with twisted
and memcached, and a ballpark of what kind of commission / bounty you think
would be fair.

Thanks!


Marc
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090129/326fbc5b/attachment.htm 

From tom.cocagne at gmail.com  Thu Jan 29 15:21:36 2009
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Thu, 29 Jan 2009 12:21:36 -0800
Subject: [Twisted-Python] New C++ implementation of Deferreds
Message-ID: <198edda90901291221q4ceb689ex4ec9beb01d28f0e9@mail.gmail.com>

    The question of whether anyone had developed a C++ implementation of
Twisted's Deferreds has cropped up on this list several times over the last
few years. To date, I've unfortunately been forced to sit on an
implementation I developed several years ago for the Department of Defense.
Due to some rather draconian IP & security policies, it's taken an
exceptionally long time to get the code released. I'm happy to announce
though that I finally managed to obtain release authorization for it and
that the code now has a new home on Sourceforge.

    As C++ has differing language features, the API of the C++ deferreds
isn't identical to those of Twisted's but most of the key concepts mapped
over pretty well. Additionally, this implementation has a few design
extensions to facilitate the development multi-threaded C++ applications.
The multi-threaded aspect grew almost accidentally out of the original
single-threaded design but, since then, it has proven to be extraordinarily
useful for simplifying several multi-threaded applications I've worked on.

    The implementation of the library is, however, rather complex. In large
part, this is due to the effort required to work around the inherent
inflexibility of the C++ type system. The Function, Bind, and
Meta-Programming libraries found in Boost have gone a long way towards
simplify the implementation though (my original Loki-based attempt was
almost incomprehensible even to me ;-). The library is fully documented
though so as long as you're reasonably comfortable with C++ templates, it
should be understandable.

    So far, the library has only been exposed to a handful of individuals
for review. I'd be interested to hear the comments anyone has about the
design and/or implementation approach. The code is available at:

        http://deferred.svn.sourceforge.net/viewvc/deferred/

    Cheers,

    Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090129/48b91082/attachment.htm 

From toreason at fastmail.fm  Fri Jan 30 03:09:00 2009
From: toreason at fastmail.fm (V S P)
Date: Fri, 30 Jan 2009 03:09:00 -0500
Subject: [Twisted-Python] New C++ implementation of Deferreds
In-Reply-To: <198edda90901291221q4ceb689ex4ec9beb01d28f0e9@mail.gmail.com>
References: <198edda90901291221q4ceb689ex4ec9beb01d28f0e9@mail.gmail.com>
Message-ID: <1233302940.4190.1297566749@webmail.messagingengine.com>

Hi, this is very interesting 
( am I currently testing out C++ web server (using boost asio) called
pion
to see if can suit my needs (it is a multi-threaded async IO generic
server and boost asio uses the best async APIs for each OS (including
kques for freebsd for example).


I looked at the example threads.cpp -- but could not figure out -- how
would it integrate with Twisted ? 

thanks

On Thu, 29 Jan 2009 12:21:36 -0800, "Tom Cocagne"
<tom.cocagne at gmail.com> said:
>     The question of whether anyone had developed a C++ implementation of
> Twisted's Deferreds has cropped up on this list several times over the
> last
> few years. To date, I've unfortunately been forced to sit on an
> implementation I developed several years ago for the Department of
> Defense.
> Due to some rather draconian IP & security policies, it's taken an
> exceptionally long time to get the code released. I'm happy to announce
> though that I finally managed to obtain release authorization for it and
> that the code now has a new home on Sourceforge.
> 
>     As C++ has differing language features, the API of the C++ deferreds
> isn't identical to those of Twisted's but most of the key concepts mapped
> over pretty well. Additionally, this implementation has a few design
> extensions to facilitate the development multi-threaded C++ applications.
> The multi-threaded aspect grew almost accidentally out of the original
> single-threaded design but, since then, it has proven to be
> extraordinarily
> useful for simplifying several multi-threaded applications I've worked
> on.
> 
>     The implementation of the library is, however, rather complex. In
>     large
> part, this is due to the effort required to work around the inherent
> inflexibility of the C++ type system. The Function, Bind, and
> Meta-Programming libraries found in Boost have gone a long way towards
> simplify the implementation though (my original Loki-based attempt was
> almost incomprehensible even to me ;-). The library is fully documented
> though so as long as you're reasonably comfortable with C++ templates, it
> should be understandable.
> 
>     So far, the library has only been exposed to a handful of individuals
> for review. I'd be interested to hear the comments anyone has about the
> design and/or implementation approach. The code is available at:
> 
>         http://deferred.svn.sourceforge.net/viewvc/deferred/
> 
>     Cheers,
> 
>     Tom
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Accessible with your email software
                          or over the web




From tom.cocagne at gmail.com  Fri Jan 30 12:22:15 2009
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Fri, 30 Jan 2009 09:22:15 -0800
Subject: [Twisted-Python] New C++ implementation of Deferreds
In-Reply-To: <1233302940.4190.1297566749@webmail.messagingengine.com>
References: <198edda90901291221q4ceb689ex4ec9beb01d28f0e9@mail.gmail.com>
	<1233302940.4190.1297566749@webmail.messagingengine.com>
Message-ID: <198edda90901300922s3657f152xee6625166dd40cf7@mail.gmail.com>

    The C++ library is completely independent of Python and Twisted but it
can be made to work with them. One of the initial uses of it, in fact, was
to run a Python interpreter (using Twisted) in a dedicated C++ thread and
use it to direct the actions of all the other threads in the process.

    The way I did it is this:

    1. Spawn a C++ thread to run the Python interpreter inside of. All use
of the Python C-API must be done from within this thread if you want to
avoid dealing with the Global Interpreter Lock (remember Python itself is a
single-threaded application). Other C++ threads needing to call a Python
C-API function can do so using a DeferredCommand object that wraps the call
they want to make. Hand this object to the Python thread for execution and
use the Deferred mechanism to get the answer back to the original
thread..... Basically, you turn the interpreter into one big Active Object
as per the standard design pattern.

    2. Use the Python C-API to import a Python module you wrote that will
initialize Twisted and create a pair of TCP sockets that are connected to
each other. Then use the C-API to get the OS-level file descriptor to one of
the sockets. The purpose of this is to provide a mechanism for other C++
threads to inform the Twisted reactor that there's something in the C++
world it needs to do. When one of those DeferredCommands in step one is
given to the Python thread, the last thing the delivering thread needs to do
is call a function that writes a single byte to the TCP socket. This will
cause the Twisted reactor in the Python thread to wake up from it's 'select'
call and dispatch a handler. This handler can then execute a C++ function
you registered with the C-API. Once back in the C++ world and in the context
of the Python thread,  you can dispatch any of the DeferredCommands sitting
in the thread's queue.

    I don't currently have a mechanism for tying a Twisted Deferred directly
to one of the C++ deferreds since I haven't yet found a use-case where it
makes sense to do so. It's probably possible though.

    As for using the C++ deferreds with boost's asio... I haven't used asio
yet but a quick read through the API makes it looks like an almost perfect
match for these deferreds. In fact, I'd like to eventually put this code up
for consideration by the boost community for eventually including something
like it in boost. I *highly* doubt they'd want to use the code I've written
but it might serve as a good proof-of-concept at least.

    Tom

On Fri, Jan 30, 2009 at 12:09 AM, V S P <toreason at fastmail.fm> wrote:

> Hi, this is very interesting
> ( am I currently testing out C++ web server (using boost asio) called
> pion
> to see if can suit my needs (it is a multi-threaded async IO generic
> server and boost asio uses the best async APIs for each OS (including
> kques for freebsd for example).
>
>
> I looked at the example threads.cpp -- but could not figure out -- how
> would it integrate with Twisted ?
>
> thanks
>
> On Thu, 29 Jan 2009 12:21:36 -0800, "Tom Cocagne"
> <tom.cocagne at gmail.com> said:
> >     The question of whether anyone had developed a C++ implementation of
> > Twisted's Deferreds has cropped up on this list several times over the
> > last
> > few years. To date, I've unfortunately been forced to sit on an
> > implementation I developed several years ago for the Department of
> > Defense.
> > Due to some rather draconian IP & security policies, it's taken an
> > exceptionally long time to get the code released. I'm happy to announce
> > though that I finally managed to obtain release authorization for it and
> > that the code now has a new home on Sourceforge.
> >
> >     As C++ has differing language features, the API of the C++ deferreds
> > isn't identical to those of Twisted's but most of the key concepts mapped
> > over pretty well. Additionally, this implementation has a few design
> > extensions to facilitate the development multi-threaded C++ applications.
> > The multi-threaded aspect grew almost accidentally out of the original
> > single-threaded design but, since then, it has proven to be
> > extraordinarily
> > useful for simplifying several multi-threaded applications I've worked
> > on.
> >
> >     The implementation of the library is, however, rather complex. In
> >     large
> > part, this is due to the effort required to work around the inherent
> > inflexibility of the C++ type system. The Function, Bind, and
> > Meta-Programming libraries found in Boost have gone a long way towards
> > simplify the implementation though (my original Loki-based attempt was
> > almost incomprehensible even to me ;-). The library is fully documented
> > though so as long as you're reasonably comfortable with C++ templates, it
> > should be understandable.
> >
> >     So far, the library has only been exposed to a handful of individuals
> > for review. I'd be interested to hear the comments anyone has about the
> > design and/or implementation approach. The code is available at:
> >
> >         http://deferred.svn.sourceforge.net/viewvc/deferred/
> >
> >     Cheers,
> >
> >     Tom
> --
>  V S P
>  toreason at fastmail.fm
>
> --
> http://www.fastmail.fm - Accessible with your email software
>                          or over the web
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090130/fe302cc7/attachment.htm 

From ishimoto at gembook.org  Sat Jan 31 04:18:33 2009
From: ishimoto at gembook.org (Atsuo Ishimoto)
Date: Sat, 31 Jan 2009 18:18:33 +0900
Subject: [Twisted-Python] How can I disconnect ssl connection from the
	client side?
Message-ID: <797440730901310118j2d423510pac4dc206ba51a1e4@mail.gmail.com>

Hello,

I'm writing a smtp-client application with twisted.mail. Testing the
application, I noticed that timeout doesn't work in some case if
client started starttls session.  If smtp-server stops responding
after DATA command was sent from client,  calling
transport.loseConnection() doesn't close connection.
I found ticket # 2827 reports connector.disconnect() doesn't work for
ssl connection if the server doesn't send any data.

Is there a workaround to disconnect ssl connection?

Regards,



From johnaherne at rocs.co.uk  Fri Jan  2 03:14:40 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 2 Jan 2009 10:14:40 +0000
Subject: [Twisted-Python] Best place to put application code
Message-ID: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>

One thing that has been puzzling me is where is the best place to put
application code.

The case I am using is straightforward TCP server with client connections
making simple requests and waiting for responses retrieved from database
tables to be sent back.

Reading the docs and looking at various examples provided in books and
documentation has left me a bit confused.

Is there a best practice for where application code should go - either the
protcocol class or the factory class or somewhere else. Does it actually
matter.

Is there any downside to putting application code in the protocol or
factory. What pitfalls are there for either approach.

I see examples where application code appears in both classes, but the
examples are very small so may not be indicative of what should be done.

In the docs I see reference to most of the code will be written in the
protocol class, but that seems to be referring to actually writing protocols
not application code. It also says that when the protocol needs to call
application code to make it a method call -  not to mix protocol and
application code. This could just mean creating some methods in the protocol
class to handle the task.

However, if the application code needs to run for 10-12 seconds looking up
database tables and accumulating results and waiting on  deferreds, should
all this code reside in the protocol class or the factory.

If I keep it in the protocol, then I already have my client connection to
write back to. So that seems to be the place to keep the code.

If I put the code in the factory, then I need to pass the client connection
so it can write back to the client. Or is there another way of doing this I
have missed.
.
The factory seems to be the place where other classes can be passed in and
the protocol can call them via self.factory. That seems to imply that
application code should be put into the factory, but I can't see any way of
passing back information from deferred results to the call from protocol.
It's ok if it was just a simple method call that returns a result, but if
the code has to run a series of deferreds then it will be the called method
that will have the result and it will need a means of writing this back to
the client. I don't think I can signal the protocol to say I now have the
result.Of course I could easily be mistaken. So please correct.

Of course if I passs the client connection to the factory, then it can use
this to write back. But that means passing around the client connection.
Should I avoid doing that or is that not a problem.

I hope I have explained myself clearly. I'm just looking for some guidance
and pointers to what is best to do or what is best to avoid.

Regards

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090102/94e1efd2/attachment.html>

From apenon at gmail.com  Fri Jan  2 08:20:46 2009
From: apenon at gmail.com (Deniz Pecel)
Date: Fri, 2 Jan 2009 15:20:46 +0000
Subject: [Twisted-Python] ssh v1 support
In-Reply-To: <3fce0ae70812260817r463a8248i935375f304302072@mail.gmail.com>
References: <6a9316280812260747r12b0cafaq187a8e1311a23b09@mail.gmail.com>
	<3fce0ae70812260817r463a8248i935375f304302072@mail.gmail.com>
Message-ID: <6a9316280901020720o47b8a8fbo9e8d5d4c2429340e@mail.gmail.com>

Thanks Cary. Are there any available easy to use library other than twisted
that supports ssh v1?
Deniz

On Fri, Dec 26, 2008 at 4:17 PM, Cary Hull <cary.hull at gmail.com> wrote:

> Not out of the box. Conch is ssh2 only. However, you can attain ssh1
> support by wrapping the binary (ssh) with a ProcessProtocol:
>
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
> Before you start on your own implementation I would wait to see if
> anyone has done this already and wouldn't mind sharing. :)
>
> -Cary
>
> On Fri, Dec 26, 2008 at 7:47 AM, Deniz Pecel <apenon at gmail.com> wrote:
> > Hi List
> > Does twisted support ssh v1?
> > thanks
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
>
>
> --
> 01100011 01100001 01110010 01111001
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090102/fe338b25/attachment.html>

From exarkun at divmod.com  Fri Jan  2 08:59:56 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 2 Jan 2009 10:59:56 -0500
Subject: [Twisted-Python] Best place to put application code
In-Reply-To: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
Message-ID: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>

On Fri, 2 Jan 2009 10:14:40 +0000, John Aherne <johnaherne at rocs.co.uk> wrote:
>One thing that has been puzzling me is where is the best place to put
>application code.

It depends. :)

>
>The case I am using is straightforward TCP server with client connections
>making simple requests and waiting for responses retrieved from database
>tables to be sent back.
>
>Reading the docs and looking at various examples provided in books and
>documentation has left me a bit confused.
>
>Is there a best practice for where application code should go - either the
>protcocol class or the factory class or somewhere else. Does it actually
>matter.
>
>Is there any downside to putting application code in the protocol or
>factory. What pitfalls are there for either approach.

Best practice for a Protocol class is to include code which is necessary
to interpret bytes which are received and turn them into a structured form
which is easier to deal with; code which starts from some structured form
and emits bytes to be sent should also be part of a Protocol class.

It is common practice to have a class which includes just these things and
then a subclass which adds application-specific logic based on top of this
functionality.  It is also common practice to connect a protocol which has
only these things, no application-specific code, and then have application
code elsewhere (in a free function, a method of a factory, another class's
method, user input, etc) make calls onto it.  Which of these approaches is
most well suited to a particular application depends.  For example, if the application code creates multiple connections with shared state adding the application logic to a Protocol subclass isn't a good approach.

>I see examples where application code appears in both classes, but the
>examples are very small so may not be indicative of what should be done.

Generally they're so small that there's no advantage to any approach over
any other, yes.

>In the docs I see reference to most of the code will be written in the
>protocol class, but that seems to be referring to actually writing protocols
>not application code. It also says that when the protocol needs to call
>application code to make it a method call -  not to mix protocol and
>application code. This could just mean creating some methods in the protocol
>class to handle the task.

Consider all of the code you write to be part of a library you're developing.
If you implement a protocol, then you've just written part of a library which
provides a slightly higher-level API for interacting with the network in some
way.  With that in hand, you can move on to some other part of your library
which uses that higher-level API to accomplish something even higher-level,
perhaps presenting yet another API to some other part of your application
which is higher-level still.  The motivation to not mix protocol and
application code is just the motivation to have clear boundaries in your
library to make as much of it reusable as possible.  If you have a protocol
implementation mixed together with application A, when you come along to
write application B which needs to use the same protocol, you'll have to
re-implement the protocol, or refactor your original implementation to move
the application A code elsewhere (of course, there's nothing wrong with
having to refactor your code - it's a common part of programming, and since
it's very difficult to predict the future, it's often best *not* to try to
anticipate your future requirements when writing code - just write what works
and is easily testable, and when your future requirements come along, deal
with them then; as you do this more and more, you'll probably get a sense of
how to structure your code to minimize the effort required for refactoring,
but aside from experience with this process, I don't know of any way to learn
this skill).

>However, if the application code needs to run for 10-12 seconds looking up
>database tables and accumulating results and waiting on  deferreds, should
>all this code reside in the protocol class or the factory.

I wouldn't take the duration of the task into consideration when trying to
decide where to put it.  I'd consider reusability, testability, simplicity,
and correctness.

>
>If I keep it in the protocol, then I already have my client connection to
>write back to. So that seems to be the place to keep the code.
>
>If I put the code in the factory, then I need to pass the client connection
>so it can write back to the client. Or is there another way of doing this I
>have missed.

This isn't much different from the trade-off you have to consider when you
decide to implement anything as two classes instead of one.  Since you can
no longer just use `self´ everywhere, you'll have to figure out how to get
a reference to the other instance that you need sometimes.  This shouldn't
be difficult though - just invoke a method on one class with an instance of
the other.

>.
>The factory seems to be the place where other classes can be passed in and
>the protocol can call them via self.factory. That seems to imply that
>application code should be put into the factory, but I can't see any way of
>passing back information from deferred results to the call from protocol.
>It's ok if it was just a simple method call that returns a result, but if
>the code has to run a series of deferreds then it will be the called method
>that will have the result and it will need a means of writing this back to
>the client. I don't think I can signal the protocol to say I now have the
>result.Of course I could easily be mistaken. So please correct.

This is just what Deferreds are for.  For example, let's consider a protocol
and factory for a game server lobby.  The protocol has a message type which
lets the server inform the client of the list of games which are currently
available to be joined.  The Protocol subclass sends this information to
the client when the connection is established, but it uses the factory
to actually find the list of games that are available.  Again, this
division is probably desirable for a number of reasons (it simplifies
unit testing, for example).

class GameFactory(ServerFactory):
    def availableGames(self):
        """
        Return a Deferred which will fire with a list of the games
        currently available to be joined.
        """
        return self.connectionPool.runQuery(
            "SELECT game_id FROM available_games")


class GameProtocol(Protocol):
    def connectionMade(self):
        """
        Send the available-games message so the client can pick one to
        join.
        """
        d = self.factory.availableGames()
        def cbGotGames(games):
            self.transport.write(" ".join(games))
        d.addCallback(cbGotGames)
        d.addErrback(log.err)

>
>Of course if I passs the client connection to the factory, then it can use
>this to write back. But that means passing around the client connection.
>Should I avoid doing that or is that not a problem.

It's an option, but I hope the above example will show how you can use
Deferreds to avoid needing to do this.

>
>I hope I have explained myself clearly. I'm just looking for some guidance
>and pointers to what is best to do or what is best to avoid.
>

Hope this helps,

Jean-Paul



From jarrod at vertigrated.com  Fri Jan  2 15:21:46 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 2 Jan 2009 17:21:46 -0500
Subject: [Twisted-Python] Best place to put application code
In-Reply-To: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
References: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
Message-ID: <fa3d0c740901021421n6192a884y7a295a6eaa768421@mail.gmail.com>

On Fri, Jan 2, 2009 at 5:14 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

> One thing that has been puzzling me is where is the best place to put
> application code.


business logic should go in the "Service" class.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090102/70c83b85/attachment.html>

From toreason at fastmail.fm  Fri Jan  2 15:35:22 2009
From: toreason at fastmail.fm (V S P)
Date: Fri, 02 Jan 2009 17:35:22 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
Message-ID: <1230935722.15394.1292733079@webmail.messagingengine.com>

Hi, 
I am in the process of evaluating a tool for the newtorking architecture
I need. And wanted to ask the group questions, I could not easily get
answered from reading docs and various posts:

Basically my architecutre requires the following

a) multi-CPU/multi-core scalability

b) multi-machine horizontal scalability

c) Event dispatching:  having a single 'dispatcher' instance
being able to read rows (events) from postgresql database and 
being able to dispatch it to available 'worker' processes

d) chat server


For c) and d) am looking for a framework such that it will allow me
to develop the 'worker' processes such that they reside on mulitple
machines, and a lot of the 'hard work' of registration, message passing,
restarting, SNMP compatibilty .

Twisted appears to already have message passing, chat server and many
many other neat things that if I do not need now -- probably will need
in the future.

However, I cannot quite understand how the 'multi-process' part is
supported.

I have read this: 
http://www.python.org/workshops/2002-02/papers/09/index.htm
(found it via Bruce Eckel's log)
and it says that:
"... 
and since forking Python processes has many disadvantages, like Python's
reference counting not playing well with copy-on-write and problems with
shared state, it was felt the best option was an event-driven framework.
"

I also looked at the docs for the 
http://twistedmatrix.com/projects/core/documentation/howto/process.html


But I got confused there


Basically I am looking to 'pre-spawn' a number of worker threads
configured from command line (and each of the worker threads will
precreate a database connection).  So each multi-cpu machine will
have one twisted Server, each server will pre-spawn N worker processes
and each process will have its own database connection (and therefore
each can do its own caching and transaction control (or use memchaced
server) to share cache).


I did not see however how to:
a) make the Deferred mechanism to pass the event data received
in the Asynch loop to one of the worker processes
(there are appeared to be no 'inheritance' structure to where derive
the worker processes from).


b) I did not see how multiple twisted servers, each running on a
separate
multi-cpu machine can register together to be in one 'cluster' -- so
that
my dispatcher process that reads the events from the database can
'round-robin' the events to them.

c) I did not see if twisted 'figures out' that given process runs on a
local machine vs remote and optimises the IPC communication for local
IPC.


Because I did not see the above -- it lead me to believe that I am
trying to ask Twisted have something it was not meant to do 
(My view of the architecture is somewhat similar to how would ACE/TAO
ORB notification service would work -- as I am familiar with those).


I kind of did not go into the multi-box architecutre of how the 
Twisted chart server is working, because I thought I need to understand
the above first.

So wanted to ask you guys if I am looking for the right documentation
or may be there is a separate sub-project that is doing what I am
looking for.

thanks in advance,
Vlad




-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Or how I learned to stop worrying and
                          love email again




From johnaherne at rocs.co.uk  Sat Jan  3 04:16:41 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Sat, 3 Jan 2009 11:16:41 +0000
Subject: [Twisted-Python] Best place to put application code
In-Reply-To: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
References: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
	<20090102155956.20272.958450739.divmod.quotient.30688@ohm>
Message-ID: <faf2d7810901030316m6da00d34v4217385d475c1ec0@mail.gmail.com>

Thanks for the reply.
Very helpful. despite the question being like 'How long is a piece of
string'.

It's good to just hear what someone else reckons is the way to structure the
code.

I like the code sample.It makes clearer what some of my options are. So I'll
have a look and see how I can make use of it.

Thanks once again.

John Aherne



On Fri, Jan 2, 2009 at 3:59 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Fri, 2 Jan 2009 10:14:40 +0000, John Aherne <johnaherne at rocs.co.uk>
> wrote:
>
>> One thing that has been puzzling me is where is the best place to put
>> application code.
>>
>
> It depends. :)
>
>
>> The case I am using is straightforward TCP server with client connections
>> making simple requests and waiting for responses retrieved from database
>> tables to be sent back.
>>
>> Reading the docs and looking at various examples provided in books and
>> documentation has left me a bit confused.
>>
>> Is there a best practice for where application code should go - either the
>> protcocol class or the factory class or somewhere else. Does it actually
>> matter.
>>
>> Is there any downside to putting application code in the protocol or
>> factory. What pitfalls are there for either approach.
>>
>
> Best practice for a Protocol class is to include code which is necessary
> to interpret bytes which are received and turn them into a structured form
> which is easier to deal with; code which starts from some structured form
> and emits bytes to be sent should also be part of a Protocol class.
>
> It is common practice to have a class which includes just these things and
> then a subclass which adds application-specific logic based on top of this
> functionality.  It is also common practice to connect a protocol which has
> only these things, no application-specific code, and then have application
> code elsewhere (in a free function, a method of a factory, another class's
> method, user input, etc) make calls onto it.  Which of these approaches is
> most well suited to a particular application depends.  For example, if the
> application code creates multiple connections with shared state adding the
> application logic to a Protocol subclass isn't a good approach.
>
>  I see examples where application code appears in both classes, but the
>> examples are very small so may not be indicative of what should be done.
>>
>
> Generally they're so small that there's no advantage to any approach over
> any other, yes.
>
>  In the docs I see reference to most of the code will be written in the
>> protocol class, but that seems to be referring to actually writing
>> protocols
>> not application code. It also says that when the protocol needs to call
>> application code to make it a method call -  not to mix protocol and
>> application code. This could just mean creating some methods in the
>> protocol
>> class to handle the task.
>>
>
> Consider all of the code you write to be part of a library you're
> developing.
> If you implement a protocol, then you've just written part of a library
> which
> provides a slightly higher-level API for interacting with the network in
> some
> way.  With that in hand, you can move on to some other part of your library
> which uses that higher-level API to accomplish something even higher-level,
> perhaps presenting yet another API to some other part of your application
> which is higher-level still.  The motivation to not mix protocol and
> application code is just the motivation to have clear boundaries in your
> library to make as much of it reusable as possible.  If you have a protocol
> implementation mixed together with application A, when you come along to
> write application B which needs to use the same protocol, you'll have to
> re-implement the protocol, or refactor your original implementation to move
> the application A code elsewhere (of course, there's nothing wrong with
> having to refactor your code - it's a common part of programming, and since
> it's very difficult to predict the future, it's often best *not* to try to
> anticipate your future requirements when writing code - just write what
> works
> and is easily testable, and when your future requirements come along, deal
> with them then; as you do this more and more, you'll probably get a sense
> of
> how to structure your code to minimize the effort required for refactoring,
> but aside from experience with this process, I don't know of any way to
> learn
> this skill).
>
>  However, if the application code needs to run for 10-12 seconds looking up
>> database tables and accumulating results and waiting on  deferreds, should
>> all this code reside in the protocol class or the factory.
>>
>
> I wouldn't take the duration of the task into consideration when trying to
> decide where to put it.  I'd consider reusability, testability, simplicity,
> and correctness.
>
>
>> If I keep it in the protocol, then I already have my client connection to
>> write back to. So that seems to be the place to keep the code.
>>
>> If I put the code in the factory, then I need to pass the client
>> connection
>> so it can write back to the client. Or is there another way of doing this
>> I
>> have missed.
>>
>
> This isn't much different from the trade-off you have to consider when you
> decide to implement anything as two classes instead of one.  Since you can
> no longer just use `self´ everywhere, you'll have to figure out how to get
> a reference to the other instance that you need sometimes.  This shouldn't
> be difficult though - just invoke a method on one class with an instance of
> the other.
>
>  .
>> The factory seems to be the place where other classes can be passed in and
>> the protocol can call them via self.factory. That seems to imply that
>> application code should be put into the factory, but I can't see any way
>> of
>> passing back information from deferred results to the call from protocol.
>> It's ok if it was just a simple method call that returns a result, but if
>> the code has to run a series of deferreds then it will be the called
>> method
>> that will have the result and it will need a means of writing this back to
>> the client. I don't think I can signal the protocol to say I now have the
>> result.Of course I could easily be mistaken. So please correct.
>>
>
> This is just what Deferreds are for.  For example, let's consider a
> protocol
> and factory for a game server lobby.  The protocol has a message type which
> lets the server inform the client of the list of games which are currently
> available to be joined.  The Protocol subclass sends this information to
> the client when the connection is established, but it uses the factory
> to actually find the list of games that are available.  Again, this
> division is probably desirable for a number of reasons (it simplifies
> unit testing, for example).
>
> class GameFactory(ServerFactory):
>   def availableGames(self):
>       """
>       Return a Deferred which will fire with a list of the games
>       currently available to be joined.
>       """
>       return self.connectionPool.runQuery(
>           "SELECT game_id FROM available_games")
>
>
> class GameProtocol(Protocol):
>   def connectionMade(self):
>       """
>       Send the available-games message so the client can pick one to
>       join.
>       """
>       d = self.factory.availableGames()
>       def cbGotGames(games):
>           self.transport.write(" ".join(games))
>       d.addCallback(cbGotGames)
>       d.addErrback(log.err)
>
>
>> Of course if I passs the client connection to the factory, then it can use
>> this to write back. But that means passing around the client connection.
>> Should I avoid doing that or is that not a problem.
>>
>
> It's an option, but I hope the above example will show how you can use
> Deferreds to avoid needing to do this.
>
>
>> I hope I have explained myself clearly. I'm just looking for some guidance
>> and pointers to what is best to do or what is best to avoid.
>>
>>
> Hope this helps,
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090103/b8500549/attachment.html>

From johnaherne at rocs.co.uk  Sat Jan  3 04:19:09 2009
From: johnaherne at rocs.co.uk (John Aherne)
Date: Sat, 3 Jan 2009 11:19:09 +0000
Subject: [Twisted-Python] Best place to put application code
In-Reply-To: <fa3d0c740901021421n6192a884y7a295a6eaa768421@mail.gmail.com>
References: <faf2d7810901020214qbb84bcdie628b9fb80cd6f6c@mail.gmail.com>
	<fa3d0c740901021421n6192a884y7a295a6eaa768421@mail.gmail.com>
Message-ID: <faf2d7810901030319q2151ea86ucae4d1e3d8850f66@mail.gmail.com>

Thanks for the reply.
Very interesting thought. I had used the service for some work, but hadn't
thought I should use it to put business logic in.

So thanks for the information.

John Aherne


On Fri, Jan 2, 2009 at 10:21 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

>
>
> On Fri, Jan 2, 2009 at 5:14 AM, John Aherne <johnaherne at rocs.co.uk> wrote:
>
>> One thing that has been puzzling me is where is the best place to put
>> application code.
>
>
> business logic should go in the "Service" class.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090103/bbba821c/attachment.html>

From cary.hull at gmail.com  Sat Jan  3 09:31:52 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Sat, 3 Jan 2009 08:31:52 -0800
Subject: [Twisted-Python] ssh v1 support
In-Reply-To: <6a9316280901020720o47b8a8fbo9e8d5d4c2429340e@mail.gmail.com>
References: <6a9316280812260747r12b0cafaq187a8e1311a23b09@mail.gmail.com>
	<3fce0ae70812260817r463a8248i935375f304302072@mail.gmail.com>
	<6a9316280901020720o47b8a8fbo9e8d5d4c2429340e@mail.gmail.com>
Message-ID: <3fce0ae70901030831w7abe6280ob4289cd79951943a@mail.gmail.com>

I suppose it depends on what you mean by support. Libraries like
paramiko and conch provide an actual protocol implementation in
Python, which means you can do some interesting things with channels.
Otherwise it seems you're stuck with an expect like model for driving
the ssh1 binary. Pexpect provides some built in support for driving
ssh this way:
http://pexpect.sourceforge.net/pxssh.html

On Fri, Jan 2, 2009 at 7:20 AM, Deniz Pecel <apenon at gmail.com> wrote:
> Thanks Cary. Are there any available easy to use library other than twisted
> that supports ssh v1?
> Deniz
>
> On Fri, Dec 26, 2008 at 4:17 PM, Cary Hull <cary.hull at gmail.com> wrote:
>>
>> Not out of the box. Conch is ssh2 only. However, you can attain ssh1
>> support by wrapping the binary (ssh) with a ProcessProtocol:
>>
>> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>>
>> Before you start on your own implementation I would wait to see if
>> anyone has done this already and wouldn't mind sharing. :)
>>
>> -Cary
>>
>> On Fri, Dec 26, 2008 at 7:47 AM, Deniz Pecel <apenon at gmail.com> wrote:
>> > Hi List
>> > Does twisted support ssh v1?
>> > thanks
>> >
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>> >
>>
>>
>>
>> --
>> 01100011 01100001 01110010 01111001
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
01100011 01100001 01110010 01111001



From cary.hull at gmail.com  Sat Jan  3 14:14:48 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Sat, 3 Jan 2009 13:14:48 -0800
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <1230935722.15394.1292733079@webmail.messagingengine.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
Message-ID: <3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>

Take a look at ampoule:
https://launchpad.net/ampoule

On Fri, Jan 2, 2009 at 2:35 PM, V S P <toreason at fastmail.fm> wrote:
> Hi,
> I am in the process of evaluating a tool for the newtorking architecture
> I need. And wanted to ask the group questions, I could not easily get
> answered from reading docs and various posts:
>
> Basically my architecutre requires the following
>
> a) multi-CPU/multi-core scalability
>
> b) multi-machine horizontal scalability
>
> c) Event dispatching:  having a single 'dispatcher' instance
> being able to read rows (events) from postgresql database and
> being able to dispatch it to available 'worker' processes
>
> d) chat server
>
>
> For c) and d) am looking for a framework such that it will allow me
> to develop the 'worker' processes such that they reside on mulitple
> machines, and a lot of the 'hard work' of registration, message passing,
> restarting, SNMP compatibilty .
>
> Twisted appears to already have message passing, chat server and many
> many other neat things that if I do not need now -- probably will need
> in the future.
>
> However, I cannot quite understand how the 'multi-process' part is
> supported.
>
> I have read this:
> http://www.python.org/workshops/2002-02/papers/09/index.htm
> (found it via Bruce Eckel's log)
> and it says that:
> "...
> and since forking Python processes has many disadvantages, like Python's
> reference counting not playing well with copy-on-write and problems with
> shared state, it was felt the best option was an event-driven framework.
> "
>
> I also looked at the docs for the
> http://twistedmatrix.com/projects/core/documentation/howto/process.html
>
>
> But I got confused there
>
>
> Basically I am looking to 'pre-spawn' a number of worker threads
> configured from command line (and each of the worker threads will
> precreate a database connection).  So each multi-cpu machine will
> have one twisted Server, each server will pre-spawn N worker processes
> and each process will have its own database connection (and therefore
> each can do its own caching and transaction control (or use memchaced
> server) to share cache).
>
>
> I did not see however how to:
> a) make the Deferred mechanism to pass the event data received
> in the Asynch loop to one of the worker processes
> (there are appeared to be no 'inheritance' structure to where derive
> the worker processes from).
>
>
> b) I did not see how multiple twisted servers, each running on a
> separate
> multi-cpu machine can register together to be in one 'cluster' -- so
> that
> my dispatcher process that reads the events from the database can
> 'round-robin' the events to them.
>
> c) I did not see if twisted 'figures out' that given process runs on a
> local machine vs remote and optimises the IPC communication for local
> IPC.
>
>
> Because I did not see the above -- it lead me to believe that I am
> trying to ask Twisted have something it was not meant to do
> (My view of the architecture is somewhat similar to how would ACE/TAO
> ORB notification service would work -- as I am familiar with those).
>
>
> I kind of did not go into the multi-box architecutre of how the
> Twisted chart server is working, because I thought I need to understand
> the above first.
>
> So wanted to ask you guys if I am looking for the right documentation
> or may be there is a separate sub-project that is doing what I am
> looking for.
>
> thanks in advance,
> Vlad
>
>
>
>
> --
>  V S P
>  toreason at fastmail.fm
>
> --
> http://www.fastmail.fm - Or how I learned to stop worrying and
>                          love email again
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
01100011 01100001 01110010 01111001



From toreason at fastmail.fm  Sat Jan  3 15:32:10 2009
From: toreason at fastmail.fm (V S P)
Date: Sat, 03 Jan 2009 17:32:10 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
Message-ID: <1231021930.1898.1292840297@webmail.messagingengine.com>

Thank you so much
Yes, this plugin is what I am looking for process pool
" 
    """
    This plugin provides ways to create a process pool service in your
    system listening on a given port and interface and answering to a
    given set of commands.
    """
"

So I just need to inherit from 
AMPConnector and have a trully scalable server!


Two more questions:

What's the mechanism of 'registring' multiple twisted servers
(something similar to a Name server in Corba) -- so an event
dispatching client can 'discover' the servers running on 
multiple machines

And how does one run multiple XAMPP servers in twisted -- such
that work to each server is distributed either by a hash on a user
name or some other way (or does such mechanism exist).

thank you again for such a helpful reply.







On Sat, 3 Jan 2009 13:14:48 -0800, "Cary Hull" <cary.hull at gmail.com>
said:
> Take a look at ampoule:
> https://launchpad.net/ampoule
> 
> On Fri, Jan 2, 2009 at 2:35 PM, V S P <toreason at fastmail.fm> wrote:
> > Hi,
> > I am in the process of evaluating a tool for the newtorking architecture
> > I need. And wanted to ask the group questions, I could not easily get
> > answered from reading docs and various posts:
> >
> > Basically my architecutre requires the following
> >
> > a) multi-CPU/multi-core scalability
> >
> > b) multi-machine horizontal scalability
> >
> > c) Event dispatching:  having a single 'dispatcher' instance
> > being able to read rows (events) from postgresql database and
> > being able to dispatch it to available 'worker' processes
> >
> > d) chat server
> >
> >
> > For c) and d) am looking for a framework such that it will allow me
> > to develop the 'worker' processes such that they reside on mulitple
> > machines, and a lot of the 'hard work' of registration, message passing,
> > restarting, SNMP compatibilty .
> >
> > Twisted appears to already have message passing, chat server and many
> > many other neat things that if I do not need now -- probably will need
> > in the future.
> >
> > However, I cannot quite understand how the 'multi-process' part is
> > supported.
> >
> > I have read this:
> > http://www.python.org/workshops/2002-02/papers/09/index.htm
> > (found it via Bruce Eckel's log)
> > and it says that:
> > "...
> > and since forking Python processes has many disadvantages, like Python's
> > reference counting not playing well with copy-on-write and problems with
> > shared state, it was felt the best option was an event-driven framework.
> > "
> >
> > I also looked at the docs for the
> > http://twistedmatrix.com/projects/core/documentation/howto/process.html
> >
> >
> > But I got confused there
> >
> >
> > Basically I am looking to 'pre-spawn' a number of worker threads
> > configured from command line (and each of the worker threads will
> > precreate a database connection).  So each multi-cpu machine will
> > have one twisted Server, each server will pre-spawn N worker processes
> > and each process will have its own database connection (and therefore
> > each can do its own caching and transaction control (or use memchaced
> > server) to share cache).
> >
> >
> > I did not see however how to:
> > a) make the Deferred mechanism to pass the event data received
> > in the Asynch loop to one of the worker processes
> > (there are appeared to be no 'inheritance' structure to where derive
> > the worker processes from).
> >
> >
> > b) I did not see how multiple twisted servers, each running on a
> > separate
> > multi-cpu machine can register together to be in one 'cluster' -- so
> > that
> > my dispatcher process that reads the events from the database can
> > 'round-robin' the events to them.
> >
> > c) I did not see if twisted 'figures out' that given process runs on a
> > local machine vs remote and optimises the IPC communication for local
> > IPC.
> >
> >
> > Because I did not see the above -- it lead me to believe that I am
> > trying to ask Twisted have something it was not meant to do
> > (My view of the architecture is somewhat similar to how would ACE/TAO
> > ORB notification service would work -- as I am familiar with those).
> >
> >
> > I kind of did not go into the multi-box architecutre of how the
> > Twisted chart server is working, because I thought I need to understand
> > the above first.
> >
> > So wanted to ask you guys if I am looking for the right documentation
> > or may be there is a separate sub-project that is doing what I am
> > looking for.
> >
> > thanks in advance,
> > Vlad
> >
> >
> >
> >
> > --
> >  V S P
> >  toreason at fastmail.fm
> >
> > --
> > http://www.fastmail.fm - Or how I learned to stop worrying and
> >                          love email again
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> 
> 
> 
> -- 
> 01100011 01100001 01110010 01111001
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - mmm... Fastmail...




From exarkun at twistedmatrix.com  Sat Jan  3 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Jan 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1231045511.29.1920708934@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090104/3ea16f0a/attachment.html>

From hancock.robert at gmail.com  Sun Jan  4 19:52:59 2009
From: hancock.robert at gmail.com (Robert Hancock)
Date: Sun, 4 Jan 2009 21:52:59 -0500
Subject: [Twisted-Python] Looping
Message-ID: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>

I have a process that takes a list of URLs, uses client.getPage() to
retrieve the data, writes the contents to disk, and then moves the
file to another directory.

   # get feed list - this is a list tuples
    # url, name, username, password
    url_tuples = feed_list(feed_file)

    global C_URLS
    d =  defer.succeed(log_start(log))

    for tup_url in url_tuples:
        C_URLS += 1

        d.addCallback(get_page, tup_url)
        d.addErrback(get_page_error, tup_url[0])

        d.addCallback(page_to_file, tup_url)
        d.addErrback(page_to_file_error)

        d.addCallback(file_to_rsync_queue)
        d.addErrback(file_to_rsync_queue)

        d.addCallback(stop_working)
        #d.addErrback(self.gotError, (feed[0], 'while stopping'))

    reactor.run()

I want to put this into a loop and run it as a daemon, but the looping
is causing me a problem.  I've tried making the above into a procedure
(minus the stop working call back and reactor.run())  and it does not
run.  Any suggestions on how to encapsulate this into loop would be
gratefully appreciated.



From terry at jon.es  Sun Jan  4 20:08:14 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 5 Jan 2009 04:08:14 +0100
Subject: [Twisted-Python] Looping
In-Reply-To: Your message at 21:52:59 on Sunday, 4 January 2009
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
Message-ID: <18785.31134.721239.346967@jon.es>

>>>>> "Robert" == Robert Hancock <hancock.robert at gmail.com> writes:

Robert> I want to put this into a loop and run it as a daemon, but the
Robert> looping is causing me a problem.  I've tried making the above into
Robert> a procedure (minus the stop working call back and reactor.run())
Robert> and it does not run.  Any suggestions on how to encapsulate this
Robert> into loop would be gratefully appreciated.

It's hard to help unless you post more of your code or are more specific.
What do you mean "the looping is causing me a problem"?

How many urls are in url_tuples?

Is there a reason why you're using just one deferred?

Also why not use client.downloadPage to put the contents into files?

Terry



From Andy at newworldelectric.com  Sun Jan  4 20:19:23 2009
From: Andy at newworldelectric.com (Andy Fundinger)
Date: Sun, 4 Jan 2009 22:19:23 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
Message-ID: <37d49ed40901041919g6e566e09x3de8fffb5b0097e2@mail.gmail.com>

In twisted a polling loop usually translates into either a system of
reactor.callLaters or a twisted.internet.task.LoopingCall.

Either like this this:

    def __init__(self,oaf,interval=600):

        self.interval=interval
        reactor.callLater(5,self.checkSystem)

    def checkSystem(self):
        reactor.callLater(self.interval,self.checkSystem)

or like this:

    def __init__(self,oaf,interval=600):

        self.interval=interval
        task.LoopingCall(self.checkSystem).start(self.interval)

When I wrote what may be a similar system I actually set it up to refresh
only when a client requested the output and the local copy was out of date,
so you may actually prefer that approach.

-Andy Fundinger

On Sun, Jan 4, 2009 at 9:52 PM, Robert Hancock <hancock.robert at gmail.com>wrote:

> I have a process that takes a list of URLs, uses client.getPage() to
> retrieve the data, writes the contents to disk, and then moves the
> file to another directory.
>
>   # get feed list - this is a list tuples
>    # url, name, username, password
>    url_tuples = feed_list(feed_file)
>
>    global C_URLS
>    d =  defer.succeed(log_start(log))
>
>    for tup_url in url_tuples:
>        C_URLS += 1
>
>        d.addCallback(get_page, tup_url)
>        d.addErrback(get_page_error, tup_url[0])
>
>        d.addCallback(page_to_file, tup_url)
>        d.addErrback(page_to_file_error)
>
>        d.addCallback(file_to_rsync_queue)
>        d.addErrback(file_to_rsync_queue)
>
>        d.addCallback(stop_working)
>        #d.addErrback(self.gotError, (feed[0], 'while stopping'))
>
>    reactor.run()
>
> I want to put this into a loop and run it as a daemon, but the looping
> is causing me a problem.  I've tried making the above into a procedure
> (minus the stop working call back and reactor.run())  and it does not
> run.  Any suggestions on how to encapsulate this into loop would be
> gratefully appreciated.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

How could you possibly think typing 'import skynet' was a good idea?
http://xkcd.com/521/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090104/309fa3a5/attachment.html>

From hancock.robert at gmail.com  Sun Jan  4 21:21:36 2009
From: hancock.robert at gmail.com (Robert Hancock)
Date: Sun, 4 Jan 2009 23:21:36 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <18785.31134.721239.346967@jon.es>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
Message-ID: <613d56580901042021m2691a924r922f78147127b93@mail.gmail.com>

 How many urls are in url_tuples?

>
> Is there a reason why you're using just one deferred?
>
> Also why not use client.downloadPage to put the contents into files?
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From hancock.robert at gmail.com  Sun Jan  4 21:23:06 2009
From: hancock.robert at gmail.com (Robert Hancock)
Date: Sun, 4 Jan 2009 23:23:06 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <18785.31134.721239.346967@jon.es>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
Message-ID: <613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>

> How many urls are in url_tuples?
4 - 32
> Is there a reason why you're using just one deferred?
What is the advantage of using more?

> Also why not use client.downloadPage to put the contents into files?
Because I may want to parse the output before writing to a file.



From Andy at newworldelectric.com  Mon Jan  5 06:34:58 2009
From: Andy at newworldelectric.com (Andy Fundinger)
Date: Mon, 5 Jan 2009 08:34:58 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
	<613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
Message-ID: <37d49ed40901050534y53c79842ibcbade79d183c76d@mail.gmail.com>

>
>
> > Is there a reason why you're using just one deferred?
> What is the advantage of using more?
>

If you use more with a DeferredList you can have [effectively] parallel page
fetches.  It's like spawning threads for each page, but twisted doesn't
actually spawn threads for this I don't think.  The net effect is pretty
much the same since it will send out all the requests before the replies
come in and then handle all of them as they come in.  Especially, for a
system reading multiple websites, if two or more are down in a DeferredList
your system will overlap the timeout periods rather than waiting them out
sequentially.

-Andy

-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

How could you possibly think typing 'import skynet' was a good idea?
http://xkcd.com/521/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090105/940f263d/attachment.html>

From maik.friedmann at googlemail.com  Mon Jan  5 08:55:11 2009
From: maik.friedmann at googlemail.com (Maik Friedmann)
Date: Mon, 5 Jan 2009 17:55:11 +0200
Subject: [Twisted-Python] Perspective broker and inlineCallbacks exception
	handling problem
Message-ID: <21d642ab0901050755l3110cf52x72ef84f794d98d57@mail.gmail.com>

Hello,

I am developing a basic client/server application based on twisted.
For communication purposes I am using perspective broker. I have
problems with inlineCallbacks and remotely raised errors:

My client code looks like this (pseudo code):

class Client:
  @defer.inlineCallbacks
  def login(self, prms):
    self.factory = pb.PBClientFactory()
    reactor.connect(host, port)
    self.perspective = yield self.factory.login()
    self.services = yield self.perspective.callRemote('getClientServices')

When using this class in application, I want to handle errors raised remotely:

@defer.inlineCallbacks
def main():
  client = Client()
  try:
    yield client.login(prms)
  except Exception, e:
    print 'Handled exception:', e

However, no matter what is raised on remote side, except block is
never used. But if I change the code to plain except, exception is
handled:

@defer.inlineCallbacks
def main():
  client = Client()
  try:
    client.login(prms)
  except:
    print 'Some error occurred'

If I rewrite this function using classic deferred style, it works as
excepted (prints error with the correct type):

def eb_failure(failure):
  print type(failure), failure

def cb_success(result):
  print 'OK', result

def main():
  client = Client()
  d = client.login(prms)
  d.addCallbacks(cb_success, eb_failure)

I am purposely raising errors derived from pb.Error. Using the
inlineCallbacks version I can only inspect remote errors with
sys.exc_info(), and that results in a plain string object, which
includes the classname of the original error like
'myerror.MyAuthenticationError'

What am I doing wrong? Is there a way to resolve this?

Regards,
Maik



From drew.smathers at gmail.com  Mon Jan  5 09:53:10 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 5 Jan 2009 11:53:10 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
	<613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
Message-ID: <368574aa0901050853t5d7f2603xa6e63301a42e1517@mail.gmail.com>

On Sun, Jan 4, 2009 at 11:23 PM, Robert Hancock
<hancock.robert at gmail.com> wrote:
>> How many urls are in url_tuples?
> 4 - 32
>> Is there a reason why you're using just one deferred?
> What is the advantage of using more?
>

Concurrency.

-Drew



From terry at jon.es  Mon Jan  5 10:15:11 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 5 Jan 2009 18:15:11 +0100
Subject: [Twisted-Python] Perspective broker and inlineCallbacks exception
	handling problem
In-Reply-To: Your message at 17:55:11 on Monday, 5 January 2009
References: <21d642ab0901050755l3110cf52x72ef84f794d98d57@mail.gmail.com>
Message-ID: <18786.16415.15492.53811@jon.es>

Hi Maik

I'm not an expert on inlineCallbacks, but I know enough to give something
of an answer.

> I am developing a basic client/server application based on twisted.
> For communication purposes I am using perspective broker. I have
> problems with inlineCallbacks and remotely raised errors:
> 
> My client code looks like this (pseudo code):
> 
> class Client:
>   @defer.inlineCallbacks
>   def login(self, prms):
>     self.factory = pb.PBClientFactory()
>     reactor.connect(host, port)
>     self.perspective = yield self.factory.login()
>     self.services = yield self.perspective.callRemote('getClientServices')
> 
> When using this class in application, I want to handle errors raised remotely:
> 
> @defer.inlineCallbacks
> def main():
>   client = Client()
>   try:
>     yield client.login(prms)
>   except Exception, e:
>     print 'Handled exception:', e
> 
> However, no matter what is raised on remote side, except block is
> never used.

The first thing to say is that you shouldn't send us pseudo code. It will
help you understand what's going on if you write a small example and play
with it. And that will help us help you because we'll be able to see
exactly what's going on and run your code ourselves.

Without a real example, it's hard to give a concrete answer. There are
quite a few subtleties involved in using inlineCallbacks, and you're using
it twice.

Below is some working code that has something like the calling pattern you
seem to be trying to set up. If I cause _login to raise an exception, it IS
propagated all the way back to the except Exception clause.


> But if I change the code to plain except, exception is handled:
> 
> @defer.inlineCallbacks
> def main():
>   client = Client()
>   try:
>     client.login(prms)
>   except:
>     print 'Some error occurred'

Note that in the above snippet, you're using inlineCallbacks but you're not
yielding anything. If you try calling this main() function, it will give
you an exception: Failure instance: Traceback: <type
'exceptions.AttributeError'>: 'NoneType' object has no attribute 'send'

That's just an example of the subtleties (and it's not so sublte in this
case), and underlines why you should send us real code.

Are you actually trying to call main()?


> If I rewrite this function using classic deferred style, it works as
> excepted (prints error with the correct type):
> 
> def eb_failure(failure):
>   print type(failure), failure
> 
> def cb_success(result):
>   print 'OK', result
> 
> def main():
>   client = Client()
>   d = client.login(prms)
>   d.addCallbacks(cb_success, eb_failure)

Right. But that code is very different from what's going on behind the
scenes when you use inlineCallbacks.

> I am purposely raising errors derived from pb.Error. Using the
> inlineCallbacks version I can only inspect remote errors with
> sys.exc_info(), and that results in a plain string object, which
> includes the classname of the original error like
> 'myerror.MyAuthenticationError'

How do you raise the error? Let's see the code.

> What am I doing wrong? Is there a way to resolve this?

Sure. But we need to know more first.

Below is some code that might be useful.  It's also worth trying to figure
out how inlineCallbacks does its magic.

Terry

---

#!/usr/bin/python

from twisted.internet import defer, reactor

def _login(d):
    try:
        hello
    except Exception:
        d.errback()
    else:
        d.callback(True)

def login():
    d = defer.Deferred()
    reactor.callLater(1, _login, d)
    return d

class Client:
    @defer.inlineCallbacks
    def login(self, prms):
        yield login()

@defer.inlineCallbacks
def main():
    client = Client()
    try:
        yield client.login(33)
    except Exception, e:
        print 'Handled exception:', e

def ok(result):
    print "ok", result

def nok(failure):
    print "nok", failure

def stop(_):
    reactor.stop()

def go():
    x = main()
    x.addCallback(ok)
    x.addErrback(nok)
    x.addBoth(stop)

if __name__ == '__main__':
    reactor.callLater(0, go)
    reactor.run()



From hancock.robert at gmail.com  Mon Jan  5 21:01:16 2009
From: hancock.robert at gmail.com (Robert Hancock)
Date: Mon, 5 Jan 2009 23:01:16 -0500
Subject: [Twisted-Python] Looping
In-Reply-To: <368574aa0901050853t5d7f2603xa6e63301a42e1517@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
	<613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
	<368574aa0901050853t5d7f2603xa6e63301a42e1517@mail.gmail.com>
Message-ID: <613d56580901052001w1a40145n20ec6d78d779383f@mail.gmail.com>

I understand how the deferreds can create concurrency, but I still
cant' figure out how to get the process to loop correctly

I changed the code to use multiple deffereds, but I feel I'm missing a
basic architectural design on how to get the process to run in a loop.
 Any help would be greatly appreciated.

Case 1
-------------
If I execute if with:
   (RSSFeedStorage(GROUPS)).refreshAllFeeds()
    reactor.run()

If executes perfectly, one time.  Or from a loop in a shell script it
also runs fine multiple times.

I would like to perform the same function every 30 seconds from within
the script, but when I try:
    while True:
        (RSSFeedStorage(GROUPS)).refreshAllFeeds()
        reactor.run()
        time.sleep(5)

Case 2
------------
It executes twice and hangs, and when you hit Ctrl-C the traceback is:

  File "main_rss.py", line 94, in <module>
    reactor.run()
  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
line 1128, in run
    self.mainLoop()
  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
line 1137, in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
line 729, in runUntilCurrent
    f(*a, **kw)
  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
line 527, in stop
    "Can't stop reactor that isn't running.")
twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't running.

Case 3
-------------
I tried th task.LoopingCall() example from the manual and wrote:
    rf = RSSFeedStorage(GROUPS)
    l = task.LoopingCall(rf.refreshAllFeeds())
    l.start(10)
[commented out reactor.stop in sto_working()]

and it raises the following exception, I assume because the function
returns a deferred list.

exceptions.AttributeError: DeferredList instance has no __call__ method



==== Code ======

import os
import time
import xml.sax.saxutils

from twisted.internet import reactor, defer, protocol, task
from twisted.web import client

GROUPS = { 'yahoo' : 'http://finance.yahoo.com/rss/usmarkets',
           'bbc':
'http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml',
           'npr': 'http://www.npr.org/rss/rss.php?id=1006',
           'nytimes':
'http://www.nytimes.com/services/xml/rss/nyt/WorldBusiness.xml'
           }
RSYNC_DIR = '/local/apps/rdretrvl/rdsync/rssfeed'
escape_dict = {'/': '_'}


class RssFeed(object):

    def __init__(self, groupName, feedUrl):
        self.refreshRate = 10
        self.title = ''
        self.groupName = groupName
        self.feedUrl = feedUrl
        self.articles = []
        self.articlesById = {}
        self.lastRefreshTime = 0
        self.refreshing = None

    def refreshIfNeeded(self):
        timeSinceRefersh = time.time() - self.lastRefreshTime
        if timeSinceRefersh > self.refreshRate:
            if not self.refreshing:
                self.refreshing = client.getPage(self.feedUrl).addCallback(
                    self._gotFeedData).addErrback(self._getDataFailed)
            d = defer.Deferred()
            self.refreshing.chainDeferred(d)
            return d
        else:
            return defer.succeed(None)

    def _gotFeedData(self, data):
        print "Loaded feed data from %s" % self.feedUrl
        self.refreshing = None
        self.lastRefreshTime = time.time()
        # write to rsync directory
        name = xml.sax.saxutils.escape(self.feedUrl, escape_dict)
        try:
            fnout = os.path.join(RSYNC_DIR, name)
            fout = open(fnout, 'w')
        except IOError, e:
            print e
            #log.error('Opening %s: %s' % (fnout, e))
            return

        try:
            fout.write(data)
            #log.info('Wrote %s.' % fnout)
            print 'Wrote %s.' % fnout
        except IOError, e:
            print e
            #log.error('Wrting to %s: %s' % (fnout, e))
        finally:
            fout.close()

    def _getDataFailed(self, failure):
        print 'Failed to load RSS data from %s: %s' % (self.feedUrl,
failure.getErrorMessage())
        self.refreshing = None
        return failure

class RSSFeedStorage(object):

    def __init__(self, feeds):
        self.feeds = {}
        for groupName, url in feeds.iteritems():
            self.feeds[groupName] = RssFeed(groupName, url)

    def refreshAllFeeds(self):
        refreshes = [feed.refreshIfNeeded() for feed in self.feeds.values()]
        return defer.DeferredList(refreshes).addCallback(self.stop_working).addErrback(self.handleError)

    def stop_working(self, data):
        reactor.stop()
        print 'Reactor stopped'

    def handleError(self, failure):
        print failure

if __name__ == "__main__":

          {execution code goes here]

On Mon, Jan 5, 2009 at 11:53 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Sun, Jan 4, 2009 at 11:23 PM, Robert Hancock
> <hancock.robert at gmail.com> wrote:
>>> How many urls are in url_tuples?
>> 4 - 32
>>> Is there a reason why you're using just one deferred?
>> What is the advantage of using more?
>>
>
> Concurrency.
>
> -Drew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From hoadley at gmail.com  Mon Jan  5 23:09:21 2009
From: hoadley at gmail.com (Rob Hoadley)
Date: Mon, 5 Jan 2009 22:09:21 -0800
Subject: [Twisted-Python] Looping
In-Reply-To: <613d56580901052001w1a40145n20ec6d78d779383f@mail.gmail.com>
References: <613d56580901041852o70a7d0f1n4fa52a6f2303147a@mail.gmail.com>
	<18785.31134.721239.346967@jon.es>
	<613d56580901042023m1e11a4f0yede18a1fe4b96572@mail.gmail.com>
	<368574aa0901050853t5d7f2603xa6e63301a42e1517@mail.gmail.com>
	<613d56580901052001w1a40145n20ec6d78d779383f@mail.gmail.com>
Message-ID: <9bb390e70901052209o12a9f175h2163b09a9822a366@mail.gmail.com>

So one problem is understanding the reactor.  It's only meant to be
run once.  Some of your code looks like it's trying to start it more
than once.   You only want one started at a time or weird things
happen.  I'd start here and make sure you understand the reactor:

http://twistedmatrix.com/projects/core/documentation/howto/reactor-basics.html

As far as your problem, you should make your URL grabbing service a
twisted service so you can reach your goal of running it as a daemon
and so you can make a programmatic avenue to add new urls to grab.
You'd also want to learn about making twisted services.   As a
previous poster recommends, you have a two straightforward ways to
call things.  reactor.callLater is the one I like to use.  The example
l show you below is going every 10 seconds.

The way to daemonize things is by using twistd using a tac file.  So
there are a number of things you'll need to cover.  You may want to
slowly go through the twisted tutorial.

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

As a teaser,  In your service __init__ you'd create your
self.localUrls aka GROUPS from above as an object complex or simple as
you want.  You may want to carry around more info. want it to persist,
or not.  Below the data doesn't persist as it's pop'd off a deque.
It's up to you to figure out how you want it to work.

Here are some modules you'd probably want to use and a semi working example:

from twisted.internet import  reactor
from twisted.python import  log
from twisted.web import client
from twisted.application import  service
from collections import deque

class URLGrabService(service.Service):

    def __init__ ( self ):
        # self.urls  = deque() something that contains your urls I like deque
        self.call = reactor.callLater(10,self.getPages)

   def startService( self ):
        # implement your start service code if needed
        # twistd would call this from a succesful Application Object
don't call directly
        service.Service.startService( self )

    def stopService( self ):
       # stop your reactor.call
       if self.call:
           self.call.cancel()
       service.Service.stopService( self )

    def getPages( self ):

        if len( self.urls ):
            localUrls = deque()

            while self.urls:
                localQueue.append( self.localUrls.popleft() )

            # clear out the localUrls and move to a localQueue var

            while localQueue:
                urlObj = localQueue.popleft() # mucho faster than a
list doing pop(0)
                log.msg( 'sending %s' % urlObj.url )
                self._getPage( urlObj )
                # I just create a bunch of deferreds

        self.call = reactor.callLater(10,self.getPages)

	def _getPage( self, urlObj ):
		d = client.getPage( urlObj.url )
	        d.addCallback( self._checkWebStatus, urlObj )
	        d.addErrback( self._readdUrl, urlObj )
	        return d

        def _checkWebStatus( self, page, urlObj ):
               # do the work you'd do on a successful grab

        def _readdUrl( self, urlObj ):
                # handle errors... I generally retry them on the next
cycle and set a urlObj.retry +1

Then you'd want a tac file to pull it all together.  Hope this helps.

-rob




On Mon, Jan 5, 2009 at 8:01 PM, Robert Hancock <hancock.robert at gmail.com> wrote:
> I understand how the deferreds can create concurrency, but I still
> cant' figure out how to get the process to loop correctly
>
> I changed the code to use multiple deffereds, but I feel I'm missing a
> basic architectural design on how to get the process to run in a loop.
>  Any help would be greatly appreciated.
>
> Case 1
> -------------
> If I execute if with:
>   (RSSFeedStorage(GROUPS)).refreshAllFeeds()
>    reactor.run()
>
> If executes perfectly, one time.  Or from a loop in a shell script it
> also runs fine multiple times.
>
> I would like to perform the same function every 30 seconds from within
> the script, but when I try:
>    while True:
>        (RSSFeedStorage(GROUPS)).refreshAllFeeds()
>        reactor.run()
>        time.sleep(5)
>
> Case 2
> ------------
> It executes twice and hangs, and when you hit Ctrl-C the traceback is:
>
>  File "main_rss.py", line 94, in <module>
>    reactor.run()
>  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
> line 1128, in run
>    self.mainLoop()
>  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
> line 1137, in mainLoop
>    self.runUntilCurrent()
> --- <exception caught here> ---
>  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
> line 729, in runUntilCurrent
>    f(*a, **kw)
>  File "/usr/local/python26/lib/python2.6/site-packages/Twisted-8.2.0-py2.6-linux-x86_64.egg/twisted/internet/base.py",
> line 527, in stop
>    "Can't stop reactor that isn't running.")
> twisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't running.
>
> Case 3
> -------------
> I tried th task.LoopingCall() example from the manual and wrote:
>    rf = RSSFeedStorage(GROUPS)
>    l = task.LoopingCall(rf.refreshAllFeeds())
>    l.start(10)
> [commented out reactor.stop in sto_working()]
>
> and it raises the following exception, I assume because the function
> returns a deferred list.
>
> exceptions.AttributeError: DeferredList instance has no __call__ method
>
>
>
> ==== Code ======
>
> import os
> import time
> import xml.sax.saxutils
>
> from twisted.internet import reactor, defer, protocol, task
> from twisted.web import client
>
> GROUPS = { 'yahoo' : 'http://finance.yahoo.com/rss/usmarkets',
>           'bbc':
> 'http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml',
>           'npr': 'http://www.npr.org/rss/rss.php?id=1006',
>           'nytimes':
> 'http://www.nytimes.com/services/xml/rss/nyt/WorldBusiness.xml'
>           }
> RSYNC_DIR = '/local/apps/rdretrvl/rdsync/rssfeed'
> escape_dict = {'/': '_'}
>
>
> class RssFeed(object):
>
>    def __init__(self, groupName, feedUrl):
>        self.refreshRate = 10
>        self.title = ''
>        self.groupName = groupName
>        self.feedUrl = feedUrl
>        self.articles = []
>        self.articlesById = {}
>        self.lastRefreshTime = 0
>        self.refreshing = None
>
>    def refreshIfNeeded(self):
>        timeSinceRefersh = time.time() - self.lastRefreshTime
>        if timeSinceRefersh > self.refreshRate:
>            if not self.refreshing:
>                self.refreshing = client.getPage(self.feedUrl).addCallback(
>                    self._gotFeedData).addErrback(self._getDataFailed)
>            d = defer.Deferred()
>            self.refreshing.chainDeferred(d)
>            return d
>        else:
>            return defer.succeed(None)
>
>    def _gotFeedData(self, data):
>        print "Loaded feed data from %s" % self.feedUrl
>        self.refreshing = None
>        self.lastRefreshTime = time.time()
>        # write to rsync directory
>        name = xml.sax.saxutils.escape(self.feedUrl, escape_dict)
>        try:
>            fnout = os.path.join(RSYNC_DIR, name)
>            fout = open(fnout, 'w')
>        except IOError, e:
>            print e
>            #log.error('Opening %s: %s' % (fnout, e))
>            return
>
>        try:
>            fout.write(data)
>            #log.info('Wrote %s.' % fnout)
>            print 'Wrote %s.' % fnout
>        except IOError, e:
>            print e
>            #log.error('Wrting to %s: %s' % (fnout, e))
>        finally:
>            fout.close()
>
>    def _getDataFailed(self, failure):
>        print 'Failed to load RSS data from %s: %s' % (self.feedUrl,
> failure.getErrorMessage())
>        self.refreshing = None
>        return failure
>
> class RSSFeedStorage(object):
>
>    def __init__(self, feeds):
>        self.feeds = {}
>        for groupName, url in feeds.iteritems():
>            self.feeds[groupName] = RssFeed(groupName, url)
>
>    def refreshAllFeeds(self):
>        refreshes = [feed.refreshIfNeeded() for feed in self.feeds.values()]
>        return defer.DeferredList(refreshes).addCallback(self.stop_working).addErrback(self.handleError)
>
>    def stop_working(self, data):
>        reactor.stop()
>        print 'Reactor stopped'
>
>    def handleError(self, failure):
>        print failure
>
> if __name__ == "__main__":
>
>          {execution code goes here]
>
> On Mon, Jan 5, 2009 at 11:53 AM, Drew Smathers <drew.smathers at gmail.com> wrote:
>> On Sun, Jan 4, 2009 at 11:23 PM, Robert Hancock
>> <hancock.robert at gmail.com> wrote:
>>>> How many urls are in url_tuples?
>>> 4 - 32
>>>> Is there a reason why you're using just one deferred?
>>> What is the advantage of using more?
>>>
>>
>> Concurrency.
>>
>> -Drew
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From maik.friedmann at googlemail.com  Tue Jan  6 03:43:58 2009
From: maik.friedmann at googlemail.com (Maik Friedmann)
Date: Tue, 6 Jan 2009 12:43:58 +0200
Subject: [Twisted-Python] Perspective broker and inlineCallbacks exception
	handling problem
In-Reply-To: <18786.16415.15492.53811@jon.es>
References: <21d642ab0901050755l3110cf52x72ef84f794d98d57@mail.gmail.com>
	<18786.16415.15492.53811@jon.es>
Message-ID: <21d642ab0901060243u4a8111ddge6c0e6e0077dafd7@mail.gmail.com>

Hello Again,

> The first thing to say is that you shouldn't send us pseudo code. It will
> help you understand what's going on if you write a small example and play
> with it. And that will help us help you because we'll be able to see
> exactly what's going on and run your code ourselves.

That is right, hopefully this new mail will explain what am I asking.

> Note that in the above snippet, you're using inlineCallbacks but you're not
> yielding anything. If you try calling this main() function, it will give
> you an exception: Failure instance: Traceback: <type
> 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'send'
>
> That's just an example of the subtleties (and it's not so sublte in this
> case), and underlines why you should send us real code.
>
> Are you actually trying to call main()?

You are right again, my mistake.

Anyway, I tried running the code you wrote and it works as expected.
My problem is handling exceptions raised on remote calls (via pb).
Attached three scripts are:

server.py: Server implementation, a basic perspective broker example
that includes a custom checker, which in turn uses inlineCallbacks.
client1.py: Client implementation 1, uses inlineCallbacks
client2.py: Client implementation 2, uses plain deferreds

Clients should be same in functionality AFAIK (noting that I am new to
inlineCallbacks). Both clients have wrong passwords configured, so
that they will fail in checker with a custom exception derived from
pb.Error.

My problem is, with the plain deferred version (client2.py), it is
easy to handle (inspect) the error in a errback since I got a Failure
object. However, for inline callbacks, the only way I can catch the
error is using this ugly code (copied from client1.py):

        try:
            ... (pb related calls)
        except:
            print 'Login Failed:',
            print sys.exc_info()[0]

Even this does not catch the error:

        try:
            ... (pb related calls)
        except Exception, e:
            print 'Login Failed:',
            print sys.exc_info()[0]

Furthermore, inlineCallbacks version also prints this deprecation warning:

/usr/lib/python2.5/site-packages/twisted/python/failure.py:331:
DeprecationWarning: raising string exceptions is deprecated
  return g.throw(self.type, self.value, self.tb)

Is there a better way to do this, or am I missing something? BTW I am
running this on a Ubuntu 8.10 (Twisted 8.1).

Regards,
Maik
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: server.py
URL: </pipermail/twisted-python/attachments/20090106/699fea36/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: client1.py
URL: </pipermail/twisted-python/attachments/20090106/699fea36/attachment-0001.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: client2.py
URL: </pipermail/twisted-python/attachments/20090106/699fea36/attachment-0002.ksh>

From radix at twistedmatrix.com  Tue Jan  6 13:07:34 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 6 Jan 2009 15:07:34 -0500
Subject: [Twisted-Python] ANN: Twisted 8.2 released
Message-ID: <60ed19d40901061207p4260331en8a4021a0dda0df4c@mail.gmail.com>

Version 8.2 of Twisted is now out (actually, it's been out for over a
week now!). You can download it (in Windows, Mac, and source forms)
at:

    http://twistedmatrix.com/

Twisted 8.2 is a major feature release, also including many important bug fixes:

 * twistd now has a --umask option for specifying the umask
 * Log observers can now be configured in .tac files
 * ProcessProtocols can now implement processExited to get reliable
notification of a process exiting
 * FTPClient has many more convenience methods
 * Twisted.words now has a standalone XMPP router
 * Twisted.names now supports NAPTR records
 * Twisted.web can now deal with multi-value headers and supports the
Range header in requests for static files

There have been many additional improvements which you can read all
about in the release notes:

    http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/NEWS?format=raw


What is Twisted? From the web site:

Twisted is an event-driven networking engine written in Python and
licensed under the MIT license.

Twisted projects variously support TCP, UDP, SSL/TLS, multicast, Unix
sockets, a large number of protocols (including HTTP, NNTP, IMAP, SSH,
IRC, FTP, and others), and much more. See more at:

    http://twistedmatrix.com/


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From lasizoillo at gmail.com  Tue Jan  6 14:26:23 2009
From: lasizoillo at gmail.com (lasizoillo)
Date: Tue, 6 Jan 2009 22:26:23 +0100
Subject: [Twisted-Python] Re: [Twisted-web] ANN: Twisted 8.2 released
In-Reply-To: <60ed19d40901061207p4260331en8a4021a0dda0df4c@mail.gmail.com>
References: <60ed19d40901061207p4260331en8a4021a0dda0df4c@mail.gmail.com>
Message-ID: <49414f570901061326v1d500b35ob95c603ca7d4449f@mail.gmail.com>

2009/1/6 Christopher Armstrong <radix at twistedmatrix.com>:
> Version 8.2 of Twisted is now out (actually, it's been out for over a
> week now!). You can download it (in Windows, Mac, and source forms)
> at:
>
>    http://twistedmatrix.com/

This year is for 9.x version, isn't?

A query to cheese shop returns 8.1 Version:

http://pypi.python.org/pypi?%3Aaction=search&term=twisted&submit=search

:-(

Thanks a lot for all twisted contributors

>
> Twisted 8.2 is a major feature release, also including many important bug fixes:
>
>  * twistd now has a --umask option for specifying the umask
>  * Log observers can now be configured in .tac files
>  * ProcessProtocols can now implement processExited to get reliable
> notification of a process exiting
>  * FTPClient has many more convenience methods
>  * Twisted.words now has a standalone XMPP router
>  * Twisted.names now supports NAPTR records
>  * Twisted.web can now deal with multi-value headers and supports the
> Range header in requests for static files
>
> There have been many additional improvements which you can read all
> about in the release notes:
>
>    http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/NEWS?format=raw
>
>
> What is Twisted? From the web site:
>
> Twisted is an event-driven networking engine written in Python and
> licensed under the MIT license.
>
> Twisted projects variously support TCP, UDP, SSL/TLS, multicast, Unix
> sockets, a large number of protocols (including HTTP, NNTP, IMAP, SSH,
> IRC, FTP, and others), and much more. See more at:
>
>    http://twistedmatrix.com/
>
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



From markus at bluegap.ch  Wed Jan  7 04:05:01 2009
From: markus at bluegap.ch (Markus Wanner)
Date: Wed, 07 Jan 2009 12:05:01 +0100
Subject: [Twisted-Python] [Job] Senior Programmer - SQL, Python, C/C++, PHP
Message-ID: <49648C5D.8080800@bluegap.ch>

Hello,

I'm pleased to announce the following position in our team of talented
engineers. I personally enjoy working here and recommend this job to the
dynamic, motivated self-starter looking for his/ her next career step in
the open source world. Please feel free to forward this to anybody
interested.

Based in beautiful Berlin, we are a medium sized but growing database
solutions provider for various industries and the public sector. Our
main product is easydb, a customizable web-based front-end for SQL
databases, which is being used to organize and share multimedia content.
Thanks to our commitment to provide State-of-the-Art technology, the
number of easydb clients is steadily growing.

Due to growth, we are currently seeking to hire a passionate A-class
senior programmer. You should be a good team player and be fluent in
written and spoken English.  We would love to meet with you, if you have
these must-have skills:

 - Excellent SQL Database Knowledge ( Postgres, Oracle prefered )
 - Excellent Linux User Space Knowledge ( Bash Scripting )
 - Excellent Python, C/C++, PHP Knowledge ( Python Twisted Framework )
 - 5 years of Job or Similar Experience

As a group team leader your main task would be implementing new features
and maintaining easydb (PHP) and easydb Media Server (Python Twisted).

We offer you interesting and challenging projects in a stable environment:

 - successful company with a solid growth model and a corporate
   mission you can believe in
 - good working atmosphere within a highly motivated team with
   flat hierarchies
 - guided familiarization and extraordinary cooperativeness
   opportunity to improve your human and technical skills
 - chance to work on your own authority
 - based in Prenzlauer Berg, conveniently located near
   Alexanderplatz in an historical industrial building
 - excellent pay

For consideration please send your full resume in German or English,
your reference projects and/ or a letter of recommendation to
jobs at programmfabrik.de. Your first day would be 30th March 2009, on site
in Berlin.

Kind Regards

Markus Wanner



From alessio.pace at gmail.com  Fri Jan  9 06:23:12 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Fri, 9 Jan 2009 14:23:12 +0100
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
Message-ID: <84987d20901090523m2afeeb44p44d4589982fa9ed0@mail.gmail.com>

Hi,

I would lilke tro listen on a given TCP port and initiate multiple TCP
client connections from the same port, but I'm encountering the classical:

  <class 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98:
Address already in use

My code is:

######################################

    factory = Factory()
    # an almost empy subclass of Protocol
    factory.protocol = TCPServer

    reactor.listenTCP(12345, factory)

    # ClientFactory subclass which simply instantiate a TCPClient Protocol
    client_factory = TCPClientFactory()

    # last tuple is the bindAdress parameter
    reactor.connectTCP(target_addr, 12345, client_factory, 30, (source_addr,
12345))

#######################################

I've tried to look on the Internet and in the source code but I've not found
a proper solution.

Thanks in advance for any suggestion.
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090109/be1f9de2/attachment.html>

From adelagon at gmail.com  Fri Jan  9 07:01:13 2009
From: adelagon at gmail.com (Alvin Delagon)
Date: Fri, 9 Jan 2009 22:01:13 +0800
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
In-Reply-To: <84987d20901090523m2afeeb44p44d4589982fa9ed0@mail.gmail.com>
References: <84987d20901090523m2afeeb44p44d4589982fa9ed0@mail.gmail.com>
Message-ID: <7a01f6c00901090601o77fc0b7fn8dcfbe6cec728c49@mail.gmail.com>

You shouldn't bind your client on a port where your server is listening to.

---
Alvin

On Fri, Jan 9, 2009 at 9:23 PM, Alessio Pace <alessio.pace at gmail.com> wrote:

> Hi,
>
> I would lilke tro listen on a given TCP port and initiate multiple TCP
> client connections from the same port, but I'm encountering the classical:
>
>   <class 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98:
> Address already in use
>
> My code is:
>
> ######################################
>
>     factory = Factory()
>     # an almost empy subclass of Protocol
>     factory.protocol = TCPServer
>
>     reactor.listenTCP(12345, factory)
>
>     # ClientFactory subclass which simply instantiate a TCPClient Protocol
>     client_factory = TCPClientFactory()
>
>     # last tuple is the bindAdress parameter
>     reactor.connectTCP(target_addr, 12345, client_factory, 30,
> (source_addr, 12345))
>
> #######################################
>
> I've tried to look on the Internet and in the source code but I've not
> found a proper solution.
>
> Thanks in advance for any suggestion.
> Alessio Pace.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090109/1c56507c/attachment.html>

From alessio.pace at gmail.com  Fri Jan  9 07:13:10 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Fri, 9 Jan 2009 15:13:10 +0100
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
In-Reply-To: <7a01f6c00901090601o77fc0b7fn8dcfbe6cec728c49@mail.gmail.com>
References: <84987d20901090523m2afeeb44p44d4589982fa9ed0@mail.gmail.com>
	<7a01f6c00901090601o77fc0b7fn8dcfbe6cec728c49@mail.gmail.com>
Message-ID: <84987d20901090613y801067dv9e00e95ec97b14c9@mail.gmail.com>

On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> You shouldn't bind your client on a port where your server is listening to.


I'm following what is written in "Peer-to-Peer Communication Across Network
Address Translators" in order to implement TCP hole punching, and they
suggested to do so..

Regards,
--
Alessio Pace.



>
>
> ---
> Alvin
>
> On Fri, Jan 9, 2009 at 9:23 PM, Alessio Pace <alessio.pace at gmail.com>wrote:
>
>> Hi,
>>
>> I would lilke tro listen on a given TCP port and initiate multiple TCP
>> client connections from the same port, but I'm encountering the classical:
>>
>>   <class 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98:
>> Address already in use
>>
>> My code is:
>>
>> ######################################
>>
>>     factory = Factory()
>>     # an almost empy subclass of Protocol
>>     factory.protocol = TCPServer
>>
>>     reactor.listenTCP(12345, factory)
>>
>>     # ClientFactory subclass which simply instantiate a TCPClient Protocol
>>     client_factory = TCPClientFactory()
>>
>>     # last tuple is the bindAdress parameter
>>     reactor.connectTCP(target_addr, 12345, client_factory, 30,
>> (source_addr, 12345))
>>
>> #######################################
>>
>> I've tried to look on the Internet and in the source code but I've not
>> found a proper solution.
>>
>> Thanks in advance for any suggestion.
>> Alessio Pace.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090109/6d12fd63/attachment.html>

From exarkun at divmod.com  Fri Jan  9 07:29:40 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Jan 2009 09:29:40 -0500
Subject: [Twisted-Python] How to listen on and connect from same TCP
	port with Twisted?
In-Reply-To: <84987d20901090613y801067dv9e00e95ec97b14c9@mail.gmail.com>
Message-ID: <20090109142940.20272.2027493384.divmod.quotient.33864@ohm>

On Fri, 9 Jan 2009 15:13:10 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com> wrote:
>
>> You shouldn't bind your client on a port where your server is listening to.
>
>I'm following what is written in "Peer-to-Peer Communication Across Network
>Address Translators" in order to implement TCP hole punching, and they
>suggested to do so..

Are you talking about section 4.2?  If so, try creating the client before
you create the server.  This is a somewhat arbitrary limitation imposed by
your platform's implementation of the BSD socket API.

Jean-Paul



From toreason at fastmail.fm  Fri Jan  9 14:42:34 2009
From: toreason at fastmail.fm (V S P)
Date: Fri, 09 Jan 2009 16:42:34 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
Message-ID: <1231537354.4396.1293952417@webmail.messagingengine.com>

Hi,
I am sorry I am reasking the same question I asked before
(but I did not get any replies)

Basically wanted to know -- for running Twisted on multiple servers

is there such a thing as a "Naming" server that 
would register all the currently running twisted servers

-- so that asynchronious event dispatching can be done in some
round-robin to available twisted servers


thank you in advance
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - And now for something completely different┘




From glyph at divmod.com  Fri Jan  9 19:47:28 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 10 Jan 2009 02:47:28 -0000
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1231537354.4396.1293952417@webmail.messagingengine.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
Message-ID: <20090110024728.12555.1156756591.divmod.xquotient.3301@weber.divmod.com>

On 9 Jan, 09:42 pm, toreason at fastmail.fm wrote:
>Hi,
>I am sorry I am reasking the same question I asked before
>(but I did not get any replies)
>
>Basically wanted to know -- for running Twisted on multiple servers
>is there such a thing as a "Naming" server that
>would register all the currently running twisted servers
>-- so that asynchronious event dispatching can be done in some
>round-robin to available twisted servers

Not that I know of.  It probably wouldn't be too hard to write such a 
thing for your application, but it might be kind of difficult to make 
one that's general enough to be used for all "twisted servers".

If you write one, please let us know how it goes!



From jarrod at vertigrated.com  Fri Jan  9 20:29:22 2009
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 9 Jan 2009 22:29:22 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1231537354.4396.1293952417@webmail.messagingengine.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
Message-ID: <fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>

2009/1/9 V S P <toreason at fastmail.fm>

> Hi,
> I am sorry I am reasking the same question I asked before
> (but I did not get any replies)
>
> Basically wanted to know -- for running Twisted on multiple servers
>
> is there such a thing as a "Naming" server that
> would register all the currently running twisted servers
>
> -- so that asynchronious event dispatching can be done in some
> round-robin to available twisted servers
>
>
> we used ZeroConf for autodiscovery that way the clients can decide for
themselves which server to connect to.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090109/45ca0e5a/attachment.html>

From toreason at fastmail.fm  Fri Jan  9 21:06:46 2009
From: toreason at fastmail.fm (V S P)
Date: Fri, 09 Jan 2009 23:06:46 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
Message-ID: <1231560406.1745.1293990179@webmail.messagingengine.com>

Thank you for the replies.  Wanted to make sure I was not missing
a 'twisted goodie'

What is ZeroConf?  Can you please point me to the project page
(I searched for some but did not find something twisted/python
specific).

my client will be a program that reads rows of 'requests' from the
database and dispatch them to available twisted servers (I call it
Dispatcher).  Then twisted servers will use the pool of worker threads
(with help of Ampula plugin I guess) to do the work (that will take
hours
of not more).

So there will be just one program that needs to be
aware of all the available servers in my scenario.

Also I can see that some people might have needed a 'proxy'
that sits infront of the cluster of twisted servers and that proxy
has some balancing mechanism.  And if there is any body that has that
solution I would like to know as well.



thank you again.


On Fri, 9 Jan 2009 22:29:22 -0500, "Jarrod Roberson"
<jarrod at vertigrated.com> said:
> 2009/1/9 V S P <toreason at fastmail.fm>
> 
> > Hi,
> > I am sorry I am reasking the same question I asked before
> > (but I did not get any replies)
> >
> > Basically wanted to know -- for running Twisted on multiple servers
> >
> > is there such a thing as a "Naming" server that
> > would register all the currently running twisted servers
> >
> > -- so that asynchronious event dispatching can be done in some
> > round-robin to available twisted servers
> >
> >
> > we used ZeroConf for autodiscovery that way the clients can decide for
> themselves which server to connect to.
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - And now for something completely different┘




From alessio.pace at gmail.com  Sat Jan 10 02:24:46 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Sat, 10 Jan 2009 10:24:46 +0100
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
In-Reply-To: <20090109142940.20272.2027493384.divmod.quotient.33864@ohm>
References: <84987d20901090613y801067dv9e00e95ec97b14c9@mail.gmail.com>
	<20090109142940.20272.2027493384.divmod.quotient.33864@ohm>
Message-ID: <84987d20901100124s781b676ajb7efa44fbf454723@mail.gmail.com>

On Fri, Jan 9, 2009 at 3:29 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Fri, 9 Jan 2009 15:13:10 +0100, Alessio Pace <alessio.pace at gmail.com>
> wrote:
>
>> On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com> wrote:
>>
>>  You shouldn't bind your client on a port where your server is listening
>>> to.
>>>
>>
>> I'm following what is written in "Peer-to-Peer Communication Across
>> Network
>> Address Translators" in order to implement TCP hole punching, and they
>> suggested to do so..
>>
>
> Are you talking about section 4.2?  If so, try creating the client before
> you create the server.  This is a somewhat arbitrary limitation imposed by
> your platform's implementation of the BSD socket API.


Thanks for the suggestion, I'll try this and let you know.

Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090110/40aa9e99/attachment.html>

From dripton at ripton.net  Sat Jan 10 12:27:35 2009
From: dripton at ripton.net (David Ripton)
Date: Sat, 10 Jan 2009 11:27:35 -0800
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1231560406.1745.1293990179@webmail.messagingengine.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
Message-ID: <20090110192735.GA30464@vidar.dreamhost.com>

On 2009.01.09 23:06:46 -0500, V S P wrote:
> What is ZeroConf?  Can you please point me to the project page
> (I searched for some but did not find something twisted/python
> specific).

ZeroConf is the generic protocol name, not a particular project.  The
most popular implementations are Bonjour and Avahi.  Both are portable
and open source.  Macs ship with Bonjour.  Avahi seems more popular on
Linux.

In theory, it's pretty easy to use Avahi from Python.  Avahi is a C
daemon that always runs and does all the network stuff.  It shares
information with other programs via DBus.  Your Python program can
interact with the information using dbus-python.  dbus-python features
an asynchronous interface that should work great with Twisted.

In practice, it all ends in tears because dbus-python is one big
Heisenbug.  After about 18 months with mostly-working service discovery,
we finally gave up on it and wrote our own custom service discovery
protocol.  (Which works well, but doesn't help you because it's
proprietary and IPv6.)

Bonjour appears to have Python bindings; maybe you can try those.  Or
maybe a newer version of dbus-python actually works reliably.

But if not, it's not hard to write your own simple service discovery
protocol.  Create a common multicast group that all your clients listen
to, and that all your servers send a packet of service information to
every few seconds.  Most of the complexity in ZeroConf is about
minimizing the combination of latency and network traffic, so if you
don't need low latency or don't mind a bit more traffic then a simpler
protocol will work fine.

-- 
David Ripton    dripton at ripton.net



From donwsmith at gmail.com  Sat Jan 10 15:27:18 2009
From: donwsmith at gmail.com (Don Smith)
Date: Sat, 10 Jan 2009 14:27:18 -0800
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1231560406.1745.1293990179@webmail.messagingengine.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
Message-ID: <24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>

Why not use a Message Queue? I developed a very similar program to what you
have described, only each agent would connect to the Queue to get their data
to work on. However, I think something like Apache ActiveMQ or AmazonSQS
would be a better approach.

=Don

2009/1/9 V S P <toreason at fastmail.fm>

> Thank you for the replies.  Wanted to make sure I was not missing
> a 'twisted goodie'
>
> What is ZeroConf?  Can you please point me to the project page
> (I searched for some but did not find something twisted/python
> specific).
>
> my client will be a program that reads rows of 'requests' from the
> database and dispatch them to available twisted servers (I call it
> Dispatcher).  Then twisted servers will use the pool of worker threads
> (with help of Ampula plugin I guess) to do the work (that will take
> hours
> of not more).
>
> So there will be just one program that needs to be
> aware of all the available servers in my scenario.
>
> Also I can see that some people might have needed a 'proxy'
> that sits infront of the cluster of twisted servers and that proxy
> has some balancing mechanism.  And if there is any body that has that
> solution I would like to know as well.
>
>
>
> thank you again.
>
>
> On Fri, 9 Jan 2009 22:29:22 -0500, "Jarrod Roberson"
> <jarrod at vertigrated.com> said:
> > 2009/1/9 V S P <toreason at fastmail.fm>
> >
> > > Hi,
> > > I am sorry I am reasking the same question I asked before
> > > (but I did not get any replies)
> > >
> > > Basically wanted to know -- for running Twisted on multiple servers
> > >
> > > is there such a thing as a "Naming" server that
> > > would register all the currently running twisted servers
> > >
> > > -- so that asynchronious event dispatching can be done in some
> > > round-robin to available twisted servers
> > >
> > >
> > > we used ZeroConf for autodiscovery that way the clients can decide for
> > themselves which server to connect to.
> --
>   V S P
>  toreason at fastmail.fm
>
> --
> http://www.fastmail.fm - And now for something completely different┘
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090110/d057d0cb/attachment.html>

From jon at indelible.org  Sat Jan 10 15:50:35 2009
From: jon at indelible.org (Jon Parise)
Date: Sat, 10 Jan 2009 14:50:35 -0800
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <20090110192735.GA30464@vidar.dreamhost.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
	<20090110192735.GA30464@vidar.dreamhost.com>
Message-ID: <1aff89d70901101450v24c8123ej399c61257379d71a@mail.gmail.com>

On Sat, Jan 10, 2009 at 11:27 AM, David Ripton <dripton at ripton.net> wrote:
> On 2009.01.09 23:06:46 -0500, V S P wrote:
>> What is ZeroConf?  Can you please point me to the project page
>> (I searched for some but did not find something twisted/python
>> specific).
>
> ZeroConf is the generic protocol name, not a particular project.  The
> most popular implementations are Bonjour and Avahi.  Both are portable
> and open source.  Macs ship with Bonjour.  Avahi seems more popular on
> Linux.
>
> In theory, it's pretty easy to use Avahi from Python.  Avahi is a C
> daemon that always runs and does all the network stuff.  It shares
> information with other programs via DBus.  Your Python program can
> interact with the information using dbus-python.  dbus-python features
> an asynchronous interface that should work great with Twisted.

Coincidentally, I just wrote up a short article on my experiences
playing with Twisted and Bonjour (via pybonjour).  You can read it
here:

    http://www.indelible.org/ink/twisted-bonjour/

In short, it's quite easy to wrap pybonjour's file descriptor-like
interface in an IReadDescriptor object and add it to the reactor.

-- 
Jon Parise (jon of indelible.org)  ::  "Scientia potentia est"



From exarkun at twistedmatrix.com  Sat Jan 10 22:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Jan 2009 05:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1231650312.27.243268721@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090111/0b6248ae/attachment.html>

From esteve at sindominio.net  Sun Jan 11 01:59:18 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sun, 11 Jan 2009 09:59:18 +0100
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
	<24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>
Message-ID: <200901110959.18222.esteve@sindominio.net>

On Saturday 10 January 2009 23:27:18 Don Smith wrote:
> Why not use a Message Queue? I developed a very similar program to what you
> have described, only each agent would connect to the Queue to get their
> data to work on. However, I think something like Apache ActiveMQ or
> AmazonSQS would be a better approach.

There's also AMQP [1], and (shameless plug) a Twisted-friendly library called 
txAMQP [2], which includes support for easy RPC using Thrift.

Cheers.

1 - http://amqp.org/
2 - https://launchpad.net/txamqp



From rob at 185vfx.com  Sun Jan 11 16:55:03 2009
From: rob at 185vfx.com (Rob Bredow)
Date: Sun, 11 Jan 2009 15:55:03 -0800
Subject: [Twisted-Python] connectionLost not always getting called?
Message-ID: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>

I've implemented a twisted server using the basic.lineReceiver class.  The
client is a socket based client implemented in flash and the connections are
long-lived (minutes or hours).  To handle cleaning up the players when they
disconnect, I'm using the connectionLost function in my player class.  99%
of the time, things work as expected.

However in rare cases, connectionLost is not getting called when the
flash-based client disappears.  Even completely quitting the client's
web-browser does not always trigger a connectionLost call.  I tracked down
one specific instance yesterday where the server thought the client was
still connected even though the client had been gone for 30+ minutes--but
after a few hours the server noticed that the client was gone and then
connectionLost was called like normal.  That made me think that it might be
a problem on the server side and maybe not client related.

I'm starting on a workaround now where the client will issue a "PING" every
30 seconds and the server will use the ping information to manually trigger
loseConnection when needed.  Are there a better workarounds for this, better
practices or some error checking I can do to avoid these intermidant laggy
connectionLost calls?

Thanks in advance.

Rob

P.S.  I've found twisted to have incredible performance compared to
everything else we've tried.  If you're interested you can see the client at
http://www.guessasketch.com/ .  I'm happy to post server code excerpts if it
would be helpful.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090111/c9112933/attachment.html>

From toreason at fastmail.fm  Sun Jan 11 16:58:28 2009
From: toreason at fastmail.fm (V S P)
Date: Sun, 11 Jan 2009 18:58:28 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
	<24f63c200901101427r3c18b29bx7d78461a622fdaeb@mail.gmail.com>
Message-ID: <1231718308.31243.1294199569@webmail.messagingengine.com>

Hi, I thought that 
MQ is quite 'heavy' for my needs 

Basically the whole system allows users to request 'reports'
and those reports can rung for days (or hours).

Instead of having 'one' persistent queue (or a service)
such as provided for typical MQ implementations -- I thought
just to have a 'little' message queue that for each user -- that
would be visible from their profile
(since there is no 'admin' interface to administer 'jobs' as in typical
message queues)


So I just simply planned a process scan each profiles queue,
and send the job requests in round robin to available twisted servers.

You might ask -- well you will store events to be dispatched in 
a table with profile IDs -- so that's what message queues do anyways.

However, the system is built such there is more than one database
instance
(where users are destributed based on a hashing scheme acrsoss multiple
databases) -- so it is not simply one table (that's also why there is
a need for multiple Twsited servers  as they would serve their own
'partitions' in the system)


On the other hand ... may be I need to look at open source and free
MQ solutions to see if I is easier to 


Thank you again for all the suggestions so far,
I am writting up a small summary of the replies for
furthere analysis.

On Sat, 10 Jan 2009 14:27:18 -0800, "Don Smith" <donwsmith at gmail.com>
said:
> Why not use a Message Queue? I developed a very similar program to what
> you
> have described, only each agent would connect to the Queue to get their
> data
> to work on. However, I think something like Apache ActiveMQ or AmazonSQS
> would be a better approach.
> 
> =Don
> 
> 2009/1/9 V S P <toreason at fastmail.fm>
> 
> > Thank you for the replies.  Wanted to make sure I was not missing
> > a 'twisted goodie'
> >
> > What is ZeroConf?  Can you please point me to the project page
> > (I searched for some but did not find something twisted/python
> > specific).
> >
> > my client will be a program that reads rows of 'requests' from the
> > database and dispatch them to available twisted servers (I call it
> > Dispatcher).  Then twisted servers will use the pool of worker threads
> > (with help of Ampula plugin I guess) to do the work (that will take
> > hours
> > of not more).
> >
> > So there will be just one program that needs to be
> > aware of all the available servers in my scenario.
> >
> > Also I can see that some people might have needed a 'proxy'
> > that sits infront of the cluster of twisted servers and that proxy
> > has some balancing mechanism.  And if there is any body that has that
> > solution I would like to know as well.
> >
> >
> >
> > thank you again.
> >
> >
> > On Fri, 9 Jan 2009 22:29:22 -0500, "Jarrod Roberson"
> > <jarrod at vertigrated.com> said:
> > > 2009/1/9 V S P <toreason at fastmail.fm>
> > >
> > > > Hi,
> > > > I am sorry I am reasking the same question I asked before
> > > > (but I did not get any replies)
> > > >
> > > > Basically wanted to know -- for running Twisted on multiple servers
> > > >
> > > > is there such a thing as a "Naming" server that
> > > > would register all the currently running twisted servers
> > > >
> > > > -- so that asynchronious event dispatching can be done in some
> > > > round-robin to available twisted servers
> > > >
> > > >
> > > > we used ZeroConf for autodiscovery that way the clients can decide for
> > > themselves which server to connect to.
> > --
> >   V S P
> >  toreason at fastmail.fm
> >
> > --
> > http://www.fastmail.fm - And now for something completely different┘
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - IMAP accessible web-mail




From toreason at fastmail.fm  Sun Jan 11 17:14:09 2009
From: toreason at fastmail.fm (V S P)
Date: Sun, 11 Jan 2009 19:14:09 -0500
Subject: [Twisted-Python] [Q] Naming Service for Twisted Servers
In-Reply-To: <1aff89d70901101450v24c8123ej399c61257379d71a@mail.gmail.com>
References: <1231537354.4396.1293952417@webmail.messagingengine.com>
	<fa3d0c740901091929h189e4e07v5e5c5ca788164f4a@mail.gmail.com>
	<1231560406.1745.1293990179@webmail.messagingengine.com>
	<20090110192735.GA30464@vidar.dreamhost.com>
	<1aff89d70901101450v24c8123ej399c61257379d71a@mail.gmail.com>
Message-ID: <1231719249.2133.1294197919@webmail.messagingengine.com>


Thank you for all the replies regarding my question
of the Twisted Naming Server and in general multi-machine Event
Dispatching systems.

So far my understanding from all the replies is as follows

1) there is no pre-built naming server for twisted

2) there is no multi-machine message/event dispatching for twisted
(but there is, of course, a communication mechanism called Prospective
Broker)

3) for message/event dispatching people use Message Queue brokers
http://activemq.apache.org/  (Java)
or more peer-oriented http://www.openamq.org/  (C++ but no windows
support)

4) Naming service is considered to be part of 'Resource Discovery'
and therefore generic resource discovery tools can be deployed
such as Apple's Bonjour or Avahi (C, does not support windows)

5) Message Queueing / Brokers have several python libraries available
and some of them are already 'twisted-friendly'
such as https://launchpad.net/txamqp for O-AMQ
or http://pypi.python.org/pypi/stomper/0.1.0 for MQ 


6) message queuing servers, of course, already have name service
(that's part of the solution)

7)dbus-python library for python (the one that can be used to
communicate
with Bonjour or Avahi) appeared to be difficult to deploy.  
However, bonjour or Avahi specific python clients/examples are available
http://www.indelible.org/ink/twisted-bonjour/
http://avahi.org/wiki/PythonPublishExample


8) I did not ask this question -- but I was struggling to understand
how people implement long-running DB requests queries in twisted if it
if the whole framework is just single threaded (because of python GIL)
and cannot use more than one CPU core in parallel.

So far my understanding on that is as follows:
   a) Twisted developers can use Ampula for creating a pool of processes
   and asking the processes do the work (processes run an independed
   python
interpreter).  
   b) Twisted threads, while will use global lock on python operations
   -- will call concurently the C-level libraries that do database
   access (or other activities that are implemented in C libraries).  So
   the Twisted Event loop will not block waiting for a DB to respond, as
   long as the DB request was issued from a Thread.
   c) Twisted (now including Asynchronious event loop)
 works on JPython -- and that one (unlike CPython) has a fully threaded 
( and may be even more efficient) virtual machine and garbage collector.



Vlad
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Faster than the air-speed velocity of an
                          unladen european swallow




From exarkun at divmod.com  Sun Jan 11 18:27:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Jan 2009 20:27:19 -0500
Subject: [Twisted-Python] connectionLost not always getting called?
In-Reply-To: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
Message-ID: <20090112012719.9754.586942866.divmod.quotient.755@henry.divmod.com>

On Sun, 11 Jan 2009 15:55:03 -0800, Rob Bredow <rob at 185vfx.com> wrote:
>I've implemented a twisted server using the basic.lineReceiver class.  The
>client is a socket based client implemented in flash and the connections are
>long-lived (minutes or hours).  To handle cleaning up the players when they
>disconnect, I'm using the connectionLost function in my player class.  99%
>of the time, things work as expected.
>
>However in rare cases, connectionLost is not getting called when the
>flash-based client disappears.  Even completely quitting the client's
>web-browser does not always trigger a connectionLost call.  I tracked down
>one specific instance yesterday where the server thought the client was
>still connected even though the client had been gone for 30+ minutes--but
>after a few hours the server noticed that the client was gone and then
>connectionLost was called like normal.  That made me think that it might be
>a problem on the server side and maybe not client related.
>
>I'm starting on a workaround now where the client will issue a "PING" every
>30 seconds and the server will use the ping information to manually trigger
>loseConnection when needed.  Are there a better workarounds for this, better
>practices or some error checking I can do to avoid these intermidant laggy
>connectionLost calls?

This is a FAQ, so I've just added it to the FAQ.  Please let me know what
you think of the entry:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhyisntmyconnectionLostmethodcalled

Jean-Paul



From andrew-twisted at puzzling.org  Sun Jan 11 18:59:06 2009
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 12 Jan 2009 12:59:06 +1100
Subject: [Twisted-Python] connectionLost not always getting called?
In-Reply-To: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
References: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
Message-ID: <20090112015906.GD7522@steerpike.home.puzzling.org>

Rob Bredow wrote:
[...]
> web-browser does not always trigger a connectionLost call.  I tracked down one
> specific instance yesterday where the server thought the client was still
> connected even though the client had been gone for 30+ minutes--but after a few
> hours the server noticed that the client was gone and then connectionLost was
> called like normal.  That made me think that it might be a problem on the
> server side and maybe not client related.
> 
> I'm starting on a workaround now where the client will issue a "PING" every 30
> seconds and the server will use the ping information to manually trigger
> loseConnection when needed.  Are there a better workarounds for this, better
> practices or some error checking I can do to avoid these intermidant laggy
> connectionLost calls?

This is a property of TCP.  If a peer drops off the network suddenly, your side
never receives a RST packet, and if your side never tries sending to a dead
connection like this then TCP won't notice that the peer is now unreachable.

You can probably enable something called "TCP keepalives" in your OS, but
they'll still tend to take a few hours to notice an unreachable peer.  So your
workaround is about as good as it gets.

-Andrew.




From glyph at divmod.com  Sun Jan 11 19:23:11 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Jan 2009 02:23:11 -0000
Subject: [Twisted-Python] connectionLost not always getting called?
In-Reply-To: <20090112012719.9754.586942866.divmod.quotient.755@henry.divmod.com>
References: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
	<20090112012719.9754.586942866.divmod.quotient.755@henry.divmod.com>
Message-ID: <20090112022311.12555.1315328793.divmod.xquotient.3342@weber.divmod.com>


On 01:27 am, exarkun at divmod.com wrote:
>This is a FAQ, so I've just added it to the FAQ.  Please let me know 
>what
>you think of the entry:
>
>http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhyisntmyconnectionLostmethodcalled

Thanks for finally adding that to the FAQ.  It seems to me that it's 
important to clarify that this is a problem with TCP, not with Twisted, 
before getting into the details, though; communicating that a non- 
Twisted program would have this same problem.  You want me to have a go 
at editing it?



From rob at 185vfx.com  Sun Jan 11 22:37:42 2009
From: rob at 185vfx.com (Rob Bredow)
Date: Sun, 11 Jan 2009 21:37:42 -0800
Subject: [Twisted-Python] connectionLost not always getting called?
In-Reply-To: <20090112022311.12555.1315328793.divmod.xquotient.3342@weber.divmod.com>
References: <fc181d510901111555p242b094g8a7d8d7445a5a1f9@mail.gmail.com>
	<20090112012719.9754.586942866.divmod.quotient.755@henry.divmod.com>
	<20090112022311.12555.1315328793.divmod.xquotient.3342@weber.divmod.com>
Message-ID: <fc181d510901112137l16023tfcf7691d1ae7c976@mail.gmail.com>

Thanks so much for the quick help.  I had done some searching and stumbled
into that 2 hour TCP/IP limitation but I didn't find anything as clear as
your FAQ entry.  My messages every 30 seconds seem to have solved my issue
and I'm glad to know it's a TCP/IP thing not related to my server or
twisted.

Thanks again.

-Rob
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090111/5534378c/attachment.html>

From dialtone at gmail.com  Sun Jan 11 23:56:48 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sun, 11 Jan 2009 22:56:48 -0800
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <1231021930.1898.1292840297@webmail.messagingengine.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
Message-ID: <8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>


On Jan 3, 2009, at 2:32 PM, V S P wrote:

> Thank you so much
> Yes, this plugin is what I am looking for process pool
> "
>    """
>    This plugin provides ways to create a process pool service in your
>    system listening on a given port and interface and answering to a
>    given set of commands.
>    """
> "
>
> So I just need to inherit from
> AMPConnector and have a trully scalable server!

No. Wait there... AMPConnector is only a frontend and it's not
made to be inherited. You might want to inherit it only to add some
weird functionality to it. Another option is to not use it but create
a new one to avoid using AMP as a child-parent protocol.

You really want to subclass AMPChild and create a good AMPParent
by subclassing amp.AMP.

There are some examples in the code and to expose a process pool
on the net you shouldn't do anything more than adding the right argument
to the command line twistd plugin.

> Two more questions:
>
> What's the mechanism of 'registring' multiple twisted servers
> (something similar to a Name server in Corba) -- so an event
> dispatching client can 'discover' the servers running on
> multiple machines

I haven't written such a mechanism yet. It shouldn't be too hard to have
a simple version but having everything go through the same master node
is kind of problematic from a scalability point of view. It would be  
better to
have a routing system where each system knows each other but probably
this has a lot of memory overhead to keep in memory the list of nearby
servers... If anyone is willing to spend some time to design some kind  
of
solution for this I'd be happy to implement it in ampoule. I'm pretty  
sure that
this was done in other projects already.

> And how does one run multiple XAMPP servers in twisted -- such
> that work to each server is distributed either by a hash on a user
> name or some other way (or does such mechanism exist).

It's just AMP, XMPP is another protocol.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090111/28adefbe/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20090111/28adefbe/attachment.sig>

From alessio.pace at gmail.com  Mon Jan 12 02:23:00 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Mon, 12 Jan 2009 10:23:00 +0100
Subject: [Twisted-Python] How to listen on and connect from same TCP port
	with Twisted?
In-Reply-To: <84987d20901100124s781b676ajb7efa44fbf454723@mail.gmail.com>
References: <84987d20901090613y801067dv9e00e95ec97b14c9@mail.gmail.com>
	<20090109142940.20272.2027493384.divmod.quotient.33864@ohm>
	<84987d20901100124s781b676ajb7efa44fbf454723@mail.gmail.com>
Message-ID: <84987d20901120123s21f9a2deo616c70510012cf8d@mail.gmail.com>

On Sat, Jan 10, 2009 at 10:24 AM, Alessio Pace <alessio.pace at gmail.com>wrote:

>
>
> On Fri, Jan 9, 2009 at 3:29 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>
>> On Fri, 9 Jan 2009 15:13:10 +0100, Alessio Pace <alessio.pace at gmail.com>
>> wrote:
>>
>>> On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com>
>>> wrote:
>>>
>>>  You shouldn't bind your client on a port where your server is listening
>>>> to.
>>>>
>>>
>>> I'm following what is written in "Peer-to-Peer Communication Across
>>> Network
>>> Address Translators" in order to implement TCP hole punching, and they
>>> suggested to do so..
>>>
>>
>> Are you talking about section 4.2?  If so, try creating the client before
>> you create the server.  This is a somewhat arbitrary limitation imposed by
>> your platform's implementation of the BSD socket API.
>
>
> Thanks for the suggestion, I'll try this and let you know.
>

Well, apparently at least on my Linux box, I still have the same address
already bound error even if I first do connect() and then listen() using the
Twisted reactor APIs  (connectTcp(), listenTcp() ).

Any clue?
--
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090112/3a20e4fc/attachment.html>

From exarkun at divmod.com  Mon Jan 12 06:35:37 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Jan 2009 08:35:37 -0500
Subject: [Twisted-Python] How to listen on and connect from same TCP
	port with Twisted?
In-Reply-To: <84987d20901120123s21f9a2deo616c70510012cf8d@mail.gmail.com>
Message-ID: <20090112133537.9754.296378441.divmod.quotient.1244@henry.divmod.com>

On Mon, 12 Jan 2009 10:23:00 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>On Sat, Jan 10, 2009 at 10:24 AM, Alessio Pace <alessio.pace at gmail.com>wrote:
>
>>
>>
>> On Fri, Jan 9, 2009 at 3:29 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>>
>>> On Fri, 9 Jan 2009 15:13:10 +0100, Alessio Pace <alessio.pace at gmail.com>
>>> wrote:
>>>
>>>> On Fri, Jan 9, 2009 at 3:01 PM, Alvin Delagon <adelagon at gmail.com>
>>>> wrote:
>>>>
>>>>  You shouldn't bind your client on a port where your server is listening
>>>>> to.
>>>>>
>>>>
>>>> I'm following what is written in "Peer-to-Peer Communication Across
>>>> Network
>>>> Address Translators" in order to implement TCP hole punching, and they
>>>> suggested to do so..
>>>>
>>>
>>> Are you talking about section 4.2?  If so, try creating the client before
>>> you create the server.  This is a somewhat arbitrary limitation imposed by
>>> your platform's implementation of the BSD socket API.
>>
>>
>> Thanks for the suggestion, I'll try this and let you know.
>>
>
>Well, apparently at least on my Linux box, I still have the same address
>already bound error even if I first do connect() and then listen() using the
>Twisted reactor APIs  (connectTcp(), listenTcp() ).
>
>Any clue?

You might have to create and connect the socket before giving it to Twisted
then.

Jean-Paul



From Zoran.Bosnjak at sloveniacontrol.si  Mon Jan 12 15:09:40 2009
From: Zoran.Bosnjak at sloveniacontrol.si (=?iso-8859-1?Q?Zoran_Bosnjak?=)
Date: Mon, 12 Jan 2009 23:09:40 +0100
Subject: [Twisted-Python] Manhole and StandardIO
Message-ID: <97CB875FEE63B24BA0D0E5B759F22D5BE6FCB5@soncek1.sloveniacontrol.si>

Hello all,
I would like to have a simple console python interactive shell,
powered by twisted.

I am looking for something like this...
---
from twisted.internet import reactor, stdio
from twisted.conch.manhole import Manhole

stdio.StandardIO(Manhole())
reactor.run()
---
... but it does not work.

Please advice.

Thanks,
Zoran
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090112/5a95b7a3/attachment.html>

From exarkun at divmod.com  Mon Jan 12 15:21:31 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Jan 2009 17:21:31 -0500
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <97CB875FEE63B24BA0D0E5B759F22D5BE6FCB5@soncek1.sloveniacontrol.si>
Message-ID: <20090112222131.9754.163298153.divmod.quotient.1372@henry.divmod.com>

On Mon, 12 Jan 2009 23:09:40 +0100, Zoran Bosnjak <zoran.bosnjak at sloveniacontrol.si> wrote:
>Hello all,
>I would like to have a simple console python interactive shell,
>powered by twisted.
>
>I am looking for something like this...
>---
>from twisted.internet import reactor, stdio
>from twisted.conch.manhole import Manhole
>
>stdio.StandardIO(Manhole())
>reactor.run()
>---
>... but it does not work.
>

StandardIO accepts an IProtocol provider as an argument.  Manhole does not
implement IProtocol, it implements ITerminalProtocol.  So you cannot use
these two classes together like this.

See twisted/conch/stdio.py for examples of how to use manhole on stdio.

Jean-Paul



From glyph at divmod.com  Mon Jan 12 15:53:29 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Jan 2009 22:53:29 -0000
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <20090112222131.9754.163298153.divmod.quotient.1372@henry.divmod.com>
References: <97CB875FEE63B24BA0D0E5B759F22D5BE6FCB5@soncek1.sloveniacontrol.si>
	<20090112222131.9754.163298153.divmod.quotient.1372@henry.divmod.com>
Message-ID: <20090112225329.12555.1585885174.divmod.xquotient.3496@weber.divmod.com>


On 10:21 pm, exarkun at divmod.com wrote:
>On Mon, 12 Jan 2009 23:09:40 +0100, Zoran Bosnjak 
><zoran.bosnjak at sloveniacontrol.si> wrote:
>>Hello all,
>>I would like to have a simple console python interactive shell,
>>powered by twisted.

>See twisted/conch/stdio.py for examples of how to use manhole on stdio.

It doesn't sound like you need to write any code.  Just run the module 
exarkun mentions:

    python -m twisted/conch/stdio

and you should get an interactive shell.

(If you are using GNOME, you may have to use the workaround mentioned on 
ticket 2637: <http://twistedmatrix.com/trac/ticket/2637>.)



From exarkun at divmod.com  Mon Jan 12 16:17:28 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Jan 2009 18:17:28 -0500
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <20090112225329.12555.1585885174.divmod.xquotient.3496@weber.divmod.com>
Message-ID: <20090112231728.9754.1182865694.divmod.quotient.1392@henry.divmod.com>

On Mon, 12 Jan 2009 22:53:29 -0000, glyph at divmod.com wrote:
>
>On 10:21 pm, exarkun at divmod.com wrote:
>>On Mon, 12 Jan 2009 23:09:40 +0100, Zoran Bosnjak 
>><zoran.bosnjak at sloveniacontrol.si> wrote:
>>>Hello all,
>>>I would like to have a simple console python interactive shell,
>>>powered by twisted.
>
>>See twisted/conch/stdio.py for examples of how to use manhole on stdio.
>
>It doesn't sound like you need to write any code.  Just run the module 
>exarkun mentions:
>
>    python -m twisted/conch/stdio
>
>and you should get an interactive shell.
>
>(If you are using GNOME, you may have to use the workaround mentioned on 
>ticket 2637: <http://twistedmatrix.com/trac/ticket/2637>.)
>

I think you mixed up #2637 with a different bug (which has been fixed).

Jean-Paul



From terry at jon.es  Mon Jan 12 18:36:24 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 13 Jan 2009 02:36:24 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
Message-ID: <18795.61464.631046.43215@jon.es>

I think I've finally gotten to the bottom of why exceptions sometimes lose
their tracebacks when using inlineCallbacks.

I've spent many hours trying to track down problems that result from
this. I find the code handling failures, deferreds, and inlineCallbacks
non-trivial even in isolation, let alone when those things start
interacting. There are a lot of things that are subtle and some that I
still haven't gotten to the bottom of. The following ignores some of these
subtleties in the interest of showing how things can go wrong for the
innocent user of inlineCallbacks. I'm happy to go into detail later.

First, consider this:

    import sys
    from twisted.internet import defer
    from twisted.python import failure

    d = defer.Deferred()
    try:
        1 / 0
    except Exception:
        info = sys.exc_info()
        f = failure.Failure(*info)
        print "f.tb is %r" % f.tb
        d.errback(f)
        print "f.tb is %r" % f.tb


Which prints:

    f.tb is <traceback object at 0x9a19e0>
    f.tb is None
    Unhandled error in Deferred:

That's the heart of the issue. We make a failure object, it has a
traceback, but after passing it to the errback method on a deferred the
traceback is gone.

This happens because _runCallbacks in defer.py finds no call/errback
functions to call on the deferred, drops into this code:

        if isinstance(self.result, failure.Failure):
            self.result.cleanFailure()

which sets the __dict__ on the failure object to the result of the
failure's __getstate__ method, which sets the traceback to None:

        # added 2003-06-23. See comment above in __init__
        c['tb'] = None

But the comment in __init__ seems to have been deleted.

So in summary, passing the failure to errback() results in its traceback
disappearing.


(Note that, as mentioned, there are subtleties here. E.g., try calling
failure() with no args. The above is just a very simple example.)


So what does this have to do with inlineCallbacks?

Briefly: when you decorate a function F1 with inlineCallbacks, a new
function F2 is created. When you call F2, you get back a deferred. But
before you get that deferred, F2 calls F1. F1 returns a generator G (it
yields, right?). F2 passes that generator G to _inlineCallbacks.
_inlineCallbacks initially starts G by calling its send (passing None). If
G raises an exception (other than StopIteration or returning a final value
via _DefGen_Return), _inlineCallbacks catches it via:

        except:
            deferred.errback()
            return deferred

I.e., it calls the errback on the deferred that F2 is about to hand back to
your original code (which called the inlineCallbacks decorated F1 function).

Unfortunately, the result of this is as above. A failure is created in
errback, it correctly has a traceback on it, but the traceback is then
immediately removed in _runCallbacks!

By the time your code gets its deferred back from calling the
inlineCallbacks decorated F1, the exception has fired, the errback has been
called, the deferred you get has its result sitting there waiting for you,
but the traceback is gone, gone, gone. Without the original traceback, you
end up cursing inlineCallbacks and digging around in what your function
called and what that called, and so on. Not fun :-(

I'll stop for now. I have some suggestions for fixes, but I'm already in
over my head.

BTW, I get the impression that the Twisted core developers don't really use
inlineCallbacks. Is that correct?

Terry



From phil at bubblehouse.org  Mon Jan 12 19:58:44 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 12 Jan 2009 21:58:44 -0500
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <18795.61464.631046.43215@jon.es>
References: <18795.61464.631046.43215@jon.es>
Message-ID: <04A13F3D-57B3-469B-A825-011B2FF852C2@bubblehouse.org>

On Jan 12, 2009, at 8:36 PM, Terry Jones wrote:
> I think I've finally gotten to the bottom of why exceptions  
> sometimes lose
> their tracebacks when using inlineCallbacks.
[snip snip]
> I'll stop for now. I have some suggestions for fixes, but I'm  
> already in
> over my head.
>
> BTW, I get the impression that the Twisted core developers don't  
> really use
> inlineCallbacks. Is that correct?

I don't have a whole lot to contribute here, except to encourage  
discussion of this issue. I *love* inlineCallbacks, and have found the  
availability of the technique has made me far more inclined to chose  
Twisted as the basis for applications that will require a great deal  
of serial-but-asynchronous operations.

I don't know if I've run into this particular issue, but I know that I  
have run into some error-handling issues when using inlineCallbacks  
that I wasn't able to debug in the usual ways, but I think I ended up  
just fixing the bug that I was trying to catch at the time.

My impression is that there's a reluctance to advertise  
inlineCallbacks too loudly, since using it still requires a thorough  
understanding of Deferreds and asynchronous development to be used  
effectively. New users really need to be starting with the 'old- 
fashioned-way', and even experienced users must be careful that their  
'mental model' of what the code is doing actually reflects reality...

-phil



From Zoran.Bosnjak at sloveniacontrol.si  Tue Jan 13 02:08:06 2009
From: Zoran.Bosnjak at sloveniacontrol.si (=?iso-8859-1?Q?Zoran_Bosnjak?=)
Date: Tue, 13 Jan 2009 10:08:06 +0100
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <20090112222131.9754.163298153.divmod.quotient.1372@henry.divmod.com>
Message-ID: <97CB875FEE63B24BA0D0E5B759F22D5B018532C0@soncek1.sloveniacontrol.si>

> StandardIO accepts an IProtocol provider as an argument.  
> Manhole does not implement IProtocol, it implements 
> ITerminalProtocol.  So you cannot use these two classes 
> together like this.
> 
> See twisted/conch/stdio.py for examples of how to use manhole 
> on stdio.

Thanks for your suggestion. It works well.

But the screen is cleared before prompt is displayed. Can I prevent this?

Here is my script:
---
import os, tty, sys, termios

from twisted.internet import reactor, stdio

from twisted.conch.insults.insults import ServerProtocol 
from twisted.conch.manhole import Manhole

class ConsoleManhole(Manhole):
    def connectionLost(self, reason):
        reactor.stop()

fd = sys.__stdin__.fileno()
oldSettings = termios.tcgetattr(fd)
tty.setraw(fd)
try:
    p = ServerProtocol(ConsoleManhole)
    stdio.StandardIO(p)
    reactor.run()
finally:
    termios.tcsetattr(fd, termios.TCSANOW, oldSettings)
    os.write(fd, "\r\x1bc\r")
---

Zoran



From exarkun at divmod.com  Tue Jan 13 07:03:15 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Jan 2009 09:03:15 -0500
Subject: [Twisted-Python] Manhole and StandardIO
In-Reply-To: <97CB875FEE63B24BA0D0E5B759F22D5B018532C0@soncek1.sloveniacontrol.si>
Message-ID: <20090113140315.9754.635859262.divmod.quotient.1859@henry.divmod.com>

On Tue, 13 Jan 2009 10:08:06 +0100, Zoran Bosnjak <zoran.bosnjak at sloveniacontrol.si> wrote:
>> StandardIO accepts an IProtocol provider as an argument.
>> Manhole does not implement IProtocol, it implements
>> ITerminalProtocol.  So you cannot use these two classes
>> together like this.
>>
>> See twisted/conch/stdio.py for examples of how to use manhole
>> on stdio.
>
>Thanks for your suggestion. It works well.
>
>But the screen is cleared before prompt is displayed. Can I prevent this?

This is one of the unresolved problems mentioned in <http://twistedmatrix.com/trac/ticket/2991>.  The comment I left on that ticket regarding this was:

    Clearing the screen is a side-effect of resetting the terminal.
    Resetting the terminal is a shortcut for figuring out what the
    current terminate state is (for example, the position of the cursor,
    the current character attributes, etc). All of those things could
    be dealt with separately to avoid also clearing the screen.

So this can be fixed, it's just a matter of programming. :)

Jean-Paul



From alessio.pace at gmail.com  Tue Jan 13 07:34:19 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Tue, 13 Jan 2009 15:34:19 +0100
Subject: [Twisted-Python] connectTCP() passing a ClientFactory: how to get
	the local port of the created client socket?
Message-ID: <84987d20901130634w8d6ca95j554182b6aa3e22a2@mail.gmail.com>

Hi,

I'm having some difficulties in trying to figure out how to get a reference
to the connector or anyway the local port to which a client socket is bound
in a reactor.connectTCP() call, where the bindAddress is not passed as
parameter, thus letting the OS pick an available port.

In fact in the ClientFactory has a buildProtocol(self, addr) method, but
'addr' is the address of the remote endpoint of the client socket created..

Thanks in advance for any suggestion.
Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090113/7fc70be0/attachment.html>

From exarkun at divmod.com  Tue Jan 13 07:42:38 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Jan 2009 09:42:38 -0500
Subject: [Twisted-Python] connectTCP() passing a ClientFactory: how to
	get the local port of the created client socket?
In-Reply-To: <84987d20901130634w8d6ca95j554182b6aa3e22a2@mail.gmail.com>
Message-ID: <20090113144238.9754.1723923745.divmod.quotient.1873@henry.divmod.com>

On Tue, 13 Jan 2009 15:34:19 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>Hi,
>
>I'm having some difficulties in trying to figure out how to get a reference
>to the connector or anyway the local port to which a client socket is bound
>in a reactor.connectTCP() call, where the bindAddress is not passed as
>parameter, thus letting the OS pick an available port.
>
>In fact in the ClientFactory has a buildProtocol(self, addr) method, but
>'addr' is the address of the remote endpoint of the client socket created..
>
>Thanks in advance for any suggestion.

The protocol gets connected to a transport with a `getHost´ method which
returns an IPv4Address object with `host´ and `port´ attributes.  You
can't get this information from the connector, since the connector exists
for longer than a single connection.

Jean-Paul



From alessio.pace at gmail.com  Tue Jan 13 08:06:21 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Tue, 13 Jan 2009 16:06:21 +0100
Subject: [Twisted-Python] connectTCP() passing a ClientFactory: how to get
	the local port of the created client socket?
In-Reply-To: <20090113144238.9754.1723923745.divmod.quotient.1873@henry.divmod.com>
References: <84987d20901130634w8d6ca95j554182b6aa3e22a2@mail.gmail.com>
	<20090113144238.9754.1723923745.divmod.quotient.1873@henry.divmod.com>
Message-ID: <84987d20901130706u6d01bd42r6bf3768674089568@mail.gmail.com>

On Tue, Jan 13, 2009 at 3:42 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Tue, 13 Jan 2009 15:34:19 +0100, Alessio Pace <alessio.pace at gmail.com>
> wrote:
>
>> Hi,
>>
>> I'm having some difficulties in trying to figure out how to get a
>> reference
>> to the connector or anyway the local port to which a client socket is
>> bound
>> in a reactor.connectTCP() call, where the bindAddress is not passed as
>> parameter, thus letting the OS pick an available port.
>>
>> In fact in the ClientFactory has a buildProtocol(self, addr) method, but
>> 'addr' is the address of the remote endpoint of the client socket
>> created..
>>
>> Thanks in advance for any suggestion.
>>
>
> The protocol gets connected to a transport with a `getHost´ method which
> returns an IPv4Address object with `host´ and `port´ attributes.  You
> can't get this information from the connector, since the connector exists
> for longer than a single connection.


Thanks a lot, this perfectly replies to my question. I should have looked a
bit more in the sources :-)

Regards,
Alessio Pace.



>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090113/3c584228/attachment.html>

From gabriel.rossetti at arimaz.com  Tue Jan 13 08:34:29 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 13 Jan 2009 16:34:29 +0100
Subject: [Twisted-Python] IPushProducer problem
Message-ID: <496CB485.9040001@arimaz.com>

Hello everyone,

I implemented a push-produce a while back and I though it works, but it 
didn't. When the msgs where spaced out, it worked, but if several msgs 
were sent one after the other, then things go bad (the msgs get mixed up)...

I found this thread : 
http://www.twistedmatrix.com/pipermail/twisted-python/2007-March/014983.html

and I think I ave the same problem, my code looks a bit like his :

    def pauseProducing(self):
        """
        Pause the producer
        """
        self.__paused = True

    def resumeProducing(self):
        """
        Resume the producer
        """
        self.__paused = False

        while(not self.__paused and self.__startLimit < self.__total):
            data = self.__buf[self.__startLimit:self.__endLimit]
            self.transport.write(data)
            self.__startLimit = self.__endLimit
            self.__endLimit += self.__burstSize
            if(not self.__stream):
                break

        if(not self.__paused or self.__startLimit >= self.__total):
            self.stopProducing()

    def stopProducing(self):
        """
        Stop the producer
        """
        self.__paused = False
        self.__startLimit = 0
        self.__buf = None
        self.__total = None
        self.__endLimit = self.__burstSize

and when I send a msg I use this :

def sendMessage(self, msg):
        if domish.IElement.providedBy(msg):
            msg = msg.toXml()
       
        if isinstance(msg, unicode):
            msg = msg.encode('utf-8')
               
        self.__buf = msg
        self.__total = len(msg)
        if(self.__stream):
            self.resumeProducing()

I think what happens is that the code is re-entered, just like Jean-Paul 
suggested in the other thread. The thing is I didn't understand the 
solution, could somebody please explain it to me or suggest something else?

Thank you,
Gabriel



From exarkun at divmod.com  Tue Jan 13 09:03:21 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Jan 2009 11:03:21 -0500
Subject: [Twisted-Python] IPushProducer problem
In-Reply-To: <496CB485.9040001@arimaz.com>
Message-ID: <20090113160321.9754.2135396551.divmod.quotient.1901@henry.divmod.com>

On Tue, 13 Jan 2009 16:34:29 +0100, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>Hello everyone,
>
>I implemented a push-produce a while back and I though it works, but it 
>didn't. When the msgs where spaced out, it worked, but if several msgs were 
>sent one after the other, then things go bad (the msgs get mixed up)...
>
>I found this thread : http://www.twistedmatrix.com/pipermail/twisted-python 
>/2007-March/014983.html
>
>and I think I ave the same problem, my code looks a bit like his :
>
>    def pauseProducing(self):
>        """
>        Pause the producer
>        """
>        self.__paused = True
>
>    def resumeProducing(self):
>        """
>        Resume the producer
>        """
>        self.__paused = False
>
>        while(not self.__paused and self.__startLimit < self.__total):
>            data = self.__buf[self.__startLimit:self.__endLimit]
>            self.transport.write(data)
>            self.__startLimit = self.__endLimit
>            self.__endLimit += self.__burstSize
>            if(not self.__stream):
>                break
>
>        if(not self.__paused or self.__startLimit >= self.__total):
>            self.stopProducing()
>
>    def stopProducing(self):
>        """
>        Stop the producer
>        """
>        self.__paused = False
>        self.__startLimit = 0
>        self.__buf = None
>        self.__total = None
>        self.__endLimit = self.__burstSize
>
>and when I send a msg I use this :
>
>def sendMessage(self, msg):
>        if domish.IElement.providedBy(msg):
>            msg = msg.toXml()
>              if isinstance(msg, unicode):
>            msg = msg.encode('utf-8')
>                      self.__buf = msg
>        self.__total = len(msg)
>        if(self.__stream):
>            self.resumeProducing()
>
>I think what happens is that the code is re-entered, just like Jean-Paul 
>suggested in the other thread. The thing is I didn't understand the 
>solution, could somebody please explain it to me or suggest something else?

It's extremely difficult to say without seeing a complete example and without
knowing exactly how the code is failing.  However, one thing I do see is that
it is not safe to call your `sendMessage` a second time before all of the
data from the first call has been written.  Since you are using `__buf´ to
record the message to send, if you try to send another message, the first
buffer will be clobbered.  Could this be the problem you're having?

Perhaps consider appending to `__buf´ instead of overwriting it.  There are
probably lots of other areas where this code could improve too, but not
corrupting the internal state of the producer is a good start. :)

Jean-Paul



From 2le at 2le.net  Tue Jan 13 13:32:45 2009
From: 2le at 2le.net (=?ISO-8859-1?Q?S=E9bastien_HEITZMANN?=)
Date: Tue, 13 Jan 2009 21:32:45 +0100
Subject: [Twisted-Python] adbapi and ConnectionLost.
Message-ID: <496CFA6D.2040800@2le.net>

Hi,

for a couple of week i search how i should handle mysql disconnection on
my twisted web service. When I restart the database without restarting
my service i got some ConnectionLost fired. I have used the cp_reconnect
on the connection pool and it seem to work ( the lost connection is
restarted ) but the current query isn't executed.

So my question is how should I handle this case. Should I intercept the
connectionLost and restart the query ? I have several queries in a
single deffer so this method is not easy and clear.

Any advice whould be welcome.

I join the code of a sample resource.

Thanks

Sébastien HEITZMANN


class StartResource(resource.Resource):
    def __init__(self, dbConnection, mdbConnection, config):
        self.db = dbConnection
        self.mdb = mdbConnection
        resource.Resource.__init__(self)

    def render_POST(self, request):
        try:
            uid = request.args['uid'][0]
            key = request.args['kkey'][0]
            conf = unicode(request.args['conf'][0],'utf8')
            self.db.runInteraction(self._start, uid, key, conf, request)
            return server.NOT_DONE_YET
        except Exception, e:
            print str(e)
            request.setResponseCode(http.INTERNAL_SERVER_ERROR, str(e))
            request.write('ERROR:'+str(e))
            request.finish()

    def _start(self, trans, uid, key, conf, request):
        try:
            if not utils.checkKKEY(uid, key, trans):
                r_status = 'ko'
                r_action = ''
                r_params = 'kkey invalid'
                request.write(json.write([r_status, r_action, r_params]))
                request.finish()
                return None

            query = "UPDATE kserver.b set status=-1 where status=0 and
uid=%s"
            query %= (str(uid))
            trans.execute(query)

            query = u"INSERT INTO `b` (uid, conf)"
            query += " VALUES(%s, '%s');" % ( str(uid), dbutil.safe(conf) )
            trans.execute(query)
            bid = trans._cursor.connection.insert_id()
            #trans.commit()
            r_status = 'ok'
            r_action = ''
            r_params = {'bid':str(bid)}
            request.write(json.write([r_status, r_action, r_params]))
            request.finish()
        except Exception, e:
            print str(e)
            request.setResponseCode(http.INTERNAL_SERVER_ERROR, str(e))
            request.write('ERROR:'+str(e))
            request.finish()





From toreason at fastmail.fm  Tue Jan 13 14:11:09 2009
From: toreason at fastmail.fm (V S P)
Date: Tue, 13 Jan 2009 16:11:09 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
	<8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
Message-ID: <1231881069.16735.1294598841@webmail.messagingengine.com>

Hi, thank you for the correction on how to use Ampula.

Naming service serves
really as a 'discovery' tool -- and then the participating
components talk to each other.  When new component comes
on online, it registers, and the Naming Service broadcasts
the new updates to all the subscribed components.  It also
can 'ping' the components to see if they are alive and if not
it deletes an entry and broadcasts the updates to the remaning 
components.

This way the message dispatchers (or components themselves) have
almost up-to-date information about their peers on the network (the  is
a delay controlled by ping interval).

The naming service data is sometimes stored on a file system
(in case it crashes and needs to restart -- sort of like a
'session') with Python's serialization it has to be easy to do.

But yes, a naming service while not a bottleneck --  can be
a single point of failure in a distributed env, and that's why
for 'fault safety' it is typically ran on fail-over hardware
(although since it is not doing much, it rarely crashes :-))

I certainly agree that using a naming service as a mechanism
to get a 'context' of a remote process to invoke its methods 
(sort of get a Prospective Broker object from a naming service)
every time a call is made -- would be inefficient and not correct.

But if each component has the table of the registered components,
then simply using that table to insanciate a Prospective Broker's
RemoteReference for the needed remote component -- would be nice.  


Few people pointed out that a more generic service discovery
systems exist and they use Dbus protocol (they are used to discover
printers on the network, fileshares, etc) -- I have to study those.

As far as XAMPP, I meant to ask: in twisted, does it run distributed
on multiple machines (that is multiple xampp servers each on its own
machine) -- if yes -- I thought it would have to have some kind of a
naming service built in (I did not mean that XA (AMP) in the naming
suggested that it is derived from Ampula :-)).  But may be it is
single-machine/single-thread process only (I just did not know).


thanks,
Vlad




On Sun, 11 Jan 2009 22:56:48 -0800, "Valentino Volonghi"
<dialtone at gmail.com> said:
> 
> On Jan 3, 2009, at 2:32 PM, V S P wrote:
> 
> > Thank you so much
> > Yes, this plugin is what I am looking for process pool
> > "
> >    """
> >    This plugin provides ways to create a process pool service in your
> >    system listening on a given port and interface and answering to a
> >    given set of commands.
> >    """
> > "
> >
> > So I just need to inherit from
> > AMPConnector and have a trully scalable server!
> 
> No. Wait there... AMPConnector is only a frontend and it's not
> made to be inherited. You might want to inherit it only to add some
> weird functionality to it. Another option is to not use it but create
> a new one to avoid using AMP as a child-parent protocol.
> 
> You really want to subclass AMPChild and create a good AMPParent
> by subclassing amp.AMP.
> 
> There are some examples in the code and to expose a process pool
> on the net you shouldn't do anything more than adding the right argument
> to the command line twistd plugin.
> 
> > Two more questions:
> >
> > What's the mechanism of 'registring' multiple twisted servers
> > (something similar to a Name server in Corba) -- so an event
> > dispatching client can 'discover' the servers running on
> > multiple machines
> 
> I haven't written such a mechanism yet. It shouldn't be too hard to have
> a simple version but having everything go through the same master node
> is kind of problematic from a scalability point of view. It would be  
> better to
> have a routing system where each system knows each other but probably
> this has a lot of memory overhead to keep in memory the list of nearby
> servers... If anyone is willing to spend some time to design some kind  
> of
> solution for this I'd be happy to implement it in ampoule. I'm pretty  
> sure that
> this was done in other projects already.
> 
> > And how does one run multiple XAMPP servers in twisted -- such
> > that work to each server is distributed either by a hash on a user
> > name or some other way (or does such mechanism exist).
> 
> It's just AMP, XMPP is another protocol.
> 
> -- 
> Valentino Volonghi aka Dialtone
> Now running MacOS X 10.5
> Home Page: http://www.twisted.it
> http://www.adroll.com
> 
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - The way an email service should be




From glyph at divmod.com  Tue Jan 13 18:34:52 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 14 Jan 2009 01:34:52 -0000
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <04A13F3D-57B3-469B-A825-011B2FF852C2@bubblehouse.org>
References: <18795.61464.631046.43215@jon.es>
	<04A13F3D-57B3-469B-A825-011B2FF852C2@bubblehouse.org>
Message-ID: <20090114013452.12555.1126212627.divmod.xquotient.3514@weber.divmod.com>


On 13 Jan, 02:58 am, phil at bubblehouse.org wrote:
>On Jan 12, 2009, at 8:36 PM, Terry Jones wrote:
>>I think I've finally gotten to the bottom of why exceptions  sometimes 
>>lose
>>their tracebacks when using inlineCallbacks.
>[snip snip]
>>I'll stop for now. I have some suggestions for fixes, but I'm  already 
>>in
>>over my head.
>>
>>BTW, I get the impression that the Twisted core developers don't 
>>really use
>>inlineCallbacks. Is that correct?

>My impression is that there's a reluctance to advertise 
>inlineCallbacks too loudly, since using it still requires a thorough 
>understanding of Deferreds and asynchronous development to be used 
>effectively. New users really need to be starting with the 'old- 
>fashioned-way', and even experienced users must be careful that their 
>'mental model' of what the code is doing actually reflects reality...

This is partially true, but another big motivating factor here is that 
we *can't* use it, yet.  That'll be true until we want to drop python 
2.3 and 2.4 support, which seems like it's a ways off yet.

Even when that is available, it's really Twisted application / 
orchestration code that will benefit the most from inlineCallbacks; the 
lower-level infrastructure stuff in Twisted itself has more failure 
modes and more states that are inconvenient to account for using 
try/except blocks.

But hey, I'm glad you're finding it useful.  And we *should* fix the 
error-handling problems.  If it weren't useful, we wouldn't provide it 
:).  (And, IMHO, inlineCallbacks is a heck of a lot better than any of 
the earlier hackish mechanisms that tried to do the same thing, like 
deferredGenerator.)



From drew.smathers at gmail.com  Tue Jan 13 18:42:24 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 13 Jan 2009 20:42:24 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <1231881069.16735.1294598841@webmail.messagingengine.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
	<8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
	<1231881069.16735.1294598841@webmail.messagingengine.com>
Message-ID: <368574aa0901131742s9fc9decla02d1f64ed61aca7@mail.gmail.com>

On Tue, Jan 13, 2009 at 4:11 PM, V S P <toreason at fastmail.fm> wrote
> Hi, thank you for the correction on how to use Ampula.
>
> Naming service serves
> really as a 'discovery' tool -- and then the participating
> components talk to each other.  When new component comes
> on online, it registers, and the Naming Service broadcasts
> the new updates to all the subscribed components.  It also
> can 'ping' the components to see if they are alive and if not
> it deletes an entry and broadcasts the updates to the remaning
> components.

It's sounds like what you want is erlang.  I'm only saying this
half-seriously.  Neither python or twisted have builtin mechanisms for
doing what you want.

> This way the message dispatchers (or components themselves) have
> almost up-to-date information about their peers on the network (the  is
> a delay controlled by ping interval).

Hmmm ... message dispatchers.  Are you building messaging middleware?
If so, you should probably stop now.  Here's something that already
works: http://www.rabbitmq.com

>
> The naming service data is sometimes stored on a file system
> (in case it crashes and needs to restart -- sort of like a
> 'session') with Python's serialization it has to be easy to do.
>
> But yes, a naming service while not a bottleneck --  can be
> a single point of failure in a distributed env, and that's why
> for 'fault safety' it is typically ran on fail-over hardware
> (although since it is not doing much, it rarely crashes :-))
>
> I certainly agree that using a naming service as a mechanism
> to get a 'context' of a remote process to invoke its methods
> (sort of get a Prospective Broker object from a naming service)
> every time a call is made -- would be inefficient and not correct.
>
> But if each component has the table of the registered components,
> then simply using that table to insanciate a Prospective Broker's
> RemoteReference for the needed remote component -- would be nice.
>
>
> Few people pointed out that a more generic service discovery
> systems exist and they use Dbus protocol (they are used to discover
> printers on the network, fileshares, etc) -- I have to study those.
>
> As far as XAMPP, I meant to ask: in twisted, does it run distributed
> on multiple machines (that is multiple xampp servers each on its own
> machine) -- if yes -- I thought it would have to have some kind of a
> naming service built in (I did not mean that XA (AMP) in the naming
> suggested that it is derived from Ampula :-)).  But may be it is
> single-machine/single-thread process only (I just did not know).
>

Still, what is XAMPP?  I think Valentino was assuming you mispelled
XMPP.  To partially answer this question though (excluding XAMPP as a
component), Twisted has protocols (AMP, PB, etc.) that make relatively
easy to build simple distributed systems (running on multiple
machines).  If you study hard and work hard you can also build more
complex distributed systems with grander scalability requirements.
Twisted does not magically cluster itself on multiple machines.

-Drew



From toreason at fastmail.fm  Tue Jan 13 23:56:22 2009
From: toreason at fastmail.fm (V S P)
Date: Wed, 14 Jan 2009 01:56:22 -0500
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <368574aa0901131742s9fc9decla02d1f64ed61aca7@mail.gmail.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
	<8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
	<1231881069.16735.1294598841@webmail.messagingengine.com>
	<368574aa0901131742s9fc9decla02d1f64ed61aca7@mail.gmail.com>
Message-ID: <1231916182.26350.1294676453@webmail.messagingengine.com>

Hi,
thank you for the reply, yes I meant XMPP and thought that it might
be written to be deployed on multiple machines.  But from what you
are saying it is not.

Yes, started looking at Erlang as well (and its Mnesia component)
rabbitMQ seems like what I need in terms of scalable multi-machine
support.

Basically what I need is to request reports, run reports (for long time,
joining database and file data(where files can be in netCDF4)),
 and then upload results (some times in excel, some times other
formats) back to user-specific database.

I certainly do not want to develop 'middleware' -- I just wanted
to use it.  

And Twisted/Python had bunch of libraries (including excel support,
math libraries, NetCDF4, pyTables (that I will need) ), books, community
support, etc -- compared to Erlang.

So I just was missing a multi-machine distribution scheme... I thought
the Twisted community would run into something similar and have
solutions (google-apps have to be using something to as well to run
on multiple machines)

Another option for me of course TAO ORB, or as you pointed out Erlang
RabbitMQ (especially since Erlang was designed to do this), or as people
suggested one of the open source Message Queuing systems.

In the selection process, I just wanted to stay within Python (rather
than C++, Java, Erlang or a mix of those).

Another option I also thought about (if Twisted would be too
difficult to use for multimachine support) would be to use
Tao ORB, and for each Corba Server simply use Boost C++ Python
binder and then pretty much have all the python stuff I need.

However, there are unknowns there too ... while I am pretty
comfortable with C++, I do not know how Python Database access libraries
will behave when invoked from with TAO's Corba servers...
is there connection pooling there/etc.  Also may be there gottchas
there I do not even think of now.

Anyways, this is not twisted specific... just wanted to explain
why I was looking.








On Tue, 13 Jan 2009 20:42:24 -0500, "Drew Smathers"
<drew.smathers at gmail.com> said:
> On Tue, Jan 13, 2009 at 4:11 PM, V S P <toreason at fastmail.fm> wrote
> > Hi, thank you for the correction on how to use Ampula.
> >
> > Naming service serves
> > really as a 'discovery' tool -- and then the participating
> > components talk to each other.  When new component comes
> > on online, it registers, and the Naming Service broadcasts
> > the new updates to all the subscribed components.  It also
> > can 'ping' the components to see if they are alive and if not
> > it deletes an entry and broadcasts the updates to the remaning
> > components.
> 
> It's sounds like what you want is erlang.  I'm only saying this
> half-seriously.  Neither python or twisted have builtin mechanisms for
> doing what you want.
> 
> > This way the message dispatchers (or components themselves) have
> > almost up-to-date information about their peers on the network (the  is
> > a delay controlled by ping interval).
> 
> Hmmm ... message dispatchers.  Are you building messaging middleware?
> If so, you should probably stop now.  Here's something that already
> works: http://www.rabbitmq.com
> 
> >
> > The naming service data is sometimes stored on a file system
> > (in case it crashes and needs to restart -- sort of like a
> > 'session') with Python's serialization it has to be easy to do.
> >
> > But yes, a naming service while not a bottleneck --  can be
> > a single point of failure in a distributed env, and that's why
> > for 'fault safety' it is typically ran on fail-over hardware
> > (although since it is not doing much, it rarely crashes :-))
> >
> > I certainly agree that using a naming service as a mechanism
> > to get a 'context' of a remote process to invoke its methods
> > (sort of get a Prospective Broker object from a naming service)
> > every time a call is made -- would be inefficient and not correct.
> >
> > But if each component has the table of the registered components,
> > then simply using that table to insanciate a Prospective Broker's
> > RemoteReference for the needed remote component -- would be nice.
> >
> >
> > Few people pointed out that a more generic service discovery
> > systems exist and they use Dbus protocol (they are used to discover
> > printers on the network, fileshares, etc) -- I have to study those.
> >
> > As far as XAMPP, I meant to ask: in twisted, does it run distributed
> > on multiple machines (that is multiple xampp servers each on its own
> > machine) -- if yes -- I thought it would have to have some kind of a
> > naming service built in (I did not mean that XA (AMP) in the naming
> > suggested that it is derived from Ampula :-)).  But may be it is
> > single-machine/single-thread process only (I just did not know).
> >
> 
> Still, what is XAMPP?  I think Valentino was assuming you mispelled
> XMPP.  To partially answer this question though (excluding XAMPP as a
> component), Twisted has protocols (AMP, PB, etc.) that make relatively
> easy to build simple distributed systems (running on multiple
> machines).  If you study hard and work hard you can also build more
> complex distributed systems with grander scalability requirements.
> Twisted does not magically cluster itself on multiple machines.
> 
> -Drew
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Choose from over 50 domains or use your own




From gabriel.rossetti at arimaz.com  Wed Jan 14 01:59:29 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 14 Jan 2009 09:59:29 +0100
Subject: [Twisted-Python] IPushProducer problem
In-Reply-To: <20090113160321.9754.2135396551.divmod.quotient.1901@henry.divmod.com>
References: <20090113160321.9754.2135396551.divmod.quotient.1901@henry.divmod.com>
Message-ID: <496DA971.8040906@arimaz.com>

Jean-Paul Calderone wrote:
> On Tue, 13 Jan 2009 16:34:29 +0100, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com> wrote:
>> Hello everyone,
>>
>> I implemented a push-produce a while back and I though it works, but 
>> it didn't. When the msgs where spaced out, it worked, but if several 
>> msgs were sent one after the other, then things go bad (the msgs get 
>> mixed up)...
>>
>> I found this thread : 
>> http://www.twistedmatrix.com/pipermail/twisted-python 
>> /2007-March/014983.html
>>
>> and I think I ave the same problem, my code looks a bit like his :
>>
>>    def pauseProducing(self):
>>        """
>>        Pause the producer
>>        """
>>        self.__paused = True
>>
>>    def resumeProducing(self):
>>        """
>>        Resume the producer
>>        """
>>        self.__paused = False
>>
>>        while(not self.__paused and self.__startLimit < self.__total):
>>            data = self.__buf[self.__startLimit:self.__endLimit]
>>            self.transport.write(data)
>>            self.__startLimit = self.__endLimit
>>            self.__endLimit += self.__burstSize
>>            if(not self.__stream):
>>                break
>>
>>        if(not self.__paused or self.__startLimit >= self.__total):
>>            self.stopProducing()
>>
>>    def stopProducing(self):
>>        """
>>        Stop the producer
>>        """
>>        self.__paused = False
>>        self.__startLimit = 0
>>        self.__buf = None
>>        self.__total = None
>>        self.__endLimit = self.__burstSize
>>
>> and when I send a msg I use this :
>>
>> def sendMessage(self, msg):
>>        if domish.IElement.providedBy(msg):
>>            msg = msg.toXml()
>>              if isinstance(msg, unicode):
>>            msg = msg.encode('utf-8')
>>                      self.__buf = msg
>>        self.__total = len(msg)
>>        if(self.__stream):
>>            self.resumeProducing()
>>
>> I think what happens is that the code is re-entered, just like 
>> Jean-Paul suggested in the other thread. The thing is I didn't 
>> understand the solution, could somebody please explain it to me or 
>> suggest something else?
>
> It's extremely difficult to say without seeing a complete example and 
> without
> knowing exactly how the code is failing.  However, one thing I do see 
> is that
> it is not safe to call your `sendMessage` a second time before all of the
> data from the first call has been written.  Since you are using 
> `__buf´ to
> record the message to send, if you try to send another message, the first
> buffer will be clobbered.  Could this be the problem you're having?
>
> Perhaps consider appending to `__buf´ instead of overwriting it.  
> There are
> probably lots of other areas where this code could improve too, but not
> corrupting the internal state of the producer is a good start. :)
>
> Jean-Paul
>
Thanks for your answer Jean-Paul, yes, not currupting the internal state 
of my producer is a good start :-). I re-wrote it like this and it seems 
to work correctly now :

    def pauseProducing(self):
        """
        Pause the producer
        """
        self.__paused = True

    def resumeProducing(self):
        """
        Resume the producer
        """
        self.__paused = False

        while(not self.__paused and self.__buf):
            self.transport.write(self.__buf[:self.__burstSize])
            self.__buf = self.__buf[self.__burstSize:]
            if(not self.__stream):
                break

        if(not self.__paused or not self.__buf):
            self.stopProducing()

    def stopProducing(self):
        """
        Stop the producer
        """
        self.__paused = False

    def sendMessage(self, msg):
        if domish.IElement.providedBy(msg):
            msg = msg.toXml()
       
        if isinstance(msg, unicode):
            msg = msg.encode('utf-8')
               
        self.__buf += msg
        if(self.__stream and not self.__paused):
            self.resumeProducing()


Thanks again for pointing that out :-),
Gabriel



From rodrigoarancibiapla at winctp.com  Tue Jan 13 14:32:31 2009
From: rodrigoarancibiapla at winctp.com (rodrigoarancibiapla at winctp.com)
Date: Tue, 13 Jan 2009 14:32:31 -0700
Subject: [Twisted-Python] Software that uses Twisted
Message-ID: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090113/7bca83ab/attachment.html>

From gabriel.rossetti at arimaz.com  Wed Jan 14 07:48:13 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 14 Jan 2009 15:48:13 +0100
Subject: [Twisted-Python] IPushProducer problem
In-Reply-To: <496DA971.8040906@arimaz.com>
References: <20090113160321.9754.2135396551.divmod.quotient.1901@henry.divmod.com>
	<496DA971.8040906@arimaz.com>
Message-ID: <496DFB2D.5050604@arimaz.com>

Gabriel Rossetti wrote:
> Jean-Paul Calderone wrote:
>> On Tue, 13 Jan 2009 16:34:29 +0100, Gabriel Rossetti 
>> <gabriel.rossetti at arimaz.com> wrote:
>>> Hello everyone,
>>>
>>> I implemented a push-produce a while back and I though it works, but 
>>> it didn't. When the msgs where spaced out, it worked, but if several 
>>> msgs were sent one after the other, then things go bad (the msgs get 
>>> mixed up)...
>>>
>>> I found this thread : 
>>> http://www.twistedmatrix.com/pipermail/twisted-python 
>>> /2007-March/014983.html
>>>
>>> and I think I ave the same problem, my code looks a bit like his :
>>>
>>>    def pauseProducing(self):
>>>        """
>>>        Pause the producer
>>>        """
>>>        self.__paused = True
>>>
>>>    def resumeProducing(self):
>>>        """
>>>        Resume the producer
>>>        """
>>>        self.__paused = False
>>>
>>>        while(not self.__paused and self.__startLimit < self.__total):
>>>            data = self.__buf[self.__startLimit:self.__endLimit]
>>>            self.transport.write(data)
>>>            self.__startLimit = self.__endLimit
>>>            self.__endLimit += self.__burstSize
>>>            if(not self.__stream):
>>>                break
>>>
>>>        if(not self.__paused or self.__startLimit >= self.__total):
>>>            self.stopProducing()
>>>
>>>    def stopProducing(self):
>>>        """
>>>        Stop the producer
>>>        """
>>>        self.__paused = False
>>>        self.__startLimit = 0
>>>        self.__buf = None
>>>        self.__total = None
>>>        self.__endLimit = self.__burstSize
>>>
>>> and when I send a msg I use this :
>>>
>>> def sendMessage(self, msg):
>>>        if domish.IElement.providedBy(msg):
>>>            msg = msg.toXml()
>>>              if isinstance(msg, unicode):
>>>            msg = msg.encode('utf-8')
>>>                      self.__buf = msg
>>>        self.__total = len(msg)
>>>        if(self.__stream):
>>>            self.resumeProducing()
>>>
>>> I think what happens is that the code is re-entered, just like 
>>> Jean-Paul suggested in the other thread. The thing is I didn't 
>>> understand the solution, could somebody please explain it to me or 
>>> suggest something else?
>>
>> It's extremely difficult to say without seeing a complete example and 
>> without
>> knowing exactly how the code is failing.  However, one thing I do see 
>> is that
>> it is not safe to call your `sendMessage` a second time before all of 
>> the
>> data from the first call has been written.  Since you are using 
>> `__buf´ to
>> record the message to send, if you try to send another message, the 
>> first
>> buffer will be clobbered.  Could this be the problem you're having?
>>
>> Perhaps consider appending to `__buf´ instead of overwriting it.  
>> There are
>> probably lots of other areas where this code could improve too, but not
>> corrupting the internal state of the producer is a good start. :)
>>
>> Jean-Paul
>>
> Thanks for your answer Jean-Paul, yes, not currupting the internal 
> state of my producer is a good start :-). I re-wrote it like this and 
> it seems to work correctly now :
>
>    def pauseProducing(self):
>        """
>        Pause the producer
>        """
>        self.__paused = True
>
>    def resumeProducing(self):
>        """
>        Resume the producer
>        """
>        self.__paused = False
>
>        while(not self.__paused and self.__buf):
>            self.transport.write(self.__buf[:self.__burstSize])
>            self.__buf = self.__buf[self.__burstSize:]
>            if(not self.__stream):
>                break
>
>        if(not self.__paused or not self.__buf):
>            self.stopProducing()
>
>    def stopProducing(self):
>        """
>        Stop the producer
>        """
>        self.__paused = False
>
>    def sendMessage(self, msg):
>        if domish.IElement.providedBy(msg):
>            msg = msg.toXml()
>              if isinstance(msg, unicode):
>            msg = msg.encode('utf-8')
>                      self.__buf += msg
>        if(self.__stream and not self.__paused):
>            self.resumeProducing()
>
>
> Thanks again for pointing that out :-),
> Gabriel
>
Just a quick question, should I do the producer 
registration/unregisteration once (e.g. in 
connectionMade()/connectionLost()) or have the registration be done in 
my sendMessage() method and the unregistration in the stopProducing() 
method? I noticed that if I set streaming to False, it reacts like a 
PullProducer and calls resumeProducing() in the registration, which is 
what made me wonder if I should move the registration to sendMessage().

Thank you,
Gabriel



From challman at gmail.com  Wed Jan 14 09:30:01 2009
From: challman at gmail.com (Chris Hallman)
Date: Wed, 14 Jan 2009 11:30:01 -0500
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
Message-ID: <9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>

I don't mean to be picky, but whomever ever wrote that site used poor
English grammar. To be taken more serious, you need to correct the
grammatical mistakes.



chris



On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com> wrote:

> Description: A control panel for Windows visible form any part of the
> world through web browsers
> URL: www.winctp.com
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090114/3c306801/attachment.html>

From moof at metamoof.net  Wed Jan 14 09:42:00 2009
From: moof at metamoof.net (Giles Antonio Radford)
Date: Wed, 14 Jan 2009 16:42:00 +0000
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
	<9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
Message-ID: <8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>

Surely "seriously"?

HTH, HAND,

Moof

On Wed, Jan 14, 2009 at 4:30 PM, Chris Hallman <challman at gmail.com> wrote:
>
> I don't mean to be picky, but whomever ever wrote that site used poor
> English grammar. To be taken more serious, you need to correct the
> grammatical mistakes.
>
>
>
> chris
>
>
>
> On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com> wrote:
>>
>> Description: A control panel for Windows visible form any part of the
>> world through web browsers
>> URL: www.winctp.com
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From listsin at integrateddevcorp.com  Wed Jan 14 10:35:29 2009
From: listsin at integrateddevcorp.com (s s)
Date: Wed, 14 Jan 2009 12:35:29 -0500
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
	<9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
	<8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>
Message-ID: <93061796-5588-4661-BDEF-7D74788890C2@integrateddevcorp.com>

With seriously, taken you will be more.

S

On Jan 14, 2009, at 11:42 AM, Giles Antonio Radford wrote:

> Surely "seriously"?
>
> HTH, HAND,
>
> Moof
>
> On Wed, Jan 14, 2009 at 4:30 PM, Chris Hallman <challman at gmail.com>  
> wrote:
>>
>> I don't mean to be picky, but whomever ever wrote that site used poor
>> English grammar. To be taken more serious, you need to correct the
>> grammatical mistakes.
>>
>>
>>
>> chris
>>
>>
>>
>> On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com>  
>> wrote:
>>>
>>> Description: A control panel for Windows visible form any part of  
>>> the
>>> world through web browsers
>>> URL: www.winctp.com
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From alecf at metaweb.com  Wed Jan 14 15:28:58 2009
From: alecf at metaweb.com (Alec Flett)
Date: Wed, 14 Jan 2009 14:28:58 -0800
Subject: [Twisted-Python] [Q] multi-process chat client and poller
In-Reply-To: <1231916182.26350.1294676453@webmail.messagingengine.com>
References: <20090102155956.20272.958450739.divmod.quotient.30688@ohm>
	<1230935722.15394.1292733079@webmail.messagingengine.com>
	<3fce0ae70901031314r3946bce5hc8bff004663d156e@mail.gmail.com>
	<1231021930.1898.1292840297@webmail.messagingengine.com>
	<8C5FD07E-1204-43AB-B246-AC68F172013B@gmail.com>
	<1231881069.16735.1294598841@webmail.messagingengine.com>
	<368574aa0901131742s9fc9decla02d1f64ed61aca7@mail.gmail.com>
	<1231916182.26350.1294676453@webmail.messagingengine.com>
Message-ID: <2730242B-5D45-4FBE-BF85-AA8D3980A13E@metaweb.com>


On Jan 13, 2009, at 10:56 PM, V S P wrote:

> Hi,
>
> Another option for me of course TAO ORB, or as you pointed out Erlang
> RabbitMQ (especially since Erlang was designed to do this), or as  
> people
> suggested one of the open source Message Queuing systems.
>

For simple service discovery on a network, the Bonjour stuff works  
reasonably well - plus the avahi libraries, which have a python  
adapter, are asynchronous, event-loop based, in a way that I believe  
would fit in well with Twisted. That at least gives you discovery,  
though not queuing.

Alec
>




From toreason at fastmail.fm  Wed Jan 14 15:48:39 2009
From: toreason at fastmail.fm (V S P)
Date: Wed, 14 Jan 2009 17:48:39 -0500
Subject: [Twisted-Python] django with twisted 8.2.x:  2009
Message-ID: <1231973319.19140.1294828191@webmail.messagingengine.com>

Hi,
wanted to ask for some help in getting django running with
twisted webserver for my experiments.

Using Python 2.6
Twisted 8.2.0
Django 1.0.2
on windows xp for now.

I searched the documentation , most of the blog entries/etc were
in '07 about this setup.  And most refer to web2 plugin for twisted
as it support for wsgi.

I looked at the web2 page on twisted matrix and it said that its
functionality will be ported back to 'web' module as they become stable.
I then browsed 'web' module subdirectory and I saw wsgi there
(and I assume this is what's needed for django).

So to shorten the story, this is what I tried:
I downloaded the example web server web.py, made sure it works
with the test file (and it does).

Then I added another 'processor' for files with extensions .wpy

root.processors = {
            '.cgi': twcgi.CGIScript,
            '.php3': twcgi.PHP3Script,
            '.php': twcgi.PHPScript,
'.wpy':  wsgi.WSGIResource,
            '.epy': script.PythonScript,
            '.rpy': script.ResourceScript,
            '.trp': trp.ResourceUnpickler,
}


then I created a simple django file
------------- views.wpy ------------
from django.http import HttpResponse

def hello(request):
    return HttpResponse("Hello world")
--------------------------------------

and tried to run it.  That, of course did not work,
for one because I did not create a 'resource' global.

But basically, I do not think I am going right way about it,
therefore decided to stop and ask.


thanks in advance
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - mmm... Fastmail...




From exarkun at divmod.com  Wed Jan 14 16:00:01 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Jan 2009 18:00:01 -0500
Subject: [Twisted-Python] django with twisted 8.2.x:  2009
In-Reply-To: <1231973319.19140.1294828191@webmail.messagingengine.com>
Message-ID: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>

On Wed, 14 Jan 2009 17:48:39 -0500, V S P <toreason at fastmail.fm> wrote:
>Hi,
>wanted to ask for some help in getting django running with
>twisted webserver for my experiments.
>
>Using Python 2.6
>Twisted 8.2.0
>Django 1.0.2
>on windows xp for now.
>
>I searched the documentation , most of the blog entries/etc were
>in '07 about this setup.  And most refer to web2 plugin for twisted
>as it support for wsgi.
>
>I looked at the web2 page on twisted matrix and it said that its
>functionality will be ported back to 'web' module as they become stable.
>I then browsed 'web' module subdirectory and I saw wsgi there
>(and I assume this is what's needed for django).
>
>So to shorten the story, this is what I tried:
>I downloaded the example web server web.py, made sure it works
>with the test file (and it does).
>
>Then I added another 'processor' for files with extensions .wpy
>
>root.processors = {
>            '.cgi': twcgi.CGIScript,
>            '.php3': twcgi.PHP3Script,
>            '.php': twcgi.PHPScript,
>'.wpy':  wsgi.WSGIResource,
>            '.epy': script.PythonScript,
>            '.rpy': script.ResourceScript,
>            '.trp': trp.ResourceUnpickler,
>}
>

WSGIResource isn't a "processor", so you can't add it to the processors
dictionary like this.

>
>then I created a simple django file
>------------- views.wpy ------------
>from django.http import HttpResponse
>
>def hello(request):
>    return HttpResponse("Hello world")
>--------------------------------------

I don't think HttpResponse instances are wsgi applications, nor is that
hello function.

>
>and tried to run it.  That, of course did not work,
>for one because I did not create a 'resource' global.
>
>But basically, I do not think I am going right way about it,
>therefore decided to stop and ask.
>

Take a look at http://code.google.com/p/modwsgi/wiki/IntegrationWithDjango
which explains how to create a Django WSGI application object.

Then, take a look at <http://twistedmatrix.com/trac/attachment/ticket/3510/t.w.wsgi-doc.diff> which is a work-in-progress Twisted documentation
addition which explains how to serve a WSGI application using Twisted Web's
WSGI container.

Once you understand those two pieces, you should be able to combine them
and get a working Twisted Web/Django server.

Jean-Paul



From vvangelovski at gmail.com  Wed Jan 14 16:33:17 2009
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Thu, 15 Jan 2009 00:33:17 +0100
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <93061796-5588-4661-BDEF-7D74788890C2@integrateddevcorp.com>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
	<9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
	<8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>
	<93061796-5588-4661-BDEF-7D74788890C2@integrateddevcorp.com>
Message-ID: <406b9fda0901141533x1769394nb5c7aee07a5365ca@mail.gmail.com>

Would you be interested in getting internet providings that is better
than your current providings?
Seriously

On Wed, Jan 14, 2009 at 6:35 PM, s s <listsin at integrateddevcorp.com> wrote:
> With seriously, taken you will be more.
>
> S
>
> On Jan 14, 2009, at 11:42 AM, Giles Antonio Radford wrote:
>
>> Surely "seriously"?
>>
>> HTH, HAND,
>>
>> Moof
>>
>> On Wed, Jan 14, 2009 at 4:30 PM, Chris Hallman <challman at gmail.com> wrote:
>>>
>>> I don't mean to be picky, but whomever ever wrote that site used poor
>>> English grammar. To be taken more serious, you need to correct the
>>> grammatical mistakes.
>>>
>>>
>>>
>>> chris
>>>
>>>
>>>
>>> On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com> wrote:
>>>>
>>>> Description: A control panel for Windows visible form any part of the
>>>> world through web browsers
>>>> URL: www.winctp.com
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From toreason at fastmail.fm  Wed Jan 14 18:48:55 2009
From: toreason at fastmail.fm (V S P)
Date: Wed, 14 Jan 2009 20:48:55 -0500
Subject: [Twisted-Python] django with twisted 8.2.x:  2009
In-Reply-To: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
References: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
Message-ID: <1231984135.20890.1294853465@webmail.messagingengine.com>

Ok, thank you for the pointers, I got it working
(or at least I get "It worked" django page :-) )

I also used 
http://code.google.com/appengine/articles/django.html
to get a basic wsgi server working

and 
http://www.sitepoint.com/article/build-to-do-list-30-minutes/
to get basic django installation


It ended up pretty painless (sofar)

step 0) install python 2.6.1, twisted 8.2.0 and django 1.0.1

step 1) select a subdirectory as the root of your
twisted wsgi server

step 2) copy in there this file
------------ wsgi_web.py -----------------
import logging, os

# Force Django to reload its settings.
from django.conf import settings
settings._target = None

# Must set this env var before importing any part of Django
os.environ['DJANGO_SETTINGS_MODULE'] = 'mytestproj.settings'


from twisted.web import server 
from twisted.web.wsgi import WSGIResource 
from twisted.python.threadpool import ThreadPool 
from twisted.internet import reactor 

import django.core.handlers.wsgi
import django.core.signals
import django.db
import django.dispatch.dispatcher


def log_exception(*args, **kwds):
  logging.exception('Exception in request:')


def main():
  # Create a Django application for WSGI.
  application = django.core.handlers.wsgi.WSGIHandler()

	 
	 
# Create and start a thread pool, 
# ensuring that it will be stopped when the reactor shuts down 
thread_pool = ThreadPool() 
thread_pool.start() 
reactor.addSystemEventTrigger('after', 'shutdown', thread_pool.stop) 
	 
# Create the WSGI resource 
#wsgi_app_as_resource = WSGIResource(reactor, thread_pool,
basic_wsgi_app) 
wsgi_app_as_resource = WSGIResource(reactor, thread_pool,
django.core.handlers.wsgi.WSGIHandler())       
	 
site = server.Site(wsgi_app_as_resource) 
reactor.listenTCP(8080, site) 
reactor.run()

----------------- end of wsgi_web.py -----------------------


3) your project name will be mytestproj
(and that project directory is relative to the place where
 wsgi_web.py file is started


4) cd to directory where wsgi_web.py is
and run

python.exe <pathtopython>\Lib\site-packages\django\bin\django-admin.py
startproject mytestproj

5) execute 
python.exe   wsgi_web.py


6) from your browser http://localhost:8080  should give you
the django page.


that's it,
Vlad








On Wed, 14 Jan 2009 18:00:01 -0500, "Jean-Paul Calderone"
<exarkun at divmod.com> said:
> On Wed, 14 Jan 2009 17:48:39 -0500, V S P <toreason at fastmail.fm> wrote:
> >Hi,
> >wanted to ask for some help in getting django running with
> >twisted webserver for my experiments.
> >
> >Using Python 2.6
> >Twisted 8.2.0
> >Django 1.0.2
> >on windows xp for now.
> >
> >I searched the documentation , most of the blog entries/etc were
> >in '07 about this setup.  And most refer to web2 plugin for twisted
> >as it support for wsgi.
>
> 
> Take a look at
> http://code.google.com/p/modwsgi/wiki/IntegrationWithDjango
> which explains how to create a Django WSGI application object.
> 
> Then, take a look at
> <http://twistedmatrix.com/trac/attachment/ticket/3510/t.w.wsgi-doc.diff>
> which is a work-in-progress Twisted documentation
> addition which explains how to serve a WSGI application using Twisted
> Web's
> WSGI container.
> 
> Once you understand those two pieces, you should be able to combine them
> and get a working Twisted Web/Django server.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - And now for something completely different┘




From clemesha at gmail.com  Wed Jan 14 21:45:39 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 14 Jan 2009 20:45:39 -0800
Subject: [Twisted-Python] django with twisted 8.2.x: 2009
In-Reply-To: <1231984135.20890.1294853465@webmail.messagingengine.com>
References: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
	<1231984135.20890.1294853465@webmail.messagingengine.com>
Message-ID: <d272f0690901142045v93a9709nce1a90df677c80cd@mail.gmail.com>

> It ended up pretty painless (sofar)

Hey Vlad,

Thanks for posting your solution!

Care to discuss your use case for mixing Django and Twisted?

I have considered mixing the two for a project that combines
a web interface and some XMPP functionality, but I have not yet
gone down this route ...

What about using deferreds in your views? (is that even a useful/good idea ?)
and what about blocking model calls, have you consider these scenarios?

Thanks for any feedback on this interesting topic.
-Alex


-- 
Alex Clemesha
clemesha.org



From challman at gmail.com  Wed Jan 14 23:19:08 2009
From: challman at gmail.com (Chris Hallman)
Date: Thu, 15 Jan 2009 01:19:08 -0500
Subject: [Twisted-Python] Software that uses Twisted
In-Reply-To: <406b9fda0901141533x1769394nb5c7aee07a5365ca@mail.gmail.com>
References: <20090113143231.5dc36dcf2c84d8a6645d9bf53766f2d2.13d636ab31.wbe@email01.secureserver.net>
	<9f68812f0901140830t299f01a9y50365d058d042c74@mail.gmail.com>
	<8dbaac140901140842y489c4e50o2b00f2f52de97c46@mail.gmail.com>
	<93061796-5588-4661-BDEF-7D74788890C2@integrateddevcorp.com>
	<406b9fda0901141533x1769394nb5c7aee07a5365ca@mail.gmail.com>
Message-ID: <9f68812f0901142219m334581fegd11cad03b2f2024d@mail.gmail.com>

I apologize to all on the mailing. I meant to reply only to the original
sender, not all.



On Wed, Jan 14, 2009 at 6:33 PM, Vasil Vangelovski
<vvangelovski at gmail.com>wrote:

> Would you be interested in getting internet providings that is better
> than your current providings?
> Seriously
>
> On Wed, Jan 14, 2009 at 6:35 PM, s s <listsin at integrateddevcorp.com>
> wrote:
> > With seriously, taken you will be more.
> >
> > S
> >
> > On Jan 14, 2009, at 11:42 AM, Giles Antonio Radford wrote:
> >
> >> Surely "seriously"?
> >>
> >> HTH, HAND,
> >>
> >> Moof
> >>
> >> On Wed, Jan 14, 2009 at 4:30 PM, Chris Hallman <challman at gmail.com>
> wrote:
> >>>
> >>> I don't mean to be picky, but whomever ever wrote that site used poor
> >>> English grammar. To be taken more serious, you need to correct the
> >>> grammatical mistakes.
> >>>
> >>>
> >>>
> >>> chris
> >>>
> >>>
> >>>
> >>> On Tue, Jan 13, 2009 at 4:32 PM, <rodrigoarancibiapla at winctp.com>
> wrote:
> >>>>
> >>>> Description: A control panel for Windows visible form any part of the
> >>>> world through web browsers
> >>>> URL: www.winctp.com
> >>>>
> >>>> _______________________________________________
> >>>> Twisted-Python mailing list
> >>>> Twisted-Python at twistedmatrix.com
> >>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>>>
> >>>
> >>>
> >>> _______________________________________________
> >>> Twisted-Python mailing list
> >>> Twisted-Python at twistedmatrix.com
> >>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>>
> >>>
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090115/3c74e41c/attachment.html>

From alessio.pace at gmail.com  Thu Jan 15 03:44:44 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 15 Jan 2009 11:44:44 +0100
Subject: [Twisted-Python] TCP: can't redo connectTCP() from same local port
	if server did not explicitly close connection ??
Message-ID: <84987d20901150244t360fcb83xfa5c2059aa079a12@mail.gmail.com>

Hi,

I would like to have a client connect via TCP to a server (say, server "A"),
then the client close the connection and connect via TCP to another server
(say, server "B") using the same TCP port that was bound locally while
connecting to "A". And then this done over and over again switching from B
to A to B etc..

The fact is that it all works if both the client and the server do
transport.loseConnection() before the client tries to connect to the other
server from the same local port, instead if *only* the client does
transport.loseConnection(), I obtain:

[Failure instance: Traceback (failure with no frames): <class
> 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98: Address
> already in use.


which it is strange to me as the next connectTCP() attempt is called in the
connectionLost() method of the client, so the socket should be closed
already.

For the very generous readers, I post at http://pastebin.com/m31b0d911 the
code which can be just executed in this way:

* on a terminal, for the server:  python tcp_listen_connect.py -server

* on another terminal, for the client:  python tcp_listen_connect.py -client
127.0.0.1

Comment/uncomment line number 21 to see the affected behaviour.

Sorry for the "please download and verify" approach, but it's 2 days I'm
struggling with it and I was wondering if there is really something I'm
doing wrong or it's just that it works like that.

Thanks in advance.
Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090115/f5d71b63/attachment.html>

From exarkun at divmod.com  Thu Jan 15 05:58:06 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Jan 2009 07:58:06 -0500
Subject: [Twisted-Python] TCP: can't redo connectTCP() from same local
	port if server did not explicitly close connection ??
In-Reply-To: <84987d20901150244t360fcb83xfa5c2059aa079a12@mail.gmail.com>
Message-ID: <20090115125806.9754.304071028.divmod.quotient.2983@henry.divmod.com>

On Thu, 15 Jan 2009 11:44:44 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>Hi,
>
>I would like to have a client connect via TCP to a server (say, server "A"),
>then the client close the connection and connect via TCP to another server
>(say, server "B") using the same TCP port that was bound locally while
>connecting to "A". And then this done over and over again switching from B
>to A to B etc..
>
>The fact is that it all works if both the client and the server do
>transport.loseConnection() before the client tries to connect to the other
>server from the same local port, instead if *only* the client does
>transport.loseConnection(), I obtain:
>
>[Failure instance: Traceback (failure with no frames): <class
>> 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98: Address
>> already in use.
>
>
>which it is strange to me as the next connectTCP() attempt is called in the
>connectionLost() method of the client, so the socket should be closed
>already.

This is because the client connection goes into the CLOSE_WAIT state instead
of really closing all the way right away.  Google for "tcp state diagram"
and take a look at how a socket can close - notice that of the two paths
there are to get to CLOSED, only one of them goes through CLOSE_WAIT.

There are ways to change this (on most platforms, you can reduce the amount
of time a socket spends in CLOSE_WAIT before going to CLOSED), but it may not
be a good idea to use them.  The CLOSE_WAIT state helps make sure that all
data is delivered to the right TCP connection and not a different, unrelated
TCP connection by accident.

Jean-Paul



From Tamika  Thu Jan 15 06:13:21 2009
From: Tamika (twisted-python@twistedmatrix.com)
Date: Thu, 15 Jan 2009 13:13:21 -0000
Subject: [Twisted-Python] Real Viagra Professional - for real sex pros


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
              
<html>
<head>
<center>
<a href="http://rqf.entercompassion.com"><img src="http://mediapix.ru/pics/685207b3dd437eff7f15c0744b5c1d3a.gif">

    <title>
    
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" href="http://gfx8.nnt.com/mail/12.0.1187.0824/positioning.css" />
</head>
<body style="overflow:auto;">
    <div id="PrintShellToolbar">
    <div class="ContainerPadding">
        <span class="FloatRight">
            <a href= >
                <img alt="" src="http://gfx1.nfi.com/mail/w2/pr02/ltr/glyph_close_rest.gif" /> <Close window>

            <a href= >
                <img alt="" src="http://gfx2.czb.com/mail/w2/pr02/ltr/i_print.gif" /> <Print>
            </a>
        </span>
    </div>
</div>
    <div>
        <div class="BorderContainerOutline ContainerPadding">
            <div class="ClearBoth">
                <span class="HeaderData" style="font-size:large;">
                    <TuPostal.com Cambia de nombre?>
                </span>
            </div>
            <div class="ClearBoth">
                <span class="HeaderLabel">
                    <From:>
                </span>
                <span class="HeaderData">
                    <b><TuPostal.com></b>
                </span>
            </div>
            <div class="ClearBoth">
                <span class="HeaderLabel">
                    <Sent:>
                </span>
                <span class="HeaderData">
              

            <div class="ClearBoth">
                <span class="HeaderLabel">
                    To: 
                </span>
                <span class="HeaderData">
                    Mikelelliott (mikelelliott at rlo.com)
                </span>
            </div>
            <br />
            
        </div>
    </div>
    <div class="MessageBody" style="">
        
        <br />
        <div id="MessageBodyText" class="ExternalClass" style="border: 1px solid 
          
          #fff
          ;">
            <pre>Hola!<br> <br>Tupostal es ahora parte de Sonico!<br> <br>Para conocer nuestro nuevo sitio, haz clic en el siguiente link:<br><a href='http://www.gwpcom/index1.php' target='_blank'>http://www.bjncom/index1.php</a><br> <br>Sonico es un sitio donde puedes...<br>- Guardar fotos ilimitadas<br>- Re encontrarte con viejos amigos<br>- Recibir novedades de tus amigos.<br> <br>Te Esperamos! Ya somos mas de 21 millones de usuarios!!<br> <br>Sonico - Amigos Conectados<br> <br> <br>PD: Ahora tambien podras guardar tus postales<br> <br> <br>------------------------------------------<br>Haz recibido este email porque te encuentras registrado en fdm.com.<br>Si no deseas recibir mas mensajes como este, por favor haz clic en el siguiente link:<br><a href='http://www.cehcom/unsubscribe.php?type=2' target='_blank'>http://www.fyocom/unsubscribe.php?type=2</a><br> <br></pre>
        </div>
    </div>

          </div>
    
    </body>
</html>






From alessio.pace at gmail.com  Thu Jan 15 07:02:13 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 15 Jan 2009 15:02:13 +0100
Subject: [Twisted-Python] TCP: can't redo connectTCP() from same local
	port if server did not explicitly close connection ??
In-Reply-To: <20090115125806.9754.304071028.divmod.quotient.2983@henry.divmod.com>
References: <84987d20901150244t360fcb83xfa5c2059aa079a12@mail.gmail.com>
	<20090115125806.9754.304071028.divmod.quotient.2983@henry.divmod.com>
Message-ID: <84987d20901150602y3e1a45b9t4fc46bf89721780b@mail.gmail.com>

Hi,

On Thu, Jan 15, 2009 at 1:58 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Thu, 15 Jan 2009 11:44:44 +0100, Alessio Pace <alessio.pace at gmail.com>
> wrote:
>
>> Hi,
>>
>> I would like to have a client connect via TCP to a server (say, server
>> "A"),
>> then the client close the connection and connect via TCP to another server
>> (say, server "B") using the same TCP port that was bound locally while
>> connecting to "A". And then this done over and over again switching from B
>> to A to B etc..
>>
>> The fact is that it all works if both the client and the server do
>> transport.loseConnection() before the client tries to connect to the other
>> server from the same local port, instead if *only* the client does
>> transport.loseConnection(), I obtain:
>>
>> [Failure instance: Traceback (failure with no frames): <class
>>
>>> 'twisted.internet.error.ConnectBindError'>: Couldn't bind: 98: Address
>>> already in use.
>>>
>>
>>
>> which it is strange to me as the next connectTCP() attempt is called in
>> the
>> connectionLost() method of the client, so the socket should be closed
>> already.
>>
>
> This is because the client connection goes into the CLOSE_WAIT state
> instead
> of really closing all the way right away.  Google for "tcp state diagram"
> and take a look at how a socket can close - notice that of the two paths
> there are to get to CLOSED, only one of them goes through CLOSE_WAIT.
>
> There are ways to change this (on most platforms, you can reduce the amount
> of time a socket spends in CLOSE_WAIT before going to CLOSED), but it may
> not
> be a good idea to use them.  The CLOSE_WAIT state helps make sure that all
> data is delivered to the right TCP connection and not a different,
> unrelated
> TCP connection by accident.
>
> Jean-Paul


Thank you very much Jean-Paul, this answer my issue.

And sorry for having doubted of Twisted for a moment ;-)

Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090115/d40b7662/attachment.html>

From p.mayers at imperial.ac.uk  Thu Jan 15 07:07:41 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 15 Jan 2009 14:07:41 +0000
Subject: [Twisted-Python] SIP support
Message-ID: <496F432D.4070803@imperial.ac.uk>

What's the current status of SIP support in twisted?

I know the support in trunk is older, and there's some newer stuff 
(Sine) on divmod.org (see below) but that's seems heavily dependent on 
mantissa, and crucially doesn't support TCP.

Also - I'm having problems resolving divmod.org from here, as I think 
"ohm.divmod.org" is not responding to DNS queries.



From ddwiggins at advpubtech.com  Thu Jan 15 10:28:22 2009
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 15 Jan 2009 09:28:22 -0800
Subject: [Twisted-Python] Re: adbapi and ConnectionLost.
In-Reply-To: <496CFA6D.2040800@2le.net>
References: <496CFA6D.2040800@2le.net>
Message-ID: <gknrnn$t8v$1@ger.gmane.org>

Sébastien HEITZMANN wrote:
> Hi,
> 
> for a couple of week i search how i should handle mysql disconnection on
> my twisted web service. When I restart the database without restarting
> my service i got some ConnectionLost fired. I have used the cp_reconnect
> on the connection pool and it seem to work ( the lost connection is
> restarted ) but the current query isn't executed.

I ran into a similar thing using mssql with adbapi (through pyodbc). 
The adbapi connection pool holds connections open and uses them to do 
the access, which was causing problems when the database (or the network 
connection between my server and the database) was reset between 
accesses to my service.  I hacked a workaround by creating a thin 
wrapper around adbapi that closes each connection when I'm through with it.

FWIW,
-- 
Don Dwiggins
Advanced Publishing Technology




From washort at twistedmatrix.com  Thu Jan 15 11:13:05 2009
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 15 Jan 2009 13:13:05 -0500
Subject: [Twisted-Python] SIP support
In-Reply-To: <496F432D.4070803@imperial.ac.uk>
References: <496F432D.4070803@imperial.ac.uk>
Message-ID: <20090115181305.GM22704@divmod.org>

On Thu, Jan 15, 2009 at 02:07:41PM +0000, Phil Mayers wrote:
> What's the current status of SIP support in twisted?
>
> I know the support in trunk is older, and there's some newer stuff  
> (Sine) on divmod.org (see below) but that's seems heavily dependent on  
> mantissa, and crucially doesn't support TCP.

I'm currently working on getting RFC 3261-compliant SIP code into
twisted, based on the work in Sine.  A description is here:
http://twistedmatrix.com/trac/wiki/SIPPlan

I'm currently working on #3584, which will provide the transaction and
transport layers described by the RFC.

> Also - I'm having problems resolving divmod.org from here, as I think  
> "ohm.divmod.org" is not responding to DNS queries.

There was a DNS misconfiguration, that should be fixed now.



From toreason at fastmail.fm  Thu Jan 15 12:39:24 2009
From: toreason at fastmail.fm (V S P)
Date: Thu, 15 Jan 2009 14:39:24 -0500
Subject: [Twisted-Python] django with twisted 8.2.x: 2009
In-Reply-To: <d272f0690901142045v93a9709nce1a90df677c80cd@mail.gmail.com>
References: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
	<1231984135.20890.1294853465@webmail.messagingengine.com>
	<d272f0690901142045v93a9709nce1a90df677c80cd@mail.gmail.com>
Message-ID: <1232048364.25572.1295000789@webmail.messagingengine.com>

Hi Alex,
This is just a plan sofar (not implemented yet)

But I plan use twisted for Reports that join
file data and database data.  I also plan to use Twisted
to 'serv' those reports up to the requestor.

Therefore The wisted web server will be used to serve up
the reports,

and twisted Processes that will be pre-spawned using Ampoule
would be the ones that creating the reports.


Some of the reports will be just Excel, some other will be
a more sophisticated web page with bunch of data associated
with it in JSON.  So Django will be used to create a UI
for these report (because I am using Dojo Javascript framework
for the report gui).


Most likely that the serving of the reports will be just one or
two twisted servers, and the 'report workers' will be distributed
across multiple machines.  But in the beginning, or for small
implementations, one server will be doing everything -- it is just
going to be one 'Report Server'.

I still do not have a decision on what to use to 'register' all
the twisted servers on the network, and how to distribute the report
requests to non-busy 'report worker' servers.  Twisted does not
have  a prebuilt solution for this so I have solicited enough input
from the members of the list here to continue my investigation.

I do not plan to use 'twisted defferred' in my viewes -- because
I separate the 'really long-running' tasks out.  In that
sense I will not make the view available at all -- before
the long running task is complete.  After all -- If I want
the user to see something -- I should not expect him to be glued
to the monitor for a couple of hours waiting for something.
Other than that, of course my views are all AJAX -- so they will
be 'asynchronious' from the user prospective.

Since database and file system calls are implemented in C 
even the poorly scalable Python's threading model should be sufficiently
usefull on
multicore system. As long as the file sytem calls and the
DB calls are started from within separate threads (because the GIL
blocking would take effect only when the IO calls return -- and it is
unlikely that they all return at the same time).
But just in case, I personally will still use Ampoule's process model
(it mimics Twisted's thread interface)

My DB is postgres and psycopg2 database access module is specifically
designed for non-blocking multithreaded access.


If yo have a really long running tasks, I suggest you donot
'bind' gui into those -- and instead do what I am doing -- just
submit requests to the database, have background servers process them
and then change the status of the request to 'Done' so that the GUI
can either poll it or the user will see the task is completed.
Because during those tasks you can have user logoff, DB shutdown, etc.

Vlad

On Wed, 14 Jan 2009 20:45:39 -0800, "Alex Clemesha" <clemesha at gmail.com>
said:
> > It ended up pretty painless (sofar)
> 
> Hey Vlad,
> 
> Thanks for posting your solution!
> 
> Care to discuss your use case for mixing Django and Twisted?
> 
> I have considered mixing the two for a project that combines
> a web interface and some XMPP functionality, but I have not yet
> gone down this route ...
> 
> What about using deferreds in your views? (is that even a useful/good
> idea ?)
> and what about blocking model calls, have you consider these scenarios?
> 
> Thanks for any feedback on this interesting topic.
> -Alex
> 
> 
> -- 
> Alex Clemesha
> clemesha.org
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Access all of your messages and folders
                          wherever you are




From gabriel.rossetti at arimaz.com  Fri Jan 16 00:37:54 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 16 Jan 2009 08:37:54 +0100
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
Message-ID: <49703952.20003@arimaz.com>

Hello everyone,

I have written some code using Twisted that spawns threads and another 
using wxPython integration. For some reason when reactor.stop() is 
called they don't always exit. I suspect that the reactor is waiting on 
the threads to finish, which they apparently don't do, and as for the wx 
integration, I don't know, maybe wx's main loop is in a separate thread 
and it would be the same problem. Does anyone know/have an idea or has 
anyone else experienced this?

Thank you,
Gabriel



From reza at getpeer.com  Fri Jan 16 02:08:24 2009
From: reza at getpeer.com (Reza Lotun)
Date: Fri, 16 Jan 2009 09:08:24 +0000
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
In-Reply-To: <49703952.20003@arimaz.com>
References: <49703952.20003@arimaz.com>
Message-ID: <356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>

Hi Gabriel,

I don't quite understand your question. Do you mean to say that you
have written some code with wx and Twisted in an integrated event
loop, and are doing something like reactor.callInThread(someCall), and
when you call reactor.stop the app doesn't exit? AFAIK, any thread
spawning goes through Twisted's internal thread pool and thread
joining should be handled by reactor.stop - I suppose it depends on
what those threads are doing.

Based on my experience with wx and Twisted, I found the following
works quite well:

* Have the reactor run in a seperate thread from wx (making sure to
use reactor.run(installSignalHandlers=False))
* Spawn threads from wx->Twisted in the proper way: use
reactor.callFromThread(reactor.callInThread(someCall))

Hope this helped,
Reza

On Fri, Jan 16, 2009 at 7:37 AM, Gabriel Rossetti
<gabriel.rossetti at arimaz.com> wrote:
> Hello everyone,
>
> I have written some code using Twisted that spawns threads and another using
> wxPython integration. For some reason when reactor.stop() is called they
> don't always exit. I suspect that the reactor is waiting on the threads to
> finish, which they apparently don't do, and as for the wx integration, I
> don't know, maybe wx's main loop is in a separate thread and it would be the
> same problem. Does anyone know/have an idea or has anyone else experienced
> this?
>
> Thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Reza Lotun
Senior Software Engineer
Peer Technologies Limited
reza at getpeer.com



From jean-francois.boeuf at eads.com  Fri Jan 16 05:33:31 2009
From: jean-francois.boeuf at eads.com (Boeuf, Jean-Francois)
Date: Fri, 16 Jan 2009 13:33:31 +0100
Subject: [Twisted-Python] Write into a persistent connection before stopping
Message-ID: <050AD9702349384DADA9CD248005366902459753@SMFIDF806A.main.fr.ds.corp>

 
Hello,

I have an application using twisted in which the web browser opens a
persistent connection when a user logs in (COMET model). I want to write
data into active persistent connections at server stop to notify client to
logout properly.

To do that, I add a system event trigger to the reactor calling the method
that closes session before shutdown when I start the webService. This method
is called when twisted receives a SIGTERM and I can see in twistd.log traces
of writing to the persistent connexion before services stops and connexions
are closed. But the web browser never receives this content and listening
the traffic between server and client with wireshark, I can't see anything
else than the [FIN, ACK] packets that are sent when server ends all
connections (delayed for maximum clarity in the logs).

The same method is called to logout client properly when session expires and
does work fully.

You can see below the twistd.log file when the servers stops.

Thank you for your help.

Regards

Jean-François


twistd.log
----------
2009-01-16 13:26:16+0100 [-] Received SIGTERM, shutting down.
2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - [16/Jan/2009:12:26:16 +0000]
"GET /sim/listen?sourceScreen=216 HTTP/1.1" 200 166
"http://peyo:8080/sim?id=216" "Mozilla/5.0 (Windows; U; Windows NT 5.1; fr;
rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16"
2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - [16/Jan/2009:12:26:16 +0000]
"GET /sim/listen?sourceScreen=217 HTTP/1.1" 200 166
"http://peyo:8080/sim?id=217" "Mozilla/5.0 (Windows; U; Windows NT 5.1; fr;
rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16"
2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - [16/Jan/2009:12:26:16 +0000]
"GET /sim/listen?sourceScreen=218 HTTP/1.1" 200 166
"http://peyo:8080/sim?id=218&screen0=216&screen1=217&nbScreen=2"
"Mozilla/5.0 (Windows; U; Windows NT 5.1; fr; rv:1.8.1.16) Gecko/20080702
Firefox/2.0.0.16"
2009-01-16 13:26:25+0100 [-] (Port 8080 Closed)
2009-01-16 13:26:25+0100 [-] Stopping factory
<cockpitServer.userSessionManagement.cockpitSite.CockpitSite object at
0xb6db9e6c>
2009-01-16 13:26:25+0100 [-] (Port 8082 Closed)
2009-01-16 13:26:25+0100 [-] Stopping factory
<cockpitServer.soapService.SoapSite object at 0xb7092d0c>
2009-01-16 13:26:25+0100 [-] Main loop terminated.
2009-01-16 13:26:25+0100 [-] Server Shut Down



From gabriel.rossetti at arimaz.com  Fri Jan 16 05:45:12 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 16 Jan 2009 13:45:12 +0100
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
In-Reply-To: <356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
References: <49703952.20003@arimaz.com>
	<356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
Message-ID: <49708158.6020300@arimaz.com>


Reza Lotun wrote:
> Hi Gabriel,
>
> I don't quite understand your question. Do you mean to say that you
> have written some code with wx and Twisted in an integrated event
> loop, and are doing something like reactor.callInThread(someCall), and
> when you call reactor.stop the app doesn't exit? AFAIK, any thread
> spawning goes through Twisted's internal thread pool and thread
> joining should be handled by reactor.stop - I suppose it depends on
> what those threads are doing.
>
>   

Almost :-) I have 2 programs, one is Twisted + wx using the integrated 
event loop, as described in the Twisted documentation. This program has 
no threads, but I use reactor.callFromThread sometimes from the wx part.

The other program is Twisted with no wx but it uses threads 
(threads.deferToThread).

They both have trouble sometimes closing when reactor.stop() is called, 
not always though.


> Based on my experience with wx and Twisted, I found the following
> works quite well:
>
> * Have the reactor run in a seperate thread from wx (making sure to
> use reactor.run(installSignalHandlers=False))
> * Spawn threads from wx->Twisted in the proper way: use
> reactor.callFromThread(reactor.callInThread(someCall))
>
>   

Hmmm, I'll give that a try later on, does it work better than the 
official way of doing it? Has anyone else tried this?

> Hope this helped,
> Reza
>
>   
Thanks Reza
> On Fri, Jan 16, 2009 at 7:37 AM, Gabriel Rossetti
> <gabriel.rossetti at arimaz.com> wrote:
>   
>> Hello everyone,
>>
>> I have written some code using Twisted that spawns threads and another using
>> wxPython integration. For some reason when reactor.stop() is called they
>> don't always exit. I suspect that the reactor is waiting on the threads to
>> finish, which they apparently don't do, and as for the wx integration, I
>> don't know, maybe wx's main loop is in a separate thread and it would be the
>> same problem. Does anyone know/have an idea or has anyone else experienced
>> this?
>>
>> Thank you,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>     
>
>
>
>   



From waterbug at pangalactic.us  Fri Jan 16 07:06:14 2009
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Fri, 16 Jan 2009 09:06:14 -0500
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
In-Reply-To: <356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
References: <49703952.20003@arimaz.com>
	<356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
Message-ID: <49709456.1020102@pangalactic.us>

Reza Lotun wrote:
> * Have the reactor run in a seperate thread from wx (making sure to
> use reactor.run(installSignalHandlers=False))
> * Spawn threads from wx->Twisted in the proper way: use
> reactor.callFromThread(reactor.callInThread(someCall))

I'd second that -- I've used the pattern described here:
http://netofpeers.com/wiki2/index.php/WxPython_And_Twisted_Example

... to implement a wxpython client for David Ripton's ampchat example
(his uses a pygtk client):
http://ripton.net/hg/ampchat

... you can access my clone of ampchat (with wxpython client) here:
https://pangalactic.us/repo/ampchat/

Steve



From reza at getpeer.com  Fri Jan 16 07:23:01 2009
From: reza at getpeer.com (Reza Lotun)
Date: Fri, 16 Jan 2009 14:23:01 +0000
Subject: [Twisted-Python] reactor.stop() and thread and wxPython problem
In-Reply-To: <49708158.6020300@arimaz.com>
References: <49703952.20003@arimaz.com>
	<356e30830901160108i7670e2e4re663fed9c0082863@mail.gmail.com>
	<49708158.6020300@arimaz.com>
Message-ID: <356e30830901160623j36e3dc34ic2e12780ad5a77ac@mail.gmail.com>

>> * Have the reactor run in a seperate thread from wx (making sure to
>> use reactor.run(installSignalHandlers=False))
>> * Spawn threads from wx->Twisted in the proper way: use
>> reactor.callFromThread(reactor.callInThread(someCall))

A small point, but my code snippet example should have been:

reactor.callFromThread(reactor.callInThread, someCall)

Cheers,
Reza

-- 
Reza Lotun
Senior Software Engineer
Peer Technologies Limited
reza at getpeer.com



From clemesha at gmail.com  Fri Jan 16 14:54:30 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Fri, 16 Jan 2009 13:54:30 -0800
Subject: [Twisted-Python] django with twisted 8.2.x: 2009
In-Reply-To: <1232048364.25572.1295000789@webmail.messagingengine.com>
References: <20090114230001.9754.276630402.divmod.quotient.2638@henry.divmod.com>
	<1231984135.20890.1294853465@webmail.messagingengine.com>
	<d272f0690901142045v93a9709nce1a90df677c80cd@mail.gmail.com>
	<1232048364.25572.1295000789@webmail.messagingengine.com>
Message-ID: <d272f0690901161354x13f0eec4lf730eaac443eccf@mail.gmail.com>

Vlad,

I appreciate you detailed response, thanks.
>
> If yo have a really long running tasks, I suggest you donot
> 'bind' gui into those -- and instead do what I am doing -- just
> submit requests to the database, have background servers process them
> and then change the status of the request to 'Done' so that the GUI
> can either poll it or the user will see the task is completed.
> Because during those tasks you can have user logoff, DB shutdown, etc.
Absolutely - I agree that the pattern of having background server
process handle the
work of long running tasks is the way to go.

Good luck on implementing your app.
-Alex


-- 
Alex Clemesha
clemesha.org



From phil at bubblehouse.org  Fri Jan 16 17:28:06 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 16 Jan 2009 19:28:06 -0500
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <18795.61464.631046.43215@jon.es>
References: <18795.61464.631046.43215@jon.es>
Message-ID: <A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>

On Jan 12, 2009, at 8:36 PM, Terry Jones wrote:
> I think I've finally gotten to the bottom of why exceptions  
> sometimes lose
> their tracebacks when using inlineCallbacks.
[snip]
> We make a failure object, it has a
> traceback, but after passing it to the errback method on a deferred  
> the
> traceback is gone.
>
> This happens because _runCallbacks in defer.py finds no call/errback
> functions to call on the deferred, drops into this code:
>
>        if isinstance(self.result, failure.Failure):
>            self.result.cleanFailure()
>
> which sets the __dict__ on the failure object to the result of the
> failure's __getstate__ method, which sets the traceback to None:
>
>        # added 2003-06-23. See comment above in __init__
>        c['tb'] = None
>
> But the comment in __init__ seems to have been deleted.

The comment was this:

         # added 2003-06-23 by Chris Armstrong. Yes, I actually have a
         # use case where I need this traceback object, and I've made
         # sure that it'll be cleaned up.
         self.tb = tb

presumably referring to the problem with keeping references to  
tracebacks that was a potential pitfall in the Python version of that  
time. That's a non-issue since Python 2.2, though, which is probably  
why the comment got deleted.

Originally all __getstate__ did was stringify the object's state,  
which is probably why cleanFailure calls it directly. It looks to me  
like most of the code from __getstate__ should really be moved into a  
separate method, which would be called from cleanFailure as well as  
__getstate__.

This assumes that __getstate__ would still set c['tb'] to None, but  
that cleanFailure would not. I'm not sure what the repercussions of  
this would be, though. It seems the old problem with keeping  
references to tracebacks is less of an issue now, based on this from  
the current Python docs:

> Note Beginning with Python 2.2, such cycles are automatically  
> reclaimed when garbage collection is enabled and they become  
> unreachable, but it remains more efficient to avoid creating cycles.

I'd appreciate any feedback.

-phil



From terry at jon.es  Fri Jan 16 17:51:16 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 17 Jan 2009 01:51:16 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: Your message at 19:28:06 on Friday, 16 January 2009
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
Message-ID: <18801.11140.7108.766495@jon.es>

Hi Phil

>>>>> "Phil" == Phil Christensen <phil at bubblehouse.org> writes:
Phil> On Jan 12, 2009, at 8:36 PM, Terry Jones wrote:
>> # added 2003-06-23. See comment above in __init__
>> c['tb'] = None
>> 
>> But the comment in __init__ seems to have been deleted.

Phil> The comment was this:

Phil> # added 2003-06-23 by Chris Armstrong. Yes, I actually have a
Phil> # use case where I need this traceback object, and I've made
Phil> # sure that it'll be cleaned up.
Phil> self.tb = tb

I'd seen that comment, and even the same date on it, but assumed there was
more detail in __init__.  I don't know what Chris' use case was, but we
definitely have another one now.

I don't really understand the comment in any case. If someone creates a
Failure instance by explicitly passing in all of exc_value, exc_type, and
exc_tb - with the probable intention that this failure instance is passed
along an errback chain - then I think it's reasonable for them to expect
the Failure will keep the tb and not toss it.

I may well be misunderstanding things, but I don't see how there can be any
question that the self.tb = tb line is desirable.

Phil> Originally all __getstate__ did was stringify the object's state,
Phil> which is probably why cleanFailure calls it directly. It looks to me
Phil> like most of the code from __getstate__ should really be moved into a
Phil> separate method, which would be called from cleanFailure as well as
Phil> __getstate__.

That sounds fine to me.

If I understand you and the code correctly, the only reason for calling
cleanFailure is to reduce the number of references to other objects, thus
clearing the way for garbage collection that would not otherwise happen. Is
that right?

Phil> I'd appreciate any feedback.

And thanks a lot for yours. It would be very useful to get this fixed. I'm
happy to submit a patch, though your suggested change looks like a couple
of minutes' work (just swapping the names of the cleanFailure and
__getstate__ methods gets you almost all the way there).

Terry



From shawn at schurchcomputers.com  Fri Jan 16 18:54:30 2009
From: shawn at schurchcomputers.com (Shawn Church)
Date: Fri, 16 Jan 2009 17:54:30 -0800
Subject: [Twisted-Python] getProcessOutput on windows
Message-ID: <f4a7d4e0901161754q4fe9ca73m927cb0a60857e3b6@mail.gmail.com>

I am developing an application on Linux for deployment on Windows.  I want
to use the getProcessOutput function but seem to remember problems with the
windows reactor and processes last time I tried this (a couple years ago).
I've gone through the active bugs and did not see anything critical to my
usage except maybe #2789,  which is a year old and apparently not going to
be addressed due to Windows limitations.

Is getProcessOutput usable on Windows?  If not any suggestions for an
alternative?  Note that for this application I do not care about output
while the process is running,  I just want to reap the output (or error)
when the process is done.

Thanks for your help,


Shawn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090116/e2d44c0a/attachment.html>

From radix at twistedmatrix.com  Fri Jan 16 19:31:58 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 16 Jan 2009 21:31:58 -0500
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when 
	using inlineCallbacks
In-Reply-To: <A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
Message-ID: <60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>

On Fri, Jan 16, 2009 at 7:28 PM, Phil Christensen <phil at bubblehouse.org> wrote:
> The comment was this:
>
>        # added 2003-06-23 by Chris Armstrong. Yes, I actually have a
>        # use case where I need this traceback object, and I've made
>        # sure that it'll be cleaned up.
>        self.tb = tb
>
> presumably referring to the problem with keeping references to tracebacks
> that was a potential pitfall in the Python version of that time. That's a
> non-issue since Python 2.2, though, which is probably why the comment got
> deleted.

Keeping references to tracebacks still has many potential pitfalls.
It's a fundamental problem: tracebacks refer to all their frames,
which refer to all their locals; this makes it *really* easy to create
uncollectable cycles if you have any __del__ methods *anywhere*. It's
just not safe to keep the traceback reference in the general case.
Failure needs to work with arbitrary code.

> Originally all __getstate__ did was stringify the object's state, which is
> probably why cleanFailure calls it directly. It looks to me like most of the
> code from __getstate__ should really be moved into a separate method, which
> would be called from cleanFailure as well as __getstate__.

Sure, that would be a slightly better factoring.

> This assumes that __getstate__ would still set c['tb'] to None, but that
> cleanFailure would not. I'm not sure what the repercussions of this would
> be, though. It seems the old problem with keeping references to tracebacks
> is less of an issue now, based on this from the current Python docs:
>
>> Note Beginning with Python 2.2, such cycles are automatically reclaimed
>> when garbage collection is enabled and they become unreachable, but it
>> remains more efficient to avoid creating cycles.
>
> I'd appreciate any feedback.
>
> -phil

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From glyph at divmod.com  Sat Jan 17 00:54:45 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 17 Jan 2009 07:54:45 -0000
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
Message-ID: <20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>


On 02:31 am, radix at twistedmatrix.com wrote:
>On Fri, Jan 16, 2009 at 7:28 PM, Phil Christensen 
><phil at bubblehouse.org> wrote:

>Keeping references to tracebacks still has many potential pitfalls.
>It's a fundamental problem: tracebacks refer to all their frames,
>which refer to all their locals; this makes it *really* easy to create
>uncollectable cycles if you have any __del__ methods *anywhere*. It's
>just not safe to keep the traceback reference in the general case.
>Failure needs to work with arbitrary code.

This used to be pretty much 100% of the time, since Deferred itself used 
to have a __del__, so if you had a Deferred anywhere on the stack you 
were dead.  Nowadays it's a little better than that, but a surprising 
number of objects from elsewhere are uncollectable.
>>Originally all __getstate__ did was stringify the object's state, 
>>which is
>>probably why cleanFailure calls it directly. It looks to me like most 
>>of the
>>code from __getstate__ should really be moved into a separate method, 
>>which
>>would be called from cleanFailure as well as __getstate__.

Nevertheless cleanFailure will still need to remove the traceback, for 
the reasons that Chris mentioned.
>Sure, that would be a slightly better factoring.

Would that help, though?

I don't fully understand the issue, so this is probably wrong in some 
obvious way, but: do we really need to hang on to a real traceback 
object to resolve the issue in question?  It sounds like the real issue 
here is that we don't have a channel to communicate a "cleaned 
traceback" (i.e., failure with stringified frames, but no traceback) 
from one bit of code to another?
>>>Note Beginning with Python 2.2, such cycles are automatically 
>>>reclaimed
>>>when garbage collection is enabled and they become unreachable, but 
>>>it
>>>remains more efficient to avoid creating cycles.

I'm not sure what Python documentation you're quoting here, but that's 
not accurate in the general case.  For example, see 
<http://docs.python.org/library/gc.html#gc.garbage>:

    "Objects that have __del__() methods and are part of a reference 
cycle     cause the entire reference cycle to be uncollectable".
>>I'd appreciate any feedback.

Two bits of feedback:

1. More of this discussion should be on a ticket.  The mailing list is 
good for getting discussions started and figuring out what needs to be 
done, but now we're talking about the technical specifics of resolving a 
specific problem.  Someone (terry?) should take the specifics in the 
email that started this thread and file an appropriate ticket.

2. When filing that ticket, I'd really like a full working example of 
inlineCallbacks not showing a traceback to play with, not just examples 
of portions of the problem.  The obvious example I tried,

    from twisted.internet.defer import inlineCallbacks

    def buggy2():
        raise RuntimeError("Whoops!")

    @inlineCallbacks
    def buggy():
        yield buggy2()

    buggy()

actually prints a nice descriptive traceback.



From glyph at divmod.com  Sat Jan 17 01:18:40 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 17 Jan 2009 08:18:40 -0000
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
Message-ID: <20090117081840.12555.411923736.divmod.xquotient.3620@weber.divmod.com>

On 07:54 am, glyph at divmod.com wrote:
>2. When filing that ticket, I'd really like a full working example of 
>inlineCallbacks not showing a traceback to play with

Just to drive that point home, Terry, I found an interesting error in 
your initial example.  Your example does this:

        info = sys.exc_info()
        f = failure.Failure(*info)

but sys.exc_info() is a tuple of (type, value, traceback), whereas 
Failure takes a tuple of (value, type, traceback).  This is why the 
default behavior of Failure() with no arguments is to capture the 
current exception.

Creating an invalid Failure, as you do here, has some _very_ weird 
ramifications for the low-level error-formatting code in the guts of the 
logging system; the reason the traceback doesn't get logged is due to an 
exception where your ZeroDivisionError instance doesn't have a 
__module__ attribute (since it's in the "type" slot).

If I modify your example to pass the arguments in the correct order, 
like so:

    import sys
    from twisted.internet import defer
    from twisted.python import failure

    d = defer.Deferred()
    try:
        1 / 0
    except Exception:
        exc_type, exc_value, exc_tb = sys.exc_info()
        f = failure.Failure(exc_value, exc_type, exc_tb)
        print "f.tb is %r" % f.tb
        d.errback(f)
        print "f.tb is %r" % f.tb

then I get a nice traceback, like this:

    f.tb is <traceback object at 0xb7c628c4>
    f.tb is None
    Unhandled error in Deferred:
    Traceback (most recent call last):
      File "example.py", line 10, in <module>
        f = failure.Failure(exc_value, exc_type, exc_tb)
    --- <exception caught here> ---
      File "example.py", line 7, in <module>
        1 / 0
    exceptions.ZeroDivisionError: integer division or modulo by zero

which is exactly what Failure is designed to do, i.e. produce useful 
tracebacks once the actual "traceback" instance is gone.

So, we still have some diagnosis to do on why you don't seem to be 
getting useful tracebacks from inlineCallbacks :).  Now, not only can I 
not reproduce the bug, your reasoning doesn't make sense any more 
either.



From terry at jon.es  Sat Jan 17 10:11:09 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 17 Jan 2009 18:11:09 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: Your message at 07:54:45 on Saturday, 17 January 2009
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
Message-ID: <18802.4397.269231.160969@jon.es>

Hi Glyph

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> It sounds like the real issue here is that we don't have a channel
glyph> to communicate a "cleaned traceback" (i.e., failure with stringified
glyph> frames, but no traceback) from one bit of code to another?

Yes, now that I better understand what's going on with cleaning failures, I
think that's completely accurate.

glyph> 1. More of this discussion should be on a ticket.  The mailing list
glyph> is good for getting discussions started and figuring out what needs
glyph> to be done, but now we're talking about the technical specifics of
glyph> resolving a specific problem.  Someone (terry?) should take the
glyph> specifics in the email that started this thread and file an
glyph> appropriate ticket.

OK, I will do that, because I do still think there is a problem. Code below.

glyph> 2. When filing that ticket, I'd really like a full working example
glyph> of inlineCallbacks not showing a traceback to play with, not just
glyph> examples of portions of the problem.  The obvious example I tried,

glyph> from twisted.internet.defer import inlineCallbacks

glyph> def buggy2():
glyph>     raise RuntimeError("Whoops!")

glyph> @inlineCallbacks
glyph> def buggy():
glyph>     yield buggy2()

glyph> buggy()

glyph> actually prints a nice descriptive traceback.

That's because buggy2 is raising an exception, there's no failure coming
back via a deferred into buggy (where its traceback would ultimately be
replaced with None in cleanFailure).

Here's a example:

    from twisted.internet import reactor, defer

    def ok(r): print 'OK', r
    def nok(r): print 'FAILED', r

    def two():
        try:
            1 / 0
        except Exception:
            return defer.fail()

    @defer.inlineCallbacks
    def one():
        yield two()

    def zero():
        one().addCallbacks(ok, nok).addBoth(lambda _: reactor.stop())

    reactor.callLater(0, zero)
    reactor.run()


Because two returns a deferred whose errback has been called, one gets a
result that's a failure and that failure gets cleaned.  The output of
running this example is:

    FAILED [Failure instance: Traceback: <type 'exceptions.ZeroDivisionError'>: integer division or modulo by zero
    /usr/lib/python2.5/site-packages/twisted/internet/posixbase.py:228:mainLoop
    /usr/lib/python2.5/site-packages/twisted/internet/base.py:561:runUntilCurrent
    five.py:17:zero
    /usr/lib/python2.5/site-packages/twisted/internet/defer.py:813:unwindGenerator
    --- <exception caught here> ---
    /usr/lib/python2.5/site-packages/twisted/internet/defer.py:724:_inlineCallbacks
    five.py:14:one
    ]

Showing the exception caught on line 14 (in one) not line 8. If you look at
the deferred that comes back from calling two, its failure result has None
as its tb attribute (via the process described in my original mail).


However if we replace one with a version that doesn't use inlineCallbacks:

    def one():
        return two()

Then the failure has the original traceback:

    FAILED [Failure instance: Traceback: <type 'exceptions.ZeroDivisionError'>: integer division or modulo by zero
    /usr/lib/python2.5/site-packages/twisted/internet/posixbase.py:228:mainLoop
    /usr/lib/python2.5/site-packages/twisted/internet/base.py:561:runUntilCurrent
    five.py:17:zero
    five.py:14:one
    --- <exception caught here> ---
    five.py:8:two
    ]


I'll file a ticket and we can take discussion about what to do into the
tracker.

Thanks!

Terry



From terry at jon.es  Sat Jan 17 10:20:32 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 17 Jan 2009 18:20:32 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: Your message at 08:18:40 on Saturday, 17 January 2009
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
	<20090117081840.12555.411923736.divmod.xquotient.3620@weber.divmod.com>
Message-ID: <18802.4960.309146.265761@jon.es>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:

glyph> Just to drive that point home, Terry, I found an interesting error
glyph> in your initial example.  Your example does this:

glyph> info = sys.exc_info()
glyph> f = failure.Failure(*info)

glyph> but sys.exc_info() is a tuple of (type, value, traceback), whereas
glyph> Failure takes a tuple of (value, type, traceback).

OMG!  I guess I should learn to read.

glyph> So, we still have some diagnosis to do on why you don't seem to be
glyph> getting useful tracebacks from inlineCallbacks :).  Now, not only
glyph> can I not reproduce the bug, your reasoning doesn't make sense any
glyph> more either.

Glyph, sometimes I think you must be the most patient human ever. What a
friendly and gentle correcting paragraph that is. I'm sure you'd make a
great parent.  (And I'm still a child, besides.)  Still, I'd love to have
been a fly on the wall when you realized I had the args reversed :-) I'm a
big fan of expletives.

Thanks a lot. I'm sure that's going to save me many hours of frustration
and confusion.

Terry



From terry at jon.es  Sat Jan 17 13:52:11 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 17 Jan 2009 21:52:11 +0100
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: Your message at 07:54:45 on Saturday, 17 January 2009
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
Message-ID: <18802.17659.193302.233779@jon.es>

Hi all.

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> 1. More of this discussion should be on a ticket.

See http://twistedmatrix.com/trac/ticket/3622

Terry



From exarkun at twistedmatrix.com  Sat Jan 17 22:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jan 2009 05:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1232255113.54.1351725487@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090118/2e9e589e/attachment.html>

From glyph at divmod.com  Sun Jan 18 01:51:45 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 18 Jan 2009 08:51:45 -0000
Subject: [Twisted-Python] Tracebacks being dropped from exceptions when
	using inlineCallbacks
In-Reply-To: <18802.4960.309146.265761@jon.es>
References: <18795.61464.631046.43215@jon.es>
	<A6B26F6F-E86D-4FBB-8A73-C4D363FA9111@bubblehouse.org>
	<60ed19d40901161831lf4b63f7r16dd96611f0d668c@mail.gmail.com>
	<20090117075445.12555.278277277.divmod.xquotient.3601@weber.divmod.com>
	<20090117081840.12555.411923736.divmod.xquotient.3620@weber.divmod.com>
	<18802.4960.309146.265761@jon.es>
Message-ID: <20090118085145.12555.1356338263.divmod.xquotient.3642@weber.divmod.com>

On 17 Jan, 05:20 pm, terry at jon.es wrote:
>>>>>>"glyph" == glyph  <glyph at divmod.com> writes:

>glyph> So, we still have some diagnosis to do on why you don't seem to 
>be
>glyph> getting useful tracebacks from inlineCallbacks :).  Now, not 
>only
>glyph> can I not reproduce the bug, your reasoning doesn't make sense 
>any
>glyph> more either.
>
>Glyph, sometimes I think you must be the most patient human ever. What 
>a
>friendly and gentle correcting paragraph that is. I'm sure you'd make a
>great parent.  (And I'm still a child, besides.)  Still, I'd love to 
>have
>been a fly on the wall when you realized I had the args reversed :-) 
>I'm a
>big fan of expletives.

Heh.  Not at all.  There were some expletives /leading up/ to that 
discovery, and I do often have to exercise... patience... when 
responding to certain internet fora, but not this time.  Your error was 
quite subtle, and it had me fooled for at least an hour before I could 
figure out what was wrong.  I was starting to think you'd discovered 
some insane bug in logging, in Failure, or maybe even Python exception 
handling (for some reason I couldn't get pdb.pm() to help me debug this, 
and I'm still looking into that).
>Thanks a lot. I'm sure that's going to save me many hours of 
>frustration
>and confusion.

No problem.  I'm just glad to see there isn't a bug in Failure here!



From hackingkk at gmail.com  Mon Jan 19 00:15:28 2009
From: hackingkk at gmail.com (Krishnakant)
Date: Mon, 19 Jan 2009 12:45:28 +0530
Subject: [Twisted-Python] strangely getting 8002 can't serialise output when
	returning some list objects
Message-ID: <1232349328.6745.2.camel@krishna-laptop>

hello hackers,
        I am a new user so perhaps I might be bothering with some
question
        already answered.
        I am getting a strange response from a published object with
twisted.
        I find no problem returning lists from a function.
        but when that same function returns records from a postgresql
database
        using psycopg2 (again converted to list ) I get the dredded 8002
can't
        serialise output error.
        I have confirmed that i indeed casted the results into a list
and the
        terminal where I run the twisted published object, I can print
the list
        properly.
        but on the python prompt i use xmlrpclib and when I execute the
function
        from the client, I get that error.
        how is this possible that a list created normally is getting
returned
        and when i create an exact same list this time with a database
record
        with psycopg2, i get error?
        can any one solve the suspence?
        happy hacking.
        Krishnakant.
        





From hackingkk at gmail.com  Mon Jan 19 03:46:04 2009
From: hackingkk at gmail.com (Krishnakant)
Date: Mon, 19 Jan 2009 16:16:04 +0530
Subject: [Twisted-Python] confused on combining different py moduels to make
	a twisted app
Message-ID: <1232361964.6745.45.camel@krishna-laptop>

hello hackers,
I am a new comer to twisted and find it very interesting.
By the way I got my previous problem solved regarding returning lists.

Now I have another confusion.

I have a lot of modules (.py) which I wish to combine and create a
server application in twisted.
for example I have organisation.py which gets and sets organisation
related data in the application.

there is a vendor.py for getting and setting vendor related data and
such other modules related to inventory.
Now, I understand that we can publish one object at a time and listen to
the incoming requests on the given port with the reactor running.
But I want to use these other modules together with the main module.
How can i create a package for such a situation?

I have the __init__.py file in the folder to make a python package,
What I can't understand is how can I register all the classes in the
different files to listen for function calls from the client?
I am confused on managing the entry point so to say.
happy hacking.
Krishnakant.




From spongelavapaul at googlemail.com  Mon Jan 19 04:09:06 2009
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Mon, 19 Jan 2009 11:09:06 +0000
Subject: [Twisted-Python] spawnProcess() works after reactor.stop()
Message-ID: <8EB5C56E-945D-4036-AF6B-29573549B7EA@googlemail.com>

I'm using SelectReactor on Linux for a system that spawns a lot of sub- 
processes. I'm finding that there are some cases where a signal to the  
twistd process doesn't reap the children and I think it's because the  
SIGINT handler defers the shutdown but doesn't prevent spawnProcess()  
from working in the meantime.

What's happening is the signal gets handled by calling stop(). This  
sets a flag and schedules the shutdown event for later.
  - Then Linux signals all the sub-processes.
  - Then my code gets scheduled and spawns a process or 2.
  - The shutdown event runs

The result is that any process spawned after the signal is orphaned.

So, my question is: is this a bug in the reactor (should it check  
self._stopped)?

If it's a bug, I expect it's a bit more general than just processes -  
would it be better to have the select loop check _stopped.

If it's not a bug, would it be possible to add a public accessor for  
the stopped state so application code can decide whether to run or not?

ta,
pt.



From dkarnows at gmail.com  Mon Jan 19 09:59:28 2009
From: dkarnows at gmail.com (David Karnowski)
Date: Mon, 19 Jan 2009 11:59:28 -0500
Subject: [Twisted-Python] Mailing list archive search?
Message-ID: <a399cf060901190859s79a97c25h1d93d3d2e9b9ec64@mail.gmail.com>

Is there a search function available for the mailing list archives? I don't
see a search field
anywhere<http://twistedmatrix.com/pipermail/twisted-python/>.
Am I missing something obvious? The search field on your home page appears
to just search the Tickets, Changesets, & the Wiki, and not the mailing list
archives. I ended just doing it manually through a custom Google
search<http://www.google.com/advanced_search?q=+site:http://twistedmatrix.com/pipermail/twisted-python>(adding
a "site:
http://twistedmatrix.com/pipermail/twisted-python" parameter to the Google
query). If there isn't search functionality for the mailing list archives
it'd be nice to have it added.

regards,
David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090119/432767fd/attachment.html>

From exarkun at divmod.com  Mon Jan 19 10:07:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Jan 2009 12:07:00 -0500
Subject: [Twisted-Python] Mailing list archive search?
In-Reply-To: <a399cf060901190859s79a97c25h1d93d3d2e9b9ec64@mail.gmail.com>
Message-ID: <20090119170700.9754.1982968642.divmod.quotient.5195@henry.divmod.com>

On Mon, 19 Jan 2009 11:59:28 -0500, David Karnowski <dkarnows at gmail.com> wrote:
>Is there a search function available for the mailing list archives? I don't
>see a search field
>anywhere<http://twistedmatrix.com/pipermail/twisted-python/>.
>Am I missing something obvious? The search field on your home page appears
>to just search the Tickets, Changesets, & the Wiki, and not the mailing list
>archives. I ended just doing it manually through a custom Google
>search<http://www.google.com/advanced_search?q=+site:http://twistedmatrix.com/pipermail/twisted-python>(adding
>a "site:
>http://twistedmatrix.com/pipermail/twisted-python" parameter to the Google
>query). If there isn't search functionality for the mailing list archives
>it'd be nice to have it added.

Okay, I added a search engine.

Jean-Paul



From mg at daimi.au.dk  Mon Jan 19 11:20:00 2009
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 19 Jan 2009 19:20:00 +0100
Subject: [Twisted-Python] Re: Mailing list archive search?
In-Reply-To: <a399cf060901190859s79a97c25h1d93d3d2e9b9ec64@mail.gmail.com>
	(David Karnowski's message of "Mon, 19 Jan 2009 11:59:28 -0500")
References: <a399cf060901190859s79a97c25h1d93d3d2e9b9ec64@mail.gmail.com>
Message-ID: <87ab9n5fan.fsf@hbox.dyndns.org>

"David Karnowski" <dkarnows at gmail.com> writes:

> Is there a search function available for the mailing list archives?

Just use Gmane -- there you can also read and post using a newsreader.
The Twisted lists are here:

  http://dir.gmane.org/index.php?prefix=gmane.comp.python.twisted

and in particular here:

  http://dir.gmane.org/gmane.comp.python.twisted

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 196 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090119/47cb459f/attachment.sig>

From dkarnows at gmail.com  Mon Jan 19 11:42:14 2009
From: dkarnows at gmail.com (David Karnowski)
Date: Mon, 19 Jan 2009 13:42:14 -0500
Subject: [Twisted-Python] pb: callRemotes execute serially on server-side
Message-ID: <a399cf060901191042q1a1f05fflfc35c99ba05cad2e@mail.gmail.com>

Hi all,

I'm having a client-side pb app call the same server-side function 10
times with this client-side code:

 def process_test(rootObject):
     for i in range(10):
         _logger.debug("Calling remote with arg: %d" % (i))
         deferred = rootObject.callRemote("test_it", i)
         deferred.addCallbacks(success, problem,
callbackKeywords={'i': i}, errbackKeywords={'i': i})

The server-side "remote_test_it" function takes 5 seconds to complete
(per call). I find the following. The first point is what I'd expect,
but points 2 & 3 are not:

1) The above for-loop completes asynchronously, with no blocking. It's
complete in a few-thousand milliseconds.
2) The server-side executes serially. The second client-side call to
"remote_test_it" doesn't start executing "test_it" on the server-side
until after the first call has finished. I'd have thought these 10
calls would occur in parallel (in separate server-side threads). No?
3) None of the callbacks you see in the above client-side for-loop get
executed until ALL 10 callRemotes have finished on the server-side.
e.g. the callRemote for the first loop iteration finishes on the
server-side in 5 seconds, but the associated client-side callback
isn't executed until after 50 seconds (after the 10th loop iteration's
server-side call finishes).

I'm just starting with Twisted. Are points 2 & 3 expected, and is
there a way for me to have them run in parallel rather than serially?

thanks,
David



From exarkun at divmod.com  Mon Jan 19 13:36:11 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Jan 2009 15:36:11 -0500
Subject: [Twisted-Python] pb: callRemotes execute serially on server-side
In-Reply-To: <a399cf060901191042q1a1f05fflfc35c99ba05cad2e@mail.gmail.com>
Message-ID: <20090119203611.9754.1856452398.divmod.quotient.5278@henry.divmod.com>

On Mon, 19 Jan 2009 13:42:14 -0500, David Karnowski <dkarnows at gmail.com> wrote:
>Hi all,
>
>I'm having a client-side pb app call the same server-side function 10
>times with this client-side code:
>
> def process_test(rootObject):
>     for i in range(10):
>         _logger.debug("Calling remote with arg: %d" % (i))
>         deferred = rootObject.callRemote("test_it", i)
>         deferred.addCallbacks(success, problem,
>callbackKeywords={'i': i}, errbackKeywords={'i': i})
>
>The server-side "remote_test_it" function takes 5 seconds to complete
>(per call). I find the following. The first point is what I'd expect,
>but points 2 & 3 are not:
>
>1) The above for-loop completes asynchronously, with no blocking. It's
>complete in a few-thousand milliseconds.
>2) The server-side executes serially. The second client-side call to
>"remote_test_it" doesn't start executing "test_it" on the server-side
>until after the first call has finished. I'd have thought these 10
>calls would occur in parallel (in separate server-side threads). No?
>3) None of the callbacks you see in the above client-side for-loop get
>executed until ALL 10 callRemotes have finished on the server-side.
>e.g. the callRemote for the first loop iteration finishes on the
>server-side in 5 seconds, but the associated client-side callback
>isn't executed until after 50 seconds (after the 10th loop iteration's
>server-side call finishes).
>
>I'm just starting with Twisted. Are points 2 & 3 expected, and is
>there a way for me to have them run in parallel rather than serially?

Twisted is based on "cooperative multitasking" - not preemptive
multithreading.  If you have a task which will take ten seconds
to complete, then you have several options:

  * Just let it take ten seconds.  Since there is no preemption, no
    events will be serviced until the task has finished (ie, for 10
    seconds).  This means you will have serial processing, rather
    than parallel.  This is what you're seeing now.

  * Bring preemptive multithreading into the picture.  Explicitly run
    the task in a thread.  This is probably what you were expecting to
    happen automatically, but it doesn't.  Fortunately, it's quite easy
    to do this - see twisted.internet.threads.deferToThread for the most
    basic (and usually adequate) solution.  You will end up with a Deferred
    which PB knows how to interact with (just return it from your remote_
    method).

  * Convert the implementation of your 10 second task into an asynchronous
    version without using preemptive multithreading.  If your task is CPU
    bound, this may not be suitable (but you might want to consider running
    it in another process rather than another thread, depending on what
    hardware you have available and other concerns).  However, if you're
    waiting for 10 seconds for an HTTP request to complete, then you should
    use some Twisted facility to do the slow network I/O asynchronously
    than blocking on it.  Depending on the network protocol being used, you
    may find a nice high-level asynchronous API somewhere in Twisted, or you
    may need to implement something yourself.

Hope this helps,

Jean-Paul



From Sven-Erik.Tiberg at ltu.se  Tue Jan 20 02:39:17 2009
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Tue, 20 Jan 2009 10:39:17 +0100
Subject: [Twisted-Python] Newbee searching test script for web-servers
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910565C6B2@EMMA.personal.adp.ltu.se>

Hi

Been lurcking this list for some time w/o contributing with only some
questions.

Mostly working with Disrtibuted Interactive 3D simulations and have used
twisted as one solution transfere states between 3D browser nodes.

As I'm using both apache and www.plone.org to store files that builds up
3D applications, I'm curious on how fast a file are delivered from a
web-server.

What I would like to use are a test scripts that accesses files by url
and log access-times.
If I can define multipel files it would be even better.

Will use the same mashine to run the test-script as are hosting both
apache and plone servers.

Sven-Erik Tiberg / ITS
Lulea Univ of Technology
sweden



From wthie at thiengineering.ch  Tue Jan 20 02:50:47 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 20 Jan 2009 10:50:47 +0100
Subject: [Twisted-Python] high server loads on FreeBSD - does kqueue reactor
	help?
In-Reply-To: <20090119203611.9754.1856452398.divmod.quotient.5278@henry.divmod.com>
References: <20090119203611.9754.1856452398.divmod.quotient.5278@henry.divmod.com>
Message-ID: <49759E77.5070309@thiengineering.ch>

Hi all

With a four core, four twisted http server processes (nevow/athena on 
top), dual 100 MBps interfaces, all four cores showing CPU loads of 50% 
  plus, I observe the following degradation in the network traffic with 
tcpdump:

- 'TCP checksum incorrect' raising to almost 25% of all packets observed 
  from one client IP
- TCP Ack'ed lost segment raising to 0.5% of all packets observed

This was with poll reactor on FreeBSD 7.0

- Would it be of any help to switch to kqueue in this case?
- If so, is the documentation about using and patching PyKQueue-1.3 as 
given in

http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.kqreactor.html

correct and up to date, given that on

http://people.freebsd.org/~dwhite/PyKQueue/

the actual version mentioned is 1.2

Thanks in advance, Werner



From terry at jon.es  Tue Jan 20 04:23:26 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 20 Jan 2009 12:23:26 +0100
Subject: [Twisted-Python] Plugins in files with hyphenated names found in
	2.5.0 but not in 8.1.0
Message-ID: <18805.46126.921529.765516@jon.es>

We just upgraded to Twisted 8.1 from 2.5 and discovered that
twisted.plugin.getPlugins no longer finds our plugins.

After much head scratching, Esteve noticed that the plugins were not being
returned because the are in files that have hyphens in their names. There's
no mention of this in the release notes, at least that I can see. Perhaps
the change crept in unnoticed.

I guess this restriction on plugin-containing filenames should either be
documented, or the code should be made to work as it did. I'm happy to open
a ticket - though the text of the ticket would depend on which solution is
preferred.

Terry



From mithrandi at mithrandi.net  Tue Jan 20 05:53:09 2009
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 20 Jan 2009 14:53:09 +0200
Subject: [Twisted-Python] Plugins in files with hyphenated names found
	in 2.5.0 but not in 8.1.0
In-Reply-To: <18805.46126.921529.765516@jon.es>
References: <18805.46126.921529.765516@jon.es>
Message-ID: <20090120125309.GD2417@mithrandi.net>

* Terry Jones <terry at jon.es> [2009-01-20 12:23:26 +0100]:

> We just upgraded to Twisted 8.1 from 2.5 and discovered that
> twisted.plugin.getPlugins no longer finds our plugins.
> 
> After much head scratching, Esteve noticed that the plugins were not being
> returned because the are in files that have hyphens in their names. There's
> no mention of this in the release notes, at least that I can see. Perhaps
> the change crept in unnoticed.

The exact change, I believe, is that plugin source files have to be
valid python modules; that is to say, you have to be able to do:

import foo.plugins.some_plugin

> I guess this restriction on plugin-containing filenames should either be
> documented, or the code should be made to work as it did. I'm happy to open
> a ticket - though the text of the ticket would depend on which solution is
> preferred.

I believe this change was deliberate, so I expect it won't be reverted,
but perhaps someone else can comment further on the design motivations
(and confirm that my explanation is correct).
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20090120/1d3c5702/attachment.sig>

From Sven-Erik.Tiberg at ltu.se  Tue Jan 20 06:37:34 2009
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Tue, 20 Jan 2009 14:37:34 +0100
Subject: [Twisted-Python] Newbee searching test script for web-servers
In-Reply-To: <668D1B8AD729C94DB91D17EC19B8BB910565C6B2@EMMA.personal.adp.ltu.se>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910565C6B5@EMMA.personal.adp.ltu.se>

Sorry for my Q.
After a second thought: on unix > time wget ...... Or Windows with
CygWin the same command.
Pls. Drop my request.
/Sven-Erik 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Sven-Erik
Tiberg
Sent: den 20 januari 2009 10:39
To: Twisted general discussion
Subject: [Twisted-Python] Newbee searching test script for web-servers

Hi

Been lurcking this list for some time w/o contributing with only some
questions.

Mostly working with Disrtibuted Interactive 3D simulations and have used
twisted as one solution transfere states between 3D browser nodes.

As I'm using both apache and www.plone.org to store files that builds up
3D applications, I'm curious on how fast a file are delivered from a
web-server.

What I would like to use are a test scripts that accesses files by url
and log access-times.
If I can define multipel files it would be even better.

Will use the same mashine to run the test-script as are hosting both
apache and plone servers.

Sven-Erik Tiberg / ITS
Lulea Univ of Technology
sweden

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From maarten at treewalker.org  Tue Jan 20 07:16:51 2009
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 20 Jan 2009 15:16:51 +0100
Subject: [Twisted-Python] high server loads on FreeBSD - does kqueue
	reactor help?
Message-ID: <200901201516.51211.maarten@treewalker.org>

On Tuesday 20 January 2009, Werner Thie wrote:

> With a four core, four twisted http server processes (nevow/athena on
> top), dual 100 MBps interfaces, all four cores showing CPU loads of 50%
>   plus, I observe the following degradation in the network traffic with
> tcpdump:
>
> - 'TCP checksum incorrect' raising to almost 25% of all packets observed
>   from one client IP
> - TCP Ack'ed lost segment raising to 0.5% of all packets observed

Incorrect checksums sounds like a hardware problem. Or possibly a driver 
problem if the checksum calculation is done by the CPU instead of the 
network card. In any case it is not possible for user space code like 
Twisted to generate incorrect TCP checksums.

Bye,
		Maarten




From glyph at divmod.com  Tue Jan 20 12:25:59 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 20 Jan 2009 19:25:59 -0000
Subject: [Twisted-Python] Plugins in files with hyphenated names found in
	2.5.0 but not in 8.1.0
In-Reply-To: <20090120125309.GD2417@mithrandi.net>
References: <18805.46126.921529.765516@jon.es>
	<20090120125309.GD2417@mithrandi.net>
Message-ID: <20090120192559.12555.966403788.divmod.xquotient.3660@weber.divmod.com>


On 12:53 pm, mithrandi at mithrandi.net wrote:
>* Terry Jones <terry at jon.es> [2009-01-20 12:23:26 +0100]:

>The exact change, I believe, is that plugin source files have to be
>valid python modules; that is to say, you have to be able to do:
>
>import foo.plugins.some_plugin

This was always the intent.  The change from 2.5 to 8.0 was essentially 
a bugfix; although not an entirely intentional one.  I'm actually 
surprised that dashes in plugin filenames ever worked.  I suspect things 
defined in "some-plugin.py" would have bogus __module__ attributes under 
2.5, and interact oddly with some introspection tools.
>>I guess this restriction on plugin-containing filenames should either 
>>be
>>documented, or the code should be made to work as it did. I'm happy to 
>>open
>>a ticket - though the text of the ticket would depend on which 
>>solution is
>>preferred.
>
>I believe this change was deliberate, so I expect it won't be reverted,
>but perhaps someone else can comment further on the design motivations
>(and confirm that my explanation is correct).

It definitely won't be reverted :).  I don't think it should be 
documented in terms of a filename restriction, either.

In my opinion, the best way to deal with this would be to really improve 
the plugin documentation to make it clear that plugins are not magical 
.py files executed in a weird context, but modules which are imported 
normally and then have their contents inspected.  I've tried writing 
this up a few times, but the difficulty is that there just isn't much to 
write: the full impact of "this is just a module" is hard to 
communicate.



From michael.worsham at morris.com  Tue Jan 20 13:57:38 2009
From: michael.worsham at morris.com (Worsham, Michael)
Date: Tue, 20 Jan 2009 15:57:38 -0500
Subject: [Twisted-Python] Seeking OSS 'point to point' data transfer solution
Message-ID: <B1A201FF94D34E4F8D517B506869354D01DE23C2@MTCEBEW101.internal.morris.com>

I was recommended to look at the Twisted application framework for
replacing a legacy application that relies on RPC portmapper, so here's
my issue and question...

 

Currently, we use an in-house designed application called 'Fileman',
which acts as a combined bi-directional shared library (client) and
server system to transfer data files between other 'Fileman' server
points. The problem is that the Fileman application requires portmapper
under Linux which exposes all TCP ports (i.e. a network security
nightmare). Fileman also has the ability to send data in either ASCII or
binary format and at receiver end -- change directories, modify user id
(uid) and group id (gid) of file once data is received.

---

Here is what Fileman can perform via following functions from client
side code:

struct StatResult   *pFileMan_FileStat(char *host, char *file, int
userid, int groupid);
struct StatResult   *pFileMan_GetDirectoryListing(char *host, char *dir,
int userid, int groupid, int *entries);
int                 iFileMan_PutAsciiFile(char *host, char *file, char
*cpBuf, int bMakeDir, int userid, int groupid);
char                *cpFileMan_GetAsciiFile(char *host, char *file, int
userid, int groupid, int *result);
int                 iFileMan_PutBinaryFile(char *host, char *file, char
*cpBuf, int bMakeDir, int userid, int groupid, int length);
char                *cpFileMan_GetBinaryFile(char *host, char *file, int
userid, int groupid, int *result, int *length);
int                 iFileMan_DeleteFile(char *host, char *file, int
userid, int groupid);
int                 bFileMan_Ping(char *cpHost);
void                vFileMan_ResetStats(void);
int                 iFileMan_GetNumOps();
double              dFileMan_GetSecsSpent();
void                vFileMan_SetTimeout(int iSecs);

Above functions translates to 'over the wire' execution of:
stat
opendir, readdir
fopen, fwrite with any necessary mkdir, chown/chgrp to given group
fopen, read, subject to uid/gid restrictions
fopen, fwrite with any necessary mkdir, chown/chgrp to given group
fopen, read, subject to uid/gid restrictions
unlink subject to uid/gid restrictions
noop response from server
Internal stat change
Internal stat info
Internal stat info
Set network timeout parameters for operation



 

Usage/Syntax from 'Fileman' client:

 

void printUsage()

{

    printf("Usage: \n");

    printf("  \n");

    printf(" fileman Get [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman GetAscii [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman GetBinary [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman Put [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman PutAscii [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman PutBinary [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman Stat [remote_host] [remote_file] [remote_uid]
[remote_gid] \n");

    printf(" fileman Ping [remote_host] \n");

    printf("  \n");

}


---

My question is can the Twisted framework be utilized in a way that can
do actions of sending and receiving data in either ASCII or binary
format, change uid or gid permissions of files once delivered, run as a
client/server client & listener and utilize one (or two) TCP ports for
both sending and listening upon?

Known application replacement requirements:
1) Application must be able to run upon RHEL/CentOS 5.x Linux platform.
2) Application must be able to be locked down to one or two TCP ports
for listening and sending data upon.
3) Application must be able to take command line (CLI) instructions
4) Application must be able to transfer data in ASCII or binary format
(i.e. graphic images)
5) Application must be able to [at receiver end]: change directories,
modify user id (uid) and group id (gid) of file once data is received.

Current solutions we are actively looking at now:
 -- Apache's WebDAV: Uses port 80; Needs apache instance on each server;
cannot change uid or gid permissions of files
 -- Apache's ActiveMQ: Uses channel/queue/broker system; requires
trigger queue and external program for dumping queue data; Needs Java
platform
 -- JBoss Messaging: Suffers same issues as Apache's ActiveMQ; Requires
costly licensing
 -- IBM Websphere MQ: Suffers same issues as Apache's ActiveMQ; Requires
costly licensing

 -- XML-RPC Library for C & C++ -- http://xmlrpc-c.sourceforge.net/


Anyone have any ideas or other plausible solutions for solving this
problem?

 

-- Michael

 

---
Michael Worsham
Sr. System Engineer, IT Architect
Morris Technology Services, IHS Division

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090120/3dde488b/attachment.html>

From michael.worsham at morris.com  Wed Jan 21 06:50:56 2009
From: michael.worsham at morris.com (Worsham, Michael)
Date: Wed, 21 Jan 2009 08:50:56 -0500
Subject: [Twisted-Python] Seeking OSS 'point to point' data transfer solution
Message-ID: <B1A201FF94D34E4F8D517B506869354D01DE241A@MTCEBEW101.internal.morris.com>

I was recommended to look at the Twisted application framework for
replacing a legacy application that relies on RPC portmapper, so here's
my issue and question...

 

Currently, we use an in-house designed application called 'Fileman',
which acts as a combined bi-directional shared library (client) and
server system to transfer data files between other 'Fileman' server
points. The problem is that the Fileman application requires portmapper
under Linux which exposes all TCP ports (i.e. a network security
nightmare). Fileman also has the ability to send data in either ASCII or
binary format and at receiver end -- change directories, modify user id
(uid) and group id (gid) of file once data is received.

---

Here is what Fileman can perform via following functions from client
side code:

struct StatResult   *pFileMan_FileStat(char *host, char *file, int
userid, int groupid);
struct StatResult   *pFileMan_GetDirectoryListing(char *host, char *dir,
int userid, int groupid, int *entries);
int                 iFileMan_PutAsciiFile(char *host, char *file, char
*cpBuf, int bMakeDir, int userid, int groupid);
char                *cpFileMan_GetAsciiFile(char *host, char *file, int
userid, int groupid, int *result);
int                 iFileMan_PutBinaryFile(char *host, char *file, char
*cpBuf, int bMakeDir, int userid, int groupid, int length);
char                *cpFileMan_GetBinaryFile(char *host, char *file, int
userid, int groupid, int *result, int *length);
int                 iFileMan_DeleteFile(char *host, char *file, int
userid, int groupid);
int                 bFileMan_Ping(char *cpHost);
void                vFileMan_ResetStats(void);
int                 iFileMan_GetNumOps();
double              dFileMan_GetSecsSpent();
void                vFileMan_SetTimeout(int iSecs);

Above functions translates to 'over the wire' execution of:
stat
opendir, readdir
fopen, fwrite with any necessary mkdir, chown/chgrp to given group
fopen, read, subject to uid/gid restrictions
fopen, fwrite with any necessary mkdir, chown/chgrp to given group
fopen, read, subject to uid/gid restrictions
unlink subject to uid/gid restrictions
noop response from server
Internal stat change
Internal stat info
Internal stat info
Set network timeout parameters for operation

 

Usage/Syntax from 'Fileman' client:

 

void printUsage()

{

    printf("Usage: \n");

    printf("  \n");

    printf(" fileman Get [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman GetAscii [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman GetBinary [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman Put [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman PutAscii [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman PutBinary [remote_host] [remote_file] [remote_uid]
[remote_gid] [local_file] \n");

    printf(" fileman Stat [remote_host] [remote_file] [remote_uid]
[remote_gid] \n");

    printf(" fileman Ping [remote_host] \n");

    printf("  \n");

}


---

My question is can the Twisted framework be utilized in a way that can
do actions of sending and receiving data in either ASCII or binary
format, change uid or gid permissions of files once delivered, run as a
client/server client & listener and utilize one (or two) TCP ports for
both sending and listening upon?

Known application replacement requirements:
1) Application must be able to run upon RHEL/CentOS 5.x Linux platform.
2) Application must be able to be locked down to one or two TCP ports
for listening and sending data upon.
3) Application must be able to take command line (CLI) instructions
4) Application must be able to transfer data in ASCII or binary format
(i.e. graphic images)
5) Application must be able to [at receiver end]: change directories,
modify user id (uid) and group id (gid) of file once data is received.

Current solutions we are actively looking at now:
 -- Apache's WebDAV: Uses port 80; Needs apache instance on each server;
cannot change uid or gid permissions of files
 -- Apache's ActiveMQ: Uses channel/queue/broker system; requires
trigger queue and external program for dumping queue data; Needs Java
platform
 -- JBoss Messaging: Suffers same issues as Apache's ActiveMQ; Requires
costly licensing
 -- IBM Websphere MQ: Suffers same issues as Apache's ActiveMQ; Requires
costly licensing

 -- XML-RPC Library for C & C++ -- http://xmlrpc-c.sourceforge.net/


Anyone have any ideas or other plausible solutions for solving this
problem?

 

-- Michael

 

---
Michael Worsham
Sr. System Engineer, IT Architect
Morris Technology Services, IHS Division

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090121/b1becc80/attachment.html>

From alessio.pace at gmail.com  Thu Jan 22 01:14:48 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 22 Jan 2009 09:14:48 +0100
Subject: [Twisted-Python] A Java protocol on Twisted?
Message-ID: <84987d20901220014v12a2a70dv6b08aee0e5271baa@mail.gmail.com>

Hi,

recently I was asked if it would be possible to plug a Java protocol in a
Twisted-based P2P library I'm working on.

Up to now this heterogenous languages integration was not a concern, but
apparently the possibility to write an high level protocol in Java for
external developers seem to become very important and would otherwise block
their choice in using the library..

Could anyone, if have any experience or knowledge, let me know if this is
possible and under which conditions? I heard infact that Jython and Twisted
are not working together..

Thanks in advance. Best regards,
--
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090122/6748efec/attachment.html>

From sakalsiz at gmail.com  Fri Jan 23 02:17:55 2009
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Fri, 23 Jan 2009 11:17:55 +0200
Subject: [Twisted-Python] Possible error on key authentication of twisted
	conch
In-Reply-To: <ea694fbf0901230115j681129a6jd223b39634afd040@mail.gmail.com>
References: <ea694fbf0901230114u765c0e0di6265af485f4732fd@mail.gmail.com>
	<ea694fbf0901230115j681129a6jd223b39634afd040@mail.gmail.com>
Message-ID: <767e5e0d0901230117u519b2963u47bc03aea3674dee@mail.gmail.com>

 Hello,

I have a python script that executes a python code on a remote host using
SSH. It was working perfectly with Twisted 2.5. The method of returning
private and public has changed in userauth.SSHUserAuthClient (Twisted 8.1).

I was using (Twisted 2.5)
------------------------------------------------
def getPublicKey(self):
  return keys.getPublicKeyString(self.keyfile+'.pub')

def getPrivateKey(self):
  return defer.succeed(keys.getPrivateKeyObject(self.keyfile))


Now I am using (Twisted 8.1)
----------------------------------------------------
def getPublicKey(self):
  return keys.Key.fromFile(self.keyfile+'.pub')

def getPrivateKey(self):
  return defer.succeed(keys.Key.fromFile(self.keyfile))

and it doesn't work any more. I have attached the simplified script. Here is
the scenario I am using and the exception I got. Any help is greatly
appreciated.

Scenario
----------------------
I am creating a DSA key using ssh-keygen (in Debian and Ubuntu) with an
empty password

$ ssh-keygen -t dsa

and copy it to my localhost

$ ssh-copy-id -i ~/.ssh/id_dsa localhost

then run the attached script, which tries to execute a python script
remotely using SSH and get the following error

Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line 362,
in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/transport.py",
line 314, in dataReceived
    self.dispatchMessage(messageNum, packet[1:])
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/transport.py",
line 336, in dispatchMessage
    messageNum, payload)
--- <exception caught here> ---
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 51, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 36, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/service.py", line
44, in packetReceived
    return f(packet)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 262, in ssh_USERAUTH_FAILURE
    if method not in self.authenticatedWith and self.tryAuth(method):
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 234, in tryAuth
    return f()
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 338, in auth_publickey
    keyType = getNS(publicKey)[0]
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/common.py", line
51, in getNS
    l, = struct.unpack('!L',s[c:c+4])
exceptions.TypeError: 'Key' object is unsubscriptable

Sincerely

Saki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090123/4a1e8681/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mysshconnection.py
Type: text/x-python
Size: 7645 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090123/4a1e8681/attachment-0002.py>

From sakalsiz at gmail.com  Fri Jan 23 05:55:28 2009
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Fri, 23 Jan 2009 14:55:28 +0200
Subject: [Twisted-Python] Possible error on key authentication of twisted
	conch
In-Reply-To: <767e5e0d0901230117u519b2963u47bc03aea3674dee@mail.gmail.com>
References: <ea694fbf0901230114u765c0e0di6265af485f4732fd@mail.gmail.com>
	<ea694fbf0901230115j681129a6jd223b39634afd040@mail.gmail.com>
	<767e5e0d0901230117u519b2963u47bc03aea3674dee@mail.gmail.com>
Message-ID: <767e5e0d0901230455j6a027fa6kb162df04ad02512a@mail.gmail.com>

Hello,

I have a python script that executes a python code on a remote host using
SSH. It was working perfectly with Twisted 2.5. The method of returning
private and public has changed in userauth.SSHUserAuthClient (Twisted 8.1).

I was using (Twisted 2.5)
------------------------------------------------
def getPublicKey(self):
  return keys.getPublicKeyString(self.keyfile+'.pub')

def getPrivateKey(self):
  return defer.succeed(keys.getPrivateKeyObject(self.keyfile))


Now I am using (Twisted 8.1)
----------------------------------------------------
def getPublicKey(self):
  return keys.Key.fromFile(self.keyfile+'.pub')

def getPrivateKey(self):
  return defer.succeed(keys.Key.fromFile(self.keyfile))

and it doesn't work any more. I have attached the simplified script. Here is
the scenario I am using and the exception I got. Any help is greatly
appreciated.

Scenario
----------------------
I am creating a DSA key using ssh-keygen (in Debian and Ubuntu) with an
empty password

$ ssh-keygen -t dsa

and copy it to my localhost

$ ssh-copy-id -i ~/.ssh/id_dsa localhost

then run the attached script, which tries to execute a python script
remotely using SSH and get the following error

Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line 362,
in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/transport.py",
line 314, in dataReceived
    self.dispatchMessage(messageNum, packet[1:])
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/transport.py",
line 336, in dispatchMessage
    messageNum, payload)
--- <exception caught here> ---
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 51, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line 36, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/service.py", line
44, in packetReceived
    return f(packet)
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 262, in ssh_USERAUTH_FAILURE
    if method not in self.authenticatedWith and self.tryAuth(method):
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 234, in tryAuth
    return f()
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/userauth.py",
line 338, in auth_publickey
    keyType = getNS(publicKey)[0]
  File "/usr/lib/python2.5/site-packages/twisted/conch/ssh/common.py", line
51, in getNS
    l, = struct.unpack('!L',s[c:c+4])
exceptions.TypeError: 'Key' object is unsubscriptable

Sincerely

Saki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090123/109940b8/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mysshconnection.py
Type: text/x-python
Size: 7645 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090123/109940b8/attachment-0002.py>

From aixer77 at gmail.com  Fri Jan 23 11:17:32 2009
From: aixer77 at gmail.com (Kangkook Jee)
Date: Fri, 23 Jan 2009 13:17:32 -0500
Subject: [Twisted-Python] Truncated exception message for reactor instance 
Message-ID: <D8BE4B95-11F1-4CB1-91CD-F1626C4F9EEB@gmail.com>

Hi all

I'm a Twisted newbie and I have  a question about exception handling  
of Twisted framework.
Whenever I got some exception raised from somewhere, I got truncated  
exception message like this.

 >>>Traceback (most recent call last):
   File "./fcli.py", line 68, in <module>
     reactor.run()
   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
posixbase.py", line 223, in run
     self.mainLoop()
   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
posixbase.py", line 234, in mainLoop
     self.doIteration(t)
   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
selectreactor.py", line 140, in doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
   File "/opt/local/lib/python2.5/site-packages/twisted/python/ 
log.py", line 51, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File "/opt/local/lib/python2.5/site-packages/twisted/python/ 
log.py", line 36, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File "/opt/local/lib/python2.5/site-packages/twisted/python/ 
context.py", line 59, in callWithContext
     return self.currentContext().callWithContext(ctx

and this make me so hard to find exact cause of the problem.
Can anyone tell me how can I solve this problem?

Thanks a lot for your help in advance!
/Kangkook
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090123/73e37ca6/attachment.html>

From exarkun at twistedmatrix.com  Sat Jan 24 22:05:22 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jan 2009 05:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1232859922.2.1300573875@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090125/e1dc18f8/attachment.html>

From Andy at NewWorldElectric.com  Sun Jan 25 07:52:37 2009
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Sun, 25 Jan 2009 09:52:37 -0500
Subject: [Twisted-Python] confused on combining different py moduels to 
	make a twisted app
In-Reply-To: <1232361964.6745.45.camel@krishna-laptop>
References: <1232361964.6745.45.camel@krishna-laptop>
Message-ID: <37d49ed40901250652y324b4d18yd07b0a18d536d7bb@mail.gmail.com>

That's a somewhat general question, but consider this as a solution,
in __init__.py for that package imports one or more classes from each
of the other modules.  Then, within init.py create a root object (a
resource if you're using http) and let it instantiate each of the
classes as sub-objects (children if you're using http).  That would
let you access all the functions and continue exploring, though it's
not a good design in general.

It's hard to be more specific without knowing what sort of design
you'd like to wind up with.  This is one of those questions where the
honest answer is "however you want to do it."  You may want to study
some of the examples to see the kinds of design typically used in
twisted applications and adopt one of those until you get more
comfortable.

Andy Fundinger

On Mon, Jan 19, 2009 at 5:46 AM, Krishnakant <hackingkk at gmail.com> wrote:
> hello hackers,
> I am a new comer to twisted and find it very interesting.
> By the way I got my previous problem solved regarding returning lists.
>
> Now I have another confusion.
>
> I have a lot of modules (.py) which I wish to combine and create a
> server application in twisted.
> for example I have organisation.py which gets and sets organisation
> related data in the application.
>
> there is a vendor.py for getting and setting vendor related data and
> such other modules related to inventory.
> Now, I understand that we can publish one object at a time and listen to
> the incoming requests on the given port with the reactor running.
> But I want to use these other modules together with the main module.
> How can i create a package for such a situation?
>
> I have the __init__.py file in the folder to make a python package,
> What I can't understand is how can I register all the classes in the
> different files to listen for function calls from the client?
> I am confused on managing the entry point so to say.
> happy hacking.
> Krishnakant.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

How could you possibly think typing 'import skynet' was a good idea?
http://xkcd.com/521/



From ntoper at gmail.com  Sun Jan 25 08:54:15 2009
From: ntoper at gmail.com (Nicolas Toper)
Date: Sun, 25 Jan 2009 16:54:15 +0100
Subject: [Twisted-Python] Seeking OSS 'point to point' data transfer 
	solution
In-Reply-To: <B1A201FF94D34E4F8D517B506869354D01DE23C2@MTCEBEW101.internal.morris.com>
References: <B1A201FF94D34E4F8D517B506869354D01DE23C2@MTCEBEW101.internal.morris.com>
Message-ID: <fcbb46050901250754r78d4ea2bp25d8ab7175fb73ce@mail.gmail.com>

Hi,

SCP? FTP?

My company will be releasing soon in OSS an application built on top of
Twisted that in other things perform this

Nicolas

On Tue, Jan 20, 2009 at 9:57 PM, Worsham, Michael <
michael.worsham at morris.com> wrote:

>  I was recommended to look at the Twisted application framework for
> replacing a legacy application that relies on RPC portmapper, so here's my
> issue and question…
>
>
>
> Currently, we use an in-house designed application called 'Fileman', which
> acts as a combined bi-directional shared library (client) and server system
> to transfer data files between other 'Fileman' server points. The problem is
> that the Fileman application requires portmapper under Linux which exposes
> all TCP ports (i.e. a network security nightmare). Fileman also has the
> ability to send data in either ASCII or binary format and at receiver end --
> change directories, modify user id (uid) and group id (gid) of file once
> data is received.
>
> ---
>
> Here is what Fileman can perform via following functions from client side
> code:
>
> struct StatResult   *pFileMan_FileStat(char *host, char *file, int userid,
> int groupid);
> struct StatResult   *pFileMan_GetDirectoryListing(char *host, char *dir,
> int userid, int groupid, int *entries);
> int                 iFileMan_PutAsciiFile(char *host, char *file, char
> *cpBuf, int bMakeDir, int userid, int groupid);
> char                *cpFileMan_GetAsciiFile(char *host, char *file, int
> userid, int groupid, int *result);
> int                 iFileMan_PutBinaryFile(char *host, char *file, char
> *cpBuf, int bMakeDir, int userid, int groupid, int length);
> char                *cpFileMan_GetBinaryFile(char *host, char *file, int
> userid, int groupid, int *result, int *length);
> int                 iFileMan_DeleteFile(char *host, char *file, int userid,
> int groupid);
> int                 bFileMan_Ping(char *cpHost);
> void                vFileMan_ResetStats(void);
> int                 iFileMan_GetNumOps();
> double              dFileMan_GetSecsSpent();
> void                vFileMan_SetTimeout(int iSecs);
>
> Above functions translates to 'over the wire' execution of:
> stat
> opendir, readdir
> fopen, fwrite with any necessary mkdir, chown/chgrp to given group
> fopen, read, subject to uid/gid restrictions
> fopen, fwrite with any necessary mkdir, chown/chgrp to given group
> fopen, read, subject to uid/gid restrictions
> unlink subject to uid/gid restrictions
> noop response from server
> Internal stat change
> Internal stat info
> Internal stat info
> Set network timeout parameters for operation
>
>
>
> Usage/Syntax from 'Fileman' client:
>
>
>
> void printUsage()
>
> {
>
>     printf("Usage: \n");
>
>     printf("  \n");
>
>     printf(" fileman Get [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman GetAscii [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman GetBinary [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman Put [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman PutAscii [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman PutBinary [remote_host] [remote_file] [remote_uid]
> [remote_gid] [local_file] \n");
>
>     printf(" fileman Stat [remote_host] [remote_file] [remote_uid]
> [remote_gid] \n");
>
>     printf(" fileman Ping [remote_host] \n");
>
>     printf("  \n");
>
> }
>
>
> ---
>
> My question is can the Twisted framework be utilized in a way that can do
> actions of sending and receiving data in either ASCII or binary format,
> change uid or gid permissions of files once delivered, run as a
> client/server client & listener and utilize one (or two) TCP ports for both
> sending and listening upon?
>
> Known application replacement requirements:
> 1) Application must be able to run upon RHEL/CentOS 5.x Linux platform.
> 2) Application must be able to be locked down to one or two TCP ports for
> listening and sending data upon.
> 3) Application must be able to take command line (CLI) instructions
> 4) Application must be able to transfer data in ASCII or binary format
> (i.e. graphic images)
> 5) Application must be able to [at receiver end]: change directories,
> modify user id (uid) and group id (gid) of file once data is received.
>
> Current solutions we are actively looking at now:
>  -- Apache's WebDAV: Uses port 80; Needs apache instance on each server;
> cannot change uid or gid permissions of files
>  -- Apache's ActiveMQ: Uses channel/queue/broker system; requires trigger
> queue and external program for dumping queue data; Needs Java platform
>  -- JBoss Messaging: Suffers same issues as Apache's ActiveMQ; Requires
> costly licensing
>  -- IBM Websphere MQ: Suffers same issues as Apache's ActiveMQ; Requires
> costly licensing
>
>  -- XML-RPC Library for C & C++ -- http://xmlrpc-c.sourceforge.net/
>
>
> Anyone have any ideas or other plausible solutions for solving this
> problem?
>
>
>
> -- Michael
>
>
>
> ---
> Michael Worsham
> Sr. System Engineer, IT Architect
> Morris Technology Services, IHS Division
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
A+
Nico
http://www.deviant-abstraction.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090125/432fede7/attachment.html>

From broder79 at gmail.com  Sun Jan 25 23:06:37 2009
From: broder79 at gmail.com (Adan Broderick)
Date: Mon, 26 Jan 2009 01:06:37 -0500
Subject: [Twisted-Python] Beginner's question about names and callbacks
Message-ID: <ed9894e50901252206p2e5a7fedlc6dc93f95ae648dc@mail.gmail.com>

I'm trying to write a program that will call my own function whenever a
query to a nameserver times out. I have figured out how to run the DNS
server. And I also know how to use filterAnswers(). But how do I catch the
"Failure: twisted.names.error.DNSQueryTimeoutError:" messages by adding code
to the resolver I've constructed?
I've got something like this:

class myResolver(client.Resolver):
    def filterAnswers(self, message):
        print "answer:",message
        [snipped code]

resolver = myResolver(servers=[('10.0.1.1', 53)])
f = server.DNSServerFactory(clients=[resolver])
reactor.listenTCP(4053, f)
reactor.run()

But I don't see where to add an addErrback call. The important thing here is
that I'm not getting the  domains to look up on the command line or from the
user. They are coming in over a socket from, say, dig. So I'm trying to
avoid parsing those queries myself since the full DNS query protocol is
hefty; that is, I want twisted to do the work of the parsing the input.
Thanks for your help.

-Broder
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090126/8a05b0c0/attachment.html>

From screwtape at froup.com  Sun Jan 25 23:46:20 2009
From: screwtape at froup.com (Tim Allen)
Date: Mon, 26 Jan 2009 17:46:20 +1100
Subject: [Twisted-Python] Beginner's question about names and callbacks
In-Reply-To: <ed9894e50901252206p2e5a7fedlc6dc93f95ae648dc@mail.gmail.com>
References: <ed9894e50901252206p2e5a7fedlc6dc93f95ae648dc@mail.gmail.com>
Message-ID: <20090126064620.GB5868@thristian.org>

On Mon, Jan 26, 2009 at 01:06:37AM -0500, Adan Broderick wrote:
> I'm trying to write a program that will call my own function whenever a
> query to a nameserver times out. I have figured out how to run the DNS
> server. And I also know how to use filterAnswers(). But how do I catch the
> "Failure: twisted.names.error.DNSQueryTimeoutError:" messages by adding code
> to the resolver I've constructed?

I'm not familiar with twisted.names, but looking at the source to
client.Resolver, it seems that something winds up calling _lookup() with
a timeout, which passes it off to the queryUDP() and sets up the basic
result handling. If queryUDP() returns a result, it goes to filterAnswers,
which checks for truncation and re-sends with queryTCP().

Since the actual deferreds that deal with the timeouts are returned from
queryUDP() and queryTCP(), it looks like you should be overriding those
methods and capturing the results instead. Something like this:

class MyResolver(client.Resolver):

    def _handle_query_timeout(self, fail):
	fail.trap(DNSQueryTimeoutError)
	print "Got an error:", fail.getErrorMessage()

    def queryUDP(self, *args, **kwargs):
	d = client.Resolver.queryUDP(self, *args, **kwargs)
	d.addErrback(self._handle_query_timeout)
	return d

    def queryTCP(self, *args, **kwargs):
	d = client.Resolver.queryTCP(self, *args, **kwargs)
	d.addErrback(self._handle_query_timeout)
	return d



From alessio.pace at gmail.com  Mon Jan 26 01:02:56 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Mon, 26 Jan 2009 09:02:56 +0100
Subject: [Twisted-Python] How to write (network) integration tests with
	Twisted?
Message-ID: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>

Hi,

I would like to put in my suite of tests some integration tests which deal
with running some exchange of messages among 2 endpoints (bound locally on
the same machine on 2 different ports).

I noticed (and read afterwards..) that I can't run()/stop() the reactor
multiple times, so I was wondering what's the suggested way to deal with
this kind of situation.
Sorry if perhaps it is documented somewhere on the Twisted doc but apart
from the mention to "Trial" (which I'm not sure responds to my needs) I
haven't found much.

Thanks in advance.
Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090126/f8bebb8f/attachment.html>

From delroth at gmail.com  Mon Jan 26 03:13:43 2009
From: delroth at gmail.com (Pierre Bourdon)
Date: Mon, 26 Jan 2009 11:13:43 +0100
Subject: [Twisted-Python] About twistedmatrix.com design license
Message-ID: <1ba9eaed0901260213p3c13222eta53a812f367309d@mail.gmail.com>

Hello,

I would like to reuse parts of the twistedmatrix.com design for my own
Trac powered project, and would like to know about its license. I
asked huwshimi as he is the design creator, and he answered me the
Twisted team was the design copyright owner.

Would it be possible to release the design under a free license to
make other people able to reuse [parts of] it, as it is one of the
most complete Trac design I've ever seen while browsing the web ? :)

Thanks in advance,
Delroth.



From drew.smathers at gmail.com  Mon Jan 26 04:09:39 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 26 Jan 2009 19:09:39 +0800
Subject: [Twisted-Python] How to write (network) integration tests with 
	Twisted?
In-Reply-To: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
Message-ID: <368574aa0901260309j7e0bf9edk2cc440ae96d534cb@mail.gmail.com>

On Mon, Jan 26, 2009 at 4:02 PM, Alessio Pace <alessio.pace at gmail.com> wrote:
> Hi,
>
> I would like to put in my suite of tests some integration tests which deal
> with running some exchange of messages among 2 endpoints (bound locally on
> the same machine on 2 different ports).
>

Trial allows you to return a Deferred, which in you case is something
you would call after your endpoints close their connections.  You can
grep through twisted sources though to see how this can be done
without network connections in unit tests - look for test cases using
the module simio.

> I noticed (and read afterwards..) that I can't run()/stop() the reactor
> multiple times, so I was wondering what's the suggested way to deal with
> this kind of situation.

You can close connections and reconnect etc. without "restarting" the
reactor - so I don't see how this is an obstacle.

> Sorry if perhaps it is documented somewhere on the Twisted doc but apart
> from the mention to "Trial" (which I'm not sure responds to my needs) I
> haven't found much.
>

This isn't really documented. But again, unit tests for twisted itself
provide good examples.

-Drew



From alessio.pace at gmail.com  Mon Jan 26 06:00:18 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Mon, 26 Jan 2009 14:00:18 +0100
Subject: [Twisted-Python] How to write (network) integration tests with 
	Twisted?
In-Reply-To: <368574aa0901260309j7e0bf9edk2cc440ae96d534cb@mail.gmail.com>
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
	<368574aa0901260309j7e0bf9edk2cc440ae96d534cb@mail.gmail.com>
Message-ID: <84987d20901260500kb3024efk8e4c54648a655d35@mail.gmail.com>

On Mon, Jan 26, 2009 at 12:09 PM, Drew Smathers <drew.smathers at gmail.com>wrote:

> On Mon, Jan 26, 2009 at 4:02 PM, Alessio Pace <alessio.pace at gmail.com>
> wrote:
> > Hi,
> >
> > I would like to put in my suite of tests some integration tests which
> deal
> > with running some exchange of messages among 2 endpoints (bound locally
> on
> > the same machine on 2 different ports).
> >
>
> Trial allows you to return a Deferred, which in you case is something
> you would call after your endpoints close their connections.  You can
> grep through twisted sources though to see how this can be done
> without network connections in unit tests - look for test cases using
> the module simio.
>
> > I noticed (and read afterwards..) that I can't run()/stop() the reactor
> > multiple times, so I was wondering what's the suggested way to deal with
> > this kind of situation.
>
> You can close connections and reconnect etc. without "restarting" the
> reactor - so I don't see how this is an obstacle.


The point is that I must assure multiple test classes have their test
methods run within an active reactor. So somewhere a reactor.run() has to be
called.. Necessarily, if I want that my tests battery to terminate, a
reactor.stop() must be invoked by somebody, otherwise the main loop remains
running...

The trivial -and not working- idea was to do reactor.run() / reactor.stop()
in setUp() / tearDown() methods.

I believe extening Trial TestCase is the good way to go, but as you are
mentioning, there is not so much documentation... I'm trying to understand
how to do from the UDP test case in Twisted trunk..

Thanks. Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090126/e9d77cab/attachment.html>

From jean-francois.boeuf at eads.com  Mon Jan 26 08:12:57 2009
From: jean-francois.boeuf at eads.com (Boeuf, Jean-Francois)
Date: Mon, 26 Jan 2009 16:12:57 +0100
Subject: [Twisted-Python] RE: Write into a persistent connection before
	stopping
Message-ID: <050AD9702349384DADA9CD24800536690250879A@SMFIDF806A.main.fr.ds.corp>

Hi,

As i didn't get any answer to my problem i writed a little test code to
reproduce it (I can't divulgate the production code, and then it would be to
much complicated to expose the matter). You can just run it using twistd -y
test.py and then connect to the 8080 tcp port with a browser. As we can see
in the browser the connection is active and periodicaly writed. The logs
indicate that the conections are notifyied before port and connection close,
but the browser never receives the notification.

Thanks for your help

##################test.py begins here#######################
from twisted.application import internet, service
from twisted.internet import reactor
from twisted.web import resource, server, static
import threading

application = service.Application("test")

LISTENING   = list()
CHECK       = threading.Event()

def writeToActiveConnections():
    while not CHECK.isSet():
        for request in LISTENING:
            request.write("active<br />")
        CHECK.wait(2)

def onStop():
    print "ON STOP CALLED"
    CHECK.set()
    for request in LISTENING:
        request.write("<strong>Connection closed because of server
shutdown</strong>")
    print "ALL CONNECTIONS HAVE BEEN NOTIFIED"

def onError(_error, _request):
    print "Connection Closed %s" % _error
    LISTENING.remove(_request)

class ListenRessource(resource.Resource):
    def render_GET(self, _request):
        _request.write("listen connection opened<br />")
        LISTENING.append(_request)
        d = _request.notifyFinish()
        d.addCallback(LISTENING.remove, _request)
        d.addErrback(onError, _request)
        return server.NOT_DONE_YET

class MainRessource(resource.Resource):
    def render_GET(self, _request):
        return """
<html>
    <head></head>
    <body>
        <h1>Test page</h1>
        <iframe src=/listen></iframe>
    </body>
</html>
        """

class TestSite(server.Site):
    def __init__(self):
        root = static.File("/tmp")
        root.putChild("test", MainRessource())
        root.putChild("listen", ListenRessource() )
        server.Site.__init__(self, root)

class TestService(internet.TCPServer):
    def __init__(self):
        internet.TCPServer.__init__(
            self,
            8080,
            TestSite()
        )
        reactor.callInThread(writeToActiveConnections)
        reactor.addSystemEventTrigger('before', 'shutdown', onStop)

TestService().setServiceParent(application)
##################test.py ends here#######################


> -----Message d'origine-----
> De : Boeuf, Jean-Francois 
> Envoyé : vendredi 16 janvier 2009 13:26
> À : 'twisted-python at twistedmatrix.com'
> Objet : Write into a persistent connection before stopping
> 
>  
> Hello,
> 
> I have an application using twisted in which the web browser 
> opens a persistent connection when a user logs in (COMET 
> model). I want to write data into active persistent 
> connections at server stop to notify client to logout properly.
> 
> To do that, I add a system event trigger to the reactor 
> calling the method that closes session before shutdown when I 
> start the webService. This method is called when twisted 
> receives a SIGTERM and I can see in twistd.log traces of 
> writing to the persistent connexion before services stops and 
> connexions are closed. But the web browser never receives 
> this content and listening the traffic between server and 
> client with wireshark, I can't see anything else than the 
> [FIN, ACK] packets that are sent when server ends all 
> connections (delayed for maximum clarity in the logs).
> 
> The same method is called to logout client properly when 
> session expires and does work fully.
> 
> You can see below the twistd.log file when the servers stops.
> 
> Thank you for your help.
> 
> Regards
> 
> Jean-François
> 
> 
> twistd.log
> ----------
> 2009-01-16 13:26:16+0100 [-] Received SIGTERM, shutting down.
> 2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - 
> [16/Jan/2009:12:26:16 +0000] "GET 
> /sim/listen?sourceScreen=216 HTTP/1.1" 200 166 
> "http://peyo:8080/sim?id=216" "Mozilla/5.0 (Windows; U; 
> Windows NT 5.1; fr; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16"
> 2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - 
> [16/Jan/2009:12:26:16 +0000] "GET 
> /sim/listen?sourceScreen=217 HTTP/1.1" 200 166 
> "http://peyo:8080/sim?id=217" "Mozilla/5.0 (Windows; U; 
> Windows NT 5.1; fr; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16"
> 2009-01-16 13:26:16+0100 [-] 10.37.68.212 - - 
> [16/Jan/2009:12:26:16 +0000] "GET 
> /sim/listen?sourceScreen=218 HTTP/1.1" 200 166 
> "http://peyo:8080/sim?id=218&screen0=216&screen1=217&nbScreen=
> 2" "Mozilla/5.0 (Windows; U; Windows NT 5.1; fr; rv:1.8.1.16) 
> Gecko/20080702 Firefox/2.0.0.16"
> 2009-01-16 13:26:25+0100 [-] (Port 8080 Closed)
> 2009-01-16 13:26:25+0100 [-] Stopping factory 
> <cockpitServer.userSessionManagement.cockpitSite.CockpitSite 
> object at 0xb6db9e6c>
> 2009-01-16 13:26:25+0100 [-] (Port 8082 Closed)
> 2009-01-16 13:26:25+0100 [-] Stopping factory 
> <cockpitServer.soapService.SoapSite object at 0xb7092d0c>
> 2009-01-16 13:26:25+0100 [-] Main loop terminated.
> 2009-01-16 13:26:25+0100 [-] Server Shut Down
> 



From exarkun at divmod.com  Mon Jan 26 08:22:45 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 10:22:45 -0500
Subject: [Twisted-Python] RE: Write into a persistent connection before
	stopping
In-Reply-To: <050AD9702349384DADA9CD24800536690250879A@SMFIDF806A.main.fr.ds.corp>
Message-ID: <20090126152245.24460.2109813100.divmod.quotient.2141@henry.divmod.com>

On Mon, 26 Jan 2009 16:12:57 +0100, "Boeuf, Jean-Francois" <jean-francois.boeuf at eads.com> wrote:
>Hi,
>
>As i didn't get any answer to my problem i writed a little test code to
>reproduce it (I can't divulgate the production code, and then it would be to
>much complicated to expose the matter). You can just run it using twistd -y
>test.py and then connect to the 8080 tcp port with a browser. As we can see
>in the browser the connection is active and periodicaly writed. The logs
>indicate that the conections are notifyied before port and connection close,
>but the browser never receives the notification.
>
>Thanks for your help
>
>##################test.py begins here#######################
>from twisted.application import internet, service
>from twisted.internet import reactor
>from twisted.web import resource, server, static
>import threading
>
>application = service.Application("test")
>
>LISTENING   = list()
>CHECK       = threading.Event()
>
>def writeToActiveConnections():
>    while not CHECK.isSet():
>        for request in LISTENING:
>            request.write("active<br />")
>        CHECK.wait(2)
>
>def onStop():
>    print "ON STOP CALLED"
>    CHECK.set()
>    for request in LISTENING:
>        request.write("<strong>Connection closed because of server
>shutdown</strong>")
>    print "ALL CONNECTIONS HAVE BEEN NOTIFIED"
>
>def onError(_error, _request):
>    print "Connection Closed %s" % _error
>    LISTENING.remove(_request)
>
>class ListenRessource(resource.Resource):
>    def render_GET(self, _request):
>        _request.write("listen connection opened<br />")
>        LISTENING.append(_request)
>        d = _request.notifyFinish()
>        d.addCallback(LISTENING.remove, _request)
>        d.addErrback(onError, _request)
>        return server.NOT_DONE_YET
>
>class MainRessource(resource.Resource):
>    def render_GET(self, _request):
>        return """
><html>
>    <head></head>
>    <body>
>        <h1>Test page</h1>
>        <iframe src=/listen></iframe>
>    </body>
></html>
>        """
>
>class TestSite(server.Site):
>    def __init__(self):
>        root = static.File("/tmp")
>        root.putChild("test", MainRessource())
>        root.putChild("listen", ListenRessource() )
>        server.Site.__init__(self, root)
>
>class TestService(internet.TCPServer):
>    def __init__(self):
>        internet.TCPServer.__init__(
>            self,
>            8080,
>            TestSite()
>        )
>        reactor.callInThread(writeToActiveConnections)
>        reactor.addSystemEventTrigger('before', 'shutdown', onStop)
>
>TestService().setServiceParent(application)

Twisted APIs are generally not safe to be invoked from any thread except
for the thread in which the reactor is running.

If you want to run some code periodically, don't do it with threads and
events, do it with reactor.callLater or twisted.internet.task.LoopingCall.

Jean-Paul



From phil at bubblehouse.org  Mon Jan 26 08:25:15 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 26 Jan 2009 10:25:15 -0500
Subject: [Twisted-Python] How to write (network) integration tests with
	Twisted?
In-Reply-To: <84987d20901260500kb3024efk8e4c54648a655d35@mail.gmail.com>
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
	<368574aa0901260309j7e0bf9edk2cc440ae96d534cb@mail.gmail.com>
	<84987d20901260500kb3024efk8e4c54648a655d35@mail.gmail.com>
Message-ID: <5BC91D05-F3AE-4357-9693-15A59A53D311@bubblehouse.org>

On Jan 26, 2009, at 8:00 AM, Alessio Pace wrote:
> The point is that I must assure multiple test classes have their  
> test methods run within an active reactor. So somewhere a  
> reactor.run() has to be called.. Necessarily, if I want that my  
> tests battery to terminate, a reactor.stop() must be invoked by  
> somebody, otherwise the main loop remains running...
>
> The trivial -and not working- idea was to do reactor.run() /  
> reactor.stop() in setUp() / tearDown() methods.

Trial takes care of starting and stopping the reactor for you. Just  
write your tests assuming the reactor is already running. I believe it  
will restart the reactor between every test, so you're always dealing  
with a 'fresh' reactor.

You can also select which reactor to use inside Trial with the -- 
reactor parameter (call `trial --help-reactors` for more). That's  
usually not necessary unless you have a special case that requires a  
particular reactor.

-phil



From exarkun at divmod.com  Mon Jan 26 08:26:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 10:26:19 -0500
Subject: [Twisted-Python] A Java protocol on Twisted?
In-Reply-To: <84987d20901220014v12a2a70dv6b08aee0e5271baa@mail.gmail.com>
Message-ID: <20090126152619.24460.434919123.divmod.quotient.2143@henry.divmod.com>

On Thu, 22 Jan 2009 09:14:48 +0100, Alessio Pace <alessio.pace at gmail.com> wrote:
>Hi,
>
>recently I was asked if it would be possible to plug a Java protocol in a
>Twisted-based P2P library I'm working on.
>
>Up to now this heterogenous languages integration was not a concern, but
>apparently the possibility to write an high level protocol in Java for
>external developers seem to become very important and would otherwise block
>their choice in using the library..

Can you clarify what you're after?  Does plugging in a "Java protocol" mean
that you have some .java (or .class?) files which implement a protocol and
you want to use that code in your Twisted-based application?

Or does it mean that you need to interoperate with a Java client or server
by implementing in Python the protocol that is used by that Java software?

>Could anyone, if have any experience or knowledge, let me know if this is
>possible and under which conditions? I heard infact that Jython and Twisted
>are not working together..

Twisted indeed does not work on Jython currently.  There are some efforts to
get it working there.  You may want to help out with these. :)

Jean-Paul



From exarkun at divmod.com  Mon Jan 26 08:28:04 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 10:28:04 -0500
Subject: [Twisted-Python] Truncated exception message for reactor instance 
In-Reply-To: <D8BE4B95-11F1-4CB1-91CD-F1626C4F9EEB@gmail.com>
Message-ID: <20090126152804.24460.365337006.divmod.quotient.2144@henry.divmod.com>

On Fri, 23 Jan 2009 13:17:32 -0500, Kangkook Jee <aixer77 at gmail.com> wrote:
>Hi all
>
>I'm a Twisted newbie and I have  a question about exception handling  of 
>Twisted framework.
>Whenever I got some exception raised from somewhere, I got truncated 
>exception message like this.
>
> >>>Traceback (most recent call last):
>   File "./fcli.py", line 68, in <module>
>     reactor.run()
>   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
>posixbase.py", line 223, in run
>     self.mainLoop()
>   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
>posixbase.py", line 234, in mainLoop
>     self.doIteration(t)
>   File "/opt/local/lib/python2.5/site-packages/twisted/internet/ 
>selectreactor.py", line 140, in doSelect
>     _logrun(selectable, _drdw, selectable, method, dict)
>--- <exception caught here> ---
>   File "/opt/local/lib/python2.5/site-packages/twisted/python/ log.py", line 
>51, in callWithLogger
>     return callWithContext({"system": lp}, func, *args, **kw)
>   File "/opt/local/lib/python2.5/site-packages/twisted/python/ log.py", line 
>36, in callWithContext
>     return context.call({ILogContext: newCtx}, func, *args, **kw)
>   File "/opt/local/lib/python2.5/site-packages/twisted/python/ context.py", 
>line 59, in callWithContext
>     return self.currentContext().callWithContext(ctx
>
>and this make me so hard to find exact cause of the problem.
>Can anyone tell me how can I solve this problem?

This isn't the usual behavior of the exception reporting code in Twisted.
Normally the entire traceback and exception are reported.  Can you post a
minimal example which reproduces this behavior?

Jean-Paul



From jean-francois.boeuf at eads.com  Mon Jan 26 09:07:23 2009
From: jean-francois.boeuf at eads.com (Boeuf, Jean-Francois)
Date: Mon, 26 Jan 2009 17:07:23 +0100
Subject: [Twisted-Python] RE: Write into a persistent connection befor
	estopping
Message-ID: <050AD9702349384DADA9CD2480053669025087F8@SMFIDF806A.main.fr.ds.corp>

 

> -----Message d'origine-----
> De : twisted-python-bounces at twistedmatrix.com 
> [mailto:twisted-python-bounces at twistedmatrix.com] De la part 
> de Jean-Paul Calderone
> Envoyé : lundi 26 janvier 2009 16:23
> À : Twisted general discussion
> Objet : Re: [Twisted-Python] RE: Write into a persistent 
> connection beforestopping
> 
> On Mon, 26 Jan 2009 16:12:57 +0100, "Boeuf, Jean-Francois" 
> <jean-francois.boeuf at eads.com> wrote:
> >Hi,
> >
> >As i didn't get any answer to my problem i writed a little 
> test code to 
> >reproduce it (I can't divulgate the production code, and 
> then it would 
> >be to much complicated to expose the matter). You can just 
> run it using 
> >twistd -y test.py and then connect to the 8080 tcp port with 
> a browser. 
> >As we can see in the browser the connection is active and 
> periodicaly 
> >writed. The logs indicate that the conections are notifyied 
> before port 
> >and connection close, but the browser never receives the 
> notification.
> >
> >Thanks for your help
> >
> >##################test.py begins here####################### from 
> >twisted.application import internet, service from twisted.internet 
> >import reactor from twisted.web import resource, server, 
> static import 
> >threading
> >
> >application = service.Application("test")
> >
> >LISTENING   = list()
> >CHECK       = threading.Event()
> >
> >def writeToActiveConnections():
> >    while not CHECK.isSet():
> >        for request in LISTENING:
> >            request.write("active<br />")
> >        CHECK.wait(2)
> >
> >def onStop():
> >    print "ON STOP CALLED"
> >    CHECK.set()
> >    for request in LISTENING:
> >        request.write("<strong>Connection closed because of server
> >shutdown</strong>")
> >    print "ALL CONNECTIONS HAVE BEEN NOTIFIED"
> >
> >def onError(_error, _request):
> >    print "Connection Closed %s" % _error
> >    LISTENING.remove(_request)
> >
> >class ListenRessource(resource.Resource):
> >    def render_GET(self, _request):
> >        _request.write("listen connection opened<br />")
> >        LISTENING.append(_request)
> >        d = _request.notifyFinish()
> >        d.addCallback(LISTENING.remove, _request)
> >        d.addErrback(onError, _request)
> >        return server.NOT_DONE_YET
> >
> >class MainRessource(resource.Resource):
> >    def render_GET(self, _request):
> >        return """
> ><html>
> >    <head></head>
> >    <body>
> >        <h1>Test page</h1>
> >        <iframe src=/listen></iframe>
> >    </body>
> ></html>
> >        """
> >
> >class TestSite(server.Site):
> >    def __init__(self):
> >        root = static.File("/tmp")
> >        root.putChild("test", MainRessource())
> >        root.putChild("listen", ListenRessource() )
> >        server.Site.__init__(self, root)
> >
> >class TestService(internet.TCPServer):
> >    def __init__(self):
> >        internet.TCPServer.__init__(
> >            self,
> >            8080,
> >            TestSite()
> >        )
> >        reactor.callInThread(writeToActiveConnections)
> >        reactor.addSystemEventTrigger('before', 'shutdown', onStop)
> >
> >TestService().setServiceParent(application)
> 
> Twisted APIs are generally not safe to be invoked from any 
> thread except for the thread in which the reactor is running.
> 
> If you want to run some code periodically, don't do it with 
> threads and events, do it with reactor.callLater or 
> twisted.internet.task.LoopingCall.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
I'm Ok with that but it is no more than test sample code. The server does
write periodically the connection but doesn't send "<strong>Connection
closed because of server shutdown</strong>" whereas the onStop method is
correctly called!

Jean-François



From exarkun at divmod.com  Mon Jan 26 09:15:22 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 11:15:22 -0500
Subject: [Twisted-Python] RE: Write into a persistent connection befor
	estopping
In-Reply-To: <050AD9702349384DADA9CD2480053669025087F8@SMFIDF806A.main.fr.ds.corp>
Message-ID: <20090126161522.24460.1213857364.divmod.quotient.2161@henry.divmod.com>

On Mon, 26 Jan 2009 17:07:23 +0100, "Boeuf, Jean-Francois" <jean-francois.boeuf at eads.com> wrote:
>> [snip]
>>
>I'm Ok with that but it is no more than test sample code. The server does
>write periodically the connection but doesn't send "<strong>Connection
>closed because of server shutdown</strong>" whereas the onStop method is
>correctly called!
>
>Jean-François
>

This is probably because the reactor stops before the bytes are actually
sent.  You may need to delay reactor shutdown until you know the bytes
have been sent.  This may mean waiting for the connections to close or
it may mean waiting for a timeout to expire or it may mean something
else - it depends on which precise behavior you want.

"before" "shutdown" hooks can return a Deferred.  The shutdown process
will pause until that Deferred fires.  This lets you make the reactor
wait for whatever extra events you want it to wait for.

Jean-Paul



From mg at daimi.au.dk  Mon Jan 26 10:00:07 2009
From: mg at daimi.au.dk (Martin Geisler)
Date: Mon, 26 Jan 2009 18:00:07 +0100
Subject: [Twisted-Python] Re: How to write (network) integration tests with
	Twisted?
In-Reply-To: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
	(Alessio Pace's message of "Mon, 26 Jan 2009 09:02:56 +0100")
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
Message-ID: <87ocxuknoo.fsf@hbox.dyndns.org>

Alessio Pace <alessio.pace at gmail.com> writes:

> I would like to put in my suite of tests some integration tests which
> deal with running some exchange of messages among 2 endpoints (bound
> locally on the same machine on 2 different ports).
>
> I noticed (and read afterwards..) that I can't run()/stop() the
> reactor multiple times, so I was wondering what's the suggested way to
> deal with this kind of situation.
>
> Sorry if perhaps it is documented somewhere on the Twisted doc but
> apart from the mention to "Trial" (which I'm not sure responds to my
> needs) I haven't found much.

Trial is what you want, it knows how to deal with the Deferreds you are
likely to return from your tests.

The point is that you can do stuff like this where getPage is a function
which returns a Deferred:

  def test_something(self):
    p = getPage("http://example.com/")
    p.addCallback(self.assertEquals, "<html>...</html>")
    return p

When you return p from the test, the reactor will wait until p has fired
before starting the next test. When p fires, the callbacks are executed
like normal, and here the callsback compares the HTML retrieved with the
expected content. If p does not fire within a given timeout (120 seconds
by default, I think) the reactor will declare the test a failure.

Take a look at the tutorial here:

  http://twistedmatrix.com/trac/browser/branches/trial-tutorial-2443/doc/core/howto/trial.xhtml

Use the link for "Original Format" at the bottom to view as HTML, though
I'm getting an XML parse error from my browser when I do this.

I'm using the twisted.protocols.loopback module for connecting several
parties with a pseudo-transport. This allows the testing code to behave
like in your normal application, but the communication is done with
function calls instead of actual network traffic.


-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 196 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090126/14f50402/attachment.sig>

From exarkun at divmod.com  Mon Jan 26 16:10:32 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jan 2009 18:10:32 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: 0
Message-ID: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>

Hello All,

I'd like to organize another Twisted sprint in Cambridge, MA in February.
As with previous sprints, this is an all day event, most likely hosted at
the Divmod office in Porter Square, for Twisted hacking.  The two topics
which have been raised thus far for this sprint are documentation - in
particular, looking at Twisted documentation from a high-level and coming
up with a coherent overall strategy for improving it - and deprecation 
(looking for old, bad APIs in Twisted which we should get rid of).  Of
course, other topics are welcome as well.

Which weekend in February would work best for people interested in attending?

Jean-Paul



From glyph at divmod.com  Mon Jan 26 18:15:32 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jan 2009 01:15:32 -0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
References: 0
	<20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
Message-ID: <20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>

On 26 Jan, 11:10 pm, exarkun at divmod.com wrote:
>I'd like to organize another Twisted sprint in Cambridge, MA in 
>February.

Thanks for putting it together!
>Which weekend in February would work best for people interested in 
>attending?

I'd like to recommend the 7th.



From radix at twistedmatrix.com  Mon Jan 26 18:48:41 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 26 Jan 2009 20:48:41 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
Message-ID: <60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>

On Mon, Jan 26, 2009 at 8:15 PM,  <glyph at divmod.com> wrote:
> On 26 Jan, 11:10 pm, exarkun at divmod.com wrote:
>>
>> I'd like to organize another Twisted sprint in Cambridge, MA in February.
>
> Thanks for putting it together!
>>
>> Which weekend in February would work best for people interested in
>> attending?
>
> I'd like to recommend the 7th.

I'd like to go to the sprint, but for what it's worth, I won't be able
to make it on that weekend. I'm leaving for business the afternoon of
the 7th.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From alessio.pace at gmail.com  Mon Jan 26 23:34:28 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Tue, 27 Jan 2009 07:34:28 +0100
Subject: [Twisted-Python] Re: How to write (network) integration tests 
	with Twisted?
In-Reply-To: <87ocxuknoo.fsf@hbox.dyndns.org>
References: <84987d20901260002q2ddba745x4601aa5ccb20ebd9@mail.gmail.com>
	<87ocxuknoo.fsf@hbox.dyndns.org>
Message-ID: <84987d20901262234k8b492efwb89fdff694bd7703@mail.gmail.com>

Hi all,

thanks your suggestions are very helpfull and I managed to have something
resembling an integration test using Trial :-)

Indeed the HTML version does not work for me either but the document still
remains helpfull. So, is this documentation something going to be published
sooner or later (as I see it's in a branch) ?

Thank you. Regards,
Alessio Pace


On Mon, Jan 26, 2009 at 6:00 PM, Martin Geisler <mg at daimi.au.dk> wrote:

> Alessio Pace <alessio.pace at gmail.com> writes:
>
> > I would like to put in my suite of tests some integration tests which
> > deal with running some exchange of messages among 2 endpoints (bound
> > locally on the same machine on 2 different ports).
> >
> > I noticed (and read afterwards..) that I can't run()/stop() the
> > reactor multiple times, so I was wondering what's the suggested way to
> > deal with this kind of situation.
> >
> > Sorry if perhaps it is documented somewhere on the Twisted doc but
> > apart from the mention to "Trial" (which I'm not sure responds to my
> > needs) I haven't found much.
>
> Trial is what you want, it knows how to deal with the Deferreds you are
> likely to return from your tests.
>
> The point is that you can do stuff like this where getPage is a function
> which returns a Deferred:
>
>  def test_something(self):
>    p = getPage("http://example.com/")
>    p.addCallback(self.assertEquals, "<html>...</html>")
>    return p
>
> When you return p from the test, the reactor will wait until p has fired
> before starting the next test. When p fires, the callbacks are executed
> like normal, and here the callsback compares the HTML retrieved with the
> expected content. If p does not fire within a given timeout (120 seconds
> by default, I think) the reactor will declare the test a failure.
>
> Take a look at the tutorial here:
>
>
> http://twistedmatrix.com/trac/browser/branches/trial-tutorial-2443/doc/core/howto/trial.xhtml
>
> Use the link for "Original Format" at the bottom to view as HTML, though
> I'm getting an XML parse error from my browser when I do this.
>
> I'm using the twisted.protocols.loopback module for connecting several
> parties with a pseudo-transport. This allows the testing code to behave
> like in your normal application, but the communication is done with
> function calls instead of actual network traffic.
>
>
> --
> Martin Geisler
>
> VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
> SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090127/590b4ffd/attachment.html>

From ceronman at gmail.com  Tue Jan 27 10:12:07 2009
From: ceronman at gmail.com (=?ISO-8859-1?Q?Manuel_Alejandro_Cer=F3n_Estrada?=)
Date: Tue, 27 Jan 2009 12:12:07 -0500
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
Message-ID: <796874fc0901270912v6f21f723p570d9d12260e0b52@mail.gmail.com>

Hello.

This year I'm going to start my graduation project for software
engineering and I want to use Python and Twisted. I want to use Python
3.0 but unfortunately, Twisted doesn't support 3.0 yet and I've read
that this is not exactly a high priority right now. As this is an open
source project, I thought the best thing I can do is to contribute
with the porting. Then I have some questions:

Is someone leading the porting process?
Have you defined a porting strategy?
What is the best way in which I can contribute to this?

Thanks.

Manuel.



From glyph at divmod.com  Tue Jan 27 12:08:15 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jan 2009 19:08:15 -0000
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
In-Reply-To: <796874fc0901270912v6f21f723p570d9d12260e0b52@mail.gmail.com>
References: <796874fc0901270912v6f21f723p570d9d12260e0b52@mail.gmail.com>
Message-ID: <20090127190815.12555.61101946.divmod.xquotient.3862@weber.divmod.com>


On 05:12 pm, ceronman at gmail.com wrote:
>This year I'm going to start my graduation project for software
>engineering and I want to use Python and Twisted. I want to use Python
>3.0 but unfortunately, Twisted doesn't support 3.0 yet and I've read
>that this is not exactly a high priority right now. As this is an open
>source project, I thought the best thing I can do is to contribute
>with the porting. Then I have some questions:

Thanks!  We can always use help, and the 3.0 port is a major project 
which we currently have no manpower for, so we can especially use help 
for that.
>Is someone leading the porting process?

You, now :).
>Have you defined a porting strategy?

Yes.  It's outlined here:

http://stackoverflow.com/questions/172306/how-are-you-planning-on- 
handling-the-migration-to-python-3#214601
>What is the best way in which I can contribute to this?

Twisted's test suite currently emits a _lot_ of warnings.  In order to 
do a python 3 port, we'll need to be getting zero warnings on python 2.6 
with the -3 switch.  If we are even going to be able to _see_ those 
warnings, we need to get down to zero warnings and adopt a zero- 
tolerance policy on new warnings being added.

So the first thing you should do is find, file, and fix as many tickets 
as you can related to warnings in tests; warnings from Twisted itself, 
warnings from the stdlib, warnings from dependencies.

When you're done with that we can talk about what comes next :).



From glyph at divmod.com  Tue Jan 27 12:22:18 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jan 2009 19:22:18 -0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
	<60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
Message-ID: <20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>


On 01:48 am, radix at twistedmatrix.com wrote:
>I'd like to go to the sprint, but for what it's worth, I won't be able
>to make it on that weekend. I'm leaving for business the afternoon of
>the 7th.

Do you have a different recommendation?  How long will your trip take?



From radix at twistedmatrix.com  Tue Jan 27 12:30:02 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 27 Jan 2009 14:30:02 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
	<60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
	<20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>
Message-ID: <60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>

On Tue, Jan 27, 2009 at 2:22 PM,  <glyph at divmod.com> wrote:
>
> On 01:48 am, radix at twistedmatrix.com wrote:
>>
>> I'd like to go to the sprint, but for what it's worth, I won't be able
>> to make it on that weekend. I'm leaving for business the afternoon of
>> the 7th.
>
> Do you have a different recommendation?  How long will your trip take?

I could sprint this weekend. The trip is two weeks, so I could
feasibly also sprint on the Sunday the 22nd (with the chance of
jetlag). Any other weekend is probably good, I'm just unavailable 7th
through 21st.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From itamar at itamarst.org  Tue Jan 27 13:47:22 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 27 Jan 2009 15:47:22 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
	<60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
	<20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>
	<60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>
Message-ID: <1233089242.7991.18.camel@pintsize>

On Tue, 2009-01-27 at 14:30 -0500, Christopher Armstrong wrote:

> I could sprint this weekend. The trip is two weeks, so I could
> feasibly also sprint on the Sunday the 22nd (with the chance of
> jetlag). Any other weekend is probably good, I'm just unavailable 7th
> through 21st.

This Saturday works for me (in so far as I can do anything at all)...




From glyph at divmod.com  Tue Jan 27 15:27:25 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jan 2009 22:27:25 -0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>
References: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
	<20090127011532.12555.1744792925.divmod.xquotient.3803@weber.divmod.com>
	<60ed19d40901261748y4417bc87u7bd44269e45c46c3@mail.gmail.com>
	<20090127192218.12555.1525024524.divmod.xquotient.3884@weber.divmod.com>
	<60ed19d40901271130k606b6497ofb088becdbf29f01@mail.gmail.com>
Message-ID: <20090127222725.12555.1656498035.divmod.xquotient.3886@weber.divmod.com>

On 07:30 pm, radix at twistedmatrix.com wrote:
>I could sprint this weekend. The trip is two weeks, so I could
>feasibly also sprint on the Sunday the 22nd (with the chance of
>jetlag). Any other weekend is probably good, I'm just unavailable 7th
>through 21st.

OK then, the 1st could work for me too.



From exarkun at divmod.com  Tue Jan 27 15:45:09 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jan 2009 17:45:09 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090127222725.12555.1656498035.divmod.xquotient.3886@weber.divmod.com>
Message-ID: <20090127224509.24460.1902917997.divmod.quotient.2837@henry.divmod.com>

On Tue, 27 Jan 2009 22:27:25 -0000, glyph at divmod.com wrote:
>On 07:30 pm, radix at twistedmatrix.com wrote:
>>I could sprint this weekend. The trip is two weeks, so I could
>>feasibly also sprint on the Sunday the 22nd (with the chance of
>>jetlag). Any other weekend is probably good, I'm just unavailable 7th
>>through 21st.
>
>OK then, the 1st could work for me too.
>

There is a 50% chance that the 1st won't work for me.

Jean-Paul



From ted.pederson at gmail.com  Tue Jan 27 16:05:46 2009
From: ted.pederson at gmail.com (Ted Pederson)
Date: Tue, 27 Jan 2009 15:05:46 -0800
Subject: [Twisted-Python] multiple log files
Message-ID: <834bba420901271505k1b9adfb8p5b9f1088a6464f0c@mail.gmail.com>

I am new to twisted. If I understand it correctly, the framework doesn't
support multiple log files. I can still use python's logging, but will there
be problems with blocking?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090127/154268e5/attachment.html>

From exarkun at divmod.com  Tue Jan 27 16:36:21 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jan 2009 18:36:21 -0500
Subject: [Twisted-Python] multiple log files
In-Reply-To: <834bba420901271505k1b9adfb8p5b9f1088a6464f0c@mail.gmail.com>
Message-ID: <20090127233621.24460.1314447734.divmod.quotient.2854@henry.divmod.com>

On Tue, 27 Jan 2009 15:05:46 -0800, Ted Pederson <ted.pederson at gmail.com> wrote:
>I am new to twisted. If I understand it correctly, the framework doesn't
>support multiple log files.

You can implement any logging policy you want.  See the logging documentation
(<http://twistedmatrix.com/projects/core/documentation/howto/logging.html>)
for details on how.

Jean-Paul



From broder79 at gmail.com  Tue Jan 27 18:19:17 2009
From: broder79 at gmail.com (Adan Broderick)
Date: Tue, 27 Jan 2009 20:19:17 -0500
Subject: [Twisted-Python] Beginner's question about names and callbacks
In-Reply-To: <20090126064620.GB5868@thristian.org>
References: <ed9894e50901252206p2e5a7fedlc6dc93f95ae648dc@mail.gmail.com>
	<20090126064620.GB5868@thristian.org>
Message-ID: <ed9894e50901271719p3c858359hb77756bdc8df758c@mail.gmail.com>

Fantastic, that is exactly what I was looking for.  Thank you very much for
helping me.


On Mon, Jan 26, 2009 at 1:46 AM, Tim Allen <screwtape at froup.com> wrote:

> On Mon, Jan 26, 2009 at 01:06:37AM -0500, Adan Broderick wrote:
> > I'm trying to write a program that will call my own function whenever a
> > query to a nameserver times out. I have figured out how to run the DNS
> > server. And I also know how to use filterAnswers(). But how do I catch
> the
> > "Failure: twisted.names.error.DNSQueryTimeoutError:" messages by adding
> code
> > to the resolver I've constructed?
>
> I'm not familiar with twisted.names, but looking at the source to
> client.Resolver, it seems that something winds up calling _lookup() with
> a timeout, which passes it off to the queryUDP() and sets up the basic
> result handling. If queryUDP() returns a result, it goes to filterAnswers,
> which checks for truncation and re-sends with queryTCP().
>
> Since the actual deferreds that deal with the timeouts are returned from
> queryUDP() and queryTCP(), it looks like you should be overriding those
> methods and capturing the results instead. Something like this:
>
> class MyResolver(client.Resolver):
>
>    def _handle_query_timeout(self, fail):
>        fail.trap(DNSQueryTimeoutError)
>        print "Got an error:", fail.getErrorMessage()
>
>    def queryUDP(self, *args, **kwargs):
>        d = client.Resolver.queryUDP(self, *args, **kwargs)
>        d.addErrback(self._handle_query_timeout)
>        return d
>
>    def queryTCP(self, *args, **kwargs):
>        d = client.Resolver.queryTCP(self, *args, **kwargs)
>        d.addErrback(self._handle_query_timeout)
>        return d
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090127/9a596a95/attachment.html>

From exarkun at divmod.com  Tue Jan 27 18:40:58 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jan 2009 20:40:58 -0500
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
In-Reply-To: <20090127190815.12555.61101946.divmod.xquotient.3862@weber.divmod.com>
Message-ID: <20090128014058.24460.2001823193.divmod.quotient.2913@henry.divmod.com>

On Tue, 27 Jan 2009 19:08:15 -0000, glyph at divmod.com wrote:
>
>On 05:12 pm, ceronman at gmail.com wrote:
>>This year I'm going to start my graduation project for software
>>engineering and I want to use Python and Twisted. I want to use Python
>>3.0 but unfortunately, Twisted doesn't support 3.0 yet and I've read
>>that this is not exactly a high priority right now. As this is an open
>>source project, I thought the best thing I can do is to contribute
>>with the porting. Then I have some questions:
>
>Thanks!  We can always use help, and the 3.0 port is a major project which 
>we currently have no manpower for, so we can especially use help for that.
>>Is someone leading the porting process?
>
>You, now :).
>>Have you defined a porting strategy?
>
>Yes.  It's outlined here:
>
>http://stackoverflow.com/questions/172306/how-are-you-planning-on- handling- 
>the-migration-to-python-3#214601
>>What is the best way in which I can contribute to this?
>
>Twisted's test suite currently emits a _lot_ of warnings.  In order to do a 
>python 3 port, we'll need to be getting zero warnings on python 2.6 with the 
>-3 switch.  If we are even going to be able to _see_ those warnings, we need 
>to get down to zero warnings and adopt a zero- tolerance policy on new 
>warnings being added.
>
>So the first thing you should do is find, file, and fix as many tickets as 
>you can related to warnings in tests; warnings from Twisted itself, warnings 
>from the stdlib, warnings from dependencies.

To expand on this, you can find the warnings which are currently emitted from
the Twisted test suite by looking at one of the build result pages on our
buildbot.  Our buildbot's website is at <http://buildbot.twistedmatrix.com/>.
Warnings have a special page, linked from each build result page.  For
example, <http://buildbot.twistedmatrix.com/builders/debian-py2.3-select/builds/258/steps/trial/logs/warnings>.

There is also a builder which runs using the -3 warning option: 
<http://buildbot.twistedmatrix.com/builders/python-3k-warnings>.

And another which runs against Python 3.0: <http://buildbot.twistedmatrix.com/builders/ubuntu64-py3.0-select>.

The general Twisted development process is described on the Divmod wiki:
<http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem>.

You can find more information on <http://twistedmatrix.com/trac/wiki/TwistedDevelopment>.

Jean-Paul



From mpyle101+twisted at gmail.com  Tue Jan 27 19:37:39 2009
From: mpyle101+twisted at gmail.com (Michael Pyle)
Date: Tue, 27 Jan 2009 18:37:39 -0800
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
In-Reply-To: <20090128014058.24460.2001823193.divmod.quotient.2913@henry.divmod.com>
References: <20090127190815.12555.61101946.divmod.xquotient.3862@weber.divmod.com>
	<20090128014058.24460.2001823193.divmod.quotient.2913@henry.divmod.com>
Message-ID: <f0d1ca940901271837x55ef6dfdq28de9bf34e85e6f4@mail.gmail.com>

On Tue, Jan 27, 2009 at 5:40 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Tue, 27 Jan 2009 19:08:15 -0000, glyph at divmod.com wrote:
>
>>
>> On 05:12 pm, ceronman at gmail.com wrote:
>>
>>> This year I'm going to start my graduation project for software
>>> engineering and I want to use Python and Twisted. I want to use Python
>>> 3.0 but unfortunately, Twisted doesn't support 3.0 yet and I've read
>>> that this is not exactly a high priority right now. As this is an open
>>> source project, I thought the best thing I can do is to contribute
>>> with the porting. Then I have some questions:
>>>
>>
>> Thanks!  We can always use help, and the 3.0 port is a major project which
>> we currently have no manpower for, so we can especially use help for that.
>>
>>> Is someone leading the porting process?
>>>
>>
>> You, now :).
>>
>>> Have you defined a porting strategy?
>>>
>>
>> Yes.  It's outlined here:
>>
>> http://stackoverflow.com/questions/172306/how-are-you-planning-on-handling- the-migration-to-python-3#214601
>>
>>> What is the best way in which I can contribute to this?
>>>
>>
>> Twisted's test suite currently emits a _lot_ of warnings.  In order to do
>> a python 3 port, we'll need to be getting zero warnings on python 2.6 with
>> the -3 switch.  If we are even going to be able to _see_ those warnings, we
>> need to get down to zero warnings and adopt a zero- tolerance policy on new
>> warnings being added.
>>
>> So the first thing you should do is find, file, and fix as many tickets as
>> you can related to warnings in tests; warnings from Twisted itself, warnings
>> from the stdlib, warnings from dependencies.
>>
>
Is there a way you prefer to see the tickets entered? Looking at the
buildbot log for build 45 it seems like there's a few different ways to
slice and dice things depending on how granular you want the tickets. You
could do it by "fix deprecated calls" or narrow it down to "fix
DeprecationWarning for xxx" or break it up by module or even on a file by
file or call by call basis (granted the latter seems like overkill for a
porting effort).

--mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090127/97187456/attachment.html>

From exarkun at divmod.com  Tue Jan 27 19:54:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jan 2009 21:54:00 -0500
Subject: [Twisted-Python] Getting involved in Python 3.0 porting
In-Reply-To: <f0d1ca940901271837x55ef6dfdq28de9bf34e85e6f4@mail.gmail.com>
Message-ID: <20090128025400.24460.1984552729.divmod.quotient.2945@henry.divmod.com>

On Tue, 27 Jan 2009 18:37:39 -0800, Michael Pyle <mpyle101+twisted at gmail.com> wrote:
>> On Tue, 27 Jan 2009 19:08:15 -0000, glyph at divmod.com wrote:
>>> [snip]
>>>
>>> So the first thing you should do is find, file, and fix as many tickets as
>>> you can related to warnings in tests; warnings from Twisted itself, warnings
>>> from the stdlib, warnings from dependencies.
>>>
>>
>Is there a way you prefer to see the tickets entered? Looking at the
>buildbot log for build 45 it seems like there's a few different ways to
>slice and dice things depending on how granular you want the tickets. You
>could do it by "fix deprecated calls" or narrow it down to "fix
>DeprecationWarning for xxx" or break it up by module or even on a file by
>file or call by call basis (granted the latter seems like overkill for a
>porting effort).
>

You'll find some tickets already exist in the tracker.  For example,

  http://twistedmatrix.com/trac/ticket/3493
  http://twistedmatrix.com/trac/ticket/3431
  http://twistedmatrix.com/trac/ticket/3424
  http://twistedmatrix.com/trac/ticket/3231
  http://twistedmatrix.com/trac/ticket/3153

For other issues, I would lean towards filing a ticket per test_*.py file.
However, this is just a general rule of thumb.  You may find it easy to fix
several test_*.py files at once with one set of changes, or you may find
that the fixes for one set of deprecations from a single test file are
totally unrelated to another set of fixes for other deprecations (cases in
which I would file just one ticket or multiple tickets, respectively).  So
feel free to exercise your own judgment.  We won't bite your head off if
we disagree with your decision, but we might ask you to split one patch
into two or more pieces.

One thing that's probably worth watching out for is that there are a couple
large, old Conch branches outstanding.  Changes to Conch's test suite may
conflict with these branches.  I wouldn't let this stop you from fixing
things in Conch, but it would probably be best to try to coordinate with
Paul Swartz before digging in too deeply.

Jean-Paul



From huffman at tokyo.email.ne.jp  Wed Jan 28 01:46:27 2009
From: huffman at tokyo.email.ne.jp (Theron D. Huffman)
Date: Wed, 28 Jan 2009 17:46:27 +0900
Subject: [Twisted-Python] Which twisted should I install?
Message-ID: <911E63F103BF4319A5C68DE5C45C5A75@Podcaster>

On the Twisted website there is an 8.2.0 for Python 2.6 on Windows, and an 8.2.0 for Python 2.5 on OS X 10.5. 

But I got OS X 10.5 running Python 2.6 from MacPorts. Which Twisted should I download and install?

Regards,
Tokyo Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090128/4524fbb9/attachment.html>

From ntoper at gmail.com  Wed Jan 28 01:57:07 2009
From: ntoper at gmail.com (Nicolas Toper)
Date: Wed, 28 Jan 2009 09:57:07 +0100
Subject: [Twisted-Python] Which twisted should I install?
In-Reply-To: <911E63F103BF4319A5C68DE5C45C5A75@Podcaster>
References: <911E63F103BF4319A5C68DE5C45C5A75@Podcaster>
Message-ID: <fcbb46050901280057x58b257aenc70c4acee6a2a0bc@mail.gmail.com>

Hi,
there is a dmg already  for MacOS Why don't you install it?

On Wed, Jan 28, 2009 at 9:46 AM, Theron D. Huffman <
huffman at tokyo.email.ne.jp> wrote:

>  On the Twisted website there is an 8.2.0 for Python 2.6 on Windows, and
> an 8.2.0 for Python 2.5 on OS X 10.5.
>
> But I got OS X 10.5 running Python 2.6 from MacPorts. Which Twisted should
> I download and install?
>
> Regards,
> Tokyo Dan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
A+
Nico
http://www.deviant-abstraction.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090128/0d733866/attachment.html>

From hackingkk at gmail.com  Wed Jan 28 04:20:10 2009
From: hackingkk at gmail.com (Krishnakant)
Date: Wed, 28 Jan 2009 16:50:10 +0530
Subject: [Twisted-Python] getting "can't serialize output " error while
	returning numeric data from postgresql.
In-Reply-To: <fcbb46050901280057x58b257aenc70c4acee6a2a0bc@mail.gmail.com>
References: <911E63F103BF4319A5C68DE5C45C5A75@Podcaster>
	<fcbb46050901280057x58b257aenc70c4acee6a2a0bc@mail.gmail.com>
Message-ID: <1233141610.23264.7.camel@krishna-laptop>

hello all,
I think this must be a simple thing and many of you might be knowing the
solution,
But I am new to twisted and for me this is a big challenge.
I am connecting my xmlrpc based twisted application (server ) to a
postgresql database using python-psycopg2
I am returning a result set from a function and the resultset is as a
list which cursor.fetchone() returns.
now  my function called xmlrpc_getDetails(product_code):
   #code to execute query on cursur 
   return resultset

All works well untill i encounter a field of type numeric which has
decimal values.

I et the can't serialize output error.
I believe I have to register some kind of a system to cast the data in a
way that twisted understands?
how can I do this?
happy hacking.
Krishnakant.





From exarkun at divmod.com  Wed Jan 28 06:49:06 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 28 Jan 2009 08:49:06 -0500
Subject: [Twisted-Python] getting "can't serialize output " error while
	returning numeric data from postgresql.
In-Reply-To: <1233141610.23264.7.camel@krishna-laptop>
Message-ID: <20090128134906.24460.1239051899.divmod.quotient.3214@henry.divmod.com>

On Wed, 28 Jan 2009 16:50:10 +0530, Krishnakant <hackingkk at gmail.com> wrote:
>hello all,
>I think this must be a simple thing and many of you might be knowing the
>solution,
>But I am new to twisted and for me this is a big challenge.
>I am connecting my xmlrpc based twisted application (server ) to a
>postgresql database using python-psycopg2
>I am returning a result set from a function and the resultset is as a
>list which cursor.fetchone() returns.
>now  my function called xmlrpc_getDetails(product_code):
>   #code to execute query on cursur
>   return resultset
>
>All works well untill i encounter a field of type numeric which has
>decimal values.
>
>I et the can't serialize output error.
>I believe I have to register some kind of a system to cast the data in a
>way that twisted understands?
>how can I do this?

Twisted's XML-RPC support is based on the stdlib module `xmlrpclib´.
See http://docs.python.org/library/xmlrpclib.html for details.

Jean-Paul



From huffman at tokyo.email.ne.jp  Wed Jan 28 16:28:10 2009
From: huffman at tokyo.email.ne.jp (Theron D. Huffman)
Date: Thu, 29 Jan 2009 08:28:10 +0900
Subject: [Twisted-Python] "there is a dmg already for MacOS Why don't you
	install it?"
Message-ID: <FBA60A3F9FF5485C960C30B0736AB1DF@Podcaster>

"there is a dmg already  for MacOS Why don't you install it?"

Because the dmg for MacOS states that it is for Python 2.5. I'm running Python 2.6 that I installed from MacPorts.


Kindest Regards,
Dan Huffman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090129/79754ce6/attachment.html>

From huffman at tokyo.email.ne.jp  Wed Jan 28 16:29:23 2009
From: huffman at tokyo.email.ne.jp (Theron D. Huffman)
Date: Thu, 29 Jan 2009 08:29:23 +0900
Subject: [Twisted-Python] "there is a dmg already for MacOS Why don't you
	install it?"
Message-ID: <5F3DEBE3741B4ACFB67BF75D2A0E00E9@Podcaster>

"there is a dmg already  for MacOS Why don't you install it?"

Because the dmg for MacOS states that it is for Python 2.5. I'm running 
Python 2.6 that I installed from MacPorts.


Kindest Regards,
Dan Huffman 




From huffman at tokyo.email.ne.jp  Wed Jan 28 16:35:26 2009
From: huffman at tokyo.email.ne.jp (Theron D. Huffman)
Date: Thu, 29 Jan 2009 08:35:26 +0900
Subject: [Twisted-Python] "there is a dmg already for MacOS Why don't you
	install it?"
Message-ID: <7B6841D90E63401B9375019803CF8A4D@Podcaster>

"there is a dmg already  for MacOS Why don't you install it?"

Because the dmg for MacOS states that it is for Python 2.5. I'm running 
Python 2.6 that I installed from MacPorts.

Kindest Regards,
Dan Huffman




From alessio.pace at gmail.com  Thu Jan 29 02:53:30 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 29 Jan 2009 10:53:30 +0100
Subject: [Twisted-Python] A Java protocol on Twisted?
In-Reply-To: <20090126152619.24460.434919123.divmod.quotient.2143@henry.divmod.com>
References: <84987d20901220014v12a2a70dv6b08aee0e5271baa@mail.gmail.com>
	<20090126152619.24460.434919123.divmod.quotient.2143@henry.divmod.com>
Message-ID: <84987d20901290153p63b5d994gd03d87fbe312aa0@mail.gmail.com>

Hi,

first of all sorry for my delayed answer.


On Mon, Jan 26, 2009 at 4:26 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Thu, 22 Jan 2009 09:14:48 +0100, Alessio Pace <alessio.pace at gmail.com>
> wrote:
>
>> Hi,
>>
>> recently I was asked if it would be possible to plug a Java protocol in a
>> Twisted-based P2P library I'm working on.
>>
>> Up to now this heterogenous languages integration was not a concern, but
>> apparently the possibility to write an high level protocol in Java for
>> external developers seem to become very important and would otherwise
>> block
>> their choice in using the library..
>>
>
> Can you clarify what you're after?  Does plugging in a "Java protocol" mean
> that you have some .java (or .class?) files which implement a protocol and
> you want to use that code in your Twisted-based application?
>
> Or does it mean that you need to interoperate with a Java client or server
> by implementing in Python the protocol that is used by that Java software?



Yes, this is closer to my need. There is the Python+Twisted library that
takes care of networking communication. Then on top of this people may want
to write their higher level application with their Java protocol which may
or may not have to directly use networking sockets used internally by the
Python/Twisted layer.


|  Java protocols |    | Python protocols |
         |  Python library  |
         |       twisted       |
          <-- networking -->


>
>  Could anyone, if have any experience or knowledge, let me know if this is
>> possible and under which conditions? I heard infact that Jython and
>> Twisted
>> are not working together..
>>
>
> Twisted indeed does not work on Jython currently.  There are some efforts
> to
> get it working there.  You may want to help out with these. :)


Yes, I would like to, but it depends if I get the possibility to allocate
time on it... Unless the Java integration becomes blocking for us, we will
continue just with pure Python and Twisted.

Thanks,
Alessio Pace.



>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090129/54e8afee/attachment.html>

From alessio.pace at gmail.com  Thu Jan 29 05:42:25 2009
From: alessio.pace at gmail.com (Alessio Pace)
Date: Thu, 29 Jan 2009 13:42:25 +0100
Subject: [Twisted-Python] Having different tests run with Trial using
	different reactor implementations ?
Message-ID: <84987d20901290442s2d834692ne35dee61538bf36@mail.gmail.com>

Hi,

I would like to know if (but I heard it is..) and how it is possible to run
with Trial a test suite where some tests use a reactor implementation and
some instead another one..

In fact I have some tests extending Trial's TestCase (hence expecting to use
the selector reactor) while some others use the "plain" TestCase and in the
setUp() / tearDown()  do install/uninstall of the custom reactor I wrote.

Running both tests causes using the wrong reactor when another one is
expected, so I was thinking about migrating my custom reactor based tests to
Trial.

Any suggestions? Thanks again in advance.

Regards,
Alessio Pace.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090129/9e832902/attachment.html>

From dr.marc.byrd at gmail.com  Thu Jan 29 11:08:29 2009
From: dr.marc.byrd at gmail.com (Marc Byrd)
Date: Thu, 29 Jan 2009 10:08:29 -0800
Subject: [Twisted-Python] Commissiion / Bounty for Twisted CloudCache
Message-ID: <a33934630901291008j6591a4abxfe5fbc558fabe89d@mail.gmail.com>

Hello,

We're building out a service, launching in the next 30 days, that provides
low-latency elastic caching in the AWS environment - more info at
http://cloudscape.ws .  The service is purely ReSTful and uses an
authentication approach which is consistent with other AWS services
(signature is HMAC hash of service+operation+timestamp with secret-key).

We would like to commission the development of an open source Twisted module
that takes advantage of CloudCache.  It should be as close as possible to
the twisted memcache interface, perhaps requiring only a change in the
constructor.

I can provide basic python test cases for all API methods.

BTW [OT], would also be interested in non-twisted replacements of other
popular memcached libs, similar constructor-only diffs in the interface.

If interested, please reply with qualifications and experience with twisted
and memcached, and a ballpark of what kind of commission / bounty you think
would be fair.

Thanks!


Marc
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090129/326fbc5b/attachment.html>

From tom.cocagne at gmail.com  Thu Jan 29 13:21:36 2009
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Thu, 29 Jan 2009 12:21:36 -0800
Subject: [Twisted-Python] New C++ implementation of Deferreds
Message-ID: <198edda90901291221q4ceb689ex4ec9beb01d28f0e9@mail.gmail.com>

    The question of whether anyone had developed a C++ implementation of
Twisted's Deferreds has cropped up on this list several times over the last
few years. To date, I've unfortunately been forced to sit on an
implementation I developed several years ago for the Department of Defense.
Due to some rather draconian IP & security policies, it's taken an
exceptionally long time to get the code released. I'm happy to announce
though that I finally managed to obtain release authorization for it and
that the code now has a new home on Sourceforge.

    As C++ has differing language features, the API of the C++ deferreds
isn't identical to those of Twisted's but most of the key concepts mapped
over pretty well. Additionally, this implementation has a few design
extensions to facilitate the development multi-threaded C++ applications.
The multi-threaded aspect grew almost accidentally out of the original
single-threaded design but, since then, it has proven to be extraordinarily
useful for simplifying several multi-threaded applications I've worked on.

    The implementation of the library is, however, rather complex. In large
part, this is due to the effort required to work around the inherent
inflexibility of the C++ type system. The Function, Bind, and
Meta-Programming libraries found in Boost have gone a long way towards
simplify the implementation though (my original Loki-based attempt was
almost incomprehensible even to me ;-). The library is fully documented
though so as long as you're reasonably comfortable with C++ templates, it
should be understandable.

    So far, the library has only been exposed to a handful of individuals
for review. I'd be interested to hear the comments anyone has about the
design and/or implementation approach. The code is available at:

        http://deferred.svn.sourceforge.net/viewvc/deferred/

    Cheers,

    Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090129/48b91082/attachment.html>

From toreason at fastmail.fm  Fri Jan 30 01:09:00 2009
From: toreason at fastmail.fm (V S P)
Date: Fri, 30 Jan 2009 03:09:00 -0500
Subject: [Twisted-Python] New C++ implementation of Deferreds
In-Reply-To: <198edda90901291221q4ceb689ex4ec9beb01d28f0e9@mail.gmail.com>
References: <198edda90901291221q4ceb689ex4ec9beb01d28f0e9@mail.gmail.com>
Message-ID: <1233302940.4190.1297566749@webmail.messagingengine.com>

Hi, this is very interesting 
( am I currently testing out C++ web server (using boost asio) called
pion
to see if can suit my needs (it is a multi-threaded async IO generic
server and boost asio uses the best async APIs for each OS (including
kques for freebsd for example).


I looked at the example threads.cpp -- but could not figure out -- how
would it integrate with Twisted ? 

thanks

On Thu, 29 Jan 2009 12:21:36 -0800, "Tom Cocagne"
<tom.cocagne at gmail.com> said:
>     The question of whether anyone had developed a C++ implementation of
> Twisted's Deferreds has cropped up on this list several times over the
> last
> few years. To date, I've unfortunately been forced to sit on an
> implementation I developed several years ago for the Department of
> Defense.
> Due to some rather draconian IP & security policies, it's taken an
> exceptionally long time to get the code released. I'm happy to announce
> though that I finally managed to obtain release authorization for it and
> that the code now has a new home on Sourceforge.
> 
>     As C++ has differing language features, the API of the C++ deferreds
> isn't identical to those of Twisted's but most of the key concepts mapped
> over pretty well. Additionally, this implementation has a few design
> extensions to facilitate the development multi-threaded C++ applications.
> The multi-threaded aspect grew almost accidentally out of the original
> single-threaded design but, since then, it has proven to be
> extraordinarily
> useful for simplifying several multi-threaded applications I've worked
> on.
> 
>     The implementation of the library is, however, rather complex. In
>     large
> part, this is due to the effort required to work around the inherent
> inflexibility of the C++ type system. The Function, Bind, and
> Meta-Programming libraries found in Boost have gone a long way towards
> simplify the implementation though (my original Loki-based attempt was
> almost incomprehensible even to me ;-). The library is fully documented
> though so as long as you're reasonably comfortable with C++ templates, it
> should be understandable.
> 
>     So far, the library has only been exposed to a handful of individuals
> for review. I'd be interested to hear the comments anyone has about the
> design and/or implementation approach. The code is available at:
> 
>         http://deferred.svn.sourceforge.net/viewvc/deferred/
> 
>     Cheers,
> 
>     Tom
-- 
  V S P
  toreason at fastmail.fm

-- 
http://www.fastmail.fm - Accessible with your email software
                          or over the web




From tom.cocagne at gmail.com  Fri Jan 30 10:22:15 2009
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Fri, 30 Jan 2009 09:22:15 -0800
Subject: [Twisted-Python] New C++ implementation of Deferreds
In-Reply-To: <1233302940.4190.1297566749@webmail.messagingengine.com>
References: <198edda90901291221q4ceb689ex4ec9beb01d28f0e9@mail.gmail.com>
	<1233302940.4190.1297566749@webmail.messagingengine.com>
Message-ID: <198edda90901300922s3657f152xee6625166dd40cf7@mail.gmail.com>

    The C++ library is completely independent of Python and Twisted but it
can be made to work with them. One of the initial uses of it, in fact, was
to run a Python interpreter (using Twisted) in a dedicated C++ thread and
use it to direct the actions of all the other threads in the process.

    The way I did it is this:

    1. Spawn a C++ thread to run the Python interpreter inside of. All use
of the Python C-API must be done from within this thread if you want to
avoid dealing with the Global Interpreter Lock (remember Python itself is a
single-threaded application). Other C++ threads needing to call a Python
C-API function can do so using a DeferredCommand object that wraps the call
they want to make. Hand this object to the Python thread for execution and
use the Deferred mechanism to get the answer back to the original
thread..... Basically, you turn the interpreter into one big Active Object
as per the standard design pattern.

    2. Use the Python C-API to import a Python module you wrote that will
initialize Twisted and create a pair of TCP sockets that are connected to
each other. Then use the C-API to get the OS-level file descriptor to one of
the sockets. The purpose of this is to provide a mechanism for other C++
threads to inform the Twisted reactor that there's something in the C++
world it needs to do. When one of those DeferredCommands in step one is
given to the Python thread, the last thing the delivering thread needs to do
is call a function that writes a single byte to the TCP socket. This will
cause the Twisted reactor in the Python thread to wake up from it's 'select'
call and dispatch a handler. This handler can then execute a C++ function
you registered with the C-API. Once back in the C++ world and in the context
of the Python thread,  you can dispatch any of the DeferredCommands sitting
in the thread's queue.

    I don't currently have a mechanism for tying a Twisted Deferred directly
to one of the C++ deferreds since I haven't yet found a use-case where it
makes sense to do so. It's probably possible though.

    As for using the C++ deferreds with boost's asio... I haven't used asio
yet but a quick read through the API makes it looks like an almost perfect
match for these deferreds. In fact, I'd like to eventually put this code up
for consideration by the boost community for eventually including something
like it in boost. I *highly* doubt they'd want to use the code I've written
but it might serve as a good proof-of-concept at least.

    Tom

On Fri, Jan 30, 2009 at 12:09 AM, V S P <toreason at fastmail.fm> wrote:

> Hi, this is very interesting
> ( am I currently testing out C++ web server (using boost asio) called
> pion
> to see if can suit my needs (it is a multi-threaded async IO generic
> server and boost asio uses the best async APIs for each OS (including
> kques for freebsd for example).
>
>
> I looked at the example threads.cpp -- but could not figure out -- how
> would it integrate with Twisted ?
>
> thanks
>
> On Thu, 29 Jan 2009 12:21:36 -0800, "Tom Cocagne"
> <tom.cocagne at gmail.com> said:
> >     The question of whether anyone had developed a C++ implementation of
> > Twisted's Deferreds has cropped up on this list several times over the
> > last
> > few years. To date, I've unfortunately been forced to sit on an
> > implementation I developed several years ago for the Department of
> > Defense.
> > Due to some rather draconian IP & security policies, it's taken an
> > exceptionally long time to get the code released. I'm happy to announce
> > though that I finally managed to obtain release authorization for it and
> > that the code now has a new home on Sourceforge.
> >
> >     As C++ has differing language features, the API of the C++ deferreds
> > isn't identical to those of Twisted's but most of the key concepts mapped
> > over pretty well. Additionally, this implementation has a few design
> > extensions to facilitate the development multi-threaded C++ applications.
> > The multi-threaded aspect grew almost accidentally out of the original
> > single-threaded design but, since then, it has proven to be
> > extraordinarily
> > useful for simplifying several multi-threaded applications I've worked
> > on.
> >
> >     The implementation of the library is, however, rather complex. In
> >     large
> > part, this is due to the effort required to work around the inherent
> > inflexibility of the C++ type system. The Function, Bind, and
> > Meta-Programming libraries found in Boost have gone a long way towards
> > simplify the implementation though (my original Loki-based attempt was
> > almost incomprehensible even to me ;-). The library is fully documented
> > though so as long as you're reasonably comfortable with C++ templates, it
> > should be understandable.
> >
> >     So far, the library has only been exposed to a handful of individuals
> > for review. I'd be interested to hear the comments anyone has about the
> > design and/or implementation approach. The code is available at:
> >
> >         http://deferred.svn.sourceforge.net/viewvc/deferred/
> >
> >     Cheers,
> >
> >     Tom
> --
>  V S P
>  toreason at fastmail.fm
>
> --
> http://www.fastmail.fm - Accessible with your email software
>                          or over the web
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090130/fe302cc7/attachment.html>

From ishimoto at gembook.org  Sat Jan 31 02:18:33 2009
From: ishimoto at gembook.org (Atsuo Ishimoto)
Date: Sat, 31 Jan 2009 18:18:33 +0900
Subject: [Twisted-Python] How can I disconnect ssl connection from the
	client side?
Message-ID: <797440730901310118j2d423510pac4dc206ba51a1e4@mail.gmail.com>

Hello,

I'm writing a smtp-client application with twisted.mail. Testing the
application, I noticed that timeout doesn't work in some case if
client started starttls session.  If smtp-server stops responding
after DATA command was sent from client,  calling
transport.loseConnection() doesn't close connection.
I found ticket # 2827 reports connector.disconnect() doesn't work for
ssl connection if the server doesn't send any data.

Is there a workaround to disconnect ssl connection?

Regards,



From exarkun at twistedmatrix.com  Sat Jan 31 22:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Feb 2009 05:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1233464712.51.1949016221@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090201/c5e12008/attachment.html>

