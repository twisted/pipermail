From trac at twistedmatrix.com  Sun Nov  5 00:05:20 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Nov 2017 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1509861920.77.107149523999652843@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171105/35b6cf50/attachment.html>

From glyph at twistedmatrix.com  Sun Nov  5 21:48:59 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 5 Nov 2017 20:48:59 -0800
Subject: [Twisted-Python] conch server can't git clone
Message-ID: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>

I run Conch instead of OpenSSH on my personal server.

I tried to `git clone` a repository on said server, and I saw these logs on the server:

2017-11-06T04:45:49+0000 [twisted.conch.openssh_compat.factory.OpenSSHFactory] disabling non-fixed-group key exchange algorithms because we cannot find moduli file
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] kex alg, key alg: 'ecdh-sha2-nistp256' 'ecdsa-sha2-nistp256'
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] outgoing: 'aes128-ctr' 'hmac-sha2-256' 'none'
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] incoming: 'aes128-ctr' 'hmac-sha2-256' 'none'
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] NEW KEYS
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] starting service 'ssh-userauth'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] 'user' trying auth 'none'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] 'user' trying auth 'publickey'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] 'user' trying auth 'publickey'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] 'user' authenticated with 'publickey'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] starting service 'ssh-connection'
2017-11-06T04:45:49+0000 [SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] got channel 'session' request
2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] channel open
2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] unhandled request for env
2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] executing command "git-upload-pack '/site'"
2017-11-06T04:45:51+0000 [-] sending eof
2017-11-06T04:45:51+0000 [-] exitCode: 0
2017-11-06T04:45:51+0000 [-] sending request 'exit-status'
2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] sending close 0
2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] remote close
2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] shell closed
2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] Got remote error, code 11
	reason: disconnected by user
2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] avatar user logging out (0)
2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] connection lost

And on the client (which is OpenSSH):

$ git clone server:/site WebSite
Cloning into 'WebSite'...
remote: Counting objects: 712, done.
remote: Compressing objects: 100% (528/528), done.
fatal: The remote end hung up unexpectedlyiB | 13.04 MiB/s
fatal: early EOF
fatal: index-pack failed

Anyone have any idea how I could debug this?  My immediate hypothesis is that Conch is treating an EOF / half-close somewhere as a full-close of a session, but I am not sure where to go looking.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171105/ae12ddd2/attachment.html>

From mrw at enotuniq.org  Sun Nov  5 23:37:29 2017
From: mrw at enotuniq.org (Mark Williams)
Date: Sun, 05 Nov 2017 22:37:29 -0800
Subject: [Twisted-Python] conch server can't git clone
In-Reply-To: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>
References: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>
Message-ID: <1509950249.534493.1162732928.57358C84@webmail.messagingengine.com>

On Sun, Nov 5, 2017, at 08:48 PM, Glyph wrote:
> I tried to `git clone` a repository on said server, and I saw these logs on the server:
>
>> 2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] channel open
>> 2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] unhandled request for env
>> 2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] executing command "git-upload-pack '/site'"
>> 2017-11-06T04:45:51+0000 [-] sending eof
>> 2017-11-06T04:45:51+0000 [-] exitCode: 0
>> 2017-11-06T04:45:51+0000 [-] sending request 'exit-status'
>> 2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] sending close 0
>> 2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] remote close
>> 2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] shell closed
>> 2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] Got remote error, code 11
>> reason: disconnected by user
>> 2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] avatar user logging out (0)
>> 2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] connection lost

This looks normal.  I see the same output from a Conch server against
which all git clone calls succeed.

Unfortunately, normal is confusing, so I'll explain my reading of your
log.  The most important part of this is that the 'sending eof' just
means the 'git-upload-pack' process closed stdout and err.  In other
words, I think 'git-upload-pack' is the problem.

The server creates an SSHChanel ("channel open"), then complains that it
cannot answer the client's request for environment variables
(https://tools.ietf.org/html/rfc4254.html#section-6.4) because Conch
doesn't implement that channel request type.  
Conch should probably support it:
https://twistedmatrix.com/trac/ticket/9315

The 'git-upload-pack' command appears to execute successfully: its exit
status is 0 and  SSHSessionProcessProtocol send that back to the client,
per
https://github.com/twisted/twisted/blob/twisted-17.9.0/src/twisted/conch/ssh/session.py#L276-L279

The "sending eof" message you identified as a smoking gun occurs because
'git-upload-pack' closed both stdout and stderr:
https://github.com/twisted/twisted/blob/twisted-17.9.0/src/twisted/conch/ssh/session.py#L220-L221

The server's claim that a 'remote error' occurred is misleading; Conch
calls the SSH transport's receiveError method for all DISCONNECT
messages:

https://github.com/twisted/twisted/blob/twisted-17.9.0/src/twisted/conch/ssh/transport.py#L909-L924

including 11, SSH_DISCONNECT_BY_APPLICATION, which means that the
application willingly terminated the connection:

https://tools.ietf.org/html/rfc4253.html#section-11.1 

OpenSSH's own logging does not consider SSH_DISCONNECT_BY_APPLICATION to
be an error:

https://github.com/openssh/openssh-portable/blob/V_7_6_P1/packet.c#L1703-L1708

Maybe Conch should also filter this:
https://twistedmatrix.com/trac/ticket/9316

> Anyone have any idea how I could debug this?  

You can export the GIT_TRACE_PACKET environment variable on the client
side, which makes git emit packet-level logs:

https://git-scm.com/book/gr/v2/Git-Internals-Environment-Variables

Maybe that will help us figure out why git-pack-upload is terminating
early.

--
  Mark Williams
  mrw at enotuniq.org


From glyph at twistedmatrix.com  Mon Nov  6 00:43:38 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 5 Nov 2017 23:43:38 -0800
Subject: [Twisted-Python] conch server can't git clone
In-Reply-To: <1509950249.534493.1162732928.57358C84@webmail.messagingengine.com>
References: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>
 <1509950249.534493.1162732928.57358C84@webmail.messagingengine.com>
Message-ID: <227699F5-368F-4A94-9477-E09E77FFE57E@twistedmatrix.com>



> On Nov 5, 2017, at 10:37 PM, Mark Williams <mrw at enotuniq.org> wrote:
> 
> You can export the GIT_TRACE_PACKET environment variable on the client
> side, which makes git emit packet-level logs:
> 
> https://git-scm.com/book/gr/v2/Git-Internals-Environment-Variables <https://git-scm.com/book/gr/v2/Git-Internals-Environment-Variables>
> 
> Maybe that will help us figure out why git-pack-upload is terminating
> early.

Hilariously, setting this variable makes the clone in question succeed (???).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171105/ce34774c/attachment.html>

From hawkowl at atleastfornow.net  Mon Nov  6 00:46:46 2017
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Mon, 6 Nov 2017 18:46:46 +1100
Subject: [Twisted-Python] conch server can't git clone
In-Reply-To: <227699F5-368F-4A94-9477-E09E77FFE57E@twistedmatrix.com>
References: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>
 <1509950249.534493.1162732928.57358C84@webmail.messagingengine.com>
 <227699F5-368F-4A94-9477-E09E77FFE57E@twistedmatrix.com>
Message-ID: <05E223E0-D671-4022-B603-E9A0BE889A2E@atleastfornow.net>


> On 6 Nov 2017, at 6:43 pm, Glyph <glyph at twistedmatrix.com> wrote:
> 
> On Nov 5, 2017, at 10:37 PM, Mark Williams <mrw at enotuniq.org> wrote:
>> 
>> You can export the GIT_TRACE_PACKET environment variable on the client
>> side, which makes git emit packet-level logs:
>> 
>> https://git-scm.com/book/gr/v2/Git-Internals-Environment-Variables
>> 
>> Maybe that will help us figure out why git-pack-upload is terminating
>> early.
> 
> Hilariously, setting this variable makes the clone in question succeed (???).
> 
> -glyph

 .-.
(o o) ~ it is a mystery ~
| O \
 \   \
  `~~~'
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: </pipermail/twisted-python/attachments/20171106/2b6ab7ae/attachment-0001.sig>

From trac at twistedmatrix.com  Sun Nov 12 00:05:21 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Nov 2017 07:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1510470321.03.3483280839581844944@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171112/7fa26c4a/attachment.html>

From glyph at twistedmatrix.com  Sun Nov 12 00:32:48 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 11 Nov 2017 23:32:48 -0800
Subject: [Twisted-Python] body producer bug in agent?
Message-ID: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>

I attempted to draw some attention to this with github mentions:

https://github.com/twisted/treq/issues/185#issuecomment-331856235 <https://github.com/twisted/treq/issues/185#issuecomment-331856235>

but it looks like that didn't work.

Hopefully by posting it here I can motivate someone to look at it?  I think it sounds like a pretty bad bug, but I don't have a ton of time to look at it myself :-(.  I believe it's in Twisted itself, not Treq, but I could be wrong.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171111/042d737d/attachment.html>

From mithrandi at mithrandi.net  Sun Nov 12 00:48:21 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 12 Nov 2017 07:48:21 +0000
Subject: [Twisted-Python] body producer bug in agent?
In-Reply-To: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
References: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
Message-ID: <CAMcKhMTvbTazaeo909qd2yf961eNiyd_JM7a_TUcSygDN7_qxA@mail.gmail.com>

On Sun, 12 Nov 2017 at 09:33 Glyph <glyph at twistedmatrix.com> wrote:

> I attempted to draw some attention to this with github mentions:
>
> https://github.com/twisted/treq/issues/185#issuecomment-331856235
>
>
> but it looks like that didn't work.
>
> Hopefully by posting it here I can motivate someone to look at it?  I
> think it sounds like a pretty bad bug, but I don't have a ton of time to
> look at it myself :-(.  I believe it's in Twisted itself, not Treq, but I
> could be wrong.
>

A cursory glance suggests that 1) the bug is in Twisted, and 2) the impact
of the bug is limited to an annoying log message. Unfortunately I'm
unlikely to be able to chase this further any time soon, but hopefully
somebody else can.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171112/af392ae1/attachment.html>

From ex.vitorino at gmail.com  Sun Nov 12 06:05:18 2017
From: ex.vitorino at gmail.com (ex vito)
Date: Sun, 12 Nov 2017 13:05:18 +0000
Subject: [Twisted-Python] body producer bug in agent?
In-Reply-To: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
References: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
Message-ID: <8C681DE8-D2BF-4597-B3CB-6483D260F47E@gmail.com>

On 2017-11-12, at 7:32, Glyph <glyph at twistedmatrix.com> wrote:

> I attempted to draw some attention to this with github mentions:
> 
> https://github.com/twisted/treq/issues/185#issuecomment-331856235
> 
> but it looks like that didn't work.
> 
> Hopefully by posting it here I can motivate someone to look at it?  I think it sounds like a pretty bad bug, but I don't have a ton of time to look at it myself :-(.  I believe it's in Twisted itself, not Treq, but I could be wrong.

Took this for a quick spin and I suspect the failure is due to TLS certificate validation failure.

Once I did the export SSL_CERT_FILE="$(python -m certify)" workaround in https://stackoverflow.com/questions/33602478/how-to-handle-openssl-ssl-error-while-using-twisted-web-client-agent-on-facebook by none other that yourself, the sample code no longer fails.

My 2c.
--
exvito

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171112/b104fd39/attachment-0001.html>

From glyph at twistedmatrix.com  Sat Nov 18 23:59:52 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 18 Nov 2017 22:59:52 -0800
Subject: [Twisted-Python] revert
Message-ID: <AC0638B5-22D4-480C-8A27-2AE58502E85F@twistedmatrix.com>

https://twistedmatrix.com/trac/ticket/9280#comment:7 <https://twistedmatrix.com/trac/ticket/9280#comment:7> introduced a pretty serious regression (tracebacks are no longer printed by twisted.web) - can someone please do the appropriate dance to revert this and reopen the ticket?  It looks like the directions need updating for git :-).

https://twistedmatrix.com/trac/wiki/ReviewProcess#Revertingachange <https://twistedmatrix.com/trac/wiki/ReviewProcess#Revertingachange>

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171118/30e2d158/attachment.html>

From trac at twistedmatrix.com  Sun Nov 19 00:05:22 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Nov 2017 07:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1511075122.63.729058575901871831@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171119/6aeb98df/attachment.html>

From ex.vitorino at gmail.com  Sun Nov 19 07:15:13 2017
From: ex.vitorino at gmail.com (ex vito)
Date: Sun, 19 Nov 2017 14:15:13 +0000
Subject: [Twisted-Python] body producer bug in agent?
In-Reply-To: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
References: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
Message-ID: <77CA4D84-6246-4E90-985C-1488A2BDA924@gmail.com>

On 2017-11-12, at 7:32, Glyph <glyph at twistedmatrix.com> wrote:

> I attempted to draw some attention to this with github mentions:
> 
> https://github.com/twisted/treq/issues/185#issuecomment-331856235
> 
> but it looks like that didn't work.
> 
> Hopefully by posting it here I can motivate someone to look at it?  I think it sounds like a pretty bad bug, but I don't have a ton of time to look at it myself :-(.  I believe it's in Twisted itself, not Treq, but I could be wrong.


I explored this issue further and observed the following:

- This looks like a Twisted issue, indeed.
- stopProducing is called twice on FileBodyProducer when TLS certificate validation fails.
- FileBodyProducer uses a CooperativeTask which is stopped on FileBodyProducer stopProducing.
- CooperativeTask raises an exception when its stop is called a second time.


Sample Twisted-only code reproducing the issue, based on a gist by jlitzingerdev, available here  https://gist.github.com/exvito/b8298f25196d41daf67414f702518f6b. It generates a self-signed cert for an HTTPS server and then performs an HTTPS POST with an Agent that won't validate that generated cert, triggering the failure.


Per my comment on the treq's issue, it looks like fixing this comes down to design decisions:

1. Should the TLS wrapping layer trigger two stopProducing calls?
   Ideally no, but I have no idea about the wrapping itself, so it may not be an easy task.

2. Should calling stopProducing twice on FileBodyProducer fail?
   Maybe not, is there any solid benefit in it failing? Maybe there are use cases for that, though.

3. Should calling stop twice on CooperativeTask fail?
   Not sure. Again its reasonable to argue either way.

Given that all of these are public APIs and there may exist code out there using it and expecting the current behavior, deciding on what to change and how does not seem obvious to me.


I consulted the producer/consumer docs and found nothing stating that stopProducing (or any other methods like pauseProducing/resumeProducing) should/should-not be idempotent; this is what I read:
- https://twistedmatrix.com/documents/current/core/howto/producers.html
- https://twistedmatrix.com/documents/17.9.0/api/twisted.internet.interfaces.IProducer.html
- https://twistedmatrix.com/documents/17.9.0/api/twisted.internet.interfaces.IPushProducer.html
- https://twistedmatrix.com/documents/17.9.0/api/twisted.internet.interfaces.IConsumer.html


For completeness, here are related open issues (with the help of jlitzingerdev @github):
- https://twistedmatrix.com/trac/ticket/8473
- https://twistedmatrix.com/trac/ticket/7457
- https://twistedmatrix.com/trac/ticket/6528

All of these include comments/suggestions on addressing this failure by some variation of ignoring the twisted.internet.task.TaskStopped exception in FileBodyProducer.stopProducing.

Given that I'm not 100% familiar with the code, I'm not sure such an approach would be correct and in line with the current design (in particular around producers/consumers and TLS wrapping).


I'm reaching out to the mailing list looking for other perspectives on this.

I feel that the complete approach to this would be fixing 1. and 2. above: wrapping should not lead to duplicate/n-plicate calls to producer methods and, also, design-wise, it seems reasonable to have producer methods be idempotent (and recommend that in the docs?).

But maybe I'm digressing: a quick fix would be to just ignore the TaskDone exception in FileBodyProducer.stopProducing like I mentioned above. Whether that is "correct" or not is what I'm trying to understand.

Thanks for your input,
--
exvito


From jlitzingerdev at gmail.com  Sun Nov 19 23:56:27 2017
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Sun, 19 Nov 2017 23:56:27 -0700
Subject: [Twisted-Python] revert
In-Reply-To: <AC0638B5-22D4-480C-8A27-2AE58502E85F@twistedmatrix.com>
References: <AC0638B5-22D4-480C-8A27-2AE58502E85F@twistedmatrix.com>
Message-ID: <20171120065627.GA12309@arch-tinker.localdomain>

On Sat, Nov 18, 2017 at 10:59:52PM -0800, Glyph wrote:
> https://twistedmatrix.com/trac/ticket/9280#comment:7 <https://twistedmatrix.com/trac/ticket/9280#comment:7> introduced a pretty serious regression (tracebacks are no longer printed by twisted.web) - can someone please do the appropriate dance to revert this and reopen the ticket?  It looks like the directions need updating for git :-).
To follow up, there is quite a bit of discussion in the ticket about this, for anyone
to whom this is of interest.

Cheers,
-Jason


From nandhakumarsathiya at gmail.com  Mon Nov 20 20:16:33 2017
From: nandhakumarsathiya at gmail.com (Nandha Kumar)
Date: Tue, 21 Nov 2017 08:46:33 +0530
Subject: [Twisted-Python] Reactor.run() to be a non blocking call and run in
	background
Message-ID: <15fdc93c668.27c2.edd11995bf46bbe14e1c477ff96295d9@gmail.com>

Hi guys,

I'm using twisted to host an ssh server.. My requirement that the python 
code I did needs to start the reactor and come out of the execution and 
needs to stop the reactor once stop is called.. But since the reactor. 
Run() seems to be a blocking one.. It isn't moving forward after starting 
the reactor.. Any work around on this would be appreciated..


Regards,
Nandha Kumar S



From mrw at enotuniq.org  Tue Nov 21 12:56:54 2017
From: mrw at enotuniq.org (Mark Williams)
Date: Tue, 21 Nov 2017 11:56:54 -0800
Subject: [Twisted-Python] OpenSSL versions
Message-ID: <1511294214.2258153.1180174504.48167D8C@webmail.messagingengine.com>

Hello,

Users of Twisted and OpenSSL 1.1  and 1.0.2 cannot connect to all HTTPS
sites because Twisted sets its own ECDH curve instead of using the
defaults selected by these versions of OpenSSL.

The gory details are here:
https://twistedmatrix.com/trac/ticket/9210
https://github.com/twisted/twisted/pull/927

The solution to this bug favored by an OpenSSL maintainer is to drop
support for OpenSSL versions before 1.0.2.  I'm also in favor of this
because:

- 1.0.2 is the oldest supported version of OpenSSL
- The ECDH curve selection code would be much simpler if we only
supported OpenSSL 1.0.2
- cryptography wheels installed from PyPI include OpenSSL 1.1

Do you use the latest version of Twisted with OpenSSL 1.0.1?  If so, do
the above reasons satisfy your concerns?

Thanks!

-- 
  Mark Williams
  mrw at enotuniq.org


From glyph at twistedmatrix.com  Tue Nov 21 13:01:16 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 21 Nov 2017 12:01:16 -0800
Subject: [Twisted-Python] OpenSSL versions
In-Reply-To: <1511294214.2258153.1180174504.48167D8C@webmail.messagingengine.com>
References: <1511294214.2258153.1180174504.48167D8C@webmail.messagingengine.com>
Message-ID: <96BB6842-2855-4089-B247-077D2DA80835@twistedmatrix.com>



> On Nov 21, 2017, at 11:56 AM, Mark Williams <mrw at enotuniq.org> wrote:
> 
> Hello,
> 
> Users of Twisted and OpenSSL 1.1  and 1.0.2 cannot connect to all HTTPS
> sites because Twisted sets its own ECDH curve instead of using the
> defaults selected by these versions of OpenSSL.
> 
> The gory details are here:
> https://twistedmatrix.com/trac/ticket/9210
> https://github.com/twisted/twisted/pull/927
> 
> The solution to this bug favored by an OpenSSL maintainer is to drop
> support for OpenSSL versions before 1.0.2.  I'm also in favor of this
> because:
> 
> - 1.0.2 is the oldest supported version of OpenSSL
> - The ECDH curve selection code would be much simpler if we only
> supported OpenSSL 1.0.2
> - cryptography wheels installed from PyPI include OpenSSL 1.1
> 
> Do you use the latest version of Twisted with OpenSSL 1.0.1?  If so, do
> the above reasons satisfy your concerns?
> 
> Thanks!

I have one question:

When I `pip install cryptography` on linux, do I presently get a self-contained manylinux1 wheel right now with a built-in OpenSSL, or do I need to care what my "distro" (or Docker base image) is shipping?

-glyph


From romanmescheryakov at yandex.ru  Thu Nov 23 01:57:01 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Thu, 23 Nov 2017 11:57:01 +0300
Subject: [Twisted-Python] Reactor.run() to be a non blocking call and
	run in background
In-Reply-To: <15fdc93c668.27c2.edd11995bf46bbe14e1c477ff96295d9@gmail.com>
References: <15fdc93c668.27c2.edd11995bf46bbe14e1c477ff96295d9@gmail.com>
Message-ID: <1834721511427421@web43g.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171123/55db265e/attachment.html>

From rodrigc at crodrigues.org  Thu Nov 23 19:18:38 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 23 Nov 2017 18:18:38 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
Message-ID: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>

Hi,

Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?

This will fix more of the PyPy tests:
https://twistedmatrix.com/trac/ticket/9226

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171123/dde4b614/attachment.html>

From rodrigc at crodrigues.org  Thu Nov 23 20:24:00 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 23 Nov 2017 19:24:00 -0800
Subject: [Twisted-Python] Need help fixing txkube unit test with latest
	Twisted
Message-ID: <CAG=rPVcuZJjVE-t4HsnpSMNZ0dW92ame6mnH8hVuVUyf=C57nQ@mail.gmail.com>

Hi,

I have been submitting patches to txkube (Python-based Kubernetes client)
to work with the latest API changes for the reactor and TLS endpoints.

I am down to only 1 test failing.  I submitted this patch:

https://github.com/LeastAuthority/txkube/pull/152/files

based on changes that I saw in

https://github.com/twisted/twisted/commit/cd75dd82f41b834ec8d53827932cf566116e3c0d

but haven't gotten it to work.

What I am trying to do is to get txkube to the point where I can install it
with Python 2.7, and
then type:

trial txkube.test.test_authentication.AuthenticateWithServiceAccountTests.t
est_https_bearer_token_authorization

and get it to work.


test_https_bearer_token_authorization is pretty much the same as
test_http_bearer_token_authorization, just going over https.

When running the test_https_bearer_token_authorization test, I traced
things down into the ConnectionCompleter class:
https://github.com/twisted/twisted/blob/trunk/src/twisted/test/iosim.py#L515

It looks like the serverFactory is not properly creating a serverProtocol,
so no data is going through.

Can someone familiar with the TLS endpoint changes in Twisted 17.1.0 point
me in the right direction for this?


--

Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171123/765458cd/attachment.html>

From glyph at twistedmatrix.com  Fri Nov 24 16:36:58 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 24 Nov 2017 15:36:58 -0800
Subject: [Twisted-Python] Need help fixing txkube unit test with
	latest	Twisted
In-Reply-To: <CAG=rPVcuZJjVE-t4HsnpSMNZ0dW92ame6mnH8hVuVUyf=C57nQ@mail.gmail.com>
References: <CAG=rPVcuZJjVE-t4HsnpSMNZ0dW92ame6mnH8hVuVUyf=C57nQ@mail.gmail.com>
Message-ID: <DFF83FA9-7675-4759-A241-844C71DABFBE@twistedmatrix.com>

On Nov 23, 2017, at 7:24 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> It looks like the serverFactory is not properly creating a serverProtocol, so no data is going through.
> 

Can you explain "properly" in a little more detail?

Thanks,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171124/49ad403c/attachment.html>

From glyph at twistedmatrix.com  Sat Nov 25 19:18:10 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 25 Nov 2017 18:18:10 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
Message-ID: <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>



> On Nov 23, 2017, at 6:18 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> 
> Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?

I'd love to move PyPy support forward (I even went to the trouble of doing the password-reset dance necessary to get my SSH keys onto these buildbots), but it looks like we have installed from the PPA, which has fallen behind the official releases - https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages <https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages> - so upgrading isn't obvious.

Weirdly it looks like Debian is on top of things and does have a current version of the package - https://packages.debian.org/sid/pypy <https://packages.debian.org/sid/pypy> - but I have no clue how to configure these machines to pull just this one package from Debian.  If anyone knows how this works, I'd be happy to put more SSH keys on these servers.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171125/e5d5da5d/attachment.html>

From adi at roiban.ro  Sat Nov 25 21:34:28 2017
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Nov 2017 04:34:28 +0000
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
Message-ID: <CAFycZ9dz8M=sjbEa2VpH2_367mQntobrEKUDeRGOgYQyvW16yw@mail.gmail.com>

On 26 November 2017 at 02:18, Glyph <glyph at twistedmatrix.com> wrote:
>
>
> On Nov 23, 2017, at 6:18 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>
> Hi,
>
> Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?
>
>
> I'd love to move PyPy support forward (I even went to the trouble of doing
> the password-reset dance necessary to get my SSH keys onto these buildbots),
> but it looks like we have installed from the PPA, which has fallen behind
> the official releases -
> https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages - so upgrading
> isn't obvious.
>
> Weirdly it looks like Debian is on top of things and does have a current
> version of the package - https://packages.debian.org/sid/pypy - but I have
> no clue how to configure these machines to pull just this one package from
> Debian.  If anyone knows how this works, I'd be happy to put more SSH keys
> on these servers.

My 2 cents.

Maybe just run pypy on Travis-CI instead of the buildslaves

There is this PR https://github.com/twisted/twisted/pull/226

and ticket

https://twistedbumatrix.com/trac/ticket/8505


---------

In that ticket there is one way of solving this.

Instead of using using Ubuntu or Debian packages, just use OS
independent method to install latest PYPY.

Glyph, do we need Debian/Ubuntu packages for PYPY installed on the slaves?

-----------

For designing the buildbot builders maybe we can get something similar
to Travis-CI.
Before running the tests, buildbot will call something like `python
admin/buildbot-init` and depending on the environment variables, this
script can install various things.

In this way we have more configuration logic in the repo and
developers can advance the work without waiting for someone to upgrade
the OS

-- 
Adi Roiban


From adi at roiban.ro  Sat Nov 25 21:52:20 2017
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Nov 2017 04:52:20 +0000
Subject: [Twisted-Python] SMTPConnectError as a side effect on connection
	lost
Message-ID: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>

I hit a strange behavior in which the clone connection error from one
test is raised as the error for another test.

The tests are not written using trial, but I have thousands of other
tests and I have never seen this behaviour.

I tried to put a self-contained example at

https://gist.github.com/adiroiban/edc0776e3337d0bd3f093aa0f2819deb#file-test-py

you will need to run it in a virtulenv as it will pull quite a few of
dependencies.

I have traced the error to this code
https://github.com/twisted/twisted/blob/03dcdfb5933c4f83ce6aad3f4bdf080cda65584c/src/twisted/mail/smtp.py#L1943

            if err.check(error.ConnectionDone):
                err.value = smtp.SMTPConnectError(
                    -1, "Unable to connect to server.")
            self.result.errback(err.value)

It looks to me like the initial failure (err) is hijacked here and its
errors will never be cleared.

If I am doing something like

            if err.check(error.ConnectionDone):
                value = smtp.SMTPConnectError(
                    -1, "Unable to connect to server.")
            else:
                value = err.value
            err.cleanFailure()
            self.result.errback(value)

then the test will pass.
But I still don't understand how the error from one client request is
passed to another client request when they are using different
servers.

Do you see anything suspicious with this code?

Thanks!
-- 
Adi Roiban


From glyph at twistedmatrix.com  Sat Nov 25 22:19:27 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 25 Nov 2017 21:19:27 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <CAFycZ9dz8M=sjbEa2VpH2_367mQntobrEKUDeRGOgYQyvW16yw@mail.gmail.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
 <CAFycZ9dz8M=sjbEa2VpH2_367mQntobrEKUDeRGOgYQyvW16yw@mail.gmail.com>
Message-ID: <CFDF6A78-B2D6-4BD4-AC36-2D2038B28C9F@twistedmatrix.com>



> On Nov 25, 2017, at 8:34 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
>> On 26 November 2017 at 02:18, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>> 
>> On Nov 23, 2017, at 6:18 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>> 
>> Hi,
>> 
>> Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?
>> 
>> 
>> I'd love to move PyPy support forward (I even went to the trouble of doing
>> the password-reset dance necessary to get my SSH keys onto these buildbots),
>> but it looks like we have installed from the PPA, which has fallen behind
>> the official releases -
>> https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages - so upgrading
>> isn't obvious.
>> 
>> Weirdly it looks like Debian is on top of things and does have a current
>> version of the package - https://packages.debian.org/sid/pypy - but I have
>> no clue how to configure these machines to pull just this one package from
>> Debian.  If anyone knows how this works, I'd be happy to put more SSH keys
>> on these servers.
> 
> My 2 cents.
> 
> Maybe just run pypy on Travis-CI instead of the buildslaves
> 
> There is this PR https://github.com/twisted/twisted/pull/226
> 
> and ticket
> 
> https://twistedbumatrix.com/trac/ticket/8505
> 
> 
> ---------
> 
> In that ticket there is one way of solving this.
> 
> Instead of using using Ubuntu or Debian packages, just use OS
> independent method to install latest PYPY.
> 
> Glyph, do we need Debian/Ubuntu packages for PYPY installed on the slaves?

Not as far as I know.

Moving PyPy testing to travis CI would be fine with me; I was just trying to help in the constraints of the current setup.

> -----------
> 
> For designing the buildbot builders maybe we can get something similar
> to Travis-CI.
> Before running the tests, buildbot will call something like `python
> admin/buildbot-init` and depending on the environment variables, this
> script can install various things.
> 
> In this way we have more configuration logic in the repo and
> developers can advance the work without waiting for someone to upgrade
> the OS
> 
> -- 
> Adi Roiban
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Sat Nov 25 22:36:26 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 25 Nov 2017 21:36:26 -0800
Subject: [Twisted-Python] SMTPConnectError as a side effect on
	connection	lost
In-Reply-To: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>
References: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>
Message-ID: <CA1C0C66-31C3-4007-9462-86ED124CDD73@twistedmatrix.com>


> On Nov 25, 2017, at 8:52 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Do you see anything suspicious with this code?

Just that it looks like it leaves a Deferred in an error state. You said the tests weren’t “written using” trial, but are you running them with trial, or with any runner that will consider a logged failure to be a failure? If so, the failure won’t be logged until the garbage collector runs, which might be in a later test.

From trac at twistedmatrix.com  Sun Nov 26 00:05:24 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Nov 2017 07:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1511679924.43.22385600686142282@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171126/d8c779c0/attachment-0001.html>

From adi at roiban.ro  Sun Nov 26 06:10:57 2017
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Nov 2017 13:10:57 +0000
Subject: [Twisted-Python] SMTPConnectError as a side effect on
	connection lost
In-Reply-To: <CA1C0C66-31C3-4007-9462-86ED124CDD73@twistedmatrix.com>
References: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>
 <CA1C0C66-31C3-4007-9462-86ED124CDD73@twistedmatrix.com>
Message-ID: <CAFycZ9eDy4YtpkSdhfd62oXL_ZHe2AUqogf5oAm7s-+-OJx1tg@mail.gmail.com>

On 26 November 2017 at 05:36, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Nov 25, 2017, at 8:52 PM, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Do you see anything suspicious with this code?
>
> Just that it looks like it leaves a Deferred in an error state. You said the tests weren’t “written using” trial, but are you running them with trial, or with any runner that will consider a logged failure to be a failure? If so, the failure won’t be logged until the garbage collector runs, which might be in a later test.

Many thanks for looking into that.

I dag deeper and I found the error.

The root cause is
twisted.internet.posixbase._DisconnectSelectableMixin._disconnectSelectable

It starts as:

    def _disconnectSelectable(self, selectable, why, isRead, faildict={
        error.ConnectionDone: failure.Failure(error.ConnectionDone()),
        error.ConnectionLost: failure.Failure(error.ConnectionLost())
        }):
        """
        Utility function for disconnecting a selectable.

        Supports half-close notification, isRead should be boolean indicating
        whether error resulted from doRead().
        """
        self.removeReader(selectable)
        f = faildict.get(why.__class__)

Then `f` is returned but in STMP we have:

f.value = smtp.SMTPConnectError( -1, "Unable to connect to server.")

This replaces the value for `faildict` via f.
Any future call will return that replaced error.

I have created a ticket for this

https://twistedmatrix.com/trac/ticket/9339

I guess that we can continue the discussion on how to fix it as part
of that ticket.

----------

Here is my answer to Glyph's question regarding unhandled failed deferred.

The tests are not inheriting from the Trial test case.

I can run them with trial, including with --force-gc and no leftover
deferred is detected.
The SMTP test is [OK].

If I reverse the order, so that the STMP tests is executed last, trial
will execute all tests without any error.


Thanks!
-- 
Adi Roiban


From adi at roiban.ro  Sun Nov 26 11:23:58 2017
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Nov 2017 18:23:58 +0000
Subject: [Twisted-Python] Accepting/merging patches for unsupported
	platforms without CI
Message-ID: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>

Hi,

What is the procedure for accepting patches for platforms for which we
don't have a continuous testing system ?

This is a follow up of the review from
https://twistedmatrix.com/trac/ticket/9323

There is a patch for Cygwin but AFAIK there is no current builder for
running Twisted with Python on Cygwin.

My first reaction was that before accepting such patches we should set
up a continuous testing system.

With such a system in place we can run the tests to see that the
reported bug is present in trunk and that it is fixed in a branch.

If that can't be done, we need at least someone to manually run the
tests to check the patch.

Twisted is supported on so many systems and I don't think that is OK
to ask reviewers to have each supported system at hand, ready to fire
a manual test.

Any comments?

Thanks,
-- 
Adi Roiban


From glyph at twistedmatrix.com  Sun Nov 26 15:30:49 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 26 Nov 2017 14:30:49 -0800
Subject: [Twisted-Python] Accepting/merging patches for
	unsupported	platforms without CI
In-Reply-To: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
Message-ID: <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>


> On Nov 26, 2017, at 10:23 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> What is the procedure for accepting patches for platforms for which we
> don't have a continuous testing system ?
> 
> This is a follow up of the review from
> https://twistedmatrix.com/trac/ticket/9323
> 
> There is a patch for Cygwin but AFAIK there is no current builder for
> running Twisted with Python on Cygwin.
> 
> My first reaction was that before accepting such patches we should set
> up a continuous testing system.
> 
> With such a system in place we can run the tests to see that the
> reported bug is present in trunk and that it is fixed in a branch.
> 
> If that can't be done, we need at least someone to manually run the
> tests to check the patch.
> 
> Twisted is supported on so many systems and I don't think that is OK
> to ask reviewers to have each supported system at hand, ready to fire
> a manual test.
> 
> Any comments?
> 

To support a platform—i.e. to promise we will not break it in the future—we  have to have a builder capable of running Twisted on that platform.

To accept a patch though, the important thing is to have test coverage. If the change in question is a platform-specific feature that there’s no way to test in a different environment, we would indeed need to block on the availability of a builder.

Quite often—as I believe is the case for the patch you’re referring to here—patches are adjusting behaviors which would be difficult to cleanly integration-test on the platform in question anyway, and the appropriate thing to do is to make some mock match the observed behavior of the platform in question.  In this case it would be nice if the reviewer could verify this, but if the patch submitter’s description of observed behavior is clear, and their test mock implements it correctly, I would say that we can give them the benefit of the doubt and accept such patches even if the reviewer doesn’t have such a platform available.  Assuming all the changed lines are covered adequately for our supported platforms’ behavior as well, of course, and we aren’t risking breaking them.

How do you feel about this answer?

-g

From glyph at twistedmatrix.com  Sun Nov 26 17:00:45 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 26 Nov 2017 16:00:45 -0800
Subject: [Twisted-Python] SMTPConnectError as a side effect
 on	connection lost
In-Reply-To: <CAFycZ9eDy4YtpkSdhfd62oXL_ZHe2AUqogf5oAm7s-+-OJx1tg@mail.gmail.com>
References: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>
 <CA1C0C66-31C3-4007-9462-86ED124CDD73@twistedmatrix.com>
 <CAFycZ9eDy4YtpkSdhfd62oXL_ZHe2AUqogf5oAm7s-+-OJx1tg@mail.gmail.com>
Message-ID: <2D9C31FC-C4ED-4D4C-9E74-CC737A1B5B7C@twistedmatrix.com>



> On Nov 26, 2017, at 5:10 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 26 November 2017 at 05:36, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>>> On Nov 25, 2017, at 8:52 PM, Adi Roiban <adi at roiban.ro> wrote:
>>> 
>>> Do you see anything suspicious with this code?
>> 
>> Just that it looks like it leaves a Deferred in an error state. You said the tests weren’t “written using” trial, but are you running them with trial, or with any runner that will consider a logged failure to be a failure? If so, the failure won’t be logged until the garbage collector runs, which might be in a later test.
> 
> Many thanks for looking into that.
> 
> I dag deeper and I found the error.

Oops, looks like I was totally off base :-).

> The root cause is
> twisted.internet.posixbase._DisconnectSelectableMixin._disconnectSelectable
> 
> It starts as:
> 
>    def _disconnectSelectable(self, selectable, why, isRead, faildict={
>        error.ConnectionDone: failure.Failure(error.ConnectionDone()),
>        error.ConnectionLost: failure.Failure(error.ConnectionLost())
>        }):
>        """
>        Utility function for disconnecting a selectable.
> 
>        Supports half-close notification, isRead should be boolean indicating
>        whether error resulted from doRead().
>        """
>        self.removeReader(selectable)
>        f = faildict.get(why.__class__)
> 
> Then `f` is returned but in STMP we have:
> 
> f.value = smtp.SMTPConnectError( -1, "Unable to connect to server.")
> 
> This replaces the value for `faildict` via f.
> Any future call will return that replaced error.

Yeah, this is definitely wrong.  I don't think it occurred to anyone that someone might set the `value` attribute of an existing Failure.  More on the ticket.

> I have created a ticket for this
> 
> https://twistedmatrix.com/trac/ticket/9339
> 
> I guess that we can continue the discussion on how to fix it as part
> of that ticket.
> 
> ----------
> 
> Here is my answer to Glyph's question regarding unhandled failed deferred.
> 
> The tests are not inheriting from the Trial test case.
> 
> I can run them with trial, including with --force-gc and no leftover
> deferred is detected.
> The SMTP test is [OK].
> 
> If I reverse the order, so that the STMP tests is executed last, trial
> will execute all tests without any error.

Yeah, your diagnosis is correct, mine was wrong.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171126/be3753ed/attachment.html>

From exarkun at twistedmatrix.com  Sun Nov 26 17:48:29 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 26 Nov 2017 19:48:29 -0500
Subject: [Twisted-Python] Accepting/merging patches for unsupported
 platforms without CI
In-Reply-To: <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
 <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
Message-ID: <CAEeXt4O+7VTfv-hXVf1LGgPmj5=vnQK1K6RcyfRcvFkbdCTMyQ@mail.gmail.com>

On Sun, Nov 26, 2017 at 5:30 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
>
> Quite often—as I believe is the case for the patch you’re referring to
> here—patches are adjusting behaviors which would be difficult to cleanly
> integration-test on the platform in question anyway, and the appropriate
> thing to do is to make some mock match the observed behavior of the
> platform in question.


Just because there's enough misunderstanding about how to do this kind of
thing and the words that describe it, I wanted to point out that this isn't
really a "mock" - and it's certainly not something you would do with a
library with "mock" in its name.

For those who don't know (not Glyph), a mock is an object that somehow
records an exact sequence of operations (like "my foo method was called
with bar" or "my baz attribute was accessed").  These tend to result in
very fragile tests because they operate at such a specific level.  Quite
often entirely legitimate implementation changes invalidate the
expectations of some mock and force corresponding test suite maintenance.

A better approach is to make sure the platform-specific interface being
tested has been reduced to its smallest possible scope and then create a
verified fake which implements that interface.  The verification is
performed by a test suite which can run against both implementations (the
fake and the real - with the real version only being tested in the
necessary environment).  All other related tests can use the verified fake
instead of the real implementation and will run on all platforms.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171126/e850ad27/attachment.html>

From adi at roiban.ro  Mon Nov 27 07:45:05 2017
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 27 Nov 2017 14:45:05 +0000
Subject: [Twisted-Python] Accepting/merging patches for unsupported
 platforms without CI
In-Reply-To: <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
 <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
Message-ID: <CAFycZ9dspb18zLHuYCmB9B_5VVL1SRsebSd2snqWxF3+nub=Yg@mail.gmail.com>

On 26 November 2017 at 22:30, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Nov 26, 2017, at 10:23 AM, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> What is the procedure for accepting patches for platforms for which we
>> don't have a continuous testing system ?
>>
>> This is a follow up of the review from
>> https://twistedmatrix.com/trac/ticket/9323
[snip]
>>
>
> To support a platform—i.e. to promise we will not break it in the future—we  have to have a builder capable of running Twisted on that platform.
>
> To accept a patch though, the important thing is to have test coverage. If the change in question is a platform-specific feature that there’s no way to test in a different environment, we would indeed need to block on the availability of a builder.
>
> Quite often—as I believe is the case for the patch you’re referring to here—patches are adjusting behaviors which would be difficult to cleanly integration-test on the platform in question anyway, and the appropriate thing to do is to make some mock match the observed behavior of the platform in question.  In this case it would be nice if the reviewer could verify this, but if the patch submitter’s description of observed behavior is clear, and their test mock implements it correctly, I would say that we can give them the benefit of the doubt and accept such patches even if the reviewer doesn’t have such a platform available.  Assuming all the changed lines are covered adequately for our supported platforms’ behavior as well, of course, and we aren’t risking breaking them.
>
> How do you feel about this answer?

Thanks for your comment and I think that I know what a reviewer should
do for  https://twistedmatrix.com/trac/ticket/9323
>From the ticket description, we already have a test which fails on
Cygwin and the PR does not add any new tests.
So the options are:

A. Get a builder for cygwin and use the existing tests.
B. Write new unit/integration tests with a fake Cygwin system.

-----

I understand the high-level process, but I have questions regarding the details.

How can a reviewer (which does not have experience and access to an
unsupported platform) verify whether the fake/surrogate implementation
is correct?
That is without putting significant effort and reading the details
about the unsupported platform, and in this process becoming an expert
in that platform?

-- 
Adi Roiban


From glyph at twistedmatrix.com  Mon Nov 27 21:07:19 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 27 Nov 2017 20:07:19 -0800
Subject: [Twisted-Python] Accepting/merging patches for unsupported
 platforms without CI
In-Reply-To: <CAFycZ9dspb18zLHuYCmB9B_5VVL1SRsebSd2snqWxF3+nub=Yg@mail.gmail.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
 <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
 <CAFycZ9dspb18zLHuYCmB9B_5VVL1SRsebSd2snqWxF3+nub=Yg@mail.gmail.com>
Message-ID: <8D36AC6B-9B59-473A-8595-594577CBAAA6@twistedmatrix.com>



> On Nov 27, 2017, at 6:45 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 26 November 2017 at 22:30, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>>> On Nov 26, 2017, at 10:23 AM, Adi Roiban <adi at roiban.ro> wrote:
>>> 
>>> Hi,
>>> 
>>> What is the procedure for accepting patches for platforms for which we
>>> don't have a continuous testing system ?
>>> 
>>> This is a follow up of the review from
>>> https://twistedmatrix.com/trac/ticket/9323
> [snip]
>>> 
>> 
>> To support a platform—i.e. to promise we will not break it in the future—we  have to have a builder capable of running Twisted on that platform.
>> 
>> To accept a patch though, the important thing is to have test coverage. If the change in question is a platform-specific feature that there’s no way to test in a different environment, we would indeed need to block on the availability of a builder.
>> 
>> Quite often—as I believe is the case for the patch you’re referring to here—patches are adjusting behaviors which would be difficult to cleanly integration-test on the platform in question anyway, and the appropriate thing to do is to make some mock match the observed behavior of the platform in question.  In this case it would be nice if the reviewer could verify this, but if the patch submitter’s description of observed behavior is clear, and their test mock implements it correctly, I would say that we can give them the benefit of the doubt and accept such patches even if the reviewer doesn’t have such a platform available.  Assuming all the changed lines are covered adequately for our supported platforms’ behavior as well, of course, and we aren’t risking breaking them.
>> 
>> How do you feel about this answer?
> 
> Thanks for your comment and I think that I know what a reviewer should
> do for  https://twistedmatrix.com/trac/ticket/9323
> From the ticket description, we already have a test which fails on
> Cygwin and the PR does not add any new tests.
> So the options are:
> 
> A. Get a builder for cygwin and use the existing tests.
> B. Write new unit/integration tests with a fake Cygwin system.
> 
> -----
> 
> I understand the high-level process, but I have questions regarding the details.
> 
> How can a reviewer (which does not have experience and access to an
> unsupported platform) verify whether the fake/surrogate implementation
> is correct?

At some level, I think it is OK to take the submitter's word for it.  The important thing about the code review is not like, courtroom-style adversarial disbelief, but rather, the idea that it is super easy to make mistakes while writing programs.  If the submitter clearly describes the same behavior in tests, in their implementation, in their ticket description and in their NEWS fragment, and the reviewer can verify that they're all consistent, then I don't think they need to be able to personally reproduce the behavior if it's on an obscure platform.

Ideally, as Jean-Paul suggests, the submitter would provide a verified fake <https://thoughtstreams.io/glyph/test-patterns/5952/> implementation.  In practice they may just provide a well-documented fake, since verifying the real implementation may be impossible programmatically, or impractically difficult.  (However, a genuine mock, or a dummy, is definitely insufficient for testing.)

> That is without putting significant effort and reading the details
> about the unsupported platform, and in this process becoming an expert
> in that platform?

In this case, the subtle difference in pipe-handling behavior, which is shared at least in part with other platforms, should not require becoming a total expert in Cygwin's runtime.  If it does, we may in fact need to wait for a reviewer to come along who already has this expertise.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171127/38fee221/attachment.html>

From glyph at twistedmatrix.com  Mon Nov 27 21:22:39 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 27 Nov 2017 20:22:39 -0800
Subject: [Twisted-Python] Accepting/merging patches for unsupported
 platforms without CI
In-Reply-To: <CAEeXt4O+7VTfv-hXVf1LGgPmj5=vnQK1K6RcyfRcvFkbdCTMyQ@mail.gmail.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
 <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
 <CAEeXt4O+7VTfv-hXVf1LGgPmj5=vnQK1K6RcyfRcvFkbdCTMyQ@mail.gmail.com>
Message-ID: <63567A30-8F36-41E3-B7A5-CD2D109ACFF1@twistedmatrix.com>



> On Nov 26, 2017, at 4:48 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sun, Nov 26, 2017 at 5:30 PM, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> 
> Quite often—as I believe is the case for the patch you’re referring to here—patches are adjusting behaviors which would be difficult to cleanly integration-test on the platform in question anyway, and the appropriate thing to do is to make some mock match the observed behavior of the platform in question.
> 
> Just because there's enough misunderstanding about how to do this kind of thing and the words that describe it, I wanted to point out that this isn't really a "mock" - and it's certainly not something you would do with a library with "mock" in its name.

Martin Fowler has the authoritative glossary on this - https://www.martinfowler.com/bliki/TestDouble.html <https://www.martinfowler.com/bliki/TestDouble.html>.  I have my own entry in this genre which echoes and expands upon some of his definitions: https://thoughtstreams.io/glyph/test-patterns/ <https://thoughtstreams.io/glyph/test-patterns/>.

However, I eventually acquiesced to the colloquial meaning of "mock" to mean "test double"; in most contexts where people are talking about "mocks" they're really talking about fakes, and the real actual mock-module-style mocks are increasingly universally understood to be technical debt.

> For those who don't know (not Glyph), a mock is an object that somehow records an exact sequence of operations (like "my foo method was called with bar" or "my baz attribute was accessed").  These tend to result in very fragile tests because they operate at such a specific level.  Quite often entirely legitimate implementation changes invalidate the expectations of some mock and force corresponding test suite maintenance.

(As far as I know, we don't use the 'mock' module anywhere in Twisted, and we shouldn't start :).)

> A better approach is to make sure the platform-specific interface being tested has been reduced to its smallest possible scope and then create a verified fake which implements that interface.  The verification is performed by a test suite which can run against both implementations (the fake and the real - with the real version only being tested in the necessary environment).  All other related tests can use the verified fake instead of the real implementation and will run on all platforms.

The most important thing here is to reduce the number of duplicate fakes.

Completely verified fakes are unfortunately almost impossible to build.  If the faked API has good enough testing support that you can programmatically provoke all of its failure modes, then the only reason to build a fake is performance, which is rarely our most pressing problem :-).  So quite often even the best verified fakes will only be partially verified.  Even partial verification of things like kernel APIs can be a major challenge.  So it's often necessary to accept a fake which is not directly verified against the real API.

However, ad-hoc one-off fakes are at extremely high risk of drift.  If you are trying to verify the system under test's response to behavior X in a test, and you build a fake that implements X, Y, and Z for the sake of the test's set-up, naturally that new fake's Y and Z will be flaky and half-implemented (at best: its X may be quite half-baked as well).  Moreover, if the real X, Y or Z changes in the future, it's highly unlikely anyone will come along and update the mock for just that one test.

If that fake were shared among a large number of tests, though, or even better, distributed along with the real X, Y, and Z, there is at least a fighting chance that someone might update the fake in the future and notice that the system under test has an issue.

I believe the most important principle here is that test code is just code like any other code, and following generally good code-organization principles like well-defined interfaces, planning for maintenance over time, "don't repeat yourself", clear locus of responsibility, etc etc, will prevent test suites and their attendant doubles from decaying into a sprawling and unmaintainable mess.  We have generally been making good progress on this over time, but it's important for everybody involved with Twisted to continue trying to reduce duplication in fakes, and improve the verification of the fakes we have, as we maintain our test suite.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171127/7208daed/attachment.html>

From mrw at enotuniq.org  Wed Nov 29 16:29:25 2017
From: mrw at enotuniq.org (Mark Williams)
Date: Wed, 29 Nov 2017 15:29:25 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
Message-ID: <1511998165.3870338.1188772008.0F09DABD@webmail.messagingengine.com>

On Sat, Nov 25, 2017, at 06:18 PM, Glyph wrote:
> 
> 
>> On Nov 23, 2017, at 6:18 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>> 
>> Hi,
>> 
>> Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?
> 
> I'd love to move PyPy support forward (I even went to the trouble of doing the password-reset dance necessary to get my SSH keys onto these buildbots), but it looks like we have installed from the PPA, which has fallen behind the official releases - https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages - so upgrading isn't obvious.
> 
> Weirdly it looks like Debian is on top of things and *does* have a current version of the package - https://packages.debian.org/sid/pypy - but I have no clue how to configure these machines to pull just this one package from Debian.  If anyone knows how this works, I'd be happy to put more SSH keys on these servers.
>

Glyph gave me access to the 3 PyPy builders:

https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5
 
I just replaced the system PyPy from the PPA with Squeaky's portable
PyPy 5.9.0:

https://github.com/squeaky-pl/portable-pypy

The PyPy installations are in /opt/pypy_portable/pypy, and their
binaries are symlinked into /usr/local/bin.  This is documented in
~root/PYPY_README.

The builders should now be using PyPy 5.9.0:

https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/172/steps/select/logs/stdio

I have also pinged the maintainer of the Ubuntu PPA about adding PyPy
5.9.0.  Once that happens I'll switch the builders back to the PPA.

--
  Mark Williams
  mrw at enotuniq.org


From rodrigc at crodrigues.org  Wed Nov 29 18:20:32 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Wed, 29 Nov 2017 17:20:32 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <1511998165.3870338.1188772008.0F09DABD@webmail.messagingengine.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
 <1511998165.3870338.1188772008.0F09DABD@webmail.messagingengine.com>
Message-ID: <CAG=rPVc65w2YSaxMZEVmU0oczzBZHg5TgkUrg3XsmBG2vX7_nA@mail.gmail.com>

On Wed, Nov 29, 2017 at 3:29 PM, Mark Williams <mrw at enotuniq.org> wrote:

> I just replaced the system PyPy from the PPA with Squeaky's portable
> PyPy 5.9.0:
>
>
Thanks for installing this.

These are the test results before and after your change.

Before your change running PyPy 5.8.0:

FAILED (skips=2200, failures=5, errors=12, successes=9947)


After your change, running PyPy 5.9.0:

https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/172/steps/select/logs/stdio

FAILED (skips=2200, failures=1, errors=12, successes=9951)


So with the PyPy upgrade, there is a small improvement in the number of
Twisted tests which now pass with PyPy.

Did you install PyPy3 5.9.0 anywhere on the buildbots?
It would be good to have that running as well.

Thanks.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171129/8ba0c12f/attachment.html>

From mrw at enotuniq.org  Wed Nov 29 18:26:34 2017
From: mrw at enotuniq.org (Mark Williams)
Date: Wed, 29 Nov 2017 17:26:34 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <CAG=rPVc65w2YSaxMZEVmU0oczzBZHg5TgkUrg3XsmBG2vX7_nA@mail.gmail.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
 <1511998165.3870338.1188772008.0F09DABD@webmail.messagingengine.com>
 <CAG=rPVc65w2YSaxMZEVmU0oczzBZHg5TgkUrg3XsmBG2vX7_nA@mail.gmail.com>
Message-ID: <1512005194.430698.1188868792.7B3D07B1@webmail.messagingengine.com>

On Wed, Nov 29, 2017, at 05:20 PM, Craig Rodrigues wrote:
> 
> Did you install PyPy3 5.9.0 anywhere on the buildbots?
> It would be good to have that running as well.

Not yet, but I agree!  This will require a change to the Buildbot
config:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/master.cfg

I'll try to do this before the end of the week.

--
  Mark Williams
  mrw at enotuniq.org


From trac at twistedmatrix.com  Sun Nov  5 00:05:20 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Nov 2017 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1509861920.77.107149523999652843@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171105/35b6cf50/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Nov  5 21:48:59 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 5 Nov 2017 20:48:59 -0800
Subject: [Twisted-Python] conch server can't git clone
Message-ID: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>

I run Conch instead of OpenSSH on my personal server.

I tried to `git clone` a repository on said server, and I saw these logs on the server:

2017-11-06T04:45:49+0000 [twisted.conch.openssh_compat.factory.OpenSSHFactory] disabling non-fixed-group key exchange algorithms because we cannot find moduli file
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] kex alg, key alg: 'ecdh-sha2-nistp256' 'ecdsa-sha2-nistp256'
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] outgoing: 'aes128-ctr' 'hmac-sha2-256' 'none'
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] incoming: 'aes128-ctr' 'hmac-sha2-256' 'none'
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] NEW KEYS
2017-11-06T04:45:49+0000 [SSHServerTransport,817,1.2.3.4] starting service 'ssh-userauth'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] 'user' trying auth 'none'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] 'user' trying auth 'publickey'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] 'user' trying auth 'publickey'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] 'user' authenticated with 'publickey'
2017-11-06T04:45:49+0000 [SSHService 'ssh-userauth' on SSHServerTransport,817,1.2.3.4] starting service 'ssh-connection'
2017-11-06T04:45:49+0000 [SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] got channel 'session' request
2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] channel open
2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] unhandled request for env
2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] executing command "git-upload-pack '/site'"
2017-11-06T04:45:51+0000 [-] sending eof
2017-11-06T04:45:51+0000 [-] exitCode: 0
2017-11-06T04:45:51+0000 [-] sending request 'exit-status'
2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] sending close 0
2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] remote close
2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] shell closed
2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] Got remote error, code 11
	reason: disconnected by user
2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] avatar user logging out (0)
2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] connection lost

And on the client (which is OpenSSH):

$ git clone server:/site WebSite
Cloning into 'WebSite'...
remote: Counting objects: 712, done.
remote: Compressing objects: 100% (528/528), done.
fatal: The remote end hung up unexpectedlyiB | 13.04 MiB/s
fatal: early EOF
fatal: index-pack failed

Anyone have any idea how I could debug this?  My immediate hypothesis is that Conch is treating an EOF / half-close somewhere as a full-close of a session, but I am not sure where to go looking.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171105/ae12ddd2/attachment-0002.html>

From mrw at enotuniq.org  Sun Nov  5 23:37:29 2017
From: mrw at enotuniq.org (Mark Williams)
Date: Sun, 05 Nov 2017 22:37:29 -0800
Subject: [Twisted-Python] conch server can't git clone
In-Reply-To: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>
References: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>
Message-ID: <1509950249.534493.1162732928.57358C84@webmail.messagingengine.com>

On Sun, Nov 5, 2017, at 08:48 PM, Glyph wrote:
> I tried to `git clone` a repository on said server, and I saw these logs on the server:
>
>> 2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] channel open
>> 2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] unhandled request for env
>> 2017-11-06T04:45:49+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] executing command "git-upload-pack '/site'"
>> 2017-11-06T04:45:51+0000 [-] sending eof
>> 2017-11-06T04:45:51+0000 [-] exitCode: 0
>> 2017-11-06T04:45:51+0000 [-] sending request 'exit-status'
>> 2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] sending close 0
>> 2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] remote close
>> 2017-11-06T04:45:51+0000 [SSHChannel session (0) on SSHService 'ssh-connection' on SSHServerTransport,817,1.2.3.4] shell closed
>> 2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] Got remote error, code 11
>> reason: disconnected by user
>> 2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] avatar user logging out (0)
>> 2017-11-06T04:45:51+0000 [SSHServerTransport,817,1.2.3.4] connection lost

This looks normal.  I see the same output from a Conch server against
which all git clone calls succeed.

Unfortunately, normal is confusing, so I'll explain my reading of your
log.  The most important part of this is that the 'sending eof' just
means the 'git-upload-pack' process closed stdout and err.  In other
words, I think 'git-upload-pack' is the problem.

The server creates an SSHChanel ("channel open"), then complains that it
cannot answer the client's request for environment variables
(https://tools.ietf.org/html/rfc4254.html#section-6.4) because Conch
doesn't implement that channel request type.  
Conch should probably support it:
https://twistedmatrix.com/trac/ticket/9315

The 'git-upload-pack' command appears to execute successfully: its exit
status is 0 and  SSHSessionProcessProtocol send that back to the client,
per
https://github.com/twisted/twisted/blob/twisted-17.9.0/src/twisted/conch/ssh/session.py#L276-L279

The "sending eof" message you identified as a smoking gun occurs because
'git-upload-pack' closed both stdout and stderr:
https://github.com/twisted/twisted/blob/twisted-17.9.0/src/twisted/conch/ssh/session.py#L220-L221

The server's claim that a 'remote error' occurred is misleading; Conch
calls the SSH transport's receiveError method for all DISCONNECT
messages:

https://github.com/twisted/twisted/blob/twisted-17.9.0/src/twisted/conch/ssh/transport.py#L909-L924

including 11, SSH_DISCONNECT_BY_APPLICATION, which means that the
application willingly terminated the connection:

https://tools.ietf.org/html/rfc4253.html#section-11.1 

OpenSSH's own logging does not consider SSH_DISCONNECT_BY_APPLICATION to
be an error:

https://github.com/openssh/openssh-portable/blob/V_7_6_P1/packet.c#L1703-L1708

Maybe Conch should also filter this:
https://twistedmatrix.com/trac/ticket/9316

> Anyone have any idea how I could debug this?  

You can export the GIT_TRACE_PACKET environment variable on the client
side, which makes git emit packet-level logs:

https://git-scm.com/book/gr/v2/Git-Internals-Environment-Variables

Maybe that will help us figure out why git-pack-upload is terminating
early.

--
  Mark Williams
  mrw at enotuniq.org



From glyph at twistedmatrix.com  Mon Nov  6 00:43:38 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 5 Nov 2017 23:43:38 -0800
Subject: [Twisted-Python] conch server can't git clone
In-Reply-To: <1509950249.534493.1162732928.57358C84@webmail.messagingengine.com>
References: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>
 <1509950249.534493.1162732928.57358C84@webmail.messagingengine.com>
Message-ID: <227699F5-368F-4A94-9477-E09E77FFE57E@twistedmatrix.com>



> On Nov 5, 2017, at 10:37 PM, Mark Williams <mrw at enotuniq.org> wrote:
> 
> You can export the GIT_TRACE_PACKET environment variable on the client
> side, which makes git emit packet-level logs:
> 
> https://git-scm.com/book/gr/v2/Git-Internals-Environment-Variables <https://git-scm.com/book/gr/v2/Git-Internals-Environment-Variables>
> 
> Maybe that will help us figure out why git-pack-upload is terminating
> early.

Hilariously, setting this variable makes the clone in question succeed (???).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171105/ce34774c/attachment-0002.html>

From hawkowl at atleastfornow.net  Mon Nov  6 00:46:46 2017
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Mon, 6 Nov 2017 18:46:46 +1100
Subject: [Twisted-Python] conch server can't git clone
In-Reply-To: <227699F5-368F-4A94-9477-E09E77FFE57E@twistedmatrix.com>
References: <3DBAB72E-BF66-4114-B4A0-D85766D35FD5@twistedmatrix.com>
 <1509950249.534493.1162732928.57358C84@webmail.messagingengine.com>
 <227699F5-368F-4A94-9477-E09E77FFE57E@twistedmatrix.com>
Message-ID: <05E223E0-D671-4022-B603-E9A0BE889A2E@atleastfornow.net>


> On 6 Nov 2017, at 6:43 pm, Glyph <glyph at twistedmatrix.com> wrote:
> 
> On Nov 5, 2017, at 10:37 PM, Mark Williams <mrw at enotuniq.org> wrote:
>> 
>> You can export the GIT_TRACE_PACKET environment variable on the client
>> side, which makes git emit packet-level logs:
>> 
>> https://git-scm.com/book/gr/v2/Git-Internals-Environment-Variables
>> 
>> Maybe that will help us figure out why git-pack-upload is terminating
>> early.
> 
> Hilariously, setting this variable makes the clone in question succeed (???).
> 
> -glyph

 .-.
(o o) ~ it is a mystery ~
| O \
 \   \
  `~~~'
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: </pipermail/twisted-python/attachments/20171106/2b6ab7ae/attachment-0002.sig>

From trac at twistedmatrix.com  Sun Nov 12 00:05:21 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Nov 2017 07:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1510470321.03.3483280839581844944@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171112/7fa26c4a/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Nov 12 00:32:48 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 11 Nov 2017 23:32:48 -0800
Subject: [Twisted-Python] body producer bug in agent?
Message-ID: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>

I attempted to draw some attention to this with github mentions:

https://github.com/twisted/treq/issues/185#issuecomment-331856235 <https://github.com/twisted/treq/issues/185#issuecomment-331856235>

but it looks like that didn't work.

Hopefully by posting it here I can motivate someone to look at it?  I think it sounds like a pretty bad bug, but I don't have a ton of time to look at it myself :-(.  I believe it's in Twisted itself, not Treq, but I could be wrong.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171111/042d737d/attachment-0002.html>

From mithrandi at mithrandi.net  Sun Nov 12 00:48:21 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 12 Nov 2017 07:48:21 +0000
Subject: [Twisted-Python] body producer bug in agent?
In-Reply-To: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
References: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
Message-ID: <CAMcKhMTvbTazaeo909qd2yf961eNiyd_JM7a_TUcSygDN7_qxA@mail.gmail.com>

On Sun, 12 Nov 2017 at 09:33 Glyph <glyph at twistedmatrix.com> wrote:

> I attempted to draw some attention to this with github mentions:
>
> https://github.com/twisted/treq/issues/185#issuecomment-331856235
>
>
> but it looks like that didn't work.
>
> Hopefully by posting it here I can motivate someone to look at it?  I
> think it sounds like a pretty bad bug, but I don't have a ton of time to
> look at it myself :-(.  I believe it's in Twisted itself, not Treq, but I
> could be wrong.
>

A cursory glance suggests that 1) the bug is in Twisted, and 2) the impact
of the bug is limited to an annoying log message. Unfortunately I'm
unlikely to be able to chase this further any time soon, but hopefully
somebody else can.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171112/af392ae1/attachment-0002.html>

From ex.vitorino at gmail.com  Sun Nov 12 06:05:18 2017
From: ex.vitorino at gmail.com (ex vito)
Date: Sun, 12 Nov 2017 13:05:18 +0000
Subject: [Twisted-Python] body producer bug in agent?
In-Reply-To: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
References: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
Message-ID: <8C681DE8-D2BF-4597-B3CB-6483D260F47E@gmail.com>

On 2017-11-12, at 7:32, Glyph <glyph at twistedmatrix.com> wrote:

> I attempted to draw some attention to this with github mentions:
> 
> https://github.com/twisted/treq/issues/185#issuecomment-331856235
> 
> but it looks like that didn't work.
> 
> Hopefully by posting it here I can motivate someone to look at it?  I think it sounds like a pretty bad bug, but I don't have a ton of time to look at it myself :-(.  I believe it's in Twisted itself, not Treq, but I could be wrong.

Took this for a quick spin and I suspect the failure is due to TLS certificate validation failure.

Once I did the export SSL_CERT_FILE="$(python -m certify)" workaround in https://stackoverflow.com/questions/33602478/how-to-handle-openssl-ssl-error-while-using-twisted-web-client-agent-on-facebook by none other that yourself, the sample code no longer fails.

My 2c.
--
exvito

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171112/b104fd39/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Nov 18 23:59:52 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 18 Nov 2017 22:59:52 -0800
Subject: [Twisted-Python] revert
Message-ID: <AC0638B5-22D4-480C-8A27-2AE58502E85F@twistedmatrix.com>

https://twistedmatrix.com/trac/ticket/9280#comment:7 <https://twistedmatrix.com/trac/ticket/9280#comment:7> introduced a pretty serious regression (tracebacks are no longer printed by twisted.web) - can someone please do the appropriate dance to revert this and reopen the ticket?  It looks like the directions need updating for git :-).

https://twistedmatrix.com/trac/wiki/ReviewProcess#Revertingachange <https://twistedmatrix.com/trac/wiki/ReviewProcess#Revertingachange>

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171118/30e2d158/attachment-0002.html>

From trac at twistedmatrix.com  Sun Nov 19 00:05:22 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Nov 2017 07:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1511075122.63.729058575901871831@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171119/6aeb98df/attachment-0002.html>

From ex.vitorino at gmail.com  Sun Nov 19 07:15:13 2017
From: ex.vitorino at gmail.com (ex vito)
Date: Sun, 19 Nov 2017 14:15:13 +0000
Subject: [Twisted-Python] body producer bug in agent?
In-Reply-To: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
References: <CE07587C-9865-42E7-8FA7-30706EC95216@twistedmatrix.com>
Message-ID: <77CA4D84-6246-4E90-985C-1488A2BDA924@gmail.com>

On 2017-11-12, at 7:32, Glyph <glyph at twistedmatrix.com> wrote:

> I attempted to draw some attention to this with github mentions:
> 
> https://github.com/twisted/treq/issues/185#issuecomment-331856235
> 
> but it looks like that didn't work.
> 
> Hopefully by posting it here I can motivate someone to look at it?  I think it sounds like a pretty bad bug, but I don't have a ton of time to look at it myself :-(.  I believe it's in Twisted itself, not Treq, but I could be wrong.


I explored this issue further and observed the following:

- This looks like a Twisted issue, indeed.
- stopProducing is called twice on FileBodyProducer when TLS certificate validation fails.
- FileBodyProducer uses a CooperativeTask which is stopped on FileBodyProducer stopProducing.
- CooperativeTask raises an exception when its stop is called a second time.


Sample Twisted-only code reproducing the issue, based on a gist by jlitzingerdev, available here  https://gist.github.com/exvito/b8298f25196d41daf67414f702518f6b. It generates a self-signed cert for an HTTPS server and then performs an HTTPS POST with an Agent that won't validate that generated cert, triggering the failure.


Per my comment on the treq's issue, it looks like fixing this comes down to design decisions:

1. Should the TLS wrapping layer trigger two stopProducing calls?
   Ideally no, but I have no idea about the wrapping itself, so it may not be an easy task.

2. Should calling stopProducing twice on FileBodyProducer fail?
   Maybe not, is there any solid benefit in it failing? Maybe there are use cases for that, though.

3. Should calling stop twice on CooperativeTask fail?
   Not sure. Again its reasonable to argue either way.

Given that all of these are public APIs and there may exist code out there using it and expecting the current behavior, deciding on what to change and how does not seem obvious to me.


I consulted the producer/consumer docs and found nothing stating that stopProducing (or any other methods like pauseProducing/resumeProducing) should/should-not be idempotent; this is what I read:
- https://twistedmatrix.com/documents/current/core/howto/producers.html
- https://twistedmatrix.com/documents/17.9.0/api/twisted.internet.interfaces.IProducer.html
- https://twistedmatrix.com/documents/17.9.0/api/twisted.internet.interfaces.IPushProducer.html
- https://twistedmatrix.com/documents/17.9.0/api/twisted.internet.interfaces.IConsumer.html


For completeness, here are related open issues (with the help of jlitzingerdev @github):
- https://twistedmatrix.com/trac/ticket/8473
- https://twistedmatrix.com/trac/ticket/7457
- https://twistedmatrix.com/trac/ticket/6528

All of these include comments/suggestions on addressing this failure by some variation of ignoring the twisted.internet.task.TaskStopped exception in FileBodyProducer.stopProducing.

Given that I'm not 100% familiar with the code, I'm not sure such an approach would be correct and in line with the current design (in particular around producers/consumers and TLS wrapping).


I'm reaching out to the mailing list looking for other perspectives on this.

I feel that the complete approach to this would be fixing 1. and 2. above: wrapping should not lead to duplicate/n-plicate calls to producer methods and, also, design-wise, it seems reasonable to have producer methods be idempotent (and recommend that in the docs?).

But maybe I'm digressing: a quick fix would be to just ignore the TaskDone exception in FileBodyProducer.stopProducing like I mentioned above. Whether that is "correct" or not is what I'm trying to understand.

Thanks for your input,
--
exvito



From jlitzingerdev at gmail.com  Sun Nov 19 23:56:27 2017
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Sun, 19 Nov 2017 23:56:27 -0700
Subject: [Twisted-Python] revert
In-Reply-To: <AC0638B5-22D4-480C-8A27-2AE58502E85F@twistedmatrix.com>
References: <AC0638B5-22D4-480C-8A27-2AE58502E85F@twistedmatrix.com>
Message-ID: <20171120065627.GA12309@arch-tinker.localdomain>

On Sat, Nov 18, 2017 at 10:59:52PM -0800, Glyph wrote:
> https://twistedmatrix.com/trac/ticket/9280#comment:7 <https://twistedmatrix.com/trac/ticket/9280#comment:7> introduced a pretty serious regression (tracebacks are no longer printed by twisted.web) - can someone please do the appropriate dance to revert this and reopen the ticket?  It looks like the directions need updating for git :-).
To follow up, there is quite a bit of discussion in the ticket about this, for anyone
to whom this is of interest.

Cheers,
-Jason



From nandhakumarsathiya at gmail.com  Mon Nov 20 20:16:33 2017
From: nandhakumarsathiya at gmail.com (Nandha Kumar)
Date: Tue, 21 Nov 2017 08:46:33 +0530
Subject: [Twisted-Python] Reactor.run() to be a non blocking call and run in
	background
Message-ID: <15fdc93c668.27c2.edd11995bf46bbe14e1c477ff96295d9@gmail.com>

Hi guys,

I'm using twisted to host an ssh server.. My requirement that the python 
code I did needs to start the reactor and come out of the execution and 
needs to stop the reactor once stop is called.. But since the reactor. 
Run() seems to be a blocking one.. It isn't moving forward after starting 
the reactor.. Any work around on this would be appreciated..


Regards,
Nandha Kumar S




From mrw at enotuniq.org  Tue Nov 21 12:56:54 2017
From: mrw at enotuniq.org (Mark Williams)
Date: Tue, 21 Nov 2017 11:56:54 -0800
Subject: [Twisted-Python] OpenSSL versions
Message-ID: <1511294214.2258153.1180174504.48167D8C@webmail.messagingengine.com>

Hello,

Users of Twisted and OpenSSL 1.1  and 1.0.2 cannot connect to all HTTPS
sites because Twisted sets its own ECDH curve instead of using the
defaults selected by these versions of OpenSSL.

The gory details are here:
https://twistedmatrix.com/trac/ticket/9210
https://github.com/twisted/twisted/pull/927

The solution to this bug favored by an OpenSSL maintainer is to drop
support for OpenSSL versions before 1.0.2.  I'm also in favor of this
because:

- 1.0.2 is the oldest supported version of OpenSSL
- The ECDH curve selection code would be much simpler if we only
supported OpenSSL 1.0.2
- cryptography wheels installed from PyPI include OpenSSL 1.1

Do you use the latest version of Twisted with OpenSSL 1.0.1?  If so, do
the above reasons satisfy your concerns?

Thanks!

-- 
  Mark Williams
  mrw at enotuniq.org



From glyph at twistedmatrix.com  Tue Nov 21 13:01:16 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 21 Nov 2017 12:01:16 -0800
Subject: [Twisted-Python] OpenSSL versions
In-Reply-To: <1511294214.2258153.1180174504.48167D8C@webmail.messagingengine.com>
References: <1511294214.2258153.1180174504.48167D8C@webmail.messagingengine.com>
Message-ID: <96BB6842-2855-4089-B247-077D2DA80835@twistedmatrix.com>



> On Nov 21, 2017, at 11:56 AM, Mark Williams <mrw at enotuniq.org> wrote:
> 
> Hello,
> 
> Users of Twisted and OpenSSL 1.1  and 1.0.2 cannot connect to all HTTPS
> sites because Twisted sets its own ECDH curve instead of using the
> defaults selected by these versions of OpenSSL.
> 
> The gory details are here:
> https://twistedmatrix.com/trac/ticket/9210
> https://github.com/twisted/twisted/pull/927
> 
> The solution to this bug favored by an OpenSSL maintainer is to drop
> support for OpenSSL versions before 1.0.2.  I'm also in favor of this
> because:
> 
> - 1.0.2 is the oldest supported version of OpenSSL
> - The ECDH curve selection code would be much simpler if we only
> supported OpenSSL 1.0.2
> - cryptography wheels installed from PyPI include OpenSSL 1.1
> 
> Do you use the latest version of Twisted with OpenSSL 1.0.1?  If so, do
> the above reasons satisfy your concerns?
> 
> Thanks!

I have one question:

When I `pip install cryptography` on linux, do I presently get a self-contained manylinux1 wheel right now with a built-in OpenSSL, or do I need to care what my "distro" (or Docker base image) is shipping?

-glyph



From romanmescheryakov at yandex.ru  Thu Nov 23 01:57:01 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Thu, 23 Nov 2017 11:57:01 +0300
Subject: [Twisted-Python] Reactor.run() to be a non blocking call and
	run in background
In-Reply-To: <15fdc93c668.27c2.edd11995bf46bbe14e1c477ff96295d9@gmail.com>
References: <15fdc93c668.27c2.edd11995bf46bbe14e1c477ff96295d9@gmail.com>
Message-ID: <1834721511427421@web43g.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171123/55db265e/attachment-0002.html>

From rodrigc at crodrigues.org  Thu Nov 23 19:18:38 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 23 Nov 2017 18:18:38 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
Message-ID: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>

Hi,

Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?

This will fix more of the PyPy tests:
https://twistedmatrix.com/trac/ticket/9226

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171123/dde4b614/attachment-0002.html>

From rodrigc at crodrigues.org  Thu Nov 23 20:24:00 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 23 Nov 2017 19:24:00 -0800
Subject: [Twisted-Python] Need help fixing txkube unit test with latest
	Twisted
Message-ID: <CAG=rPVcuZJjVE-t4HsnpSMNZ0dW92ame6mnH8hVuVUyf=C57nQ@mail.gmail.com>

Hi,

I have been submitting patches to txkube (Python-based Kubernetes client)
to work with the latest API changes for the reactor and TLS endpoints.

I am down to only 1 test failing.  I submitted this patch:

https://github.com/LeastAuthority/txkube/pull/152/files

based on changes that I saw in

https://github.com/twisted/twisted/commit/cd75dd82f41b834ec8d53827932cf566116e3c0d

but haven't gotten it to work.

What I am trying to do is to get txkube to the point where I can install it
with Python 2.7, and
then type:

trial txkube.test.test_authentication.AuthenticateWithServiceAccountTests.t
est_https_bearer_token_authorization

and get it to work.


test_https_bearer_token_authorization is pretty much the same as
test_http_bearer_token_authorization, just going over https.

When running the test_https_bearer_token_authorization test, I traced
things down into the ConnectionCompleter class:
https://github.com/twisted/twisted/blob/trunk/src/twisted/test/iosim.py#L515

It looks like the serverFactory is not properly creating a serverProtocol,
so no data is going through.

Can someone familiar with the TLS endpoint changes in Twisted 17.1.0 point
me in the right direction for this?


--

Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171123/765458cd/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Nov 24 16:36:58 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 24 Nov 2017 15:36:58 -0800
Subject: [Twisted-Python] Need help fixing txkube unit test with
	latest	Twisted
In-Reply-To: <CAG=rPVcuZJjVE-t4HsnpSMNZ0dW92ame6mnH8hVuVUyf=C57nQ@mail.gmail.com>
References: <CAG=rPVcuZJjVE-t4HsnpSMNZ0dW92ame6mnH8hVuVUyf=C57nQ@mail.gmail.com>
Message-ID: <DFF83FA9-7675-4759-A241-844C71DABFBE@twistedmatrix.com>

On Nov 23, 2017, at 7:24 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> It looks like the serverFactory is not properly creating a serverProtocol, so no data is going through.
> 

Can you explain "properly" in a little more detail?

Thanks,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171124/49ad403c/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Nov 25 19:18:10 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 25 Nov 2017 18:18:10 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
Message-ID: <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>



> On Nov 23, 2017, at 6:18 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> 
> Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?

I'd love to move PyPy support forward (I even went to the trouble of doing the password-reset dance necessary to get my SSH keys onto these buildbots), but it looks like we have installed from the PPA, which has fallen behind the official releases - https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages <https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages> - so upgrading isn't obvious.

Weirdly it looks like Debian is on top of things and does have a current version of the package - https://packages.debian.org/sid/pypy <https://packages.debian.org/sid/pypy> - but I have no clue how to configure these machines to pull just this one package from Debian.  If anyone knows how this works, I'd be happy to put more SSH keys on these servers.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171125/e5d5da5d/attachment-0002.html>

From adi at roiban.ro  Sat Nov 25 21:34:28 2017
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Nov 2017 04:34:28 +0000
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
Message-ID: <CAFycZ9dz8M=sjbEa2VpH2_367mQntobrEKUDeRGOgYQyvW16yw@mail.gmail.com>

On 26 November 2017 at 02:18, Glyph <glyph at twistedmatrix.com> wrote:
>
>
> On Nov 23, 2017, at 6:18 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>
> Hi,
>
> Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?
>
>
> I'd love to move PyPy support forward (I even went to the trouble of doing
> the password-reset dance necessary to get my SSH keys onto these buildbots),
> but it looks like we have installed from the PPA, which has fallen behind
> the official releases -
> https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages - so upgrading
> isn't obvious.
>
> Weirdly it looks like Debian is on top of things and does have a current
> version of the package - https://packages.debian.org/sid/pypy - but I have
> no clue how to configure these machines to pull just this one package from
> Debian.  If anyone knows how this works, I'd be happy to put more SSH keys
> on these servers.

My 2 cents.

Maybe just run pypy on Travis-CI instead of the buildslaves

There is this PR https://github.com/twisted/twisted/pull/226

and ticket

https://twistedbumatrix.com/trac/ticket/8505


---------

In that ticket there is one way of solving this.

Instead of using using Ubuntu or Debian packages, just use OS
independent method to install latest PYPY.

Glyph, do we need Debian/Ubuntu packages for PYPY installed on the slaves?

-----------

For designing the buildbot builders maybe we can get something similar
to Travis-CI.
Before running the tests, buildbot will call something like `python
admin/buildbot-init` and depending on the environment variables, this
script can install various things.

In this way we have more configuration logic in the repo and
developers can advance the work without waiting for someone to upgrade
the OS

-- 
Adi Roiban



From adi at roiban.ro  Sat Nov 25 21:52:20 2017
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Nov 2017 04:52:20 +0000
Subject: [Twisted-Python] SMTPConnectError as a side effect on connection
	lost
Message-ID: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>

I hit a strange behavior in which the clone connection error from one
test is raised as the error for another test.

The tests are not written using trial, but I have thousands of other
tests and I have never seen this behaviour.

I tried to put a self-contained example at

https://gist.github.com/adiroiban/edc0776e3337d0bd3f093aa0f2819deb#file-test-py

you will need to run it in a virtulenv as it will pull quite a few of
dependencies.

I have traced the error to this code
https://github.com/twisted/twisted/blob/03dcdfb5933c4f83ce6aad3f4bdf080cda65584c/src/twisted/mail/smtp.py#L1943

            if err.check(error.ConnectionDone):
                err.value = smtp.SMTPConnectError(
                    -1, "Unable to connect to server.")
            self.result.errback(err.value)

It looks to me like the initial failure (err) is hijacked here and its
errors will never be cleared.

If I am doing something like

            if err.check(error.ConnectionDone):
                value = smtp.SMTPConnectError(
                    -1, "Unable to connect to server.")
            else:
                value = err.value
            err.cleanFailure()
            self.result.errback(value)

then the test will pass.
But I still don't understand how the error from one client request is
passed to another client request when they are using different
servers.

Do you see anything suspicious with this code?

Thanks!
-- 
Adi Roiban



From glyph at twistedmatrix.com  Sat Nov 25 22:19:27 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 25 Nov 2017 21:19:27 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <CAFycZ9dz8M=sjbEa2VpH2_367mQntobrEKUDeRGOgYQyvW16yw@mail.gmail.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
 <CAFycZ9dz8M=sjbEa2VpH2_367mQntobrEKUDeRGOgYQyvW16yw@mail.gmail.com>
Message-ID: <CFDF6A78-B2D6-4BD4-AC36-2D2038B28C9F@twistedmatrix.com>



> On Nov 25, 2017, at 8:34 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
>> On 26 November 2017 at 02:18, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>> 
>> On Nov 23, 2017, at 6:18 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>> 
>> Hi,
>> 
>> Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?
>> 
>> 
>> I'd love to move PyPy support forward (I even went to the trouble of doing
>> the password-reset dance necessary to get my SSH keys onto these buildbots),
>> but it looks like we have installed from the PPA, which has fallen behind
>> the official releases -
>> https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages - so upgrading
>> isn't obvious.
>> 
>> Weirdly it looks like Debian is on top of things and does have a current
>> version of the package - https://packages.debian.org/sid/pypy - but I have
>> no clue how to configure these machines to pull just this one package from
>> Debian.  If anyone knows how this works, I'd be happy to put more SSH keys
>> on these servers.
> 
> My 2 cents.
> 
> Maybe just run pypy on Travis-CI instead of the buildslaves
> 
> There is this PR https://github.com/twisted/twisted/pull/226
> 
> and ticket
> 
> https://twistedbumatrix.com/trac/ticket/8505
> 
> 
> ---------
> 
> In that ticket there is one way of solving this.
> 
> Instead of using using Ubuntu or Debian packages, just use OS
> independent method to install latest PYPY.
> 
> Glyph, do we need Debian/Ubuntu packages for PYPY installed on the slaves?

Not as far as I know.

Moving PyPy testing to travis CI would be fine with me; I was just trying to help in the constraints of the current setup.

> -----------
> 
> For designing the buildbot builders maybe we can get something similar
> to Travis-CI.
> Before running the tests, buildbot will call something like `python
> admin/buildbot-init` and depending on the environment variables, this
> script can install various things.
> 
> In this way we have more configuration logic in the repo and
> developers can advance the work without waiting for someone to upgrade
> the OS
> 
> -- 
> Adi Roiban
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Sat Nov 25 22:36:26 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 25 Nov 2017 21:36:26 -0800
Subject: [Twisted-Python] SMTPConnectError as a side effect on
	connection	lost
In-Reply-To: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>
References: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>
Message-ID: <CA1C0C66-31C3-4007-9462-86ED124CDD73@twistedmatrix.com>


> On Nov 25, 2017, at 8:52 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Do you see anything suspicious with this code?

Just that it looks like it leaves a Deferred in an error state. You said the tests weren’t “written using” trial, but are you running them with trial, or with any runner that will consider a logged failure to be a failure? If so, the failure won’t be logged until the garbage collector runs, which might be in a later test.


From trac at twistedmatrix.com  Sun Nov 26 00:05:24 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Nov 2017 07:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1511679924.43.22385600686142282@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171126/d8c779c0/attachment-0002.html>

From adi at roiban.ro  Sun Nov 26 06:10:57 2017
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Nov 2017 13:10:57 +0000
Subject: [Twisted-Python] SMTPConnectError as a side effect on
	connection lost
In-Reply-To: <CA1C0C66-31C3-4007-9462-86ED124CDD73@twistedmatrix.com>
References: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>
 <CA1C0C66-31C3-4007-9462-86ED124CDD73@twistedmatrix.com>
Message-ID: <CAFycZ9eDy4YtpkSdhfd62oXL_ZHe2AUqogf5oAm7s-+-OJx1tg@mail.gmail.com>

On 26 November 2017 at 05:36, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Nov 25, 2017, at 8:52 PM, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Do you see anything suspicious with this code?
>
> Just that it looks like it leaves a Deferred in an error state. You said the tests weren’t “written using” trial, but are you running them with trial, or with any runner that will consider a logged failure to be a failure? If so, the failure won’t be logged until the garbage collector runs, which might be in a later test.

Many thanks for looking into that.

I dag deeper and I found the error.

The root cause is
twisted.internet.posixbase._DisconnectSelectableMixin._disconnectSelectable

It starts as:

    def _disconnectSelectable(self, selectable, why, isRead, faildict={
        error.ConnectionDone: failure.Failure(error.ConnectionDone()),
        error.ConnectionLost: failure.Failure(error.ConnectionLost())
        }):
        """
        Utility function for disconnecting a selectable.

        Supports half-close notification, isRead should be boolean indicating
        whether error resulted from doRead().
        """
        self.removeReader(selectable)
        f = faildict.get(why.__class__)

Then `f` is returned but in STMP we have:

f.value = smtp.SMTPConnectError( -1, "Unable to connect to server.")

This replaces the value for `faildict` via f.
Any future call will return that replaced error.

I have created a ticket for this

https://twistedmatrix.com/trac/ticket/9339

I guess that we can continue the discussion on how to fix it as part
of that ticket.

----------

Here is my answer to Glyph's question regarding unhandled failed deferred.

The tests are not inheriting from the Trial test case.

I can run them with trial, including with --force-gc and no leftover
deferred is detected.
The SMTP test is [OK].

If I reverse the order, so that the STMP tests is executed last, trial
will execute all tests without any error.


Thanks!
-- 
Adi Roiban



From adi at roiban.ro  Sun Nov 26 11:23:58 2017
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 26 Nov 2017 18:23:58 +0000
Subject: [Twisted-Python] Accepting/merging patches for unsupported
	platforms without CI
Message-ID: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>

Hi,

What is the procedure for accepting patches for platforms for which we
don't have a continuous testing system ?

This is a follow up of the review from
https://twistedmatrix.com/trac/ticket/9323

There is a patch for Cygwin but AFAIK there is no current builder for
running Twisted with Python on Cygwin.

My first reaction was that before accepting such patches we should set
up a continuous testing system.

With such a system in place we can run the tests to see that the
reported bug is present in trunk and that it is fixed in a branch.

If that can't be done, we need at least someone to manually run the
tests to check the patch.

Twisted is supported on so many systems and I don't think that is OK
to ask reviewers to have each supported system at hand, ready to fire
a manual test.

Any comments?

Thanks,
-- 
Adi Roiban



From glyph at twistedmatrix.com  Sun Nov 26 15:30:49 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 26 Nov 2017 14:30:49 -0800
Subject: [Twisted-Python] Accepting/merging patches for
	unsupported	platforms without CI
In-Reply-To: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
Message-ID: <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>


> On Nov 26, 2017, at 10:23 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> What is the procedure for accepting patches for platforms for which we
> don't have a continuous testing system ?
> 
> This is a follow up of the review from
> https://twistedmatrix.com/trac/ticket/9323
> 
> There is a patch for Cygwin but AFAIK there is no current builder for
> running Twisted with Python on Cygwin.
> 
> My first reaction was that before accepting such patches we should set
> up a continuous testing system.
> 
> With such a system in place we can run the tests to see that the
> reported bug is present in trunk and that it is fixed in a branch.
> 
> If that can't be done, we need at least someone to manually run the
> tests to check the patch.
> 
> Twisted is supported on so many systems and I don't think that is OK
> to ask reviewers to have each supported system at hand, ready to fire
> a manual test.
> 
> Any comments?
> 

To support a platform—i.e. to promise we will not break it in the future—we  have to have a builder capable of running Twisted on that platform.

To accept a patch though, the important thing is to have test coverage. If the change in question is a platform-specific feature that there’s no way to test in a different environment, we would indeed need to block on the availability of a builder.

Quite often—as I believe is the case for the patch you’re referring to here—patches are adjusting behaviors which would be difficult to cleanly integration-test on the platform in question anyway, and the appropriate thing to do is to make some mock match the observed behavior of the platform in question.  In this case it would be nice if the reviewer could verify this, but if the patch submitter’s description of observed behavior is clear, and their test mock implements it correctly, I would say that we can give them the benefit of the doubt and accept such patches even if the reviewer doesn’t have such a platform available.  Assuming all the changed lines are covered adequately for our supported platforms’ behavior as well, of course, and we aren’t risking breaking them.

How do you feel about this answer?

-g


From glyph at twistedmatrix.com  Sun Nov 26 17:00:45 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 26 Nov 2017 16:00:45 -0800
Subject: [Twisted-Python] SMTPConnectError as a side effect
 on	connection lost
In-Reply-To: <CAFycZ9eDy4YtpkSdhfd62oXL_ZHe2AUqogf5oAm7s-+-OJx1tg@mail.gmail.com>
References: <CAFycZ9eK+SVGfuM-pT7XydeQZDF90Hhy5_77wU+Jxuu93vWr-g@mail.gmail.com>
 <CA1C0C66-31C3-4007-9462-86ED124CDD73@twistedmatrix.com>
 <CAFycZ9eDy4YtpkSdhfd62oXL_ZHe2AUqogf5oAm7s-+-OJx1tg@mail.gmail.com>
Message-ID: <2D9C31FC-C4ED-4D4C-9E74-CC737A1B5B7C@twistedmatrix.com>



> On Nov 26, 2017, at 5:10 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 26 November 2017 at 05:36, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>>> On Nov 25, 2017, at 8:52 PM, Adi Roiban <adi at roiban.ro> wrote:
>>> 
>>> Do you see anything suspicious with this code?
>> 
>> Just that it looks like it leaves a Deferred in an error state. You said the tests weren’t “written using” trial, but are you running them with trial, or with any runner that will consider a logged failure to be a failure? If so, the failure won’t be logged until the garbage collector runs, which might be in a later test.
> 
> Many thanks for looking into that.
> 
> I dag deeper and I found the error.

Oops, looks like I was totally off base :-).

> The root cause is
> twisted.internet.posixbase._DisconnectSelectableMixin._disconnectSelectable
> 
> It starts as:
> 
>    def _disconnectSelectable(self, selectable, why, isRead, faildict={
>        error.ConnectionDone: failure.Failure(error.ConnectionDone()),
>        error.ConnectionLost: failure.Failure(error.ConnectionLost())
>        }):
>        """
>        Utility function for disconnecting a selectable.
> 
>        Supports half-close notification, isRead should be boolean indicating
>        whether error resulted from doRead().
>        """
>        self.removeReader(selectable)
>        f = faildict.get(why.__class__)
> 
> Then `f` is returned but in STMP we have:
> 
> f.value = smtp.SMTPConnectError( -1, "Unable to connect to server.")
> 
> This replaces the value for `faildict` via f.
> Any future call will return that replaced error.

Yeah, this is definitely wrong.  I don't think it occurred to anyone that someone might set the `value` attribute of an existing Failure.  More on the ticket.

> I have created a ticket for this
> 
> https://twistedmatrix.com/trac/ticket/9339
> 
> I guess that we can continue the discussion on how to fix it as part
> of that ticket.
> 
> ----------
> 
> Here is my answer to Glyph's question regarding unhandled failed deferred.
> 
> The tests are not inheriting from the Trial test case.
> 
> I can run them with trial, including with --force-gc and no leftover
> deferred is detected.
> The SMTP test is [OK].
> 
> If I reverse the order, so that the STMP tests is executed last, trial
> will execute all tests without any error.

Yeah, your diagnosis is correct, mine was wrong.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171126/be3753ed/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Nov 26 17:48:29 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 26 Nov 2017 19:48:29 -0500
Subject: [Twisted-Python] Accepting/merging patches for unsupported
 platforms without CI
In-Reply-To: <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
 <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
Message-ID: <CAEeXt4O+7VTfv-hXVf1LGgPmj5=vnQK1K6RcyfRcvFkbdCTMyQ@mail.gmail.com>

On Sun, Nov 26, 2017 at 5:30 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
>
> Quite often—as I believe is the case for the patch you’re referring to
> here—patches are adjusting behaviors which would be difficult to cleanly
> integration-test on the platform in question anyway, and the appropriate
> thing to do is to make some mock match the observed behavior of the
> platform in question.


Just because there's enough misunderstanding about how to do this kind of
thing and the words that describe it, I wanted to point out that this isn't
really a "mock" - and it's certainly not something you would do with a
library with "mock" in its name.

For those who don't know (not Glyph), a mock is an object that somehow
records an exact sequence of operations (like "my foo method was called
with bar" or "my baz attribute was accessed").  These tend to result in
very fragile tests because they operate at such a specific level.  Quite
often entirely legitimate implementation changes invalidate the
expectations of some mock and force corresponding test suite maintenance.

A better approach is to make sure the platform-specific interface being
tested has been reduced to its smallest possible scope and then create a
verified fake which implements that interface.  The verification is
performed by a test suite which can run against both implementations (the
fake and the real - with the real version only being tested in the
necessary environment).  All other related tests can use the verified fake
instead of the real implementation and will run on all platforms.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171126/e850ad27/attachment-0002.html>

From adi at roiban.ro  Mon Nov 27 07:45:05 2017
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 27 Nov 2017 14:45:05 +0000
Subject: [Twisted-Python] Accepting/merging patches for unsupported
 platforms without CI
In-Reply-To: <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
 <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
Message-ID: <CAFycZ9dspb18zLHuYCmB9B_5VVL1SRsebSd2snqWxF3+nub=Yg@mail.gmail.com>

On 26 November 2017 at 22:30, Glyph <glyph at twistedmatrix.com> wrote:
>
>> On Nov 26, 2017, at 10:23 AM, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> What is the procedure for accepting patches for platforms for which we
>> don't have a continuous testing system ?
>>
>> This is a follow up of the review from
>> https://twistedmatrix.com/trac/ticket/9323
[snip]
>>
>
> To support a platform—i.e. to promise we will not break it in the future—we  have to have a builder capable of running Twisted on that platform.
>
> To accept a patch though, the important thing is to have test coverage. If the change in question is a platform-specific feature that there’s no way to test in a different environment, we would indeed need to block on the availability of a builder.
>
> Quite often—as I believe is the case for the patch you’re referring to here—patches are adjusting behaviors which would be difficult to cleanly integration-test on the platform in question anyway, and the appropriate thing to do is to make some mock match the observed behavior of the platform in question.  In this case it would be nice if the reviewer could verify this, but if the patch submitter’s description of observed behavior is clear, and their test mock implements it correctly, I would say that we can give them the benefit of the doubt and accept such patches even if the reviewer doesn’t have such a platform available.  Assuming all the changed lines are covered adequately for our supported platforms’ behavior as well, of course, and we aren’t risking breaking them.
>
> How do you feel about this answer?

Thanks for your comment and I think that I know what a reviewer should
do for  https://twistedmatrix.com/trac/ticket/9323
>From the ticket description, we already have a test which fails on
Cygwin and the PR does not add any new tests.
So the options are:

A. Get a builder for cygwin and use the existing tests.
B. Write new unit/integration tests with a fake Cygwin system.

-----

I understand the high-level process, but I have questions regarding the details.

How can a reviewer (which does not have experience and access to an
unsupported platform) verify whether the fake/surrogate implementation
is correct?
That is without putting significant effort and reading the details
about the unsupported platform, and in this process becoming an expert
in that platform?

-- 
Adi Roiban



From glyph at twistedmatrix.com  Mon Nov 27 21:07:19 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 27 Nov 2017 20:07:19 -0800
Subject: [Twisted-Python] Accepting/merging patches for unsupported
 platforms without CI
In-Reply-To: <CAFycZ9dspb18zLHuYCmB9B_5VVL1SRsebSd2snqWxF3+nub=Yg@mail.gmail.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
 <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
 <CAFycZ9dspb18zLHuYCmB9B_5VVL1SRsebSd2snqWxF3+nub=Yg@mail.gmail.com>
Message-ID: <8D36AC6B-9B59-473A-8595-594577CBAAA6@twistedmatrix.com>



> On Nov 27, 2017, at 6:45 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 26 November 2017 at 22:30, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>>> On Nov 26, 2017, at 10:23 AM, Adi Roiban <adi at roiban.ro> wrote:
>>> 
>>> Hi,
>>> 
>>> What is the procedure for accepting patches for platforms for which we
>>> don't have a continuous testing system ?
>>> 
>>> This is a follow up of the review from
>>> https://twistedmatrix.com/trac/ticket/9323
> [snip]
>>> 
>> 
>> To support a platform—i.e. to promise we will not break it in the future—we  have to have a builder capable of running Twisted on that platform.
>> 
>> To accept a patch though, the important thing is to have test coverage. If the change in question is a platform-specific feature that there’s no way to test in a different environment, we would indeed need to block on the availability of a builder.
>> 
>> Quite often—as I believe is the case for the patch you’re referring to here—patches are adjusting behaviors which would be difficult to cleanly integration-test on the platform in question anyway, and the appropriate thing to do is to make some mock match the observed behavior of the platform in question.  In this case it would be nice if the reviewer could verify this, but if the patch submitter’s description of observed behavior is clear, and their test mock implements it correctly, I would say that we can give them the benefit of the doubt and accept such patches even if the reviewer doesn’t have such a platform available.  Assuming all the changed lines are covered adequately for our supported platforms’ behavior as well, of course, and we aren’t risking breaking them.
>> 
>> How do you feel about this answer?
> 
> Thanks for your comment and I think that I know what a reviewer should
> do for  https://twistedmatrix.com/trac/ticket/9323
> From the ticket description, we already have a test which fails on
> Cygwin and the PR does not add any new tests.
> So the options are:
> 
> A. Get a builder for cygwin and use the existing tests.
> B. Write new unit/integration tests with a fake Cygwin system.
> 
> -----
> 
> I understand the high-level process, but I have questions regarding the details.
> 
> How can a reviewer (which does not have experience and access to an
> unsupported platform) verify whether the fake/surrogate implementation
> is correct?

At some level, I think it is OK to take the submitter's word for it.  The important thing about the code review is not like, courtroom-style adversarial disbelief, but rather, the idea that it is super easy to make mistakes while writing programs.  If the submitter clearly describes the same behavior in tests, in their implementation, in their ticket description and in their NEWS fragment, and the reviewer can verify that they're all consistent, then I don't think they need to be able to personally reproduce the behavior if it's on an obscure platform.

Ideally, as Jean-Paul suggests, the submitter would provide a verified fake <https://thoughtstreams.io/glyph/test-patterns/5952/> implementation.  In practice they may just provide a well-documented fake, since verifying the real implementation may be impossible programmatically, or impractically difficult.  (However, a genuine mock, or a dummy, is definitely insufficient for testing.)

> That is without putting significant effort and reading the details
> about the unsupported platform, and in this process becoming an expert
> in that platform?

In this case, the subtle difference in pipe-handling behavior, which is shared at least in part with other platforms, should not require becoming a total expert in Cygwin's runtime.  If it does, we may in fact need to wait for a reviewer to come along who already has this expertise.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171127/38fee221/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Nov 27 21:22:39 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 27 Nov 2017 20:22:39 -0800
Subject: [Twisted-Python] Accepting/merging patches for unsupported
 platforms without CI
In-Reply-To: <CAEeXt4O+7VTfv-hXVf1LGgPmj5=vnQK1K6RcyfRcvFkbdCTMyQ@mail.gmail.com>
References: <CAFycZ9fL5gA-_-o=+GmkFQ0wmdL+XGRwsnH73n6FfT1Vgvv7dQ@mail.gmail.com>
 <070DE8A7-FCD0-4009-BCE2-406EE8BD1C62@twistedmatrix.com>
 <CAEeXt4O+7VTfv-hXVf1LGgPmj5=vnQK1K6RcyfRcvFkbdCTMyQ@mail.gmail.com>
Message-ID: <63567A30-8F36-41E3-B7A5-CD2D109ACFF1@twistedmatrix.com>



> On Nov 26, 2017, at 4:48 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sun, Nov 26, 2017 at 5:30 PM, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> 
> Quite often—as I believe is the case for the patch you’re referring to here—patches are adjusting behaviors which would be difficult to cleanly integration-test on the platform in question anyway, and the appropriate thing to do is to make some mock match the observed behavior of the platform in question.
> 
> Just because there's enough misunderstanding about how to do this kind of thing and the words that describe it, I wanted to point out that this isn't really a "mock" - and it's certainly not something you would do with a library with "mock" in its name.

Martin Fowler has the authoritative glossary on this - https://www.martinfowler.com/bliki/TestDouble.html <https://www.martinfowler.com/bliki/TestDouble.html>.  I have my own entry in this genre which echoes and expands upon some of his definitions: https://thoughtstreams.io/glyph/test-patterns/ <https://thoughtstreams.io/glyph/test-patterns/>.

However, I eventually acquiesced to the colloquial meaning of "mock" to mean "test double"; in most contexts where people are talking about "mocks" they're really talking about fakes, and the real actual mock-module-style mocks are increasingly universally understood to be technical debt.

> For those who don't know (not Glyph), a mock is an object that somehow records an exact sequence of operations (like "my foo method was called with bar" or "my baz attribute was accessed").  These tend to result in very fragile tests because they operate at such a specific level.  Quite often entirely legitimate implementation changes invalidate the expectations of some mock and force corresponding test suite maintenance.

(As far as I know, we don't use the 'mock' module anywhere in Twisted, and we shouldn't start :).)

> A better approach is to make sure the platform-specific interface being tested has been reduced to its smallest possible scope and then create a verified fake which implements that interface.  The verification is performed by a test suite which can run against both implementations (the fake and the real - with the real version only being tested in the necessary environment).  All other related tests can use the verified fake instead of the real implementation and will run on all platforms.

The most important thing here is to reduce the number of duplicate fakes.

Completely verified fakes are unfortunately almost impossible to build.  If the faked API has good enough testing support that you can programmatically provoke all of its failure modes, then the only reason to build a fake is performance, which is rarely our most pressing problem :-).  So quite often even the best verified fakes will only be partially verified.  Even partial verification of things like kernel APIs can be a major challenge.  So it's often necessary to accept a fake which is not directly verified against the real API.

However, ad-hoc one-off fakes are at extremely high risk of drift.  If you are trying to verify the system under test's response to behavior X in a test, and you build a fake that implements X, Y, and Z for the sake of the test's set-up, naturally that new fake's Y and Z will be flaky and half-implemented (at best: its X may be quite half-baked as well).  Moreover, if the real X, Y or Z changes in the future, it's highly unlikely anyone will come along and update the mock for just that one test.

If that fake were shared among a large number of tests, though, or even better, distributed along with the real X, Y, and Z, there is at least a fighting chance that someone might update the fake in the future and notice that the system under test has an issue.

I believe the most important principle here is that test code is just code like any other code, and following generally good code-organization principles like well-defined interfaces, planning for maintenance over time, "don't repeat yourself", clear locus of responsibility, etc etc, will prevent test suites and their attendant doubles from decaying into a sprawling and unmaintainable mess.  We have generally been making good progress on this over time, but it's important for everybody involved with Twisted to continue trying to reduce duplication in fakes, and improve the verification of the fakes we have, as we maintain our test suite.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171127/7208daed/attachment-0002.html>

From mrw at enotuniq.org  Wed Nov 29 16:29:25 2017
From: mrw at enotuniq.org (Mark Williams)
Date: Wed, 29 Nov 2017 15:29:25 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
Message-ID: <1511998165.3870338.1188772008.0F09DABD@webmail.messagingengine.com>

On Sat, Nov 25, 2017, at 06:18 PM, Glyph wrote:
> 
> 
>> On Nov 23, 2017, at 6:18 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>> 
>> Hi,
>> 
>> Can someone update PyPy on the buildbots from PyPy 5.8.0 to PyPy 5.9.0?
> 
> I'd love to move PyPy support forward (I even went to the trouble of doing the password-reset dance necessary to get my SSH keys onto these buildbots), but it looks like we have installed from the PPA, which has fallen behind the official releases - https://launchpad.net/~pypy/+archive/ubuntu/ppa/+packages - so upgrading isn't obvious.
> 
> Weirdly it looks like Debian is on top of things and *does* have a current version of the package - https://packages.debian.org/sid/pypy - but I have no clue how to configure these machines to pull just this one package from Debian.  If anyone knows how this works, I'd be happy to put more SSH keys on these servers.
>

Glyph gave me access to the 3 PyPy builders:

https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5
 
I just replaced the system PyPy from the PPA with Squeaky's portable
PyPy 5.9.0:

https://github.com/squeaky-pl/portable-pypy

The PyPy installations are in /opt/pypy_portable/pypy, and their
binaries are symlinked into /usr/local/bin.  This is documented in
~root/PYPY_README.

The builders should now be using PyPy 5.9.0:

https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/172/steps/select/logs/stdio

I have also pinged the maintainer of the Ubuntu PPA about adding PyPy
5.9.0.  Once that happens I'll switch the builders back to the PPA.

--
  Mark Williams
  mrw at enotuniq.org



From rodrigc at crodrigues.org  Wed Nov 29 18:20:32 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Wed, 29 Nov 2017 17:20:32 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <1511998165.3870338.1188772008.0F09DABD@webmail.messagingengine.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
 <1511998165.3870338.1188772008.0F09DABD@webmail.messagingengine.com>
Message-ID: <CAG=rPVc65w2YSaxMZEVmU0oczzBZHg5TgkUrg3XsmBG2vX7_nA@mail.gmail.com>

On Wed, Nov 29, 2017 at 3:29 PM, Mark Williams <mrw at enotuniq.org> wrote:

> I just replaced the system PyPy from the PPA with Squeaky's portable
> PyPy 5.9.0:
>
>
Thanks for installing this.

These are the test results before and after your change.

Before your change running PyPy 5.8.0:

FAILED (skips=2200, failures=5, errors=12, successes=9947)


After your change, running PyPy 5.9.0:

https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/172/steps/select/logs/stdio

FAILED (skips=2200, failures=1, errors=12, successes=9951)


So with the PyPy upgrade, there is a small improvement in the number of
Twisted tests which now pass with PyPy.

Did you install PyPy3 5.9.0 anywhere on the buildbots?
It would be good to have that running as well.

Thanks.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20171129/8ba0c12f/attachment-0002.html>

From mrw at enotuniq.org  Wed Nov 29 18:26:34 2017
From: mrw at enotuniq.org (Mark Williams)
Date: Wed, 29 Nov 2017 17:26:34 -0800
Subject: [Twisted-Python] PyPy 5.9.0 on buildbots
In-Reply-To: <CAG=rPVc65w2YSaxMZEVmU0oczzBZHg5TgkUrg3XsmBG2vX7_nA@mail.gmail.com>
References: <CAG=rPVecJCNX7iTDzKVirLfa9xazHnaMhgwRRsaRx6m5xThywg@mail.gmail.com>
 <A88ECA5D-F7EE-43A0-B52D-6B4DFA982810@twistedmatrix.com>
 <1511998165.3870338.1188772008.0F09DABD@webmail.messagingengine.com>
 <CAG=rPVc65w2YSaxMZEVmU0oczzBZHg5TgkUrg3XsmBG2vX7_nA@mail.gmail.com>
Message-ID: <1512005194.430698.1188868792.7B3D07B1@webmail.messagingengine.com>

On Wed, Nov 29, 2017, at 05:20 PM, Craig Rodrigues wrote:
> 
> Did you install PyPy3 5.9.0 anywhere on the buildbots?
> It would be good to have that running as well.

Not yet, but I agree!  This will require a change to the Buildbot
config:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/master.cfg

I'll try to do this before the end of the week.

--
  Mark Williams
  mrw at enotuniq.org



