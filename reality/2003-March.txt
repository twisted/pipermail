From reality@twistedmatrix.com  Thu Mar  6 16:21:04 2003
From: reality@twistedmatrix.com (Allen Short)
Date: Thu, 06 Mar 2003 10:21:04 -0600 (CST)
Subject: [Reality] Unsatisfactory Consequences
Message-ID: <20030306.102104.887000989.washort@twistedmatrix.com>

----Security_Multipart(Thu_Mar__6_10:21:04_2003_661)--
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit


This was my original writeup for the blow-verb example. Unfortunately,
almost none of this actually works at the moment.

To start with, the parser doesn't look at any of the participants'
interfaces before dispatch, so "blow whistle" results in ambiguity,
as do the other two commands. 

ToolActions DTRT when tool = None. However, there's no feedback to
indicate this, such as "(with the rocket)".

There's no code for picking up tools before using, but it has been
pointed out that this might be a feature.

Finally, events emitted by closed Doors do not propagate beyond the
Door itself. should Door.collectImplementors check whether asker is
self?

Another bothersome thing: formatTo methods get run only after
doAction. I can understand why -- you dont want to run them if the
action fails -- but this makes things look odd when the results of the
action print before the confirmation of its execution does. ("You
destroy the grid bug! You start bashing monsters with your pickaxe.",
etc.)

Thoughts on which bits needs to be fixed in the code and which bits
need to be fixed in the paper?

-------------8<----------------------------------------------------

EXAMPLE ONE: the 'blow' verb

There is a rocket launcher here.
There is a whistle here.
There is a lit birthday candle here.

> BLOW WHISTLE

For simplicity, parsing is currently done by looking up the first word
in a hashtable and calling each of a list of methods with the rest of
the string. Each parsing method returns a (potentially empty) list of
Actions. As the example will show, in this case only one action is
returned, PlayMusicalInstrument. The action is then dispatched, which
in the default case calls the toolActionPlayInstrument method on the
whistle.

- You blow a shrill burst upon the whistle.

> BLOW CANDLE

Here, the same parsing methods are run, but the Extinguish action is
returned instead, since the candle does not have an adapter for
IPlayInstrumentTarget, but does have an adapter for IExtinguishTarget.

- You blow out the birthday candle. Hope you made a wish.

> BLOW UP DOOR

- (with the rocket launcher)

Since the door is not itself explosive (does not implement
IBlowerUpper), the parser looks around for a tool to do the deed. It
finds one, and instantiates the BlowUp action, and dispatches it.

- [first taking the rocket launcher]

The dispatch notices the tool is not in hand, and runs a Take action
for the tool. It succeeds, and the dispatch continues, next creating
an ExplosiveDamage action targeted at the door.

- *BOOM*! The rocket hits the door and blasts it to smithereens.

In this case, the door obligingly explodes.

----Security_Multipart(Thu_Mar__6_10:21:04_2003_661)--
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (GNU/Linux)

iD8DBQA+Z3V3Ed6n5DRBYM4RAnrlAJ9+6Lc77jSzFC9K/P8cbFxKJU2QSwCeOmkm
L2jV7aFILRvKUUxPRaPiyts=
=Iw+H
-----END PGP SIGNATURE-----

----Security_Multipart(Thu_Mar__6_10:21:04_2003_661)----


From reality@twistedmatrix.com  Thu Mar  6 17:40:29 2003
From: reality@twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 6 Mar 2003 11:40:29 -0600
Subject: [Reality] Unsatisfactory Consequences
In-Reply-To: <20030306.102104.887000989.washort@twistedmatrix.com>
Message-ID: <B8DE31D2-4FFA-11D7-9352-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Thursday, March 6, 2003, at 10:21 AM, Allen Short wrote:

> To start with, the parser doesn't look at any of the participants'
> interfaces before dispatch, so "blow whistle" results in ambiguity,
> as do the other two commands.

Argh.  It should _definitely_ be doing this: based on a brief glance at 
the code I don't see how it could be.  If I get a chance to poke at 
this later in the day, I will investigate.

> ToolActions DTRT when tool = None. However, there's no feedback to
> indicate this, such as "(with the rocket)".

Hmm... this doesn't sound bad to fix in a pretty basic way, but 
separating cause and effect would allow us to format the action in a 
much more interesting way.

> There's no code for picking up tools before using, but it has been
> pointed out that this might be a feature.

However, I still believe that it ought to be _possible_ to provide this 
option to the developer and/or user.  It's a small feature of Refusal...

> Finally, events emitted by closed Doors do not propagate beyond the
> Door itself. should Door.collectImplementors check whether asker is
> self?

Probably.

I've been working on a little diagram (attached) in order to clarify 
for myself how collectImplementors is influenced by the difference 
between "outgoing" and "incoming" links.  There may be some argument I 
want to add to collectImplementors at some point.

> Another bothersome thing: formatTo methods get run only after
> doAction. I can understand why -- you dont want to run them if the
> action fails -- but this makes things look odd when the results of the
> action print before the confirmation of its execution does. ("You
> destroy the grid bug! You start bashing monsters with your pickaxe.",
> etc.)

Wow!  This totally passed me by.  However, it sheds light on the 
events-which-make-you-move problem.  (Though that was solved through 
other means...).  Each action (cause) should probably have a list of 
effects.  These effects happen in order after the action.

As an added bonus, this would give the sanity check that an action that 
has generated effects and then raised an exception is almost 
indubitably a game bug :).  However, we could still publish the events 
(until we have transactions of some kind in the game kernel, ha ha) and 
log the action / exception.

> Thoughts on which bits needs to be fixed in the code and which bits
> need to be fixed in the paper?

Well, they _all_ need to be fixed in code.  However, we may not have 
enough time to do this for the presentation of the paper, so there may 
be some shuffling into "future work".  You don't seem to be talking 
about event propogation much, so that could probably be put off (and 
might be the one that would involve the most substantial changes)

>> BLOW WHISTLE
>> BLOW CANDLE
>> BLOW UP DOOR

DEFINITELY fix this in the code.

> - [first taking the rocket launcher]

I'm inclined to say that this should be fixed too, because it'd be 
pretty trivial to add to the Refusal.

I sure hope that I can get 'net access in the hall during after my 
roundtable this afternoon.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+Z4gSvVGR4uSOE2wRAgPjAJ440KiqfCsIjhbd/Am5670Q/N6seQCff5JR
N3NmuMPTQrfztN0LgvyFVbQ=
=/SJo
-----END PGP SIGNATURE-----



From reality@twistedmatrix.com  Fri Mar  7 20:27:34 2003
From: reality@twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 7 Mar 2003 14:27:34 -0600
Subject: [Reality] packin' my gat
Message-ID: <3AE759B8-50DB-11D7-9352-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

The ambiguity issue is hopefully solved well enough for PyCon:

	bob: blow whistle
	You play a shrill blast upon a whistle.
	bob: blow door
	*BOOM*!!
	
	You fire a rocket  at a door.

The order of operations is still slightly out of whack, but I don't 
think I'm going to get to that soon :).
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+aQC7vVGR4uSOE2wRAuIvAKCAPqOlqTER3et8i6SOJRn5V2/UJwCePSpb
Uo8Yuo5B73CRh/S2P6+2UHs=
=SyO/
-----END PGP SIGNATURE-----



