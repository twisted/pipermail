From mithrandi at mithrandi.net  Sun Mar  2 12:40:21 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun Mar  2 12:40:27 2008
Subject: [Twisted-web] Divmod Nevow 0.9.31
Message-ID: <20080302174021.GA28423@mithrandi.net>

SSdtIHBsZWFzZWQgdG8gYW5ub3VuY2UgdGhlIHJlbGVhc2Ugb2YgTmV2b3cgMC45LjMxLCBhdmFp
bGFibGUgaGVyZToKCmh0dHA6Ly9kaXZtb2Qub3JnL3RyYWMvYXR0YWNobWVudC93aWtpL1NvZnR3
YXJlUmVsZWFzZXMvTmV2b3ctMC45LjMxLnRhci5nej9mb3JtYXQ9cmF3CgpDaGFuZ2VzIHNpbmNl
IHRoZSBsYXN0IGFubm91bmNlZCByZWxlYXNlICgwLjkuMjkpOgoKMC45LjMxICgyMDA4LTAyLTA2
KToKICAgLSBGaXhlZCBHdWFyZCdzIHJlcXVlc3QgcGFyYW1ldGVyIHNhdmUvcmVzdG9yZSBmZWF0
dXJlIHRvIG5vdAogICAgIGNsb2JiZXIgcmVxdWVzdCBzdGF0ZSBhZnRlciBsb2dpbiBzdWNjZWVk
cyB3aGVuIGEgc2Vzc2lvbiBoYXMKICAgICBhbHJlYWR5IGJlZW4gbmVnb3RpYXRlZC4KICAgLSBB
ZGRlZCBhIGhvb2sgdG8gbmV2b3cuZ3VhcmQuU2Vzc2lvbldyYXBwZXIgd2hpY2ggYWxsb3dzIHRo
ZQogICAgIGRvbWFpbiBwYXJhbWV0ZXIgb2YgdGhlIHNlc3Npb24gY29va2llIHRvIGJlIHNwZWNp
ZmllZC4KCjAuOS4zMCAoMjAwOC0wMS0xNik6CiAgIC0gQ2hhbmdlIERlZmVycmVkU2VyaWFsaXpl
ciBzbyB0aGF0IGl0IHBhc3NlcyBmYWlsdXJlcyBmcm9tIHRoZQogICAgIERlZmVycmVkIGJlaW5n
IHNlcmlhbGl6ZWQgb24gdG8gdGhlIERlZmVycmVkIHJldHVybmVkIGJ5IHRoZQogICAgIGZsYXR0
ZW5pbmcgZnVuY3Rpb24uICBXaXRob3V0IHRoaXMgYmVoYXZpb3IsIHRoZSBEZWZlcnJlZAogICAg
IHJldHVybmVkIGJ5IHRoZSBmbGF0dGVuaW5nIGZ1bmN0aW9uIGlzIG5ldmVyIGZpcmVkIHdoZW4g
YQogICAgIERlZmVycmVkIHdoaWNoIGZhaWxzIGlzIHNlcmlhbGl6ZWQuCgotLS0tLS0tLS0tLS0t
LSBuZXh0IHBhcnQgLS0tLS0tLS0tLS0tLS0KQSBub24tdGV4dCBhdHRhY2htZW50IHdhcyBzY3J1
YmJlZC4uLgpOYW1lOiBub3QgYXZhaWxhYmxlClR5cGU6IGFwcGxpY2F0aW9uL3BncC1zaWduYXR1
cmUKU2l6ZTogMTk3IGJ5dGVzCkRlc2M6IERpZ2l0YWwgc2lnbmF0dXJlClVybCA6IGh0dHA6Ly90
d2lzdGVkbWF0cml4LmNvbS9waXBlcm1haWwvdHdpc3RlZC13ZWIvYXR0YWNobWVudHMvMjAwODAz
MDIvMzA0NWYxNWUvYXR0YWNobWVudC5wZ3AK
From Bruno.Harbulot at manchester.ac.uk  Sun Mar  2 15:00:16 2008
From: Bruno.Harbulot at manchester.ac.uk (Bruno Harbulot)
Date: Sun Mar  2 16:10:13 2008
Subject: [Twisted-web] HTTP(S) Client with authentication support
Message-ID: <fqf10g$dur$1@ger.gmane.org>

Hello,

I'm new to Twisted, and I'd like to know if there is any HTTP(S) Client 
API that would support various authentication methods and strategies. By 
'strategy', I mean that, ideally, the client application could define 
some sort of 'strategies' to tell the client API what to reply when 
challenged with an HTTP 401 Unauthorized response code.
I guess that's feasible using HTTP Basic authentication, but I'd also 
like to be able to define when to send a client certificate for 
authentication to an HTTPS server than wants or requires it.
Could some of these goals be achieved with Twisted.Web or Twisted.Web2? 
I'm not sure where to find documentation on the subject. I'd appreciate 
any pointers or suggestions.

Best wishes,

Bruno.


From exarkun at divmod.com  Mon Mar  3 00:25:24 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon Mar  3 00:25:38 2008
Subject: [Twisted-web] HTTP(S) Client with authentication support
In-Reply-To: <fqf10g$dur$1@ger.gmane.org>
Message-ID: <20080303052524.6859.833417390.divmod.quotient.14951@ohm>

On Sun, 02 Mar 2008 20:00:16 +0000, Bruno Harbulot <bruno.harbulot@manchester.ac.uk> wrote:
>Hello,
>
>I'm new to Twisted, and I'd like to know if there is any HTTP(S) Client API 
>that would support various authentication methods and strategies. By 
>'strategy', I mean that, ideally, the client application could define some 
>sort of 'strategies' to tell the client API what to reply when challenged 
>with an HTTP 401 Unauthorized response code.
>I guess that's feasible using HTTP Basic authentication, but I'd also like 
>to be able to define when to send a client certificate for authentication to 
>an HTTPS server than wants or requires it.
>Could some of these goals be achieved with Twisted.Web or Twisted.Web2? I'm 
>not sure where to find documentation on the subject. I'd appreciate any 
>pointers or suggestions.

Support for authentication in twisted.web.client isn't very strong.  This
kind of thing would best be done by adding a a more flexible client API.

Jean-Paul

From k_r_a_j_kumar at yahoo.co.in  Tue Mar  4 09:17:17 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Tue Mar  4 09:17:56 2008
Subject: [Twisted-web] xml library in twisted
Message-ID: <315768.27988.qm@web8701.mail.in.yahoo.com>

SGkgYWxsLApJJ20gZGVhbGluZyB3aXRoIHhtbCBmaWxlcyBpbiBhIHR3aXN0ZWQgYXBwbGljYXRp
b24sCmNhbiBhbnkgb25lIHN1Z2dlc3QgbWUgdGhlIGJlc3QgeG1sIGxpYnJhcnkgaW4gdHdpc3Rl
ZD8KUHJldmlvdXNseSBpIHVzZWQgIHR3aXN0ZWQud2ViLm1pY3JvZG9tIGFuZCB0d2lzdGVkLndl
Yi5taW5pZG9tIGJ1dCB0aGV5IGRvbid0IGhhdmUgbXVjaCBvZiB0aGUgZnVuY3Rpb25hbGl0aWVz
Li4uLgpJcyB0aGVyZSBhbnkgb3RoZXIgeG1sIGxpYnJhcnkgaW4gdHdpc3RlZCB3aGljaCBtYWtl
cyBpdCBlYXN5IHdpdGggbG90IG9mIG9wdGlvbnM/Ckkgd2FudGVkIHRvIGNyZWF0ZSBhIHhtbCBm
aWxlIGxpa2UgdGhpcy4uLgoKPGdhbWU+CiAgICA8cGxheWVyMT4KICAgICAgICAgICAgPHN0dWZm
PgogICAgICAgICAgICA8L3N0dWZmPgogICAgPC9wbGF5ZXIxPgogICAgPHBsYXllcjI+CiAgICAg
ICAgICAgIDxzdHVmZj4KICAgICAgICAgICAgPC9zdHVmZj4KICAgIDwvcGxheWVyMj4KPC9nYW1l
PgoKYW5kIHdhbnQgdG8gYWNjZXNzIHRoYXQgcGxheWVyIHN0dWZmIGRpcmVjdGx5Li4obGlrZSBh
IHRyZWUgc3RydWN0dXJlKQoKVGhhbmsgeW91IGluIGFkdmFuY2UuCgoKCgogICAgICBOb3cgeW91
IGNhbiBjaGF0IHdpdGhvdXQgZG93bmxvYWRpbmcgbWVzc2VuZ2VyLiBHbyB0byBodHRwOi8vaW4u
bWVzc2VuZ2VyLnlhaG9vLmNvbS93ZWJtZXNzZW5nZXJwcm9tby5waHAKLS0tLS0tLS0tLS0tLS0g
bmV4dCBwYXJ0IC0tLS0tLS0tLS0tLS0tCkFuIEhUTUwgYXR0YWNobWVudCB3YXMgc2NydWJiZWQu
Li4KVVJMOiBodHRwOi8vdHdpc3RlZG1hdHJpeC5jb20vcGlwZXJtYWlsL3R3aXN0ZWQtd2ViL2F0
dGFjaG1lbnRzLzIwMDgwMzA0L2U3YWEyNDk2L2F0dGFjaG1lbnQuaHRtCg==
From michal.dtz at gmail.com  Tue Mar  4 10:19:05 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue Mar  4 10:19:18 2008
Subject: [Twisted-web] xml library in twisted
In-Reply-To: <315768.27988.qm@web8701.mail.in.yahoo.com>
References: <315768.27988.qm@web8701.mail.in.yahoo.com>
Message-ID: <20080304161905.026a7fba@2step.chello.pl>

Dnia 2008-03-04, o godz. 19:47:17
Raj kumar <k_r_a_j_kumar@yahoo.co.in> napisa?(a):

> Hi all,
> I'm dealing with xml files in a twisted application,
> can any one suggest me the best xml library in twisted?
> Previously i used  twisted.web.microdom and twisted.web.minidom but
> they don't have much of the functionalities.... Is there any other
> xml library in twisted which makes it easy with lot of options? I
> wanted to create a xml file like this...

Are you completly sure you need XML at all?

Allow me to cite http://dirtsimple.org/2004/12/python-is-not-java.html :

"""
XML is not the answer. It is not even the question. To paraphrase
Jamie Zawinski on regular expressions, "Some people, when confronted
with a problem, think "I know, I'll use XML." Now they have two
problems."

This is a different situation than in Java, because compared to Java
code, XML is agile and flexible. Compared to Python code, XML is a boat
anchor, a ball and chain. In Python, XML is something you use for
interoperability, not your core functionality, because you simply don't
need it for that. In Java, XML can be your savior because it lets you
implement domain-specific languages and increase the flexibility of
your application "without coding". In Java, avoiding coding is an
advantage because coding means recompiling. But in Python, more often
than not, code is easier to write than XML. And Python can process code
much, much faster than your code can process XML. (Not only that, but
you have to write the XML processing code, whereas Python itself is
already written for you.)

[...]

(The only exception to this is if your target audience really really
needs XML for some strange reason. Like, they refuse to learn Python
and will only pay you if you use XML, or if you plan to give them a
nice GUI for editing the XML, and the GUI in question is something that
somebody else wrote for editing XML and you get to use it for free.
There are also other, very rare, architectural reasons to need XML.
Trust me, they don't apply to your app. If in doubt, explain your use
case for XML to an experienced Python developer. Or, if you have a
thick skin and don't mind being laughed at, try explaining to a Lisp
programmer why your application needs XML!)
"""

-- 
m

From phil at bubblehouse.org  Tue Mar  4 11:00:43 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Mar  4 11:00:57 2008
Subject: [Twisted-web] xml library in twisted
In-Reply-To: <315768.27988.qm@web8701.mail.in.yahoo.com>
References: <315768.27988.qm@web8701.mail.in.yahoo.com>
Message-ID: <0707416A-B3F4-4578-84A7-3ADADA863F8B@bubblehouse.org>

On Mar 4, 2008, at 9:17 AM, Raj kumar wrote:
> Hi all,
> I'm dealing with xml files in a twisted application,
> can any one suggest me the best xml library in twisted?
> Previously i used  twisted.web.microdom and twisted.web.minidom but  
> they don't have much of the functionalities....
> Is there any other xml library in twisted which makes it easy with  
> lot of options?
> I wanted to create a xml file like this...
[snip snip snip]
> and want to access that player stuff directly..(like a tree structure)
>
> Thank you in advance.

Hi Raj,

What kind of functionality do you feel is missing from microdom? I've  
been using that myself with much success, although I didn't have much  
of a need for speed or XML-specific features (validation, etc).

Another thing to consider is whether you really need to parse the XML  
properly at all. If you're dealing with XML because you're getting  
some sort of datafile from a third party, and it's as simple as the  
one you described in your email, you might consider just using regular  
expressions to get the data you need.

That might be heresy among XML fanatics, but it's done the trick for  
me on quite a few occasions.

-phil

From phil at bubblehouse.org  Tue Mar  4 11:18:22 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Mar  4 11:18:34 2008
Subject: [Twisted-web] static file performance
Message-ID: <10963666-E5DF-4024-95C2-BAF7099585A2@bubblehouse.org>

Hi All,

The previous thread about http server performance made me think of  
something I've been meaning to ask about for a while.

What is the best way to send static files to the client in  
twisted.web? I know web2 had some preliminary support for mmap for  
small files, but I know it didn't work the last time I checked, and  
I'm trying to stick with twisted.web for now, anyways.

I've just been using Apache to serve static content, but I'd love to  
be able to use a pure-twisted solution.

-phil

From therve at free.fr  Tue Mar  4 15:54:22 2008
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Tue Mar  4 15:55:00 2008
Subject: [Twisted-web] static file performance
In-Reply-To: <10963666-E5DF-4024-95C2-BAF7099585A2@bubblehouse.org>
References: <10963666-E5DF-4024-95C2-BAF7099585A2@bubblehouse.org>
Message-ID: <47CDB6FE.1090204@free.fr>

Phil Christensen a ?crit :
> Hi All,
>
> The previous thread about http server performance made me think of 
> something I've been meaning to ask about for a while.
>
> What is the best way to send static files to the client in 
> twisted.web? I know web2 had some preliminary support for mmap for 
> small files, but I know it didn't work the last time I checked, and 
> I'm trying to stick with twisted.web for now, anyways.
>
> I've just been using Apache to serve static content, but I'd love to 
> be able to use a pure-twisted solution.

If you use a supported platform (Linux, FreeBSD, maybe Leopard), 
sendfile is the best way to get close to Apache performance on static 
files. The ticket #585 (http://twistedmatrix.com/trac/ticket/585) is 
where we try to do that. Unfortunately, this is a huge change, so it 
requires huge energy to get it into Twisted :). So any help on this 
ticket would be great: reviews, adding tests, performance measures, etc...

-- 
Thomas

From phil at bubblehouse.org  Tue Mar  4 16:26:07 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Mar  4 16:26:20 2008
Subject: [Twisted-web] static file performance
In-Reply-To: <47CDB6FE.1090204@free.fr>
References: <10963666-E5DF-4024-95C2-BAF7099585A2@bubblehouse.org>
	<47CDB6FE.1090204@free.fr>
Message-ID: <D3C75F93-E47A-4F6C-9A50-0334DCE7B9A2@bubblehouse.org>

On Mar 4, 2008, at 3:54 PM, Thomas Herv? wrote:
> Phil Christensen a ?crit :
>> What is the best way to send static files to the client in  
>> twisted.web? I know web2 had some preliminary support for mmap for  
>> small files, but I know it didn't work the last time I checked, and  
>> I'm trying to stick with twisted.web for now, anyways.
>
> If you use a supported platform (Linux, FreeBSD, maybe Leopard),  
> sendfile is the best way to get close to Apache performance on  
> static files. The ticket #585 (http://twistedmatrix.com/trac/ticket/585 
> ) is where we try to do that. Unfortunately, this is a huge change,  
> so it requires huge energy to get it into Twisted :). So any help on  
> this ticket would be great: reviews, adding tests, performance  
> measures, etc...

Hmm, that looks very promising. I'll definitely give the branch a try.

One thing I'm still kind of unclear on w.r.t. working on Twisted. How  
are you supposed to know what needs to be done for that ticket to be  
finished?

I know it's unrealistic to expect a list of "action items", but it  
seems like there are some reviewers who requested revisions, but then  
never responded to follow-up questions...

-phil
From exarkun at divmod.com  Tue Mar  4 17:03:18 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Mar  4 17:03:23 2008
Subject: [Twisted-web] static file performance
In-Reply-To: <D3C75F93-E47A-4F6C-9A50-0334DCE7B9A2@bubblehouse.org>
Message-ID: <20080304220318.6859.641780642.divmod.quotient.15609@ohm>

On Tue, 4 Mar 2008 16:26:07 -0500, Phil Christensen <phil@bubblehouse.org> wrote:
> [snip]
>One thing I'm still kind of unclear on w.r.t. working on Twisted. How  are 
>you supposed to know what needs to be done for that ticket to be  finished?

In general. look at the ticket.  If the ticket is unclear, ask questions. :)

>I know it's unrealistic to expect a list of "action items", but it  seems 
>like there are some reviewers who requested revisions, but then  never 
>responded to follow-up questions...

If you ask for some action items on a ticket, someone might provide them
for you. :)  It depends on the ticket, though, and whether there is an
informed developer who's interested enough to spend the time to do so.

Jean-Paul

From duncan.mcgreggor at gmail.com  Tue Mar  4 17:21:38 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Tue Mar  4 17:21:45 2008
Subject: [Twisted-web] static file performance
In-Reply-To: <20080304220318.6859.641780642.divmod.quotient.15609@ohm>
References: <D3C75F93-E47A-4F6C-9A50-0334DCE7B9A2@bubblehouse.org>
	<20080304220318.6859.641780642.divmod.quotient.15609@ohm>
Message-ID: <4327dfbd0803041421t460e074evd700ba2f644f8860@mail.gmail.com>

On Tue, Mar 4, 2008 at 3:03 PM, Jean-Paul Calderone <exarkun@divmod.com> wrote:
> On Tue, 4 Mar 2008 16:26:07 -0500, Phil Christensen <phil@bubblehouse.org> wrote:
>  > [snip]
>
> >One thing I'm still kind of unclear on w.r.t. working on Twisted. How  are
>  >you supposed to know what needs to be done for that ticket to be  finished?
>
>  In general. look at the ticket.  If the ticket is unclear, ask questions. :)
>
>
>  >I know it's unrealistic to expect a list of "action items", but it  seems
>  >like there are some reviewers who requested revisions, but then  never
>  >responded to follow-up questions...
>
>  If you ask for some action items on a ticket, someone might provide them
>  for you. :)  It depends on the ticket, though, and whether there is an
>  informed developer who's interested enough to spend the time to do so.

Or (gratuitous plug) a twisted dev who has been tasked via the TSF and
sponsor requests to spend time on it.

Go TSF!
  http://twistedmatrix.com/trac/wiki/TwistedSoftwareFoundation

d

From db3l.net at gmail.com  Tue Mar  4 19:13:03 2008
From: db3l.net at gmail.com (David Bolen)
Date: Tue Mar  4 19:15:13 2008
Subject: [Twisted-web] Re: static file performance
References: <10963666-E5DF-4024-95C2-BAF7099585A2@bubblehouse.org>
Message-ID: <m2bq5uqb8w.fsf@valheru.db3l.homeip.net>

Phil Christensen <phil@bubblehouse.org> writes:

> Hi All,
>
> The previous thread about http server performance made me think of
> something I've been meaning to ask about for a while.
>
> What is the best way to send static files to the client in
> twisted.web? I know web2 had some preliminary support for mmap for
> small files, but I know it didn't work the last time I checked, and
> I'm trying to stick with twisted.web for now, anyways.
>
> I've just been using Apache to serve static content, but I'd love to
> be able to use a pure-twisted solution.

I just use twisted.web.static.File - works fine.  You can subclass if
you want to give it a directory to provide access to all of its files,
but without enabling a directory listing (just override
directoryListing to return an error).

For single files, just instantiate static.File for the appropriate
file (on the fly or at startup), setting the content type if the
default mapping doesn't work.  For example, here's how I link in a
favorite icon file in one of my apps:

   favicon = static.File(os.path.join(static_dir, 'favicon.ico'),
                         defaultType='image/vnd.microsoft.icon')
   self.root.putChild('favicon.ico', favicon)

For large files, they're streamed appropriately (you can use the same
approach for your own dynamic content with static.FileTransfer, which I've
done for dynamic zip or mov file generation).

Generally, I structure my twisted.web applications so that on startup,
they construct an appropriate set of static.File objects and link them
into my root objects to provide full access to any static content.
Thus everything works in development with just the Twisted code.
Depending on deployment, you can leave it all that way, or if you
want, capture some of the static trees (like images) in a front end
server, so the requests never get to the Twisted app.  I often do
this, but it's probably more habit than anything else.

To be honest, while I'm sure there's a measurable overhead to serving
static content through Python/Twisted rather than a front end server
like Apache, I've never seen it be an issue.  Certainly streaming
large files are going to be more I/O bound than CPU bound anyway.

-- David


From phil at bubblehouse.org  Tue Mar  4 19:37:39 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Mar  4 19:38:13 2008
Subject: [Twisted-web] Re: static file performance
In-Reply-To: <m2bq5uqb8w.fsf@valheru.db3l.homeip.net>
References: <10963666-E5DF-4024-95C2-BAF7099585A2@bubblehouse.org>
	<m2bq5uqb8w.fsf@valheru.db3l.homeip.net>
Message-ID: <4FB1F5D3-62EA-455A-B06C-3EE4F7E757F4@bubblehouse.org>

On Mar 4, 2008, at 7:13 PM, David Bolen wrote:
> Phil Christensen <phil@bubblehouse.org> writes:
>> What is the best way to send static files to the client in
>> twisted.web? I know web2 had some preliminary support for mmap for
>> small files, but I know it didn't work the last time I checked, and
>> I'm trying to stick with twisted.web for now, anyways.
[snip snip snip]
> To be honest, while I'm sure there's a measurable overhead to serving
> static content through Python/Twisted rather than a front end server
> like Apache, I've never seen it be an issue.  Certainly streaming
> large files are going to be more I/O bound than CPU bound anyway.

Thanks for the tips, but I'm pretty well up to speed on the existing  
static file mechanisms. My big concern was performance, though.

Obviously it depends on the site in question. My current project has  
a large number of external assets of varying kinds, and informal  
JMeter testing is showing that serving static content separately  
improves throughput greatly, almost by an order of magnitude.

This actually makes me question whether sendfile would make much of a  
difference; considering it would only be used for files over 5MB. The  
external assets that I'm serving with Apache are all Javascript/CSS/ 
images, with some miscellaneous PDF/PPT/DOC/etc files.

For me right now, this is all just academic, anyways, since my  
current deployment setup is working just fine for me, but I'll try to  
generate some relevant stats to illustrate this later on.

Thanks all for your input,

-phil

From k_r_a_j_kumar at yahoo.co.in  Wed Mar  5 00:26:02 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Wed Mar  5 00:26:38 2008
Subject: [Twisted-web] xml library in twisted
Message-ID: <715182.70260.qm@web8704.mail.in.yahoo.com>

SGkgbWljaGFsLApUaGFuayB5b3UgZm9yIHRoZSB2YWx1YWJsZSByZXBseS4KSSBuZWVkIGEgY2xh
cmlmaWNhdGlvbiByZWdhcmRpbmcgdGhpcyB4bWwgZnJvbSB5b3UuCmZyb20geW91ciByZXBseSBp
IGdvdCB0byBrbm93IGlzLCB0aGUgZmlsZSB3aGljaCBpIHdhbnRlZCBpcyBub3QgYXQgYWxsIGFu
eSB4bWwuIApJcyBpdD8KVGhlbiBsZXQgbWUgdGVsbCB5b3UgbXkgcHJvYmxlbS4uLi4KTXkgKHNl
cnZlci1jbGllbnQpYXBwbGljYXRpb24gd2lsbCBnZXQgcGxheWVycyBpbmZvcm1hdGlvbiBmcm9t
ZGlmZmVyZW50IGNsaWVudHMgYW5kIHRoZSBzZXJ2ZXIgd2lsbCBzYXZlIHRoaXMgcGx5ZXJzIGlu
Zm9ybWF0aW9uIGluIGEqLnhtbCBmaWxlLiAKQW5kIG15IHNlcnZlciB3aWxsIHNlbmQgdGhpcyBm
aWxlIHRvIGNsaWVudHMgd2hlbiBldmVyIHRoZXkgbmVlZCBpdC4KY2FuIHlvdSBzdWdnZXN0IG1l
IGhvdyB0byBoYW5kbGUgdGhpcyBzaXR1YXRpb24/CkRvIGkgbmVlZCBhbiB4bWw/CndoYXQgeW91
IGNhbGwgdGhlIGZvbGxvd2luZyBmb3JtYXQgb2YgbXkgZmlsZSBvdGhlciB0aGFuIHhtbD8KPGdh
bWU+CiAgICA8cGxheWVyMT4KICAgICAgICAgICAgPHN0dWZmPgogICAgICAgICAgICA8L3N0dWZm
PgogICAgPC9wbGF5ZXIxPgo8L2dhbWU+CgoKUGxlYXNlIHN1Z2dlc3QgbWUgd2hhdCBraW5kIG9m
IHhtbCBzdHVmZiBpJ20gdXNpbmcgbm93PyBhbmQgYW55IGJldHRlciBvcHRpb25zIGZvciBtZT8K
ClRoYW5rIHlvdS4KCi0tLS0tIE9yaWdpbmFsIE1lc3NhZ2UgLS0tLQpGcm9tOiBNaWNoYcWCIFBh
c3Rlcm5hayA8bWljaGFsLmR0ekBnbWFpbC5jb20+ClRvOiB0d2lzdGVkLXdlYkB0d2lzdGVkbWF0
cml4LmNvbQpTZW50OiBUdWVzZGF5LCA0IE1hcmNoLCAyMDA4IDg6NDk6MDUgUE0KU3ViamVjdDog
UmU6IFtUd2lzdGVkLXdlYl0geG1sIGxpYnJhcnkgaW4gdHdpc3RlZAoKRG5pYSAyMDA4LTAzLTA0
LCBvIGdvZHouIDE5OjQ3OjE3ClJhaiBrdW1hciA8a19yX2Ffal9rdW1hckB5YWhvby5jby5pbj4g
bmFwaXNhxYIoYSk6Cgo+IEhpIGFsbCwKPiBJJ20gZGVhbGluZyB3aXRoIHhtbCBmaWxlcyBpbiBh
IHR3aXN0ZWQgYXBwbGljYXRpb24sCj4gY2FuIGFueSBvbmUgc3VnZ2VzdCBtZSB0aGUgYmVzdCB4
bWwgbGlicmFyeSBpbiB0d2lzdGVkPwo+IFByZXZpb3VzbHkgaSB1c2VkICB0d2lzdGVkLndlYi5t
aWNyb2RvbSBhbmQgdHdpc3RlZC53ZWIubWluaWRvbSBidXQKPiB0aGV5IGRvbid0IGhhdmUgbXVj
aCBvZiB0aGUgZnVuY3Rpb25hbGl0aWVzLi4uLiBJcyB0aGVyZSBhbnkgb3RoZXIKPiB4bWwgbGli
cmFyeSBpbiB0d2lzdGVkIHdoaWNoIG1ha2VzIGl0IGVhc3kgd2l0aCBsb3Qgb2Ygb3B0aW9ucz8g
SQo+IHdhbnRlZCB0byBjcmVhdGUgYSB4bWwgZmlsZSBsaWtlIHRoaXMuLi4KCkFyZSB5b3UgY29t
cGxldGx5IHN1cmUgeW91IG5lZWQgWE1MIGF0IGFsbD8KCkFsbG93IG1lIHRvIGNpdGUgaHR0cDov
L2RpcnRzaW1wbGUub3JnLzIwMDQvMTIvcHl0aG9uLWlzLW5vdC1qYXZhLmh0bWwgOgoKIiIiClhN
TCBpcyBub3QgdGhlIGFuc3dlci4gSXQgaXMgbm90IGV2ZW4gdGhlIHF1ZXN0aW9uLiBUbyBwYXJh
cGhyYXNlCkphbWllIFphd2luc2tpIG9uIHJlZ3VsYXIgZXhwcmVzc2lvbnMsICJTb21lIHBlb3Bs
ZSwgd2hlbiBjb25mcm9udGVkCndpdGggYSBwcm9ibGVtLCB0aGluayAiSSBrbm93LCBJJ2xsIHVz
ZSBYTUwuIiBOb3cgdGhleSBoYXZlIHR3bwpwcm9ibGVtcy4iCgpUaGlzIGlzIGEgZGlmZmVyZW50
IHNpdHVhdGlvbiB0aGFuIGluIEphdmEsIGJlY2F1c2UgY29tcGFyZWQgdG8gSmF2YQpjb2RlLCBY
TUwgaXMgYWdpbGUgYW5kIGZsZXhpYmxlLiBDb21wYXJlZCB0byBQeXRob24gY29kZSwgWE1MIGlz
IGEgYm9hdAphbmNob3IsIGEgYmFsbCBhbmQgY2hhaW4uIEluIFB5dGhvbiwgWE1MIGlzIHNvbWV0
aGluZyB5b3UgdXNlIGZvcgppbnRlcm9wZXJhYmlsaXR5LCBub3QgeW91ciBjb3JlIGZ1bmN0aW9u
YWxpdHksIGJlY2F1c2UgeW91IHNpbXBseSBkb24ndApuZWVkIGl0IGZvciB0aGF0LiBJbiBKYXZh
LCBYTUwgY2FuIGJlIHlvdXIgc2F2aW9yIGJlY2F1c2UgaXQgbGV0cyB5b3UKaW1wbGVtZW50IGRv
bWFpbi1zcGVjaWZpYyBsYW5ndWFnZXMgYW5kIGluY3JlYXNlIHRoZSBmbGV4aWJpbGl0eSBvZgp5
b3VyIGFwcGxpY2F0aW9uICJ3aXRob3V0IGNvZGluZyIuIEluIEphdmEsIGF2b2lkaW5nIGNvZGlu
ZyBpcyBhbgphZHZhbnRhZ2UgYmVjYXVzZSBjb2RpbmcgbWVhbnMgcmVjb21waWxpbmcuIEJ1dCBp
biBQeXRob24sIG1vcmUgb2Z0ZW4KdGhhbiBub3QsIGNvZGUgaXMgZWFzaWVyIHRvIHdyaXRlIHRo
YW4gWE1MLiBBbmQgUHl0aG9uIGNhbiBwcm9jZXNzIGNvZGUKbXVjaCwgbXVjaCBmYXN0ZXIgdGhh
biB5b3VyIGNvZGUgY2FuIHByb2Nlc3MgWE1MLiAoTm90IG9ubHkgdGhhdCwgYnV0CnlvdSBoYXZl
IHRvIHdyaXRlIHRoZSBYTUwgcHJvY2Vzc2luZyBjb2RlLCB3aGVyZWFzIFB5dGhvbiBpdHNlbGYg
aXMKYWxyZWFkeSB3cml0dGVuIGZvciB5b3UuKQoKWy4uLl0KCihUaGUgb25seSBleGNlcHRpb24g
dG8gdGhpcyBpcyBpZiB5b3VyIHRhcmdldCBhdWRpZW5jZSByZWFsbHkgcmVhbGx5Cm5lZWRzIFhN
TCBmb3Igc29tZSBzdHJhbmdlIHJlYXNvbi4gTGlrZSwgdGhleSByZWZ1c2UgdG8gbGVhcm4gUHl0
aG9uCmFuZCB3aWxsIG9ubHkgcGF5IHlvdSBpZiB5b3UgdXNlIFhNTCwgb3IgaWYgeW91IHBsYW4g
dG8gZ2l2ZSB0aGVtIGEKbmljZSBHVUkgZm9yIGVkaXRpbmcgdGhlIFhNTCwgYW5kIHRoZSBHVUkg
aW4gcXVlc3Rpb24gaXMgc29tZXRoaW5nIHRoYXQKc29tZWJvZHkgZWxzZSB3cm90ZSBmb3IgZWRp
dGluZyBYTUwgYW5kIHlvdSBnZXQgdG8gdXNlIGl0IGZvciBmcmVlLgpUaGVyZSBhcmUgYWxzbyBv
dGhlciwgdmVyeSByYXJlLCBhcmNoaXRlY3R1cmFsIHJlYXNvbnMgdG8gbmVlZCBYTUwuClRydXN0
IG1lLCB0aGV5IGRvbid0IGFwcGx5IHRvIHlvdXIgYXBwLiBJZiBpbiBkb3VidCwgZXhwbGFpbiB5
b3VyIHVzZQpjYXNlIGZvciBYTUwgdG8gYW4gZXhwZXJpZW5jZWQgUHl0aG9uIGRldmVsb3Blci4g
T3IsIGlmIHlvdSBoYXZlIGEKdGhpY2sgc2tpbiBhbmQgZG9uJ3QgbWluZCBiZWluZyBsYXVnaGVk
IGF0LCB0cnkgZXhwbGFpbmluZyB0byBhIExpc3AKcHJvZ3JhbW1lciB3aHkgeW91ciBhcHBsaWNh
dGlvbiBuZWVkcyBYTUwhKQoiIiIKCi0tIAptCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpUd2lzdGVkLXdlYiBtYWlsaW5nIGxpc3QKVHdpc3RlZC13ZWJA
dHdpc3RlZG1hdHJpeC5jb20KaHR0cDovL3R3aXN0ZWRtYXRyaXguY29tL2NnaS1iaW4vbWFpbG1h
bi9saXN0aW5mby90d2lzdGVkLXdlYgoKCgoKCgogICAgICBCb2xseXdvb2QsIGZ1biwgZnJpZW5k
c2hpcCwgc3BvcnRzIGFuZCBtb3JlLiBZb3UgbmFtZSBpdCwgd2UgaGF2ZSBpdCBvbiBodHRwOi8v
aW4ucHJvbW9zLnlhaG9vLmNvbS9ncm91cHMgIAotLS0tLS0tLS0tLS0tLSBuZXh0IHBhcnQgLS0t
LS0tLS0tLS0tLS0KQW4gSFRNTCBhdHRhY2htZW50IHdhcyBzY3J1YmJlZC4uLgpVUkw6IGh0dHA6
Ly90d2lzdGVkbWF0cml4LmNvbS9waXBlcm1haWwvdHdpc3RlZC13ZWIvYXR0YWNobWVudHMvMjAw
ODAzMDUvMjhiMWY5ODIvYXR0YWNobWVudC0wMDAxLmh0bQo=
From phil at bubblehouse.org  Wed Mar  5 00:47:44 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed Mar  5 00:48:18 2008
Subject: [Twisted-web] Re: xml library in twisted(need clarification)
In-Reply-To: <74546.39274.qm@web8708.mail.in.yahoo.com>
References: <74546.39274.qm@web8708.mail.in.yahoo.com>
Message-ID: <FDA66D08-B17A-497F-A86F-9182F0AC643B@bubblehouse.org>


On Mar 5, 2008, at 12:23 AM, Raj kumar wrote:
> Hi Phil,
> Thank you for the valuable reply.
> I need a clarification regarding this xml from you.
> from your reply i got to know is, the file which i wanted is not at  
> all any xml.
> Is it?
> Then let me tell you my problem....
> My (server-client)application will get players information from  
> different clients and the server will save this plyers information  
> in a *.xml file.
> And my server will send this file to clients when ever they need it.
> can you suggest me how to handle this situation?
> Do i need an xml?
> what you call the following format of my file other than xml?
> <game>
>     <player1>
>           <stuff>
>           </stuff>
>     </player1>
> </game>
>
> and one more thing is the problem with micrdom is i'm unable to  
> generate a tree stucture as above...everything it saves as a child  
> of  root like below..
> <game>
> <plyer1>
> <stuff>
> </stuff>
> </plyer1>
> </game>

I'm not really clear what the difference is supposed to be between  
those two samples. They seem to be semantically identical except for  
whitespace (and what I'm assuming is a typo with the plyer1 tag name).

Are you trying to output the XML in a "beautified" format?

As for whether XML is appropriate to use in this case, that's really  
up to you. It seems like you're trying to use XML as a communication  
protocol, which isn't particularly efficient, in the way that a F-16  
is not a particularly efficient way to get to the grocery store.

On the other hand, it also sounds like you control both ends of the  
wire. In that case, there's a myriad of other serialization protocols  
you might choose to transfer these attribute trees, including JSON,  
or Twisted's Perspective Broker.

> and to read all the elements from xml file again i have to use  
> domhelper. Because there is no function in microdom to read all the  
> elements in a single loop(other than read file line by line or to  
> get a specific element by getElement method).

I think you might want to try using getElementsByTagName(). It  
returns a list of matching nodes you can iterate through.

> Please suggest me what kind of xml stuff i'm using now? and any  
> better options for me?

If you're using this in the context of a Twisted app, you might as  
well use microdom, unless your XML starts getting complex and you  
need the speed of Expat or something. But again, XML is probably not  
your best choice here, except as an exercise.

-phil

From twisted-web at twistedmatrix.com  Wed Mar  5 01:38:56 2008
From: twisted-web at twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Wed Mar  5 01:38:57 2008
Subject: [Twisted-web] Pharmacy Online March 70% OFF 
Message-ID: <20080305103903.5194.qmail@leased-line-mogilev-254-142.telecom.by>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080305/435d6dc5/attachment.htm
From clemesha at gmail.com  Wed Mar  5 02:01:36 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed Mar  5 02:01:41 2008
Subject: [Twisted-web] xml library in twisted
In-Reply-To: <715182.70260.qm@web8704.mail.in.yahoo.com>
References: <715182.70260.qm@web8704.mail.in.yahoo.com>
Message-ID: <d272f0690803042301h22241220l7e803fba4023086f@mail.gmail.com>

On Tue, Mar 4, 2008 at 9:26 PM, Raj kumar <k_r_a_j_kumar@yahoo.co.in> wrote:

> Hi michal,
> Thank you for the valuable reply.
> I need a clarification regarding this xml from you.
> from your reply i got to know is, the file which i wanted is not at all
> any xml.
> Is it?
> Then let me tell you my problem....
> My (server-client)application will get players information from different
> clients and the server will save this plyers information in a *.xml file.
> And my server will send this file to clients when ever they need it.
> can you suggest me how to handle this situation?
> Do i need an xml?
> what you call the following format of my file other than xml?
>

You posted to twisted-web, so is your client a web-browser?
If so, and you are writing a game in a web-browser, then I'll
just assume that you are using javascript, in that case your
data format could most conveniently be JSON, see:
http://svn.red-bean.com/bob/simplejson/tags/simplejson-1.7/docs/index.html

or if in your game you control both clients and servers, then you should
definitely look at Perspective Broker:
http://twistedmatrix.com/projects/core/documentation/howto/pb-intro.html

in both of the above case, you data format could be as simple as python
dicts, ie:

game =3D {"player1":["some", "stuff"], "player2": ["other", "stuff"]}

simplejson converts python dicts to javascript objects and
perspective broker lets you pass around native python objects (like python
dicts).

Hope this helps,


-Alex




>
> <game>
>     <player1>
>           <stuff>
>           </stuff>
>     </player1>
> </game>
>
>
> Please suggest me what kind of xml stuff i'm using now? and any better
> options for me?
>
> Thank you.
>
> ----- Original Message ----
> From: Micha=B3 Pasternak <michal.dtz@gmail.com>
> To: twisted-web@twistedmatrix.com
> Sent: Tuesday, 4 March, 2008 8:49:05 PM
> Subject: Re: [Twisted-web] xml library in twisted
>
> Dnia 2008-03-04, o godz. 19:47:17
> Raj kumar <k_r_a_j_kumar@yahoo.co.in> napisa=B3(a):
>
> > Hi all,
> > I'm dealing with xml files in a twisted application,
> > can any one suggest me the best xml library in twisted?
> > Previously i used  twisted.web.microdom and twisted.web.minidom but
> > they don't have much of the functionalities.... Is there any other
> > xml library in twisted which makes it easy with lot of options? I
> > wanted to create a xml file like this...
>
> Are you completly sure you need XML at all?
>
> Allow me to cite http://dirtsimple.org/2004/12/python-is-not-java.html :
>
> """
> XML is not the answer. It is not even the question. To paraphrase
> Jamie Zawinski on regular expressions, "Some people, when confronted
> with a problem, think "I know, I'll use XML." Now they have two
> problems."
>
> This is a different situation than in Java, because compared to Java
> code, XML is agile and flexible. Compared to Python code, XML is a boat
> anchor, a ball and chain. In Python, XML is something you use for
> interoperability, not your core functionality, because you simply don't
> need it for that. In Java, XML can be your savior because it lets you
> implement domain-specific languages and increase the flexibility of
> your application "without coding". In Java, avoiding coding is an
> advantage because coding means recompiling. But in Python, more often
> than not, code is easier to write than XML. And Python can process code
> much, much faster than your code can process XML. (Not only that, but
> you have to write the XML processing code, whereas Python itself is
> already written for you.)
>
> [...]
>
> (The only exception to this is if your target audience really really
> needs XML for some strange reason. Like, they refuse to learn Python
> and will only pay you if you use XML, or if you plan to give them a
> nice GUI for editing the XML, and the GUI in question is something that
> somebody else wrote for editing XML and you get to use it for free.
> There are also other, very rare, architectural reasons to need XML.
> Trust me, they don't apply to your app. If in doubt, explain your use
> case for XML to an experienced Python developer. Or, if you have a
> thick skin and don't mind being laughed at, try explaining to a Lisp
> programmer why your application needs XML!)
> """
>
> --
> m
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
> ------------------------------
> Save all your chat conversations. Find them online.<http://in.rd.yahoo.co=
m/tagline_webmessenger_3/*http://in.messenger.yahoo.com/webmessengerpromo.p=
hp>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080304/11=
96298d/attachment.htm
From amcnabb at mcnabbs.org  Wed Mar  5 20:52:50 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Wed Mar  5 20:52:44 2008
Subject: [Twisted-web] status of Twisted Web and Web 2
Message-ID: <20080306015250.GB2823@mcnabbs.org>

I've been trying to understand what the current status of Twisted Web
and Web 2 are.  Everything I've found on Google seems to be a year or
two old, so I was wondering of someone here could give a more up-to-date
summary.

Is Twisted Web 2 close to becoming stable?  Is it an active project
(most of the tickets I saw on Trac were a year or two old)?  How is its
support for HTTP 1.1?  How complete is XMLRPC support on both client and
server?  Is there anything that Twisted Web is still better at than Web
2?

I've written some code that uses Twisted Web, and it seemed a little
basic.  For example, I had to make some modifications in order to
receive large files in progress instead of waiting until they were done
downloading.

I have a new project that would use a lot of HTTP and XMLRPC, and I was
wondering if it would be safer to go with Twisted Web or Twisted Web 2.
I was also wondering if there are any recent or forthcoming advancements
to look forward to.

Thanks.


-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080305/97d37fce/attachment.pgp
From exarkun at divmod.com  Wed Mar  5 21:13:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Mar  5 21:13:50 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web and Web
	2)
In-Reply-To: <20080306015250.GB2823@mcnabbs.org>
Message-ID: <20080306021345.6859.996607536.divmod.quotient.16052@ohm>

On Wed, 5 Mar 2008 18:52:50 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
> [snip]
>
>I've written some code that uses Twisted Web, and it seemed a little
>basic.  For example, I had to make some modifications in order to
>receive large files in progress instead of waiting until they were done
>downloading.

Does this code have tests?  Is it compatible with "normal" twisted.web
usage?  Can I have the code?

Jean-Paul

From glyph at divmod.com  Wed Mar  5 21:18:28 2008
From: glyph at divmod.com (glyph@divmod.com)
Date: Wed Mar  5 21:18:31 2008
Subject: [Twisted-web] status of Twisted Web and Web 2
In-Reply-To: <20080306015250.GB2823@mcnabbs.org>
References: <20080306015250.GB2823@mcnabbs.org>
Message-ID: <20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>


On 01:52 am, amcnabb@mcnabbs.org wrote:
>I've been trying to understand what the current status of Twisted Web
>and Web 2 are.  Everything I've found on Google seems to be a year or
>two old, so I was wondering of someone here could give a more up-to- 
>date
>summary.

You should read 
http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted if you 
haven't already.
>Is Twisted Web 2 close to becoming stable?

Not unless a lot of qualified people discover a lot of free time in the 
near future.
>Is it an active project (most of the tickets I saw on Trac were a year 
>or two old)?

Yes, sort of.  There really isn't a lot of manpower available.  But it's 
not dead.
>How is its support for HTTP 1.1?

It is an HTTP 1.1 server.  What else do you mean?
>How complete is XMLRPC support on both client and server?

I don't personally know, but isn't XMLRPC kind of trivially simple by 
design?  I've never heard of anyone having difficulty with XMLRPC 
support in Twisted.
>Is there anything that Twisted Web is still better at than Web 2?

Twisted Web is still quite a bit faster.  It's also simpler.  It might 
have fewer bugs, just by virtue of having been around longer and being 
more widely used.  On the other hand it might have more bugs because 
there has been less enthusiasm to work on it.

It still has twisted.web.distrib, which is a sort of  automated reverse 
proxy for UNIX-like systems; I don't think web2 has an equivalent yet. 
It doesn't sound like that'll make a difference to your application 
though.
>I've written some code that uses Twisted Web, and it seemed a little
>basic.  For example, I had to make some modifications in order to
>receive large files in progress instead of waiting until they were done
>downloading.

It would be nice if you would contribute those modifications as a patch 
and sheperd it through the process of being merged.  If more people did 
that perhaps the project wouldn't be so stagnant :).
>I have a new project that would use a lot of HTTP and XMLRPC, and I was
>wondering if it would be safer to go with Twisted Web or Twisted Web 2.

I doubt you'll have any serious problems with either one.  Unfortunately 
there is no clearly correct answer to your question at this point, but 
if you make the "wrong" decision, it shouldn't be terribly difficult to 
port your code to the "right" one later.
>I was also wondering if there are any recent or forthcoming 
>advancements
>to look forward to.

I would avoid anticipating any work on the part of the Twisted team.  I 
think that it's safe to say we are universally overworked.  There's lots 
of stuff we'd *like* to do, but not a lot that we're really able to :).
>Thanks.

My personal hope is that we will pick up maintenance on twisted.web 
again soon, merge in all the interesting features of web2 and let it 
gradually fade away, at least as a public namespace.  web2 does contain 
some very useful stuff (I think its HTTP implementation is very 
obviously better than twisted.web's; beyond being HTTP/1.1, it's better 
factored, for example).  However, it also contains many copies of things 
from twisted.web or nevow (static.File, for example, is copied in all 
three).

I'd also like to fold in large parts of Nevow and get rid, at the very 
least, of Nevow's application server components.  Ideally we'd fold in 
everything but the templating system requires _even more_ work to be 
ready for inclusion in twisted proper.  But this is all going to take a 
lot of work and the only real reward would be to get rid of the exact 
question that you are asking ("which of these two or three options 
should I use"), which, while it is important for Twisted's PR, is not a 
very satisfying outcome, at least when contrasted with fixing bugs or 
adding features.

Also, the fact that this is what I hope will happen doesn't mean it 
will.  I guess technically nobody has challenged me in a fight to the 
death for leadership of the Twisted project, so I'm still technically 
"the leader", but over the last few years we have been shifting towards 
a consensus-driven decision making process which has been working out 
pretty well.  I don't particularly like giving fiats and there's no 
mechanism in place to make sure people act upon them, so there's not 
much point.  If a competent team of a dozen people showed up tomorrow 
with tons of time to work on web stuff in twisted and decided web2 was 
where it's at, I would probably support them, since I'd be happy to have 
_any_ resolution which resulted in one correct answer to your question 
:).

From amcnabb at mcnabbs.org  Wed Mar  5 21:56:30 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Wed Mar  5 21:56:23 2008
Subject: [Twisted-web] status of Twisted Web and Web 2
In-Reply-To: <20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>
References: <20080306015250.GB2823@mcnabbs.org>
	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>
Message-ID: <20080306025630.GC2823@mcnabbs.org>

On Thu, Mar 06, 2008 at 02:18:28AM -0000, glyph@divmod.com wrote:
>
> You should read
> http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted if you
> haven't already.

Yes, I've read that, but it's pretty general rather than detailed.  For
example, when I read "I want to write a REST / WS-* interface to my
Twisted application: In this case your best bet is to use Twisted Web
directly. Porting to Twisted Web 2 for these kinds of applications will
be fairly trivial (changing a few imports, method names)."  I remember
reading this a long time ago, and it wasn't clear whether anything had
changed recently or how distant these changes were.

>> Is Twisted Web 2 close to becoming stable?
>
> Not unless a lot of qualified people discover a lot of free time in the 
> near future.
>> Is it an active project (most of the tickets I saw on Trac were a year or 
>> two old)?
>
> Yes, sort of.  There really isn't a lot of manpower available.  But it's 
> not dead.

That's not the most reassuring answer I could have expected. :)

>> How is its support for HTTP 1.1?
>
> It is an HTTP 1.1 server.  What else do you mean?

Stability and interoperability were the main things I had in mind.  How
well have the server and client been tested against other clients and
servers out there?  Does it make it easy to deal with persistent
connections?

>> How complete is XMLRPC support on both client and server?
>
> I don't personally know, but isn't XMLRPC kind of trivially simple by 
> design?  I've never heard of anyone having difficulty with XMLRPC support 
> in Twisted.

It is indeed simple, but just because something is simple doesn't mean
it works well. :)  Your second statement answers the question, though.

>> Is there anything that Twisted Web is still better at than Web 2?
>
> Twisted Web is still quite a bit faster.  It's also simpler.  It might have 
> fewer bugs, just by virtue of having been around longer and being more 
> widely used.  On the other hand it might have more bugs because there has 
> been less enthusiasm to work on it.

That is very useful information.

>> I've written some code that uses Twisted Web, and it seemed a little
>> basic.  For example, I had to make some modifications in order to
>> receive large files in progress instead of waiting until they were done
>> downloading.
>
> It would be nice if you would contribute those modifications as a patch and 
> sheperd it through the process of being merged.  If more people did that 
> perhaps the project wouldn't be so stagnant :).

It's a chicken and egg sort of thing.  When things seem quiet, you're
not sure if your patch will be appreciated. :)

In general, I'd be happy to submit this as a patch.  There's a change
I'd have to make first, though.  I wouldn't want to be ashamed of my
submission.  I'll bring that up in a new thread.

>> I have a new project that would use a lot of HTTP and XMLRPC, and I was
>> wondering if it would be safer to go with Twisted Web or Twisted Web 2.
>
> I doubt you'll have any serious problems with either one.  Unfortunately 
> there is no clearly correct answer to your question at this point, but if 
> you make the "wrong" decision, it shouldn't be terribly difficult to port 
> your code to the "right" one later.

That's very helpful information.

>> I was also wondering if there are any recent or forthcoming advancements
>> to look forward to.
>
> I would avoid anticipating any work on the part of the Twisted team.  I 
> think that it's safe to say we are universally overworked.  There's lots of 
> stuff we'd *like* to do, but not a lot that we're really able to :).

I know the feeling. :)

> I'd also like to fold in large parts of Nevow and get rid, at the very 
> least, of Nevow's application server components.

From my perspective, the most compelling thing about Twisted is the
ability to use it within other programs.  I find the low-level protocols
more uniquely useful than higher-level frameworks, especially in the
face of competition with large projects like Django.

Thank you very much for your feedback.  My questions were intentionally
open-ended, and you did a fine job answering them.  Thanks.

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080305/af7893dd/attachment.pgp
From amcnabb at mcnabbs.org  Wed Mar  5 22:09:52 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Wed Mar  5 22:09:51 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306021345.6859.996607536.divmod.quotient.16052@ohm>
References: <20080306015250.GB2823@mcnabbs.org>
	<20080306021345.6859.996607536.divmod.quotient.16052@ohm>
Message-ID: <20080306030952.GD2823@mcnabbs.org>

On Wed, Mar 05, 2008 at 09:13:44PM -0500, Jean-Paul Calderone wrote:
> On Wed, 5 Mar 2008 18:52:50 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>>
>> I've written some code that uses Twisted Web, and it seemed a little
>> basic.  For example, I had to make some modifications in order to
>> receive large files in progress instead of waiting until they were done
>> downloading.
>
> Does this code have tests?  Is it compatible with "normal" twisted.web
> usage?  Can I have the code?

My answer to all three questions is "sort of."  If you (or others) could
help me resolve a problem I ran into, I could change all of those to a
"yes."

The problem that I ran into is that with streaming requests, I would
like to be able to call back multiple times.  It makes sense that a
normal deferred can only be called back once.  I couldn't find anything
in Twisted that you might call a "multi-deferred" (to make it simple to
callback multiple times).  It's been a while, so let me see if I
remember what I tried.

My first attempt was to callback with a new deferred as the callback
value.  Then the callback function could add itself to the new deferred
and get called again the next time data arrive.  I thought this was a
clean approach, but it turns out that if you try to call back with a new
deferred, there's a TypeError.  I couldn't figure out why it didn't like
this.

My second attempt was to create a new deferred each time data arrived
and to copy the callback list from the previous deferred.  This worked,
but it felt dirty, so I got rid of it.

My third and final attempt was to tie the downloader in to my
application.  Every time data arrive, the downloader sends it to the
object that needs it.  This isn't a very general solution, but it is
very short and readable.

Anyway, if you know of a better way to deal with this issue, I would be
happy to modify my code for it.  If you're happy with what I've got, I
would be happy to email it to you, but I wouldn't recommend adding it to
Twisted Web until it's more general.

Thanks.


-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080305/3fa7adba/attachment.pgp
From glyph at divmod.com  Wed Mar  5 22:20:03 2008
From: glyph at divmod.com (glyph@divmod.com)
Date: Wed Mar  5 22:20:08 2008
Subject: [Twisted-web] status of Twisted Web and Web 2
In-Reply-To: <20080306025630.GC2823@mcnabbs.org>
References: <20080306015250.GB2823@mcnabbs.org>
	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>
	<20080306025630.GC2823@mcnabbs.org>
Message-ID: <20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>

On 02:56 am, amcnabb@mcnabbs.org wrote:
>That's not the most reassuring answer I could have expected. :)

You should have said you wanted reassuring rather than accurate - that's 
not my default mode :).
>Stability and interoperability were the main things I had in mind.  How
>well have the server and client been tested against other clients and
>servers out there?  Does it make it easy to deal with persistent
>connections?

Well, twisted.web, like I said, has been around for an aeon or two and I 
know it's been tested against a lot of things.  Apple uses web2 in its 
DAV calendar server, so I assume that's been tested against some non- 
browser clients.

We have no automated interoperability testing though.
>It's a chicken and egg sort of thing.  When things seem quiet, you're
>not sure if your patch will be appreciated. :)

Your patch might not get *accepted* but don't mistake that for a lack of 
*appreciation*.  :).  Our quality standards are very high these days and 
you can expect a lot of discussion and some push-back (a lot of push- 
back if you don't have unit tests) but we definitely appreciate every 
contribution.
>>I'd also like to fold in large parts of Nevow and get rid, at the very
>>least, of Nevow's application server components.
>
> From my perspective, the most compelling thing about Twisted is the
>ability to use it within other programs.  I find the low-level 
>protocols
>more uniquely useful than higher-level frameworks, especially in the
>face of competition with large projects like Django.

The worst thing about the current web confusion is that I think Twisted 
would be that much *more* powerful if projects like Django could build 
upon it; being the common lower-level of django, zope, cherrypy, 
turbogears, and whatever else, would draw a lot of interest for Twisted, 
and eliminate the need for the "don't use this piece of crap in a real 
deployment" webservers that many of those projects currently come with.

However, I wasn't talking about turning Twisted into some kind of Rails 
clone.  Nevow's templating would be handy for implementing "native" web 
server features that want to produce some simple HTML (like eliminating 
the god-awful hack we currently use for directory listing), but the main 
thing I'm talking about is eliminating Nevow's duplication of basic 
Twisted web-server features (it has its own resource traversal, its own 
Site object, its own static.File...).
>Thank you very much for your feedback.  My questions were intentionally
>open-ended, and you did a fine job answering them.  Thanks.

No problem.

From exarkun at divmod.com  Wed Mar  5 22:30:29 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Mar  5 22:30:34 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306030952.GD2823@mcnabbs.org>
Message-ID: <20080306033029.6859.209104412.divmod.quotient.16064@ohm>

On Wed, 5 Mar 2008 20:09:52 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>On Wed, Mar 05, 2008 at 09:13:44PM -0500, Jean-Paul Calderone wrote:
>> On Wed, 5 Mar 2008 18:52:50 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>>>
>>> I've written some code that uses Twisted Web, and it seemed a little
>>> basic.  For example, I had to make some modifications in order to
>>> receive large files in progress instead of waiting until they were done
>>> downloading.
>>
>> Does this code have tests?  Is it compatible with "normal" twisted.web
>> usage?  Can I have the code?
>
>My answer to all three questions is "sort of."  If you (or others) could
>help me resolve a problem I ran into, I could change all of those to a
>"yes."
>
>The problem that I ran into is that with streaming requests, I would
>like to be able to call back multiple times.  It makes sense that a
>normal deferred can only be called back once.  I couldn't find anything
>in Twisted that you might call a "multi-deferred" (to make it simple to
>callback multiple times).  It's been a while, so let me see if I
>remember what I tried.

To clarify, this is about calling into application code in a web server
once each time some new bytes from a request body are received from the
client, right?

>
>My first attempt was to callback with a new deferred as the callback
>value.  Then the callback function could add itself to the new deferred
>and get called again the next time data arrive.  I thought this was a
>clean approach, but it turns out that if you try to call back with a new
>deferred, there's a TypeError.  I couldn't figure out why it didn't like
>this.

Deferred.callback explicitly checks to see if you're giving it a Deferred
and raises the TypeError.  The idea here is that most of the time, you're
probably doing this by accident, not intentionally.  Clearly it wasn't an
accident in your case.  The way to actually get this behavior is to chain
the Deferreds together.  Instead of a.callback(b), which I assume you was
to send the result of b to the callbacks of a when they became available,
you a.chainDeferred(b), which is really just a way to say

  a.addCallbacks(b.callback, b.errback)

However, I don't think this is generally the approach to take.

>
>My second attempt was to create a new deferred each time data arrived
>and to copy the callback list from the previous deferred.  This worked,
>but it felt dirty, so I got rid of it.
>
>My third and final attempt was to tie the downloader in to my
>application.  Every time data arrive, the downloader sends it to the
>object that needs it.  This isn't a very general solution, but it is
>very short and readable.

This I actually like, and sounds a bit like what I would implement someday
if I were to implement something.  Of course, it should be general-purpose
so it works for other applications.  The idea I have is to allow resources
to optionally handle these new data-arrived events.  It should be possible
for a resource to signal that it wants data as it is received, perhaps by
declaring that implements a new interface (eg, IStreamingRequestHandler or
something) with a method that is called each time data is received in the
request body.  Resources which don't implement this interface will get the
old behavior of having the request body buffered and delivered all at once,
but resources which want streaming can get it.

Does that make sense?

>
>Anyway, if you know of a better way to deal with this issue, I would be
>happy to modify my code for it.  If you're happy with what I've got, I
>would be happy to email it to you, but I wouldn't recommend adding it to
>Twisted Web until it's more general.

If the above described approach sounds sensible and you want to take a
crack at it, I'd really appreciate it.  The best thing to do with the
result is attach it to a ticket in the tracker, probably #288

  http://twistedmatrix.com/trac/ticket/288

If not, I'd still like to see the code and make sure the ideas I have will
also satisfy the use-case it represents.

Thanks!

Jean-Paul

From karnaugh at karnaugh.za.net  Thu Mar  6 01:03:48 2008
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Thu Mar  6 01:04:07 2008
Subject: [Twisted-web] status of Twisted Web and Web 2
In-Reply-To: <20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>
	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
Message-ID: <47CF8944.8070006@karnaugh.za.net>

On 06/03/2008 05:20 glyph@divmod.com wrote:
> Your patch might not get *accepted* but don't mistake that for a lack of 
> *appreciation*.  :).  Our quality standards are very high these days and 
> you can expect a lot of discussion and some push-back (a lot of push- 
> back if you don't have unit tests) but we definitely appreciate every 
> contribution.

And sometimes you joyfully patch something without knowing it's 
already been fixed in trunk. :P

Regards,
-- 
Colin Fixed-logging-and-wrote-unit-tests-before-checking-trunk Alston

From dreid at dreid.org  Thu Mar  6 02:20:09 2008
From: dreid at dreid.org (David Reid)
Date: Thu Mar  6 02:20:15 2008
Subject: [Twisted-web] status of Twisted Web and Web 2
In-Reply-To: <20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
References: <20080306015250.GB2823@mcnabbs.org>
	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>
	<20080306025630.GC2823@mcnabbs.org>
	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
Message-ID: <5E916228-5E99-44BF-9113-5D7816EAE580@dreid.org>


On Mar 5, 2008, at 7:20 PM, glyph@divmod.com wrote:
>
>> It's a chicken and egg sort of thing.  When things seem quiet, you're
>> not sure if your patch will be appreciated. :)
>
> Your patch might not get *accepted* but don't mistake that for a  
> lack of *appreciation*.  :).  Our quality standards are very high  
> these days and you can expect a lot of discussion and some push-back  
> (a lot of push- back if you don't have unit tests) but we definitely  
> appreciate every contribution.

If you submit a patch a promise I'll review it thoroughly as soon as  
possible.  If you submit a patch by next week I'll be able to use  
pycon to review it as soon as possible.  If you're going to be at  
PyCon we can talk more about what it takes to a be a Twisted.Web2  
developer.  Though glyph as usual sums it up best.

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz

If you are unable to submit a patch by next week you can bug me  
repeatedly on IRC to review the patch.  Eventually you'll bug me at  
the start of 5 minutes of free time that it will take to review the  
patch.

Thank you,
-David Reid



From nico at teknico.net  Thu Mar  6 04:37:27 2008
From: nico at teknico.net (Nicola Larosa)
Date: Thu Mar  6 04:37:50 2008
Subject: [Twisted-web] Re: status of Twisted Web and Web 2
References: <20080306015250.GB2823@mcnabbs.org>
	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>
	<20080306025630.GC2823@mcnabbs.org>
	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
Message-ID: <20080306093731.991AF124131@slice.teknico.net>

glyph@divmod.com wrote:
> The worst thing about the current web confusion is that I think Twisted
> would be that much *more* powerful if projects like Django could build
> upon it; being the common lower-level of django, zope, cherrypy,
> turbogears, and whatever else, would draw a lot of interest for Twisted,
> and eliminate the need for the "don't use this piece of crap in a real
> deployment" webservers that many of those projects currently come with.

Better integration between Twisted and Django has been on my todo list for
quite a while. The current integration is done via WSGI and multithreading
each whole request, which is not exactly the way one would like to use
Twisted. ;-) Integration between Twisted and Zope is also currently done by
multithreading each whole request, AFAIK.

Unfortunately Django code may block anywhere, so there's a lot of work
trying to segment it in blocking and non-blocking parts, and hiding the
blocking ones behind deferToThread calls.

-- 
Nicola Larosa - http://www.tekNico.net/

The [European] Parliamentary Assembly therefore urges the member states,
and especially their education authorities: [...] to firmly oppose the
teaching of creationism as a scientific discipline on an equal footing
with the theory of evolution and in general resist presentation of
creationist ideas in any discipline other than religion.
 -- European Parliament, resolution 1580 (2007)




From manlio_perillo at libero.it  Thu Mar  6 05:00:06 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu Mar  6 05:00:45 2008
Subject: [Twisted-web] Re: status of Twisted Web and Web 2
In-Reply-To: <20080306093731.991AF124131@slice.teknico.net>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
	<20080306093731.991AF124131@slice.teknico.net>
Message-ID: <47CFC0A6.5030704@libero.it>

Nicola Larosa ha scritto:
> glyph@divmod.com wrote:
>> The worst thing about the current web confusion is that I think Twisted
>> would be that much *more* powerful if projects like Django could build
>> upon it; being the common lower-level of django, zope, cherrypy,
>> turbogears, and whatever else, would draw a lot of interest for Twisted,
>> and eliminate the need for the "don't use this piece of crap in a real
>> deployment" webservers that many of those projects currently come with.
> 
> Better integration between Twisted and Django has been on my todo list for
> quite a while. The current integration is done via WSGI and multithreading
> each whole request, which is not exactly the way one would like to use
> Twisted. ;-) Integration between Twisted and Zope is also currently done by
> multithreading each whole request, AFAIK.
> 
> Unfortunately Django code may block anywhere, so there's a lot of work
> trying to segment it in blocking and non-blocking parts, and hiding the
> blocking ones behind deferToThread calls.
> 

Maybe it can be of interest my work on adding asynchronous support in WSGI.

I'm developing a WSGI module for the Nginx web server:
http://hg.mperillo.ath.cx/nginx/mod_wsgi/

The great advantage of Nginx over Twisted is it's support for multiple 
worker processes; this helps a lot with application "reloading" and for 
better support of I/O bound applications.

However the number of worker processes is fixed, so if your application 
will wait "a lot" on I/O (like an HTTP request to a web application on 
the Internet) its a problem (well, this is a problem with preforked or 
multithreaded servers, too!).

So I have implemented a `ngx.poll` extension.
Some details can be found here:
http://mail.python.org/pipermail/web-sig/2008-March/003291.html

I'm fixing the latest problems, before pushing changes in the public 
repository.

I think that having a "pure" asynchronous WSGI implementation in Twisted 
Web that implements this extension can be a good starting point for 
trying to standardize asynchronous web applications.


P.S.: the wsgi.pause_output extension, proposed some years ago here by 
Donovan Preston should be very easy to implement using ngx.poll, and a pipe.





Regards   Manlio Perillo

From amcnabb at mcnabbs.org  Thu Mar  6 09:15:53 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 09:16:14 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306033029.6859.209104412.divmod.quotient.16064@ohm>
References: <20080306030952.GD2823@mcnabbs.org>
	<20080306033029.6859.209104412.divmod.quotient.16064@ohm>
Message-ID: <20080306141553.GA2296@mcnabbs.org>

On Wed, Mar 05, 2008 at 10:30:29PM -0500, Jean-Paul Calderone wrote:
>
> To clarify, this is about calling into application code in a web server
> once each time some new bytes from a request body are received from the
> client, right?

Exactly.

> Deferred.callback explicitly checks to see if you're giving it a Deferred
> and raises the TypeError.  The idea here is that most of the time, you're
> probably doing this by accident, not intentionally.  Clearly it wasn't an
> accident in your case.

I definitely was not doing it by accident. :)  Is this really a common
mistake?

> The way to actually get this behavior is to chain the Deferreds
> together.  Instead of a.callback(b), which I assume you was to send
> the result of b to the callbacks of a when they became available, you
> a.chainDeferred(b), which is really just a way to say
>
>  a.addCallbacks(b.callback, b.errback)
>
> However, I don't think this is generally the approach to take.

This actually isn't equivalent to what I was trying to do.  Think of my
approach this way.  As a user, you call:

d = streaming_download(url)

def got_some_data(value):
    new_data, d = value
    # add callback for the next time data get sent:
    d.addCallback(got_some_data)
    # do stuff with new_data

d.addCallback(got_some_data)


>> My second attempt was to create a new deferred each time data arrived
>> and to copy the callback list from the previous deferred.  This worked,
>> but it felt dirty, so I got rid of it.

Actually, after looking at my code again, it turns out that what I am
doing is actually a mix of attempt 2 and attempt 3.  This is the code
that copies the deferred:

    newdef = defer.Deferred()
    newdef.callbacks = list(self.deferred.callbacks)
    newdef.callback(False)


>> My third and final attempt was to tie the downloader in to my
>> application.  Every time data arrive, the downloader sends it to the
>> object that needs it.  This isn't a very general solution, but it is
>> very short and readable.
>
> This I actually like, and sounds a bit like what I would implement someday
> if I were to implement something.  Of course, it should be general-purpose
> so it works for other applications.  The idea I have is to allow resources
> to optionally handle these new data-arrived events.  It should be possible
> for a resource to signal that it wants data as it is received, perhaps by
> declaring that implements a new interface (eg, IStreamingRequestHandler or
> something) with a method that is called each time data is received in the
> request body.  Resources which don't implement this interface will get the
> old behavior of having the request body buffered and delivered all at once,
> but resources which want streaming can get it.
>
> Does that make sense?

That makes sense, but in the streaming case I really think that you need
to call back every time data comes in.

> If the above described approach sounds sensible and you want to take a
> crack at it, I'd really appreciate it.  The best thing to do with the
> result is attach it to a ticket in the tracker, probably #288
>
>  http://twistedmatrix.com/trac/ticket/288
>
> If not, I'd still like to see the code and make sure the ideas I have will
> also satisfy the use-case it represents.

I'm certainly willing to help, although I think we have some things to
clean up.

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/c95c47f9/attachment.pgp
From amcnabb at mcnabbs.org  Thu Mar  6 09:33:24 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 09:33:42 2008
Subject: [Twisted-web] status of Twisted Web and Web 2
In-Reply-To: <20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
References: <20080306015250.GB2823@mcnabbs.org>
	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>
	<20080306025630.GC2823@mcnabbs.org>
	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
Message-ID: <20080306143324.GB2873@mcnabbs.org>

On Thu, Mar 06, 2008 at 03:20:03AM -0000, glyph@divmod.com wrote:
> On 02:56 am, amcnabb@mcnabbs.org wrote:
>> That's not the most reassuring answer I could have expected. :)
>
> You should have said you wanted reassuring rather than accurate - that's 
> not my default mode :).

Accurate is best, but sometimes it's nice when reassuring comes along,
too. :)


> Well, twisted.web, like I said, has been around for an aeon or two and I 
> know it's been tested against a lot of things.  Apple uses web2 in its DAV 
> calendar server, so I assume that's been tested against some non- browser 
> clients.

That's helpful to know.

I know you agree, but it really would be nice to not have to pick
between the two.  There's this worry in the back of my mind that going
with web will force me to do a rewrite as soon as deprecated (whenever
that happens).

> Your patch might not get *accepted* but don't mistake that for a lack of 
> *appreciation*.  :).  Our quality standards are very high these days and 
> you can expect a lot of discussion and some push-back (a lot of push- back 
> if you don't have unit tests) but we definitely appreciate every 
> contribution.

Right.  But my point was that if a project is too quiet, your patch can
come on dead ears.  Getting rejected for quality reasons is productive.
Getting ignored is not.  I'm glad to hear that Twisted web/web2 isn't
that quiet (it's hard to tell from the web site).

> The worst thing about the current web confusion is that I think Twisted 
> would be that much *more* powerful if projects like Django could build upon 
> it; being the common lower-level of django, zope, cherrypy, turbogears, and 
> whatever else, would draw a lot of interest for Twisted, and eliminate the 
> need for the "don't use this piece of crap in a real deployment" webservers 
> that many of those projects currently come with.

That would be cool, I admit.  Really cool.

I still personally get a bigger kick out of Twisted as an API than
Twisted as an application.  For example, I would be thrilled if I ever
saw a Twisted replacement for urllib2, with streaming and everything.
That would be really cool.


-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/1e58a2bc/attachment.pgp
From exarkun at divmod.com  Thu Mar  6 09:51:00 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Mar  6 09:51:05 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306141553.GA2296@mcnabbs.org>
Message-ID: <20080306145100.6859.1059883588.divmod.quotient.16223@ohm>

On Thu, 6 Mar 2008 07:15:53 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>On Wed, Mar 05, 2008 at 10:30:29PM -0500, Jean-Paul Calderone wrote:
>>
>> To clarify, this is about calling into application code in a web server
>> once each time some new bytes from a request body are received from the
>> client, right?
>
>Exactly.
>
>> Deferred.callback explicitly checks to see if you're giving it a Deferred
>> and raises the TypeError.  The idea here is that most of the time, you're
>> probably doing this by accident, not intentionally.  Clearly it wasn't an
>> accident in your case.
>
>I definitely was not doing it by accident. :)  Is this really a common
>mistake?

I have absolutely no statistics on the frequency of this error.  I suspect
that it isn't, but I may be wrong.  The check was added years ago, presumably
by someone who thought it was/would be.

>
>> The way to actually get this behavior is to chain the Deferreds
>> together.  Instead of a.callback(b), which I assume you was to send
>> the result of b to the callbacks of a when they became available, you
>> a.chainDeferred(b), which is really just a way to say
>>
>>  a.addCallbacks(b.callback, b.errback)
>>
>> However, I don't think this is generally the approach to take.
>
>This actually isn't equivalent to what I was trying to do.  Think of my
>approach this way.  As a user, you call:
>
>d = streaming_download(url)
>
>def got_some_data(value):
>    new_data, d = value
>    # add callback for the next time data get sent:
>    d.addCallback(got_some_data)
>    # do stuff with new_data
>
>d.addCallback(got_some_data)
>

Ah.  So the case that doesn't work is when the result of the Deferred is
really a new, perhaps totally unrelated, Deferred that someone wants.  I
can see how that would be useful.  I think I've actually encountered the
case before myself.  It might be worth complaining about this misfeature
on the other list (twisted-python).

>
>>> My second attempt was to create a new deferred each time data arrived
>>> and to copy the callback list from the previous deferred.  This worked,
>>> but it felt dirty, so I got rid of it.
>
>Actually, after looking at my code again, it turns out that what I am
>doing is actually a mix of attempt 2 and attempt 3.  This is the code
>that copies the deferred:
>
>    newdef = defer.Deferred()
>    newdef.callbacks = list(self.deferred.callbacks)
>    newdef.callback(False)
>

*cries*

You're not supposed to read or write the `callbacks? attribute like that.

>
>>> My third and final attempt was to tie the downloader in to my
>>> application.  Every time data arrive, the downloader sends it to the
>>> object that needs it.  This isn't a very general solution, but it is
>>> very short and readable.
>>
>> This I actually like, and sounds a bit like what I would implement someday
>> if I were to implement something.  Of course, it should be general-purpose
>> so it works for other applications.  The idea I have is to allow resources
>> to optionally handle these new data-arrived events.  It should be possible
>> for a resource to signal that it wants data as it is received, perhaps by
>> declaring that implements a new interface (eg, IStreamingRequestHandler or
>> something) with a method that is called each time data is received in the
>> request body.  Resources which don't implement this interface will get the
>> old behavior of having the request body buffered and delivered all at once,
>> but resources which want streaming can get it.
>>
>> Does that make sense?
>
>That makes sense, but in the streaming case I really think that you need
>to call back every time data comes in.

Yes, definitely.  `IStreamingRequestHandler? would have some method like
`someMoreRequestDataReceived? and it would be called as many times as
necessary for a single request until the entire request body has been
delivered.

>
>> If the above described approach sounds sensible and you want to take a
>> crack at it, I'd really appreciate it.  The best thing to do with the
>> result is attach it to a ticket in the tracker, probably #288
>>
>>  http://twistedmatrix.com/trac/ticket/288
>>
>> If not, I'd still like to see the code and make sure the ideas I have will
>> also satisfy the use-case it represents.
>
>I'm certainly willing to help, although I think we have some things to
>clean up.
>

Jean-Paul

From amcnabb at mcnabbs.org  Thu Mar  6 10:13:56 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 10:13:50 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306145100.6859.1059883588.divmod.quotient.16223@ohm>
References: <20080306141553.GA2296@mcnabbs.org>
	<20080306145100.6859.1059883588.divmod.quotient.16223@ohm>
Message-ID: <20080306151356.GB2270@mcnabbs.org>

T24gVGh1LCBNYXIgMDYsIDIwMDggYXQgMDk6NTE6MDBBTSAtMDUwMCwgSmVhbi1QYXVsIENhbGRl
cm9uZSB3cm90ZToKPj4KPj4gQWN0dWFsbHksIGFmdGVyIGxvb2tpbmcgYXQgbXkgY29kZSBhZ2Fp
biwgaXQgdHVybnMgb3V0IHRoYXQgd2hhdCBJIGFtCj4+IGRvaW5nIGlzIGFjdHVhbGx5IGEgbWl4
IG9mIGF0dGVtcHQgMiBhbmQgYXR0ZW1wdCAzLiAgVGhpcyBpcyB0aGUgY29kZQo+PiB0aGF0IGNv
cGllcyB0aGUgZGVmZXJyZWQ6Cj4+Cj4+ICAgIG5ld2RlZiA9IGRlZmVyLkRlZmVycmVkKCkKPj4g
ICAgbmV3ZGVmLmNhbGxiYWNrcyA9IGxpc3Qoc2VsZi5kZWZlcnJlZC5jYWxsYmFja3MpCj4+ICAg
IG5ld2RlZi5jYWxsYmFjayhGYWxzZSkKPj4KPgo+ICpjcmllcyoKPgo+IFlvdSdyZSBub3Qgc3Vw
cG9zZWQgdG8gcmVhZCBvciB3cml0ZSB0aGUgYGNhbGxiYWNrc8K0IGF0dHJpYnV0ZSBsaWtlIHRo
YXQuCgpJIHRvbGQgeW91IEkgdGhvdWdodCB0aGF0IHdhcyB1Z2x5LiAgRG8geW91IGhhdmUgYSBi
ZXR0ZXIgd2F5IHRvIGRvCnRoaXM/IDopCgo+PiBUaGF0IG1ha2VzIHNlbnNlLCBidXQgaW4gdGhl
IHN0cmVhbWluZyBjYXNlIEkgcmVhbGx5IHRoaW5rIHRoYXQgeW91Cj4+IG5lZWQgdG8gY2FsbCBi
YWNrIGV2ZXJ5IHRpbWUgZGF0YSBjb21lcyBpbi4KPgo+IFllcywgZGVmaW5pdGVseS4gIGBJU3Ry
ZWFtaW5nUmVxdWVzdEhhbmRsZXLCtCB3b3VsZCBoYXZlIHNvbWUgbWV0aG9kIGxpa2UKPiBgc29t
ZU1vcmVSZXF1ZXN0RGF0YVJlY2VpdmVkwrQgYW5kIGl0IHdvdWxkIGJlIGNhbGxlZCBhcyBtYW55
IHRpbWVzIGFzCj4gbmVjZXNzYXJ5IGZvciBhIHNpbmdsZSByZXF1ZXN0IHVudGlsIHRoZSBlbnRp
cmUgcmVxdWVzdCBib2R5IGhhcyBiZWVuCj4gZGVsaXZlcmVkLgoKWW91IHN0aWxsIHdhbnQgY2Fs
bGJhY2tzLiAgWW91IG1pZ2h0IGhhdmUgb3RoZXIgcGxhY2VzIHRoYXQgbmVlZApub3RpZmljYXRp
b24gb2YgdGhlIGV2ZW50LiAgV2UgZG9uJ3Qgd2FudCB0byBjYWxsIGEgbWV0aG9kIG92ZXIgYW5k
Cm92ZXIuICBXZSB3YW50IHRvIF9jYWxsYmFja18gb3ZlciBhbmQgb3Zlci4KCgotLSAKQW5kcmV3
IE1jTmFiYgpodHRwOi8vd3d3Lm1jbmFiYnMub3JnL2FuZHJldy8KUEdQIEZpbmdlcnByaW50OiA4
QTE3IEI1N0MgNjg3OSAxODYzIERFNTUgIDgwMTIgQUI0RCA2MDk4IDg4MjYgNjg2OAotLS0tLS0t
LS0tLS0tLSBuZXh0IHBhcnQgLS0tLS0tLS0tLS0tLS0KQSBub24tdGV4dCBhdHRhY2htZW50IHdh
cyBzY3J1YmJlZC4uLgpOYW1lOiBub3QgYXZhaWxhYmxlClR5cGU6IGFwcGxpY2F0aW9uL3BncC1z
aWduYXR1cmUKU2l6ZTogMTg5IGJ5dGVzCkRlc2M6IG5vdCBhdmFpbGFibGUKVXJsIDogaHR0cDov
L3R3aXN0ZWRtYXRyaXguY29tL3BpcGVybWFpbC90d2lzdGVkLXdlYi9hdHRhY2htZW50cy8yMDA4
MDMwNi9kMzJlMDI0MS9hdHRhY2htZW50LTAwMDEucGdwCg==
From exarkun at divmod.com  Thu Mar  6 10:28:26 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Mar  6 10:28:31 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306151356.GB2270@mcnabbs.org>
Message-ID: <20080306152826.6859.1547728457.divmod.quotient.16238@ohm>

On Thu, 6 Mar 2008 08:13:56 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>On Thu, Mar 06, 2008 at 09:51:00AM -0500, Jean-Paul Calderone wrote:
>>>
>>> Actually, after looking at my code again, it turns out that what I am
>>> doing is actually a mix of attempt 2 and attempt 3.  This is the code
>>> that copies the deferred:
>>>
>>>    newdef = defer.Deferred()
>>>    newdef.callbacks = list(self.deferred.callbacks)
>>>    newdef.callback(False)
>>>
>>
>> *cries*
>>
>> You're not supposed to read or write the `callbacks? attribute like that.
>
>I told you I thought that was ugly.  Do you have a better way to do
>this? :)

Not directly.  I'd probably try turning the code inside-out side that
code which wants a group of callbacks to be used for more than one event
has an opportunity to get more than one "fresh" Deferred from the event
source and can add the callbacks to as many of them as it likes.  Hopefully
this will all be mooted by the other potential solution.

>
>>> That makes sense, but in the streaming case I really think that you
>>> need to call back every time data comes in.
>>
>> Yes, definitely.  `IStreamingRequestHandler? would have some method like
>> `someMoreRequestDataReceived? and it would be called as many times as
>> necessary for a single request until the entire request body has been
>> delivered.
>
>You still want callbacks.  You might have other places that need
>notification of the event.  We don't want to call a method over and
>over.  We want to _callback_ over and over.
>

This... I don't understand.  A callback is just an object which is callable,
often with some arguments.  I would generally use the word "callback" to
describe what `someMoreRequestDataReceived? is.  Why do you think it doesn't
qualify, and what do you mean when you say "callback"?

Jean-Paul

From amcnabb at mcnabbs.org  Thu Mar  6 10:46:59 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 10:46:52 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
Message-ID: <20080306154659.GC2270@mcnabbs.org>

T24gVGh1LCBNYXIgMDYsIDIwMDggYXQgMTA6Mjg6MjZBTSAtMDUwMCwgSmVhbi1QYXVsIENhbGRl
cm9uZSB3cm90ZToKCj4gVGhpcy4uLiBJIGRvbid0IHVuZGVyc3RhbmQuICBBIGNhbGxiYWNrIGlz
IGp1c3QgYW4gb2JqZWN0IHdoaWNoIGlzIGNhbGxhYmxlLAo+IG9mdGVuIHdpdGggc29tZSBhcmd1
bWVudHMuICBJIHdvdWxkIGdlbmVyYWxseSB1c2UgdGhlIHdvcmQgImNhbGxiYWNrIiB0bwo+IGRl
c2NyaWJlIHdoYXQgYHNvbWVNb3JlUmVxdWVzdERhdGFSZWNlaXZlZMK0IGlzLiAgV2h5IGRvIHlv
dSB0aGluayBpdCBkb2Vzbid0Cj4gcXVhbGlmeSwgYW5kIHdoYXQgZG8geW91IG1lYW4gd2hlbiB5
b3Ugc2F5ICJjYWxsYmFjayI/CgpTb3JyeSBhYm91dCB0aGUgY29uZnVzaW9uIChjYWxsYmFjayBh
cyBub3VuIHZzLiBjYWxsYmFjayBhcyB2ZXJiKS4gIFdoZW4KSSBzYWlkIGNhbGxiYWNrLCBJIG1l
YW50IHRoZSB2ZXJiOgoKc29tZV9kZWZlcnJlZC5jYWxsYmFjayhzb21lX3ZhbHVlKQoKSSB3YW50
IHRvIGdvIHRocm91Z2ggdGhlIG5vcm1hbCBjYWxsYmFjay9lcnJiYWNrIG1lY2hhbmlzbSByYXRo
ZXIgdGhhbgpjcmVhdGluZyBhIGJyYW5kIG5ldyBzeXN0ZW0gdG8gZG8gdGhlIHNhbWUgdGhpbmcu
ICBJZGVhbGx5IHdlJ2QgYmUgYWJsZQp0byBjYWxsYmFjayBhIHNpbmdsZSBkZWZlcnJlZCBtdWx0
aXBsZSB0aW1lcyAobWF5YmUgaXQgd291bGQgYmUgYQoiTXVsdGlEZWZlcnJlZCIgcmF0aGVyIHRo
YW4gIkRlZmVycmVkIikuICBUaGlzIHdheSB5b3Ugd291bGRuJ3QgaGF2ZSB0bwpjYWxsIGFkZENh
bGxiYWNrIG92ZXIgYW5kIG92ZXIuCgpEb2VzIHRoYXQgbWFrZSBteSBwb2ludCBtb3JlIGNsZWFy
PwoKVGhhbmtzLgoKLS0gCkFuZHJldyBNY05hYmIKaHR0cDovL3d3dy5tY25hYmJzLm9yZy9hbmRy
ZXcvClBHUCBGaW5nZXJwcmludDogOEExNyBCNTdDIDY4NzkgMTg2MyBERTU1ICA4MDEyIEFCNEQg
NjA5OCA4ODI2IDY4NjgKLS0tLS0tLS0tLS0tLS0gbmV4dCBwYXJ0IC0tLS0tLS0tLS0tLS0tCkEg
bm9uLXRleHQgYXR0YWNobWVudCB3YXMgc2NydWJiZWQuLi4KTmFtZTogbm90IGF2YWlsYWJsZQpU
eXBlOiBhcHBsaWNhdGlvbi9wZ3Atc2lnbmF0dXJlClNpemU6IDE4OSBieXRlcwpEZXNjOiBub3Qg
YXZhaWxhYmxlClVybCA6IGh0dHA6Ly90d2lzdGVkbWF0cml4LmNvbS9waXBlcm1haWwvdHdpc3Rl
ZC13ZWIvYXR0YWNobWVudHMvMjAwODAzMDYvMmZhNGVjNTYvYXR0YWNobWVudC5wZ3AK
From radix at twistedmatrix.com  Thu Mar  6 10:55:00 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu Mar  6 10:55:11 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web and
	Web 2)
In-Reply-To: <20080306154659.GC2270@mcnabbs.org>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
	<20080306154659.GC2270@mcnabbs.org>
Message-ID: <60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>

On Thu, Mar 6, 2008 at 10:46 AM, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
> On Thu, Mar 06, 2008 at 10:28:26AM -0500, Jean-Paul Calderone wrote:
>
>  > This... I don't understand.  A callback is just an object which is callable,
>  > often with some arguments.  I would generally use the word "callback" to
>  > describe what `someMoreRequestDataReceived? is.  Why do you think it doesn't
>  > qualify, and what do you mean when you say "callback"?
>
>  Sorry about the confusion (callback as noun vs. callback as verb).  When
>  I said callback, I meant the verb:
>
>  some_deferred.callback(some_value)
>
>  I want to go through the normal callback/errback mechanism rather than
>  creating a brand new system to do the same thing.  Ideally we'd be able
>  to callback a single deferred multiple times (maybe it would be a
>  "MultiDeferred" rather than "Deferred").  This way you wouldn't have to
>  call addCallback over and over.
>
>  Does that make my point more clear?

This is really overcomplicating things. Calling a method repeatedly
with some data is a very simple and very effective and very
conventional way (not a "new system!") of streaming some data to an
object. This is how our protocol system works: IProtocol.dataReceived
gets called every time some data comes in over the network.
LineReceiver.lineReceived gets called every time a line is received.
In this case, IStreamingRequestHandler.streamingDataReceived could be
called. I think you should take exarkun's advice. Adding deferreds
will just make it pointlessly complicated and slower than it needs to
be.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
From dreid at dreid.org  Thu Mar  6 10:56:56 2008
From: dreid at dreid.org (David Reid)
Date: Thu Mar  6 10:57:02 2008
Subject: WSGI support (was [Twisted-web] Re: status of Twisted Web and Web
	2)
In-Reply-To: <47CFC0A6.5030704@libero.it>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
	<20080306093731.991AF124131@slice.teknico.net>
	<47CFC0A6.5030704@libero.it>
Message-ID: <B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>


On Mar 6, 2008, at 2:00 AM, Manlio Perillo wrote:
> Maybe it can be of interest my work on adding asynchronous support  
> in WSGI.
>
> I'm developing a WSGI module for the Nginx web server:
> http://hg.mperillo.ath.cx/nginx/mod_wsgi/
>
> The great advantage of Nginx over Twisted is it's support for  
> multiple worker processes; this helps a lot with application  
> "reloading" and for better support of I/O bound applications.

I'm not quite convinced that the concurrency model of the container is  
the real bottleneck in WSGI applications as opposed to it's  
synchronous API.
A Twisted WSGI container could use a process pool just as easily as a  
thread pool, but you're still taking a properly asynchronous container  
and letting it run an application that will block for a long period of  
time.

> I think that having a "pure" asynchronous WSGI implementation in  
> Twisted Web that implements this extension can be a good starting  
> point for trying to standardize asynchronous web applications.
>
>
> P.S.: the wsgi.pause_output extension, proposed some years ago here  
> by Donovan Preston should be very easy to implement using ngx.poll,  
> and a pipe.

Does anyone support said extension?  Does everyone support the same  
pause_output? Or just functions of the same name?

It shouldn't be very hard to add support for it to Twisted.web2's WSGI  
implementation either, but I don't much see the point if no one else  
supports it.  I'm not convinced that WSGI is at all a useful means of  
writing asynchronous web applications.  I think WSGI's only benefit is  
that it allows you to almost write your application code once and run  
it on multiple containers.

-David

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz







From glyph at divmod.com  Thu Mar  6 11:04:25 2008
From: glyph at divmod.com (glyph@divmod.com)
Date: Thu Mar  6 11:04:29 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web and
	Web 2)
In-Reply-To: <20080306145100.6859.1059883588.divmod.quotient.16223@ohm>
References: <20080306141553.GA2296@mcnabbs.org>
	<20080306145100.6859.1059883588.divmod.quotient.16223@ohm>
Message-ID: <20080306160425.21558.793554328.divmod.xquotient.7523@joule.divmod.com>

On 02:51 pm, exarkun@divmod.com wrote:
>Yes, definitely.  `IStreamingRequestHandler=B4 would have some method =

>like
>`someMoreRequestDataReceived=B4 and it would be called as many times as
>necessary for a single request until the entire request body has been
>delivered.

I'm a big fan of using IProtocol for things like this, so that existing =

code can be used to parse the request data.  I might buy the argument =

that the absence of a reasonable "transport.write()" would be a reason =

to have a distinct interface, but there can and should still be a =

trivial explicit adapter from IProtocol to this new interface.

(Please nobody ever actually name a method =

"someMoreRequestDataReceived".  I would cry.)

From amcnabb at mcnabbs.org  Thu Mar  6 11:16:10 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 11:16:04 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
	<20080306154659.GC2270@mcnabbs.org>
	<60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>
Message-ID: <20080306161610.GD2270@mcnabbs.org>

On Thu, Mar 06, 2008 at 10:55:00AM -0500, Christopher Armstrong wrote:
> 
> This is really overcomplicating things. Calling a method repeatedly
> with some data is a very simple and very effective and very
> conventional way (not a "new system!") of streaming some data to an
> object. This is how our protocol system works: IProtocol.dataReceived
> gets called every time some data comes in over the network.
> LineReceiver.lineReceived gets called every time a line is received.
> In this case, IStreamingRequestHandler.streamingDataReceived could be
> called. I think you should take exarkun's advice. Adding deferreds
> will just make it pointlessly complicated and slower than it needs to
> be.

I appreciate your point, and I can probably be convinced that this way
is better.  However, it's not obvious that calling back multiple times
is pointlessly complicated.  I could easily argue that having dozens of
interfaces like IProtocol and LineReceiver and IStreamingRequestHandler
and IHaveToKeepTrackOfTooManyInterfaces is also pointlessly complicated.

Just in my limited experience with Twisted, figuring out how it deals
with deferreds and callbacks was easy.  Figuring out how all of the
classes and interfaces interact was/is much more difficult.  The problem
is that every time you learn about a new class or interface, you have to
learn all of the nuances of that class.


-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/c96b2e7c/attachment.pgp
From amcnabb at mcnabbs.org  Thu Mar  6 11:17:15 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 11:17:08 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306160425.21558.793554328.divmod.xquotient.7523@joule.divmod.com>
References: <20080306141553.GA2296@mcnabbs.org>
	<20080306145100.6859.1059883588.divmod.quotient.16223@ohm>
	<20080306160425.21558.793554328.divmod.xquotient.7523@joule.divmod.com>
Message-ID: <20080306161715.GE2270@mcnabbs.org>

On Thu, Mar 06, 2008 at 04:04:25PM -0000, glyph@divmod.com wrote:
>
> I'm a big fan of using IProtocol for things like this, so that existing 
> code can be used to parse the request data.  I might buy the argument that 
> the absence of a reasonable "transport.write()" would be a reason to have a 
> distinct interface, but there can and should still be a trivial explicit 
> adapter from IProtocol to this new interface.

I like your idea of using an existing interface (IProtocol) much more
than the idea of creating a brand new interface from scratch.


> (Please nobody ever actually name a method "someMoreRequestDataReceived".  
> I would cry.)

I would cry with you.

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/8f2360e0/attachment.pgp
From radix at twistedmatrix.com  Thu Mar  6 11:29:56 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu Mar  6 11:30:02 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web and
	Web 2)
In-Reply-To: <20080306161610.GD2270@mcnabbs.org>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
	<20080306154659.GC2270@mcnabbs.org>
	<60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>
	<20080306161610.GD2270@mcnabbs.org>
Message-ID: <60ed19d40803060829x3dee6aa4xc87e5265828d83@mail.gmail.com>

On Thu, Mar 6, 2008 at 11:16 AM, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
> On Thu, Mar 06, 2008 at 10:55:00AM -0500, Christopher Armstrong wrote:
>  >
>  > This is really overcomplicating things. Calling a method repeatedly
>  > with some data is a very simple and very effective and very
>  > conventional way (not a "new system!") of streaming some data to an
>  > object. This is how our protocol system works: IProtocol.dataReceived
>  > gets called every time some data comes in over the network.
>  > LineReceiver.lineReceived gets called every time a line is received.
>  > In this case, IStreamingRequestHandler.streamingDataReceived could be
>  > called. I think you should take exarkun's advice. Adding deferreds
>  > will just make it pointlessly complicated and slower than it needs to
>  > be.
>
>  I appreciate your point, and I can probably be convinced that this way
>  is better.  However, it's not obvious that calling back multiple times
>  is pointlessly complicated.  I could easily argue that having dozens of
>  interfaces like IProtocol and LineReceiver and IStreamingRequestHandler
>  and IHaveToKeepTrackOfTooManyInterfaces is also pointlessly complicated.
>
>  Just in my limited experience with Twisted, figuring out how it deals
>  with deferreds and callbacks was easy.  Figuring out how all of the
>  classes and interfaces interact was/is much more difficult.  The problem
>  is that every time you learn about a new class or interface, you have to
>  learn all of the nuances of that class.

Ok then, let's consider your approach. Let's say we have a multi-shot
deferred object. How does our application code get a reference to it?
How does the framework code get hooked up to the ultimate resource
object that wants to handle this streaming data?

The point of these questions is to indicate to you that you need to
figure out how to do this "hooking up" anyway, regardless of whether
you have a MultiDeferred, and thus a new interface (whether formalized
in terms of an Interface) must be created.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From mithrandi at mithrandi.net  Thu Mar  6 11:37:41 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu Mar  6 11:37:49 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <60ed19d40803060829x3dee6aa4xc87e5265828d83@mail.gmail.com>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
	<20080306154659.GC2270@mcnabbs.org>
	<60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>
	<20080306161610.GD2270@mcnabbs.org>
	<60ed19d40803060829x3dee6aa4xc87e5265828d83@mail.gmail.com>
Message-ID: <20080306163741.GB22261@mithrandi.net>

KiBDaHJpc3RvcGhlciBBcm1zdHJvbmcgPHJhZGl4QHR3aXN0ZWRtYXRyaXguY29tPiBbMjAwOC0w
My0wNiAxMToyOTo1NiAtMDUwMF06Cgo+IE9rIHRoZW4sIGxldCdzIGNvbnNpZGVyIHlvdXIgYXBw
cm9hY2guIExldCdzIHNheSB3ZSBoYXZlIGEgbXVsdGktc2hvdAo+IGRlZmVycmVkIG9iamVjdC4g
SG93IGRvZXMgb3VyIGFwcGxpY2F0aW9uIGNvZGUgZ2V0IGEgcmVmZXJlbmNlIHRvIGl0Pwo+IEhv
dyBkb2VzIHRoZSBmcmFtZXdvcmsgY29kZSBnZXQgaG9va2VkIHVwIHRvIHRoZSB1bHRpbWF0ZSBy
ZXNvdXJjZQo+IG9iamVjdCB0aGF0IHdhbnRzIHRvIGhhbmRsZSB0aGlzIHN0cmVhbWluZyBkYXRh
PwoKVGhlIHNhbWUgd2F5IGl0IHdvdWxkIGdldCBhY2Nlc3MgdG8gYSBvbmUtc2hvdCBEZWZlcnJl
ZC4KCj4gVGhlIHBvaW50IG9mIHRoZXNlIHF1ZXN0aW9ucyBpcyB0byBpbmRpY2F0ZSB0byB5b3Ug
dGhhdCB5b3UgbmVlZCB0bwo+IGZpZ3VyZSBvdXQgaG93IHRvIGRvIHRoaXMgImhvb2tpbmcgdXAi
IGFueXdheSwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyCj4geW91IGhhdmUgYSBNdWx0aURlZmVycmVk
LCBhbmQgdGh1cyBhIG5ldyBpbnRlcmZhY2UgKHdoZXRoZXIgZm9ybWFsaXplZAo+IGluIHRlcm1z
IG9mIGFuIEludGVyZmFjZSkgbXVzdCBiZSBjcmVhdGVkLgoKTXkgdW5kZXJzdGFuZGluZyB3YXMg
dGhhdCB0aGUgbWFpbiBhZHZhbnRhZ2Ugb2YgRGVmZXJyZWQgd2FzIHRvIHByb3ZpZGUKYSBzdGFu
ZGFyZCBpbXBsZW1lbnRhdGlvbiBvZiBjaGFpbmluZyBjYWxsYmFja3MgdG9nZXRoZXI7IHByZXN1
bWFibHkgYQoiTXVsdGlEZWZlcnJlZCIgd291bGQgYWxzbyBwcm92aWRlIHRoaXMgZnVuY3Rpb25h
bGl0eSwgd2hpbGUgcGVyc2lzdGluZwp0aGUgY2hhaW4gb3ZlciBtdWx0aXBsZSBpbnZvY2F0aW9u
cy4KCkl0IGRvZXNuJ3Qgc2VlbSBsaWtlIHRoYXQncyB0ZXJyaWJseSB1c2VmdWwgaW4gdGhpcyBw
YXJ0aWN1bGFyIGNhc2UsIGJ1dAppdCBtaWdodCBiZSB1c2VmdWwgZWxzZXdoZXJlLgotLSAKbWl0
aHJhbmRpLCBpIEFpbmlsIGVuLUJhbGFuZG9yLCBhIGZhZXIgQW1iYXIKLS0tLS0tLS0tLS0tLS0g
bmV4dCBwYXJ0IC0tLS0tLS0tLS0tLS0tCkEgbm9uLXRleHQgYXR0YWNobWVudCB3YXMgc2NydWJi
ZWQuLi4KTmFtZTogbm90IGF2YWlsYWJsZQpUeXBlOiBhcHBsaWNhdGlvbi9wZ3Atc2lnbmF0dXJl
ClNpemU6IDE5NyBieXRlcwpEZXNjOiBEaWdpdGFsIHNpZ25hdHVyZQpVcmwgOiBodHRwOi8vdHdp
c3RlZG1hdHJpeC5jb20vcGlwZXJtYWlsL3R3aXN0ZWQtd2ViL2F0dGFjaG1lbnRzLzIwMDgwMzA2
L2IxNmYwMTViL2F0dGFjaG1lbnQucGdwCg==
From phil at bubblehouse.org  Thu Mar  6 11:38:51 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu Mar  6 11:39:02 2008
Subject: WSGI support (was [Twisted-web] Re: status of Twisted Web and Web
	2)
In-Reply-To: <B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
	<20080306093731.991AF124131@slice.teknico.net>
	<47CFC0A6.5030704@libero.it>
	<B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>
Message-ID: <267E902F-7FEA-4E9D-B9A2-35C8AC7523C4@bubblehouse.org>

On Mar 6, 2008, at 10:56 AM, David Reid wrote:
> On Mar 6, 2008, at 2:00 AM, Manlio Perillo wrote:
>> I think that having a "pure" asynchronous WSGI implementation in  
>> Twisted Web that implements this extension can be a good starting  
>> point for trying to standardize asynchronous web applications.
>>
>> P.S.: the wsgi.pause_output extension, proposed some years ago here  
>> by Donovan Preston should be very easy to implement using ngx.poll,  
>> and a pipe.
>
> Does anyone support said extension?  Does everyone support the same  
> pause_output? Or just functions of the same name?
>
> It shouldn't be very hard to add support for it to Twisted.web2's  
> WSGI implementation either, but I don't much see the point if no one  
> else supports it.  I'm not convinced that WSGI is at all a useful  
> means of writing asynchronous web applications.  I think WSGI's only  
> benefit is that it allows you to almost write your application code  
> once and run it on multiple containers.

I'd have to disagree (slightly). There's nothing about WSGI that makes  
it only applicable to one approach or another (that is, synchronous  
versus asynchronous). It's just as easy to write a Deferred-using  
asynchronous application as a blocking one.

The real issue is that a "proper" WSGI app gets informed of it's  
environment by the wsgi.multithreaded and wsgi.multiprocess environ  
variables, so if you really wanted a write-once-run-anywhere, you'd  
need to be able to handle both scenarios.

As far as Twisted's WSGI implementation, it should probably support  
both approaches, maybe where some kind of argument to the WSGIResource  
class constructor determines what it specifies in the environ  
dictionary. It should be the responsibility of the WSGI application  
itself to do the right thing depending on what's inside the environ  
dict.

Also, as an aside, I have recently ported web2's WSGI support back to  
web1, and am using it on a production site with much success. I'd like  
to contribute it, but I have little to no time to participate in the  
Twisted review process. Anyone who would like a copy is welcome to it,  
however...

-phil

From radix at twistedmatrix.com  Thu Mar  6 11:42:15 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu Mar  6 11:42:18 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web and
	Web 2)
In-Reply-To: <20080306163741.GB22261@mithrandi.net>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
	<20080306154659.GC2270@mcnabbs.org>
	<60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>
	<20080306161610.GD2270@mcnabbs.org>
	<60ed19d40803060829x3dee6aa4xc87e5265828d83@mail.gmail.com>
	<20080306163741.GB22261@mithrandi.net>
Message-ID: <60ed19d40803060842r79e00831w24ff71eb45c16d0@mail.gmail.com>

On Thu, Mar 6, 2008 at 11:37 AM, Tristan Seligmann
<mithrandi@mithrandi.net> wrote:
> * Christopher Armstrong <radix@twistedmatrix.com> [2008-03-06 11:29:56 -0500]:
>
>
>  > Ok then, let's consider your approach. Let's say we have a multi-shot
>  > deferred object. How does our application code get a reference to it?
>  > How does the framework code get hooked up to the ultimate resource
>  > object that wants to handle this streaming data?
>
>  The same way it would get access to a one-shot Deferred.

I'm not sure how that applies. I really don't know how it would work.
Generally, getting access to a one-shot deferred is done by calling a
function which represents a request of some sort. This, on the other
hand, is the opposite: the request is being made of the resource, and
some data is being uploaded.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From amcnabb at mcnabbs.org  Thu Mar  6 12:16:52 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 12:16:56 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <60ed19d40803060842r79e00831w24ff71eb45c16d0@mail.gmail.com>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
	<20080306154659.GC2270@mcnabbs.org>
	<60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>
	<20080306161610.GD2270@mcnabbs.org>
	<60ed19d40803060829x3dee6aa4xc87e5265828d83@mail.gmail.com>
	<20080306163741.GB22261@mithrandi.net>
	<60ed19d40803060842r79e00831w24ff71eb45c16d0@mail.gmail.com>
Message-ID: <20080306171652.GA13580@mcnabbs.org>

On Thu, Mar 06, 2008 at 11:42:15AM -0500, Christopher Armstrong wrote:
> 
> I'm not sure how that applies. I really don't know how it would work.
> Generally, getting access to a one-shot deferred is done by calling a
> function which represents a request of some sort. This, on the other
> hand, is the opposite: the request is being made of the resource, and
> some data is being uploaded.

Seriously, it would be the same.  You call a function which represents a
request.  That function knows that the response might come incrementally
rather than all at once, so it returns a multi-shot deferred.

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/55cd4f3f/attachment.pgp
From radix at twistedmatrix.com  Thu Mar  6 12:22:04 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu Mar  6 12:22:19 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web and
	Web 2)
In-Reply-To: <20080306171652.GA13580@mcnabbs.org>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
	<20080306154659.GC2270@mcnabbs.org>
	<60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>
	<20080306161610.GD2270@mcnabbs.org>
	<60ed19d40803060829x3dee6aa4xc87e5265828d83@mail.gmail.com>
	<20080306163741.GB22261@mithrandi.net>
	<60ed19d40803060842r79e00831w24ff71eb45c16d0@mail.gmail.com>
	<20080306171652.GA13580@mcnabbs.org>
Message-ID: <60ed19d40803060922x57a296dcxdec7bd1a236f994e@mail.gmail.com>

On Thu, Mar 6, 2008 at 12:16 PM, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
> On Thu, Mar 06, 2008 at 11:42:15AM -0500, Christopher Armstrong wrote:
>  >
>  > I'm not sure how that applies. I really don't know how it would work.
>  > Generally, getting access to a one-shot deferred is done by calling a
>  > function which represents a request of some sort. This, on the other
>  > hand, is the opposite: the request is being made of the resource, and
>  > some data is being uploaded.
>
>  Seriously, it would be the same.  You call a function which represents a
>  request.  That function knows that the response might come incrementally
>  rather than all at once, so it returns a multi-shot deferred.

Ok, so the new interface is request.getStreamingData(). So the
explanation of the new feature is either:

"Implement dataReceived and call getStreamingData on the request and
add self.dataReceived as a callback"

or

"declare implements(IStreamingRequestHandler) and implement dataReceived".

Is the former really simpler? Does it really offer any benefit?

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From amcnabb at mcnabbs.org  Thu Mar  6 12:33:39 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 12:33:41 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <60ed19d40803060922x57a296dcxdec7bd1a236f994e@mail.gmail.com>
References: <20080306151356.GB2270@mcnabbs.org>
	<20080306152826.6859.1547728457.divmod.quotient.16238@ohm>
	<20080306154659.GC2270@mcnabbs.org>
	<60ed19d40803060755i4259a9aal14e8f63459d2f11d@mail.gmail.com>
	<20080306161610.GD2270@mcnabbs.org>
	<60ed19d40803060829x3dee6aa4xc87e5265828d83@mail.gmail.com>
	<20080306163741.GB22261@mithrandi.net>
	<60ed19d40803060842r79e00831w24ff71eb45c16d0@mail.gmail.com>
	<20080306171652.GA13580@mcnabbs.org>
	<60ed19d40803060922x57a296dcxdec7bd1a236f994e@mail.gmail.com>
Message-ID: <20080306173339.GB13580@mcnabbs.org>

On Thu, Mar 06, 2008 at 12:22:04PM -0500, Christopher Armstrong wrote:
> 
> Ok, so the new interface is request.getStreamingData(). So the
> explanation of the new feature is either:
> 
> "Implement dataReceived and call getStreamingData on the request and
> add self.dataReceived as a callback"
> 
> or
> 
> "declare implements(IStreamingRequestHandler) and implement dataReceived".

Now we understand each other.

> Is the former really simpler? Does it really offer any benefit?

I am opposed to creating a brand new IStreamingRequestHandler.  That's
just more conceptual overhead.  However, if it were to use something
that already exists, like IProtocol as Glyph suggested, I would be more
accepting.

In that case the difference is that the former has an event-driven feel
and the latter doesn't.  Which is better?  It depends on what you're
doing.  If you have multiple places that need notification that data
have arrived (as is the case in my situation), there are some definite
advantages to the event-driven approach.  However, the latter is
probably a little faster.


-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/2fc1d3f3/attachment.pgp
From exarkun at divmod.com  Thu Mar  6 12:52:12 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Mar  6 12:52:19 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306171652.GA13580@mcnabbs.org>
Message-ID: <20080306175212.6859.2023793306.divmod.quotient.16291@ohm>

On Thu, 6 Mar 2008 10:16:52 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>On Thu, Mar 06, 2008 at 11:42:15AM -0500, Christopher Armstrong wrote:
>>
>> I'm not sure how that applies. I really don't know how it would work.
>> Generally, getting access to a one-shot deferred is done by calling a
>> function which represents a request of some sort. This, on the other
>> hand, is the opposite: the request is being made of the resource, and
>> some data is being uploaded.
>
>Seriously, it would be the same.  You call a function which represents a
>request.  That function knows that the response might come incrementally
>rather than all at once, so it returns a multi-shot deferred.

This doesn't seem like it would be easier than having a non-Deferred based
callback (noun) solution.  Involving all the behavior of a Deferred seems
to mostly add complexity, not functionality.  For example, what do you need
errbacks here for?  What do you do if one of the "shots" of a MultiDeferred
ends in a Failure?  There's no way for the HTTP implementation to observe
this, so it would just continue to deliver data, even after an unrecoverable
unhandled error.  Useful?  Probably not.  And there would be other difficult
implementation issues.  For example, to present something that behaves even
remotely like a Deferred, it must be possible to add callbacks after a result
has been passed to the `callback? method.  So MultiDeferred has to keep all
of its results around for its entire lifetime.  This doesn't seem useful in
most cases, but there's not really any way to avoid it.

So it might be the same as a single-shot Deferred, but since the use-case is
so radically different than a single-shot Deferred, being "the same" is now
a liability, not an advantage.

Perhaps there is a place for an abstraction for handling this sort of case
which is unrelated to Deferreds, but I haven't ever had a problem with the
"named callback (noun)" style before.  Admittedly, I have a much greater
familiarity with Twisted than the average user, so it's entirely possible
that there are difficulties I've become used to which, if fixed or
simplified, would greatly help people who have not developed as high a
tolerance.

Jean-Paul

From exarkun at divmod.com  Thu Mar  6 13:00:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Mar  6 13:00:54 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306173339.GB13580@mcnabbs.org>
Message-ID: <20080306180044.6859.1657243580.divmod.quotient.16296@ohm>

On Thu, 6 Mar 2008 10:33:39 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>On Thu, Mar 06, 2008 at 12:22:04PM -0500, Christopher Armstrong wrote:
>>
>> Ok, so the new interface is request.getStreamingData(). So the
>> explanation of the new feature is either:
>>
>> "Implement dataReceived and call getStreamingData on the request and
>> add self.dataReceived as a callback"
>>
>> or
>>
>> "declare implements(IStreamingRequestHandler) and implement dataReceived".
>
>Now we understand each other.
>
>> Is the former really simpler? Does it really offer any benefit?
>
>I am opposed to creating a brand new IStreamingRequestHandler.  That's
>just more conceptual overhead.  However, if it were to use something
>that already exists, like IProtocol as Glyph suggested, I would be more
>accepting.

FWIW, IConsumer is a better match here than IProtocol (that's a more or
less irrelevant detail, though).

>
>In that case the difference is that the former has an event-driven feel
>and the latter doesn't.  Which is better?  It depends on what you're
>doing.  If you have multiple places that need notification that data
>have arrived (as is the case in my situation), there are some definite
>advantages to the event-driven approach.  However, the latter is
>probably a little faster.
>

They're equally "event-driven", so I think the feeling you have is only
due to familiarity or personal preference. :)

That said, here's where I see IStreamingRequestHandler as better than
re-using an existing interface like IProtocol or IConsumer:

  * IConsumer is a very general interface.  It provides no clues about its
    interaction with the HTTP protocol implementation.  There's no way to
    deduce that if an IResource is also an IConsumer that uploads will be
    streamed to it instead of delivered all at once at the end.  On the
    other hand, IStreamingRequestHandler can have documentation which
    describes its purpose and behavior.

  * IConsumer has existing semantics.  There's no reason an existing
    IResource implementation might not already be an IConsumer as well,
    for a completely unrelated reason.  If it suddenly starts to receive
    streaming upload data, it will almost certainly break.  On the other
    hand, IStreamingRequestHandler is a new interface, so it cannot be
    misinterpreted.

  * IConsumer isn't actually sufficiently expressive for this case.  It
    would be quite useful if the resource had a chance to look at the
    request headers before streaming begins (okay, I didn't bring this up
    earlier, so it may have seemed like IConsumer was sufficient).  On the
    other hand, IStreamingRequestHandler can have a method which takes the
    request as an argument.

It may be the case that the right method for IStreamingRequestHandler to
have, though, is one which takes the request and returns an IConsumer to
which the request body will be streamed.

Jean-Paul

From db3l.net at gmail.com  Thu Mar  6 13:38:20 2008
From: db3l.net at gmail.com (David Bolen)
Date: Thu Mar  6 13:38:43 2008
Subject: [Twisted-web] Re: static file performance
References: <10963666-E5DF-4024-95C2-BAF7099585A2@bubblehouse.org>
	<m2bq5uqb8w.fsf@valheru.db3l.homeip.net>
	<4FB1F5D3-62EA-455A-B06C-3EE4F7E757F4@bubblehouse.org>
Message-ID: <m27igfr943.fsf@valheru.db3l.homeip.net>

Phil Christensen <phil@bubblehouse.org> writes:

> Thanks for the tips, but I'm pretty well up to speed on the existing
> static file mechanisms. My big concern was performance, though.

Ah, sorry - didn't interpret your post quite right then.

> Obviously it depends on the site in question. My current project has
> a large number of external assets of varying kinds, and informal
> JMeter testing is showing that serving static content separately
> improves throughput greatly, almost by an order of magnitude.

Yep, I would certainly expect that large numbers of small to medium
files will have significantly higher overhead through Twisted.

> This actually makes me question whether sendfile would make much of a
> difference; considering it would only be used for files over 5MB. The
> external assets that I'm serving with Apache are all Javascript/CSS/
> images, with some miscellaneous PDF/PPT/DOC/etc files.

Yeah, I'm not sure either.  At larger file size, it would seem more
likely to me that you'd be I/O bound more than CPU, barring a really
large server pipe.  Lots of Javascript/CSS/images are going to have
lots of round trips through the request processing path, which it
seems to me will always be beat by some compiled application path,
like an external web server.

-- David


From manlio_perillo at libero.it  Thu Mar  6 14:00:06 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu Mar  6 14:00:45 2008
Subject: WSGI support (was [Twisted-web] Re: status of Twisted Web and
	Web	2)
In-Reply-To: <B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>	<20080306093731.991AF124131@slice.teknico.net>	<47CFC0A6.5030704@libero.it>
	<B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>
Message-ID: <47D03F36.4020508@libero.it>

David Reid ha scritto:
> 
> On Mar 6, 2008, at 2:00 AM, Manlio Perillo wrote:
>> Maybe it can be of interest my work on adding asynchronous support in 
>> WSGI.
>>
>> I'm developing a WSGI module for the Nginx web server:
>> http://hg.mperillo.ath.cx/nginx/mod_wsgi/
>>
>> The great advantage of Nginx over Twisted is it's support for multiple 
>> worker processes; this helps a lot with application "reloading" and 
>> for better support of I/O bound applications.
> 
> I'm not quite convinced that the concurrency model of the container is 
> the real bottleneck in WSGI applications as opposed to it's synchronous 
> API.
> A Twisted WSGI container could use a process pool just as easily as a 
> thread pool, but you're still taking a properly asynchronous container 
> and letting it run an application that will block for a long period of 
> time.
> 


I'm speaking about the support to asynchronous WSGI applications.

I now that most of the current applications are synchronous, but I'm 
speaking about asynchronous application and the best way to support them 
with WSGI.

>> I think that having a "pure" asynchronous WSGI implementation in 
>> Twisted Web that implements this extension can be a good starting 
>> point for trying to standardize asynchronous web applications.
>>
>>
>> P.S.: the wsgi.pause_output extension, proposed some years ago here by 
>> Donovan Preston should be very easy to implement using ngx.poll, and a 
>> pipe.
> 
> Does anyone support said extension?  

No, I just invented it 2 days ago :).

> Does everyone support the same 
> pause_output? 

No.

> Or just functions of the same name?
> 

?

> It shouldn't be very hard to add support for it to Twisted.web2's WSGI 
> implementation either, 

No, it's not easy.

In Twisted Web2 WSGI implementation the application runs in a separate 
thread.
The poll extension requires the registration of a file descriptor in the 
reactor, but this must be done in the main thread, since Twisted is not 
thread safe.

> but I don't much see the point if no one else 
> supports it.  

Well, if Twisted implements it, then we have two interoperable 
implementations.

There are not so many asynchronous web servers.

> I'm not convinced that WSGI is at all a useful means of 
> writing asynchronous web applications.  

I don't think so.
Instead, it is possible to write asynchronous applications using a very 
convenient API.

> I think WSGI's only benefit is 
> that it allows you to almost write your application code once and run it 
> on multiple containers.
> 

Right, and I would like the same to be possible with asynchronous 
applications.

I, by default, will use Nginx but I want to have the possibility to 
switch to Twisted when I need to use some of the protocols already 
implemented in it.

> -David
> 


Manlio Perillo

From manlio_perillo at libero.it  Thu Mar  6 14:06:52 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu Mar  6 14:07:27 2008
Subject: WSGI support (was [Twisted-web] Re: status of Twisted Web and
	Web	2)
In-Reply-To: <267E902F-7FEA-4E9D-B9A2-35C8AC7523C4@bubblehouse.org>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>	<20080306093731.991AF124131@slice.teknico.net>	<47CFC0A6.5030704@libero.it>	<B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>
	<267E902F-7FEA-4E9D-B9A2-35C8AC7523C4@bubblehouse.org>
Message-ID: <47D040CC.6050606@libero.it>

Phil Christensen ha scritto:
> On Mar 6, 2008, at 10:56 AM, David Reid wrote:
>> On Mar 6, 2008, at 2:00 AM, Manlio Perillo wrote:
>>> I think that having a "pure" asynchronous WSGI implementation in 
>>> Twisted Web that implements this extension can be a good starting 
>>> point for trying to standardize asynchronous web applications.
>>>
>>> P.S.: the wsgi.pause_output extension, proposed some years ago here 
>>> by Donovan Preston should be very easy to implement using ngx.poll, 
>>> and a pipe.
>>
>> Does anyone support said extension?  Does everyone support the same 
>> pause_output? Or just functions of the same name?
>>
>> It shouldn't be very hard to add support for it to Twisted.web2's WSGI 
>> implementation either, but I don't much see the point if no one else 
>> supports it.  I'm not convinced that WSGI is at all a useful means of 
>> writing asynchronous web applications.  I think WSGI's only benefit is 
>> that it allows you to almost write your application code once and run 
>> it on multiple containers.
> 
> I'd have to disagree (slightly). There's nothing about WSGI that makes 
> it only applicable to one approach or another (that is, synchronous 
> versus asynchronous). 

Right.
This is what makes WSGI great.

> It's just as easy to write a Deferred-using 
> asynchronous application as a blocking one.
> 
> The real issue is that a "proper" WSGI app gets informed of it's 
> environment by the wsgi.multithreaded and wsgi.multiprocess environ 
> variables, so if you really wanted a write-once-run-anywhere, you'd need 
> to be able to handle both scenarios.
> 

By the way, some time ago I proposed a wsgi.asynchronous enviroment 
variable.

> As far as Twisted's WSGI implementation, it should probably support both 
> approaches, maybe where some kind of argument to the WSGIResource class 
> constructor determines what it specifies in the environ dictionary. It 
> should be the responsibility of the WSGI application itself to do the 
> right thing depending on what's inside the environ dict.
> 

I'm not sure that this is possible.
An application is asynchronous or synchronous.

The problem arises when one have to implement a reusable middleware.

> Also, as an aside, I have recently ported web2's WSGI support back to 
> web1, and am using it on a production site with much success. I'd like 
> to contribute it, but I have little to no time to participate in the 
> Twisted review process. Anyone who would like a copy is welcome to it, 
> however...
> 

I'm interested in code that can help me to write a WSGI implementation 
for web1, thanks!

> -phil
> 


Manlio Perillo

From phil at bubblehouse.org  Thu Mar  6 14:23:13 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu Mar  6 14:23:31 2008
Subject: WSGI support (was [Twisted-web] Re: status of Twisted Web and
	Web	2)
In-Reply-To: <47D040CC.6050606@libero.it>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>	<20080306093731.991AF124131@slice.teknico.net>	<47CFC0A6.5030704@libero.it>	<B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>
	<267E902F-7FEA-4E9D-B9A2-35C8AC7523C4@bubblehouse.org>
	<47D040CC.6050606@libero.it>
Message-ID: <0A3B4F57-A1EA-4631-A6BE-60E604AE5136@bubblehouse.org>


On Mar 6, 2008, at 2:06 PM, Manlio Perillo wrote:
>> It's just as easy to write a Deferred-using asynchronous  
>> application as a blocking one.
>> The real issue is that a "proper" WSGI app gets informed of it's  
>> environment by the wsgi.multithreaded and wsgi.multiprocess environ  
>> variables, so if you really wanted a write-once-run-anywhere, you'd  
>> need to be able to handle both scenarios.
>
> By the way, some time ago I proposed a wsgi.asynchronous enviroment  
> variable.

Yeah, I guess that would be ideal. I guess I was assuming that if it's  
neither multiprocess or multithreaded, then it must be asynchronous,  
but now that I think about it, that's obviously not the case...

I've heard the WSGI guys are kind of hard to talk to about feature  
requests and the like, but I've never really dealt with them...

>> As far as Twisted's WSGI implementation, it should probably support  
>> both approaches, maybe where some kind of argument to the  
>> WSGIResource class constructor determines what it specifies in the  
>> environ dictionary. It should be the responsibility of the WSGI  
>> application itself to do the right thing depending on what's inside  
>> the environ dict.
>
> I'm not sure that this is possible.
> An application is asynchronous or synchronous.
>
> The problem arises when one have to implement a reusable middleware.

Yeah, I guess that's also true. I think my main point was that since  
there's a number of different programming practices that would be  
problematic in a particular type of container, it's the responsibility  
of the application to do the right thing, whatever the case may be.

>> Also, as an aside, I have recently ported web2's WSGI support back  
>> to web1, and am using it on a production site with much success.  
>> I'd like to contribute it, but I have little to no time to  
>> participate in the Twisted review process. Anyone who would like a  
>> copy is welcome to it, however...
>
> I'm interested in code that can help me to write a WSGI  
> implementation for web1, thanks!

I've attached it to a ticket I created awhile back here:

	http://twistedmatrix.com/trac/ticket/2753

Although the ticket description talks about a web2 dependency, the  
second attachment is the most recent version, which has no such  
dependency.

-phil

From amcnabb at mcnabbs.org  Thu Mar  6 15:04:49 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 15:04:54 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306180044.6859.1657243580.divmod.quotient.16296@ohm>
References: <20080306173339.GB13580@mcnabbs.org>
	<20080306180044.6859.1657243580.divmod.quotient.16296@ohm>
Message-ID: <20080306200449.GC13580@mcnabbs.org>

On Thu, Mar 06, 2008 at 01:00:44PM -0500, Jean-Paul Calderone wrote:
>
> They're equally "event-driven", so I think the feeling you have is only
> due to familiarity or personal preference. :)

Maybe.


> That said, here's where I see IStreamingRequestHandler as better than
> re-using an existing interface like IProtocol or IConsumer:
>
>  * IConsumer is a very general interface.  It provides no clues about its
>    interaction with the HTTP protocol implementation.  There's no way to
>    deduce that if an IResource is also an IConsumer that uploads will be
>    streamed to it instead of delivered all at once at the end.  On the
>    other hand, IStreamingRequestHandler can have documentation which
>    describes its purpose and behavior.
>
>  * IConsumer has existing semantics.  There's no reason an existing
>    IResource implementation might not already be an IConsumer as well,
>    for a completely unrelated reason.  If it suddenly starts to receive
>    streaming upload data, it will almost certainly break.  On the other
>    hand, IStreamingRequestHandler is a new interface, so it cannot be
>    misinterpreted.
>
>  * IConsumer isn't actually sufficiently expressive for this case.  It
>    would be quite useful if the resource had a chance to look at the
>    request headers before streaming begins (okay, I didn't bring this up
>    earlier, so it may have seemed like IConsumer was sufficient).  On the
>    other hand, IStreamingRequestHandler can have a method which takes the
>    request as an argument.
>
> It may be the case that the right method for IStreamingRequestHandler to
> have, though, is one which takes the request and returns an IConsumer to
> which the request body will be streamed.

And my idea was needlessly complicated? :)

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/9106f62a/attachment.pgp
From amcnabb at mcnabbs.org  Thu Mar  6 16:02:53 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 16:02:55 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306180044.6859.1657243580.divmod.quotient.16296@ohm>
References: <20080306173339.GB13580@mcnabbs.org>
	<20080306180044.6859.1657243580.divmod.quotient.16296@ohm>
Message-ID: <20080306210253.GD13580@mcnabbs.org>

On Thu, Mar 06, 2008 at 01:00:44PM -0500, Jean-Paul Calderone wrote:
>
> FWIW, IConsumer is a better match here than IProtocol (that's a more or
> less irrelevant detail, though).

I can see why IConsumer would be more appropriate than IProtocol, but
I'm entirely unconvinced by the arguments that IStreamingRequestHandler
would be better than IConsumer.

To start with, I don't understand what an IConsumer has to do with an
IResource.

> That said, here's where I see IStreamingRequestHandler as better than
> re-using an existing interface like IProtocol or IConsumer:
>
>  * IConsumer is a very general interface.  It provides no clues about its
>    interaction with the HTTP protocol implementation.  There's no way to
>    deduce that if an IResource is also an IConsumer that uploads will be
>    streamed to it instead of delivered all at once at the end.  On the
>    other hand, IStreamingRequestHandler can have documentation which
>    describes its purpose and behavior.

I didn't understand this.

>  * IConsumer has existing semantics.  There's no reason an existing
>    IResource implementation might not already be an IConsumer as well,
>    for a completely unrelated reason.  If it suddenly starts to receive
>    streaming upload data, it will almost certainly break.  On the other
>    hand, IStreamingRequestHandler is a new interface, so it cannot be
>    misinterpreted.

If you have to consume two different things, shouldn't you have two
objects?


>  * IConsumer isn't actually sufficiently expressive for this case.  It
>    would be quite useful if the resource had a chance to look at the
>    request headers before streaming begins (okay, I didn't bring this up
>    earlier, so it may have seemed like IConsumer was sufficient).  On the
>    other hand, IStreamingRequestHandler can have a method which takes the
>    request as an argument.

In my opinion, if you need to be looking at request headers before
streaming begins, you're not doing simple streaming, and you should be
hooking in at a lower level.

> It may be the case that the right method for IStreamingRequestHandler to
> have, though, is one which takes the request and returns an IConsumer to
> which the request body will be streamed.

All of the IStreamingRequestHandler stuff sounds more complicated than
necessary.  I think I'm convinced that IConsumer is a good way to go.
It uses existing mechanisms to do something simple.
IStreamingRequestHandler, however, would create new mechanisms to do
something complicated.

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/d105c559/attachment.pgp
From exarkun at divmod.com  Thu Mar  6 17:05:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Mar  6 17:05:14 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306210253.GD13580@mcnabbs.org>
Message-ID: <20080306220508.6859.604978648.divmod.quotient.16378@ohm>

On Thu, 6 Mar 2008 14:02:53 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>On Thu, Mar 06, 2008 at 01:00:44PM -0500, Jean-Paul Calderone wrote:
>>
>> FWIW, IConsumer is a better match here than IProtocol (that's a more or
>> less irrelevant detail, though).
>
>I can see why IConsumer would be more appropriate than IProtocol, but
>I'm entirely unconvinced by the arguments that IStreamingRequestHandler
>would be better than IConsumer.
>
>To start with, I don't understand what an IConsumer has to do with an
>IResource.

Inherently?  Nothing.  I'm sure you're driving at something, but alas I
can't see what.

>
>> That said, here's where I see IStreamingRequestHandler as better than
>> re-using an existing interface like IProtocol or IConsumer:
>>
>>  * IConsumer is a very general interface.  It provides no clues about its
>>    interaction with the HTTP protocol implementation.  There's no way to
>>    deduce that if an IResource is also an IConsumer that uploads will be
>>    streamed to it instead of delivered all at once at the end.  On the
>>    other hand, IStreamingRequestHandler can have documentation which
>>    describes its purpose and behavior.
>
>I didn't understand this.
>

What I mean is that regardless of which approach is taken, it must be
documented.  The IStreamingRequestHandler approach gives you an interface
and a method to give docstrings.  The IConsumer approach doesn't, because
IConsumer encompasses far more than streaming upload handling.

>>  * IConsumer has existing semantics.  There's no reason an existing
>>    IResource implementation might not already be an IConsumer as well,
>>    for a completely unrelated reason.  If it suddenly starts to receive
>>    streaming upload data, it will almost certainly break.  On the other
>>    hand, IStreamingRequestHandler is a new interface, so it cannot be
>>    misinterpreted.
>
>If you have to consume two different things, shouldn't you have two
>objects?
>

Perhaps so!  What I tried to point out is that there may be /existing
applications/ which have IResources which are also IConsumers.  There
is no reason not to have done this.  We should avoid breaking those
applications.

>
>>  * IConsumer isn't actually sufficiently expressive for this case.  It
>>    would be quite useful if the resource had a chance to look at the
>>    request headers before streaming begins (okay, I didn't bring this up
>>    earlier, so it may have seemed like IConsumer was sufficient).  On the
>>    other hand, IStreamingRequestHandler can have a method which takes the
>>    request as an argument.
>
>In my opinion, if you need to be looking at request headers before
>streaming begins, you're not doing simple streaming, and you should be
>hooking in at a lower level.

That may be valid, but I'm not really convinced.  For example, you may
want to see query arguments from the request before deciding how to handle
the upload.  Or you may want to look at the value of a cookie or some
HTTP AUTH credentials.  Or there might be an If-Modified-Since header in
the request which needs to be respected.  I don't know for sure that the
correct way to handle any of these use cases is to hook into the stream
setup the way I've described, but the plethora of possibilities suggests
that it shouldn't be ruled out.

>
>> It may be the case that the right method for IStreamingRequestHandler to
>> have, though, is one which takes the request and returns an IConsumer to
>> which the request body will be streamed.
>
>All of the IStreamingRequestHandler stuff sounds more complicated than
>necessary.  I think I'm convinced that IConsumer is a good way to go.
>It uses existing mechanisms to do something simple.
>IStreamingRequestHandler, however, would create new mechanisms to do
>something complicated.

I think you're overestimating the complexity.  Here's a sample
implementation of what I'm talking about:

    class FileSaver(object):
        implements(IResource, IStreamingRequestHandler)

        def getChild(self, name):
            return FourOhFour()

        def consume(self, request):
            cc = ClientCreator(
                reactor,
                FTPClient,
                request.args['username'][0],
                request.args['password'][0])
            d = cc.connectTCP(request.args['hostname'], 21)
            def connected(ftp):
                return ftp.storeFile(request.args['path'][0])
            d.addCallback(connected)
            def storeInitiated((consumer, control)):
                # I'm too lazy to make this stateless, so FileSaver will
                # only be good for one request.  Also I don't really know
                # how to use FTPClient, so I'm probably making a mistake
                # by ignoring `control?
                self.consumer = consumer
                return consumer
            d.addCallback(storeInitiated)
            return d

        def render(self, request):
            # I don't really like IFinishableConsumer, but oh well.
            self.consumer.finish()
            return "File uploaded!"

If we jump straight to IConsumer and leave IStreamingRequestHandler out
then it'll look something like this:

    class FileSaver(object):
        implements(IRequest, IConsumer)

        def __init__(self, username, password, hostname, path):
            # Whoever implements getChild to return a FileSaver will
            # have to pull the args out of the request and pass them
            # in here, since I have no request here.  Although I'm
            # not sure if you can actually do that with twisted.web!

            self._buffer = []
            self._consumer = None
            self._finished = None
            self._request = None

            cc = ClientCreator(reactor, username, password)
            d = cc.connectTCP(hostname, 21)
            def connected(ftp):
                return ftp.storeFile(path)
            d.addCallback(connected)
            def storeInitiated((consumer, control)):
                self._consumer = consumer
                map(self._consumer.write, self._buffer)
                if self._request is not None:
                    self._consumer.finish()
                    self._request.write("File uploaded!")
                    self._request.finish()
                else:
                    self.write = self._consumer.write
            d.addCallback(storeInitiated)
            

        def getChild(self, name):
            return FourOhFour()

        def write(self, bytes):
            self._buffer.append(bytes)

        def render(self, request):
            if self._consumer is not None:
                self._consumer.finish()
                return "File uploaded!"
            else:
                self._request = request
                return NOT_DONE_YET


I actually had to think a bit harder about the 2nd version.  I wonder
if there's a simpler way to express it using that API.  Anyway, neither
of these is horrendously more complex than the other, so I don't think
the complexity argument carries much weight for me.

Jean-Paul

From amcnabb at mcnabbs.org  Thu Mar  6 17:45:01 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Thu Mar  6 17:53:57 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306220508.6859.604978648.divmod.quotient.16378@ohm>
References: <20080306210253.GD13580@mcnabbs.org>
	<20080306220508.6859.604978648.divmod.quotient.16378@ohm>
Message-ID: <20080306224501.GA2762@mcnabbs.org>

Wow, somehow we got talking about different things without realizing it!
I wonder how that happened?

If I'm (finally) understanding you correctly, your case is one where we
are a server and handling a POST request.  In my application, I'm
dealing with streaming _downloads_, not streaming _uploads_ (i.e., mine
is client side rather than server side).  My code would look something
like this:

consumer = MyConsumer()
http_streaming_download('http://some/big/file', consumer)

Hopefully that makes it clear why it seems like MyConsumer should be a
straightforward class that implements IConsumer.  In this case, it's
simply confusing to make the downloader care about HTTP headers, etc.

In your case (processing a POST request), I can understand the need to
look at HTTP headers, etc., so I agree that you would want something
more complicated than a simple consumer.  

Is there anything I'm still missing?  Thanks!


-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080306/16c82da6/attachment.pgp
From radix at twistedmatrix.com  Thu Mar  6 18:13:51 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu Mar  6 18:14:02 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web and
	Web 2)
In-Reply-To: <20080306224501.GA2762@mcnabbs.org>
References: <20080306210253.GD13580@mcnabbs.org>
	<20080306220508.6859.604978648.divmod.quotient.16378@ohm>
	<20080306224501.GA2762@mcnabbs.org>
Message-ID: <60ed19d40803061513g29daad80wa7516ea27deb99e3@mail.gmail.com>

On Thu, Mar 6, 2008 at 5:45 PM, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
> Wow, somehow we got talking about different things without realizing it!
>  I wonder how that happened?
>
>  If I'm (finally) understanding you correctly, your case is one where we
>  are a server and handling a POST request.  In my application, I'm
>  dealing with streaming _downloads_, not streaming _uploads_ (i.e., mine
>  is client side rather than server side).

Argh!

On Thu, Mar 6, 2008 at 9:15 AM, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
> On Wed, Mar 05, 2008 at 10:30:29PM -0500, Jean-Paul Calderone wrote:
>  >
>  > To clarify, this is about calling into application code in a web server
>  > once each time some new bytes from a request body are received from the
>  > client, right?
>
>  Exactly.



-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From dreid at dreid.org  Thu Mar  6 18:17:59 2008
From: dreid at dreid.org (David Reid)
Date: Thu Mar  6 18:18:04 2008
Subject: WSGI support (was [Twisted-web] Re: status of Twisted Web and
	Web	2)
In-Reply-To: <47D040CC.6050606@libero.it>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>	<20080306093731.991AF124131@slice.teknico.net>	<47CFC0A6.5030704@libero.it>	<B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>
	<267E902F-7FEA-4E9D-B9A2-35C8AC7523C4@bubblehouse.org>
	<47D040CC.6050606@libero.it>
Message-ID: <812252F7-FB2D-4304-9026-AC41EA5ECCF4@dreid.org>


On Mar 6, 2008, at 11:06 AM, Manlio Perillo wrote:

> Phil Christensen ha scritto:
>> On Mar 6, 2008, at 10:56 AM, David Reid wrote:
>>> On Mar 6, 2008, at 2:00 AM, Manlio Perillo wrote:
>>>> I think that having a "pure" asynchronous WSGI implementation in  
>>>> Twisted Web that implements this extension can be a good starting  
>>>> point for trying to standardize asynchronous web applications.
>>>>
>>>> P.S.: the wsgi.pause_output extension, proposed some years ago  
>>>> here by Donovan Preston should be very easy to implement using  
>>>> ngx.poll, and a pipe.
>>>
>>> Does anyone support said extension?  Does everyone support the  
>>> same pause_output? Or just functions of the same name?
>>>
>>> It shouldn't be very hard to add support for it to Twisted.web2's  
>>> WSGI implementation either, but I don't much see the point if no  
>>> one else supports it.  I'm not convinced that WSGI is at all a  
>>> useful means of writing asynchronous web applications.  I think  
>>> WSGI's only benefit is that it allows you to almost write your  
>>> application code once and run it on multiple containers.
>> I'd have to disagree (slightly). There's nothing about WSGI that  
>> makes it only applicable to one approach or another (that is,  
>> synchronous versus asynchronous).
>
> Right.
> This is what makes WSGI great.

Read: "So the thing I like about WSGI is that it's actually poorly  
specified"

Why is attempting to adapt a currently synchronous API (the WSGI  
application API is synchronous) It's supposed to allow you to write  
web applications that may be able to run singlethreaded, multithreaded  
or in a multiprocess environment, it doesn't specify an asynchronous  
API.   If it did applications would still need to be written in an  
asynchronous manner.

Threads are the only way to make blocking code appear to be non- 
blocking.
Processes are the only way to make blocking code actually not block.

>> It's just as easy to write a Deferred-using asynchronous  
>> application as a blocking one.

It would be, except it's not at all specified that that is a thing you  
can do.  PEP 333 sure has no mention of Deferreds.

>> The real issue is that a "proper" WSGI app gets informed of it's  
>> environment by the wsgi.multithreaded and wsgi.multiprocess environ  
>> variables, so if you really wanted a write-once-run-anywhere, you'd  
>> need to be able to handle both scenarios.
>
> By the way, some time ago I proposed a wsgi.asynchronous enviroment  
> variable.

I don't get it.  I don't see the point at all.  I can't make blocking  
code magically not-block.  I could use a middlewear that translated  
from wsgi.asynchronous to a wsgi.multithreaded or wsgi.multiprocess  
implementation for running my synchronous code, but I don't think  
there are any benefits to a wsgi.asynchronous API at all.

I can reasonably write an application that honestly doesn't care if  
it's being serialized, run in threads, or run in seperate processes.   
As soon as you throw wsgi.asynchronous into the mix I lose that ability.

>
>> As far as Twisted's WSGI implementation, it should probably support  
>> both approaches, maybe where some kind of argument to the  
>> WSGIResource class constructor determines what it specifies in the  
>> environ dictionary. It should be the responsibility of the WSGI  
>> application itself to do the right thing depending on what's inside  
>> the environ dict.
>
> I'm not sure that this is possible.
> An application is asynchronous or synchronous.

Exactly so why should we try to make the same API do both?
>

All that being said I'm perfectly happy to accept patches that enhance  
twisted's wsgi support, but I feel no inclination to support anything  
out of spec.

-David

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz







From exarkun at divmod.com  Thu Mar  6 18:22:05 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Mar  6 18:22:10 2008
Subject: [Twisted-web] streaming request (was: status of Twisted Web
	and Web 2)
In-Reply-To: <20080306224501.GA2762@mcnabbs.org>
Message-ID: <20080306232205.6859.1820368208.divmod.quotient.16413@ohm>

On Thu, 6 Mar 2008 15:45:01 -0700, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>Wow, somehow we got talking about different things without realizing it!
>I wonder how that happened?
>
>If I'm (finally) understanding you correctly, your case is one where we
>are a server and handling a POST request.  In my application, I'm
>dealing with streaming _downloads_, not streaming _uploads_ (i.e., mine
>is client side rather than server side).  My code would look something
>like this:
>
>consumer = MyConsumer()
>http_streaming_download('http://some/big/file', consumer)
>
>Hopefully that makes it clear why it seems like MyConsumer should be a
>straightforward class that implements IConsumer.  In this case, it's
>simply confusing to make the downloader care about HTTP headers, etc.
>
>In your case (processing a POST request), I can understand the need to
>look at HTTP headers, etc., so I agree that you would want something
>more complicated than a simple consumer.
>
>Is there anything I'm still missing?  Thanks!
>

Oh.  Okay.  We're certainly talking about different things.

Jean-Paul

From phil at bubblehouse.org  Thu Mar  6 21:38:54 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu Mar  6 21:39:29 2008
Subject: WSGI support (was [Twisted-web] Re: status of Twisted Web and Web
	2)
In-Reply-To: <812252F7-FB2D-4304-9026-AC41EA5ECCF4@dreid.org>
References: <20080306015250.GB2823@mcnabbs.org>
	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>
	<20080306025630.GC2823@mcnabbs.org>
	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>
	<20080306093731.991AF124131@slice.teknico.net>
	<47CFC0A6.5030704@libero.it>
	<B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>
	<267E902F-7FEA-4E9D-B9A2-35C8AC7523C4@bubblehouse.org>
	<47D040CC.6050606@libero.it>
	<812252F7-FB2D-4304-9026-AC41EA5ECCF4@dreid.org>
Message-ID: <CC949D8B-068B-4922-B082-5979259BC836@bubblehouse.org>

On Mar 6, 2008, at 6:17 PM, David Reid wrote:
> On Mar 6, 2008, at 11:06 AM, Manlio Perillo wrote:
>> Phil Christensen ha scritto:
>>> On Mar 6, 2008, at 10:56 AM, David Reid wrote:
>>>> It shouldn't be very hard to add support for it to  
>>>> Twisted.web2's WSGI implementation either, but I don't much see  
>>>> the point if no one else supports it.  I'm not convinced that  
>>>> WSGI is at all a useful means of writing asynchronous web  
>>>> applications.  I think WSGI's only benefit is that it allows you  
>>>> to almost write your application code once and run it on  
>>>> multiple containers.
>>> I'd have to disagree (slightly). There's nothing about WSGI that  
>>> makes it only applicable to one approach or another (that is,  
>>> synchronous versus asynchronous).
>>
>> Right.
>> This is what makes WSGI great.
>
> Read: "So the thing I like about WSGI is that it's actually poorly  
> specified"
>
> Why is attempting to adapt a currently synchronous API (the WSGI  
> application API is synchronous) It's supposed to allow you to write  
> web applications that may be able to run singlethreaded,  
> multithreaded or in a multiprocess environment, it doesn't specify  
> an asynchronous API.   If it did applications would still need to  
> be written in an asynchronous manner.

I don't know that anyone was suggesting any magic would prevent  
having to write an asynchronous WSGI app in the traditional manner.

Assuming we are talking about the spec, and not a particular  
container, the WSGI API is *not* implicitly synchronous. It requires  
that the application execute the `start_response` callable that is  
passed to the handler function *at some point*. You can easily  
execute it in a callback from some Deferred, or in any other  
asynchronous fashion.

> Threads are the only way to make blocking code appear to be non- 
> blocking.
> Processes are the only way to make blocking code actually not block.
>
>>> It's just as easy to write a Deferred-using asynchronous  
>>> application as a blocking one.
>
> It would be, except it's not at all specified that that is a thing  
> you can do.  PEP 333 sure has no mention of Deferreds.

I think given my point above, that it's irrelevant as to whether PEP  
333 has a mention of Deferreds. It doesn't mention MySQLdb or Zope  
interfaces, either.

All that matters is that at some point you call start_response. As I  
said, there may be WSGI containers that make writing a asynchronous  
application irrelevant (because only one request is handled at a  
time, or requests are threaded), but there's nothing preventing  
someone from making an asynchronous container.

Now, whether that would be worth the effort is a matter of opinion.

>>> The real issue is that a "proper" WSGI app gets informed of it's  
>>> environment by the wsgi.multithreaded and wsgi.multiprocess  
>>> environ variables, so if you really wanted a write-once-run- 
>>> anywhere, you'd need to be able to handle both scenarios.
>>
>> By the way, some time ago I proposed a wsgi.asynchronous  
>> enviroment variable.
>
> I don't get it.  I don't see the point at all.  I can't make  
> blocking code magically not-block.  I could use a middlewear that  
> translated from wsgi.asynchronous to a wsgi.multithreaded or  
> wsgi.multiprocess implementation for running my synchronous code,  
> but I don't think there are any benefits to a wsgi.asynchronous API  
> at all.
>
> I can reasonably write an application that honestly doesn't care if  
> it's being serialized, run in threads, or run in seperate  
> processes.  As soon as you throw wsgi.asynchronous into the mix I  
> lose that ability.

If you're in a multithreaded container, there's a slough of different  
ways to trip up, like saving state in module-level variables without  
using some kind of synchronization. I've definitely run into  
scenarios like that in complex web applications and had to deal with  
them with care.

So if I already have to consider my container's process/thread model,  
then determining if my app can run properly in an asynchronous  
environment seems like a non-issue.

Furthermore, a container that was written to be asynchronous could  
always support synchronous applications as necessary, whereas the  
reverse is obviously not true, at least not in any efficient sense.

>>> As far as Twisted's WSGI implementation, it should probably  
>>> support both approaches, maybe where some kind of argument to the  
>>> WSGIResource class constructor determines what it specifies in  
>>> the environ dictionary. It should be the responsibility of the  
>>> WSGI application itself to do the right thing depending on what's  
>>> inside the environ dict.
>>
>> I'm not sure that this is possible.
>> An application is asynchronous or synchronous.

I was referring to things like thread synchronization, as I mentioned  
above.

> Exactly so why should we try to make the same API do both?

Because WSGI is a decent spec, and is a familiar environment from  
people who are transitioning from CGI, and to some extent, PHP web  
development. Since there is no technical reason WSGI couldn't be used  
in an asynchronous context, why not make it possible?

It would allow users to have a somewhat familiar environment, while  
still getting used to an asynchronous programming style. Then the  
leap to twisted.web/Nevow would be that much easier.

> All that being said I'm perfectly happy to accept patches that  
> enhance twisted's wsgi support, but I feel no inclination to  
> support anything out of spec.

Again, I think it's debatable if writing an asynchronous WSGI is  
outside the spec, although clearly a 'wsgi.asynchronous' variable  
would be.

Anyways, just my 2/100ths...

-phil

From manlio_perillo at libero.it  Fri Mar  7 06:10:25 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri Mar  7 06:11:02 2008
Subject: WSGI support (was [Twisted-web] Re: status of Twisted Web and
	Web	2)
In-Reply-To: <812252F7-FB2D-4304-9026-AC41EA5ECCF4@dreid.org>
References: <20080306015250.GB2823@mcnabbs.org>	<20080306021828.21558.1200601499.divmod.xquotient.7493@joule.divmod.com>	<20080306025630.GC2823@mcnabbs.org>	<20080306032003.21558.1405260439.divmod.xquotient.7513@joule.divmod.com>	<20080306093731.991AF124131@slice.teknico.net>	<47CFC0A6.5030704@libero.it>	<B66A587A-46C7-480F-A6FA-60D5F6227B12@dreid.org>	<267E902F-7FEA-4E9D-B9A2-35C8AC7523C4@bubblehouse.org>	<47D040CC.6050606@libero.it>
	<812252F7-FB2D-4304-9026-AC41EA5ECCF4@dreid.org>
Message-ID: <47D122A1.8070009@libero.it>

David Reid ha scritto:
> [...]
>> Right.
>> This is what makes WSGI great.
> 
> Read: "So the thing I like about WSGI is that it's actually poorly 
> specified"
> 

No, I disagree.

WSGI is able to support asynchronous applications since you can send 
headers in the application iterable, and the application iterable can be 
a generator, so the WSGI gateway can suspend the iteration at any time.

> Why is attempting to adapt a currently synchronous API (the WSGI 
> application API is synchronous) It's supposed to allow you to write web 
> applications that may be able to run singlethreaded, multithreaded or in 
> a multiprocess environment, it doesn't specify an asynchronous API.   If 
> it did applications would still need to be written in an asynchronous 
> manner.
> 
> Threads are the only way to make blocking code appear to be non-blocking.
> Processes are the only way to make blocking code actually not block.
> 

Ok, but I'm not speaking about generic code.
I'm speaking about code specifically written for an asynchronous WSGI 
implementation.

> [...]
>> By the way, some time ago I proposed a wsgi.asynchronous enviroment 
>> variable.
> 
> I don't get it.  I don't see the point at all.  
> I can't make blocking 
> code magically not-block.  

Right.

There is no need for such variable, the application can just check for 
asynchronous extensions.

However wsgi.asynchronous does make sense if the WSGI gateway implements 
a whole set of asynchronous extensions, like poll or async reading from 
wsgi.input.

> I could use a middlewear that translated from 
> wsgi.asynchronous to a wsgi.multithreaded or wsgi.multiprocess 
> implementation for running my synchronous code, but I don't think there 
> are any benefits to a wsgi.asynchronous API at all.
> 
> I can reasonably write an application that honestly doesn't care if it's 
> being serialized, run in threads, or run in seperate processes.  As soon 
> as you throw wsgi.asynchronous into the mix I lose that ability.
> 

Not necessary true.
If you look at the simple nginx-poll-sleep example, then it easy to use 
two separate HTTP clients, depending on the presence of ngx.poll extension.

Of course, your application *needs* to return a generator, but this is 
not a problem.

>>
>>> As far as Twisted's WSGI implementation, it should probably support 
>>> both approaches, maybe where some kind of argument to the 
>>> WSGIResource class constructor determines what it specifies in the 
>>> environ dictionary. It should be the responsibility of the WSGI 
>>> application itself to do the right thing depending on what's inside 
>>> the environ dict.
>>
>> I'm not sure that this is possible.
>> An application is asynchronous or synchronous.
> 
> Exactly so why should we try to make the same API do both?
>>

The API does not do anything.
It simply should support both models (and this is possible, it is 
*already* possible)




> 
> All that being said I'm perfectly happy to accept patches that enhance 
> twisted's wsgi support, but I feel no inclination to support anything 
> out of spec.
> 
> -David
> 

Manlio Perillo

From michal.dtz at gmail.com  Fri Mar  7 11:02:52 2008
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Fri Mar  7 11:03:03 2008
Subject: [Twisted-web] static file performance
In-Reply-To: <47CDB6FE.1090204@free.fr>
References: <10963666-E5DF-4024-95C2-BAF7099585A2@bubblehouse.org>
	<47CDB6FE.1090204@free.fr>
Message-ID: <20080307170252.35db4331@2step.chello.pl>

Dnia 2008-03-04, o godz. 21:54:22
Thomas Herv? <therve@free.fr> napisa?(a):

> Phil Christensen a ?crit :
> > Hi All,
> >
> > The previous thread about http server performance made me think of 
> > something I've been meaning to ask about for a while.
> >
> > What is the best way to send static files to the client in 
> > twisted.web? I know web2 had some preliminary support for mmap for 
> > small files, but I know it didn't work the last time I checked, and 
> > I'm trying to stick with twisted.web for now, anyways.
> >
> > I've just been using Apache to serve static content, but I'd love
> > to be able to use a pure-twisted solution.
> 
> If you use a supported platform (Linux, FreeBSD, maybe Leopard), 
> sendfile is the best way to get close to Apache performance on static 
> files. The ticket #585 (http://twistedmatrix.com/trac/ticket/585) is 
> where we try to do that. Unfortunately, this is a huge change, so it 
> requires huge energy to get it into Twisted :). So any help on this 
> ticket would be great: reviews, adding tests, performance measures,
> etc...

Also I'd suggest taking a look at lighttpd - C source is pretty clear,
and one of many possible solutions is using async I/O on mmaped shared
memory. If you ask me, I'd rather try to find a clean way of using
lighttpd with Twisted Web, like a caching reverse proxy :)

Regards,
-- 
m

From db3l.net at gmail.com  Fri Mar  7 17:43:13 2008
From: db3l.net at gmail.com (David Bolen)
Date: Fri Mar  7 17:43:41 2008
Subject: [Twisted-web] Re: streaming request (was: status of Twisted Web and
	Web 2)
References: <20080306210253.GD13580@mcnabbs.org>
	<20080306220508.6859.604978648.divmod.quotient.16378@ohm>
	<20080306224501.GA2762@mcnabbs.org>
Message-ID: <m23ar2qhoe.fsf@valheru.db3l.homeip.net>

Andrew McNabb <amcnabb@mcnabbs.org> writes:

> If I'm (finally) understanding you correctly, your case is one where we
> are a server and handling a POST request.  In my application, I'm
> dealing with streaming _downloads_, not streaming _uploads_ (i.e., mine
> is client side rather than server side).  My code would look something
> like this:

I've been following this thread, but now I'm confused too, since I
also assumed you were talking about uploading to the server.

Your original post talked about web vs. web2, and how you needed to
augment web to handle streaming to "receive" (which I interpreted to
mean from the server perspective since that's the twisted.web code)
large files.

If you're talking about transmitting large files to a client,
twisted.web should already work just fine - unlike receiving where it
does require entirely buffering file uploads before notifying the
Resource of a request.

In my case, rather than push the file myself (and yes, it can use the
existing producer/consumer interface), I just reused
static.FileTransfer, which is a Producer, and registers itself with
the Request object.

It doesn't block the server while doing the transfer.

Or am I still misunderstanding your original post?

-- David


From mithrandi at mithrandi.net  Fri Mar  7 19:07:51 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri Mar  7 19:08:05 2008
Subject: [Twisted-web] Re: streaming request (was: status of Twisted
	Web and Web 2)
In-Reply-To: <m23ar2qhoe.fsf@valheru.db3l.homeip.net>
References: <20080306210253.GD13580@mcnabbs.org>
	<20080306220508.6859.604978648.divmod.quotient.16378@ohm>
	<20080306224501.GA2762@mcnabbs.org>
	<m23ar2qhoe.fsf@valheru.db3l.homeip.net>
Message-ID: <20080308000751.GB3267@mithrandi.net>

KiBEYXZpZCBCb2xlbiA8ZGIzbC5uZXRAZ21haWwuY29tPiBbMjAwOC0wMy0wNyAxNzo0MzoxMyAt
MDUwMF06Cgo+IEl0IGRvZXNuJ3QgYmxvY2sgdGhlIHNlcnZlciB3aGlsZSBkb2luZyB0aGUgdHJh
bnNmZXIuCj4gCj4gT3IgYW0gSSBzdGlsbCBtaXN1bmRlcnN0YW5kaW5nIHlvdXIgb3JpZ2luYWwg
cG9zdD8KCkhlJ3Mgd3JpdGluZyBhIGNsaWVudCwgbm90IGEgc2VydmVyLCBpZiBJIHVuZGVyc3Rh
bmQgY29ycmVjdGx5LgotLSAKbWl0aHJhbmRpLCBpIEFpbmlsIGVuLUJhbGFuZG9yLCBhIGZhZXIg
QW1iYXIKLS0tLS0tLS0tLS0tLS0gbmV4dCBwYXJ0IC0tLS0tLS0tLS0tLS0tCkEgbm9uLXRleHQg
YXR0YWNobWVudCB3YXMgc2NydWJiZWQuLi4KTmFtZTogbm90IGF2YWlsYWJsZQpUeXBlOiBhcHBs
aWNhdGlvbi9wZ3Atc2lnbmF0dXJlClNpemU6IDE5NyBieXRlcwpEZXNjOiBEaWdpdGFsIHNpZ25h
dHVyZQpVcmwgOiBodHRwOi8vdHdpc3RlZG1hdHJpeC5jb20vcGlwZXJtYWlsL3R3aXN0ZWQtd2Vi
L2F0dGFjaG1lbnRzLzIwMDgwMzA4LzZmNmVkODk0L2F0dGFjaG1lbnQucGdwCg==
From amcnabb at mcnabbs.org  Fri Mar  7 19:25:51 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Fri Mar  7 19:25:44 2008
Subject: [Twisted-web] Re: streaming request (was: status of Twisted
	Web and Web 2)
In-Reply-To: <m23ar2qhoe.fsf@valheru.db3l.homeip.net>
References: <20080306210253.GD13580@mcnabbs.org>
	<20080306220508.6859.604978648.divmod.quotient.16378@ohm>
	<20080306224501.GA2762@mcnabbs.org>
	<m23ar2qhoe.fsf@valheru.db3l.homeip.net>
Message-ID: <20080308002551.GA2361@mcnabbs.org>

On Fri, Mar 07, 2008 at 05:43:13PM -0500, David Bolen wrote:
> 
> I've been following this thread, but now I'm confused too, since I
> also assumed you were talking about uploading to the server.
> 
> Your original post talked about web vs. web2, and how you needed to
> augment web to handle streaming to "receive" (which I interpreted to
> mean from the server perspective since that's the twisted.web code)
> large files.

Twisted web has client code, too, and that's what I was referring to.
In the near future, I will probably be interested in the server side,
too, so I appreciate everything that's been said in this thread.


-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080307/48981cf4/attachment.pgp
From amcnabb at mcnabbs.org  Mon Mar 10 12:15:17 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Mon Mar 10 12:15:11 2008
Subject: [Twisted-web] XMLRPC and keyword arguments
Message-ID: <20080310161517.GA17785@mcnabbs.org>

I've made a simple extension to XMLRPC, and I was wondering if it is
something that I should contribute back to Twisted or if I should keep
it to myself.  In other words, would others find this useful?

The idea is that RPC methods might need to get at information in the
request.  For example, an RPC method might need to know what IP address
the request comes from or it might need to know if HTTP basic
authentication is set.  I'm sure I could come up with more examples.

Here how it's used:

class SomeXMLRPCClass(XMLRPC):
    def keywords(self, request):
        return {'client': request.client}

    def xmlrpc_echo(self, x, **kwds):
        client = kwds['client']
        # [do what you need to with client here]
        return x

Anyway, implementing this is incredibly simple, and I needed it for a
project I'm working on.  If it would be useful to others, I'd be happy
to create a ticket and post a patch.

Thanks.

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080310/0dc5d1d4/attachment.pgp
From exarkun at divmod.com  Mon Mar 10 13:09:19 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon Mar 10 13:09:24 2008
Subject: [Twisted-web] XMLRPC and keyword arguments
In-Reply-To: <20080310161517.GA17785@mcnabbs.org>
Message-ID: <20080310170919.6859.2044030180.divmod.quotient.17766@ohm>

On Mon, 10 Mar 2008 10:15:17 -0600, Andrew McNabb <amcnabb@mcnabbs.org> wrote:
>I've made a simple extension to XMLRPC, and I was wondering if it is
>something that I should contribute back to Twisted or if I should keep
>it to myself.  In other words, would others find this useful?
>
>The idea is that RPC methods might need to get at information in the
>request.  For example, an RPC method might need to know what IP address
>the request comes from or it might need to know if HTTP basic
>authentication is set.  I'm sure I could come up with more examples.
>
>Here how it's used:
>
>class SomeXMLRPCClass(XMLRPC):
>    def keywords(self, request):
>        return {'client': request.client}
>
>    def xmlrpc_echo(self, x, **kwds):
>        client = kwds['client']
>        # [do what you need to with client here]
>        return x
>
>Anyway, implementing this is incredibly simple, and I needed it for a
>project I'm working on.  If it would be useful to others, I'd be happy
>to create a ticket and post a patch.

This seems like a slightly round-about API.  What would you think of having
another prefix which included the request as the first argument?  Or the
same prefix could be used and the function could have an attribute indicating
it wants the request.

Jean-Paul

From ddwiggins at advpubtech.com  Mon Mar 10 13:11:58 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon Mar 10 13:20:14 2008
Subject: [Twisted-web] Re: XMLRPC and keyword arguments
In-Reply-To: <20080310161517.GA17785@mcnabbs.org>
References: <20080310161517.GA17785@mcnabbs.org>
Message-ID: <fr3q4v$i65$1@ger.gmane.org>

Andrew McNabb wrote:
> I've made a simple extension to XMLRPC, and I was wondering if it is
> something that I should contribute back to Twisted or if I should keep
> it to myself.  In other words, would others find this useful?

I certainly would -- please contribute!
> 
> The idea is that RPC methods might need to get at information in the
> request.  For example, an RPC method might need to know what IP address
> the request comes from or it might need to know if HTTP basic
> authentication is set.

Just my situation -- how'd you know?

Tnx,

-- 
Don Dwiggins
Advanced Publishing Technology


From amcnabb at mcnabbs.org  Mon Mar 10 13:20:35 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Mon Mar 10 13:20:27 2008
Subject: [Twisted-web] XMLRPC and keyword arguments
In-Reply-To: <20080310170919.6859.2044030180.divmod.quotient.17766@ohm>
References: <20080310161517.GA17785@mcnabbs.org>
	<20080310170919.6859.2044030180.divmod.quotient.17766@ohm>
Message-ID: <20080310172035.GB17785@mcnabbs.org>

On Mon, Mar 10, 2008 at 12:09:19PM -0500, Jean-Paul Calderone wrote:
>
> This seems like a slightly round-about API.  What would you think of having
> another prefix which included the request as the first argument?  Or the
> same prefix could be used and the function could have an attribute indicating
> it wants the request.

I don't particularly like the idea of having another prefix, but the
second idea seems pretty straightforward.  It would probably make sense
to include a decorator that set the attribute.

Anyway, if you like the idea, I'll write it.

Thanks.

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080310/878f60f6/attachment.pgp
From p.mayers at imperial.ac.uk  Mon Mar 10 13:21:04 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon Mar 10 13:21:38 2008
Subject: [Twisted-web] XMLRPC and keyword arguments
In-Reply-To: <20080310170919.6859.2044030180.divmod.quotient.17766@ohm>
References: <20080310170919.6859.2044030180.divmod.quotient.17766@ohm>
Message-ID: <47D56E00.9050009@imperial.ac.uk>

>> Anyway, implementing this is incredibly simple, and I needed it for a
>> project I'm working on.  If it would be useful to others, I'd be happy
>> to create a ticket and post a patch.
> 
> This seems like a slightly round-about API.  What would you think of having
> another prefix which included the request as the first argument?  Or the
> same prefix could be used and the function could have an attribute 
> indicating
> it wants the request.

Yes please! Much nicer - kind of like the pb.Viewable and view_ method.

From amcnabb at mcnabbs.org  Mon Mar 10 21:32:45 2008
From: amcnabb at mcnabbs.org (Andrew McNabb)
Date: Mon Mar 10 21:32:38 2008
Subject: [Twisted-web] XMLRPC and keyword arguments
In-Reply-To: <20080310172035.GB17785@mcnabbs.org>
References: <20080310161517.GA17785@mcnabbs.org>
	<20080310170919.6859.2044030180.divmod.quotient.17766@ohm>
	<20080310172035.GB17785@mcnabbs.org>
Message-ID: <20080311013245.GA18528@mcnabbs.org>

On Mon, Mar 10, 2008 at 11:20:35AM -0600, Andrew McNabb wrote:
> 
> Anyway, if you like the idea, I'll write it.

I have posted a simple patch at
http://twistedmatrix.com/trac/ticket/3073

Enjoy.

-- 
Andrew McNabb
http://www.mcnabbs.org/andrew/
PGP Fingerprint: 8A17 B57C 6879 1863 DE55  8012 AB4D 6098 8826 6868
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080310/29a2a908/attachment.pgp
From suhaonay at gmail.com  Tue Mar 11 12:31:06 2008
From: suhaonay at gmail.com (Suha Onay)
Date: Tue Mar 11 12:31:19 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
Message-ID: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>

Hi,

I am a newbie of nevow. I want to open a save as dialog and enable the user
to save files.
I tried to use javascript with a href link but with no success.
I write:

"""
...
file =3D open('fifo.txt', 'w')
file.write('smth')
file.close()

return [
    T.a(href=3D"fifo.txt", onclick=3D"saveFile('fifo.txt')")['Save'],
    webform.renderForms()[FORM_LAYOUT],
]

"""
How can I achieve in this?
How can I give a link to a file in the server without nevow_carryover
repling the request?

Suha
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080311/89=
3ead68/attachment.htm
From glyph at divmod.com  Tue Mar 11 14:37:08 2008
From: glyph at divmod.com (glyph@divmod.com)
Date: Tue Mar 11 14:37:17 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
Message-ID: <20080311183708.21558.1264749047.divmod.xquotient.7808@joule.divmod.com>


On 04:31 pm, suhaonay@gmail.com wrote:
>I am a newbie of nevow. I want to open a save as dialog and enable the 
>user
>to save files.

Are you talking about uploading a file to the server, or saving a file 
on the client?  (You can't save files on the client in a web browser in 
any way that I'm aware of.)

From ldanielburr at mac.com  Tue Mar 11 14:51:26 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Tue Mar 11 14:52:34 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <20080311183708.21558.1264749047.divmod.xquotient.7808@joule.divmod.com>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
	<20080311183708.21558.1264749047.divmod.xquotient.7808@joule.divmod.com>
Message-ID: <op.t7u7z0cs3oj628@hr001.texturallc.net>

On Tue, 11 Mar 2008 13:37:08 -0500, <glyph@divmod.com> wrote:

>
> On 04:31 pm, suhaonay@gmail.com wrote:
>> I am a newbie of nevow. I want to open a save as dialog and enable the  
>> user
>> to save files.
>
> Are you talking about uploading a file to the server, or saving a file  
> on the client?  (You can't save files on the client in a web browser in  
> any way that I'm aware of.)
>

I think the OP is talking about providing a link to some downloadable
content, e.g., a spreadsheet or an image, that should trigger the
browser's download behavior.

Then again, I could be wrong.

L. Daniel Burr

From suha at ly.com.tr  Wed Mar 12 02:55:37 2008
From: suha at ly.com.tr (Suha Onay)
Date: Wed Mar 12 02:55:48 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <op.t7u7z0cs3oj628@hr001.texturallc.net>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
	<20080311183708.21558.1264749047.divmod.xquotient.7808@joule.divmod.com>
	<op.t7u7z0cs3oj628@hr001.texturallc.net>
Message-ID: <49a67b230803112355k64b556f7w9a9852d7a2d0407c@mail.gmail.com>

Yes Daniel is right.
Sorry about the wrong question.
I am talking about providing a link to some downloadable content, e.g., a
spreadsheet or an image. How is it possible in nevow?

On Tue, Mar 11, 2008 at 8:51 PM, L. Daniel Burr <ldanielburr@mac.com> wrote:

> On Tue, 11 Mar 2008 13:37:08 -0500, <glyph@divmod.com> wrote:
>
> >
> > On 04:31 pm, suhaonay@gmail.com wrote:
> >> I am a newbie of nevow. I want to open a save as dialog and enable the
> >> user
> >> to save files.
> >
> > Are you talking about uploading a file to the server, or saving a file
> > on the client?  (You can't save files on the client in a web browser in
> > any way that I'm aware of.)
> >
>
> I think the OP is talking about providing a link to some downloadable
> content, e.g., a spreadsheet or an image, that should trigger the
> browser's download behavior.
>
> Then again, I could be wrong.
>
> L. Daniel Burr
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



-- =

Suha ONAY

Likya Yaz=FDl=FDm ve Bili=FEim Hizmetleri Ltd.=DEti.
Galyum Blok No: B-08
ODT=DC Teknokent
06531 Ankara - T=FCrkiye
Tel :: (312) 210 00 90
Fax :: (312) 210 00 91
Web ::  www.ly.com.tr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080312/b8=
24365c/attachment.htm
From moebius.lists at gmail.com  Wed Mar 12 13:16:39 2008
From: moebius.lists at gmail.com (Adrian Perez)
Date: Wed Mar 12 13:17:39 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <49a67b230803112355k64b556f7w9a9852d7a2d0407c@mail.gmail.com>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
	<20080311183708.21558.1264749047.divmod.xquotient.7808@joule.divmod.com>
	<op.t7u7z0cs3oj628@hr001.texturallc.net>
	<49a67b230803112355k64b556f7w9a9852d7a2d0407c@mail.gmail.com>
Message-ID: <20080312181639.4a53b6f9@gila.local>

On Wed, 12 Mar 2008 08:55:37 +0200
"Suha Onay" <suha@ly.com.tr> wrote:

> Yes Daniel is right.
> Sorry about the wrong question.
> I am talking about providing a link to some downloadable content,
> e.g., a spreadsheet or an image. How is it possible in nevow?
> 
> On Tue, Mar 11, 2008 at 8:51 PM, L. Daniel Burr <ldanielburr@mac.com>
> wrote:
> 
> > On Tue, 11 Mar 2008 13:37:08 -0500, <glyph@divmod.com> wrote:
> >
> > >
> > > On 04:31 pm, suhaonay@gmail.com wrote:
> > >> I am a newbie of nevow. I want to open a save as dialog and
> > >> enable the user
> > >> to save files.
> > >
> > > Are you talking about uploading a file to the server, or saving a
> > > file on the client?  (You can't save files on the client in a web
> > > browser in any way that I'm aware of.)
> > >
> >
> > I think the OP is talking about providing a link to some
> > downloadable content, e.g., a spreadsheet or an image, that should
> > trigger the browser's download behavior.

You should use nevow.static.File, a quick example (save in example.tac
and run with "twistd -noy example.tac"):

  from nevow import static, appserver
  from twisted.application import service, internet, strports

  application = service.Application("example")
  site = appserver.NevowSite(
              resource=staic.File("thing.jpeg", "image/jpeg"))
  server = strports.service("tcp:8080", site)
  server.setServiceParent(application)

You can construct a nevow.static.File passing a path to a directory,
and you will be serving all the contents of the directory.

Cheers,

-- 
~
~
~
".signature" 4 lines, 50 characters written
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080312/f1908170/signature.pgp
From suhaonay at gmail.com  Thu Mar 13 03:16:23 2008
From: suhaonay at gmail.com (Suha Onay)
Date: Thu Mar 13 03:16:28 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <20080312181639.4a53b6f9@gila.local>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
	<20080311183708.21558.1264749047.divmod.xquotient.7808@joule.divmod.com>
	<op.t7u7z0cs3oj628@hr001.texturallc.net>
	<49a67b230803112355k64b556f7w9a9852d7a2d0407c@mail.gmail.com>
	<20080312181639.4a53b6f9@gila.local>
Message-ID: <49a67b230803130016x3b33fa09wa0671a49a8e10fd8@mail.gmail.com>

In the base page, I served the xxx directory for static files with the
following lines.

    def child_xxx(self, ctx):
        return static.File(os.path.join(LQS.WEB_SERVER, 'xxx'))

On the page that will serve a link to the file, the file is saved to the xxx
directory and a link is given:

f=3D open(os.path.join(LQS.WEB_SERVER, 'xxx', 'qqq.lqp'), 'w')
f.write(fileInput)
f.close()

return [
    T.a(href=3D"/xxx/qqq.lqp")['Save'],
    webform.renderForms()[FORM_LAYOUT],
]

I run this page from Firefox, IE and IE Mobile.
I want the browser open a save as dialog but it shows the file within the
browser.
How can I achieve this?

Thanks.


On Wed, Mar 12, 2008 at 7:16 PM, Adrian Perez <moebius.lists@gmail.com>
wrote:

> On Wed, 12 Mar 2008 08:55:37 +0200
> "Suha Onay" <suha@ly.com.tr> wrote:
>
> > Yes Daniel is right.
> > Sorry about the wrong question.
> > I am talking about providing a link to some downloadable content,
> > e.g., a spreadsheet or an image. How is it possible in nevow?
> >
> > On Tue, Mar 11, 2008 at 8:51 PM, L. Daniel Burr <ldanielburr@mac.com>
> > wrote:
> >
> > > On Tue, 11 Mar 2008 13:37:08 -0500, <glyph@divmod.com> wrote:
> > >
> > > >
> > > > On 04:31 pm, suhaonay@gmail.com wrote:
> > > >> I am a newbie of nevow. I want to open a save as dialog and
> > > >> enable the user
> > > >> to save files.
> > > >
> > > > Are you talking about uploading a file to the server, or saving a
> > > > file on the client?  (You can't save files on the client in a web
> > > > browser in any way that I'm aware of.)
> > > >
> > >
> > > I think the OP is talking about providing a link to some
> > > downloadable content, e.g., a spreadsheet or an image, that should
> > > trigger the browser's download behavior.
>
> You should use nevow.static.File, a quick example (save in example.tac
> and run with "twistd -noy example.tac"):
>
>  from nevow import static, appserver
>  from twisted.application import service, internet, strports
>
>  application =3D service.Application("example")
>  site =3D appserver.NevowSite(
>              resource=3Dstaic.File("thing.jpeg", "image/jpeg"))
>  server =3D strports.service("tcp:8080", site)
>  server.setServiceParent(application)
>
> You can construct a nevow.static.File passing a path to a directory,
> and you will be serving all the contents of the directory.
>
> Cheers,
>
> --
> ~
> ~
> ~
> ".signature" 4 lines, 50 characters written
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>


-- =

Suha ONAY

Likya Yaz=FDl=FDm ve Bili=FEim Hizmetleri Ltd.=DEti.
Galyum Blok No: B-08
ODT=DC Teknokent
06531 Ankara - T=FCrkiye
Tel :: (312) 210 00 90
Fax :: (312) 210 00 91
Web :: www.ly.com.tr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080313/31=
f6d63f/attachment.htm
From karnaugh at karnaugh.za.net  Thu Mar 13 03:24:29 2008
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Thu Mar 13 03:24:44 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <49a67b230803130016x3b33fa09wa0671a49a8e10fd8@mail.gmail.com>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>	<20080311183708.21558.1264749047.divmod.xquotient.7808@joule.divmod.com>	<op.t7u7z0cs3oj628@hr001.texturallc.net>	<49a67b230803112355k64b556f7w9a9852d7a2d0407c@mail.gmail.com>	<20080312181639.4a53b6f9@gila.local>
	<49a67b230803130016x3b33fa09wa0671a49a8e10fd8@mail.gmail.com>
Message-ID: <47D8D6AD.7070906@karnaugh.za.net>

On 13/03/2008 09:16 Suha Onay wrote:
> return [
>     T.a(href="/xxx/qqq.lqp")['Save'],
>     webform.renderForms()[FORM_LAYOUT],
> ]
> 
> I run this page from Firefox, IE and IE Mobile.
> I want the browser open a save as dialog but it shows the file within 
> the browser.
> How can I achieve this?

You need to set the MIME type for that extension. Not sure how to do 
this with the static file method, there is a mapping somewhere which 
you can pass as arguments to the instance if I remember correctly.

From maarten at treewalker.org  Thu Mar 13 09:23:42 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu Mar 13 09:18:56 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <49a67b230803130016x3b33fa09wa0671a49a8e10fd8@mail.gmail.com>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
	<20080312181639.4a53b6f9@gila.local>
	<49a67b230803130016x3b33fa09wa0671a49a8e10fd8@mail.gmail.com>
Message-ID: <200803131423.47274.maarten@treewalker.org>

On Thursday 13 March 2008, Suha Onay wrote:

> I run this page from Firefox, IE and IE Mobile.
> I want the browser open a save as dialog but it shows the file within the
> browser.
> How can I achieve this?

You can set the following HTTP header:
  Content-Disposition: attachment; filename
Where "filename" is the suggested name for saving the file.

Note that HTTP headers must be ASCII. It is possible to encode Unicode in 
HTTP headers, but it's a real pain to get it working in all browsers. At 
least, I haven't been able to find a single way of encoding that works for 
IE, Mozilla and Opera, so now I choose a different way of encoding 
depending on the user agent header.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080313/0eab96c4/attachment.pgp
From kamal.choudhary at gmail.com  Thu Mar 13 09:32:22 2008
From: kamal.choudhary at gmail.com (Kamal Choudhary)
Date: Thu Mar 13 09:32:27 2008
Subject: [Twisted-web] Stuck twisted-web2 worker threads after client closes
	socket after sending data < content length of HTTP Post
In-Reply-To: <7386643e0803130626h7f9d5f0ay6ee5287c4ebd3680@mail.gmail.com>
References: <7386643e0803130626h7f9d5f0ay6ee5287c4ebd3680@mail.gmail.com>
Message-ID: <7386643e0803130632i5b12b60fx8f88a01cd4e4492b@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part -----=
---------
A non-text attachment was scrubbed...
Name: twisted_server3.py
Type: text/x-python
Size: 1673 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080313/8=
499130e/twisted_server3-0001.py
-------------- next part --------------
------------------------------------------------------------------------
  File "C:\Python24\lib\threading.py", line 442, in __bootstrap
    self.run()

  File "C:\Python24\lib\threading.py", line 422, in run
    self.__target(*self.__args, **self.__kwargs)

  File "/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/python/=
threadpool.py", line 161, in _worker

  File "/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/python/=
context.py", line 59, in callWithContext

  File "/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/python/=
context.py", line 37, in callWithContext

  File "/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/web2/ws=
gi.py", line 190, in run

  File "C:\work\twisted-head\twisted_server3.py", line 18, in dummy_app
    out_content =3D environ['wsgi.input'].read(int(environ['CONTENT_LENGTH'=
]))

  File "/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/web2/ws=
gi.py", line 74, in read

  File "/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/interne=
t/threads.py", line 81, in blockingCallFromTh
read

  File "C:\Python24\lib\Queue.py", line 119, in get
    self.not_empty.wait()

  File "C:\Python24\lib\threading.py", line 203, in wait
    waiter.acquire()
From kamal.choudhary at gmail.com  Thu Mar 13 09:36:06 2008
From: kamal.choudhary at gmail.com (Kamal Choudhary)
Date: Thu Mar 13 09:36:11 2008
Subject: [Twisted-web] Stuck twisted-web2 worker threads after client closes
	socket after sending data < content length of HTTP Post
In-Reply-To: <7386643e0803130632i5b12b60fx8f88a01cd4e4492b@mail.gmail.com>
References: <7386643e0803130626h7f9d5f0ay6ee5287c4ebd3680@mail.gmail.com>
	<7386643e0803130632i5b12b60fx8f88a01cd4e4492b@mail.gmail.com>
Message-ID: <7386643e0803130636r14ce0796g19f6ff02163c494d@mail.gmail.com>

On my app server which is built upon twisted+web2 I have seen that at times
some of worker threads will get blocked and won't get released ever.
Eventually my app server runs out of worker threads and starts throwing
message "503 Service not available"

On more debugging I have found that I can easily recreate this situation by
doing a incomplete HTTP Post with data less then content length specified in
POST header. After this incomplete HTTP Post with lesser bytes of data if I
close the client socket or kill client process or reboot client machine, in
all these three cases it results in a hanged thread on my app server. This
hanged threads remains on app server for ever till kill app server process,
no time out of any kind.

Further debugging into web2 code I found that
stream.BufferedStream.readExactly doesn't come out of
stream.BufferedStrem._readUntil even if I close client side socket. After
putting some debug statements I found that self.stream.read() in
stream.BufferedStream._readUntil doesn't return None as a signal for End Of
File even after client has closed the socket connection. Since it doesn't
get None it will never return with whatever data it has received so far from
client.

To reproduce this issue, I have written a minimal twisted-web2 server and a
client that does a HTTP Post to it with incomplete data. After Post it
closes the client socket and sleeps for sometime. Finally it prints the
stack of all process threads, which clearly shows one blocked twisted worker
thread. In the same program if you change it to do complete HTTP Post, in
the thread dump there is no blocked twisted worker thread.

Here is the stack traceback of blocked twisted worker thread.

  File "C:\Python24\lib\threading.py", line 442, in __bootstrap
    self.run()

  File "C:\Python24\lib\threading.py", line 422, in run
    self.__target(*self.__args, **self.__kwargs)

  File
"/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/python/threadp=
ool.py",
line 161, in _worker

  File
"/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/python/context=
.py",
line 59, in callWithContext

  File
"/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/python/context=
.py",
line 37, in callWithContext

  File
"/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/web2/wsgi.py",
line 190, in run

  File "C:\work\twisted-head\twisted_server3.py", line 18, in dummy_app
    out_content =3D environ['wsgi.input'].read(int(environ['CONTENT_LENGTH'=
]))

  File
"/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/web2/wsgi.py",
line 74, in read

  File
"/home/lotus/Desktop/pywork3.3/lm/foreign-common/src/twisted/internet/threa=
ds.py",
line 81, in blockingCallFromThread

  File "C:\Python24\lib\Queue.py", line 119, in get
    self.not_empty.wait()

  File "C:\Python24\lib\threading.py", line 203, in wait
    waiter.acquire()


To run this program twisted, twisted.web2, zope and threadframe modules are
required.



import sys, time, socket
from threading import Thread
import threadframe, traceback
from twisted.web2 import server, channel, static, wsgi, resource
from twisted.internet import reactor

class TwistedWebServerThread(Thread):

    def __init__(self, app):
        Thread.__init__(self, name=3D"Twisted")
        factory =3D channel.HTTPFactory(server.Site(wsgi.WSGIResource(app)))
        reactor.listenTCP(8080, factory, interface=3D"0.0.0.0")

    def run(self):
        reactor.run(installSignalHandlers=3DFalse)

def dummy_app(environ, start_response):
    out_content =3D environ['wsgi.input'].read(int(environ['CONTENT_LENGTH'=
]))
    start_response('200 OK', [('Content-type', 'text/plain')])
    return [out_content]

#data intentionally less then content length
D =3D "POST /cgi-bin/minapi.py HTTP/1.0\r\n"+ \
 "Host: 127.0.0.1:8080\r\n"+\
 "Content-Type: text/xml\r\n"+\
 "Content-Length: 152\r\n"+\
 "\r\n"+\
 "<?xml version=3D'1.0'?>\n"+\
 "<methodCall>\n"+\
 "<methodName>getStateName</methodName>\n" +\
 "<params>\n" +\
 "<param>\n" +\
 "<value><int>41</int></value>\n" #+\
# "</param>\n" +\
# "</params>\n" +\
# "</methodCall>\n"

#D =3D open("data.txt3", "rb").read()

def half_post():
    s =3D socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(("127.0.0.1", 8080))
    s.send(D)
    s.close()

def write_server_threads():
    frames =3D threadframe.threadframe()
    for frame in frames:
        print '-' * 72
        for linestr in traceback.format_stack(frame):
            print linestr

if __name__ =3D=3D "__main__":
    s =3D TwistedWebServerThread(dummy_app)
    s.start()
    time.sleep(0.2)
    half_post()
    time.sleep(5)
    write_server_threads()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080313/52=
79c354/attachment.htm
From suha at ly.com.tr  Thu Mar 13 09:46:44 2008
From: suha at ly.com.tr (Suha Onay)
Date: Thu Mar 13 09:46:53 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <200803131423.47274.maarten@treewalker.org>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
	<20080312181639.4a53b6f9@gila.local>
	<49a67b230803130016x3b33fa09wa0671a49a8e10fd8@mail.gmail.com>
	<200803131423.47274.maarten@treewalker.org>
Message-ID: <49a67b230803130646q2d2186bqf9a60e0782805137@mail.gmail.com>

How is it possible to set the HTTP header of the link to this file (qqq.lqp
)?

f=3D open(os.path.join(LQS.WEB_SERVER, 'xxx', 'qqq.lqp'), 'w')
f.write(fileInput)
f.close()

return [
    T.a(href=3D"/xxx/qqq.lqp")['Save'],
    webform.renderForms()[FORM_LAYOUT],
]


On Thu, Mar 13, 2008 at 3:23 PM, Maarten ter Huurne <maarten@treewalker.org>
wrote:

> On Thursday 13 March 2008, Suha Onay wrote:
>
> > I run this page from Firefox, IE and IE Mobile.
> > I want the browser open a save as dialog but it shows the file within
> the
> > browser.
> > How can I achieve this?
>
> You can set the following HTTP header:
>  Content-Disposition: attachment; filename
> Where "filename" is the suggested name for saving the file.
>
> Note that HTTP headers must be ASCII. It is possible to encode Unicode in
> HTTP headers, but it's a real pain to get it working in all browsers. At
> least, I haven't been able to find a single way of encoding that works for
> IE, Mozilla and Opera, so now I choose a different way of encoding
> depending on the user agent header.
>
> Bye,
>                 Maarten
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>


-- =

Suha ONAY

Likya Yaz=FDl=FDm ve Bili=FEim Hizmetleri Ltd.=DEti.
Galyum Blok No: B-08
ODT=DC Teknokent
06531 Ankara - T=FCrkiye
Tel :: (312) 210 00 90
Fax :: (312) 210 00 91
Web :: www.ly.com.tr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080313/78=
159197/attachment.htm
From maarten at treewalker.org  Thu Mar 13 09:56:46 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu Mar 13 09:51:59 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <200803131423.47274.maarten@treewalker.org>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
	<49a67b230803130016x3b33fa09wa0671a49a8e10fd8@mail.gmail.com>
	<200803131423.47274.maarten@treewalker.org>
Message-ID: <200803131456.50001.maarten@treewalker.org>

On Thursday 13 March 2008, I wrote:

> You can set the following HTTP header:
>   Content-Disposition: attachment; filename
> Where "filename" is the suggested name for saving the file.

This is not correct; it should be:
  Content-Disposition: attachment; filename=<filename>
Where "<filename>" is the suggested name for saving the file.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080313/29702660/attachment.pgp
From maarten at treewalker.org  Thu Mar 13 18:35:28 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu Mar 13 18:31:00 2008
Subject: [Twisted-web] Nevow-Stan How to save file?
In-Reply-To: <49a67b230803130646q2d2186bqf9a60e0782805137@mail.gmail.com>
References: <49a67b230803110931i71816e30lfa75306636b0fa05@mail.gmail.com>
	<200803131423.47274.maarten@treewalker.org>
	<49a67b230803130646q2d2186bqf9a60e0782805137@mail.gmail.com>
Message-ID: <200803132335.34196.maarten@treewalker.org>

On Thursday 13 March 2008, Suha Onay wrote:

> How is it possible to set the HTTP header of the link to this file
> (qqq.lqp )?
>
> f= open(os.path.join(LQS.WEB_SERVER, 'xxx', 'qqq.lqp'), 'w')
> f.write(fileInput)
> f.close()
>
> return [
>     T.a(href="/xxx/qqq.lqp")['Save'],
>     webform.renderForms()[FORM_LAYOUT],
> ]

The HTTP header cannot be set on the link; the header should be set when 
serving the file download. This is just a matter of calling setHeader() on 
the request. I'm not very familiar with Nevow, so I don't know where that 
call should be placed.

By the way, instead of generating a file on the server and offering that for 
download, it might be simpler to send the data directly to the client. That 
way you don't have to worry about uniqueness of file names, cleaning up 
files when they are no longer needed etc.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080313/9f9e872e/attachment.pgp
From vvangelovski at gmail.com  Wed Mar 19 06:57:20 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Wed Mar 19 06:57:23 2008
Subject: [Twisted-web] proxy and https
Message-ID: <406b9fda0803190357j5fe17284n6c66a16f29f3015c@mail.gmail.com>

I'm writing a simple content filtering and access restriction proxy
using the twisted web proxy package. Here's some sample code:

#!/usr/bin/env python

from twisted.web import proxy, http
import sys
from twisted.python import log

PROXY_PORT = 80

class FilterProxyClient(proxy.ProxyClient):

   def handleHeader(self, key, value):
       #SOME FILTERING CODE

       proxy.ProxyClient.handleHeader(self, key, value)

   def handleResponsePart(self, data):
       #SOME CONTENT RECOGNITION CODE
           proxy.ProxyClient.handleResponsePart(self, data)


   def handleResponseEnd(self):

       proxy.ProxyClient.handleResponseEnd(self)

class FilterProxyFactory(proxy.ProxyClientFactory):


   def buildProtocol(self, addr):

       client = proxy.ProxyClientFactory.buildProtocol(self, addr)
       # upgrade proxy.proxyClient object to AdpusherProxyClient
       client.__class__ = FilterProxyClient
       return client

class FilterProxyRequest(proxy.ProxyRequest):
   protocols = {'http': AdpusherProxyFactory}

   def __init__(self,*args):

       proxy.ProxyRequest.__init__(self, *args)

   def process(self):
       #SOME FILTERING CODE

       proxy.ProxyRequest.process(self)

class FilterProxy(proxy.Proxy):
   def __init__(self):

       proxy.Proxy.__init__(self)


   def requestFactory(self, *args):

       return FilterProxyRequest( *args)

class FilterProxyFactory(http.HTTPFactory):
   def __init__(self):

       http.HTTPFactory.__init__(self)

   def buildProtocol(self, addr):
       protocol = FilterProxy()
       return protocol


if __name__ == "__main__":

   from twisted.internet import reactor

   prox = FilterProxyFactory()
   reactor.listenTCP(PROXY_PORT, prox)

   reactor.run( )

I'd like to know if there is a way I can set it up so that it also
handles https traffic but doesn't do anythin with the content, just so
that https traffic passes trough it.

From kozneb at gmail.com  Fri Mar 21 06:44:57 2008
From: kozneb at gmail.com (=?UTF-8?Q?Harald_Bl=C3=A5tand?=)
Date: Fri Mar 21 06:45:09 2008
Subject: [Twisted-web] Athena + formless?
Message-ID: <1ff309e60803210344q7cd5273fka43ff86f74645891@mail.gmail.com>

SGksCgpFeHBlcmltZW50aW5nIHdpdGggZm9ybXMgaW4gYW4gQXRoZW5hIGFwcC4gSGF2ZSBhIHdl
YiBwYWdlIHdpdGggMiBwYW5lcwooPGRpdj5zKS4gV2FudCB0byBhdm9pZCBwYWdlIHJlZnJlc2gu
ClN0YXJ0ZWQgd2l0aCBvd24gdGVzdCBjb2RlLCBsaWtlCgpjbGFzcyBMZWZ0UGFuZShhdGhlbmEu
TGl2ZUZyYWdtZW50KToKICAgIGRlZiB0ZXN0UGxhaW5TdWJtaXRGb3JtKHNlbGYpOgogICAgICAg
IGYgPSBmb3JtKCdmb3JtVGVzdCcsCiAgICAgICAgICAgICAgICAgJ1BsYWluIHN1Ym1pdCBmb3Jt
JywKICAgICAgICAgICAgICAgICBbVC50ZXh0YXJlYShuYW1lPSd0ZXh0YXJlYScpWyd0ZXN0aW5n
IGEgcGxhaW4gZm9ybSddXSwKICAgICAgICAgICAgICAgICBbJycsXSwKICAgICAgICAgICAgICAg
ICAnc3VibWl0X2Zvcm0nKQogICAgICAgIHNlbGYuY2FsbFJlbW90ZSgncHVzaF9odG1sX3RvX3Bh
bmUnLCBmLCB1J3JpZ2h0UGFuZScpCiAgICBhdGhlbmEuZXhwb3NlKHRlc3RQbGFpblN1Ym1pdEZv
cm0pCgpUaGlzIHNob3dzIHRoZSBmb3JtIG9rLCBidXQgSSBnZXQgaW4gdHJvdWJsZSByZXRyaWV2
aW5nIGl0cyBkYXRhIG9uIHN1Ym1pdC4KClRyeWluZyB0byBiZW5lZml0IGZyb20gZm9ybWxlc3Mg
ZmVsdCBsaWtlIGEgYmV0dGVyIGlkZWEsIHdpdGggdGhlIGFzc3VtcHRpb24KdGhhdCBJIGNvdWxk
IHNvbWVob3cgY2F0Y2ggdGhlIHN1Ym1pdCBieSBzdWJjbGFzc2luZwpuZXZvdy5yZW5kLkZyZWVm
b3JtQ2hpbGRNaXhpbiwgb3Igc29tZXRoaW5nLiBNeSBjb2RlIHdvdWxkIGFsc28gZG8KICAgICAg
ICByZXF1ZXN0ID0gaW5ldm93LklSZXF1ZXN0KGN0eCkgICAgICAgICByZXF1ZXN0LmNvZGUgPSAy
MDQKICAgICAgICByZXF1ZXN0LmNvZGVfbWVzc2FnZSA9ICdObyBDaGFuZ2UnCiAgICAgICAgcmVx
dWVzdC5maW5pc2goKQp0byBhdm9pZCBhIHJlZnJlc2guCgpTbywgYnVpbGRpbmcgb24KaHR0cDov
L2Rpdm1vZC5vcmcvdHJhYy9hdHRhY2htZW50L3dpa2kvRGl2bW9kTmV2b3cvRm9ybUhhbmRsaW5n
L0V4YW1wbGUxLjEudGFjLnB5CiAocS52LiksICBfZXhjZXB0IGl0cyBsYXN0IDIgbGluZXNfLgpN
eSBjb2RlIG5vdyBsb29rcyBsaWtlIC0KCmNsYXNzIExlZnRQYW5lKGF0aGVuYS5MaXZlRnJhZ21l
bnQpOgogICAgZGVmIHRlc3RGb3JtTGVzcyhzZWxmKToKICAgICAgICAgc2VsZi5jYWxsUmVtb3Rl
KCdwdXNoX2h0bWxfdG9fcGFuZScsIE5ld3NFZGl0UGFnZShzdG9yZT1zdG9yZSksCnUncmlnaHRQ
YW5lJykKICAgIGF0aGVuYS5leHBvc2UodGVzdEZvcm1MZXNzKQoKTm93IEkgZ2V0IGFuIGVycm9y
IGluIG5ldm93LmNvbnRleHQuV2ViQ29udGV4dC5sb2NhdGUgLQogZXhjZXB0aW9ucy5LZXlFcnJv
cjogJ0ludGVyZmFjZSBmb3JtbGVzcy5pZm9ybWxlc3MuSUNvbmZpZ3VyYWJsZUZhY3Rvcnkgd2Fz
Cm5vdCByZW1lbWJlcmVkLicKLi53aGljaCBJIHRoaW5rIGNvbWVzIGZyb20gbm90IHVzaW5nIG5l
dm93LmFwcHNlcnZlci5OZXZvd1NpdGUsIHdoaWNoIHdvdWxkCnRhY2sgb24gdGhlIHJlbGV2YW50
IGNvbnRleHQuIChPZiBjb3Vyc2UsIE5ldm93U2l0ZSBpcyB1c2VkIGluIG15ICJtYWluCmNsYXNz
IiAtIHdoYXQgSSdtIHRyeWluZyB0byBkbyBpcyAic25lYWtpbmcgb3V0IG9mIG15IGNvZGUiIC0g
ZmV0Y2hpbmcgdXNlcgppbnB1dCAtICJnZXR0aW5nIGJhY2sgd2hlcmUgSSB3YXMiLikKCkNhbid0
IHNheSBJIHVuZGVyc3RhbmQgYWxsIHRoYXQncyBnb2luZyBvbiwgYnV0IEknbSB0cnlpbmcgOikK
ClNvLCBxdWVzdGlvbnMsIHBvciBmYXZvciAtCklzIHRoaXMgYSBnb29kIGlkZWEgYXQgYWxsPyBJ
cyBpdCBkb2FibGU/CkNhbiBJICJhdHRhY2ggYSBwcm9wZXIgY29udGV4dCIgdG8gdGhhdCBmb3Jt
LCBhbmQgaG93PyAoR2VlLCBJIGRvbid0IGV2ZW4Ka25vdyBob3cgdG8gcGhyYXNlIGl0IGNvcnJl
Y3RseSA6KCApCgpUaGFua3MsCmsKLS0tLS0tLS0tLS0tLS0gbmV4dCBwYXJ0IC0tLS0tLS0tLS0t
LS0tCkFuIEhUTUwgYXR0YWNobWVudCB3YXMgc2NydWJiZWQuLi4KVVJMOiBodHRwOi8vdHdpc3Rl
ZG1hdHJpeC5jb20vcGlwZXJtYWlsL3R3aXN0ZWQtd2ViL2F0dGFjaG1lbnRzLzIwMDgwMzIxL2Q3
MDE5NTM3L2F0dGFjaG1lbnQuaHRtCg==
From andreww at datanet.ab.ca  Wed Mar 26 05:38:35 2008
From: andreww at datanet.ab.ca (Andrew Warkentin)
Date: Wed Mar 26 05:40:50 2008
Subject: [Twisted-web] Bug in twisted.web2.client when receiving non-chunked
 responses of indeterminate length
Message-ID: <47EA199B.2050507@datanet.ab.ca>

twisted.web2.client cuts responses short if they are not in chunked =

encoding and do not have a Content-Length header. I have attached a =

patch that fixes this bug. I am posting it to the list because I =

couldn't register on the site to post it to the bug tracker.

-------------- next part --------------
diff -r -C 3 TwistedWeb2-svn20071201.orig/twisted/web2/channel/http.py Twis=
tedWeb2-svn20071201/twisted/web2/channel/http.py
*** TwistedWeb2-svn20071201.orig/twisted/web2/channel/http.py	Sat Dec  1 04=
:10:51 2007
--- TwistedWeb2-svn20071201/twisted/web2/channel/http.py	Wed Mar 26 03:33:0=
9 2008
***************
*** 163,176 ****
              self.handleContentChunk(data[:self.length])
              extraneous =3D data[self.length:]
              channel =3D self.channel # could go away from allContentRecei=
ved.
!             if not self.chunkedIn:
!                 self.allContentReceived()
!             else:
!                 # NOTE: in chunked mode, self.length is the size of the c=
urrent chunk,
!                 # so we still have more to read.
!                 self.chunkedIn =3D 2 # Read next chunksize
              =

!             channel.setLineMode(extraneous)
  =

      def headerReceived(self, line):
          """Store this header away. Check for too much header data
--- 163,177 ----
              self.handleContentChunk(data[:self.length])
              extraneous =3D data[self.length:]
              channel =3D self.channel # could go away from allContentRecei=
ved.
!             if not (self.length is None and not self.chunkedIn and self.p=
arseCloseAsEnd):
!                 if not self.chunkedIn:
!                     self.allContentReceived()
!                 else:
!                     # NOTE: in chunked mode, self.length is the size of t=
he current chunk,
!                     # so we still have more to read.
!                     self.chunkedIn =3D 2 # Read next chunksize
              =

!                 channel.setLineMode(extraneous)
  =

      def headerReceived(self, line):
          """Store this header away. Check for too much header data
diff -r -C 3 TwistedWeb2-svn20071201.orig/twisted/web2/client/http.py Twist=
edWeb2-svn20071201/twisted/web2/client/http.py
*** TwistedWeb2-svn20071201.orig/twisted/web2/client/http.py	Sat Dec  1 04:=
11:46 2007
--- TwistedWeb2-svn20071201/twisted/web2/client/http.py	Wed Mar 26 03:15:48=
 2008
***************
*** 8,13 ****
--- 8,14 ----
  =

  from zope.interface import implements
  =

+ from twisted.internet.error import ConnectionDone
  from twisted.internet.defer import Deferred
  from twisted.protocols.basic import LineReceiver
  from twisted.protocols.policies import TimeoutMixin
***************
*** 165,171 ****
          self._error(ProtocolError(text))
  =

      def connectionLost(self, reason):
!         self._error(reason)
  =

      def gotInitialLine(self, initialLine):
          parts =3D initialLine.split(' ', 2)
--- 166,177 ----
          self._error(ProtocolError(text))
  =

      def connectionLost(self, reason):
!         # If the response was non-chunked and of indeterminate length, tr=
eat the
!         # connection being closed cleanly as the end of the response
!         if self.length is None and not self.chunkedIn and reason.check(Co=
nnectionDone):
!             self.allContentReceived()
!         else:
!             self._error(reason)
  =

      def gotInitialLine(self, initialLine):
          parts =3D initialLine.split(' ', 2)
From phil at bubblehouse.org  Wed Mar 26 14:30:39 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed Mar 26 14:30:52 2008
Subject: [Twisted-web] formatFailure recursion problems
Message-ID: <C41BF918-5F6F-4A2E-BF9B-D187F070F05E@bubblehouse.org>

I've been using formatFailure recently to provide pretty tracebacks in  
my webapp, and I'm loving it, but I've run into a scenario where I've  
got a recursive data structure that occasionally pops up in  
tracebacks, and causes formatFailure all kinds of problems.

Now, I can't really do much about the recursion itself, because it  
appears to be an unfortunate side effect of embedding Trac into a WSGI  
app I've written (the app just passes its environ variable to trac,  
acting as pseudo-transparent middleware).

So, the real question is, is there anything that can be done to make  
formatFailure deal with recursion more gracefully? I'm currently using  
a extremely quick-and-dirty hack that just caches the id of each  
non-'primitive' object, and returns '==RECURSION==' when it encounters  
the id a second time.

I guess what would be ideal is if it were possible could set some kind  
of depth limit for the htmlrepr() stuff, since most of the time I have  
no need to see that "deeply" into a local or global variable.

I'm glad to work on the patch myself, but I was wondering if anyone  
has any suggestions as to how this should work. The current patch I'm  
using is attached below, but it's pretty overzealous about preventing  
recursion; if you output the object once anywhere in the entire  
traceback, it will never be output again, even in a non-recursive  
scenario.

Anyways, any input would be appreciated...

-phil





Index: twisted/web/util.py
===================================================================
--- twisted/web/util.py (revision 23090)
+++ twisted/web/util.py (working copy)
@@ -234,8 +234,13 @@
  </style>
  """

-
+repr_cache = None
  def htmlrepr(x):
+    if(repr_cache is not None and type(x) not in (str, int, long,  
float, unicode)):
+        if(id(x) in repr_cache):
+            return '==RECURSION=='
+        else:
+            repr_cache[id(x)] = 1
      return htmlReprTypes.get(type(x), htmlUnknown)(x)

  def saferepr(x):
@@ -304,7 +309,6 @@
      return ret

  def formatFailure(myFailure):
-
      exceptionHTML = """
  <p class="error">%s: %s</p>
  """
@@ -325,6 +329,9 @@
  <tr class="varRow"><td class="varName">%s</td><td class="varValue"> 
%s</td></tr>
  """

+    global repr_cache
+    repr_cache = {}
+
      if not isinstance(myFailure, failure.Failure):
          return html.PRE(str(myFailure))
      io = StringIO()
@@ -387,4 +394,5 @@
      w(exceptionHTML % (html.escape(str(myFailure.type)),
                         html.escape(str(myFailure.value))))

+    repr_cache = None
      return io.getvalue()

From radix at twistedmatrix.com  Wed Mar 26 21:26:11 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed Mar 26 21:26:16 2008
Subject: [Twisted-web] [ANN] Twisted 8.0
Message-ID: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>

http://twistedmatrix.com/

MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
has been released, Twisted Matrix Laboratories announced Wednesday.

Enslaved by his new robotic overloads, Master of the Release
Christopher Armstrong presented the new package to the Internet on
March 26th. Armstrong was unable to comment, because of a device worn
around his neck preventing him from doing so, scientists say.

Secretary of Defense Jean-Paul Calderone was asked about concerns that
French interference may have played a role in the delay of this
release. "I find such speculation preposterous. Thomas Herv? is an
upstanding member of the Labs and his loyalties lie with us. He is a
fine addition to our team."  Rumors in the community allege that
Secretary Calderone is holding Herv?'s cat ransom until the release is
successfully distributed. Herv? was unavailable for comment.

This release comes shortly after the announcement by Chief of Public
Affairs Duncan McGreggor that Twisted had joined the Software Freedom
Conservancy. "We're happy to join the SFC, and we are now accepting
sponsorship. The fact that we are now ruled by a cabal of robots
should not put off potential donors. Our robotic overlords are running
us at peak efficiency, so we can most effectively distribute The
Love."

Asked about the version number jump in this release,
Commander-in-Chief Glyph Lefkowitz had the following to say: "Our
benefactors have found our previous dice-rolling version number scheme
to be inadequate, and have deigned to propose to us a more... logical
system of versioning."

=====

Twisted is an event-based framework for Internet applications which
works on Python 2.3, 2.4, and 2.5. It can be downloaded from

http://twistedmatrix.com/

Twisted 8.0 is a major feature release, with several new features and
a great number of bug fixes. Some of the highlights follow.

 - The IOCP reactor is now much improved and many bugs have been resolved.
 - Twisted is now easy_installable.
 - Many improvements were made to Trial, Twisted's unit testing system.
 - A new memcache client protocol implementation was added.
 - So much more[1]!

To see the full list of changes in its fifteen kilobytes of glory, see
the release notes[1]. We welcome you to download and enjoy, and please
file any bugs you find[2] and send comments to the mailing list[3].

Why the large version number bump? We've decided to switch to a
time-based versioning scheme. "8.0" means the first release in 2008.

[1] http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.0.1/NEWS?format=raw
[2] Register: http://twistedmatrix.com/trac/register New ticket:
http://twistedmatrix.com/trac/newticket
[3] http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Thanks!

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
From duncan.mcgreggor at gmail.com  Thu Mar 27 04:09:25 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu Mar 27 04:09:38 2008
Subject: [Twisted-web] [ANN] Twisted 8.0
In-Reply-To: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
Message-ID: <4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>

On Wed, Mar 26, 2008 at 8:26 PM, Christopher Armstrong
<radix@twistedmatrix.com> wrote:
> http://twistedmatrix.com/
>
>  MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
>  has been released, Twisted Matrix Laboratories announced Wednesday.
>
>  Enslaved by his new robotic overloads, Master of the Release
>  Christopher Armstrong presented the new package to the Internet on
>  March 26th. Armstrong was unable to comment, because of a device worn
>  around his neck preventing him from doing so, scientists say.

A reader (who fears the robotic overlords, and thus wishes to remain
anonymous) has suggested that we do a full press release with this
picture:
  http://chrisbishop.com/fineart/art-happycity.html

d

From karnaugh at karnaugh.za.net  Thu Mar 27 05:22:11 2008
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Thu Mar 27 05:22:31 2008
Subject: [Twisted-web] [ANN] Twisted 8.0
In-Reply-To: <4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
	<4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>
Message-ID: <47EB6743.7070804@karnaugh.za.net>

On 27/03/2008 10:09 Duncan McGreggor wrote:
> On Wed, Mar 26, 2008 at 8:26 PM, Christopher Armstrong
> <radix@twistedmatrix.com> wrote:
>> http://twistedmatrix.com/
>>
>>  MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
>>  has been released, Twisted Matrix Laboratories announced Wednesday.
>>
>>  Enslaved by his new robotic overloads, Master of the Release
>>  Christopher Armstrong presented the new package to the Internet on
>>  March 26th. Armstrong was unable to comment, because of a device worn
>>  around his neck preventing him from doing so, scientists say.
> 
> A reader (who fears the robotic overlords, and thus wishes to remain
> anonymous) has suggested that we do a full press release with this
> picture:
>   http://chrisbishop.com/fineart/art-happycity.html

I'm pleased to see Twisted is still one of the few Open Source 
projects out there which still has a genuine sense of humour - and 
delivers staggeringly high quality code in spite of it.

Well done all involved - and thank you :)

-- 
Colin Alston ~ http://www.karnaugh.za.net/
"To the world you may be one person, to one person you may be the 
world" ~ Rachel Ann Nunes.

From graemeglass at gmail.com  Thu Mar 27 05:50:03 2008
From: graemeglass at gmail.com (Graeme Glass)
Date: Thu Mar 27 05:50:06 2008
Subject: [Twisted-web] [ANN] Twisted 8.0
In-Reply-To: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
Message-ID: <ead817660803270250xd5864cdx271af40b2ad3784f@mail.gmail.com>

On Thu, Mar 27, 2008 at 3:26 AM, Christopher Armstrong
<radix@twistedmatrix.com> wrote:
> http://twistedmatrix.com/
>
>  MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
>  has been released, Twisted Matrix Laboratories announced Wednesday.
>
>  Enslaved by his new robotic overloads, Master of the Release
>  Christopher Armstrong presented the new package to the Internet on
>  March 26th. Armstrong was unable to comment, because of a device worn
>  around his neck preventing him from doing so, scientists say.
>
>  Secretary of Defense Jean-Paul Calderone was asked about concerns that
>  French interference may have played a role in the delay of this
>  release. "I find such speculation preposterous. Thomas Herv? is an
>  upstanding member of the Labs and his loyalties lie with us. He is a
>  fine addition to our team."  Rumors in the community allege that
>  Secretary Calderone is holding Herv?'s cat ransom until the release is
>  successfully distributed. Herv? was unavailable for comment.
>
>  This release comes shortly after the announcement by Chief of Public
>  Affairs Duncan McGreggor that Twisted had joined the Software Freedom
>  Conservancy. "We're happy to join the SFC, and we are now accepting
>  sponsorship. The fact that we are now ruled by a cabal of robots
>  should not put off potential donors. Our robotic overlords are running
>  us at peak efficiency, so we can most effectively distribute The
>  Love."
>
>  Asked about the version number jump in this release,
>  Commander-in-Chief Glyph Lefkowitz had the following to say: "Our
>  benefactors have found our previous dice-rolling version number scheme
>  to be inadequate, and have deigned to propose to us a more... logical
>  system of versioning."
>
>  =====
>
>  Twisted is an event-based framework for Internet applications which
>  works on Python 2.3, 2.4, and 2.5. It can be downloaded from
>
>  http://twistedmatrix.com/
>
>  Twisted 8.0 is a major feature release, with several new features and
>  a great number of bug fixes. Some of the highlights follow.
>
>   - The IOCP reactor is now much improved and many bugs have been resolved.
>   - Twisted is now easy_installable.
>   - Many improvements were made to Trial, Twisted's unit testing system.
>   - A new memcache client protocol implementation was added.
>   - So much more[1]!
>
>  To see the full list of changes in its fifteen kilobytes of glory, see
>  the release notes[1]. We welcome you to download and enjoy, and please
>  file any bugs you find[2] and send comments to the mailing list[3].
>
>  Why the large version number bump? We've decided to switch to a
>  time-based versioning scheme. "8.0" means the first release in 2008.
>
>  [1] http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.0.1/NEWS?format=raw
>  [2] Register: http://twistedmatrix.com/trac/register New ticket:
>  http://twistedmatrix.com/trac/newticket
>  [3] http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  Thanks!
>
>  --
>  Christopher Armstrong
>  International Man of Twistery
>  http://radix.twistedmatrix.com/
>  http://twistedmatrix.com/
>  http://canonical.com/
>

Salute! Much respect and thanks for this!
Twisted continues to be the finest network
framework/engine/awesomeness out there!

*Twisted is now easy_installable. - Fantastic!!
*Many improvements were made to Trial, Twisted's unit testing system -
Very, Very cool, boarding on AWESOME.

Once again, big thanks to all you guys! you rock! Twisted has made my
life immeasurably easier in terms of development, and increased my
coolness factor. Thanks!

G

From steve at holdenweb.com  Thu Mar 27 07:18:24 2008
From: steve at holdenweb.com (Steve Holden)
Date: Thu Mar 27 08:15:20 2008
Subject: [Twisted-web] Re: [ANN] Twisted 8.0
In-Reply-To: <47EB6743.7070804@karnaugh.za.net>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>	<4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>
	<47EB6743.7070804@karnaugh.za.net>
Message-ID: <fsfvqf$19f$1@ger.gmane.org>

Colin Alston wrote:
> On 27/03/2008 10:09 Duncan McGreggor wrote:
>> On Wed, Mar 26, 2008 at 8:26 PM, Christopher Armstrong
>> <radix@twistedmatrix.com> wrote:
>>> http://twistedmatrix.com/
>>>
>>>  MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking framework
>>>  has been released, Twisted Matrix Laboratories announced Wednesday.
>>>
>>>  Enslaved by his new robotic overloads, Master of the Release
>>>  Christopher Armstrong presented the new package to the Internet on
>>>  March 26th. Armstrong was unable to comment, because of a device worn
>>>  around his neck preventing him from doing so, scientists say.
>>
>> A reader (who fears the robotic overlords, and thus wishes to remain
>> anonymous) has suggested that we do a full press release with this
>> picture:
>>   http://chrisbishop.com/fineart/art-happycity.html
> 
> I'm pleased to see Twisted is still one of the few Open Source projects 
> out there which still has a genuine sense of humour - and delivers 
> staggeringly high quality code in spite of it.
> 
> Well done all involved - and thank you :)
> 
Not in spite of it, because of it. A sense of humor is essential in 
retaining perspective as one continually fails to communicate one's 
meaning to the stupid machine.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/


From ddwiggins at advpubtech.com  Thu Mar 27 12:29:16 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu Mar 27 12:29:43 2008
Subject: [Twisted-web] Re: [ANN] Twisted 8.0
In-Reply-To: <47EB6743.7070804@karnaugh.za.net>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>	<4327dfbd0803270109x1a8266a0sf79475b713d0cdc8@mail.gmail.com>
	<47EB6743.7070804@karnaugh.za.net>
Message-ID: <fsgi0t$dde$1@ger.gmane.org>

Colin Alston wrote:
> I'm pleased to see Twisted is still one of the few Open Source projects 
> out there which still has a genuine sense of humour - and delivers 
> staggeringly high quality code in spite of it.

Or perhaps because of it?  It's a mark of software maturity not to take 
one's own code too seriously.

> Well done all involved - and thank you :)

Hear hear!

-- 
Don Dwiggins
Advanced Publishing Technology


From mithrandi at mithrandi.net  Thu Mar 27 23:15:02 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu Mar 27 23:15:16 2008
Subject: [Twisted-web] [ANN] Twisted 8.0
In-Reply-To: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
Message-ID: <20080328031502.GA22852@mithrandi.net>

KiBDaHJpc3RvcGhlciBBcm1zdHJvbmcgPHJhZGl4QHR3aXN0ZWRtYXRyaXguY29tPiBbMjAwOC0w
My0yNiAyMToyNjoxMSAtMDQwMF06Cgo+IGh0dHA6Ly90d2lzdGVkbWF0cml4LmNvbS8KPiAKPiBN
QVNTQUNIVVNFVFRTIChEUCkgLS0gVmVyc2lvbiA4LjAgb2YgdGhlIFR3aXN0ZWQgbmV0d29ya2lu
ZyBmcmFtZXdvcmsKPiBoYXMgYmVlbiByZWxlYXNlZCwgVHdpc3RlZCBNYXRyaXggTGFib3JhdG9y
aWVzIGFubm91bmNlZCBXZWRuZXNkYXkuCgpJIGp1c3QgaGF2ZSB0byBzYXkgdGhhdCBJIGVuam95
ZWQgcmVhZGluZyB0aGlzIHJlbGVhc2UgbWFpbCBmYXIgbW9yZQp0aGFuIGFueSBvdGhlciBvbmUg
SSBjYW4gcmVjYWxsIDopCi0tIAptaXRocmFuZGksIGkgQWluaWwgZW4tQmFsYW5kb3IsIGEgZmFl
ciBBbWJhcgotLS0tLS0tLS0tLS0tLSBuZXh0IHBhcnQgLS0tLS0tLS0tLS0tLS0KQSBub24tdGV4
dCBhdHRhY2htZW50IHdhcyBzY3J1YmJlZC4uLgpOYW1lOiBub3QgYXZhaWxhYmxlClR5cGU6IGFw
cGxpY2F0aW9uL3BncC1zaWduYXR1cmUKU2l6ZTogMTk3IGJ5dGVzCkRlc2M6IERpZ2l0YWwgc2ln
bmF0dXJlClVybCA6IGh0dHA6Ly90d2lzdGVkbWF0cml4LmNvbS9waXBlcm1haWwvdHdpc3RlZC13
ZWIvYXR0YWNobWVudHMvMjAwODAzMjgvYjdkOTFmOWUvYXR0YWNobWVudC5wZ3AK
From k_r_a_j_kumar at yahoo.co.in  Fri Mar 28 07:44:57 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Fri Mar 28 07:45:39 2008
Subject: [Twisted-web] regarding xml elements
Message-ID: <66657.48471.qm@web8713.mail.in.yahoo.com>

SGksCkkgaGF2ZSBhbiB4bWwgZmlsZSBpbiBteSBhcHBsaWNhdGlvbiwKSSBoYXZlIGNyZWF0ZWQg
YW4gZWxlbWVudCB1c2luZyAKRXhhbXBsZSBnb2VzIGxpa2UgdGhpcy4uLi4uLi4uLgoKZG9jdW1l
bnQuY3JlYXRlRWxlbWVudCgiYWJjIikKYW5kIGkgYXBwZW5lZGVkIGl0IGJ5IHVzaW5nIGFwcGVu
ZCgpIG1ldGhvZC4KQnV0IGhvdyBpIGNhbiByZWZsZWN0IHRoaXMgY2hhbmdlIHRvIG15IHhtbCBm
aWxlPwogYW5kIG9uZSBtb3JlIHRoaW5nIGlzIGkgd2FudCB0byBjcmVhdGUgZWxlbWVudCB3aXRo
IHNvbWUgb3RoZXIgcGFyYW1ldGVycy4uLi4KbGlrZS4uLi4uLi4uLi4uLi4KCiAgPGFiYyAgIG09
IiAiICBuPSIgIj4KICAgIDwvYWJjPgphbmQgaSBoYXZlIG0gYW5kIG4gdmFsdWVzIGFzIHN0cmlu
Z3Mgd2l0aCBtZS4KY2FuIGFueWJvZHkgaGVscCBtZSB0byBjcmVhdGUgdGhpcyBlbGVtZW50IGFu
ZCB3cml0ZSBpdCB0byB0aGUgZXhpc3RpbmcgeG1sIGZpbGUgCmFzIGEgY2hpbGQgb2YgYW4gZXhp
c3RpbmcgZWxlbWVudD8KClRoYW5rcyBpbiBhZHZhbmNlLi4KClJhai4uCgoKCgogICAgICBGb3Jn
b3QgdGhlIGZhbW91cyBsYXN0IHdvcmRzPyBBY2Nlc3MgeW91ciBtZXNzYWdlIGFyY2hpdmUgb25s
aW5lIGF0IGh0dHA6Ly9pbi5tZXNzZW5nZXIueWFob28uY29tL3dlYm1lc3NlbmdlcnByb21vLnBo
cAotLS0tLS0tLS0tLS0tLSBuZXh0IHBhcnQgLS0tLS0tLS0tLS0tLS0KQW4gSFRNTCBhdHRhY2ht
ZW50IHdhcyBzY3J1YmJlZC4uLgpVUkw6IGh0dHA6Ly90d2lzdGVkbWF0cml4LmNvbS9waXBlcm1h
aWwvdHdpc3RlZC13ZWIvYXR0YWNobWVudHMvMjAwODAzMjgvMjk0MThlYWEvYXR0YWNobWVudC5o
dG0K
From andreww at datanet.ab.ca  Fri Mar 28 08:31:22 2008
From: andreww at datanet.ab.ca (Andrew Warkentin)
Date: Fri Mar 28 08:33:53 2008
Subject: [Twisted-web] Bug in twisted.web2.client when receiving
	non-chunked responses of indeterminate length
In-Reply-To: <47EA199B.2050507@datanet.ab.ca>
References: <47EA199B.2050507@datanet.ab.ca>
Message-ID: <47ECE51A.7080808@datanet.ab.ca>

Andrew Warkentin wrote:

> twisted.web2.client cuts responses short if they are not in chunked =

> encoding and do not have a Content-Length header. I have attached a =

> patch that fixes this bug. I am posting it to the list because I =

> couldn't register on the site to post it to the bug tracker.
>
The previous patch introduced anotther bug which prevented the Deferred =

returned from HTTPClient.submit from being fired if the connection was =

closed cleanly before the data was sent. I have attached an updated =

version of the patch which does not have that bug.
-------------- next part --------------
Only in TwistedWeb2-svn20071201: build
diff -r -C 3 TwistedWeb2-svn20071201.orig/twisted/web2/channel/http.py Twis=
tedWeb2-svn20071201/twisted/web2/channel/http.py
*** TwistedWeb2-svn20071201.orig/twisted/web2/channel/http.py	Sat Dec  1 04=
:10:51 2007
--- TwistedWeb2-svn20071201/twisted/web2/channel/http.py	Fri Mar 28 04:40:0=
1 2008
***************
*** 163,176 ****
              self.handleContentChunk(data[:self.length])
              extraneous =3D data[self.length:]
              channel =3D self.channel # could go away from allContentRecei=
ved.
!             if not self.chunkedIn:
!                 self.allContentReceived()
!             else:
!                 # NOTE: in chunked mode, self.length is the size of the c=
urrent chunk,
!                 # so we still have more to read.
!                 self.chunkedIn =3D 2 # Read next chunksize
              =

!             channel.setLineMode(extraneous)
  =

      def headerReceived(self, line):
          """Store this header away. Check for too much header data
--- 163,177 ----
              self.handleContentChunk(data[:self.length])
              extraneous =3D data[self.length:]
              channel =3D self.channel # could go away from allContentRecei=
ved.
!             if not (self.length is None and not self.chunkedIn and self.p=
arseCloseAsEnd):
!                 if not self.chunkedIn:
!                     self.allContentReceived()
!                 else:
!                     # NOTE: in chunked mode, self.length is the size of t=
he current chunk,
!                     # so we still have more to read.
!                     self.chunkedIn =3D 2 # Read next chunksize
              =

!                 channel.setLineMode(extraneous)
  =

      def headerReceived(self, line):
          """Store this header away. Check for too much header data
diff -r -C 3 TwistedWeb2-svn20071201.orig/twisted/web2/client/http.py Twist=
edWeb2-svn20071201/twisted/web2/client/http.py
*** TwistedWeb2-svn20071201.orig/twisted/web2/client/http.py	Sat Dec  1 04:=
11:46 2007
--- TwistedWeb2-svn20071201/twisted/web2/client/http.py	Fri Mar 28 04:39:49=
 2008
***************
*** 8,13 ****
--- 8,14 ----
  =

  from zope.interface import implements
  =

+ from twisted.internet.error import ConnectionDone
  from twisted.internet.defer import Deferred
  from twisted.protocols.basic import LineReceiver
  from twisted.protocols.policies import TimeoutMixin
***************
*** 165,171 ****
          self._error(ProtocolError(text))
  =

      def connectionLost(self, reason):
!         self._error(reason)
  =

      def gotInitialLine(self, initialLine):
          parts =3D initialLine.split(' ', 2)
--- 166,177 ----
          self._error(ProtocolError(text))
  =

      def connectionLost(self, reason):
!         # If the response was non-chunked and of indeterminate length, tr=
eat the
!         # connection being closed cleanly as the end of the response
!         if self.length is None and not self.chunkedIn and reason.check(Co=
nnectionDone) and hasattr(self, 'stream'):
!             self.allContentReceived()
!         else:
!             self._error(reason)
  =

      def gotInitialLine(self, initialLine):
          parts =3D initialLine.split(' ', 2)
From moebius.lists at gmail.com  Fri Mar 28 08:37:31 2008
From: moebius.lists at gmail.com (Adrian Perez)
Date: Fri Mar 28 08:39:15 2008
Subject: [Twisted-web] [ANN] Twisted 8.0
In-Reply-To: <20080328031502.GA22852@mithrandi.net>
References: <60ed19d40803261826v88d20e2s8c13a0e75ef194ec@mail.gmail.com>
	<20080328031502.GA22852@mithrandi.net>
Message-ID: <20080328133731.653b73fb@gila.local>

On Fri, 28 Mar 2008 05:15:02 +0200
Tristan Seligmann <mithrandi@mithrandi.net> wrote:

> * Christopher Armstrong <radix@twistedmatrix.com> [2008-03-26
> 21:26:11 -0400]:
> 
> > http://twistedmatrix.com/
> > 
> > MASSACHUSETTS (DP) -- Version 8.0 of the Twisted networking
> > framework has been released, Twisted Matrix Laboratories announced
> > Wednesday.
> 
> I just have to say that I enjoyed reading this release mail far more
> than any other one I can recall :)

The same goes for me, I had a very fun time reading it. Keep on the
good work and humor folks!

-- 
There are 2 kinds of people in my world: those who know Unix, Perl,
Vim, GNU, Linux, etc, and those who know COBOL.  It gets very difficult
for me at parties, not knowing which group to socialise with :-)
						Sitaram Chamarty

From exarkun at divmod.com  Fri Mar 28 10:48:54 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri Mar 28 10:48:58 2008
Subject: [Twisted-web] Bug in twisted.web2.client when receiving
	non-chunked responses of indeterminate length
In-Reply-To: <47EA199B.2050507@datanet.ab.ca>
Message-ID: <20080328144854.6859.67273872.divmod.quotient.23918@ohm>

On Wed, 26 Mar 2008 03:38:35 -0600, Andrew Warkentin <andreww@datanet.ab.ca> wrote:
>twisted.web2.client cuts responses short if they are not in chunked encoding 
>and do not have a Content-Length header. I have attached a patch that fixes 
>this bug. I am posting it to the list because I couldn't register on the 
>site to post it to the bug tracker.
>

Why couldn't you register?  The bug tracker is the right place for this sort
of thing.

Jean-Paul

From andreww at datanet.ab.ca  Fri Mar 28 20:16:07 2008
From: andreww at datanet.ab.ca (Andrew Warkentin)
Date: Fri Mar 28 20:18:36 2008
Subject: [Twisted-web] Bug in twisted.web2.client when receiving
	non-chunked responses of indeterminate length
In-Reply-To: <20080328144854.6859.67273872.divmod.quotient.23918@ohm>
References: <20080328144854.6859.67273872.divmod.quotient.23918@ohm>
Message-ID: <47ED8A47.6070603@datanet.ab.ca>

Jean-Paul Calderone wrote:

> Why couldn't you register?  The bug tracker is the right place for 
> this sort
> of thing.
>
I guess it did work to register, and I can log in. There is still 
something wrong with the login script, because it is redirecting back to 
itself in an endless loop after I log in (that's why I thought login 
wasn't working).

From maarten at treewalker.org  Fri Mar 28 22:15:43 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Fri Mar 28 22:15:58 2008
Subject: [Twisted-web] Bug in twisted.web2.client when receiving
	non-chunked responses of indeterminate length
In-Reply-To: <47ED8A47.6070603@datanet.ab.ca>
References: <20080328144854.6859.67273872.divmod.quotient.23918@ohm>
	<47ED8A47.6070603@datanet.ab.ca>
Message-ID: <200803290315.49245.maarten@treewalker.org>

On Saturday 29 March 2008, Andrew Warkentin wrote:
> Jean-Paul Calderone wrote:
> > Why couldn't you register?  The bug tracker is the right place for
> > this sort
> > of thing.
>
> I guess it did work to register, and I can log in. There is still
> something wrong with the login script, because it is redirecting back to
> itself in an endless loop after I log in (that's why I thought login
> wasn't working).

This often happens if you have configured your browser to decline cookies 
and the server does not check whether or not the browser has acccepted the 
cookie. Because it does not see a cookie, the server assumes you have not 
logged in yet and sends another HTTP auth challenge. The browser has cached 
the password and will automatically respond, logging you in again and 
again.

If this is the cause, please file a bug against Trac as well ;)

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080329/98941fae/attachment.pgp
From andreww at datanet.ab.ca  Sat Mar 29 04:39:31 2008
From: andreww at datanet.ab.ca (Andrew Warkentin)
Date: Sat Mar 29 04:42:03 2008
Subject: [Twisted-web] Bug in twisted.web2.client when
	receiving	non-chunked responses of indeterminate length
In-Reply-To: <200803290315.49245.maarten@treewalker.org>
References: <20080328144854.6859.67273872.divmod.quotient.23918@ohm>	<47ED8A47.6070603@datanet.ab.ca>
	<200803290315.49245.maarten@treewalker.org>
Message-ID: <47EE0043.7070808@datanet.ab.ca>

Maarten ter Huurne wrote:

>
>This often happens if you have configured your browser to decline cookies 
>and the server does not check whether or not the browser has acccepted the 
>cookie. Because it does not see a cookie, the server assumes you have not 
>logged in yet and sends another HTTP auth challenge. The browser has cached 
>the password and will automatically respond, logging you in again and 
>again.
>
>If this is the cause, please file a bug against Trac as well ;)
>
>  
>
My browser is set to reject third-party cookies, but I don't think that 
should be interfering. I also use a filtering proxy, but again, I doubt 
that is the problem. I should still make sure that those aren't cuasing 
any problems, though.

From phil at bubblehouse.org  Sat Mar 29 21:03:41 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat Mar 29 21:04:16 2008
Subject: [Twisted-web] Re: [Twisted-Python] disable twisted.web logging
In-Reply-To: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>
References: <eaf39e680803282239i332c8741sf04fd5f4522a15b3@mail.gmail.com>
Message-ID: <EB96A89D-9EDB-48A8-88A2-3A5EF2B4042D@bubblehouse.org>

On Mar 29, 2008, at 1:39 AM, Pavel wrote:
> Hi all,
>
> is there any way to disable twisted.web logging? Or at least
> control it somehow, e.g. filter and log only necessary entries.
>
> Also, is there any way to make http requests be logged into  
> separate file?

FYI, posts like this should probably go to the twisted-web mailing list.

I'm not sure what level of control you'd like over the access log,  
but for simple redirection, it's straightforward. Here's how I build  
the Site object:

     myresource = MyResource()
     if(config['logfile'] != '-'):
         site = server.Site(myresource, logPath=config['logfile'])
     else:
         site = server.Site(myresource)

This will let you pass either a log filename or /dev/null as a  
parameter.

If you'd like more control (like logging different kinds of requests  
to different files), you'll need to get into the LogObserver stuff in  
twisted.python.log... I've only used t.p.log to create custom  
loggers, though, I'm not sure what's involved in filtering t.web's  
log messages....

Hope this helps,

-phil

