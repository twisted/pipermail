From qk at wheel.pl  Wed Feb  1 08:50:59 2006
From: qk at wheel.pl (Maciej Kucharz)
Date: Wed Feb  1 09:50:47 2006
Subject: [Twisted-web] Livetest on remonte site.
Message-ID: <53ED2D21-A109-4D7C-BB48-EDB10250A7DF@wheel.pl>

Hi,

I was created tests for my site with livetest (great!), but i decided
to split it to another app.

I do everything to run livetest page, with changing (for example):
"('visit', '/user', '')" to "('visit', 'http://my_site/user', '')".

Doing this that way livetest opens this site (it is first test)
in frame and then redirect me to this site.

Is there any way to resolve it ?

-- 
Maciej Kucharz

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20060201/0751af22/PGP.pgp
From moin.askthem at gmail.com  Fri Feb  3 05:49:08 2006
From: moin.askthem at gmail.com (Arp)
Date: Fri Feb  3 06:49:17 2006
Subject: [Twisted-web] debian sarge, twistd: command not found
Message-ID: <4910b3df0602030449x18590d3eyba11fece830a2188@mail.gmail.com>

Hi All,

I'm very new to all this - the problem is probably a no-brainer -
please be kind ;)

In the proces of trying to get a MoinMoin wiki running on a Debian
Sarge server I used aptitude to install python2.3, moinmoin (1.3.4)
and twisted (as listed below) - I know there are newer versions of all
these around, but this what seems the best what the system config
offers me through aptitude in terms of dependencies.

The problem is after installing all this python and moin seem to run
fine, but when I try to invoke mointwisted the script complains that
sh can't find twistd

I've searched the filesystem with  "find / -name twistd" but that
comes up empty too so it's probably not just a missing path setting
...

So what am I missing to get twisted installed _including_ twistd

=====================================
List of "twisted" packages installed by aptitude:
----------------------
i A   python-twisted                                 2.1.0-4    2.1.0-4
i A   python-twisted-conch                           1:0.6.0-1  1:0.6.0-1
i     python2.3-twisted                              2.1.0-4    2.1.0-4
i A   python2.3-twisted-bin                          2.1.0-4    2.1.0-4
i A   python2.3-twisted-conch                        1:0.6.0-1  1:0.6.0-1

i     python-twisted-core                            2.1.0-4    2.1.0-4
i     python-twisted-lore                            0.1.0-2    0.1.0-2
i     python-twisted-mail                            0.2.0-2    0.2.0-2
i A   python-twisted-names                           0.2.0-1    0.2.0-1
i A   python-twisted-news                            0.1.0-1    0.1.0-1
i A   python-twisted-runner                          0.1.0-2    0.1.0-2
i A   python-twisted-web                             0.5.0-2    0.5.0-2
i     python-twisted-web2                            0.1.0-1    0.1.0-1
i A   python-twisted-words                           0.3.0-1    0.3.0-1
....
i A   python2.3-twisted-core                         2.1.0-4    2.1.0-4
i A   python2.3-twisted-lore                         0.1.0-1    0.1.0-2
i A   python2.3-twisted-mail                         0.2.0-1    0.2.0-2
i A   python2.3-twisted-names                        0.2.0-1    0.2.0-1
i A   python2.3-twisted-news                         0.1.0-1    0.1.0-1
i A   python2.3-twisted-runner                       0.1.0-1    0.1.0-2
i A   python2.3-twisted-web                          0.5.0-1    0.5.0-2
i A   python2.3-twisted-web2                         0.1.0-1    0.1.0-1
i A   python2.3-twisted-words                        0.3.0-1    0.3.0-1

=========================

Thanks in advance for any pointers !

--
Arp

From bv at bnl.gov  Fri Feb  3 09:00:29 2006
From: bv at bnl.gov (Brett Viren)
Date: Fri Feb  3 10:00:33 2006
Subject: [Twisted-web] debian sarge, twistd: command not found
In-Reply-To: <4910b3df0602030449x18590d3eyba11fece830a2188@mail.gmail.com>
	(Arp's message of "Fri, 3 Feb 2006 13:49:08 +0100")
References: <4910b3df0602030449x18590d3eyba11fece830a2188@mail.gmail.com>
Message-ID: <ir4mzh877qa.fsf@minos.phy.bnl.gov>

Arp <moin.askthem@gmail.com> writes:

> The problem is after installing all this python and moin seem to run
> fine, but when I try to invoke mointwisted the script complains that
> sh can't find twistd

It is /usr/bin/twistd2.3.

-Brett.

From moin.askthem at gmail.com  Fri Feb  3 10:50:19 2006
From: moin.askthem at gmail.com (Arp)
Date: Fri Feb  3 11:50:21 2006
Subject: [Twisted-web] debian sarge, twistd: command not found
In-Reply-To: <ir4mzh877qa.fsf@minos.phy.bnl.gov>
References: <4910b3df0602030449x18590d3eyba11fece830a2188@mail.gmail.com>
	<ir4mzh877qa.fsf@minos.phy.bnl.gov>
Message-ID: <4910b3df0602030950r3635fb5dh825aa34cf389d087@mail.gmail.com>

On 2/3/06, Brett Viren <bv@bnl.gov> wrote:
> > The problem is after installing all this python and moin seem to run
> > fine, but when I try to invoke mointwisted the script complains that
> > sh can't find twistd

> It is /usr/bin/twistd2.3.

Aw, duh! - That was silly to miss...

Funny thing though - there _was_ a link for "twistd -> twistd2.3", but
somehow the script won't work with the link? Oh well ... problem
solved anyway.

Thanks Brett!
--
Arp

From dreid at dreid.org  Fri Feb  3 15:35:54 2006
From: dreid at dreid.org (David Reid)
Date: Fri Feb  3 16:35:55 2006
Subject: [Twisted-web] guard in web2?
In-Reply-To: <20060116112934.GA15897@opteron.random>
References: <20060116112934.GA15897@opteron.random>
Message-ID: <95939DA8-81F8-4337-BC1B-5F8E529DFC12@dreid.org>

On Jan 16, 2006, at 3:29 AM, Andrea Arcangeli wrote:

> is there a guard functionality in web2 that could obsolete the nevow
> guard? Is it under a different name perhaps? I think the guard could
> very well belong to web2 the same way vhost does. Or should I rewrite

There is currently no implementation of guard that runs on web2 in  
trunk (I believe Tommi Virtanen has one somewhere.)  However I hope  
to include HTTP Auth in the 0.2 release.

-David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060203/c12053a0/attachment.htm
From dreid at dreid.org  Fri Feb  3 15:36:24 2006
From: dreid at dreid.org (David Reid)
Date: Fri Feb  3 16:36:25 2006
Subject: [Twisted-web] guard in web2?
In-Reply-To: <20060116112934.GA15897@opteron.random>
References: <20060116112934.GA15897@opteron.random>
Message-ID: <95939DA8-81F8-4337-BC1B-5F8E529DFC12@dreid.org>

On Jan 16, 2006, at 3:29 AM, Andrea Arcangeli wrote:

> is there a guard functionality in web2 that could obsolete the nevow
> guard? Is it under a different name perhaps? I think the guard could
> very well belong to web2 the same way vhost does. Or should I rewrite

There is currently no implementation of guard that runs on web2 in  
trunk (I believe Tommi Virtanen has one somewhere.)  However I hope  
to include HTTP Auth in the 0.2 release.

-David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060203/c12053a0/attachment-0001.htm
From gustavo at grahal.net  Sun Feb  5 16:56:19 2006
From: gustavo at grahal.net (Gustavo Rahal)
Date: Sun Feb  5 17:56:45 2006
Subject: [Twisted-web] xmlrpc and deferred result doubts
Message-ID: <ds63b6$prq$1@sea.gmane.org>

Hi All


I have a doubt about how to factor the an xmlrpc server code.
Basicly what happens is:

def xmlrpc_runCmd(self, hostname, command):
    # I call a method that returns a deferred and because of that I
    # don't have anything to return to the xmlrpc client.
    runComm = conn.runCommand(hostname, command)
    # the line below doesn't make much sense because the output needs to
    # return to the xmlrpc client
    runComm.addCallback(self.printOutput)

    return ???? # return what?!?!?!?


What should I do? How should I factor the code?


Thanks
Gustavo


From therve at free.fr  Mon Feb  6 01:33:54 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon Feb  6 02:34:06 2006
Subject: [Twisted-web] xmlrpc and deferred result doubts
In-Reply-To: <ds63b6$prq$1@sea.gmane.org>
References: <ds63b6$prq$1@sea.gmane.org>
Message-ID: <20060206093354.btxjsix38kswkw0g@itchy.wasabout.net>

Quoting Gustavo Rahal <gustavo@grahal.net>:

> Hi All
>
>
> I have a doubt about how to factor the an xmlrpc server code.
> Basicly what happens is:
>
> def xmlrpc_runCmd(self, hostname, command):
>    # I call a method that returns a deferred and because of that I
>    # don't have anything to return to the xmlrpc client.
>    runComm = conn.runCommand(hostname, command)
>    # the line below doesn't make much sense because the output needs to
>    # return to the xmlrpc client
>    runComm.addCallback(self.printOutput)
>
>    return ???? # return what?!?!?!?
>
>
> What should I do? How should I factor the code?

As JP told you, you should return the deferred 'runComm' without adding the
callback 'self.printOutput'. The method render of XMLRPC automatically add the
'_cbRender' callback which does the job, and return the code 'NOT_DONE_YET'
which makes you client wait.

-- 
Thomas




From thostrup at gmail.com  Mon Feb  6 03:52:06 2006
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Mon Feb  6 04:52:12 2006
Subject: [Twisted-web] Problems uploading data in web2
Message-ID: <f33a4da20602060252x5465109fmbd6c8c9b842b6ef5@mail.gmail.com>

Hi

I'm trying to use web2 to stream uploading of data, but I ran into some
problems. First I tried building from the example in
http://twistedmatrix.com/projects/web2/documentation/examples/demo.html,
however args and files objects in the request did not show anything.
However the length of stream was correct, and using tcpdump, showed the
correct value. So I tried building my own uploader which look like this:

class Uploader(resource.PostableResource):
    def http_POST(self, ctx):
        request = iweb.IRequest(ctx)
        self.parse_stream(request.stream)

    @defer.deferredGenerator
    def parse_stream(self, stream):
        from twisted.web2 import fileupload
        s = fileupload.parse_urlencoded_stream(stream)
        while True:
            datas = s.read()
            datas = fileupload.wait(datas)
            yield datas
            datas = datas.getResult()

Using the 0.1.0 release of web2 didn't get past the yield line. Using latest
from subversion (revision 15836), got past, but datas was None, even though
data had been send. I've used both cURL (using the -d switch) and wget
(using the --post-file switch) for uploading data, so I do not think the
client as malfunctioning. What am I doing wrong?

I'm aware that web2 is under development and all that, but I need streaming
upload, so the web module is not an option.

--
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060206/345e04b9/attachment.htm
From foom at fuhm.net  Mon Feb  6 14:11:17 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon Feb  6 15:11:32 2006
Subject: [Twisted-web] Problems uploading data in web2
In-Reply-To: <f33a4da20602060252x5465109fmbd6c8c9b842b6ef5@mail.gmail.com>
References: <f33a4da20602060252x5465109fmbd6c8c9b842b6ef5@mail.gmail.com>
Message-ID: <55D336A2-1DA7-48D0-9B9F-D85578F52522@fuhm.net>


On Feb 6, 2006, at 5:52 AM, Henrik Thostrup Jensen wrote:

> Hi
>
> I'm trying to use web2 to stream uploading of data, but I ran into  
> some problems. First I tried building from the example in  http:// 
> twistedmatrix.com/projects/web2/documentation/examples/demo.html,  
> however args and files objects in the request did not show  
> anything.  However the length of stream was correct, and using  
> tcpdump, showed the correct value. So I tried building my own  
> uploader which look like this:

What are you actually trying to do? There's two different kinds of  
"streaming upload". The simpler is just a raw data stream. If you  
just want raw data, forget POST and associated form processing, and  
just use request.stream.read() in with a PUT method. That will work  
with curl -T.

However, if you want it to be the result of a form post from a web  
browser, you'll need the MIME multipart support. The default POST  
support (with PostableResource) parses the multipart stream, and  
places all the results in memory or temporary files (depending on  
size), in the args & files dicts. It parses the data incrementally,  
but doesn't give control to your "render" method until all the data  
has been uploaded. If all you're looking for from a streaming upload  
is to not buffer everything in memory, this will do it for you.

If that's not good enough for your application, if you really need  
access to the data as it's being uploaded, you'll need to use the  
lower level machinery in fileupload: the MultipartMimeStream class.  
You give this a raw data stream (request.stream), and the multipart  
boundary from the content-type, then call its read() method  
repeatedly to get back tuples of (fieldname, filename, ctype,  
dataStream). Then you use dataStream.read() to get back data blocks  
and can do whatever you like with them.

I can help explain any of the alternatives in more detail if you let  
me know which you're really interested in.

James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060206/3165b528/attachment.htm
From caliban19 at gmail.com  Mon Feb  6 22:17:39 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Mon Feb  6 23:17:43 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
Message-ID: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>

from twisted.application import strports, service
from twisted.web2 import static, server, http, script

root = static.File("./adir")
root.indexNames=['index.rpy']
root.processors = {'.rpy': script.ResourceScript}
application = service.Application("web")
site = server.Site(root)
s = strports.service('tcp:8000', http.HTTPFactory(site))
s.setServiceParent(application)

Get error,

noRsrc = error.ErrorPage(500, "Whoops! Internal Error", rpyNoResource)
exceptions.AttributeError: 'module' object has no attribute 'ErrorPage'

Failed to load application: 'module' object has no attribute 'ErrorPage'

Looking in api docs for web2.error I don't see an ErrorPage, but it does
exist in web.error

Todd Thomas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060206/c56aebca/attachment.htm
From foom at fuhm.net  Mon Feb  6 23:55:19 2006
From: foom at fuhm.net (James Y Knight)
Date: Tue Feb  7 00:55:26 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
Message-ID: <CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>

Indeed it is broken; in SVN twisted.web2.script currently starts with  
the line:

raise ImportError("FIXME: this file probably doesn't work.")

I think that fixes the particular problem you're seeing. ;)

There's no reason it should be hard to support .rpy files in web2,  
but nobody has done anything about it. Part of the reason being that  
RPYs have somewhat fallen out of favor and are generally discouraged.  
However, I do see that they're sometimes useful as a solution sort of  
in between CGI and internal code, so I wouldn't mind seeing support  
return. It's not on my list of things I want to do soon, though.

James

From caliban19 at gmail.com  Tue Feb  7 02:09:08 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Tue Feb  7 03:09:13 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
Message-ID: <612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>

On 2/7/06, James Y Knight <foom@fuhm.net> wrote:
>
> Indeed it is broken; in SVN twisted.web2.script currently starts with
> the line:
>
> raise ImportError("FIXME: this file probably doesn't work.")
>
> I think that fixes the particular problem you're seeing. ;)
>
> There's no reason it should be hard to support .rpy files in web2,
> but nobody has done anything about it. Part of the reason being that
> RPYs have somewhat fallen out of favor and are generally discouraged.
> However, I do see that they're sometimes useful as a solution sort of
> in between CGI and internal code, so I wouldn't mind seeing support
> return. It's not on my list of things I want to do soon, though.
>
> James
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
I find them extemely handy personally, how else are you going add resources
without resorting to restarting the server? But I guess depends on what you
are using them for. I tend to use twisted more for testing and
experimenting, simpler than installing apache. Unfortunately twisted-web
doesnt have a wsgi implementation, I have been messing around with django a
bit trying to see how modular the code is.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060207/0d2c8923/attachment.htm
From thostrup at gmail.com  Tue Feb  7 03:10:23 2006
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Tue Feb  7 04:10:27 2006
Subject: [Twisted-web] Problems uploading data in web2
In-Reply-To: <55D336A2-1DA7-48D0-9B9F-D85578F52522@fuhm.net>
References: <f33a4da20602060252x5465109fmbd6c8c9b842b6ef5@mail.gmail.com>
	<55D336A2-1DA7-48D0-9B9F-D85578F52522@fuhm.net>
Message-ID: <f33a4da20602070210m7af47750s87ed87791f60d584@mail.gmail.com>

Hi James, thanks for your answer.

On 2/6/06, James Y Knight <foom@fuhm.net> wrote:
>
>
> On Feb 6, 2006, at 5:52 AM, Henrik Thostrup Jensen wrote:
>
> I'm trying to use web2 to stream uploading of data, but I ran into some
> problems. First I tried building from the example in
> http://twistedmatrix.com/projects/web2/documentation/examples/demo.html,
> however args and files objects in the request did not show anything.
> However the length of stream was correct, and using tcpdump, showed the
> correct value. So I tried building my own uploader which look like this:
>
>
> What are you actually trying to do? There's two different kinds of
> "streaming upload". The simpler is just a raw data stream. If you just want
> raw data, forget POST and associated form processing, and just use
> request.stream.read() in with a PUT method. That will work with curl -T.
>

This is what i want - raw data as I'm uploading files. I hacked up a small
example and got it to work. I also tried POST for the fun of it, and that
seems to work as well. Not sure what I got wrong before. Oh, and
deferredGenerator is darned clever :-).

I can help explain any of the alternatives in more detail if you let me know
> which you're really interested in.
>

I think I got whats needed for now. Thanks for your time.

--
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060207/b7eb5a4e/attachment.htm
From dreid at dreid.org  Tue Feb  7 09:57:11 2006
From: dreid at dreid.org (David Reid)
Date: Tue Feb  7 10:55:25 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
Message-ID: <43E8D167.3090302@dreid.org>

Todd Thomas wrote:
> I find them extemely handy personally, how else are you going add
> resources without resorting to restarting the server? But I guess
> depends on what you are using them for. I tend to use twisted more for
> testing and experimenting, simpler than installing apache. Unfortunately
> twisted-web doesnt have a wsgi implementation, I have been messing
> around with django a bit trying to see how modular the code is.
> 

If all you want is something easier to configure/install than apache I'd
suggest lighttpd.  Unless you've got a pre-existing twisted.web2
deployment and pre-existing twisted.web2 using code, I don't see a
reason to use twisted which is very unstable, going to change radically,
and probably doesn't work anyway. :)

Of course if you really want to use twisted.web2.script you're welcome
to submit patches to the bugtracker.

-David

From caliban19 at gmail.com  Tue Feb  7 15:03:02 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Tue Feb  7 16:03:07 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <43E8D167.3090302@dreid.org>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
	<43E8D167.3090302@dreid.org>
Message-ID: <612023ed0602071403r4231d251j10d7ac09ec623c5f@mail.gmail.com>

On 2/7/06, David Reid <dreid@dreid.org> wrote:
>
> Todd Thomas wrote:
> > I find them extemely handy personally, how else are you going add
> > resources without resorting to restarting the server? But I guess
> > depends on what you are using them for. I tend to use twisted more for
> > testing and experimenting, simpler than installing apache. Unfortunately
> > twisted-web doesnt have a wsgi implementation, I have been messing
> > around with django a bit trying to see how modular the code is.
> >
>
> If all you want is something easier to configure/install than apache I'd
> suggest lighttpd.  Unless you've got a pre-existing twisted.web2
> deployment and pre-existing twisted.web2 using code, I don't see a
> reason to use twisted which is very unstable, going to change radically,
> and probably doesn't work anyway. :)
>
> Of course if you really want to use twisted.web2.script you're welcome
> to submit patches to the bugtracker.
>
> -David
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
Up to this point I have been using twisted-web exclusively. Would it be
considered stable at this point, and is it still being worked on actively?
Or is all the efforts now going towards stabilizing twisted-web2?

-ToddB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060207/25c0aab4/attachment.htm
From foom at fuhm.net  Tue Feb  7 20:59:45 2006
From: foom at fuhm.net (James Y Knight)
Date: Tue Feb  7 21:59:51 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
Message-ID: <3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>

On Feb 7, 2006, at 4:09 AM, Todd Thomas wrote:
> I find them extemely handy personally, how else are you going add  
> resources without resorting to restarting the server? But I guess  
> depends on what you are using them for. I tend to use twisted more  
> for testing and experimenting, simpler than installing apache.  
> Unfortunately twisted-web doesnt have a wsgi implementation, I have  
> been messing around with django a bit trying to see how modular the  
> code is.

You'll notice that I said I was open to them still being supported.  
I'll take a submission of code + unit tests for it, or if not, will  
get around to implementing it someday.

I'll also note, it should be possible to use twisted.web.script from  
within a twisted.web2 server, although you won't be able to use web2  
Resources in the rpys loaded by the twisted.web.script loader. (The  
compatibility only works one way -- you can use old resources inside  
new ones, but not new ones inside old ones).

I think you might have meant this but it wasn't entirely clear so  
I'll also note that twisted.web2 does support wsgi.

James

From caliban19 at gmail.com  Wed Feb  8 01:59:31 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Wed Feb  8 02:59:45 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
Message-ID: <612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>

On 2/7/06, James Y Knight <foom@fuhm.net> wrote:
>
> On Feb 7, 2006, at 4:09 AM, Todd Thomas wrote:
> > I find them extemely handy personally, how else are you going add
> > resources without resorting to restarting the server? But I guess
> > depends on what you are using them for. I tend to use twisted more
> > for testing and experimenting, simpler than installing apache.
> > Unfortunately twisted-web doesnt have a wsgi implementation, I have
> > been messing around with django a bit trying to see how modular the
> > code is.
>
> You'll notice that I said I was open to them still being supported.
> I'll take a submission of code + unit tests for it, or if not, will
> get around to implementing it someday.
>
> I'll also note, it should be possible to use twisted.web.script from
> within a twisted.web2 server, although you won't be able to use web2
> Resources in the rpys loaded by the twisted.web.script loader. (The
> compatibility only works one way -- you can use old resources inside
> new ones, but not new ones inside old ones).
>
> I think you might have meant this but it wasn't entirely clear so
> I'll also note that twisted.web2 does support wsgi.
>
> James
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
It does support wsgi, I was playing around with it. I went back to
twisted-web, I like its lower level approach. Using http.request directly
vs. resources is nice since I can pretty much tell exactly what is going on.
I love the fact that you can work at an extremely low level in twisted-web.
I hope twisted-web2 doesn't get too high level. Resources are great when
your making a standalone web app, but not so great when you are wanting to
build frameworks on top of them. The biggest attraction for me in twisted is
the fact that it pretty much allows you freedom to do anything. I am
considering writing a wsgi handler for twisted-web. I think it would be a
good project.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060208/81b85eca/attachment.htm
From gustavo at grahal.net  Wed Feb  8 06:14:12 2006
From: gustavo at grahal.net (Gustavo Rahal)
Date: Wed Feb  8 07:14:49 2006
Subject: [Twisted-web] xmlrpc server daemon
Message-ID: <dscqqs$ags$1@sea.gmane.org>

Hi

How do I make my xmlrpc server a daemon?

The code that starts the server is:

r = rmsWebServices()
xmlrpc.addIntrospection(r)
reactor.listenTCP(7080, server.Site(r))
reactor.run()

What should I change?


Thanks
Gustavo


From tv at twistedmatrix.com  Wed Feb  8 06:34:42 2006
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed Feb  8 07:34:52 2006
Subject: [Twisted-web] debian sarge, twistd: command not found
In-Reply-To: <4910b3df0602030950r3635fb5dh825aa34cf389d087@mail.gmail.com>
References: <4910b3df0602030449x18590d3eyba11fece830a2188@mail.gmail.com>	<ir4mzh877qa.fsf@minos.phy.bnl.gov>
	<4910b3df0602030950r3635fb5dh825aa34cf389d087@mail.gmail.com>
Message-ID: <43E9F372.1070104@twistedmatrix.com>

Arp wrote:
> Funny thing though - there _was_ a link for "twistd -> twistd2.3", but
> somehow the script won't work with the link? Oh well ... problem
> solved anyway.

Then the "mointwisted" shell script is buggy.

From sam at SpinwardStars.com  Wed Feb  8 07:32:35 2006
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Wed Feb  8 08:35:25 2006
Subject: [Twisted-web] xmlrpc server daemon
In-Reply-To: <dscqqs$ags$1@sea.gmane.org>
References: <dscqqs$ags$1@sea.gmane.org>
Message-ID: <6.1.2.0.0.20060208072705.08747970@mail.myedl.com>

At 2006-02-08 11:14 AM -0200, you wrote:
>Hi
>
>How do I make my xmlrpc server a daemon?
>
>The code that starts the server is:
>
>r = rmsWebServices()
>xmlrpc.addIntrospection(r)
>reactor.listenTCP(7080, server.Site(r))
>reactor.run()
>
>What should I change?

Since you said "daemon" and not "service", you're
presumably running on an *nix box.

A daemon is, fundamentally, just a program that
doesn't exit when you do. Your friends are
nohup and '&'.

So if you start the server for testing using
    myserver.py<enter>
then the simplest way to start it as a daemon
is this way:
    nohup myserver.py &<enter>

'&' detaches it from the current process I/O
so you can continue using the console for other
things. 'nohup' detaches it from the current
user so it keeps running after you log out.

If you start it this way from a system startup
script, you have an always-on daemon.

- Sam

>Thanks
>Gustavo
>
>
>_______________________________________________
>Twisted-web mailing list
>Twisted-web@twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

__________________________________________________________
Spinward Stars, LLC                        Samuel Reynolds
Software Consulting and Development           303-805-1446
http://SpinwardStars.com/            sam@SpinwardStars.com 



From exarkun at divmod.com  Wed Feb  8 08:01:09 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Feb  8 09:01:14 2006
Subject: [Twisted-web] xmlrpc server daemon
In-Reply-To: <dscqqs$ags$1@sea.gmane.org>
Message-ID: <20060208150109.2697.1896946970.divmod.quotient.12361@ohm>

On Wed, 08 Feb 2006 11:14:12 -0200, Gustavo Rahal <gustavo@grahal.net> wrote:
>Hi
>
>How do I make my xmlrpc server a daemon?
>
>The code that starts the server is:
>
>r = rmsWebServices()
>xmlrpc.addIntrospection(r)
>reactor.listenTCP(7080, server.Site(r))
>reactor.run()
>
>What should I change?
>

Twisted comes with a daemonizer, `twistd'.  Rewrite the above as:

    from twisted.application import service, internet

    application = service.Application("RMS Web Service")
    ...
    website = internet.TCPServer(7080, server.Site(r))
    website.setServiceParent(application)

And then run it using "twistd -y <filename>".

Jean-Paul

From matt at pollenation.net  Wed Feb  8 08:43:57 2006
From: matt at pollenation.net (Matt Goodall)
Date: Wed Feb  8 09:43:51 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
	<612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
Message-ID: <43EA11BD.5010303@pollenation.net>

Todd Thomas wrote:
> 
> 
> On 2/7/06, *James Y Knight* <foom@fuhm.net <mailto:foom@fuhm.net>> wrote:
> 
>     On Feb 7, 2006, at 4:09 AM, Todd Thomas wrote:
>     > I find them extemely handy personally, how else are you going add
>     > resources without resorting to restarting the server? But I guess
>     > depends on what you are using them for. I tend to use twisted more
>     > for testing and experimenting, simpler than installing apache.
>     > Unfortunately twisted-web doesnt have a wsgi implementation, I have
>     > been messing around with django a bit trying to see how modular the
>     > code is.
> 
>     You'll notice that I said I was open to them still being supported.
>     I'll take a submission of code + unit tests for it, or if not, will
>     get around to implementing it someday.
> 
>     I'll also note, it should be possible to use twisted.web.script from
>     within a twisted.web2 server, although you won't be able to use web2
>     Resources in the rpys loaded by the twisted.web.script loader. (The
>     compatibility only works one way -- you can use old resources inside
>     new ones, but not new ones inside old ones).
> 
>     I think you might have meant this but it wasn't entirely clear so
>     I'll also note that twisted.web2 does support wsgi.
> 
>     James
> 
>     _______________________________________________
>     Twisted-web mailing list
>     Twisted-web@twistedmatrix.com <mailto:Twisted-web@twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>     <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web>
> 
> It does support wsgi, I was playing around with it. I went back to
> twisted-web, I like its lower level approach. Using http.request
> directly vs. resources is nice since I can pretty much tell exactly what
> is going on. I love the fact that you can work at an extremely low level
> in twisted-web. I hope twisted-web2 doesn't get too high level.


WARNING: completely untested ideas ahead. I'm not a big web2 user (yet).


I doubt it's difficult to write a server.Site equivalent to plug an
alternative framework directly into web2's HTTP protocol support. IIRC,
HTTPFactory expects nothing more than something callable that takes a
bunch of args.

Also, a root Resource that calls out to an alternative framework should
be trivial to implement. See t.web2.iweb.IResource for details. You
don't even need to subclass resource.Resource.

Once your framework handling resource is called it should be able to do
just about anything it wants as long as its renderHTTP returns an
http.Response instance.


- Matt


-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.

From dreid at dreid.org  Wed Feb  8 09:29:07 2006
From: dreid at dreid.org (David Reid)
Date: Wed Feb  8 10:27:10 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <43EA11BD.5010303@pollenation.net>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>	<612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
	<43EA11BD.5010303@pollenation.net>
Message-ID: <43EA1C53.7010200@dreid.org>

Matt Goodall wrote:
> Todd Thomas wrote:
> 
>>
>>On 2/7/06, *James Y Knight* <foom@fuhm.net <mailto:foom@fuhm.net>> wrote:
>>
>>    On Feb 7, 2006, at 4:09 AM, Todd Thomas wrote:
>>    > I find them extemely handy personally, how else are you going add
>>    > resources without resorting to restarting the server? But I guess
>>    > depends on what you are using them for. I tend to use twisted more
>>    > for testing and experimenting, simpler than installing apache.
>>    > Unfortunately twisted-web doesnt have a wsgi implementation, I have
>>    > been messing around with django a bit trying to see how modular the
>>    > code is.
>>
>>    You'll notice that I said I was open to them still being supported.
>>    I'll take a submission of code + unit tests for it, or if not, will
>>    get around to implementing it someday.
>>
>>    I'll also note, it should be possible to use twisted.web.script from
>>    within a twisted.web2 server, although you won't be able to use web2
>>    Resources in the rpys loaded by the twisted.web.script loader. (The
>>    compatibility only works one way -- you can use old resources inside
>>    new ones, but not new ones inside old ones).
>>
>>    I think you might have meant this but it wasn't entirely clear so
>>    I'll also note that twisted.web2 does support wsgi.
>>
>>    James
>>
>>    _______________________________________________
>>    Twisted-web mailing list
>>    Twisted-web@twistedmatrix.com <mailto:Twisted-web@twistedmatrix.com>
>>    http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>    <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web>
>>
>>It does support wsgi, I was playing around with it. I went back to
>>twisted-web, I like its lower level approach. Using http.request
>>directly vs. resources is nice since I can pretty much tell exactly what
>>is going on. I love the fact that you can work at an extremely low level
>>in twisted-web. I hope twisted-web2 doesn't get too high level.

> I doubt it's difficult to write a server.Site equivalent to plug an
> alternative framework directly into web2's HTTP protocol support. IIRC,
> HTTPFactory expects nothing more than something callable that takes a
> bunch of args.

Please don't do this.

> Also, a root Resource that calls out to an alternative framework should
> be trivial to implement. See t.web2.iweb.IResource for details. You
> don't even need to subclass resource.Resource.

Please do this.  If you're going to write another web framework on top
of twisted.web2 you should atleast be able to deploy it along side
normal twisted.web2 resources or resources from another such framework.
locateChild makes this very easy, because you can consume an arbitrary
number of path segments at any point. (I know you know this Matt but you
made the suggestion so you get the reply ;))

-David



From dreid at dreid.org  Wed Feb  8 09:35:35 2006
From: dreid at dreid.org (David Reid)
Date: Wed Feb  8 10:33:42 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
	<612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
Message-ID: <43EA1DD7.9070505@dreid.org>

Todd Thomas wrote:
> It does support wsgi, I was playing around with it. I went back to
> twisted-web, I like its lower level approach. Using http.request
> directly vs. resources is nice since I can pretty much tell exactly what
> is going on. I love the fact that you can work at an extremely low level
> in twisted-web. I hope twisted-web2 doesn't get too high level.

I don't really understand this, twisted.web _has_ resources.  They're
not very good in that one resource is expected to return another
resource to consume the next segment in the path, which makes it hard to
stop the machinery.  But if you mean what I think you mean (which I hope
you don't) and that you're working with your own server.Site then I'd
say you need twisted.web2 more than anyone, because it's resource api
will allow you to make your framework work along side others.  Which is
one of the problems with current Nevow and part of the reason
twisted.web2 was started.

-David


From gustavo at grahal.net  Wed Feb  8 09:46:05 2006
From: gustavo at grahal.net (Gustavo Rahal)
Date: Wed Feb  8 10:52:45 2006
Subject: [Twisted-web] Re: xmlrpc server daemon
In-Reply-To: <6.1.2.0.0.20060208072705.08747970@mail.myedl.com>
References: <dscqqs$ags$1@sea.gmane.org>
	<6.1.2.0.0.20060208072705.08747970@mail.myedl.com>
Message-ID: <dsd783$th0$1@sea.gmane.org>

Samuel Reynolds wrote:
> At 2006-02-08 11:14 AM -0200, you wrote:
>> Hi
>>
>> How do I make my xmlrpc server a daemon?
>>
>> The code that starts the server is:
>>
>> r = rmsWebServices()
>> xmlrpc.addIntrospection(r)
>> reactor.listenTCP(7080, server.Site(r))
>> reactor.run()
>>
>> What should I change?
> 
> Since you said "daemon" and not "service", you're
> presumably running on an *nix box.
> 
> A daemon is, fundamentally, just a program that
> doesn't exit when you do. Your friends are
> nohup and '&'.
> 
> So if you start the server for testing using
>    myserver.py<enter>
> then the simplest way to start it as a daemon
> is this way:
>    nohup myserver.py &<enter>
> 
> '&' detaches it from the current process I/O
> so you can continue using the console for other
> things. 'nohup' detaches it from the current
> user so it keeps running after you log out.
> 
> If you start it this way from a system startup
> script, you have an always-on daemon.
> 
> - Sam
> 

Actually what I meant was service :)

I wan't to use with twistd
I saw the example in the twisted book but I didn't understand how to 
adapt to my situation.

Gustavo






From gustavo at grahal.net  Wed Feb  8 11:37:21 2006
From: gustavo at grahal.net (Gustavo Rahal)
Date: Wed Feb  8 12:38:52 2006
Subject: [Twisted-web] twistd syslog import error
Message-ID: <dsddou$rho$1@sea.gmane.org>

Hi All


twistd -y app.py

Traceback (most recent call last):
   File "C:\Python24\Lib\site-packages\twisted\scripts\twistd.py", line 
6, in ?
     from twisted.python import log, syslog
   File "C:\Python24\lib\site-packages\twisted\python\syslog.py", line 
5, in ?
     syslog = __import__('syslog')
ImportError: No module named syslog

The module is there!

I'm running on windows 2000. I tried to adjust PATH and PYTHONPATH (I 
don't know if pythonpath applies for windows) and still didn't work.

Any ideas?

Gustavo


From caliban19 at gmail.com  Wed Feb  8 14:40:00 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Wed Feb  8 15:40:05 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <43EA1DD7.9070505@dreid.org>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
	<612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
	<43EA1DD7.9070505@dreid.org>
Message-ID: <612023ed0602081340w2938bf39scdfe7b4dc0420a58@mail.gmail.com>

On 2/8/06, David Reid <dreid@dreid.org> wrote:
>
> Todd Thomas wrote:
> > It does support wsgi, I was playing around with it. I went back to
> > twisted-web, I like its lower level approach. Using http.request
> > directly vs. resources is nice since I can pretty much tell exactly what
> > is going on. I love the fact that you can work at an extremely low level
> > in twisted-web. I hope twisted-web2 doesn't get too high level.
>
> I don't really understand this, twisted.web _has_ resources.  They're
> not very good in that one resource is expected to return another
> resource to consume the next segment in the path, which makes it hard to
> stop the machinery.  But if you mean what I think you mean (which I hope
> you don't) and that you're working with your own server.Site then I'd
> say you need twisted.web2 more than anyone, because it's resource api
> will allow you to make your framework work along side others.  Which is
> one of the problems with current Nevow and part of the reason
> twisted.web2 was started.
>
> -David
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
You just described exactly the problem I am currently having with
twisted-web2. I tried to create wsgi as a root resource, however its also
dependent on static files in media directory. I wasn't able to create a
child object due to no matter what it passes full path to the wsgi
application. So then I made it a child of a root resource, this sort of
worked. But since the root path was consumed when it is passed to the child
resource, when the application does a redirect, it creates the url in
relation to root, not the child url. In my own application I could work
around this without too much difficulty since I already know where my child
is in relation to the root object.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060208/bf8a8144/attachment.htm
From exarkun at divmod.com  Wed Feb  8 15:49:20 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Feb  8 16:49:25 2006
Subject: [Twisted-web] twistd syslog import error
In-Reply-To: <dsddou$rho$1@sea.gmane.org>
Message-ID: <20060208224920.2697.1466432454.divmod.quotient.12804@ohm>

On Wed, 08 Feb 2006 16:37:21 -0200, Gustavo Rahal <gustavo@grahal.net> wrote:
>Hi All
>
>
>twistd -y app.py
>
>Traceback (most recent call last):
>   File "C:\Python24\Lib\site-packages\twisted\scripts\twistd.py", line 6, in 
>?
>     from twisted.python import log, syslog
>   File "C:\Python24\lib\site-packages\twisted\python\syslog.py", line 5, in 
>?
>     syslog = __import__('syslog')
>ImportError: No module named syslog
>
>The module is there!

You're using twisted/scripts/twistd.py somehow, which doesn't work on Windows.  You want to be using bin/twistd.  The Win32 installer should have added a "Twisted Command Shell" or something similar to your start menu.  Try running that, and running twistd inside it.

twisted/python/syslog.py exists, certainly, but it is trying to import syslog from the standard library, which is not available on Win32.

Jean-Paul

From caliban19 at gmail.com  Wed Feb  8 17:49:45 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Wed Feb  8 18:49:49 2006
Subject: [Twisted-web] twistd syslog import error
In-Reply-To: <20060208224920.2697.1466432454.divmod.quotient.12804@ohm>
References: <dsddou$rho$1@sea.gmane.org>
	<20060208224920.2697.1466432454.divmod.quotient.12804@ohm>
Message-ID: <612023ed0602081649w455fab03v7b1dd7e97a96de98@mail.gmail.com>

On 2/8/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
>
> On Wed, 08 Feb 2006 16:37:21 -0200, Gustavo Rahal <gustavo@grahal.net>
> wrote:
> >Hi All
> >
> >
> >twistd -y app.py
> >
> >Traceback (most recent call last):
> >   File "C:\Python24\Lib\site-packages\twisted\scripts\twistd.py", line
> 6, in
> >?
> >     from twisted.python import log, syslog
> >   File "C:\Python24\lib\site-packages\twisted\python\syslog.py", line 5,
> in
> >?
> >     syslog = __import__('syslog')
> >ImportError: No module named syslog
> >
> >The module is there!
>
> You're using twisted/scripts/twistd.py somehow, which doesn't work on
> Windows.  You want to be using bin/twistd.  The Win32 installer should have
> added a "Twisted Command Shell" or something similar to your start
> menu.  Try running that, and running twistd inside it.
>
> twisted/python/syslog.py exists, certainly, but it is trying to import
> syslog from the standard library, which is not available on Win32.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
In the python24 directory under windows, there is a twistd.bat in the
scripts directory. It works fine in windows, I haven't had any problems with
it. To get it to work from windows command line, just add
C:\Python24\scripts\ to your path under environment. From looking at
shortcut for twisted command prompt, looks like all it does is add that
directory to your path temporarily.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060208/5fab45fa/attachment.htm
From m.milvo at gmail.com  Thu Feb  9 00:20:15 2006
From: m.milvo at gmail.com (Michael M)
Date: Thu Feb  9 01:20:22 2006
Subject: [Twisted-web] How do I add a doctype using stan?
Message-ID: <3a767c390602082320m2a0d8992hd77deea517265c87@mail.gmail.com>

Okay, I have searched but have not found an answer and I am sure it is
obvious. I am using nevow tags and want to have the doctype so that
validation works. I am not using xmlfile or xmlstr.

I tried to do the following.
docFactory = stan.loaders(
    tags.xml('DOCTYPE etc etc'),
        tags.html[
            tags.head[tags.title['Help']],
            tags.body['How do I add a doctype']
    ]
)

and of course it failed.

Any help appreciated.

Thanks
Michael

From caliban19 at gmail.com  Thu Feb  9 01:23:03 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Thu Feb  9 02:23:08 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <612023ed0602081340w2938bf39scdfe7b4dc0420a58@mail.gmail.com>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
	<612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
	<43EA1DD7.9070505@dreid.org>
	<612023ed0602081340w2938bf39scdfe7b4dc0420a58@mail.gmail.com>
Message-ID: <612023ed0602090023n1ef36fedu56d4e6185fcd900c@mail.gmail.com>

On 2/8/06, Todd Thomas <caliban19@gmail.com> wrote:
>
>
>
> On 2/8/06, David Reid <dreid@dreid.org> wrote:
> >
> > Todd Thomas wrote:
> > > It does support wsgi, I was playing around with it. I went back to
> > > twisted-web, I like its lower level approach. Using http.request
> > > directly vs. resources is nice since I can pretty much tell exactly
> > what
> > > is going on. I love the fact that you can work at an extremely low
> > level
> > > in twisted-web. I hope twisted-web2 doesn't get too high level.
> >
> > I don't really understand this, twisted.web _has_ resources.  They're
> > not very good in that one resource is expected to return another
> > resource to consume the next segment in the path, which makes it hard to
> > stop the machinery.  But if you mean what I think you mean (which I hope
> > you don't) and that you're working with your own server.Site then I'd
> > say you need twisted.web2 more than anyone, because it's resource api
> > will allow you to make your framework work along side others.  Which is
> > one of the problems with current Nevow and part of the reason
> > twisted.web2 was started.
> >
> > -David
> >
> >
> > _______________________________________________
> > Twisted-web mailing list
> > Twisted-web@twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> >
> You just described exactly the problem I am currently having with
> twisted-web2. I tried to create wsgi as a root resource, however its also
> dependent on static files in media directory. I wasn't able to create a
> child object due to no matter what it passes full path to the wsgi
> application. So then I made it a child of a root resource, this sort of
> worked. But since the root path was consumed when it is passed to the child
> resource, when the application does a redirect, it creates the url in
> relation to root, not the child url. In my own application I could work
> around this without too much difficulty since I already know where my child
> is in relation to the root object.
>
Okay, I seemed to have solved most of my problems. Only issue having now is
pysqlite2 doesn't like being called from threads seperate from the ones that
created it. It could be run as a deferred in this case since it does respond
pretty quick. But I am sure could solve this issue simply by changing to
mysql or postgresql. The solution was stupidly simple.

from twisted.application import strports, service
from twisted.web2 import static, server, http, wsgi, resource

import sys
sys.path.append("./myproject")
from django.core.handlers.wsgi import WSGIHandler
import os
os.environ['DJANGO_SETTINGS_MODULE'] = 'myproject.settings'

class toplevel(wsgi.WSGIResource):


    def child_media(self, ctx):
        return static.File("./myproject/media")


root = toplevel(WSGIHandler())
application = service.Application("web")
site = server.Site(root)
s = strports.service('tcp:8000', http.HTTPFactory(site))
s.setServiceParent(application)


It works fairly well, or would if I wasn't testing on windows. Before you
ask why windows. I have box I dual boot into and normally run secure shell
to, using ubuntu linux currently. Unfortunately my computer has sims 2 on
which my g/f has been playing religiously lately. So I am stuck using
windows at work for right now.

ToddB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060209/82a54bb7/attachment-0001.htm
From caliban19 at gmail.com  Thu Feb  9 01:45:25 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Thu Feb  9 02:45:29 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <612023ed0602090023n1ef36fedu56d4e6185fcd900c@mail.gmail.com>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
	<612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
	<43EA1DD7.9070505@dreid.org>
	<612023ed0602081340w2938bf39scdfe7b4dc0420a58@mail.gmail.com>
	<612023ed0602090023n1ef36fedu56d4e6185fcd900c@mail.gmail.com>
Message-ID: <612023ed0602090045j26673acn5c1414b78183adc3@mail.gmail.com>

On 2/9/06, Todd Thomas <caliban19@gmail.com> wrote:
>
>
>
> On 2/8/06, Todd Thomas <caliban19@gmail.com> wrote:
> >
> >
> >
> > On 2/8/06, David Reid < dreid@dreid.org> wrote:
> > >
> > > Todd Thomas wrote:
> > > > It does support wsgi, I was playing around with it. I went back to
> > > > twisted-web, I like its lower level approach. Using http.request
> > > > directly vs. resources is nice since I can pretty much tell exactly
> > > what
> > > > is going on. I love the fact that you can work at an extremely low
> > > level
> > > > in twisted-web. I hope twisted-web2 doesn't get too high level.
> > >
> > > I don't really understand this, twisted.web _has_ resources.  They're
> > > not very good in that one resource is expected to return another
> > > resource to consume the next segment in the path, which makes it hard
> > > to
> > > stop the machinery.  But if you mean what I think you mean (which I
> > > hope
> > > you don't) and that you're working with your own server.Site then I'd
> > > say you need twisted.web2 more than anyone, because it's resource api
> > > will allow you to make your framework work along side others.  Which
> > > is
> > > one of the problems with current Nevow and part of the reason
> > > twisted.web2 was started.
> > >
> > > -David
> > >
> > >
> > > _______________________________________________
> > > Twisted-web mailing list
> > > Twisted-web@twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> > >
> > You just described exactly the problem I am currently having with
> > twisted-web2. I tried to create wsgi as a root resource, however its also
> > dependent on static files in media directory. I wasn't able to create a
> > child object due to no matter what it passes full path to the wsgi
> > application. So then I made it a child of a root resource, this sort of
> > worked. But since the root path was consumed when it is passed to the child
> > resource, when the application does a redirect, it creates the url in
> > relation to root, not the child url. In my own application I could work
> > around this without too much difficulty since I already know where my child
> > is in relation to the root object.
> >
> Okay, I seemed to have solved most of my problems. Only issue having now
> is pysqlite2 doesn't like being called from threads seperate from the ones
> that created it. It could be run as a deferred in this case since it does
> respond pretty quick. But I am sure could solve this issue simply by
> changing to mysql or postgresql. The solution was stupidly simple.
>
> from twisted.application import strports, service
> from twisted.web2 import static, server, http, wsgi, resource
>
> import sys
> sys.path.append("./myproject")
> from django.core.handlers.wsgi import WSGIHandler
> import os
> os.environ['DJANGO_SETTINGS_MODULE'] = 'myproject.settings'
>
> class toplevel(wsgi.WSGIResource):
>
>
>     def child_media(self, ctx):
>         return static.File("./myproject/media")
>
>
> root = toplevel(WSGIHandler())
> application = service.Application("web")
> site = server.Site(root)
> s = strports.service('tcp:8000', http.HTTPFactory(site))
> s.setServiceParent(application)
>
>
> It works fairly well, or would if I wasn't testing on windows. Before you
> ask why windows. I have box I dual boot into and normally run secure shell
> to, using ubuntu linux currently. Unfortunately my computer has sims 2 on
> which my g/f has been playing religiously lately. So I am stuck using
> windows at work for right now.
>
> ToddB
>
I was wrong, the css and js were cached, media directory is unreachable
using this code. Which I thought it would be since
wsgi.WSGIResourceimplements its own locate child. Any ideas of
something that could work?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060209/455a6129/attachment.htm
From glyph at divmod.com  Thu Feb  9 04:21:18 2006
From: glyph at divmod.com (glyph@divmod.com)
Date: Thu Feb  9 05:21:29 2006
Subject: [Twisted-web] making streams optional in web2
In-Reply-To: 0
Message-ID: <20060209112118.2697.1388459534.divmod.quotient.13659@ohm>


A few days ago, JP showed me some benchmarks of web2 vs. CherryPy hosting a trivial WSGI application.

It turns out it's 4x slower, clocking in only ~250 req/sec on a middle-spec Opteron, as opposed to CherryPy's ~1000.  From previous benchmarks, I happen to know that Apache can do ~3000 req/sec on that same hardware, making web2 well over 10x slower.

I didn't look at the profile too closely, but preliminarily it seemed clear that the major bottleneck at this point was the creation and invocation of tons of Deferreds in _NotifyingProducerStream, while generating the response.

Considering that streams aren't used at all in the actual HTTP protocol implementation (and thank goodness for that, given this discovery) it strikes me that the use of them in the response-generating API ought to be more optional, for cases where efficiency is important.  Like, for example, DAV, which also seems to be making embarrassingly heavy use of the streams API - I haven't benchmarked that yet, but I'm sure it will be an adventure if I do :).

I'm not sure I totally understand the use of streams here, anyway.  I notice that Request purports to implement IConsumer, but I don't see any of IConsumer's methods actually present on Request.  I'd prefer it if it actually did implement IConsumer and I could just write to that as an API.

Finally, a minor nit; can we rename the various "http.py"s?  I'd rather a naming convention than subdirectories anyway, http_channel.py rather than channel/http.  Right now we have web2/http.py, web2/channel/http.py, and web2/dav/http.py.  I can only see this problem getting worse.

From matt at pollenation.net  Thu Feb  9 06:40:52 2006
From: matt at pollenation.net (Matt Goodall)
Date: Thu Feb  9 07:40:46 2006
Subject: [Twisted-web] How do I add a doctype using stan?
In-Reply-To: <3a767c390602082320m2a0d8992hd77deea517265c87@mail.gmail.com>
References: <3a767c390602082320m2a0d8992hd77deea517265c87@mail.gmail.com>
Message-ID: <43EB4664.6080106@pollenation.net>

Michael M wrote:
> Okay, I have searched but have not found an answer and I am sure it is
> obvious. I am using nevow tags and want to have the doctype so that
> validation works. I am not using xmlfile or xmlstr.
> 
> I tried to do the following.
> docFactory = stan.loaders(
>     tags.xml('DOCTYPE etc etc'),
>         tags.html[
>             tags.head[tags.title['Help']],
>             tags.body['How do I add a doctype']
>     ]
> )

loaders.stan only takes one arg so put the tags.xml and the tags.html
top node in a tuple or list. The second arg is the name of the pattern
to extract from the template in the first arg.

docFactory = loaders.stan(
    (
        tags.xml('DOCTYPE etc etc'),
            tags.html[
                tags.head[tags.title['Help']],
                tags.body['How do I add a doctype']
        ]
    )
)


- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.

From matt at pollenation.net  Thu Feb  9 07:28:32 2006
From: matt at pollenation.net (Matt Goodall)
Date: Thu Feb  9 08:28:25 2006
Subject: [Twisted-web] How do I add a doctype using stan?
In-Reply-To: <43EB4664.6080106@pollenation.net>
References: <3a767c390602082320m2a0d8992hd77deea517265c87@mail.gmail.com>
	<43EB4664.6080106@pollenation.net>
Message-ID: <43EB5190.1090407@pollenation.net>

Matt Goodall wrote:
[...]
> loaders.stan only takes one arg so put the tags.xml and the tags.html
> top node in a tuple or list. The second arg is the name of the pattern
> to extract from the template in the first arg.

Wow, managed to contradict myself in a single paragraph!

Ignore the paragraph and look at the method signature instead:

  class stan(object):
      ...
      def __init__(self, stan=None, pattern=None):
          ...

Sorry about that and I hope the problem is clearer now.

- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.

From m.milvo at gmail.com  Thu Feb  9 09:03:42 2006
From: m.milvo at gmail.com (Michael M)
Date: Thu Feb  9 10:03:45 2006
Subject: [Twisted-web] How do I add a doctype using stan?
In-Reply-To: <43EB4664.6080106@pollenation.net>
References: <3a767c390602082320m2a0d8992hd77deea517265c87@mail.gmail.com>
	<43EB4664.6080106@pollenation.net>
Message-ID: <3a767c390602090803t1cb2b7cal5fec8fedaf63d47b@mail.gmail.com>

Thanks Matt, that did the trick. When I get a moment I will stick it
on the nevow wiki.
Michael

> loaders.stan only takes one arg so put the tags.xml and the tags.html
> top node in a tuple or list. The second arg is the name of the pattern
> to extract from the template in the first arg.
>
> docFactory = loaders.stan(
>     (
>         tags.xml('DOCTYPE etc etc'),
>             tags.html[
>                 tags.head[tags.title['Help']],
>                 tags.body['How do I add a doctype']
>         ]
>     )
> )
>
>
> - Matt
>
> --
>      __
>     /  \__     Matt Goodall, Pollenation Internet Ltd
>     \__/  \    w: http://www.pollenation.net
>   __/  \__/    e: matt@pollenation.net
>  /  \__/  \    t: +44 (0)113 2252500
>  \__/  \__/
>  /  \          Any views expressed are my own and do not necessarily
>  \__/          reflect the views of my employer.
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>

From m.milvo at gmail.com  Thu Feb  9 09:08:08 2006
From: m.milvo at gmail.com (Michael M)
Date: Thu Feb  9 10:08:10 2006
Subject: [Twisted-web] How do I add a doctype using stan?
In-Reply-To: <43EB5190.1090407@pollenation.net>
References: <3a767c390602082320m2a0d8992hd77deea517265c87@mail.gmail.com>
	<43EB4664.6080106@pollenation.net> <43EB5190.1090407@pollenation.net>
Message-ID: <3a767c390602090808n2bd55f4dp512844f1c153fb48@mail.gmail.com>

Hi, your solution worked. I gather that what you are correcting is
that stan will take two arguments, stan=(tags.X etc) and
pattern=whatever. I would still have to enclose my tag tree  in a
tuple/list anyway as far as I can tell.

Thanks again for your help.
Michael


On 2/9/06, Matt Goodall <matt@pollenation.net> wrote:
> Matt Goodall wrote:
> [...]
> > loaders.stan only takes one arg so put the tags.xml and the tags.html
> > top node in a tuple or list. The second arg is the name of the pattern
> > to extract from the template in the first arg.
>
> Wow, managed to contradict myself in a single paragraph!
>
> Ignore the paragraph and look at the method signature instead:
>
>   class stan(object):
>       ...
>       def __init__(self, stan=None, pattern=None):
>           ...
>
> Sorry about that and I hope the problem is clearer now.
>
> - Matt
>
> --
>      __
>     /  \__     Matt Goodall, Pollenation Internet Ltd
>     \__/  \    w: http://www.pollenation.net
>   __/  \__/    e: matt@pollenation.net
>  /  \__/  \    t: +44 (0)113 2252500
>  \__/  \__/
>  /  \          Any views expressed are my own and do not necessarily
>  \__/          reflect the views of my employer.
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>

From foom at fuhm.net  Thu Feb  9 11:40:49 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu Feb  9 12:40:59 2006
Subject: [Twisted-web] making streams optional in web2
In-Reply-To: <20060209112118.2697.1388459534.divmod.quotient.13659@ohm>
References: <20060209112118.2697.1388459534.divmod.quotient.13659@ohm>
Message-ID: <6B84E2B5-0662-4D66-80B6-64AA1F1D116A@fuhm.net>

On Feb 9, 2006, at 6:21 AM, glyph@divmod.com wrote:
> A few days ago, JP showed me some benchmarks of web2 vs. CherryPy  
> hosting a trivial WSGI application.
>
> It turns out it's 4x slower, clocking in only ~250 req/sec on a  
> middle-spec Opteron, as opposed to CherryPy's ~1000.  From previous  
> benchmarks, I happen to know that Apache can do ~3000 req/sec on  
> that same hardware, making web2 well over 10x slower.
>
> I didn't look at the profile too closely, but preliminarily it  
> seemed clear that the major bottleneck at this point was the  
> creation and invocation of tons of Deferreds in  
> _NotifyingProducerStream, while generating the response.
>
> Considering that streams aren't used at all in the actual HTTP  
> protocol implementation (and thank goodness for that, given this  
> discovery) it strikes me that the use of them in the response- 
> generating API ought to be more optional, for cases where  
> efficiency is important.  Like, for example, DAV, which also seems  
> to be making embarrassingly heavy use of the streams API - I  
> haven't benchmarked that yet, but I'm sure it will be an adventure  
> if I do :).

Benchmarking is a dangerous activity.

I only get 131req/sec from ab on my mac from the following IResource  
resource, vs 114 from the wsgi resource, vs 706 from apache. Vs 74  
from cherrypy's tut01_helloworld.py. So, shrug, I'm sure my benchmark  
sucks, and must be measuring something completely different than  
yours, given the wide variance in relative numbers. Anyhow, I'm happy  
that someone is benchmarking web2, because I haven't done so any time  
recently, but what you write above comes quite close to random flaming.

Here's the simple resources:

def simple_wsgi_app(environ, start_response):
     start_response("200 OK", [])
     return ['Hello world!']

class SimpleResource(object):
     implements(iweb.IResource)
     def renderHTTP(self, req):
         return http.Response(200, None,  "Hello world!")
     def locateChild(self, req, seg):
         return self, ()

Here's all the construction of Deferreds from the native response.  
Only one is from the streams module. Looks like some of the others  
could be removed without changing any APIs, if that actually helps  
things. Going through the WSGI interface adds one additional deferred  
construction in addition to these 4.

(Pdb) break twisted.internet.defer.Deferred.__init__
Breakpoint 1 at /Users/jknight/Tw/trunk/twisted/internet/defer.py:163

(Pdb) bt
   /Users/jknight/Tw/trunk/twisted/internet/selectreactor.py(139) 
_doReadOrWrite()
-> why = getattr(selectable, method)()
   /Users/jknight/Tw/trunk/twisted/internet/tcp.py(350)doRead()
-> return self.protocol.dataReceived(data)
   /Users/jknight/Tw/trunk/twisted/protocols/basic.py(232)dataReceived()
-> why = self.lineReceived(line)
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(664) 
lineReceived()
-> self.chanRequest.lineReceived(line)
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(142) 
lineReceived()
-> self.processRequest()
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(384) 
processRequest()
-> self.request.process()
   /Users/jknight/Tw/trunk/twisted/web2/server.py(256)process()
-> d = self._getChild(self.site.resource, self.postpath)
   /Users/jknight/Tw/trunk/twisted/web2/server.py(283)_getChild()
-> return defer.maybeDeferred(
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(116)maybeDeferred()
-> return succeed(result)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(49)succeed()
-> d = Deferred()
 > /Users/jknight/Tw/trunk/twisted/internet/defer.py(163)__init__()
-> self.callbacks = []

(Pdb) bt
   /Users/jknight/Tw/trunk/twisted/internet/selectreactor.py(139) 
_doReadOrWrite()
-> why = getattr(selectable, method)()
   /Users/jknight/Tw/trunk/twisted/internet/tcp.py(350)doRead()
-> return self.protocol.dataReceived(data)
   /Users/jknight/Tw/trunk/twisted/protocols/basic.py(232)dataReceived()
-> why = self.lineReceived(line)
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(664) 
lineReceived()
-> self.chanRequest.lineReceived(line)
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(142) 
lineReceived()
-> self.processRequest()
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(384) 
processRequest()
-> self.request.process()
   /Users/jknight/Tw/trunk/twisted/web2/server.py(256)process()
-> d = self._getChild(self.site.resource, self.postpath)
   /Users/jknight/Tw/trunk/twisted/web2/server.py(283)_getChild()
-> return defer.maybeDeferred(
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(191)addCallback()
-> callbackKeywords=kw)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(182)addCallbacks()
-> self._runCallbacks()
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(307)_runCallbacks()
-> self.result = callback(self.result, *args, **kw)
   /Users/jknight/Tw/trunk/twisted/web2/server.py(312)_handleSegment()
-> return self._getChild(newres, newpath)
   /Users/jknight/Tw/trunk/twisted/web2/server.py(281)_getChild()
-> return defer.succeed(res)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(49)succeed()
-> d = Deferred()
 > /Users/jknight/Tw/trunk/twisted/internet/defer.py(163)__init__()
-> self.callbacks = []

(Pdb) bt
   /Users/jknight/Tw/trunk/twisted/internet/selectreactor.py(139) 
_doReadOrWrite()
-> why = getattr(selectable, method)()
   /Users/jknight/Tw/trunk/twisted/internet/tcp.py(350)doRead()
-> return self.protocol.dataReceived(data)
   /Users/jknight/Tw/trunk/twisted/protocols/basic.py(232)dataReceived()
-> why = self.lineReceived(line)
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(664) 
lineReceived()
-> self.chanRequest.lineReceived(line)
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(142) 
lineReceived()
-> self.processRequest()
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(384) 
processRequest()
-> self.request.process()
   /Users/jknight/Tw/trunk/twisted/web2/server.py(258)process()
-> d.addCallback(self._cbFinishRender)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(191)addCallback()
-> callbackKeywords=kw)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(182)addCallbacks()
-> self._runCallbacks()
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(307)_runCallbacks()
-> self.result = callback(self.result, *args, **kw)
   /Users/jknight/Tw/trunk/twisted/web2/server.py(355)_cbFinishRender()
-> d = defer.Deferred()
 > /Users/jknight/Tw/trunk/twisted/internet/defer.py(163)__init__()
-> self.callbacks = []

(Pdb) bt
   /Users/jknight/Tw/trunk/twisted/internet/selectreactor.py(139) 
_doReadOrWrite()
-> why = getattr(selectable, method)()
   /Users/jknight/Tw/trunk/twisted/internet/tcp.py(350)doRead()
-> return self.protocol.dataReceived(data)
   /Users/jknight/Tw/trunk/twisted/protocols/basic.py(232)dataReceived()
-> why = self.lineReceived(line)
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(664) 
lineReceived()
-> self.chanRequest.lineReceived(line)
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(142) 
lineReceived()
-> self.processRequest()
   /Users/jknight/Tw/trunk/twisted/web2/channel/http.py(384) 
processRequest()
-> self.request.process()
   /Users/jknight/Tw/trunk/twisted/web2/server.py(258)process()
-> d.addCallback(self._cbFinishRender)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(191)addCallback()
-> callbackKeywords=kw)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(182)addCallbacks()
-> self._runCallbacks()
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(307)_runCallbacks()
-> self.result = callback(self.result, *args, **kw)
   /Users/jknight/Tw/trunk/twisted/web2/server.py(359)_cbFinishRender()
-> d.callback(response)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(229)callback()
-> self._startRunCallbacks(result)
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(294) 
_startRunCallbacks()
-> self._runCallbacks()
   /Users/jknight/Tw/trunk/twisted/internet/defer.py(307)_runCallbacks()
-> self.result = callback(self.result, *args, **kw)
   /Users/jknight/Tw/trunk/twisted/web2/http.py(419)writeResponse()
-> d = stream.StreamProducer(response.stream).beginProducing 
(self.chanRequest)
   /Users/jknight/Tw/trunk/twisted/web2/stream.py(725)beginProducing()
-> finishedCallback = self.finishedCallback = Deferred()
 > /Users/jknight/Tw/trunk/twisted/internet/defer.py(163)__init__()
-> self.callbacks = []



James

From foom at fuhm.net  Thu Feb  9 11:45:14 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu Feb  9 12:45:27 2006
Subject: [Twisted-web] Re: [Twisted-Python] Re: [Twisted-commits] r15860 -
	Move checkPreconditions() from web2.dav.static.DAVFile to
	web2.resource.RenderMixIn.
In-Reply-To: <DAEC1B54-449A-401E-88F5-778975DBB43F@fuhm.net>
References: <E1F700I-0000rf-00@wolfwood>
	<DAEC1B54-449A-401E-88F5-778975DBB43F@fuhm.net>
Message-ID: <737CEC70-C9AF-49FD-9851-687DBDD8CC71@fuhm.net>

Sorry, I meant to send this to twisted-web instead. Plz make any  
reply there, instead.

James

On Feb 9, 2006, at 1:34 PM, James Y Knight wrote:
> On Feb 8, 2006, at 7:49 PM, Wilfredo Sanchez wrote:
>> Move checkPreconditions() from web2.dav.static.DAVFile to  
>> web2.resource.RenderMixIn.
>> Add test suite (ported foom's tests for server.checkpreconditions()).
>> Fix some bugs found by the tests.  (Holy cow, checkpreconditions  
>> are a PITA.)
>
> I don't like this part. You've made the precondition check code  
> much longer, IMO harder to understand (figuring out how the return  
> values of one method influenced the rest of the execution is not  
> easy), and pinned it to being part of Resource, rather than being  
> reusable. I'm not sure of the need, given that the previous  
> implementation was callable from Resource as it was. Why not just  
> use it...
>
> Nextly, I'm somewhat concerned about the change to calling the  
> precondition check before GET rendering instead of afterwards: I  
> think your use cases are probably not typical. I believe most  
> people will write resources which generate dynamic content, and if  
> they're _really good_ about it, they'll simultaneously generate an  
> etag and a last-modified time. This is also the only way that such  
> information can come out of wsgi, cgi, proxies to other servers, etc.
>
> The way things were set up before made Not Modified responses just  
> "magically" show up correctly when you set those headers in your  
> response. No more interface was required than that, which means  
> that the response could come from anywhere. Now, instead, you force  
> the author to implement resource.etag() and resource.lastModified()  
> in order to get that behavior. It's really easy for file-like  
> resources to do so, but not so much so for most other kinds.
>
> And the thing is, it's OK to check afterwards for the kinds of  
> requests a web browser makes: GET/HEAD/POST. GET/HEAD don't change  
> things so it's acceptable to do their check at any time, and while  
> POST does change things, as a practical matter nobody actually  
> sends conditionals on post requests, because what would it be  
> useful for? (and nothing would be set up to handle such a thing).
>
> However, I'm currently ignoring conditionals on PostableResource's  
> http_POST, which while okay as far as real-world interoperability  
> goes, it is certainly not _right_. And to make things worse, the  
> post-processing filter doesn't confine itself to checking only GET/ 
> HEAD requests, so the client will get back a precondition failed  
> message, even though the method was executed. At the very least a  
> POST with an If-Unmodified-Since/If-Match should return  
> precondition failed. If there was code on Resource to handle that  
> automatically, I could not have forgetten to do it.
>
> So, um, I dunno what to conclude. :)
>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From foom at fuhm.net  Thu Feb  9 11:52:38 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu Feb  9 12:52:45 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <612023ed0602090023n1ef36fedu56d4e6185fcd900c@mail.gmail.com>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
	<612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
	<43EA1DD7.9070505@dreid.org>
	<612023ed0602081340w2938bf39scdfe7b4dc0420a58@mail.gmail.com>
	<612023ed0602090023n1ef36fedu56d4e6185fcd900c@mail.gmail.com>
Message-ID: <3F0922FC-CD00-4459-B74D-A5928D7214B0@fuhm.net>

> from twisted.application import strports, service
> from twisted.web2 import static, server, http, wsgi, resource
>
> import sys
> sys.path.append("./myproject")
> from django.core.handlers.wsgi import WSGIHandler
> import os
> os.environ['DJANGO_SETTINGS_MODULE'] = 'myproject.settings'
>
> class toplevel(wsgi.WSGIResource):
>
>
>     def child_media(self, ctx):
>         return static.File("./myproject/media")
>
>
> root = toplevel(WSGIHandler())
> application = service.Application("web")
> site = server.Site(root)
> s = strports.service('tcp:8000', http.HTTPFactory(site))
> s.setServiceParent(application)

That won't work -- what you want is to nest the resources rather than  
subclass them. Something like this resource should do you (untested,  
wrote in email client). It says: if the path starts with media,  
return the static File and pass it the remaining pieces of the path,  
otherwise pass the entire path onto wsgi for its processing.

class toplevel(object):
   implements(IResource)

   def __init__(self):
     self.wsgi = wsgi.WSGIResource(WSGIHandler())
     self.media = static.File("./myproject/media"

   def locateChild(self, req, segs):
     if segs[0] == 'media':
       return self.media, segs[1:]
     return self.wsgi, segs

   def renderHTTP(self, req):
     return self.wsgi

James

From glyph at divmod.com  Thu Feb  9 12:20:05 2006
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Thu Feb  9 13:20:34 2006
Subject: [Twisted-web] making streams optional in web2
In-Reply-To: <6B84E2B5-0662-4D66-80B6-64AA1F1D116A@fuhm.net>
References: <20060209112118.2697.1388459534.divmod.quotient.13659@ohm>
	<6B84E2B5-0662-4D66-80B6-64AA1F1D116A@fuhm.net>
Message-ID: <1139512805.14559.13.camel@legion.lan>

On Thu, 2006-02-09 at 13:40 -0500, James Y Knight wrote:

> Benchmarking is a dangerous activity.

Truly.

> I only get 131req/sec from ab on my mac from the following IResource  
> resource, vs 114 from the wsgi resource, vs 706 from apache. Vs 74  
> from cherrypy's tut01_helloworld.py.

This is encouraging, at least with respect to the relative speed of
CherryPy.  I'd be quite happy to be wrong about needing API changes to
improve performance; these should be independent considerations.

> So, shrug, I'm sure my benchmark  
> sucks, and must be measuring something completely different than  
> yours, given the wide variance in relative numbers. Anyhow, I'm happy  
> that someone is benchmarking web2, because I haven't done so any time  
> recently, but what you write above comes quite close to random flaming.

I was hoping JP would publish his actual results before I wrote what I
did, but I didn't want the ideas to get too stale.  Maybe this will
prompt him to - I hope said results are not too different from what I
remember. 

At any rate, don't take it to heart, I'm glad just to get some
discussion started about this and have everybody following it on the
list publish their own trivial benchmarks to see if we can achieve some
consensus as to how much load web2 can actually handle these days.
Perhaps I should have been more direct in the first email, though.  Full
disclosure: I never liked streams as an API, and I have practically been
looking for reasons to complain about them.  Look for more soon, this
benchmark was only the first ;-).

Also, performance and aesthetic considerations aside, if a thing says it
implements IConsumer, it should *actually* implement IConsumer.  Is the
mistake in the declaration or the implementation here?  I hope it's the
implementation, because IConsumer is the API I'd prefer to use, streams
or no.  Or, is there some funny magic behind the scenes where a Response
actually does provide IConsumer somewhere?  Even if so, a
directlyProvides makes more sense for funny magic than an implements().

> Here's all the construction of Deferreds from the native response.

Hmm.  It is quite possible that the profile was not accurate - there
were some odd things about it, although it's also possible that the WSGI
test in question was doing something pathological that yours was not,
like generating tons of tiny little write()s.

> Only one is from the streams module. Looks like some of the others  
> could be removed without changing any APIs, if that actually helps  
> things. Going through the WSGI interface adds one additional deferred  
> construction in addition to these 4.

Deferreds do have an embarrassingly high overhead.  The next step here
(in figuring out if those extra deferreds should be eliminated) is
probably for me to construct some more meaningful benchmark to measure
the performance impact in req/sec of additional deferreds in the
response pipeline.


From exarkun at divmod.com  Thu Feb  9 13:08:27 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Feb  9 14:08:30 2006
Subject: [Twisted-web] making streams optional in web2
In-Reply-To: <1139512805.14559.13.camel@legion.lan>
Message-ID: <20060209200827.20077.153462916.divmod.quotient.17@ohm>

On Thu, 09 Feb 2006 14:20:05 -0500, Glyph Lefkowitz <glyph@divmod.com> wrote:
>On Thu, 2006-02-09 at 13:40 -0500, James Y Knight wrote:
>
>> Benchmarking is a dangerous activity.
>
>Truly.
>

Here's the ab2 output for a twisted.web2 server:

    Server Software:        Twisted/SVN-Trunk
    Server Hostname:        kunai.lan
    Server Port:            8080

    Document Path:          /
    Document Length:        26 bytes

    Concurrency Level:      500
    Time taken for tests:   36.267711 seconds
    Complete requests:      10000
    Failed requests:        0
    Write errors:           0
    Total transferred:      1751750 bytes
    HTML transferred:       260260 bytes
    Requests per second:    275.73 [#/sec] (mean)
    Time per request:       1813.386 [ms] (mean)
    Time per request:       3.627 [ms] (mean, across all concurrent requests)
    Transfer rate:          47.15 [Kbytes/sec] received

    Connection Times (ms)
                  min  mean[+/-sd] median   max
    Connect:        0   87 718.4      1    9000
    Processing:   108  461 122.7    474    1944
    Waiting:       40  459 122.7    473    1942
    Total:        110  548 766.0    481   10912

    Percentage of the requests served within a certain time (ms)
      50%    481
      66%    505
      75%    511
      80%    515
      90%    546
      95%    585
      98%    733
      99%   3575
     100%  10912 (longest request)

And here's the output of a run against CherryPy:

    Server Software:        CherryPy/2.2.0beta
    Server Hostname:        kunai.lan
    Server Port:            8080

    Document Path:          /
    Document Length:        26 bytes

    Concurrency Level:      500
    Time taken for tests:   7.855088 seconds
    Complete requests:      10000
    Failed requests:        0
    Write errors:           0
    Total transferred:      1360136 bytes
    HTML transferred:       260026 bytes
    Requests per second:    1273.06 [#/sec] (mean)
    Time per request:       392.754 [ms] (mean)
    Time per request:       0.786 [ms] (mean, across all concurrent requests)
    Transfer rate:          169.06 [Kbytes/sec] received

    Connection Times (ms)
                  min  mean[+/-sd] median   max
    Connect:        0  102 545.4      0    3003
    Processing:    16  229 169.3    305    3419
    Waiting:       15  228 169.4    304    3418
    Total:         33  332 623.2    306    6420

    Percentage of the requests served within a certain time (ms)
      50%    306
      66%    329
      75%    333
      80%    334
      90%    340
      95%    343
      98%   3202
      99%   3460
     100%   6420 (longest request)

The CherryPy numbers might be artificially depressed; from a quick check, it seems the bottleneck may be on the client side.

This is the wsgi app being served:

    def app(environ, start_response):
        start_response('200 Ok', [('Content-Type', 'text/plain')])
        return 'WSGI is a wonderful thing.'

Jean-Paul

From duncan.mcgreggor at gmail.com  Thu Feb  9 13:16:04 2006
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu Feb  9 14:17:31 2006
Subject: [Twisted-web] sprinting at PyCon
Message-ID: <cded6a71e8e3e24a56871392cb360e35@gmail.com>

 From an email exchange with dreid:

> From: David Reid <dreid@dreid.org>
> Date: February 9, 2006 1:04:30 PM MST
> To: Duncan McGreggor <duncan.mcgreggor@gmail.com>
> Subject: Re: t.w.xmlrpc Basic Auth patch
>
>>> Help is always great, unfortunately the web2 client isn't _done_ yet.
>>> It has pretty decent test coverage and works fairly well but doesn't
>>> have any high level api.  I'm not sure when that stuff will get done.
>>> If you're interested in the XML-RPC server side that'd be great. :)
>>
>> Awesome. Perfect for sprinting at pycon.
>
> I don't think foom or I are going to be there. Perhaps some benefit
> might come of organizing a virtual sprint to coincide with pycon's
> sprints. :(

I will be at pycon this year. I had planned on sprinting with some of 
my own projects, but I can do that anytime. I'd much rather do some 
group work, even if it's virtual sprinting with those that can't be 
there.

Is there any interest in a sprint/vsprint? In particular, I want to 
help with t.w2 xmlrpc (server, maybe some client work). Any thoughts? 
What about #twisted.pycon or some such?

d


From foom at fuhm.net  Thu Feb  9 13:24:37 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu Feb  9 14:24:59 2006
Subject: [Twisted-web] making streams optional in web2
In-Reply-To: <20060209200827.20077.153462916.divmod.quotient.17@ohm>
References: <20060209200827.20077.153462916.divmod.quotient.17@ohm>
Message-ID: <FD6A1FDF-653F-4CD6-BC11-C6915DEF6EBB@fuhm.net>


On Feb 9, 2006, at 3:08 PM, Jean-Paul Calderone wrote:

>    def app(environ, start_response):
>        start_response('200 Ok', [('Content-Type', 'text/plain')])
>        return 'WSGI is a wonderful thing.'

There's a problem there: the return value of a wsgi resource is a  
sequence, so you're returning a sequence of single character strings,  
thus causing excessively high overhead. Perhaps that ought to be  
special cased, cause I'm sure more people than you will make that  
mistake.

James

From exarkun at divmod.com  Thu Feb  9 13:34:41 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Feb  9 14:34:44 2006
Subject: [Twisted-web] making streams optional in web2
In-Reply-To: <FD6A1FDF-653F-4CD6-BC11-C6915DEF6EBB@fuhm.net>
Message-ID: <20060209203441.20077.764225399.divmod.quotient.26@ohm>

On Thu, 9 Feb 2006 15:24:37 -0500, James Y Knight <foom@fuhm.net> wrote:
>
>On Feb 9, 2006, at 3:08 PM, Jean-Paul Calderone wrote:
>>    def app(environ, start_response):
>>        start_response('200 Ok', [('Content-Type', 'text/plain')])
>>        return 'WSGI is a wonderful thing.'
>
>There's a problem there: the return value of a wsgi resource is a  sequence, 
>so you're returning a sequence of single character strings,  thus causing 
>excessively high overhead. Perhaps that ought to be  special cased, cause 
>I'm sure more people than you will make that  mistake.

Yes, this is true.  It was accidental at first, but I intentionally left it in this form even after I realized what was going on.

Performance is roughly equivalent using either ['WSGI ...'] or other similar constructs.

Jean-Paul

From caliban19 at gmail.com  Thu Feb  9 13:57:57 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Thu Feb  9 14:58:04 2006
Subject: [Twisted-web] Web2 Script.py seems to be broken
In-Reply-To: <3F0922FC-CD00-4459-B74D-A5928D7214B0@fuhm.net>
References: <612023ed0602062117r26873c80wbe69a7ec1562dcaf@mail.gmail.com>
	<CC4D538C-9997-4CC0-96A2-087470F3E4F5@fuhm.net>
	<612023ed0602070109t6292baf4g180634883838609d@mail.gmail.com>
	<3D6A0FDD-42E9-4EE2-95A6-A437B2DEFCF7@fuhm.net>
	<612023ed0602080059x70d1f6a5sa1d09432923d908@mail.gmail.com>
	<43EA1DD7.9070505@dreid.org>
	<612023ed0602081340w2938bf39scdfe7b4dc0420a58@mail.gmail.com>
	<612023ed0602090023n1ef36fedu56d4e6185fcd900c@mail.gmail.com>
	<3F0922FC-CD00-4459-B74D-A5928D7214B0@fuhm.net>
Message-ID: <612023ed0602091257k4417edc0icebe6164ee1f3b94@mail.gmail.com>

On 2/9/06, James Y Knight <foom@fuhm.net> wrote:
>
> > from twisted.application import strports, service
> > from twisted.web2 import static, server, http, wsgi, resource
> >
> > import sys
> > sys.path.append("./myproject")
> > from django.core.handlers.wsgi import WSGIHandler
> > import os
> > os.environ['DJANGO_SETTINGS_MODULE'] = 'myproject.settings'
> >
> > class toplevel(wsgi.WSGIResource):
> >
> >
> >     def child_media(self, ctx):
> >         return static.File("./myproject/media")
> >
> >
> > root = toplevel(WSGIHandler())
> > application = service.Application("web")
> > site = server.Site(root)
> > s = strports.service('tcp:8000', http.HTTPFactory(site))
> > s.setServiceParent(application)
>
> That won't work -- what you want is to nest the resources rather than
> subclass them. Something like this resource should do you (untested,
> wrote in email client). It says: if the path starts with media,
> return the static File and pass it the remaining pieces of the path,
> otherwise pass the entire path onto wsgi for its processing.
>
> class toplevel(object):
>    implements(IResource)
>
>    def __init__(self):
>      self.wsgi = wsgi.WSGIResource(WSGIHandler())
>      self.media = static.File("./myproject/media"
>
>    def locateChild(self, req, segs):
>      if segs[0] == 'media':
>        return self.media, segs[1:]
>      return self.wsgi, segs
>
>    def renderHTTP(self, req):
>      return self.wsgi
>
> James
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
The final solution I came up with is..

from twisted.application import strports, service
from twisted.web2 import static, server, http, wsgi, resource

import sys
sys.path.append("./myproject")
from django.core.handlers.wsgi import WSGIHandler
import os
os.environ['DJANGO_SETTINGS_MODULE'] = 'myproject.settings'

wsgi = wsgi.WSGIResource(WSGIHandler())

root = wsgi
application = service.Application("web")
site = server.Site(root)
s = strports.service('tcp:8000', http.HTTPFactory(site))
s.setServiceParent(application)

media = static.File("./myproject/media")
site2 = server.Site(media)
m = strports.service('tcp:8080', http.HTTPFactory(site2))
m.setServiceParent(application)

But what you show is awesome, been looking at how to do something like that.
Thanks for all the help, this issue is officially solved..

ToddB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060209/45725fcd/attachment.htm
From alengarbage at yahoo.com  Fri Feb 10 15:25:38 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri Feb 10 16:25:42 2006
Subject: [Twisted-web] web client & "TimeoutError: User timeout caused
	connection failure"
Message-ID: <20060210222539.58521.qmail@web31502.mail.mud.yahoo.com>

I'm running into a problem under high client (not
server) load.  If I create a client process that makes
only light requests to the server, everything works
perfectly.  If, however, I spawn a bunch of client
requests simultaneously, using HTTPDownloader and
HTTPClientFactory (or getPage and downloadPage, it
doesn't seem to matter), I invariably get a bunch of
"TimeoutError: User timeout caused connection failure"
failures.  These failures have no stack associated
with them, so it isn't clear where they are
originating, but it appears that they are due to
timeouts on waiting for the connection setup, not on
the response.

I know that there is a lot of activity on redoing the
client in web2, but I didn't see any mention of this
particular problem (or potential ways to avoid it) in
the list archives.  Is this a known problem?  Is there
a workaround I can rely on until something better
comes along in web2?

The breakpoint (on my 2.8Ghz Pentium) seems to be
around 40-50 simultaneous client connections.  On my
slower 2.53 Ghz machine, it is closer to 70-80.

thanks,
Lenny

(I can produce a short example that reproduces the
behavior if needed)

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From alengarbage at yahoo.com  Sat Feb 11 22:53:35 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sat Feb 11 23:53:37 2006
Subject: [Twisted-web] Re: web client & "TimeoutError: User timeout caused
	connection failure"
Message-ID: <20060212055335.35844.qmail@web31505.mail.mud.yahoo.com>



--- Lenny G Arbage <alengarbage@yahoo.com> wrote:
>
> (I can produce a short example that reproduces the
> behavior if needed)

'ere it is:

import sys
from twisted.python import failure
from twisted.internet import reactor, defer
from twisted.web.client import getPage

CONCURRENT=800

def itersuccess(res, message):
    print "itersuccess: %s" % message
    return res

def itererror(failure, message):
    print "itererror message: %s" % message
    failure.printTraceback()
    return failure

def testGetPage(url, num=CONCURRENT):
    print "testGetPage started..."
    dlist = []
    for i in range(num):
        deferred = getPage(url)
        deferred.addCallback(itersuccess,
                "succeeded at testGetPage %d" % i)
        deferred.addErrback(itererror,
                "failed at testGetPage %d" % i)
        dlist.append(deferred)
    return defer.DeferredList(dlist,
consumeErrors=True)

def runTests(url):
    d1 = testGetPage(url)
    d1.addBoth(cleanup)
    reactor.run()

def cleanup(res):
    reactor.stop()

if __name__ == '__main__':
    runTests(sys.argv[1])


I can run this against a local version of apache, and
get a bunch of successes until somewhere in the 600s:

itersuccess: succeeded at testGetPage 679
itersuccess: succeeded at testGetPage 657
itersuccess: succeeded at testGetPage 683
itererror message: failed at testGetPage 638
Failure: twisted.internet.error.TimeoutError: User
timeout caused connection failure.
itererror message: failed at testGetPage 639
Failure: twisted.internet.error.TimeoutError: User
timeout caused connection failure.

Your results, of course, will vary depending on
hardware and software.  With other servers I only need
to get in 50-60s before I start getting the
TimeoutError messages.

Is the answer to just catch these messages and keep
retrying (after a short pause)?

Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From alengarbage at yahoo.com  Sun Feb 12 22:18:36 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sun Feb 12 23:18:38 2006
Subject: [Twisted-web] Re: web client & "TimeoutError: User timeout caused
	connection failure"
In-Reply-To: <20060212055335.35844.qmail@web31505.mail.mud.yahoo.com>
Message-ID: <20060213051836.7444.qmail@web31501.mail.mud.yahoo.com>

  This may be known to some of you, but google sure
doesn't want to divulge it upon searching for the
"TimeoutError" message described in the title, so I
thought I'd document what I've found so far.  Failures
begin to occur exactly 30 seconds after all the
initial deferreds were started, which explains why you
need lots of requests if the responses are fairly
quick and less if the responses take a bit of time to
come back.  

  If I add a line to
HTTPClientFactory.clientConnectionFailed():

    print "connect failed: %s" % _.timeout

The connector object confesses that its timeout was
indeed set at 30 seconds.

  In my case, I'd like to be able to set the
connector's timeout a bit higher, but I don't see how
to go about it.  This isn't the 'timeout=' parameter
passed into HTTPClientFactory, which is set to 0.  I
think it comes from HTTPPageGetter or protocol.http
with the TimeoutMixin, but it's all a bit unclear to
me -- am I on the right track?  Any pointers?

  Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From alengarbage at yahoo.com  Mon Feb 13 12:21:32 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon Feb 13 13:21:35 2006
Subject: [Twisted-web] Re: web client & "TimeoutError: User timeout caused
	connection failure"
In-Reply-To: <20060213051836.7444.qmail@web31501.mail.mud.yahoo.com>
Message-ID: <20060213192133.62038.qmail@web31511.mail.mud.yahoo.com>

  Sorry in advance for pestering.  I've figured it
out.  The 30 second timeout is the default value for
reactor.connectTCP().  I just needed to pass in a new
timeout=X value in that call (which means writing a
custom getPage() and downloadPage() or using
HTTPClientFactory directly, but I'm already doing that
for other reasons anyway).

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From gustavo at niemeyer.net  Mon Feb 13 16:28:00 2006
From: gustavo at niemeyer.net (Gustavo Niemeyer)
Date: Mon Feb 13 17:29:53 2006
Subject: [Twisted-web] Fixes and improvements on FastCGI channel
Message-ID: <20060213232800.GC19026@localhost.localdomain>

Hello there,

I'm sending attached a hacked version of the FastCGI channel
for web2. It fixes a few bugs, and enhances it a bit,
like adding support for multiplexing (default is still single
request handling), and adding a startFastCGI function that
enables it to work under "normal" FastCGI setup.

I've left intact the original author's comments, at the top
of the file, even though the ones regarding single request
handling don't make sense anymore. He was so bold in his
comments that I was afraid of touching it. :-)

Please notice that, unfortunately, I'm not planning to maintain
that code. It was just a way for me to get a feeling of the
web2 infrastructure and twisted itself, since I hadn't looked
at it for a while.

I hope you enjoy it anyway. ;-)

-- 
Gustavo Niemeyer
http://niemeyer.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: fastcgi.py
Type: text/x-python
Size: 13050 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20060213/b490c587/fastcgi.py
From pythonflute at yahoo.com  Tue Feb 14 03:47:37 2006
From: pythonflute at yahoo.com (piton miton)
Date: Tue Feb 14 04:47:40 2006
Subject: [Twisted-web] httpserver
Message-ID: <20060214104737.54189.qmail@web36403.mail.mud.yahoo.com>

Hi,

I am new to everything (web programming, python,
twisted..). I wonder how? if I want to add a seperate
httpserver into my twisted server. Is it possible to
integrate a new http server at the present twisted
server or is this a stupid question?

Best wishes!

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From code.name.eric at gmail.com  Tue Feb 14 09:41:24 2006
From: code.name.eric at gmail.com (Matt Helm)
Date: Tue Feb 14 10:41:29 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
Message-ID: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>

Hello all, I have just recently started working with twisted.web
and think is great.

I would like to use Cheetah templates with it - should I be
doing something more complicated than the following?

#################
# alf.rpy
from twisted.web import resource
from Cheetah.Template import Template

f = "foo"
b = ["bar", "baz"]

class Resource(resource.Resource):
  def render(self, request):
    return Template(file="alf.tmpl", searchList = [{'f': f, 'b': b}]).__str__()

resource = Resource()

#################


Thanks,
Matt

From code.name.eric at gmail.com  Tue Feb 14 09:44:29 2006
From: code.name.eric at gmail.com (Matt Helm)
Date: Tue Feb 14 10:44:32 2006
Subject: [Twisted-web] httpserver
In-Reply-To: <20060214104737.54189.qmail@web36403.mail.mud.yahoo.com>
References: <20060214104737.54189.qmail@web36403.mail.mud.yahoo.com>
Message-ID: <e2ede3fa0602140844x6dea433kf39bf4493d986a6d@mail.gmail.com>

[snip]
> Is it possible to
> integrate a new http server at the present twisted
> server or is this a stupid question?

If your intentions are to run more than one http server on
one physical machine, simply run the different servers
on different port numbers.

This way, IIS, Apache, Roxen and multiple Twisted servers
can all coexist on the same box.

Matt

From ldanielburr at mac.com  Tue Feb 14 09:52:32 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Tue Feb 14 10:52:37 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
In-Reply-To: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
Message-ID: <op.s4y2hud33oj628@zetsuei>

On Tue, 14 Feb 2006 10:41:24 -0600, Matt Helm <code.name.eric@gmail.com>  
wrote:

> Hello all, I have just recently started working with twisted.web
> and think is great.
>
> I would like to use Cheetah templates with it - should I be
> doing something more complicated than the following?
>

Probably.  Rendering your template in this way will most certainly block  
the reactor, since Cheetah templates don't support Deferreds.  On the  
other hand, if the template is rendering *very* quickly, then this code  
might not block for long enough to actually matter.

> #################
> # alf.rpy
> from twisted.web import resource
> from Cheetah.Template import Template
>
> f = "foo"
> b = ["bar", "baz"]
>
> class Resource(resource.Resource):
>   def render(self, request):
>     return Template(file="alf.tmpl", searchList = [{'f': f, 'b':  
> b}]).__str__()
>
> resource = Resource()
>
> #################
>
>
> Thanks,
> Matt

I'd suggest you do some timing tests, varying the size of the data passed  
to the template, the complexity of the template, etc.  If it turns out  
that rendering the template synchronously blocks the reactor for too long,  
you can look at breaking the rendering up into stages, using  
reactor.callLater, or a separate rendering thread.

Hope this helps,

L. Daniel Burr

From lists at garbagedump.com  Tue Feb 14 09:59:49 2006
From: lists at garbagedump.com (C Wegrzyn)
Date: Tue Feb 14 11:01:40 2006
Subject: [Twisted-web] Twisted and WSDL
In-Reply-To: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
Message-ID: <43F20C85.7030408@garbagedump.com>

Hello. I am just getting started with Twisted and I must say it is a
very nice package! I am trying to write a SOAP application (server side).

In the C/C++ I would use gSOAP to take a WSDL and generate the support
libraries. What I like about Twisted is that introspection is available
to make this, more or less, automatic. I searched around trying to find
an example of using a WSDL file along with Twisted so that I would only
need to write the supporting functions. I found nothing very useful. I
am wondering if anyone can give me some pointers to using WSDL under
Twisted (I know something of SOAPpy but I am not sure I can use it
directly under Twisted).

Peace, and thanks in advance,
Chuck Wegrzyn


From ldanielburr at mac.com  Tue Feb 14 11:01:19 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Tue Feb 14 12:01:21 2006
Subject: [Twisted-web] Twisted and WSDL
In-Reply-To: <43F20C85.7030408@garbagedump.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<43F20C85.7030408@garbagedump.com>
Message-ID: <op.s4y5oh003oj628@zetsuei>

On Tue, 14 Feb 2006 10:59:49 -0600, C Wegrzyn <lists@garbagedump.com>  
wrote:

> Hello. I am just getting started with Twisted and I must say it is a
> very nice package! I am trying to write a SOAP application (server side).
>

You have my sympathies.  Seriously, unless you really have to write a SOAP  
application, please don't.  SOAP is totally unnecessary for web services,  
despite what corporations and large technology firms claim.

Ok, now that I've made my token attempt to save you from committing to  
crappy technology, on to your actual question.

> In the C/C++ I would use gSOAP to take a WSDL and generate the support
> libraries. What I like about Twisted is that introspection is available
> to make this, more or less, automatic. I searched around trying to find
> an example of using a WSDL file along with Twisted so that I would only
> need to write the supporting functions. I found nothing very useful. I
> am wondering if anyone can give me some pointers to using WSDL under
> Twisted (I know something of SOAPpy but I am not sure I can use it
> directly under Twisted).
>

There is only one WSDL library that I am aware of, and it is available as  
part of the pywebsvcs project.  The same place where you got SOAPpy,  
actually, so you most likely already have it.  You will have to do a fair  
amount of work to integrate all of that auto-generated gobbledygook with  
twisted, up to and including replacing the network communications portion  
of said auto-generated code.

Others here with more positive views on WSDL and friends may give you a  
more optimistic answer, and after all, the problem does just boil down to  
a Simple Matter of Programming.  Then again, you want all this  
auto-generated code in order to avoid programming, right?  Catch-22.

Hope this helps,

L. Daniel Burr

From dekonerding at lbl.gov  Tue Feb 14 11:31:26 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue Feb 14 12:38:02 2006
Subject: [Twisted-web] Twisted and WSDL
In-Reply-To: <43F20C85.7030408@garbagedump.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<43F20C85.7030408@garbagedump.com>
Message-ID: <43F221FE.1090107@lbl.gov>

C Wegrzyn wrote:
> Hello. I am just getting started with Twisted and I must say it is a
> very nice package! I am trying to write a SOAP application (server side).
>
> In the C/C++ I would use gSOAP to take a WSDL and generate the support
> libraries. What I like about Twisted is that introspection is available
> to make this, more or less, automatic. I searched around trying to find
> an example of using a WSDL file along with Twisted so that I would only
> need to write the supporting functions. I found nothing very useful. I
> am wondering if anyone can give me some pointers to using WSDL under
> Twisted (I know something of SOAPpy but I am not sure I can use it
> directly under Twisted).
>   

Chuck,
Take a look at the 'ZSI' project.

http://pywebsvcs.sourceforge.net/

If you check out the serialize-dom-scheme branch, you get a really nice 
WSDL code generator for Python (much, much better than SOAPpy
or normal ZSI).  Then, go get pyGridWare.  It adds a Twisted service 
container that can house ZSI-based web services.

If you want a working example, with documentation:

http://dsd.lbl.gov/gtg/projects/PythonCLServiceTool/

Good luck,
Dave

From upadhyay at gmail.com  Tue Feb 14 11:46:53 2006
From: upadhyay at gmail.com (Amit Upadhyay)
Date: Tue Feb 14 12:46:56 2006
Subject: [Twisted-web] Twisted and WSDL
In-Reply-To: <43F221FE.1090107@lbl.gov>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<43F20C85.7030408@garbagedump.com> <43F221FE.1090107@lbl.gov>
Message-ID: <349edb380602141046ib466a2em540bd27b2fd48391@mail.gmail.com>

On 2/15/06, David E. Konerding <dekonerding@lbl.gov> wrote:
>
> If you check out the serialize-dom-scheme branch, you get a really nice
> WSDL code generator for Python (much, much better than SOAPpy
> or normal ZSI).  Then, go get pyGridWare.  It adds a Twisted service
> container that can house ZSI-based web services.


WSDL code generation completely defies the purpose of having WSDL in the
first place, refer:
http://webservices.xml.com/pub/a/ws/2003/07/22/wsdlfirst.html

<Rant>
Its a shame that no python soap implementation supports WSDL first approach,
while PHP being a weakly typed language does.

More at http://nerdierthanthou.nfshost.com/2005/09/soaped-django.html
</Rant>

--
Amit Upadhyay
Blog: http://www.rootshell.be/~upadhyay
+91-9867-359-701
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060215/2adb0731/attachment.htm
From eprparadocs at gmail.com  Tue Feb 14 11:59:33 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Tue Feb 14 12:59:42 2006
Subject: [Twisted-web] Twisted and WSDL
In-Reply-To: <349edb380602141046ib466a2em540bd27b2fd48391@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>	<43F20C85.7030408@garbagedump.com>
	<43F221FE.1090107@lbl.gov>
	<349edb380602141046ib466a2em540bd27b2fd48391@mail.gmail.com>
Message-ID: <43F22895.60104@gmail.com>

Amit,

 With out starting a lot of flaming and religious wars, I think the
whole idea of using WSDL to dynamically build message handling is
over-blown. Sure, the message interface might change but will my program
be able to handle the changes without involving code changes? Maybe, for
simple things but for those who cares. For complex changes it is a whole
different story.

 I am happy to have something handle all the mundane things even if it
statically built.

Chuck Wegrzyn

Amit Upadhyay wrote:
> On 2/15/06, *David E. Konerding* <dekonerding@lbl.gov
> <mailto:dekonerding@lbl.gov>> wrote:
>
>     If you check out the serialize-dom-scheme branch, you get a really
>     nice
>     WSDL code generator for Python (much, much better than SOAPpy
>     or normal ZSI).  Then, go get pyGridWare.  It adds a Twisted service
>     container that can house ZSI-based web services. 
>
>
> WSDL code generation completely defies the purpose of having WSDL in
> the first place, refer:
> http://webservices.xml.com/pub/a/ws/2003/07/22/wsdlfirst.html
> <http://webservices.xml.com/pub/a/ws/2003/07/22/wsdlfirst.html>
>
> <Rant>
> Its a shame that no python soap implementation supports WSDL first
> approach, while PHP being a weakly typed language does.
>
> More at http://nerdierthanthou.nfshost.com/2005/09/soaped-django.html
> </Rant>
>
> -- 
> Amit Upadhyay
> Blog: http://www.rootshell.be/~upadhyay
> <http://www.rootshell.be/%7Eupadhyay>
> +91-9867-359-701
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>   


From dekonerding at lbl.gov  Tue Feb 14 12:12:28 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue Feb 14 13:12:35 2006
Subject: [Twisted-web] Twisted and WSDL
In-Reply-To: <349edb380602141046ib466a2em540bd27b2fd48391@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>	<43F20C85.7030408@garbagedump.com>
	<43F221FE.1090107@lbl.gov>
	<349edb380602141046ib466a2em540bd27b2fd48391@mail.gmail.com>
Message-ID: <43F22B9C.6090103@lbl.gov>

Amit Upadhyay wrote:
> On 2/15/06, *David E. Konerding* <dekonerding@lbl.gov 
> <mailto:dekonerding@lbl.gov>> wrote:
>
>     If you check out the serialize-dom-scheme branch, you get a really
>     nice
>     WSDL code generator for Python (much, much better than SOAPpy
>     or normal ZSI).  Then, go get pyGridWare.  It adds a Twisted service
>     container that can house ZSI-based web services. 
>
>
> WSDL code generation completely defies the purpose of having WSDL in 
> the first place, refer: 
> http://webservices.xml.com/pub/a/ws/2003/07/22/wsdlfirst.html 
> <http://webservices.xml.com/pub/a/ws/2003/07/22/wsdlfirst.html>

You misunderstood me.  Perhaps if I call it a "python code generator 
from WSDL descriptions",
you would have understood more clearly.

Even though I fall into the camp of "write your wsdl, generate language 
specific bindings, implement service and client
using specific langauges", I am not vehemently opposed to features like 
those in WSRF.NET.  In that toolkit,
users use C#-specific language features to mark up their C#-written 
classes.  Those markups are used
to guide the generation of WSDL.  From what we can tell (as implementers 
of Python-based grid services that
have been tested to interoperate with C# WSRF grid services) there are 
no problems with this approach.   In
fact, the process is so natural we have considered using decorators in 
Python to do the same thing.  This sort of
feature really only exists to provide developers who prefer to work in a 
native language rather than specifying the messages
they want to exchange.

I read the article you cited.  It is only an opinion piece, and provides 
no coherent, logical argument for their
viewpoint.  Further, the article is obviously dated due to its focus on 
RPC encoding, which is not a viable approach
for writing web services these days. 

Dave

From code.name.eric at gmail.com  Wed Feb 15 06:58:27 2006
From: code.name.eric at gmail.com (Matt Helm)
Date: Wed Feb 15 07:58:31 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
In-Reply-To: <op.s4y2hud33oj628@zetsuei>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<op.s4y2hud33oj628@zetsuei>
Message-ID: <e2ede3fa0602150558g3615d20dj44196681aafa3168@mail.gmail.com>

On 2/14/06, L. Daniel Burr <ldanielburr@mac.com> wrote:

> Probably.  Rendering your template in this way will most certainly block
> the reactor, since Cheetah templates don't support Deferreds.  On the
> other hand, if the template is rendering *very* quickly, then this code
> might not block for long enough to actually matter.

That is what I suspected. I will call the Cheetah template in deferToThread.

Matt.

From jonathansamuel at yahoo.com  Wed Feb 15 23:14:06 2006
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Thu Feb 16 00:14:09 2006
Subject: [Twisted-web] Method Not Allowed error when calling .rpy file
Message-ID: <20060216061406.60126.qmail@web32507.mail.mud.yahoo.com>

myFirst.rpy is:

from twisted.web.resource import Resource
class MyResource(Resource):
    isLeaf = True
    allowedMethods = ('GET',)
    def render_GET(self, request):
        return "<html>Hello, world!</html>"
resource = MyResource()

I ran mktap web --path ~/twistedScripts --port 9000 as
root in the /home/admin/TwistedScripts directory. I
then placed myFirst.rpy in the /root/twistedScripts
directory

For some reason I get the following error, which you
can see yourself at
http://www.jonathanmark.com:9000/myFirst.rpy

"Method Not Allowed
Your browser approached me (at /myFirst.rpy) with the
method "GET". I only allow the method GET here."

A search of the web indicates that adding
allowedMethods = ('GET',) was supposed to fix this
problem, only it doesn't.

Any help would be appreciated.

Jonathan Mark
GoodbyeJim.com

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From jonathansamuel at yahoo.com  Thu Feb 16 22:51:19 2006
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Thu Feb 16 23:51:21 2006
Subject: [Twisted-web] Sending Get to Resource Produces Nonsensical Error
	Message
Message-ID: <20060217055119.97758.qmail@web32508.mail.mud.yahoo.com>

My rpy script that instantiates a resource produces
the following error message when I call it within a
form: 

Method Not AllowedYour browser approached me (at
/myFirst.rpy?sa=Search&domains=ahfb2000.com&q=hello)
with the method "GET".  I only allow the method GET
here.

Since the message recognizes that it is being sent a
GET, why does it tell me that it only allows a GET?


Here is the resource:

from twisted.web.resource import Resource
class MyResource(Resource):
    isLeaf = True
    allowedMethods = ('GET',)
    def render_GET(self, request):
        return "<html>Hello, world!</html>"
resource = MyResource()

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From diwaker.lists at gmail.com  Thu Feb 16 22:55:34 2006
From: diwaker.lists at gmail.com (Diwaker Gupta)
Date: Thu Feb 16 23:55:37 2006
Subject: [Twisted-web] XML-RPC: Failure vs. Fault
Message-ID: <891be9410602162155x254394o163f6ce984d58d77@mail.gmail.com>

I'm trying to build up some XML-RPC based services. I was reading
through the documentation [1] where its mentioned that xmlrpc_foo()
functions in the server can return Failure objects to indicate errors.

The XML-RPC spec uses a slightly different terminology of Faults. The
xmlrpclib in Python's standard library also talks about being able to
return Fault objects in case of errors.

I was wondering how this is dealt with in Twisted. Fault objects have
explicit faultCode and faultString parameters. I couldn't determine if
and how these map to attributes of a Failure object.

[1] http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html

TIA,
Diwaker
--
Web/Blog/Gallery: http://floatingsun.net/blog

From simon at hedberg.net  Fri Feb 17 06:16:36 2006
From: simon at hedberg.net (Simon Hedberg)
Date: Fri Feb 17 07:16:42 2006
Subject: [Twisted-web] XML-RPC: Failure vs. Fault
In-Reply-To: <891be9410602162155x254394o163f6ce984d58d77@mail.gmail.com>
Message-ID: <000001c633c4$61d01030$38aa20d4@hp>

Diwaker Gupta wrote:
> I'm trying to build up some XML-RPC based services. I was reading
> through the documentation [1] where its mentioned that xmlrpc_foo()
> functions in the server can return Failure objects to indicate
> errors.   
> 
> The XML-RPC spec uses a slightly different terminology of Faults. The
> xmlrpclib in Python's standard library also talks about being able to
> return Fault objects in case of errors.  
> 
> I was wondering how this is dealt with in Twisted. Fault objects have
> explicit faultCode and faultString parameters. I couldn't determine
> if and how these map to attributes of a Failure object.  
> 
> [1]
> http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html 
> 
> TIA,
> Diwaker

I remember doing a hack regarding this in the past. Now that I take a
closer look at it though, it seems that you only have to raise a
xmlrpclib.Fault(faultCode,faultString) in your errback for it to behave
properly. 

/Simon


From tv at tv.debian.net  Sat Feb 18 12:38:23 2006
From: tv at tv.debian.net (Tommi Virtanen)
Date: Sat Feb 18 13:38:30 2006
Subject: [Twisted-web] Status of forms, potential debianization
Message-ID: <43F777AF.2070202@tv.debian.net>

Hi. I'm starting to use forms for real, and anything I do in production
needs a deb ;)

Is forms stable (=unchanging) enough to give to the masses?

I'm a bit worried that some may complain that forms (well,
pythonX.Y-forms) is a bit too generic as a name, but we'll see..

From caliban19 at gmail.com  Sat Feb 18 13:24:18 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Sat Feb 18 14:24:21 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
In-Reply-To: <e2ede3fa0602150558g3615d20dj44196681aafa3168@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<op.s4y2hud33oj628@zetsuei>
	<e2ede3fa0602150558g3615d20dj44196681aafa3168@mail.gmail.com>
Message-ID: <612023ed0602181224q3940cd11ne3a782845e64d5b1@mail.gmail.com>

On 2/15/06, Matt Helm <code.name.eric@gmail.com> wrote:
>
> On 2/14/06, L. Daniel Burr <ldanielburr@mac.com> wrote:
>
> > Probably.  Rendering your template in this way will most certainly block
> > the reactor, since Cheetah templates don't support Deferreds.  On the
> > other hand, if the template is rendering *very* quickly, then this code
> > might not block for long enough to actually matter.
>
> That is what I suspected. I will call the Cheetah template in
> deferToThread.
>
> Matt.
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
Why not just compile your template at the head of the file using,
Template.compile(file="path"). I did some experimentation with this, and it
is very fast. Only time I could see where deferred would be useful is when
you are compiling it initially, if you precompile your templates and dont
call any blocking functions within it, it will be more than fast enough.

ToddB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060218/a6623b77/attachment.htm
From caliban19 at gmail.com  Sat Feb 18 13:33:57 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Sat Feb 18 14:34:01 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
In-Reply-To: <612023ed0602181224q3940cd11ne3a782845e64d5b1@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<op.s4y2hud33oj628@zetsuei>
	<e2ede3fa0602150558g3615d20dj44196681aafa3168@mail.gmail.com>
	<612023ed0602181224q3940cd11ne3a782845e64d5b1@mail.gmail.com>
Message-ID: <612023ed0602181233t25d2114boea68f9c5390b4c27@mail.gmail.com>

On 2/18/06, Todd Thomas <caliban19@gmail.com> wrote:
>
>
>
> On 2/15/06, Matt Helm <code.name.eric@gmail.com> wrote:
> >
> > On 2/14/06, L. Daniel Burr <ldanielburr@mac.com> wrote:
> >
> > > Probably.  Rendering your template in this way will most certainly
> > block
> > > the reactor, since Cheetah templates don't support Deferreds.  On the
> > > other hand, if the template is rendering *very* quickly, then this
> > code
> > > might not block for long enough to actually matter.
> >
> > That is what I suspected. I will call the Cheetah template in
> > deferToThread.
> >
> > Matt.
> >
> > _______________________________________________
> > Twisted-web mailing list
> > Twisted-web@twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> >
> Why not just compile your template at the head of the file using,
> Template.compile(file="path"). I did some experimentation with this, and
> it is very fast. Only time I could see where deferred would be useful is
> when you are compiling it initially, if you precompile your templates and
> dont call any blocking functions within it, it will be more than fast
> enough.
>
> ToddB
>
One other thing, rpy will automatically cache the instance you create if its
in your resource class. Which means you will only take the hit once when
initially creating class. So it may block briefly depending on size of
template, but afterwards, should be as fast as calling request.write on a
class directly, which is basically what your are doing.

ToddB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060218/7daee412/attachment.htm
From matt at pollenation.net  Sun Feb 19 15:46:24 2006
From: matt at pollenation.net (Matt Goodall)
Date: Sun Feb 19 16:46:20 2006
Subject: [Twisted-web] Status of forms, potential debianization
In-Reply-To: <43F777AF.2070202@tv.debian.net>
References: <43F777AF.2070202@tv.debian.net>
Message-ID: <43F8F540.3070300@pollenation.net>

Tommi Virtanen wrote:
> Hi. I'm starting to use forms for real, and anything I do in production
> needs a deb ;)

Weirdo ;-).

> 
> Is forms stable (=unchanging) enough to give to the masses?

I don't expect its external API to change much but I wouldn't like to
call it stable yet either.

In particular, Forms needs to support custom templates and I really
haven't given that problem enough thought to know if it will break anything.

It's probably stable enough, I guess. Nothing much has changed on the
outside for some time now.

> 
> I'm a bit worried that some may complain that forms (well,
> pythonX.Y-forms) is a bit too generic as a name, but we'll see..

Yeah, I regret not thinking of a better name now. Now would be a good
time to rename it, if it really needs to change.

- Matt

From pythonflute at yahoo.com  Mon Feb 20 04:02:29 2006
From: pythonflute at yahoo.com (piton miton)
Date: Mon Feb 20 05:02:31 2006
Subject: [Twisted-web] httpserver
Message-ID: <20060220110229.62153.qmail@web36403.mail.mud.yahoo.com>

Hi,

>If your intentions are to run more than one http
>server on
>one physical machine, simply run the different
servers
>on different port numbers.

>This way, IIS, Apache, Roxen and multiple Twisted
>servers
>can all coexist on the same box.

>Matt

I want to run httpserver behind Twisted Server. I have
a Twisted server which is successfully working and I
want to add a new part which is running an httpserver
seperately.

The thing is I really dont know how to integrate an
httpserver inside my Twisted Server?

Best!

Burge


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From moin.askthem at gmail.com  Mon Feb 20 04:15:25 2006
From: moin.askthem at gmail.com (Arp)
Date: Mon Feb 20 05:15:33 2006
Subject: [Twisted-web] Twisted and patch-683 ?
Message-ID: <4910b3df0602200315x7dd97ad6p1a86e02ecbbbcc96@mail.gmail.com>

Hi,

I'm trying to get Moin running with Twisted using the standard
packages available from the Debian on my server (python 2.3 / moin
1.3) and I'm running into the exact problem described in: 
http://moinmoin.wikiwikiweb.de/MoinMoinBugs/CrashWithTwisted

Only difference is that I'm not (yet) trying to set up a farm but
using mointwisted to serve a single wiki, but the error is triggered
in the same way.

At the bottom of the page a patch is suggested (patch-683), but
following the link results in an error page from arch.thinkmo.de:
----------------------
  Internal error
  Adding revision
arch@arch.thinkmo.de--2003-archives/moin--main--1.3--patch-683 to
library failed. Bad permissions or corrupt archive?
  Hint: Before reporting this problem, try to see whether debug mode
unveils something.
----------------------

The patch is also listed on: 
http://moinmoin.wikiwikiweb.de/MoinMoinTodo/Release_2.0
but has the same URL (and hence error).

Questions:
- Is the patch available elsewhere by any chance
- Is there an alternate solution to the bug

Thanks for any tips
--
Arp

From moin.askthem at gmail.com  Mon Feb 20 05:53:40 2006
From: moin.askthem at gmail.com (Arp)
Date: Mon Feb 20 06:53:43 2006
Subject: [Twisted-web] Re: Twisted and patch-683 ?
In-Reply-To: <4910b3df0602200315x7dd97ad6p1a86e02ecbbbcc96@mail.gmail.com>
References: <4910b3df0602200315x7dd97ad6p1a86e02ecbbbcc96@mail.gmail.com>
Message-ID: <4910b3df0602200453r5698fc4ekbd7c74b5cde174b6@mail.gmail.com>

Ahw! Duh! _Wrong_Mailinglist_Sorry!!_

Sorry, my question was intended to go to the moinmoin mailinglist not
twisted-web ... Clicked the wrong entry ;o(

On 2/20/06, Arp <moin.askthem@gmail.com> wrote:
> Hi,
>
> I'm trying to get Moin running with Twisted using the standard
> packages available from the Debian on my server (python 2.3 / moin
> 1.3) and I'm running into the exact problem described in:
> http://moinmoin.wikiwikiweb.de/MoinMoinBugs/CrashWithTwisted
>
> Only difference is that I'm not (yet) trying to set up a farm but
> using mointwisted to serve a single wiki, but the error is triggered
> in the same way.
>
> At the bottom of the page a patch is suggested (patch-683), but
> following the link results in an error page from arch.thinkmo.de:
> ----------------------
>   Internal error
>   Adding revision
> arch@arch.thinkmo.de--2003-archives/moin--main--1.3--patch-683 to
> library failed. Bad permissions or corrupt archive?
>   Hint: Before reporting this problem, try to see whether debug mode
> unveils something.
> ----------------------
>
> The patch is also listed on:
> http://moinmoin.wikiwikiweb.de/MoinMoinTodo/Release_2.0
> but has the same URL (and hence error).
>
> Questions:
> - Is the patch available elsewhere by any chance
> - Is there an alternate solution to the bug
>
> Thanks for any tips
> --
> Arp
>


--
Arp

From tv at twistedmatrix.com  Mon Feb 20 08:43:36 2006
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon Feb 20 09:43:48 2006
Subject: [Twisted-web] Status of forms, potential debianization
In-Reply-To: <43F8F540.3070300@pollenation.net>
References: <43F777AF.2070202@tv.debian.net> <43F8F540.3070300@pollenation.net>
Message-ID: <43F9E3A8.8020901@twistedmatrix.com>

Matt Goodall wrote:
> Yeah, I regret not thinking of a better name now. Now would be a good
> time to rename it, if it really needs to change.

Good to you hear you think that's still possible. I'd really like to see
that done before it gets any more widely deployed.

Maybe "formal"?

Or "uniform"?

From nico at tekNico.net  Mon Feb 20 09:38:48 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Mon Feb 20 10:39:31 2006
Subject: [Twisted-web] Re: Status of forms, potential debianization
In-Reply-To: <43F9E3A8.8020901@twistedmatrix.com>
References: <43F777AF.2070202@tv.debian.net> <43F8F540.3070300@pollenation.net>
	<43F9E3A8.8020901@twistedmatrix.com>
Message-ID: <dtcrao$6eu$1@sea.gmane.org>

> Good to you hear you think that's still possible. I'd really like to see
> that done before it gets any more widely deployed.
> 
> Maybe "formal"?
> 
> Or "uniform"?

Or "formule", for "form mule"? :-)

-- 
Nicola Larosa - http://www.tekNico.net/

...I do no real world applications like triple mersenne first person
shooters, only business software like the one which in earlier time
was written in COBOL or carved into cave walls. Less challenge,
higher reward. -- Harald Armin Massa, November 2005


From jonathansamuel at yahoo.com  Mon Feb 20 12:26:00 2006
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Mon Feb 20 13:26:02 2006
Subject: [Twisted-web] Does anyone have a sample .rpy file for Ruby?
Message-ID: <20060220192600.68637.qmail@web32501.mail.mud.yahoo.com>

I am now able to run PHP and Perl as CGI under the
twisted.server. The scripts are of the form:

#############################
from twisted.web import static, twcgi

class PHPScript(twcgi.FilteredScript):
    filter - '/usr/bin/php' #point to your php
standalone executable. It should be compiled to run
without a webserver.

resource =
static.File("/PhysicalDirectorForSourceFiles")
resource.processors = ('.php': PHPScript) 

resources.indexNames = ['FrontPageForPHPWebsite']
################################

What would I need to do in order to get Ruby to run
under twisted.server? I realize this may be a
if-you-need-to-ask-it-is-too-difficult-for-you question.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From dreid at dreid.org  Mon Feb 20 12:34:57 2006
From: dreid at dreid.org (David Reid)
Date: Mon Feb 20 13:35:01 2006
Subject: [Twisted-web] Does anyone have a sample .rpy file for Ruby?
In-Reply-To: <20060220192600.68637.qmail@web32501.mail.mud.yahoo.com>
References: <20060220192600.68637.qmail@web32501.mail.mud.yahoo.com>
Message-ID: <43FA19E1.5050006@dreid.org>

Jonathan Mark wrote:
> I am now able to run PHP and Perl as CGI under the
> twisted.server. The scripts are of the form:
> 
> #############################
> from twisted.web import static, twcgi
> 
> class PHPScript(twcgi.FilteredScript):
>     filter - '/usr/bin/php' #point to your php
> standalone executable. It should be compiled to run
> without a webserver.
> 
> resource =
> static.File("/PhysicalDirectorForSourceFiles")
> resource.processors = ('.php': PHPScript) 
> 
> resources.indexNames = ['FrontPageForPHPWebsite']
> ################################
> 
> What would I need to do in order to get Ruby to run
> under twisted.server? I realize this may be a
> if-you-need-to-ask-it-is-too-difficult-for-you question.
> 

I've never used ruby so I can't say for certain, but this is probably a 
good place to start.

class RubyScript(twcgi.FilteredScript):
	filter = '/usr/bin/ruby'

(Having an irrational dislike of ruby i suspect that will explode in 
horrible horrible horrible ways)

-David

From jonathansamuel at yahoo.com  Mon Feb 20 13:57:16 2006
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Mon Feb 20 14:57:19 2006
Subject: [Twisted-web] It worked! Twisted supports Ruby CGI out of the box.
Message-ID: <20060220205716.84751.qmail@web32514.mail.mud.yahoo.com>

That dreid! It worked. Twisted supports Ruby CGI out
of the box as 'RubyScript' . Which is weird, because I
googled on "Ruby RPY" and various combinations and
nothing came up to indicate that it would work. 

I guess the moral of the story is Don't RTFM because
TFM is incomplete. Just try it and see if it breaks
anything. 

    

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From radeex at gmail.com  Mon Feb 20 14:09:54 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon Feb 20 15:09:58 2006
Subject: [Twisted-web] It worked! Twisted supports Ruby CGI out of the box.
In-Reply-To: <20060220205716.84751.qmail@web32514.mail.mud.yahoo.com>
References: <20060220205716.84751.qmail@web32514.mail.mud.yahoo.com>
Message-ID: <60ed19d40602201309k3e12484eh9230136ab902ae4d@mail.gmail.com>

On 2/20/06, Jonathan Mark <jonathansamuel@yahoo.com> wrote:
> That dreid! It worked. Twisted supports Ruby CGI out
> of the box as 'RubyScript' . Which is weird, because I
> googled on "Ruby RPY" and various combinations and
> nothing came up to indicate that it would work.
>
> I guess the moral of the story is Don't RTFM because
> TFM is incomplete. Just try it and see if it breaks
> anything.

RPY? If you mean RPY as in the thing that ResourceScript handles, that
doesn't have anything at all to do with CGI...

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+

From code.name.eric at gmail.com  Mon Feb 20 16:06:51 2006
From: code.name.eric at gmail.com (Matt Helm)
Date: Mon Feb 20 17:06:54 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
In-Reply-To: <612023ed0602181233t25d2114boea68f9c5390b4c27@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<op.s4y2hud33oj628@zetsuei>
	<e2ede3fa0602150558g3615d20dj44196681aafa3168@mail.gmail.com>
	<612023ed0602181224q3940cd11ne3a782845e64d5b1@mail.gmail.com>
	<612023ed0602181233t25d2114boea68f9c5390b4c27@mail.gmail.com>
Message-ID: <e2ede3fa0602201506r5483dd64ue2e1861fc81ee7fb@mail.gmail.com>

> One other thing, rpy will automatically cache the instance you create if its
> in your resource class. Which means you will only take the hit once when
> initially creating class. So it may block briefly depending on size of
> template, but afterwards, should be as fast as calling request.write on a
> class directly, which is basically what your are doing.
>
> ToddB


Putting it in a defertothread was no problem. The same resource class also
has to pull some data by way of xmlrpc but everything works very clean
and fast.

Matt

From jonathansamuel at yahoo.com  Mon Feb 20 16:46:09 2006
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Mon Feb 20 17:46:11 2006
Subject: [Twisted-web] But doesn't twcgi run cgi?
Message-ID: <20060220234609.49113.qmail@web32502.mail.mud.yahoo.com>

Christopher Armstrong wrote:

"""RPY? If you mean RPY as in the thing that
ResourceScript handles, that
doesn't have anything at all to do with CGI..."""

I am new, and do not question the correctness of this
statement. I don't understand how it could be so,
however. My working .rpy file says 

class RubyScript(twcgi.FilteredScript):

(1) Is the name "twcgi" a misnomer?

(2) A second question. Is there some way to get my
postings to this list to thread? Simply emailing to
twisted-web@twistedmatrix.com would put each email as
its own thread, it seems to me. 



__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From mary-twisted at puzzling.org  Mon Feb 20 16:53:35 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon Feb 20 17:53:20 2006
Subject: [Twisted-web] But doesn't twcgi run cgi?
In-Reply-To: <20060220234609.49113.qmail@web32502.mail.mud.yahoo.com>
References: <20060220234609.49113.qmail@web32502.mail.mud.yahoo.com>
Message-ID: <20060220235335.GP10148@home.puzzling.org>

On Mon, Feb 20, 2006, Jonathan Mark wrote:
> Christopher Armstrong wrote:
> > RPY? If you mean RPY as in the thing that ResourceScript handles,
> > that doesn't have anything at all to do with CGI...
> 
> I am new, and do not question the correctness of this statement. I
> don't understand how it could be so, however. My working .rpy file
> says 
> 
> class RubyScript(twcgi.FilteredScript):
> 
> (1) Is the name "twcgi" a misnomer?

No. A better phrasing might be rpys do not *have* to have anything to do
with CGIs. You can put any kind of Twisted Web resource in them, you
*happen* to have chosen to inherit from one that implements the CGI
behaviour so that you can use CGI scripts.

> (2) A second question. Is there some way to get my postings to this
> list to thread? Simply emailing to twisted-web@twistedmatrix.com would
> put each email as its own thread, it seems to me. 

On most email clients, hit "Reply" when viewing the message you want to
thread under. The reply will be directed to
twisted-web@twistedmatrix.com via the Reply-To header that the mailing
list sets, but your new message will have the In-Reply-To header
required for correct threading. You can change the subject if you wish.
Some few mail clients (Outlook is the major offender) do not seem to do
this.

-Mary

From corydodt at twistedmatrix.com  Tue Feb 21 10:04:33 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue Feb 21 11:02:50 2006
Subject: [Twisted-web] Re: Status of forms, potential debianization
In-Reply-To: <dtcrao$6eu$1@sea.gmane.org>
References: <43F777AF.2070202@tv.debian.net>
	<43F8F540.3070300@pollenation.net>	<43F9E3A8.8020901@twistedmatrix.com>
	<dtcrao$6eu$1@sea.gmane.org>
Message-ID: <43FB4821.20304@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

dict.org to the rescue!

REFORM
CHLOROFORM
FORMIDIBLE

or my current favorite:
  aeriform
       adj 1: resembling air or having the form of air [syn: airlike]
       2: characterized by lightness and insubstantiality; as
          impalpable or intangible as air; "figures light and
          aeriform come unlooked for and melt away"- Thomas Carlyle;
          "aerial fancies"; "an airy apparition"; "physical rather
          than ethereal forms" [syn: aerial, airy, aery, ethereal]

C




Nicola Larosa wrote:
>> Good to you hear you think that's still possible. I'd really like to see
>> that done before it gets any more widely deployed.
>>
>> Maybe "formal"?
>>
>> Or "uniform"?
> 
> Or "formule", for "form mule"? :-)
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD+0gh3A5SrXAiHQcRAtVlAKCUjV8JuR5VcbtCyoLWln3jv6Qs9QCgh2wG
HoyW/KAVr3Lzy6Ohzsd5f0A=
=j86e
-----END PGP SIGNATURE-----

From general at eepatents.com  Tue Feb 21 10:21:49 2006
From: general at eepatents.com (Ed Suominen)
Date: Tue Feb 21 11:21:39 2006
Subject: [Twisted-web] Re: Status of forms, potential debianization
In-Reply-To: <43FB4821.20304@twistedmatrix.com>
References: <43F777AF.2070202@tv.debian.net>	<43F8F540.3070300@pollenation.net>	<43F9E3A8.8020901@twistedmatrix.com>	<dtcrao$6eu$1@sea.gmane.org>
	<43FB4821.20304@twistedmatrix.com>
Message-ID: <43FB4C2D.2080908@eepatents.com>

I think this would be a good opportunity for the Twisted project to show
some maturity and use a name that is actually descriptive rather than
"cute." Anything wrong with something that simply informs potential
users of what the package is all about, like (gasp!) twisted.web.forms?

Best regards,
Ed Suominen

Cory Dodt wrote:
> dict.org to the rescue!
> 
> REFORM
> CHLOROFORM
> FORMIDIBLE
> 
> or my current favorite:
>   aeriform
>        adj 1: resembling air or having the form of air [syn: airlike]
>        2: characterized by lightness and insubstantiality; as
>           impalpable or intangible as air; "figures light and
>           aeriform come unlooked for and melt away"- Thomas Carlyle;
>           "aerial fancies"; "an airy apparition"; "physical rather
>           than ethereal forms" [syn: aerial, airy, aery, ethereal]
> 
> C
> 
> 
> 
> 
> Nicola Larosa wrote:
> 
>>>>Good to you hear you think that's still possible. I'd really like to see
>>>>that done before it gets any more widely deployed.
>>>>
>>>>Maybe "formal"?
>>>>
>>>>Or "uniform"?
>>>
>>>Or "formule", for "form mule"? :-)
>>>
> 
> 


From corydodt at twistedmatrix.com  Tue Feb 21 10:32:11 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue Feb 21 11:30:27 2006
Subject: [Twisted-web] Re: Status of forms, potential debianization
In-Reply-To: <43FB4C2D.2080908@eepatents.com>
References: <43F777AF.2070202@tv.debian.net>	<43F8F540.3070300@pollenation.net>	<43F9E3A8.8020901@twistedmatrix.com>	<dtcrao$6eu$1@sea.gmane.org>	<43FB4821.20304@twistedmatrix.com>
	<43FB4C2D.2080908@eepatents.com>
Message-ID: <43FB4E9B.1010700@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Ed,

a) MG's forms library is not part of Twisted, it is a separate project.  We
cannot name it twisted.web.forms, and any name it does get reflects solely on
MG and his organization, if it reflects on anything at all.

b) Even if it were in Twisted, "silly" memorable names are important to the
popularity and even the usability of a project.  Googling for "forms" will
turn up a hell of a lot of unrelated stuff before it turns up this project,
and talking about "forms" will probably result in a lot of confusion.  Coming
up with a more unique name for it is, in fact, so important that the Twisted
coding standard explicitly provides an exception for the practice in the very
first paragraph:
http://twistedmatrix.com/projects/core/documentation/howto/policy/coding-standard.html#auto0

Coming up with names from a thesaurus and a dictionary is current best
practice, not a sign of immaturity.

C


Ed Suominen wrote:
> I think this would be a good opportunity for the Twisted project to show
> some maturity and use a name that is actually descriptive rather than
> "cute." Anything wrong with something that simply informs potential
> users of what the package is all about, like (gasp!) twisted.web.forms?
> 
> Best regards,
> Ed Suominen
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD+06b3A5SrXAiHQcRAuOpAKCgMgw4iqXbaHoL2v51Eff6rjWUUQCgmNkT
tPPmu2K9qqD7xcIhyoVrCOc=
=vLcG
-----END PGP SIGNATURE-----

From mike at mkp.ca  Tue Feb 21 10:46:52 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Tue Feb 21 11:46:59 2006
Subject: [Twisted-web] Re: Status of forms, potential debianization
In-Reply-To: <43FB4821.20304@twistedmatrix.com>
References: <43F777AF.2070202@tv.debian.net> <dtcrao$6eu$1@sea.gmane.org>
	<43FB4821.20304@twistedmatrix.com>
Message-ID: <200602211246.54266.mike@mkp.ca>

On Tue February 21 2006 12:04, Cory Dodt wrote:
> REFORM
> CHLOROFORM
> FORMIDIBLE
>
> or my current favorite:
> ? aeriform

"formwork",
"morphe",
"boviform" (because cows are funny),
"pythoniform" (hey, it's in /usr/share/dict/words...),
"postform" (Web-two-point-oh-ey, also a bit of double-meaning),
"variform",
"versiform",
"overformed" ( :-) ),
"conform" (and of course, "nonconformist"),
"deformity",
"Sphenisciformes" (the order penguins belong to), 
"correct form",
"form-of-a-bear!"

"inform" and "formulator" are taken.  What are we naming, again?

Mike.

From foom at fuhm.net  Tue Feb 21 10:52:51 2006
From: foom at fuhm.net (James Y Knight)
Date: Tue Feb 21 11:53:20 2006
Subject: [Twisted-web] Re: Status of forms, potential debianization
In-Reply-To: <43FB4C2D.2080908@eepatents.com>
References: <43F777AF.2070202@tv.debian.net>	<43F8F540.3070300@pollenation.net>	<43F9E3A8.8020901@twistedmatrix.com>	<dtcrao$6eu$1@sea.gmane.org>
	<43FB4821.20304@twistedmatrix.com> <43FB4C2D.2080908@eepatents.com>
Message-ID: <2C8A3A39-6544-48AF-ABE6-EE0DF833E233@fuhm.net>

On Feb 21, 2006, at 12:21 PM, Ed Suominen wrote:
> I think this would be a good opportunity for the Twisted project to  
> show
> some maturity and use a name that is actually descriptive rather than
> "cute." Anything wrong with something that simply informs potential
> users of what the package is all about, like (gasp!)  
> twisted.web.forms?

The name twisted.web.forms would be completely inappropriate unless  
the forms package becomes a twisted project rather than a third party  
project by mg.

Any other suggestions?

James

From nico at tekNico.net  Tue Feb 21 11:02:58 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Tue Feb 21 12:04:29 2006
Subject: [Twisted-web] Re: Status of forms, potential debianization
In-Reply-To: <43FB4821.20304@twistedmatrix.com>
References: <43F777AF.2070202@tv.debian.net>	<43F8F540.3070300@pollenation.net>	<43F9E3A8.8020901@twistedmatrix.com>	<dtcrao$6eu$1@sea.gmane.org>
	<43FB4821.20304@twistedmatrix.com>
Message-ID: <dtfkkm$n9a$1@sea.gmane.org>

>>>> Maybe "formal"?
>>>>
>>>> Or "uniform"?
>>>
>>> Or "formule", for "form mule"? :-)

> dict.org to the rescue!

Wow, "dict -S", been using dict for a while, but I had no idea... there's
Soundex and even Levenshtein in there?!?

$ dict -m -s substring form

So, what about "Formyl"? Or "Conformist"?

-- 
Nicola Larosa - http://www.tekNico.net/

Yeah! Another web framework for Python! Now we can proudly say:
Python: the only language with more web frameworks than keywords.
 -- Harald A. Massa, December 2005


From trohed at gmail.com  Tue Feb 21 15:54:02 2006
From: trohed at gmail.com (Derek Horton)
Date: Tue Feb 21 16:54:07 2006
Subject: [Twisted-web] SOAP over SSL connection
Message-ID: <f9d5aa270602211454t6d94a452gdf7da00b34a4c34d@mail.gmail.com>

Hello,
I'm new to python, soap, and twisted.  Forgive my ignorance please.  I was
wondering if its currently possible to use SOAP over an SSL connection.  Is
there some documentation that explains how to set this up?  I'd be glad to
RTFM if you could point me to the doc.  Any help is appreciated!
Thanks,
trohed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060221/638009b5/attachment.htm
From JRBoverhof at lbl.gov  Tue Feb 21 20:38:25 2006
From: JRBoverhof at lbl.gov (Joshua Boverhof)
Date: Tue Feb 21 21:38:34 2006
Subject: [Twisted-web] SOAP over SSL connection
In-Reply-To: <f9d5aa270602211454t6d94a452gdf7da00b34a4c34d@mail.gmail.com>
References: <f9d5aa270602211454t6d94a452gdf7da00b34a4c34d@mail.gmail.com>
Message-ID: <B69550B6-161E-403D-973C-961DAE9CF87B@lbl.gov>

Take a look at ZSI or SOAPpy

http://pywebsvcs.sourceforge.net/

-josh


On Feb 21, 2006, at 2:54 PM, Derek Horton wrote:

> Hello,
> I'm new to python, soap, and twisted.  Forgive my ignorance  
> please.  I was wondering if its currently possible to use SOAP over  
> an SSL connection.  Is there some documentation that explains how  
> to set this up?  I'd be glad to RTFM if you could point me to the  
> doc.  Any help is appreciated!
> Thanks,
> trohed
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2526 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20060221/c5e1f72b/smime.bin
From pythonflute at yahoo.com  Wed Feb 22 05:28:11 2006
From: pythonflute at yahoo.com (piton miton)
Date: Wed Feb 22 06:28:13 2006
Subject: [Twisted-web] help needed for httpserver
Message-ID: <20060222122811.79254.qmail@web36404.mail.mud.yahoo.com>

Hi,

Could some of you lease help me about creating an
httpserver behind twisted server? Where can I find any
documentation about this? I dont have much experience
so I really need a guide!

Thanks in advance,

Burge

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From trohed at gmail.com  Wed Feb 22 07:41:32 2006
From: trohed at gmail.com (trohed)
Date: Wed Feb 22 08:41:40 2006
Subject: [Pywebsvcs-talk] Re: [Twisted-web] SOAP over SSL connection
In-Reply-To: <B69550B6-161E-403D-973C-961DAE9CF87B@lbl.gov>
References: <f9d5aa270602211454t6d94a452gdf7da00b34a4c34d@mail.gmail.com>
	<B69550B6-161E-403D-973C-961DAE9CF87B@lbl.gov>
Message-ID: <f9d5aa270602220641k5ea5ee9ah37bb959d5acd8051@mail.gmail.com>

Does ZSI or SOAPpy use Twisted or are they integrated in any way?  The event
driven/asynchronous approach seems like it would fit very well into what I'm
needing to do.

On 2/21/06, Joshua Boverhof <JRBoverhof@lbl.gov> wrote:
>
> Take a look at ZSI or SOAPpy
>
> http://pywebsvcs.sourceforge.net/
>
> -josh
>
>
> On Feb 21, 2006, at 2:54 PM, Derek Horton wrote:
>
> > Hello,
> > I'm new to python, soap, and twisted.  Forgive my ignorance
> > please.  I was wondering if its currently possible to use SOAP over
> > an SSL connection.  Is there some documentation that explains how
> > to set this up?  I'd be glad to RTFM if you could point me to the
> > doc.  Any help is appreciated!
> > Thanks,
> > trohed
> > _______________________________________________
> > Twisted-web mailing list
> > Twisted-web@twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060222/e74c8361/attachment.htm
From code.name.eric at gmail.com  Wed Feb 22 16:00:19 2006
From: code.name.eric at gmail.com (Matt Helm)
Date: Wed Feb 22 17:00:23 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
In-Reply-To: <e2ede3fa0602221152u32753d52q71b33b4b0b3457e3@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<op.s4y2hud33oj628@zetsuei>
	<e2ede3fa0602150558g3615d20dj44196681aafa3168@mail.gmail.com>
	<612023ed0602181224q3940cd11ne3a782845e64d5b1@mail.gmail.com>
	<612023ed0602181233t25d2114boea68f9c5390b4c27@mail.gmail.com>
	<e2ede3fa0602201506r5483dd64ue2e1861fc81ee7fb@mail.gmail.com>
	<ead817660602210024q66afe7f5s3c04759cfbfc086f@mail.gmail.com>
	<e2ede3fa0602221152u32753d52q71b33b4b0b3457e3@mail.gmail.com>
Message-ID: <e2ede3fa0602221500u16efb786n35255cd92331e756@mail.gmail.com>

On 2/21/06, Graeme Glass wrote:
> Would you mind posting some sample code, for refrence?
> Many thanks.

class Resource(resource.Resource):

   def render(self, request):

       def cheeto(r):
           request.write(r.__str__())
           request.finish()

       def cherr(r):
           request.write("Bang!")
           request.write(str(r))
           request.finish()

       d_cheeto = threads.deferToThread(Template, file="alf.tmpl", searchList =
 slist)
       d_cheeto.addCallback(cheeto)
       d_cheeto.addErrback(cherr)

       return server.NOT_DONE_YET

resource = Resource()

From caliban19 at gmail.com  Wed Feb 22 21:59:33 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Wed Feb 22 22:59:37 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
In-Reply-To: <e2ede3fa0602221500u16efb786n35255cd92331e756@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<op.s4y2hud33oj628@zetsuei>
	<e2ede3fa0602150558g3615d20dj44196681aafa3168@mail.gmail.com>
	<612023ed0602181224q3940cd11ne3a782845e64d5b1@mail.gmail.com>
	<612023ed0602181233t25d2114boea68f9c5390b4c27@mail.gmail.com>
	<e2ede3fa0602201506r5483dd64ue2e1861fc81ee7fb@mail.gmail.com>
	<ead817660602210024q66afe7f5s3c04759cfbfc086f@mail.gmail.com>
	<e2ede3fa0602221152u32753d52q71b33b4b0b3457e3@mail.gmail.com>
	<e2ede3fa0602221500u16efb786n35255cd92331e756@mail.gmail.com>
Message-ID: <612023ed0602222059l758515b3v369b61cd931e41c5@mail.gmail.com>

On 2/22/06, Matt Helm <code.name.eric@gmail.com> wrote:
>
> On 2/21/06, Graeme Glass wrote:
> > Would you mind posting some sample code, for refrence?
> > Many thanks.
>
> class Resource(resource.Resource):
>
>    def render(self, request):
>
>        def cheeto(r):
>            request.write(r.__str__())
>            request.finish()
>
>        def cherr(r):
>            request.write("Bang!")
>            request.write(str(r))
>            request.finish()
>
>        d_cheeto = threads.deferToThread(Template, file="alf.tmpl",
> searchList =
> slist)
>        d_cheeto.addCallback(cheeto)
>        d_cheeto.addErrback(cherr)
>
>        return server.NOT_DONE_YET
>
> resource = Resource()
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
webexp.py
--------------------------------------------
from twisted.application import internet, service
from twisted.web import static, server, script
import CheetahMapper

root = static.File("./")
root.indexNames=['index.cht']
root.ignoreExt(".cht")
root.processors = {'.cht': CheetahMapper.CheetahResource}
application = service.Application('web')
sc = service.IServiceCollection(application)
site = server.Site(root)
i = internet.TCPServer(8888, site)
i.setServiceParent(sc)

CheetahMapper.py
------------------------------------------------
from twisted.web import resource, server
from Cheetah.Template import Template


class CheetahResource(resource.Resource):
    isLeaf = 1

    def __init__(self, filename, registry):
        self.filename = filename
        self.registry = registry

    def render(self, request):
        tmplt = Template.compile(file=self.filename)
        inst=tmplt()
        request.write(str(inst))
        request.finish()
        return server.NOT_DONE_YET

time.cht
------------------------------------------------------
#import time
<html>
<head>
<title>Time Example</title>
</head>
<body>
It is $time.strftime("%I:%M %p").
<br>
Date is $time.strftime("%A, %B %D, %Y").
</body>
</html>
-----------------------------------------------------------------------
Not the best code in the world, but it has been useful for me for just
throwing together quick pages and experimenting.

ToddB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060222/e7d1fd7c/attachment.htm
From caliban19 at gmail.com  Wed Feb 22 22:23:03 2006
From: caliban19 at gmail.com (Todd Thomas)
Date: Wed Feb 22 23:23:07 2006
Subject: [Twisted-web] Using Cheetah with twisted.web
In-Reply-To: <612023ed0602222059l758515b3v369b61cd931e41c5@mail.gmail.com>
References: <e2ede3fa0602140841r6d97d2e7g758ab9fdef04c22@mail.gmail.com>
	<op.s4y2hud33oj628@zetsuei>
	<e2ede3fa0602150558g3615d20dj44196681aafa3168@mail.gmail.com>
	<612023ed0602181224q3940cd11ne3a782845e64d5b1@mail.gmail.com>
	<612023ed0602181233t25d2114boea68f9c5390b4c27@mail.gmail.com>
	<e2ede3fa0602201506r5483dd64ue2e1861fc81ee7fb@mail.gmail.com>
	<ead817660602210024q66afe7f5s3c04759cfbfc086f@mail.gmail.com>
	<e2ede3fa0602221152u32753d52q71b33b4b0b3457e3@mail.gmail.com>
	<e2ede3fa0602221500u16efb786n35255cd92331e756@mail.gmail.com>
	<612023ed0602222059l758515b3v369b61cd931e41c5@mail.gmail.com>
Message-ID: <612023ed0602222123u50e7a3a1t441102f2ff3db4b2@mail.gmail.com>

On 2/22/06, Todd Thomas <caliban19@gmail.com> wrote:
>
>
>
> On 2/22/06, Matt Helm < code.name.eric@gmail.com> wrote:
> >
> > On 2/21/06, Graeme Glass wrote:
> > > Would you mind posting some sample code, for refrence?
> > > Many thanks.
> >
> > class Resource(resource.Resource):
> >
> >    def render(self, request):
> >
> >        def cheeto(r):
> >            request.write(r.__str__())
> >            request.finish()
> >
> >        def cherr(r):
> >            request.write("Bang!")
> >            request.write(str(r))
> >            request.finish()
> >
> >        d_cheeto = threads.deferToThread(Template, file="alf.tmpl",
> > searchList =
> > slist)
> >        d_cheeto.addCallback(cheeto)
> >        d_cheeto.addErrback(cherr)
> >
> >        return server.NOT_DONE_YET
> >
> > resource = Resource()
> >
> > _______________________________________________
> > Twisted-web mailing list
> > Twisted-web@twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> >
> webexp.py
> --------------------------------------------
> from twisted.application import internet, service
> from twisted.web import static, server, script
> import CheetahMapper
>
> root = static.File("./")
> root.indexNames=['index.cht']
> root.ignoreExt(".cht")
> root.processors = {'.cht': CheetahMapper.CheetahResource}
> application = service.Application('web')
> sc = service.IServiceCollection(application)
> site = server.Site(root)
> i = internet.TCPServer(8888, site)
> i.setServiceParent(sc)
>
> CheetahMapper.py
> ------------------------------------------------
> from twisted.web import resource, server
> from Cheetah.Template import Template
>
>
> class CheetahResource(resource.Resource):
>     isLeaf = 1
>
>     def __init__(self, filename, registry):
>         self.filename = filename
>         self.registry = registry
>
>     def render(self, request):
>         tmplt = Template.compile(file=self.filename)
>         inst=tmplt()
>         request.write(str(inst))
>         request.finish()
>         return server.NOT_DONE_YET
>
> time.cht
> ------------------------------------------------------
> #import time
> <html>
> <head>
> <title>Time Example</title>
> </head>
> <body>
> It is $time.strftime("%I:%M %p").
> <br>
> Date is $time.strftime("%A, %B %D, %Y").
> </body>
> </html>
> -----------------------------------------------------------------------
> Not the best code in the world, but it has been useful for me for just
> throwing together quick pages and experimenting.
>
> ToddB
>
There is a catch22 with cheetah and twisted that just annoys me. Cheetah has
an excellent caching mechanism built in, which would be awesome to use for
deferreds which access databases. If you basically use Cheetah via namespace
there is no way to use this caching. You could wrap cheetah class in a
deferred, then call deferred from within the template but this seems like
overkill, wish there was a way to see if result is cached then call deferred
if needed, so far I haven't found an obvious way for this to work.

ToddB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060222/cfd2ff48/attachment.htm
From gustavo at grahal.net  Thu Feb 23 15:33:38 2006
From: gustavo at grahal.net (Gustavo Rahal)
Date: Thu Feb 23 16:33:43 2006
Subject: [Twisted-web] remote admin app, ssh connection costs
Message-ID: <8a6b32ea0602231433n72f2c712r686b9ebb653296e@mail.gmail.com>

Hi All


I did a small xmlrpc webservice that basicly expose some methods to interact
(run commands, for example) with a lists of UNIX servers.
At startup, the webservice connects via ssh to all the UNIX servers
(currently 16) and leave the connections open waiting for requests from
clients.
The app was designed mostly as a way of learninig how to use twisted ssh
modules, deferreds etc...

Some questions (I'll try to be brief):

1) At startup, the ssh connections to the UNIX servers goes as far as the
client connection step (connection.SSHConnection) and are kept open.
So, each time a client requests (via xmlrpc) a shell command to run, the
webservice opens a channel to this server (channel.SSHChannel) runs the
command, gets the output and closes the channel.

Would it be better to leave a channel open so there is no overhead of
openning a channel each time there is a command to run? What are the pros
and cons?

2) Supposing that the number of servers grow, how many simultaneous ssh
connections is a reasonable amount?

Let's say a Pentium III 500MHz with 1 GB RAM and a 4 Mbits link. What is a
reasonable amont? 0-50, 50-100, 100-150?

I know it depends on the internet link and server specs but is there a math
that calculate a reasonable amount of tcp/ssh connections?

I guess that's it for now...


Thanks
Gustavo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20060223/48899e31/attachment.htm
From egaumer at pagecache.org  Fri Feb 24 11:11:21 2006
From: egaumer at pagecache.org (Eric Gaumer)
Date: Fri Feb 24 12:11:38 2006
Subject: [Twisted-web] Some help with Nevow and databse I/O
Message-ID: <200602241011.31364.egaumer@pagecache.org>

Hello everyone,

Twisted is relatively new to me but I've become fascinated by the idea of 
asynchronous network programming and I generally enjoy the feel of the 
twisted framework.

I'm developing a web application with a limited set of pages that will 
eventually serve as a bandwidth statistics application (uses SNMP to poll 
switch counters).

I'm using newvow to render some simple XML pages which basically take the form 
of:

    def data_listCusotmers(self, context, data):
        args = inevow.IRequest(context).args
        db = shelve.open('authdb')
        return db

    docFactory = loaders.xmlfile('templates/ListCustomers.html')

I have two questions that are somewhat interrelated. In my test cases I have 
authentication (using nevow session guard) setup using a SHA stored via the 
shelve module. 

The true customer info is stored in a MySQL database. I can pull that data 
doing the following:

    def data_query(self, context, data):
        return self.dbpool.runQuery('SELECT name, email, id, TransferType, 			
		basic_charge, over_charge, permitted_transfer FROM Customers')

I've read Abe's book on twisted and on page 54 he states "Nevow is designed 
from the ground up for Twisted, which means you can use Deferreds everywhere"

My question is do I have to use the adbapi module or can I use deferreds to 
handle database queries?

I've read the docs on deferreds but I'd be lying if I said I can fully wrap my 
brain around all aspects of the concept or how it's implemented.

I don't understand why I would need separate threads in the first place. I 
know that the query would block but isn't that transaction being done via 
sockets anyway? Why can't I use the same mechanism (deferred) I would use, to 
say, defer work waiting on a response from a mail server? Can't I submit a 
query, have the reactor go do something else, and have a callback run when 
the data becomes available? Why do I need to spawn threads to avoid blocking?

It should be pretty obvious that I don't fully grasp the concept of 
asynchronous socket programming. Can somebody provide insight that may help 
me to better understand things.

I can live with using the adbapi but wonder if it's possible to simply defer 
that work and use a callback mechanism (I'm using the original twisted.web 
not twisted.web2).

I've also read Glyf's post where he states "The documentation is really poor, 
and never says this, but using Twisted, or rather ADBAPI, to convert every 
single SQL statement into a separate transaction and handle its results 
separately, has a whole slew of problems".

http://glyf.livejournal.com/2005/09/24/

I was pretty much heading down this road but I don't really understand how 
else to do it. I've browsed many examples and have never really come across 
one that involves session.guard, newvow, and db access all in the same 
application. Anyone have any experience they could share?

Thanks, 

-- 
Eric Gaumer
Debian GNU/Linux PPC
egaumer@pagecache.org
http://egaumer.pagecache.org
PGP/GPG Key 0xF15D41E9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20060224/273e48e7/attachment.pgp
From dialtone at divmod.com  Fri Feb 24 13:29:23 2006
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Fri Feb 24 14:29:24 2006
Subject: [Twisted-web] Some help with Nevow and databse I/O
In-Reply-To: <200602241011.31364.egaumer@pagecache.org>
Message-ID: <20060224202923.6122.64740389.divmod.quotient.6877@ohm>

On Fri, 24 Feb 2006 10:11:21 -0800, Eric Gaumer <egaumer@pagecache.org> wrote:
>Hello everyone,

Hi

>I have two questions that are somewhat interrelated. In my test cases I have
>authentication (using nevow session guard) setup using a SHA stored via the
>shelve module.

This is technically wrong.

Let me explain why:
Yes, you are using nevow session guard to have authentication but no, it is not guard that is setup to use a SHA stored via the shelve module. The thing that is setup in that way is twisted.cred.

In fact guard is only glue that is used to get credentials from a request and pass them to twisted.cred.

Why do I tell you this? Because it means that you don't have to change your application in order to change the source of authentication data.

And yet people say that cred/guard is crappy... Oh man. :)

>The true customer info is stored in a MySQL database. I can pull that data
>doing the following:
>
>    def data_query(self, context, data):
>        return self.dbpool.runQuery('SELECT name, email, id, TransferType,
>		basic_charge, over_charge, permitted_transfer FROM Customers')
>
>I've read Abe's book on twisted and on page 54 he states "Nevow is designed
>from the ground up for Twisted, which means you can use Deferreds everywhere"

>My question is do I have to use the adbapi module or can I use deferreds to
>handle database queries?

adbapi module returns deferreds for each of the 3 methods:

DBPool.runQuery
DBPool.runOperation
DBPool.runInteraction

>I've read the docs on deferreds but I'd be lying if I said I can fully wrap my
>brain around all aspects of the concept or how it's implemented.

class Deferred(list):
    def addCallback(self, fun, *args, **kwargs):
        self.append((fun, args, kwargs))

    def callback(self, initial_value):
        for fun, args, kwargs in self:
            initial_value = fun(initial_value, *args, **kwargs)
        return initial_value

Easy isn't it?

>I don't understand why I would need separate threads in the first place. I
>know that the query would block but isn't that transaction being done via
>sockets anyway? Why can't I use the same mechanism (deferred) I would use, to
>say, defer work waiting on a response from a mail server? Can't I submit a
>query, have the reactor go do something else, and have a callback run when
>the data becomes available? Why do I need to spawn threads to avoid blocking?

deferreds don't make blocking code non-blocking, they are just a different mechanism to register callbacks. Instead of doing:

button.handle_event('clicked', list_of_callbacks)

you do

button.clicked().addCallback(callback1).addCallback(callback2)

You need to spawn a thread because there is hardly any database adapter that is written to be async, and those that are written to be async are either buggy or not complete or not really usable, plus having deferreds after every query in python (which doesn't support deferreds natively) makes coding a lot harder (you can deal with some deferreds here and there, but not with 10 deferreds each function).

If you want to do N operations at the same time just use runInteraction instead of runQuery (but this doesn't seem to be the case).

>I can live with using the adbapi but wonder if it's possible to simply defer
>that work and use a callback mechanism (I'm using the original twisted.web
>not twisted.web2).

As I said above, authentication has almost nothing to do with guard and a lot to do with twisted.cred. Cred chapter in Abe's book is one of the best ones in the book thus I suggest you to read it.

>I was pretty much heading down this road but I don't really understand how
>else to do it. I've browsed many examples and have never really come across
>one that involves session.guard, newvow, and db access all in the same
>application. Anyone have any experience they could share?

I can give you an example of how to deal with authentication using a real database:
http://svn.berlios.de/viewcvs/weever/trunk/src/users/auth.py?view=markup
This code uses the 'old' twisted interfaces and is a bit rusty, nevertheless it shows the basic concepts and how to authenticate against a database.

I'm working on a pet project these days which is still very early in development ( http://vise.teknico.net/ ) but I'll have some code cleaned up and ready to be showed in not so long and of course it does authentication against a database using SQLAlchemy as an abstraction layer (it is integrated with twisted in an interesting way).

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.4
Blog: http://vvolonghi.blogspot.com
New Pet: http://www.stiq.it

From egaumer at pagecache.org  Fri Feb 24 14:49:01 2006
From: egaumer at pagecache.org (Eric Gaumer)
Date: Fri Feb 24 15:49:14 2006
Subject: [Twisted-web] Some help with Nevow and databse I/O
In-Reply-To: <20060224202923.6122.64740389.divmod.quotient.6877@ohm>
References: <20060224202923.6122.64740389.divmod.quotient.6877@ohm>
Message-ID: <200602241349.09436.egaumer@pagecache.org>

On Friday 24 February 2006 12:29 pm, Valentino Volonghi aka Dialtone wrote:

> >I have two questions that are somewhat interrelated. In my test cases I
> > have authentication (using nevow session guard) setup using a SHA stored
> > via the shelve module.
>
> This is technically wrong.

Sorry. I should have clarified a bit. I am authenticating with twisted.cred 
using a class/method like this:

class AuthMech(object):
    implements(checkers.ICredentialsChecker)
    credentialInterfaces = (credentials.IUsernamePassword,)

    def _checkPasswd(self, cipher, password):
        cipher = base64.decodestring(str(cipher))
        salt, hash = cipher[:4], cipher[4:]
        hash2 = sha.new(salt + password).digest()
        return hash2 == hash

p.registerChecker(pages.AuthMech())
r = guard.SessionWrapper(p)

> Let me explain why:
> Yes, you are using nevow session guard to have authentication but no, it is
> not guard that is setup to use a SHA stored via the shelve module. The
> thing that is setup in that way is twisted.cred.
>
> In fact guard is only glue that is used to get credentials from a request
> and pass them to twisted.cred.
>
> Why do I tell you this? Because it means that you don't have to change your
> application in order to change the source of authentication data.
>
> And yet people say that cred/guard is crappy... Oh man. :)

Not crappy at all, in fact it's been very easy to get running and seems to 
work perfectly. I haven't really encountered any problems and my questions 
are more about doing things the "right" way rather than just getting it 
working.

>
> >The true customer info is stored in a MySQL database. I can pull that data
> >doing the following:
> >
> >    def data_query(self, context, data):
> >        return self.dbpool.runQuery('SELECT name, email, id, TransferType,
> >		basic_charge, over_charge, permitted_transfer FROM Customers')
> >
> >I've read Abe's book on twisted and on page 54 he states "Nevow is
> > designed from the ground up for Twisted, which means you can use
> > Deferreds everywhere"
> >
> >My question is do I have to use the adbapi module or can I use deferreds
> > to handle database queries?
>
> adbapi module returns deferreds for each of the 3 methods:
>
> DBPool.runQuery
> DBPool.runOperation
> DBPool.runInteraction

So I have to use the adbapi (threads) regardless? Okay I can handle that but 
my question now is what's the most efficient way to go about it?

Referring to Glyph's blog post, he claims most twisted developers are misusing 
the adbapi interface.

My concern is this, my code thus far looks pretty good. I've reviewed many 
examples of bits and pieces and generally have a decent feel for what I'm 
doing. Now that my application "framework" is basically setup (XHTML, 
templates, authentication, server, etc...) I'm to the point where I need to 
interface with an existing SQL database to retrieve data to fill in some 
templates.

This sort of method works fine:

    def data_query(self, context, data):
        return self.dbpool.runQuery('SELECT name, email, id, TransferType,
		basic_charge, over_charge, permitted_transfer FROM Customers')

But I'm wondering if this the best way to use the adbapi interface.

I guess I have questions concerning when should I connect. As it stands I 
connect in the class constructor like this:

class ListCustomers(rend.Page):
    def __init__(self, user):
        self.dbpool = adbapi.ConnectionPool(...

My gut says this is wrong because now each page class contains a connection 
object. That really seems to be more of a general Python design issue and I 
could probably come up with a better solution.

But what about queries themselves? Is it bad design to run a query from each 
data_* method for all data methods in all page objects? I have three methods 
to work with:

DBPool.runQuery
DBPool.runOperation
DBPool.runInteraction

You mentioned runInteraction above. Would it be more wise to provide a general 
data_* method that did several queries and stored (cached) that data in the 
Page object itself for later retieval?

Each page has to do some database I/O but it would be helpful to not have to 
do it everytime a page is refreshed or as the user goes back and forth 
through pages since the data is unlikely to change that quickly.

I'm looking for some insight as to how handle this type of scenario from a 
Twisted/Nevow perspective. It's obvious that database I/O is going to slow 
things down a bit but there must be a "best case" situation that avoids 
unnecessary queries.

> >I've read the docs on deferreds but I'd be lying if I said I can fully
> > wrap my brain around all aspects of the concept or how it's implemented.
>
> class Deferred(list):
>     def addCallback(self, fun, *args, **kwargs):
>         self.append((fun, args, kwargs))
>
>     def callback(self, initial_value):
>         for fun, args, kwargs in self:
>             initial_value = fun(initial_value, *args, **kwargs)
>         return initial_value
>
> Easy isn't it?

Yes, it's the "deferreds don't make blocking code non-blocking" part that can 
get a bit confusing. I've never really had to think about blocking vs. 
non-blocking calls and truthfully I like it. It forces you to be a little 
more conscious about what you're doing. I'm really stoked about not using 
threads because they are such a nightmare to debug.

> deferreds don't make blocking code non-blocking, they are just a different
> mechanism to register callbacks. Instead of doing:
>
> button.handle_event('clicked', list_of_callbacks)
>
> you do
>
> button.clicked().addCallback(callback1).addCallback(callback2)

This chaining is very cool. So what actually makes the code non-blocking? The 
use of select() sys calls? I guess that's where my hangup is. How can we take 
a connection to a mail server and defer that result but yet we can't do the 
same for a database connection? At the OS level, aren't they both sockets 
that can be watched via select()?

My head hurts :-)

>
> You need to spawn a thread because there is hardly any database adapter
> that is written to be async, and those that are written to be async are
> either buggy or not complete or not really usable, plus having deferreds
> after every query in python (which doesn't support deferreds natively)
> makes coding a lot harder (you can deal with some deferreds here and there,
> but not with 10 deferreds each function).

When you say adapter your are referring to (in this case) MySQLdb or it's 
underlying _mysql module or yet even lower down to the C api?

If I wanted to implement a limited set of queries, could I write some 
non-blocking way of doing that and wrap those functions in Deferred objects. 
A silly question I guess because it's obviously possible. I guess I should 
ask if it's feasible. Maybe just attempting this as an exercise would give me 
greater understanding of how Twisted provides non-blocking calls.

> If you want to do N operations at the same time just use runInteraction
> instead of runQuery (but this doesn't seem to be the case).

No it isn't the case but it is wise for me to do runQuery() calls in each 
data_ method of each page or should I be looking for some way to unify 
queries and cache that data?

Thanks,

-- 
Eric Gaumer
Debian GNU/Linux PPC
egaumer@pagecache.org
http://egaumer.pagecache.org
PGP/GPG Key 0xF15D41E9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20060224/d63812a6/attachment.pgp
From dialtone at divmod.com  Fri Feb 24 15:38:10 2006
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Fri Feb 24 16:38:13 2006
Subject: [Twisted-web] Some help with Nevow and databse I/O
In-Reply-To: <200602241349.09436.egaumer@pagecache.org>
Message-ID: <20060224223810.6122.1261420698.divmod.quotient.6968@ohm>

On Fri, 24 Feb 2006 13:49:01 -0800, Eric Gaumer <egaumer@pagecache.org> wrote:
>So I have to use the adbapi (threads) regardless? Okay I can handle that but
>my question now is what's the most efficient way to go about it?

Have one connection pool for the whole application and run all queries through it. What I suggest is always using runInteraction because it allows you to write different objects whose methods can be passed to runInteraction to get the expected result (of course methods can be substituted with functions).

How to share the connection pool is something that I'll deal with later.

>Referring to Glyph's blog post, he claims most twisted developers are misusing
>the adbapi interface.

I don't know the real meaning, but I suggest you should always stick to runInteraction.

>My concern is this, my code thus far looks pretty good. I've reviewed many
>examples of bits and pieces and generally have a decent feel for what I'm
>doing. Now that my application "framework" is basically setup (XHTML,
>templates, authentication, server, etc...) I'm to the point where I need to
>interface with an existing SQL database to retrieve data to fill in some
>templates.
>
>This sort of method works fine:
>
>    def data_query(self, context, data):
>        return self.dbpool.runQuery('SELECT name, email, id, TransferType,
>		basic_charge, over_charge, permitted_transfer FROM Customers')
>
>But I'm wondering if this the best way to use the adbapi interface.

Yes and no. It is not the best way because of course you are exposing to the application a detail of the way to access data. The best way would be to move that query in a single place with all the other ones so that you will be able to change the source of information easily another time (and when needed).

>I guess I have questions concerning when should I connect. As it stands I
>connect in the class constructor like this:
>
>class ListCustomers(rend.Page):
>    def __init__(self, user):
>        self.dbpool = adbapi.ConnectionPool(...

>My gut says this is wrong because now each page class contains a connection
>object. That really seems to be more of a general Python design issue and I
>could probably come up with a better solution.

Indeed. The better solution is to put the dbpool in the user object that you pass to ListCustomers :).

>But what about queries themselves? Is it bad design to run a query from each
>data_* method for all data methods in all page objects? I have three methods
>to work with:

No it is not bad design, it is the only thing you can do actually, data methods where designed with that particular purpose in mind. Of course the other solution is to put everything in beforeRender but I don't like it that much.

>DBPool.runQuery
>DBPool.runOperation
>DBPool.runInteraction
>
>You mentioned runInteraction above. Would it be more wise to provide a general
>data_* method that did several queries and stored (cached) that data in the
>Page object itself for later retieval?

This is another solution, but it's poor on code reuse. In fact you might have just a few data methods that retrieve particular objects and you can inherit those methods in other pages to always have a way to retrieve those objects from the database.

Nevow development is mostly creating an environment where templates can get the data they need. Very few python lines are needed when you are using Nevow in the right way because you fill find yourself reusing pre-defined render and data methods many many many times.

In fact the biggest application I've written so far has more than twice as much xHTML than Python. And it is made of about 70 kinds of pages for a staggering 10 lines per page on average, not too bad huh? :)

>Each page has to do some database I/O but it would be helpful to not have to
>do it everytime a page is refreshed or as the user goes back and forth
>through pages since the data is unlikely to change that quickly.

This is a different aspect and might be part of the database layer (query caching). Putting this duty on the application itself is asking for troubles.

>I'm looking for some insight as to how handle this type of scenario from a
>Twisted/Nevow perspective. It's obvious that database I/O is going to slow
>things down a bit but there must be a "best case" situation that avoids
>unnecessary queries.

As I said this is really database layer dependent. You don't want your application to do this job because it's simply the wrong layer, it will cost you more lines and more debugging and it will be harder to reuse when you add new pages. A better approach is to use caching at the HTML level, there are different approaches on this and you can find both searching the mailing list or the Nevow bug tracker for the word cache.

>> button.handle_event('clicked', list_of_callbacks)
>>
>> you do
>>
>> button.clicked().addCallback(callback1).addCallback(callback2)
>
>This chaining is very cool. So what actually makes the code non-blocking? The
>use of select() sys calls? I guess that's where my hangup is. How can we take
>a connection to a mail server and defer that result but yet we can't do the
>same for a database connection? At the OS level, aren't they both sockets
>that can be watched via select()?
>
>My head hurts :-)

Ok, if you ever programmed a custom protocol in Twisted you would get this quite straightly. Basically:

Protocols are designed with simple callbacks (no deferreds there) like lineReceived or dataReceived or datagramReceived. This can be achieved thanks to the select() loop and some logic in the base protocol class and some coupling with the transport of course (although pretty light coupling).
Of course the next step is to write a state machine on top of these callbacks to deal with complex protocols (like HTTP).
The Factory associated with a Protocol might be designed to hold an unfired Deferred instance. Once the Protocol reaches a final state of the state machine it triggers the Deferred held by the Factory.
Again of course the Factory exposed some methods like 'getPage' or 'runQuery', those methods returned a reference to the enclosed deferred to the caller in order to allow it to attach the wanted callbacks.
You can imagine that when the Protocol fires the deferred all the callbacks attached by the caller will be called and the 'magic' begins.

Of course not everything uses Protocols and Factories, for example the DBPool doesn't. Instead it uses a similar way of doing things but conceptually it's the same thing.

>When you say adapter your are referring to (in this case) MySQLdb or it's
>underlying _mysql module or yet even lower down to the C api?

I'm referring to MySQLdb or any other (like psycopg).

>If I wanted to implement a limited set of queries, could I write some
>non-blocking way of doing that and wrap those functions in Deferred objects.
>A silly question I guess because it's obviously possible. I guess I should
>ask if it's feasible. Maybe just attempting this as an exercise would give me
>greater understanding of how Twisted provides non-blocking calls.

There are 3 reactor calls to deal with threads and a 'simplified' way of using them with a thread pool.

reactor.callFromThread()
reactor.callInThread()
reactor.suggestThreadPoolSize()

With these 3 APIs you can run a function in a separate thread taken from a thread pool and since the reactor is not thread safe you must use another reactor.API to call other reactor APIs from a separate thread (of course I can't remember which ones).

The simplified way is to use threads.deferToThread() which returns a deferred and runs the function that you pass it in a separate thread.

This is essentially the same thing that dbpool.runInteraction does.

>No it isn't the case but it is wise for me to do runQuery() calls in each
>data_ method of each page or should I be looking for some way to unify
>queries and cache that data?

Move runQuery away from it and abstract it out. Then call the abstraction each time in the API and have the abstraction cache stuff when needed.

Ok, then I told you that I would have explained how to share the DBPool among the whole application.

The Realm has a requestAvatar() method that you have to implement. That method should return an avatar based on an avatarId that is passed to it (the avatarId object is returned by the checker). Given this information you should now understand what an avatar is. The avatar is the interface over the data that a user has access to. How do you use it? Simply by making it the mean through which you access data from the application and passing the avatar throughout the application.

For example you can do something like:

class ListCustomers(rend.Page):
    def __init__(self, avatar):
        self.avatar = avatar
        rend.Page.__init__(self)

    def data_customers(self, ctx, data):
        return self.avatar.get_customers()

As you see now there is no implementation leak about the real source of information except that it comes from the avatar, which has many ways to get to the wanted information.

There are many ways to deal with the avatar 'construction' in case of permissions over the data to access and roles but this is a whole different topic, neat but pretty hard to explain in this already long email. As I said I have code that deals with this using SQLAlchemy in my new project and as soon as I'll have more time (I'll graduate on 6th March) I'll publish the data layer somewhere, hopefully doing something useful for the community :).

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.4
Blog: http://vvolonghi.blogspot.com
New Pet: http://www.stiq.it

From egaumer at pagecache.org  Fri Feb 24 16:44:10 2006
From: egaumer at pagecache.org (Eric Gaumer)
Date: Fri Feb 24 17:44:13 2006
Subject: [Twisted-web] Some help with Nevow and databse I/O
In-Reply-To: <20060224223810.6122.1261420698.divmod.quotient.6968@ohm>
References: <20060224223810.6122.1261420698.divmod.quotient.6968@ohm>
Message-ID: <200602241544.10912.egaumer@pagecache.org>

On Friday 24 February 2006 2:38 pm, Valentino Volonghi aka Dialtone wrote:
> There are many ways to deal with the avatar 'construction' in case of
> permissions over the data to access and roles but this is a whole different
> topic, neat but pretty hard to explain in this already long email. As I
> said I have code that deals with this using SQLAlchemy in my new project
> and as soon as I'll have more time (I'll graduate on 6th March) I'll
> publish the data layer somewhere, hopefully doing something useful for the
> community :).

Sweet. Thanks for all the help. You've given me plenty to consider.

-- 
Eric Gaumer
Debian GNU/Linux PPC
egaumer@pagecache.org
http://egaumer.pagecache.org
PGP/GPG Key 0xF15D41E9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20060224/88ea6e45/attachment.pgp
From egaumer at pagecache.org  Fri Feb 24 21:24:35 2006
From: egaumer at pagecache.org (Eric Gaumer)
Date: Fri Feb 24 22:24:48 2006
Subject: [Twisted-web] Some help with Nevow and databse I/O
In-Reply-To: <20060224202923.6122.64740389.divmod.quotient.6877@ohm>
References: <20060224202923.6122.64740389.divmod.quotient.6877@ohm>
Message-ID: <200602242024.43813.egaumer@pagecache.org>

On Friday 24 February 2006 12:29 pm, Valentino Volonghi aka Dialtone wrote:
> You need to spawn a thread because there is hardly any database adapter
> that is written to be async, and those that are written to be async are
> either buggy or not complete or not really usable, plus having deferreds
> after every query in python (which doesn't support deferreds natively)
> makes coding a lot harder (you can deal with some deferreds here and there,
> but not with 10 deferreds each function).

Valentino, 

I noticed a post regarding tada with your name on it. Have you tried it and if 
so can you comment?

-- 
Eric Gaumer
Debian GNU/Linux PPC
egaumer@pagecache.org
http://egaumer.pagecache.org
PGP/GPG Key 0xF15D41E9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20060224/e43e2058/attachment.pgp
From dialtone at divmod.com  Sat Feb 25 07:27:19 2006
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Sat Feb 25 08:27:22 2006
Subject: [Twisted-web] Some help with Nevow and databse I/O
In-Reply-To: <200602242024.43813.egaumer@pagecache.org>
Message-ID: <20060225142719.6122.613615967.divmod.quotient.7482@ohm>



On Fri, 24 Feb 2006 20:24:35 -0800, Eric Gaumer <egaumer@pagecache.org> wrote:

>Valentino,
>
>I noticed a post regarding tada with your name on it. Have you tried it and if
>so can you comment?

I have it checked out in my hdd but never really used it for anything, thus I don't feel like commenting on it. I just prefer SQLAlchemy with threads.deferToThread().

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.4
Blog: http://vvolonghi.blogspot.com
New Pet: http://www.stiq.it

From cwmoad at gmail.com  Tue Feb 28 16:18:29 2006
From: cwmoad at gmail.com (Charlie Moad)
Date: Tue Feb 28 17:18:31 2006
Subject: [Twisted-web] Fwd: [Twisted-Python] Twisted & SOAP
In-Reply-To: <6382066a0602281512m38d6594n6efe35425e07c7f9@mail.gmail.com>
References: <4404D15C.3020802@reticulatus.plus.com>
	<6382066a0602281512m38d6594n6efe35425e07c7f9@mail.gmail.com>
Message-ID: <6382066a0602281518md8c396ck12eb697a1052822d@mail.gmail.com>

     SOAPpy is a very primitive soap implementation compared to ZSI,
but it works for the simple cases.  However, focus is being directed
to ZSI primarily now.  If you check out ZSI from cvs you can build it
with, "python setup.py build --twisted", and this will include twisted
resources that can be used like any other twisted.web resource.  This
work migrated from pygridware to ZSI recently, so it is not trivial to
use yet.  Pygridware also includes a web2 resource, but this has not
been moved to ZSI yet.  Maybe once these classes mature they will be
donated for twisted to include.
     I am not a twisted developer so I can't speak for them, but this
is the current status of the pywebsvcs group.
     I cc'd the twisted-web mailing list, because that is probably
where this thread belongs, hence the general list should not be
included in future replies.

- Charlie

On 2/28/06, Richard Townsend <richard@reticulatus.plus.com> wrote:
> I've been experimenting with the Twisted web/soap.py integration with
> SOAPpy which appears to do the sort of I stuff I need at the moment.
>
> However, a recent message on the Pywebsvcs-talk mailing list said:
>
> "Any objection to our diabolical plan to integrate
> wstools into ZSI and shove SOAPpy to a second class status? We'd like to
> converge on a single python web services solution, but we're working hard to
> make sure SOAPpy users can do in ZSI what they can do in SOAPpy..."
>
> What effect will this development have on support for SOAP in Twisted?
>
> regards
> Richard
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

