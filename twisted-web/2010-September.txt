From hustxnwsg at gmail.com  Tue Sep  7 05:25:15 2010
From: hustxnwsg at gmail.com (Arvin Wang)
Date: Tue, 7 Sep 2010 17:25:15 +0800
Subject: [Twisted-web] About handling thousands of sockets connections
	simultaneously
Message-ID: <AANLkTi=EUf=ncrSuSe=r_SmszgJky1cG-CqyQ8HxyatX@mail.gmail.com>

i use twisted as TCP server, when handling  thousands of sockets connections
simultaneously, i have found that the maximum TCP connections limited about
500. What's the matter?

some people say it is because that the number of a process opening file
descriptors is  limited,is't right? how can i solve the problem?

Arvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100907/4ba83b5f/attachment.htm 

From exarkun at twistedmatrix.com  Tue Sep  7 08:50:20 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 07 Sep 2010 12:50:20 -0000
Subject: [Twisted-web] About handling thousands of sockets
	connections	simultaneously
In-Reply-To: <AANLkTi=EUf=ncrSuSe=r_SmszgJky1cG-CqyQ8HxyatX@mail.gmail.com>
References: <AANLkTi=EUf=ncrSuSe=r_SmszgJky1cG-CqyQ8HxyatX@mail.gmail.com>
Message-ID: <20100907125020.2058.1576527155.divmod.xquotient.449@localhost.localdomain>




On 09:25 am, hustxnwsg at gmail.com wrote:
>i use twisted as TCP server, when handling  thousands of sockets 
>connections
>simultaneously, i have found that the maximum TCP connections limited 
>about
>500. What's the matter?

Try switching to a different reactor.  For example, the select reactor 
is limited to FD_SETSIZE open sockets.  This is usually around 1000, but 
could be 500 on some systems.  Poll reactor is limited to the "open 
files" rlimit which can be raised by superusers.  IOCP reactor has no 
arbitrary limits, I think.

http://twistedmatrix.com/documents/current/core/howto/choosing- 
reactor.html

Jean-Paul


From hustxnwsg at gmail.com  Tue Sep  7 09:35:30 2010
From: hustxnwsg at gmail.com (Arvin Wang)
Date: Tue, 7 Sep 2010 21:35:30 +0800
Subject: [Twisted-web] About handling thousands of sockets connections
	simultaneously
In-Reply-To: <20100907125020.2058.1576527155.divmod.xquotient.449@localhost.localdomain>
References: <AANLkTi=EUf=ncrSuSe=r_SmszgJky1cG-CqyQ8HxyatX@mail.gmail.com>
	<20100907125020.2058.1576527155.divmod.xquotient.449@localhost.localdomain>
Message-ID: <AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>

thank you for your advice.
i have chose the epoll reactor,and the requirement of my project is to be
able to support 60,000 TCP-connects simultaneously. it seems that just
choosing different reactor couldn't solve the problem, can you give some
more suggestions?

On Tue, Sep 7, 2010 at 8:50 PM, <exarkun at twistedmatrix.com> wrote:

>
>
>
> On 09:25 am, hustxnwsg at gmail.com wrote:
> >i use twisted as TCP server, when handling  thousands of sockets
> >connections
> >simultaneously, i have found that the maximum TCP connections limited
> >about
> >500. What's the matter?
>
> Try switching to a different reactor.  For example, the select reactor
> is limited to FD_SETSIZE open sockets.  This is usually around 1000, but
> could be 500 on some systems.  Poll reactor is limited to the "open
> files" rlimit which can be raised by superusers.  IOCP reactor has no
> arbitrary limits, I think.
>
> http://twistedmatrix.com/documents/current/core/howto/choosing-
> reactor.html
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



-- 
Services Computing Technology and System Lab && Cluster and Grid Computing
Lab.
School of Computer Science and Technology,
Huazhong University of Science and Technology,
Wuhan,430074,China.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100907/7c176703/attachment.htm 

From frodo at theshire.org  Tue Sep  7 09:50:31 2010
From: frodo at theshire.org (Cristiano Paris)
Date: Tue, 7 Sep 2010 15:50:31 +0200
Subject: [Twisted-web] About handling thousands of sockets connections
	simultaneously
In-Reply-To: <AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>
References: <AANLkTi=EUf=ncrSuSe=r_SmszgJky1cG-CqyQ8HxyatX@mail.gmail.com>
	<20100907125020.2058.1576527155.divmod.xquotient.449@localhost.localdomain>
	<AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>
Message-ID: <AANLkTime0odkJALCwSqBD+eH0AHkvqM7qfHhHm4S5Odz@mail.gmail.com>

On Tue, Sep 7, 2010 at 3:35 PM, Arvin Wang <hustxnwsg at gmail.com> wrote:
> thank you for your advice.
> i have chose the epoll reactor,and the requirement of my project is to be
> able to support 60,000 TCP-connects simultaneously. it seems that just
> choosing different reactor couldn't solve the problem, can you give some
> more suggestions?

60000? I'm very curious to know how it's possible to achieve this with twisted.

http://www.kegel.com/c10k.html

-- 
Cristiano

GPG Key: 4096R/C17E53C6 2010-02-22
Fingerprint = 4575 4FB5 DC8E 7641 D3D8? 8EBE DF59 B4E9 C17E 53C6


From exarkun at twistedmatrix.com  Tue Sep  7 10:03:44 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 07 Sep 2010 14:03:44 -0000
Subject: [Twisted-web] About handling thousands of sockets
	connections	simultaneously
In-Reply-To: <AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>
References: <AANLkTi=EUf=ncrSuSe=r_SmszgJky1cG-CqyQ8HxyatX@mail.gmail.com>
	<20100907125020.2058.1576527155.divmod.xquotient.449@localhost.localdomain>
	<AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>
Message-ID: <20100907140344.2058.422753423.divmod.xquotient.455@localhost.localdomain>

On 01:35 pm, hustxnwsg at gmail.com wrote:
>thank you for your advice.
>i have chose the epoll reactor,and the requirement of my project is to 
>be
>able to support 60,000 TCP-connects simultaneously. it seems that just
>choosing different reactor couldn't solve the problem, can you give 
>some
>more suggestions?

If you are more precise about the problem you're having, perhaps.

Jean-Paul


From lasizoillo at gmail.com  Tue Sep  7 10:17:08 2010
From: lasizoillo at gmail.com (lasizoillo)
Date: Tue, 7 Sep 2010 16:17:08 +0200
Subject: [Twisted-web] About handling thousands of sockets connections
	simultaneously
In-Reply-To: <AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>
References: <AANLkTi=EUf=ncrSuSe=r_SmszgJky1cG-CqyQ8HxyatX@mail.gmail.com>
	<20100907125020.2058.1576527155.divmod.xquotient.449@localhost.localdomain>
	<AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>
Message-ID: <AANLkTi=-diDuk1BjqZqypDj03o1xmpbemAAfHA+_j-RG@mail.gmail.com>

2010/9/7 Arvin Wang <hustxnwsg at gmail.com>:
> thank you for your advice.
> i have chose the epoll reactor,and the requirement of my project is to be
> able to support 60,000 TCP-connects simultaneously. it seems that just
> choosing different reactor couldn't solve the problem, can you give some
> more suggestions?
>

Discard that you're exhausting ephemeral ports launching a lot of
client with same client host.

Monitor server process (memory, cpu, logs) to see possible server
problems or bottlenecks.


From foom at fuhm.net  Tue Sep  7 10:19:22 2010
From: foom at fuhm.net (James Y Knight)
Date: Tue, 7 Sep 2010 10:19:22 -0400
Subject: [Twisted-web] About handling thousands of sockets connections
	simultaneously
In-Reply-To: <AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>
References: <AANLkTi=EUf=ncrSuSe=r_SmszgJky1cG-CqyQ8HxyatX@mail.gmail.com>
	<20100907125020.2058.1576527155.divmod.xquotient.449@localhost.localdomain>
	<AANLkTikT0oXiiFoOBFyesjG0aHUK4-A0cqcw1YjbzvcE@mail.gmail.com>
Message-ID: <58C24990-B268-472F-8473-88EA11C37710@fuhm.net>

On Sep 7, 2010, at 9:35 AM, Arvin Wang wrote:
> it seems that just choosing different reactor couldn't solve the problem, can you give some more suggestions? 

Check "ulimit -n": some systems set it to be very low by default. E.g. it's set to 1024 on my system. That means I can't use more than 1024 file descriptors in a process. Check if yours is similarly low.

James

From peter.westlake at pobox.com  Tue Sep 28 13:23:51 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 28 Sep 2010 18:23:51 +0100
Subject: [Twisted-web] Possible bug in nevow.testutil.FakeRequest setHeaders
	and getHeaders
Message-ID: <1285694631.24671.1397331661@webmail.messagingengine.com>

Recently my nevow web server's unit tests started to fail, because the
tests used request.getHeader() to check that request.setHeader() had
been called correctly. This used to work.

I can see from testutil.py that setHeaders sets self.headers, but
getHeaders gets a value from received_headers, and there is a test in
test_testutil.py to make sure it does. So is this really how it is meant
to work? Is setHeader really meant to set something that getHeader can't
get? If so, what's the correct method for testing the result of
setHeader?

To reproduce the problem, run this with "trial":

from nevow.testutil import FakeRequest, TestCase

class TestHeaders(TestCase):
    def setUp(self):
        self.request = FakeRequest()

    def test_set(self):
        self.request.setHeader('location', 'somewhere')
        self.failUnlessEqual(self.request.getHeader('location'),
        'somewhere')

Peter.


From exarkun at twistedmatrix.com  Tue Sep 28 13:52:06 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Sep 2010 17:52:06 -0000
Subject: [Twisted-web] Possible bug in
	nevow.testutil.FakeRequest	setHeaders and getHeaders
In-Reply-To: <1285694631.24671.1397331661@webmail.messagingengine.com>
References: <1285694631.24671.1397331661@webmail.messagingengine.com>
Message-ID: <20100928175206.4943.1065920686.divmod.xquotient.60@localhost.localdomain>

On 05:23 pm, peter.westlake at pobox.com wrote:
>Recently my nevow web server's unit tests started to fail, because the
>tests used request.getHeader() to check that request.setHeader() had
>been called correctly. This used to work.
>
>I can see from testutil.py that setHeaders sets self.headers, but
>getHeaders gets a value from received_headers, and there is a test in
>test_testutil.py to make sure it does. So is this really how it is 
>meant
>to work? Is setHeader really meant to set something that getHeader 
>can't
>get? If so, what's the correct method for testing the result of
>setHeader?

It's correct that setHeader and getHeader operate on different data 
sets.  Less confusing names for what the two methods do would have been 
setResponseHeader and getRequestHeader respectively.

In newer versions of Twisted, the requests have two new attributes, 
requestHeaders and responseHeaders, with various methods for inspection 
and modification.  Nevow's Request class should inherit these.  However 
Nevow's FakeRequest probably doesn't.

The right way to test for headers is probably to fix the FakeRequest 
class so that it is more inspectable, and to verify that it actually 
behaves in the same way as a real request object.
>To reproduce the problem, run this with "trial":
>
>from nevow.testutil import FakeRequest, TestCase
>
>class TestHeaders(TestCase):
>    def setUp(self):
>        self.request = FakeRequest()
>
>    def test_set(self):
>        self.request.setHeader('location', 'somewhere')
>        self.failUnlessEqual(self.request.getHeader('location'),
>        'somewhere')
>
>Peter.

Jean-Paul


From peter.westlake at pobox.com  Wed Sep 29 08:48:58 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 29 Sep 2010 13:48:58 +0100
Subject: [Twisted-web] Possible bug in nevow.testutil.FakeRequest
 setHeaders and getHeaders
In-Reply-To: <20100928175206.4943.1065920686.divmod.xquotient.60@localhost.localdomain>
References: <1285694631.24671.1397331661@webmail.messagingengine.com>
	<20100928175206.4943.1065920686.divmod.xquotient.60@localhost.localdomain>
Message-ID: <1285764538.24242.1397478621@webmail.messagingengine.com>



On Tue, 28 Sep 2010 17:52 +0000, exarkun at twistedmatrix.com wrote:
...
> It's correct that setHeader and getHeader operate on different data 
> sets.  Less confusing names for what the two methods do would have been 
> setResponseHeader and getRequestHeader respectively.
> 
> In newer versions of Twisted, the requests have two new attributes, 
> requestHeaders and responseHeaders, with various methods for inspection 
> and modification.  Nevow's Request class should inherit these.  However 
> Nevow's FakeRequest probably doesn't.
> 
> The right way to test for headers is probably to fix the FakeRequest 
> class so that it is more inspectable, and to verify that it actually 
> behaves in the same way as a real request object.

Thanks for the explanation! I've done this for now:

  class FakeRequest(nevow.testutil.FakeRequest):
      def getResponseHeader(self, key):
          return self.headers.get(key.lower())

Should I put in a ticket requesting something like this?

Peter.


From exarkun at twistedmatrix.com  Wed Sep 29 09:00:25 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Sep 2010 13:00:25 -0000
Subject: [Twisted-web] Possible bug in
	nevow.testutil.FakeRequest	setHeaders and getHeaders
In-Reply-To: <1285764538.24242.1397478621@webmail.messagingengine.com>
References: <1285694631.24671.1397331661@webmail.messagingengine.com>
	<20100928175206.4943.1065920686.divmod.xquotient.60@localhost.localdomain>
	<1285764538.24242.1397478621@webmail.messagingengine.com>
Message-ID: <20100929130025.4943.794929629.divmod.xquotient.104@localhost.localdomain>

On 12:48 pm, peter.westlake at pobox.com wrote:
>
>
>On Tue, 28 Sep 2010 17:52 +0000, exarkun at twistedmatrix.com wrote:
>...
>>It's correct that setHeader and getHeader operate on different data
>>sets.  Less confusing names for what the two methods do would have 
>>been
>>setResponseHeader and getRequestHeader respectively.
>>
>>In newer versions of Twisted, the requests have two new attributes,
>>requestHeaders and responseHeaders, with various methods for 
>>inspection
>>and modification.  Nevow's Request class should inherit these. 
>>However
>>Nevow's FakeRequest probably doesn't.
>>
>>The right way to test for headers is probably to fix the FakeRequest
>>class so that it is more inspectable, and to verify that it actually
>>behaves in the same way as a real request object.
>
>Thanks for the explanation! I've done this for now:
>
>  class FakeRequest(nevow.testutil.FakeRequest):
>      def getResponseHeader(self, key):
>          return self.headers.get(key.lower())
>
>Should I put in a ticket requesting something like this?

Certainly.  Things are a little mixed up here though, let's see...

Twisted Web provides a base Request class.  Nevow subclasses it to 
create the request class all Nevow applications get.  Then Twisted Web 
also provides a FakeRequest, which isn't very good, and I think there is 
a ticket (in the Twisted tracker) for improving.  Then Nevow provides 
its own FakeRequest, not a subclass of Twisted's FakeRequest.  There 
probably needs to be a Nevow ticket for doing something about Nevow's 
FakeRequest class - in the short term, fixing these minor issues; but in 
the longer term, getting rid of it, and hopefully NevowRequest as well, 
makes a lot of sense.

Jean-Paul


From peter.westlake at pobox.com  Wed Sep 29 10:57:06 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 29 Sep 2010 15:57:06 +0100
Subject: [Twisted-web] Possible bug in nevow.testutil.FakeRequest
 setHeaders and getHeaders
In-Reply-To: <20100929130025.4943.794929629.divmod.xquotient.104@localhost.localdomain>
References: <1285694631.24671.1397331661@webmail.messagingengine.com><20100928175206.4943.1065920686.divmod.xquotient.60@localhost.localdomain><1285764538.24242.1397478621@webmail.messagingengine.com>
	<20100929130025.4943.794929629.divmod.xquotient.104@localhost.localdomain>
Message-ID: <1285772226.19274.1397502701@webmail.messagingengine.com>

On Wed, 29 Sep 2010 13:00 +0000, exarkun at twistedmatrix.com wrote:
> On 12:48 pm, peter.westlake at pobox.com wrote:
...
> >  class FakeRequest(nevow.testutil.FakeRequest):
> >      def getResponseHeader(self, key):
> >          return self.headers.get(key.lower())
> >
> >Should I put in a ticket requesting something like this?
> 
> Certainly.  Things are a little mixed up here though, let's see...
> 
> Twisted Web provides a base Request class.  Nevow subclasses it to 
> create the request class all Nevow applications get.  Then Twisted Web 
> also provides a FakeRequest, which isn't very good, and I think there is 
> a ticket (in the Twisted tracker) for improving.  Then Nevow provides 
> its own FakeRequest, not a subclass of Twisted's FakeRequest.  There 
> probably needs to be a Nevow ticket for doing something about Nevow's 
> FakeRequest class - in the short term, fixing these minor issues; but in 
> the longer term, getting rid of it, and hopefully NevowRequest as well, 
> makes a lot of sense.

The ticket for set/getHeader is http://divmod.org/trac/ticket/3029.

Getting rid of NevowRequest and Nevow's FakeRequest presumably
means adding their extra functionality to the ones in Twisted Web,
so would that ticket go into Nevow, Twisted, or both?

Peter.



From exarkun at twistedmatrix.com  Wed Sep 29 11:31:52 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Sep 2010 15:31:52 -0000
Subject: [Twisted-web] Possible bug in
	nevow.testutil.FakeRequest	setHeaders and getHeaders
In-Reply-To: <1285772226.19274.1397502701@webmail.messagingengine.com>
References: <1285694631.24671.1397331661@webmail.messagingengine.com><20100928175206.4943.1065920686.divmod.xquotient.60@localhost.localdomain><1285764538.24242.1397478621@webmail.messagingengine.com>
	<20100929130025.4943.794929629.divmod.xquotient.104@localhost.localdomain>
	<1285772226.19274.1397502701@webmail.messagingengine.com>
Message-ID: <20100929153152.4943.161054247.divmod.xquotient.109@localhost.localdomain>

On 02:57 pm, peter.westlake at pobox.com wrote:
>On Wed, 29 Sep 2010 13:00 +0000, exarkun at twistedmatrix.com wrote:
>>On 12:48 pm, peter.westlake at pobox.com wrote:
>...
>> >  class FakeRequest(nevow.testutil.FakeRequest):
>> >      def getResponseHeader(self, key):
>> >          return self.headers.get(key.lower())
>> >
>> >Should I put in a ticket requesting something like this?
>>
>>Certainly.  Things are a little mixed up here though, let's see...
>>
>>Twisted Web provides a base Request class.  Nevow subclasses it to
>>create the request class all Nevow applications get.  Then Twisted Web
>>also provides a FakeRequest, which isn't very good, and I think there 
>>is
>>a ticket (in the Twisted tracker) for improving.  Then Nevow provides
>>its own FakeRequest, not a subclass of Twisted's FakeRequest.  There
>>probably needs to be a Nevow ticket for doing something about Nevow's
>>FakeRequest class - in the short term, fixing these minor issues; but 
>>in
>>the longer term, getting rid of it, and hopefully NevowRequest as 
>>well,
>>makes a lot of sense.
>
>The ticket for set/getHeader is http://divmod.org/trac/ticket/3029.
>
>Getting rid of NevowRequest and Nevow's FakeRequest presumably
>means adding their extra functionality to the ones in Twisted Web,
>so would that ticket go into Nevow, Twisted, or both?

First there would be tickets (plural) for adding features to Twisted's 
Request and FakeRequest from Nevow.  Then there would be tickets (or 
maybe just a ticket) for deleting the corresponding (then redundant) 
code from Nevow.

Jean-Paul


From glyph at twistedmatrix.com  Wed Sep 29 15:57:02 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Sep 2010 15:57:02 -0400
Subject: [Twisted-web] Possible bug in nevow.testutil.FakeRequest
	setHeaders and getHeaders
In-Reply-To: <20100929153152.4943.161054247.divmod.xquotient.109@localhost.localdomain>
References: <1285694631.24671.1397331661@webmail.messagingengine.com><20100928175206.4943.1065920686.divmod.xquotient.60@localhost.localdomain><1285764538.24242.1397478621@webmail.messagingengine.com>
	<20100929130025.4943.794929629.divmod.xquotient.104@localhost.localdomain>
	<1285772226.19274.1397502701@webmail.messagingengine.com>
	<20100929153152.4943.161054247.divmod.xquotient.109@localhost.localdomain>
Message-ID: <8A960528-7EDC-402E-9BDD-B7D05F654669@twistedmatrix.com>


On Sep 29, 2010, at 11:31 AM, exarkun at twistedmatrix.com wrote:

> First there would be tickets (plural) for adding features to Twisted's 
> Request and FakeRequest from Nevow.  Then there would be tickets (or 
> maybe just a ticket) for deleting the corresponding (then redundant) 
> code from Nevow.

My two cents here would be to move in the direction of making Request itself a data structure which could be manipulated in memory, rather than having it tightly bound to the HTTP connection, and then having a discrete test double.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100929/c6c2256a/attachment.htm 

From exarkun at twistedmatrix.com  Wed Sep 29 16:53:11 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Sep 2010 20:53:11 -0000
Subject: [Twisted-web] Possible bug in
	nevow.testutil.FakeRequest	setHeaders and getHeaders
In-Reply-To: <8A960528-7EDC-402E-9BDD-B7D05F654669@twistedmatrix.com>
References: <1285694631.24671.1397331661@webmail.messagingengine.com><20100928175206.4943.1065920686.divmod.xquotient.60@localhost.localdomain><1285764538.24242.1397478621@webmail.messagingengine.com>
	<20100929130025.4943.794929629.divmod.xquotient.104@localhost.localdomain>
	<1285772226.19274.1397502701@webmail.messagingengine.com>
	<20100929153152.4943.161054247.divmod.xquotient.109@localhost.localdomain>
	<8A960528-7EDC-402E-9BDD-B7D05F654669@twistedmatrix.com>
Message-ID: <20100929205311.2022.1426647211.divmod.xquotient.7@localhost.localdomain>

On 07:57 pm, glyph at twistedmatrix.com wrote:
>
>On Sep 29, 2010, at 11:31 AM, exarkun at twistedmatrix.com wrote:
>>First there would be tickets (plural) for adding features to Twisted's
>>Request and FakeRequest from Nevow.  Then there would be tickets (or
>>maybe just a ticket) for deleting the corresponding (then redundant)
>>code from Nevow.
>
>My two cents here would be to move in the direction of making Request 
>itself a data structure which could be manipulated in memory, rather 
>than having it tightly bound to the HTTP connection, and then having a 
>discrete test double.

Yea, that sounds good too.

Jean-Paul


