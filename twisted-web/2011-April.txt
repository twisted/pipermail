From jessica.mckellar at gmail.com  Sun Apr  3 14:17:54 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Sun, 3 Apr 2011 14:17:54 -0400
Subject: [Twisted-web] [ANNOUNCE] Twisted 11.0.0 Released
In-Reply-To: <BANLkTinOyLf7stJOPfqd11+twjeDWrXUuQ@mail.gmail.com>
References: <BANLkTinOyLf7stJOPfqd11+twjeDWrXUuQ@mail.gmail.com>
Message-ID: <BANLkTimxMECjmDwtBz-U0uRLcmbPRkBbUQ@mail.gmail.com>

? ?<lvh> PAS MAINTENANT CHEF! CHUIS EN TRAIN DE BRANCHER LE REACTEURRRRR

On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 11.0.0.

Highlights include:

?* a new templating system in Twisted Web, "twisted.web.template",
derived from Divmod Nevow.
?* improved behavior of subprocess spawning on FreeBSD.
?* the 'twistd mail' plugin now uses the endpoints API, providing a
more consistent command line and compatibility with endpoint plugins.
?* twisted.plugin no longer emits a confusing traceback when it can't
write a cache file.

and numerous other bugfixes and documentation improvements. For more
information, see the NEWS file.

Download it now from:

? ??<http://twistedmatrix.com/>

or install the 'Twisted' package from PyPI.

Many thanks to Glyph Lefkowitz and Jean-Paul Calderone for
sanity-checking the pre-releases and release, and to the enthusiastic
PyCon 2011 sprinters who annihilated dozens of tickets. Thanks to
*everyone* who contributed tickets, patches, documentation, reviews,
buildbots, feedback, and assistance to fellow users and developers
leading up to this release. It is truly a group effort.

? ?<http://twistedmatrix.com/highscores/?time=2011-03-01>

is a testament to how much work was done in March alone.

-Jessica


From jashank.jeremy at optusnet.com.au  Mon Apr  4 05:28:21 2011
From: jashank.jeremy at optusnet.com.au (Jashank Jeremy)
Date: Mon, 4 Apr 2011 19:28:21 +1000
Subject: [Twisted-web] Creating a hybrid server in Twisted
Message-ID: <20110404092821.GC70065@vk2pj.dyndns.org>

--text follows this line--

Hi,

I'm trying to write a hybrid server that serves either HTTP or my own
custom protocol depending on how it's addressed (distantly inspired by
the IRC bouncer ZNC).  If it receives a standard GET, POST, HEAD,
etc. it sends HTTP traffic, or if it receives the bareword `CORDELIA',
it switches to Cordelia mode.

HTTP works fine with Twisted.Web.  I can serve pages over HTTP (which is
my desired outcome).  However, I'm not sure how to write the Cordelia
handling code.  I've tried my own custom `render_CORDELIA' function, but
it acts too much like HTTP (ie. it returns a result and terminates the
connection), which is not what I want, as the protocol I've designed
involves establishing a two-way conversation, not a single request and
response pair.

So I'm pretty much stuck in a rut.  I don't want to totally reinvent the
wheel just to be able to protocol-switch; I'd prefer to make use of
existing code from Twisted.  How do I hijack Twisted.Web to add protocol
switching?

Jashank

-- 
Jashank Jeremy
PGP: 0x25A5C309
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 196 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20110404/72583c9f/attachment.pgp 

From db3l.net at gmail.com  Mon Apr  4 19:51:34 2011
From: db3l.net at gmail.com (David Bolen)
Date: Mon, 04 Apr 2011 19:51:34 -0400
Subject: [Twisted-web] Creating a hybrid server in Twisted
References: <20110404092821.GC70065@vk2pj.dyndns.org>
Message-ID: <m2bp0lbmnt.fsf@valheru.db3l.homeip.net>

Jashank Jeremy <jashank.jeremy at optusnet.com.au> writes:

> So I'm pretty much stuck in a rut.  I don't want to totally reinvent the
> wheel just to be able to protocol-switch; I'd prefer to make use of
> existing code from Twisted.  How do I hijack Twisted.Web to add protocol
> switching?

The default HTTPFactory (of which Site is a subclass) is going to
create an HTTPChannel protocol for a new connection.  HTTPChannel is
based on LineReceiver, so lineReceived() is your hook for incoming
data.

To insert your own protocol code, you want to set the "protocol"
attribute of your Site (or HTTPFactory if using that directly)
instance to your own "hybrid" protocol class.

That protocol class needs to be able to use HTTPChannel for web
connections, so you can choose between subclassing or composition.
Subclassing is probably simpler, at least at first, since you won't
have to worry about mirroring instance parameters or attributes
getting set on your protocol instance by the factory, though
composition may perhaps keep your protocols separate more cleanly.

In your protocol's lineReceived() method, check for your flag value,
and adjust state appropriately.  Depending on the state you are in,
either pass along control to HTTPChannel.lineReceived, or just process
the data yourself.  Note that if your protocol is binary so you are
implementing rawDataReceived, you'll also want to check state and pass
along to HTTPCHannel if not in your local mode since that can be used
on web connections too.  If you're subclassing be aware that any
standard protocol method you implement might also get called on behalf
of the HTTPChannel code and not just your own protocol so always pass
along such calls if your local protocol mode isn't enabled.

HTTPChannel also includes policies.TimeoutMixin, so if you end up
switching to your own protocol, calling setTimeout(None) should
prevent it from deciding to close down your transport beneath you.  Unless
you're subclassing and you'd like the same timeout to be in effect for
your own protocol, of course.

-- David



From glyph at twistedmatrix.com  Tue Apr  5 21:54:18 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 5 Apr 2011 21:54:18 -0400
Subject: [Twisted-web] Creating a hybrid server in Twisted
In-Reply-To: <m2bp0lbmnt.fsf@valheru.db3l.homeip.net>
References: <20110404092821.GC70065@vk2pj.dyndns.org>
	<m2bp0lbmnt.fsf@valheru.db3l.homeip.net>
Message-ID: <7F3A6FC0-6F74-4991-AE30-E6E5125265D7@twistedmatrix.com>


On Apr 4, 2011, at 7:51 PM, David Bolen wrote:

> Jashank Jeremy <jashank.jeremy at optusnet.com.au> writes:
> 
>> So I'm pretty much stuck in a rut.  I don't want to totally reinvent the
>> wheel just to be able to protocol-switch; I'd prefer to make use of
>> existing code from Twisted.  How do I hijack Twisted.Web to add protocol
>> switching?
> 

> To insert your own protocol code, you want to set the "protocol"
> attribute of your Site (or HTTPFactory if using that directly)
> instance to your own "hybrid" protocol class.

It would be slightly better to override buildProtocol, because that way you can call the superclass's implementation more idiomatically.  But, the idea is the same.

Note that we'd really like to have protocol switch functionality built into Twisted proper so that you don't have to jump through all these hoops.  Please feel free to contribute patches to fix this ticket: <http://twistedmatrix.com/trac/ticket/3204>.



From db3l.net at gmail.com  Wed Apr  6 13:31:44 2011
From: db3l.net at gmail.com (David Bolen)
Date: Wed, 06 Apr 2011 13:31:44 -0400
Subject: [Twisted-web] Creating a hybrid server in Twisted
References: <20110404092821.GC70065@vk2pj.dyndns.org>
	<m2bp0lbmnt.fsf@valheru.db3l.homeip.net>
	<7F3A6FC0-6F74-4991-AE30-E6E5125265D7@twistedmatrix.com>
Message-ID: <m24o6bb81r.fsf@valheru.db3l.homeip.net>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> On Apr 4, 2011, at 7:51 PM, David Bolen wrote:
>
>> Jashank Jeremy <jashank.jeremy at optusnet.com.au> writes:
>> 
>>> So I'm pretty much stuck in a rut.  I don't want to totally reinvent the
>>> wheel just to be able to protocol-switch; I'd prefer to make use of
>>> existing code from Twisted.  How do I hijack Twisted.Web to add protocol
>>> switching?
>> 
>
>> To insert your own protocol code, you want to set the "protocol"
>> attribute of your Site (or HTTPFactory if using that directly)
>> instance to your own "hybrid" protocol class.
>
> It would be slightly better to override buildProtocol, because that
> way you can call the superclass's implementation more idiomatically.
> But, the idea is the same.

Good point.  For myself, I guess I use the attribute patching in cases
where I subclass an existing protocol, but won't be changing the
initialization.  That way I didn't need to keep an independent factory
class in sync with the library version over time in terms of any
buildProtocol processing, which feels more robust.

But a custom factory with its own buildProtocol is definitely more
flexible, not to mention required if the new protocol class needs a
different initialization signature.

-- David



From ghq7613 at 163.com  Mon Apr 11 05:49:48 2011
From: ghq7613 at 163.com (Ford Guo)
Date: Mon, 11 Apr 2011 17:49:48 +0800
Subject: [Twisted-web] =?windows-1252?q?where_is_the_=22twisted=2Eweb2=2Es?=
 =?windows-1252?q?tream=2EMemoryStream=94_on_11=2E0?=
Message-ID: <029637CA-584D-4B29-A101-AC1A948452E3@163.com>

HI,ALL
  I use the web2's stream.MemoryStream from 10.2 svn trunk,but after the 11.0 released,I can not find anything about it,any idea?
  Thanks.

--Ford


From exarkun at twistedmatrix.com  Mon Apr 11 08:29:15 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 11 Apr 2011 12:29:15 -0000
Subject: [Twisted-web]
	=?utf-8?q?where_is_the_=22twisted=2Eweb2=2Estream?=
	=?utf-8?b?Lk1lbW9yeVN0cmVhbeKAnSBvbiAxMS4w?=
In-Reply-To: <029637CA-584D-4B29-A101-AC1A948452E3@163.com>
References: <029637CA-584D-4B29-A101-AC1A948452E3@163.com>
Message-ID: <20110411122915.1992.170512524.divmod.xquotient.373@localhost.localdomain>

On 09:49 am, ghq7613 at 163.com wrote:
>HI,ALL
>  I use the web2's stream.MemoryStream from 10.2 svn trunk,but after the 
>11.0 released,I can not find anything about it,any idea?
>  Thanks.

http://twistedmatrix.com/trac/ticket/4821

Jean-Paul


From ghq7613 at 163.com  Mon Apr 11 09:31:39 2011
From: ghq7613 at 163.com (Ford Guo)
Date: Mon, 11 Apr 2011 21:31:39 +0800
Subject: [Twisted-web]
 =?windows-1252?q?where_is_the_=22twisted=2Eweb2=2Es?=
 =?windows-1252?q?tream=2EMemoryStream=94_on_11=2E0?=
In-Reply-To: <20110411122915.1992.170512524.divmod.xquotient.373@localhost.localdomain>
References: <029637CA-584D-4B29-A101-AC1A948452E3@163.com>
	<20110411122915.1992.170512524.divmod.xquotient.373@localhost.localdomain>
Message-ID: <61F148C4-B0CF-4B51-A028-6B88BD6CA070@163.com>

Thanks Jean. 
I see.

On Apr 11, 2011, at 8:29 PM, exarkun at twistedmatrix.com wrote:

> On 09:49 am, ghq7613 at 163.com wrote:
>> HI,ALL
>> I use the web2's stream.MemoryStream from 10.2 svn trunk,but after the 
>> 11.0 released,I can not find anything about it,any idea?
>> Thanks.
> 
> http://twistedmatrix.com/trac/ticket/4821
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web




From kmccarthy at gridironsoftware.com  Tue Apr 12 18:31:28 2011
From: kmccarthy at gridironsoftware.com (Ken McCarthy)
Date: Tue, 12 Apr 2011 18:31:28 -0400
Subject: [Twisted-web] Integration of txOauth and Twisted
Message-ID: <E1C6E4A1-9447-4F19-8412-217EAA6CADF4@gridironsoftware.com>

Has anyone put together a howTo on using txOauth with a twisted server - integrating OAuth in general with a twisted server?

From bdfy at mail.ru  Fri Apr 15 06:25:08 2011
From: bdfy at mail.ru (Ivan)
Date: Fri, 15 Apr 2011 14:25:08 +0400
Subject: [Twisted-web] using threads in twisted
Message-ID: <E1QAgD6-0000L7-00.bdfy-mail-ru@f55.mail.ru>

for example, I want to run two tasks ( using thread ), waiting while this tasks is end and after run  next several tasks
How to do this using twisted ? Any example ?

def task(n):
    sleep n

1) 1,2 tasks begin  ( thread )
2) waiting while all tasks is ends
3) ...
4) run 3,4,5,6,7 tasks ( thread )
5) waiting while all tasks is ends
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20110415/94071620/attachment.htm 

From stephen at thorne.id.au  Fri Apr 15 06:47:25 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Fri, 15 Apr 2011 20:47:25 +1000
Subject: [Twisted-web] using threads in twisted
In-Reply-To: <E1QAgD6-0000L7-00.bdfy-mail-ru@f55.mail.ru>
References: <E1QAgD6-0000L7-00.bdfy-mail-ru@f55.mail.ru>
Message-ID: <20110415104725.GB16575@thorne.id.au>

On 2011-04-15, Ivan wrote:
> for example, I want to run two tasks ( using thread ), waiting while this tasks is end and after run  next several tasks
> How to do this using twisted ? Any example ?
> 
> def task(n):
>     sleep n
> 
> 1) 1,2 tasks begin  ( thread )
> 2) waiting while all tasks is ends
> 3) ...
> 4) run 3,4,5,6,7 tasks ( thread )
> 5) waiting while all tasks is ends

You can use a combination of deferToThread() and DeferredList() to do
this. It's quite simple:

from twisted.internet import reactor
from twisted.internet import threads
from twisted.internet import defer

def worker(arg):
    print 'I do stuff in threads'
    return arg + 1

def first_round():
    print 'Starting workers'
    task1 = threads.deferToThread(worker, 1)
    task2 = threads.deferToThread(worker, 2)
    return defer.DeferredList([task1, task2])

def second_round(results):
    print 'result of first round is:', results
    l = []
    for x in range(10):
        l.append(threads.deferToThread(worker, x))
    return defer.DeferredList(l)

def report(results):
    print 'result of second round is:', results

def end(results):
    print results
    reactor.stop()

d = first_round()
d.addCallback(second_round)
d.addCallback(report)
d.addBoth(end)

reactor.run()

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From bdfy at mail.ru  Sat Apr 16 17:24:53 2011
From: bdfy at mail.ru (Ivan)
Date: Sun, 17 Apr 2011 01:24:53 +0400
Subject: [Twisted-web] simple example with xmlrpc server
In-Reply-To: <20110415104725.GB16575@thorne.id.au>
References: <E1QAgD6-0000L7-00.bdfy-mail-ru@f55.mail.ru>
	<20110415104725.GB16575@thorne.id.au>
Message-ID: <E1QBCz7-0006Nz-00.bdfy-mail-ru@f35.mail.ru>


I have simple example with xmlrpc server from standart python:

from SimpleXMLRPCServer import SimpleXMLRPCServer
from time import sleep
import threading,time

class Test(threading.Thread):
    def __init__(self):
        threading.Thread.__init__(self)
        self.test1 = 0
    def test(self):
        return self.test1

    def run(self):
        while(1):
            time.sleep(1)
            self.test1 = self.test1 + 1

ts = Test()
ts.start()
server =  SimpleXMLRPCServer(("localhost",8888))
server.register_instance(ts)
server.serve_forever()

how it will look on Twisted ?


From exarkun at twistedmatrix.com  Sat Apr 16 17:41:13 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 16 Apr 2011 21:41:13 -0000
Subject: [Twisted-web] simple example with xmlrpc server
In-Reply-To: <E1QBCz7-0006Nz-00.bdfy-mail-ru@f35.mail.ru>
References: <E1QAgD6-0000L7-00.bdfy-mail-ru@f55.mail.ru>
	<20110415104725.GB16575@thorne.id.au>
	<E1QBCz7-0006Nz-00.bdfy-mail-ru@f35.mail.ru>
Message-ID: <20110416214113.1992.1003242500.divmod.xquotient.530@localhost.localdomain>

On 09:24 pm, bdfy at mail.ru wrote:
>
>I have simple example with xmlrpc server from standart python:
>
>from SimpleXMLRPCServer import SimpleXMLRPCServer
>from time import sleep
>import threading,time
>
>class Test(threading.Thread):
>    def __init__(self):
>        threading.Thread.__init__(self)
>        self.test1 = 0
>    def test(self):
>        return self.test1
>
>    def run(self):
>        while(1):
>            time.sleep(1)
>            self.test1 = self.test1 + 1
>
>ts = Test()
>ts.start()
>server =  SimpleXMLRPCServer(("localhost",8888))
>server.register_instance(ts)
>server.serve_forever()
>
>how it will look on Twisted ?

Something like this:

  from twisted.internet import reactor
  from twisted.internet.task import LoopingCall
  from twisted.web.xmlrpc import XMLRPC
  from twisted.web.server import Site

  class Counter(XMLRPC):
      def __init__(self):
          XMLRPC.__init__(self)
          self.value = 0
          LoopingCall(self._update).start(1, now=False)

      def _update(self):
          self.value += 1

      def xmlrpc_test(self):
          return self.value

  factory = Site(Counter())
  reactor.listenTCP(8888, factory, interface="localhost")
  reactor.run()

Jean-Paul


From bdfy at mail.ru  Mon Apr 18 06:36:50 2011
From: bdfy at mail.ru (Ivan)
Date: Mon, 18 Apr 2011 14:36:50 +0400
Subject: [Twisted-web] =?utf-8?q?using_threads_in_twisted?=
In-Reply-To: <20110415104725.GB16575@thorne.id.au>
References: <E1QAgD6-0000L7-00.bdfy-mail-ru@f55.mail.ru>
	<20110415104725.GB16575@thorne.id.au>
Message-ID: <E1QBlp4-0004jL-00.bdfy-mail-ru@f263.mail.ru>

Thanks, but how to kill workers by timeout in this example ?


Fri, 15 Apr 2011 20:47:25 +1000 ?????? ?? Stephen Thorne <stephen at thorne.id.au>:

> On 2011-04-15, Ivan wrote:
> > for example, I want to run two tasks ( using thread ), waiting while this
> tasks is end and after run  next several tasks
> > How to do this using twisted ? Any example ?
> > 
> > def task(n):
> >     sleep n
> > 
> > 1) 1,2 tasks begin  ( thread )
> > 2) waiting while all tasks is ends
> > 3) ...
> > 4) run 3,4,5,6,7 tasks ( thread )
> > 5) waiting while all tasks is ends
> 
> You can use a combination of deferToThread() and DeferredList() to do
> this. It's quite simple:
> 
> from twisted.internet import reactor
> from twisted.internet import threads
> from twisted.internet import defer
> 
> def worker(arg):
> print 'I do stuff in threads'
> return arg + 1
> 
> def first_round():
> print 'Starting workers'
> task1 = threads.deferToThread(worker, 1)
> task2 = threads.deferToThread(worker, 2)
> return defer.DeferredList([task1, task2])
> 
> def second_round(results):
> print 'result of first round is:', results
> l = []
> for x in range(10):
> l.append(threads.deferToThread(worker, x))
> return defer.DeferredList(l)
> 
> def report(results):
> print 'result of second round is:', results
> 
> def end(results):
> print results
> reactor.stop()
> 
> d = first_round()
> d.addCallback(second_round)
> d.addCallback(report)
> d.addBoth(end)
> 
> reactor.run()
> 
> -- 
> Regards,
> Stephen Thorne
> Development Engineer
> Netbox Blue

From ilja.livenson at gmail.com  Mon Apr 18 10:45:51 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Mon, 18 Apr 2011 16:45:51 +0200
Subject: [Twisted-web] producer-consumer example with web requests
Message-ID: <BANLkTin3_gUL42=ctrLiMtZyc7GuJXy9bg@mail.gmail.com>

Hi,

I wonder if someone could help me with making of a streaming proxy - I
understand how producers/consumers work with general twisted, but
unsure of the best strategy in case of twisted.web.

So, the problem is as follows: frontend that accepts a request with
some headers I must process and a potentially large body. The latter
I'd like to be able to proxy in a streaming manner to another http
server. Any suggestions?

thanks,
Ilja


From exarkun at twistedmatrix.com  Mon Apr 18 11:20:45 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 18 Apr 2011 15:20:45 -0000
Subject: [Twisted-web] producer-consumer example with web requests
In-Reply-To: <BANLkTin3_gUL42=ctrLiMtZyc7GuJXy9bg@mail.gmail.com>
References: <BANLkTin3_gUL42=ctrLiMtZyc7GuJXy9bg@mail.gmail.com>
Message-ID: <20110418152045.1992.232742073.divmod.xquotient.809@localhost.localdomain>

On 02:45 pm, ilja.livenson at gmail.com wrote:
>Hi,
>
>I wonder if someone could help me with making of a streaming proxy - I
>understand how producers/consumers work with general twisted, but
>unsure of the best strategy in case of twisted.web.
>
>So, the problem is as follows: frontend that accepts a request with
>some headers I must process and a potentially large body. The latter
>I'd like to be able to proxy in a streaming manner to another http
>server. Any suggestions?

You might find twisted/web/proxy.py to be a good example of how to do 
this.

Jean-Paul


From p.mayers at imperial.ac.uk  Tue Apr 19 04:43:07 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 19 Apr 2011 09:43:07 +0100
Subject: [Twisted-web] using threads in twisted
In-Reply-To: <E1QBlp4-0004jL-00.bdfy-mail-ru@f263.mail.ru>
References: <E1QAgD6-0000L7-00.bdfy-mail-ru@f55.mail.ru>	<20110415104725.GB16575@thorne.id.au>
	<E1QBlp4-0004jL-00.bdfy-mail-ru@f263.mail.ru>
Message-ID: <4DAD4B1B.9010003@imperial.ac.uk>

On 04/18/2011 11:36 AM, Ivan wrote:
> Thanks, but how to kill workers by timeout in this example ?

You can't kill threads reliably in python AIUI.

If you want to reliably kill a task, spawn a process.

Alternatively you might see if you can break the task up into small 
pieces of work, and schedule it in the mainloop using something like 
task.cooperator.


From pfreixes at gmail.com  Tue Apr 19 13:35:19 2011
From: pfreixes at gmail.com (Pau Freixes)
Date: Tue, 19 Apr 2011 19:35:19 +0200
Subject: [Twisted-web] About twisted-web2 and proxy module
Message-ID: <BANLkTik_fWQK=ZYwcM6pir43=nhk7avWRQ@mail.gmail.com>

Hi list,

Which is the state about twisted-web2 ? will be merged at end at web namespace ?

And another question about twisted-web2.proxy module, there are a
raise ImportError at first line in last version, really doesnt work ?
somebody know something about this ?



-- 
--pau


From glyph at twistedmatrix.com  Tue Apr 19 13:58:03 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 19 Apr 2011 13:58:03 -0400
Subject: [Twisted-web] About twisted-web2 and proxy module
In-Reply-To: <BANLkTik_fWQK=ZYwcM6pir43=nhk7avWRQ@mail.gmail.com>
References: <BANLkTik_fWQK=ZYwcM6pir43=nhk7avWRQ@mail.gmail.com>
Message-ID: <7E952381-630D-4888-B8C8-1E8ABB87C7BB@twistedmatrix.com>

On Apr 19, 2011, at 1:35 PM, Pau Freixes wrote:

> Hi list,
> 
> Which is the state about twisted-web2 ? will be merged at end at web namespace ?

web2 has been removed from Twisted.  It has not been available in a Twisted release for years, and it is recently not available in trunk either.

web2 still contains several good implementation ideas that never made it to twisted.web, though, so if you'd like to help with moving those into twisted.web, we'd be very happy for your assistance.  However, it is strongly recommended that you use twisted.web for your applications, since that is actually developed and maintained.

> And another question about twisted-web2.proxy module, there are a
> raise ImportError at first line in last version, really doesnt work ?
> somebody know something about this ?

Yes.  Half-finished and un-finished broken stuff like this was the main reason that we stopped developing web2; it was too hard to maintain two not-finished webservers, so we have focused our efforts on maintaining one whole webserver instead.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20110419/2663188a/attachment.htm 

From glyph at twistedmatrix.com  Tue Apr 19 14:01:10 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 19 Apr 2011 14:01:10 -0400
Subject: [Twisted-web] using threads in twisted
In-Reply-To: <4DAD4B1B.9010003@imperial.ac.uk>
References: <E1QAgD6-0000L7-00.bdfy-mail-ru@f55.mail.ru>	<20110415104725.GB16575@thorne.id.au>
	<E1QBlp4-0004jL-00.bdfy-mail-ru@f263.mail.ru>
	<4DAD4B1B.9010003@imperial.ac.uk>
Message-ID: <11D2A515-590B-4E64-A01E-748F04D1A17C@twistedmatrix.com>


On Apr 19, 2011, at 4:43 AM, Phil Mayers wrote:

> On 04/18/2011 11:36 AM, Ivan wrote:
>> Thanks, but how to kill workers by timeout in this example ?
> 
> You can't kill threads reliably in python AIUI.

You can't kill threads in _any_ language reliably.  There are certain special cases where you can sort of make it work in some specific C programs, but for more information read this explanation of why it's not possible to implement a generally correct 'stop this thread' API, see here: <http://download.oracle.com/javase/1.4.2/docs/guide/misc/threadPrimitiveDeprecation.html>.

> If you want to reliably kill a task, spawn a process.

Yes, that's how you do it.

> Alternatively you might see if you can break the task up into small 
> pieces of work, and schedule it in the mainloop using something like 
> task.cooperator.

If the task is doing something CPU intensive, a subprocess will let you take advantage of multiple cores as well, though.  If the task is small and cheap though, and just needs to be performed periodically cooperator lets you avoid the overhead of both processes and threads.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20110419/4b551f48/attachment.htm 

From pfreixes at gmail.com  Tue Apr 19 14:17:43 2011
From: pfreixes at gmail.com (Pau Freixes)
Date: Tue, 19 Apr 2011 20:17:43 +0200
Subject: [Twisted-web] About twisted-web2 and proxy module
In-Reply-To: <7E952381-630D-4888-B8C8-1E8ABB87C7BB@twistedmatrix.com>
References: <BANLkTik_fWQK=ZYwcM6pir43=nhk7avWRQ@mail.gmail.com>
	<7E952381-630D-4888-B8C8-1E8ABB87C7BB@twistedmatrix.com>
Message-ID: <BANLkTimhWm5cG=+99SysG8Z4KgvitHgcsw@mail.gmail.com>

>
> Hi list,
>
> Which is the state about twisted-web2 ? will be merged at end at web
> namespace ?
>
> web2 has been removed from Twisted. ?It has not been available in a Twisted
> release for years, and it is recently not available in trunk either.
> web2 still contains several good implementation ideas that never made it to
> twisted.web, though, so if you'd like to help with moving those into
> twisted.web, we'd be very happy for your assistance. ?However, it is
> strongly recommended that you use twisted.web for your applications, since
> that is actually developed and maintained.

Are not good news, i think also twiste-web2 has some good ideas - like
filters - and some changes at response chain architecture with good
feelings. But i can understand the effort to mantain both "branches"
..

Im now building some project under twisted-web and i need some
features from twisted-web2, mainly stream module ... what do you think
to move stream module from twisted-web2 to twisted-web refactoring
code ?

-- 
--pau


From glyph at twistedmatrix.com  Tue Apr 19 15:11:37 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 19 Apr 2011 15:11:37 -0400
Subject: [Twisted-web] About twisted-web2 and proxy module
In-Reply-To: <BANLkTimhWm5cG=+99SysG8Z4KgvitHgcsw@mail.gmail.com>
References: <BANLkTik_fWQK=ZYwcM6pir43=nhk7avWRQ@mail.gmail.com>
	<7E952381-630D-4888-B8C8-1E8ABB87C7BB@twistedmatrix.com>
	<BANLkTimhWm5cG=+99SysG8Z4KgvitHgcsw@mail.gmail.com>
Message-ID: <6DE17D50-4FA0-4AD7-A5F2-3037B539A789@twistedmatrix.com>

On Apr 19, 2011, at 2:17 PM, Pau Freixes wrote:

> Im now building some project under twisted-web and i need some
> features from twisted-web2, mainly stream module ... what do you think
> to move stream module from twisted-web2 to twisted-web refactoring
> code ?

What features of the stream module do you need?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20110419/d3ed9c58/attachment.htm 

From pfreixes at gmail.com  Tue Apr 19 15:20:57 2011
From: pfreixes at gmail.com (Pau Freixes)
Date: Tue, 19 Apr 2011 21:20:57 +0200
Subject: [Twisted-web] About twisted-web2 and proxy module
In-Reply-To: <6DE17D50-4FA0-4AD7-A5F2-3037B539A789@twistedmatrix.com>
References: <BANLkTik_fWQK=ZYwcM6pir43=nhk7avWRQ@mail.gmail.com>
	<7E952381-630D-4888-B8C8-1E8ABB87C7BB@twistedmatrix.com>
	<BANLkTimhWm5cG=+99SysG8Z4KgvitHgcsw@mail.gmail.com>
	<6DE17D50-4FA0-4AD7-A5F2-3037B539A789@twistedmatrix.com>
Message-ID: <BANLkTik5M73UsYbAPGnaSvxbSFBEfYHn9w@mail.gmail.com>

Mainly now just a FileStream class, and more later with with Range [1]
headers support.

[1] http://tools.ietf.org/html/draft-ietf-http-range-retrieval-00

On Tue, Apr 19, 2011 at 9:11 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> On Apr 19, 2011, at 2:17 PM, Pau Freixes wrote:
>
> Im now building some project under twisted-web and i need some
> features from twisted-web2, mainly stream module ... what do you think
> to move stream module from twisted-web2 to twisted-web refactoring
> code ?
>
> What features of the stream module do you need?
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>



-- 
--pau


From glyph at twistedmatrix.com  Tue Apr 19 15:25:44 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 19 Apr 2011 15:25:44 -0400
Subject: [Twisted-web] About twisted-web2 and proxy module
In-Reply-To: <BANLkTik5M73UsYbAPGnaSvxbSFBEfYHn9w@mail.gmail.com>
References: <BANLkTik_fWQK=ZYwcM6pir43=nhk7avWRQ@mail.gmail.com>
	<7E952381-630D-4888-B8C8-1E8ABB87C7BB@twistedmatrix.com>
	<BANLkTimhWm5cG=+99SysG8Z4KgvitHgcsw@mail.gmail.com>
	<6DE17D50-4FA0-4AD7-A5F2-3037B539A789@twistedmatrix.com>
	<BANLkTik5M73UsYbAPGnaSvxbSFBEfYHn9w@mail.gmail.com>
Message-ID: <7E25FC77-5937-4F50-9E95-9C8EC862CA0D@twistedmatrix.com>

On Apr 19, 2011, at 3:20 PM, Pau Freixes wrote:

> On Tue, Apr 19, 2011 at 9:11 PM, Glyph Lefkowitz
> <glyph at twistedmatrix.com> wrote:
>> On Apr 19, 2011, at 2:17 PM, Pau Freixes wrote:
>> 
>> Im now building some project under twisted-web and i need some
>> features from twisted-web2, mainly stream module ... what do you think
>> to move stream module from twisted-web2 to twisted-web refactoring
>> code ?
>> 
>> What features of the stream module do you need?
> 
> Mainly now just a FileStream class, and more later with with Range [1]
> headers support.
> 
> [1] http://tools.ietf.org/html/draft-ietf-http-range-retrieval-00

twisted.web.static.File already has Range support.



From pfreixes at gmail.com  Tue Apr 19 16:00:48 2011
From: pfreixes at gmail.com (Pau Freixes)
Date: Tue, 19 Apr 2011 22:00:48 +0200
Subject: [Twisted-web] About twisted-web2 and proxy module
In-Reply-To: <7E25FC77-5937-4F50-9E95-9C8EC862CA0D@twistedmatrix.com>
References: <BANLkTik_fWQK=ZYwcM6pir43=nhk7avWRQ@mail.gmail.com>
	<7E952381-630D-4888-B8C8-1E8ABB87C7BB@twistedmatrix.com>
	<BANLkTimhWm5cG=+99SysG8Z4KgvitHgcsw@mail.gmail.com>
	<6DE17D50-4FA0-4AD7-A5F2-3037B539A789@twistedmatrix.com>
	<BANLkTik5M73UsYbAPGnaSvxbSFBEfYHn9w@mail.gmail.com>
	<7E25FC77-5937-4F50-9E95-9C8EC862CA0D@twistedmatrix.com>
Message-ID: <BANLkTin4ju39Q_vMds+vqtN1eBHpEkD_xQ@mail.gmail.com>

> twisted.web.static.File already has Range support.

I saw the code, I didn't know the "consumer" register in request
object and use it to send chunked data between producer and
twisted-web server core ... sounds good. I will play with static
object.

Thanks a lot.

-- 
--pau


From mike at mkp.ca  Thu Apr 21 11:12:54 2011
From: mike at mkp.ca (Mike Pelletier)
Date: Thu, 21 Apr 2011 11:12:54 -0400
Subject: [Twisted-web] Get identity of previously-authenticated user
Message-ID: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>

twisted.web.template is great to have.  I'm doing a client's web app
project with (so far) just twisted.  So far the only thing I really
miss from nevow is that I cannot load a template from a fragment
identifier in an xml document, but just for reasons of convenience.

I need to know who is logged in.  Twisted offers
twisted.web.guard.HTTPAuthSessionWrapper to perform the initial
authentication, but then when a page element wants to know the
identity of the authenticated user, there seems to be no provision for
this.  Furthermore, there seems to be no place in the classes I am
invited to write to work with twisted.web.guard where both the request
object and the avatarId exist at the same time.

The only opportunity I have to bind a user identity/object to a
request is by constructing and throwing away a new Resource tree for
each request in requestAvatar.  I decided that was probably not what I
was meant to do.  Instead, I have done something that turns out to
smell very bad to solve this problem.  What was the correct solution?

Mine was to subclass HTTPAuthSessionWrapper and override
_authorizedResource and _login in order to pass the request object as
the mind.  From there I can use request.setComponent in requestAvatar
and request.removeComponent in the logout callback (just for fun) to
associate an authenticated user object with the request.  I'm not even
sure that's what "mind" is for, and it's not cool copying and pasting
the body of a couple of methods out of the library.

My next task appears to be to write a credential factory that can take
credentials out of the cookies or session, to support a friendly login
interface.  Again I feel as though I am whacking my way through what
should be a clear trail.  It's dangerous stuff to be writing as
application code.  Am I just expecting too much from twisted.web a la
carte?  Is nevow a viable choice anymore?

TIA for just one or two lines of wisdom.
--Mike


From mike at mkp.ca  Thu Apr 21 12:12:57 2011
From: mike at mkp.ca (Mike Pelletier)
Date: Thu, 21 Apr 2011 12:12:57 -0400
Subject: [Twisted-web] Get identity of previously-authenticated user
In-Reply-To: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
References: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
Message-ID: <BANLkTimd77B8+6Ck7PG2Fv30gVOvFhWc7g@mail.gmail.com>

I see now that I am doing many, many things wrong, starting right from
"import twisted.web.guard".  Oops.  Going to go have a wee sulk.


From glyph at twistedmatrix.com  Thu Apr 21 20:11:08 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 21 Apr 2011 20:11:08 -0400
Subject: [Twisted-web] Get identity of previously-authenticated user
In-Reply-To: <BANLkTimd77B8+6Ck7PG2Fv30gVOvFhWc7g@mail.gmail.com>
References: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
	<BANLkTimd77B8+6Ck7PG2Fv30gVOvFhWc7g@mail.gmail.com>
Message-ID: <F82E8849-17A7-4066-9C80-B3BE22D834D1@twistedmatrix.com>


On Apr 21, 2011, at 12:12 PM, Mike Pelletier wrote:

> I see now that I am doing many, many things wrong, starting right from
> "import twisted.web.guard".  Oops.  Going to go have a wee sulk.

While I can't dispute that you might be doing things wrong without knowing what you're doing, "twisted.web.guard" is supposed to work.  If you're having problems with it, please file bugs :).



From glyph at twistedmatrix.com  Thu Apr 21 20:13:15 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 21 Apr 2011 20:13:15 -0400
Subject: [Twisted-web] Get identity of previously-authenticated user
In-Reply-To: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
References: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
Message-ID: <D4F1C6D9-DC46-4F75-A1FB-7D9AD34791EC@twistedmatrix.com>


On Apr 21, 2011, at 11:12 AM, Mike Pelletier wrote:

> The only opportunity I have to bind a user identity/object to a
> request is by constructing and throwing away a new Resource tree for
> each request in requestAvatar.  I decided that was probably not what I
> was meant to do.  Instead, I have done something that turns out to
> smell very bad to solve this problem.  What was the correct solution?

Resources can be extremely lightweight objects.  If your actual resource tree is heavyweight (containing lots of data, shared caches, etc) you can trivially build an overlay resource tree that just remembers the user object and binds it to the underlying tree.

So the main question is: why did you decide that this is not what you were meant to do?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20110421/5a842a2c/attachment.htm 

From p.mayers at imperial.ac.uk  Fri Apr 22 06:51:59 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 22 Apr 2011 11:51:59 +0100
Subject: [Twisted-web] Get identity of previously-authenticated user
In-Reply-To: <D4F1C6D9-DC46-4F75-A1FB-7D9AD34791EC@twistedmatrix.com>
References: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
	<D4F1C6D9-DC46-4F75-A1FB-7D9AD34791EC@twistedmatrix.com>
Message-ID: <4DB15DCF.1030307@imperial.ac.uk>

On 04/22/2011 01:13 AM, Glyph Lefkowitz wrote:
>
> On Apr 21, 2011, at 11:12 AM, Mike Pelletier wrote:
>
>> The only opportunity I have to bind a user identity/object to a
>> request is by constructing and throwing away a new Resource tree for
>> each request in requestAvatar. I decided that was probably not what I
>> was meant to do. Instead, I have done something that turns out to
>> smell very bad to solve this problem. What was the correct solution?
>
> Resources can be extremely lightweight objects. If your actual resource
> tree is heavyweight (containing lots of data, shared caches, etc) you
> can trivially build an overlay resource tree that just remembers the
> user object and binds it to the underlying tree.
>
> So the main question is: why did you decide that this is not what you
> were meant to do?

For what it's worth: I decided exactly the same thing way back when, and 
also discovered that, no, you are supposed to do that.

I thought about why I'd decided that, and came to the conclusion it's 
just not intuitive - it "felt" wrong - but couldn't be more specific. 
Possibly it's because almost every other web framework I've ever seen, 
python or not, gives you a "user" object of some description on the request?

Perhaps a note in the web/guard docs suggesting this approach might tip 
people off.

(That said, I don't use Twisted for web stuff anymore, so it's not of 
much interest to me)


From glyph at twistedmatrix.com  Fri Apr 22 07:27:31 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 22 Apr 2011 07:27:31 -0400
Subject: [Twisted-web] Get identity of previously-authenticated user
In-Reply-To: <4DB15DCF.1030307@imperial.ac.uk>
References: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
	<D4F1C6D9-DC46-4F75-A1FB-7D9AD34791EC@twistedmatrix.com>
	<4DB15DCF.1030307@imperial.ac.uk>
Message-ID: <F40D8FCE-EB4A-4D30-BEBF-9FE52DDC70FD@twistedmatrix.com>

On Apr 22, 2011, at 6:51 AM, Phil Mayers wrote:

> On 04/22/2011 01:13 AM, Glyph Lefkowitz wrote:
>> 
>> On Apr 21, 2011, at 11:12 AM, Mike Pelletier wrote:
>> 
>>> The only opportunity I have to bind a user identity/object to a
>>> request is by constructing and throwing away a new Resource tree for
>>> each request in requestAvatar. I decided that was probably not what I
>>> was meant to do. Instead, I have done something that turns out to
>>> smell very bad to solve this problem. What was the correct solution?
>> 
>> Resources can be extremely lightweight objects. If your actual resource
>> tree is heavyweight (containing lots of data, shared caches, etc) you
>> can trivially build an overlay resource tree that just remembers the
>> user object and binds it to the underlying tree.
>> 
>> So the main question is: why did you decide that this is not what you
>> were meant to do?
> 
> For what it's worth: I decided exactly the same thing way back when, and 
> also discovered that, no, you are supposed to do that.

Thanks for that data point.

> I thought about why I'd decided that, and came to the conclusion it's 
> just not intuitive - it "felt" wrong - but couldn't be more specific. 
> Possibly it's because almost every other web framework I've ever seen, 
> python or not, gives you a "user" object of some description on the request?

This always seemed to me to be an incredibly bad design, copied from the era of CGI because nobody had a better idea.  Except of course Zope did have a better idea (object publishing), but obscured it with some really terrible ones (authentication by acquisition) so it was not generally recognized as good.

> Perhaps a note in the web/guard docs suggesting this approach might tip 
> people off.

Yeah, erm, hrm.  The cred documentation doesn't really get this across very well.  I'd like to say I'd update the documentation myself, but honestly, the way cred (and guard) works seems so completely obvious to me that it's hard for me to express this well to people with a more traditional web background (or even non-web stuff with more traditional authentication APIs).

I was exposed to capability security and authentication patterns very early in my programming career, so "that thing everybody does where they pass a user object to everything" was first explained to me in explicit terms as "the common way in which people implement easily broken security" rather than in some framework's documentation as a good idea.

The idea with cred-based authentication of all kinds (of which twisted.web.guard is merely one implementation) is to do authentication by naming rather than by checking.  The traditional way of doing access control is to do something like this:

class MyFancyRootResource(object):
    def render_GET(self, request, user):
        if user.hasPermission(self, READ):
            return self.sensitiveData()
        else:
            return FourOhThree()

The cred way of doing it is to do something more like this:

class MyRealm(object):
    def requestAvatar(self, avatarID, mind, *interfaces):
        avatar = self.lookup(avatarID)
        if avatar.canAccessSensitiveData():
            return SensitiveData()
        else:
            return FourOhThree()

At this scale, they probably seem roughly equivalent.  But imagine what happens to this code as it grows.  Maybe I want to add a 'render_POST' to my root resource.  In this idiom, I need another permission checking call.  Then maybe I want to add a getChild.  Now I need another.  And another for every method on every child.  Of course, I might forget to implement one of these methods on FourOhThree, but then all the attacker will get is a 500 (AttributeError), which is hardly more useful to them than an HTTP protocol error.

When I sit down to write render_GET, what's foremost in my mind is making sure that the page looks right and that it does what I expect when I am authenticated.  It's hard to have the level of discipline required to remind yourself after every single change or every single new feature that you might have to add one more 'if' check for security purposes.  It's much easier if your checking code is off in a different area, that you only look at when you're actually thinking about security rules, and by the time you've gotten to the application object, you implicitly have permission to use it.

This also makes testing a bit easier, since you don't need a fake user in many places that you otherwise would; if you're just testing the positive path, you can just check that the 'inner' object works as expected, without testing its interaction with the whole process of authentication.  It doesn't always help; if every page needs to display a 'hello, $USER' banner somewhere, then you can't avoid much work, but in the cases where you don't need it (access to downloadable files, for example) it is nice to be able to skip it.

I'd be happy to rant at someone and draw some diagrams on a whiteboard to try to come up with a better explanation though.

> (That said, I don't use Twisted for web stuff anymore, so it's not of 
> much interest to me)

Too bad, sorry to hear it.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20110422/c5b5bdb4/attachment.htm 

From mike at mkp.ca  Fri Apr 22 10:26:02 2011
From: mike at mkp.ca (Mike Pelletier)
Date: Fri, 22 Apr 2011 10:26:02 -0400
Subject: [Twisted-web] Get identity of previously-authenticated user
In-Reply-To: <D4F1C6D9-DC46-4F75-A1FB-7D9AD34791EC@twistedmatrix.com>
References: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
	<D4F1C6D9-DC46-4F75-A1FB-7D9AD34791EC@twistedmatrix.com>
Message-ID: <BANLkTikyFG2if_+zmzY4zWMP7pxa39XPww@mail.gmail.com>

Thanks for the feedback, Glyph.  You ask, "how could you be so dumb?"
so I will explain.  (You also said the A-word, but I will ignore
that.)

Conceptually, it is the HTTP request that is being authenticated.  I
thought it was therefore quite neat and tidy to register PB-style
avatar objects as a components of the request itself.


My resource objects do not have any member data that allows them to be
dangerous.  They manipulate the persistent state of the application
via avatar objects, which they don't get until getChild() or render().
 I do have to perform access checks in my methods like you mention,
but only for cosmetic reasons.  If I fail to do so, the harm can be no
greater than a TypeError or AttributeError raising.

It does turn out that the access check happens at a more inconvenient
time to do anything about it than when in requestAvatar.  No surprise
to you I am sure.  I think I did not fully grasp the role of the Realm
as I was working on this. I imagined that the Realm was meant to be a
gatekeeper to an already-instantiated resource it didn't really know
anything about, but I guess it really encapsulates a lot (all?) of the
security policy, so it has to have some knowledge about the resources
its dealing with.

I liked that my resources did not have to know very much; what
children they happen to have plugged into them, who is logged on, what
data their children will need for configuration, etc.  They are
extremely simple and focused on their domain.  It made it feel like I
was doing the right thing.

I build the tree in my tac, rather than in my resource ctors.  I use a
small number of Resource classes for a somewhat larger number of
resources, with the tac containing the distinguishing configuration
data.  The tree is (so far) entirely static.   I do anticipate
deploying multiple tacs with different resource trees.  It is
convenient that resources are simple and stupid when plugging them
together.

There's really no reason I can't wrap the resource tree construction
up in a function I can pass to the Realm except that I would have to
change every ctor to pass down the user object to the smallest
crinkles of the tree.

I did not mean to malign twisted.web.guard.  The problem I ultimately
encountered with it was not due to a defect but a lack of foresight on
my part.  I grabbed it without looking at it closely, thinking that it
would get me up quickly, and then through the magic of twisted.cred, I
would be able to grow it into whatever authentication system I needed
(ie, friendly form-based login).  This is not the case, since the
challenge/response machinery belongs to the resource wrapper object
(ie, informally, "twisted.web.guard") and it would never be very
adaptable to my needs.

I am now using my own root resource to set up PB-style avatars on the
session.  I plan to expire any sessions referenced via cleartext http.
 I can't wait to see what goes wrong with that.

--Mike


From glyph at twistedmatrix.com  Fri Apr 22 21:29:54 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 22 Apr 2011 21:29:54 -0400
Subject: [Twisted-web] Get identity of previously-authenticated user
In-Reply-To: <BANLkTikyFG2if_+zmzY4zWMP7pxa39XPww@mail.gmail.com>
References: <BANLkTik9pmTLOg26RoqstoBWj1BJcTC=Rw@mail.gmail.com>
	<D4F1C6D9-DC46-4F75-A1FB-7D9AD34791EC@twistedmatrix.com>
	<BANLkTikyFG2if_+zmzY4zWMP7pxa39XPww@mail.gmail.com>
Message-ID: <E0567074-A1D3-4190-8D7B-0491AC78E3F1@twistedmatrix.com>


On Apr 22, 2011, at 10:26 AM, Mike Pelletier wrote:

> Thanks for the feedback, Glyph.  You ask, "how could you be so dumb?"
> so I will explain.  (You also said the A-word, but I will ignore
> that.)

You mean ... acquisition? :)

> I am now using my own root resource to set up PB-style avatars on the
> session.  I plan to expire any sessions referenced via cleartext http.
> I can't wait to see what goes wrong with that.

Cool.  Keep us updated.  I'm sure lots will inevitably go wrong :).  One big problem with having this model that isn't widely understood is that there's a deficiency of utilities for implementing common patterns, so you may have to do some things yourself which would be otherwise provided for in other frameworks.  If you hit a pain point, please complain about it loudly, so we can get this kind of folk wisdom and design patterns out there in the wider world.

Thanks,

-g

From acapnotic at twistedmatrix.com  Sat Apr 30 14:11:26 2011
From: acapnotic at twistedmatrix.com (acapnotic at twistedmatrix.com)
Date: Sat, 30 Apr 2011 15:11:26 -0300
Subject: [Twisted-web] from Deana
Message-ID: <7403336442.I6V3O382567544@ltdzsrd.rkdtmswjuc.org>

I am a beautiful girl, brunette with brown eyes, and I'm looking for an intelligent man to communicate by e-mail, Skype, or on real dates!

My home page: www.rus-flirt.ru



