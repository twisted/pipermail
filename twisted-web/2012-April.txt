From tom.sheffler at gmail.com  Thu Apr  5 09:55:02 2012
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Thu, 5 Apr 2012 06:55:02 -0700
Subject: [Twisted-web] Is there a good way to mount both an HTTP Site and a
 WebSocket Server on port 80?
Message-ID: <CAMBtMcvdBLX5kErHh=Lqu_nbUAdwwe8M0eWeZum3dPvoadx_=A@mail.gmail.com>

I was wondering about ways to mount different types of protocol handlers on
the same port.  It looks like there will be new WebSocket support
implementing a websocket Site.  We'll also have the existing HTTP Site.
 Will they both be able to live on port 80?  Is it important to be able to
do this?

In my own experiments, I've modified "portforward.py" to inspect an
incoming request and dispatch to one of two different servers mounted on
Unix-Domain sockets,  depending on the request path in the header.  It
looks something like the code below.  This does a lot of copying of each
data packet, but seems to be effective.

Does anyone have a better suggestion for how to mount different protocol
handlers on the same port?

Thanks.  -T

   ========
   site1 = twisted.web.server.Site(...)
   site2 = txws.WebSocketFactory(...)

   reactor.listenUNIX("site1.sck", site1)
   reactor.listenUNIX("site2.sck", site2)

   # this routes requests on port 80 to one of the two sockets
   reactor.listenTCP(80, InspectingProxyFactory("site1.sck", "site2.sck")
   =======
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120405/2d5217d2/attachment.htm 

From p.mayers at imperial.ac.uk  Mon Apr  9 05:03:08 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 09 Apr 2012 10:03:08 +0100
Subject: [Twisted-web] Is there a good way to mount both an HTTP Site
 and a WebSocket Server on port 80?
In-Reply-To: <CAMBtMcvdBLX5kErHh=Lqu_nbUAdwwe8M0eWeZum3dPvoadx_=A@mail.gmail.com>
References: <CAMBtMcvdBLX5kErHh=Lqu_nbUAdwwe8M0eWeZum3dPvoadx_=A@mail.gmail.com>
Message-ID: <4F82A5CC.9020609@imperial.ac.uk>

On 04/05/2012 02:55 PM, Tom Sheffler wrote:
> I was wondering about ways to mount different types of protocol handlers
> on the same port. It looks like there will be new WebSocket support
> implementing a websocket Site. We'll also have the existing HTTP Site.
> Will they both be able to live on port 80? Is it important to be able to
> do this?

Why would you do this?

IIRC WebSocket "switches" from HTTP into WebSocket mode; so what you 
actually want is for the HTTP Site (actually a Factory) to return a 
Protocol instance that:

  1. Handles HTTP
  2. Detects a WebSocket switch
  3. Creates a new WebSocket Protocol, attaches the existing transport, 
and deletes itself


From tom.sheffler at gmail.com  Thu Apr 19 11:37:50 2012
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Thu, 19 Apr 2012 08:37:50 -0700
Subject: [Twisted-web] Best way to avoid chunked encoding in HTTP Resource
	response?
Message-ID: <CAMBtMcsVuqauDtgxTSjkhmaM-adByLxxYGEyVwj4aG518=NGnA@mail.gmail.com>

A straightforward use of a series of request.write()s with a
request.finish() in the render_GET() method of a resource defaults to
chunked encoding.  I can avoid the chunked encoding by computing the entire
response first using a StringIO (as shown below) and explicitly putting the
"Content-Length" header in myself.

Is this the best (or recommended) way to create such a response?

Thx - Tom

=============

class myresource(Resource):

  def render_GET(self, response):
    output = StringIO.StringIO()
    output.write("...")
    output.write("...")
    ...

    data = output.getvalue()
    output.close()

    # Write the response data.  "content-length" suppresses chunked coding
    request.setHeader('content-length', len(data))
    request.write(data)
    request.finish()
    return True
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120419/02dfcc22/attachment.htm 

From ivan at ludios.org  Thu Apr 19 13:20:05 2012
From: ivan at ludios.org (Ivan Kozik)
Date: Thu, 19 Apr 2012 17:20:05 +0000
Subject: [Twisted-web] Best way to avoid chunked encoding in HTTP
	Resource response?
In-Reply-To: <CAMBtMcsVuqauDtgxTSjkhmaM-adByLxxYGEyVwj4aG518=NGnA@mail.gmail.com>
References: <CAMBtMcsVuqauDtgxTSjkhmaM-adByLxxYGEyVwj4aG518=NGnA@mail.gmail.com>
Message-ID: <CAKynti+uF+EVqR6wr-_egHY=P2u1L5VVsyRwCGWsNK9ye+-biw@mail.gmail.com>

On Thu, Apr 19, 2012 at 15:37, Tom Sheffler <tom.sheffler at gmail.com> wrote:
> Is this the best (or recommended) way to create such a response?

I don't think there's any need to close your StringIO.  You can also
use cStringIO.StringIO for better performance.  And you can just
return a string from your render_GET.  So, like this (untested):

 def render_GET(self, response):
    output = cStringIO.StringIO()
    output.write("...")
    output.write("...")
    return output.getvalue()

Ivan


