From jonathan+twisted at jsphere.com  Thu Mar  1 09:42:25 2012
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Thu, 1 Mar 2012 16:42:25 +0200
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
	<CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
	<20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>
	<CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>
Message-ID: <CAM187SGbpDLe__2aLmBOiV+QCOQsoCRaTRNcXuj2aQ9HFU8YuQ@mail.gmail.com>

On Wed, Feb 29, 2012 at 23:00, Jacek Furmankiewicz <jacek99 at gmail.com> wrote:
> OK, so the issue I have is that I cannot create two separate REST Resources
> with nested URLs ?e.g.
>
> class CustomerRestService(Resource):
> ? ? ?"""Handles REST operations for Customer /customer"""
> ? ? ?pass
>
> class CustomerAddressRestService(Resource):
> ? ? ?"""Handles REST operations for Customer Address
> /customer/<customerId>/address"""
> ? ? ?pass
>
> Instead I would need to have one common Resource that handles everything
> under '/customer',
> including the customer entity and customer address entity in one (and any
> other entity whose root is '/customer').

Perhaps I'm misunderstanding something here, but the idea with Twisted
resources (that aren't leaf resources) is not to have two things
handle the same path. The way the resource lookups work is that Site
loops through request.postpath from the root resource, locating child
resources one segment at a time, until it either runs out of path
segments *or* encounters a resource with isLeaf=True, that resource is
then rendered.

So in this example you might implement a CustomerIndexResource (that
exists at /customers) with a getChild method (/customers/<name>) that
creates a CustomerResource with some information (via a database call,
web service call, etc.). That CustomerResource then handles child
resource location for things like "address"
(/customers/<name>/address). This approach also makes it easier to do
things like swap out CustomerResource for ReadOnlyCustomerResource
that perhaps doesn't allow POST/PUT methods or prevents access to
certain child resources by not even having those child resources.

> That isn't a very good design...especially if you maybe have 50 different
> entities hooked up ?under '/customer' (like in our app).
> It seems in order to enable having nice cohesive classes that provide a REST
> service for just one entity I would need to manually
> route the request from the root Resource into each of them myself.

You can easily design a plugin system or other programmatic method for
handling dynamic child dispatch for these 50 methods on a customer
object.

Hope this helps.

-- 
Jonathan


From jacek99 at gmail.com  Thu Mar  1 09:59:32 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 1 Mar 2012 09:59:32 -0500
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <CAM187SGbpDLe__2aLmBOiV+QCOQsoCRaTRNcXuj2aQ9HFU8YuQ@mail.gmail.com>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
	<CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
	<20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>
	<CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>
	<CAM187SGbpDLe__2aLmBOiV+QCOQsoCRaTRNcXuj2aQ9HFU8YuQ@mail.gmail.com>
Message-ID: <CAGDztiEbYTS=js0rqMY9O0bm6RhOtbN=OBBrC36o=RLRD09_bw@mail.gmail.com>

That is exactly what I wanted to do (i.e. custom dispatching to child
classes from a single leaf Resource).

I just wasn't sure if that was the right approach. Thanks for validating my
approach.
Sorry if my initial question didn't really explain it clearly enough.

Cheers
Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120301/b44cb453/attachment.htm 

From exarkun at twistedmatrix.com  Fri Mar  2 09:18:04 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Mar 2012 14:18:04 -0000
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <CAGDztiEbYTS=js0rqMY9O0bm6RhOtbN=OBBrC36o=RLRD09_bw@mail.gmail.com>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
	<CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
	<20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>
	<CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>
	<CAM187SGbpDLe__2aLmBOiV+QCOQsoCRaTRNcXuj2aQ9HFU8YuQ@mail.gmail.com>
	<CAGDztiEbYTS=js0rqMY9O0bm6RhOtbN=OBBrC36o=RLRD09_bw@mail.gmail.com>
Message-ID: <20120302141804.9647.490298334.divmod.xquotient.21@localhost6.localdomain6>

On 1 Mar, 02:59 pm, jacek99 at gmail.com wrote:
>That is exactly what I wanted to do (i.e. custom dispatching to child
>classes from a single leaf Resource).

This sounds like the opposite conclusion as Jonathan (and earlier, me) 
was suggesting.  However, you trimmed *all* context from this reply, so 
perhaps I am not correctly interpreting you.

Anyway, good luck.

Jean-Paul


From jacek99 at gmail.com  Fri Mar  2 20:28:37 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Fri, 2 Mar 2012 20:28:37 -0500
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <20120302141804.9647.490298334.divmod.xquotient.21@localhost6.localdomain6>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
	<CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
	<20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>
	<CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>
	<CAM187SGbpDLe__2aLmBOiV+QCOQsoCRaTRNcXuj2aQ9HFU8YuQ@mail.gmail.com>
	<CAGDztiEbYTS=js0rqMY9O0bm6RhOtbN=OBBrC36o=RLRD09_bw@mail.gmail.com>
	<20120302141804.9647.490298334.divmod.xquotient.21@localhost6.localdomain6>
Message-ID: <CAGDztiHQr2ExD5Ev9gA8prkj32swTWJDGmvh8zNx44SjtyW-6Q@mail.gmail.com>

Well, maybe this will explain what I want to achieve, based on latest
(already working) code from trunk:

A sample of a REST app with two REST services exposed

https://github.com/jacek99/corepost/blob/master/corepost/test/rest_resource.py

There is a generic RESTResource (an actual twisted.web Resource) that
register child REST services (just regular classes).
It takes care of routing all the requests to them.

A human readable BDD that shows the unit tests for it:
https://github.com/jacek99/corepost/blob/master/corepost/test/feature/rest_app.feature

I am getting pretty happy with this API. It achieves what I wanted, needs
more thorough testing though before I release
an official version with it.

Cheers
Jacek

On Fri, Mar 2, 2012 at 9:18 AM, <exarkun at twistedmatrix.com> wrote:

> On 1 Mar, 02:59 pm, jacek99 at gmail.com wrote:
> >That is exactly what I wanted to do (i.e. custom dispatching to child
> >classes from a single leaf Resource).
>
> This sounds like the opposite conclusion as Jonathan (and earlier, me)
> was suggesting.  However, you trimmed *all* context from this reply, so
> perhaps I am not correctly interpreting you.
>
> Anyway, good luck.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120302/a85f65be/attachment.htm 

From jacek99 at gmail.com  Sun Mar  4 21:04:22 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Sun, 4 Mar 2012 21:04:22 -0500
Subject: [Twisted-web] CorePost 0.0.12 is out
Message-ID: <CAGDztiHNXaNzn-XpsBB4YWS8E3ODDYw+r6AaR-=uDrkURThoVA@mail.gmail.com>

Support for more advanced, nested URL routing with dynamic paths,
for building more complex REST apps with multiple nested services:

http://pypi.python.org/pypi/CorePost/

Due to some architectural changes, it contains some backwards incompatible
changes (minor).
Migration steps documented in release notes.

Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120304/6c7437eb/attachment.htm 

From jacek99 at gmail.com  Mon Mar  5 09:58:29 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Mon, 5 Mar 2012 09:58:29 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <5E29968F-F820-4E8D-A0D6-6CA941A06A14@twistedmatrix.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
	<1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
	<CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
	<5E29968F-F820-4E8D-A0D6-6CA941A06A14@twistedmatrix.com>
Message-ID: <CAGDztiGnSTXm=NAaT5NKCBd0sEDzNfVgCakcw5e2k-N0XUyamQ@mail.gmail.com>

Hi, I have an extra question going back to our original discussion on
security.

If I serve a Resource Avatar from a Realm, is there any built-in way to
attach something to the request as it is being intercepted by the Realm?

For example, for every request I would like to create a Principal object
(username,first name,last name, list of privileges, etc.) and attach it to
every request that has been authenticated.


From exarkun at twistedmatrix.com  Mon Mar  5 10:09:20 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Mar 2012 15:09:20 -0000
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiGnSTXm=NAaT5NKCBd0sEDzNfVgCakcw5e2k-N0XUyamQ@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
	<1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
	<CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
	<5E29968F-F820-4E8D-A0D6-6CA941A06A14@twistedmatrix.com>
	<CAGDztiGnSTXm=NAaT5NKCBd0sEDzNfVgCakcw5e2k-N0XUyamQ@mail.gmail.com>
Message-ID: <20120305150920.3083.1313863891.divmod.xquotient.2@localhost6.localdomain6>

On 02:58 pm, jacek99 at gmail.com wrote:
>Hi, I have an extra question going back to our original discussion on
>security.
>
>If I serve a Resource Avatar from a Realm, is there any built-in way to
>attach something to the request as it is being intercepted by the 
>Realm?
>
>For example, for every request I would like to create a Principal 
>object
>(username,first name,last name, list of privileges, etc.) and attach it 
>to
>every request that has been authenticated.
>> From the API I see, it seems you can serve a customized Resource (and 
>>that
>is fine for simpler admin vs read-only authentication schemes), but in 
>some
>cases you need really fine-grained APIs

It's actually fine for all cases, since it lets you do anything you 
want.  For example, make the principal an argument to your custom 
Resource, save it as an attribute, and use it to make future access 
control decisions.

Jean-Paul
>(where a decorator per each REST method may be the only option), so it
>would be good for every request to be linked with the Principal that
>represents the user making the request.
>
>Thanks for any suggestions
>Jacek


From jacek99 at gmail.com  Mon Mar  5 10:19:30 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Mon, 5 Mar 2012 10:19:30 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <20120305150920.3083.1313863891.divmod.xquotient.2@localhost6.localdomain6>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
	<1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
	<CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
	<5E29968F-F820-4E8D-A0D6-6CA941A06A14@twistedmatrix.com>
	<CAGDztiGnSTXm=NAaT5NKCBd0sEDzNfVgCakcw5e2k-N0XUyamQ@mail.gmail.com>
	<20120305150920.3083.1313863891.divmod.xquotient.2@localhost6.localdomain6>
Message-ID: <CAGDztiHnVLEfEuyBwFEgVB_WL9ctZRCj401S=U-_QekR-VDHKg@mail.gmail.com>

Hm, I would prefer to avoid that.

In my case, the cost of creating a new Resource is high (since it needs to
parse all the URLs it can dispatch to for all the REST services), therefore
I would prefer to cache a single ReadOnlyResource vs AdminResource (as an
example)
and just serve one or the other.

I guess that doesn't fit into the typical Twisted model that well :-(
Is there some sort of "post authentication" hook that I could listen to?

Jacek

On Mon, Mar 5, 2012 at 10:09 AM, <exarkun at twistedmatrix.com> wrote:

> On 02:58 pm, jacek99 at gmail.com wrote:
> >Hi, I have an extra question going back to our original discussion on
> >security.
> >
> >If I serve a Resource Avatar from a Realm, is there any built-in way to
> >attach something to the request as it is being intercepted by the
> >Realm?
> >
> >For example, for every request I would like to create a Principal
> >object
> >(username,first name,last name, list of privileges, etc.) and attach it
> >to
> >every request that has been authenticated.
> >> From the API I see, it seems you can serve a customized Resource (and
> >>that
> >is fine for simpler admin vs read-only authentication schemes), but in
> >some
> >cases you need really fine-grained APIs
>
> It's actually fine for all cases, since it lets you do anything you
> want.  For example, make the principal an argument to your custom
> Resource, save it as an attribute, and use it to make future access
> control decisions.
>
> Jean-Paul
> >(where a decorator per each REST method may be the only option), so it
> >would be good for every request to be linked with the Principal that
> >represents the user making the request.
> >
> >Thanks for any suggestions
> >Jacek
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120305/df7d8f70/attachment.htm 

From p.mayers at imperial.ac.uk  Mon Mar  5 12:45:13 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 05 Mar 2012 17:45:13 +0000
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiHnVLEfEuyBwFEgVB_WL9ctZRCj401S=U-_QekR-VDHKg@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
	<1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
	<CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
	<5E29968F-F820-4E8D-A0D6-6CA941A06A14@twistedmatrix.com>
	<CAGDztiGnSTXm=NAaT5NKCBd0sEDzNfVgCakcw5e2k-N0XUyamQ@mail.gmail.com>
	<20120305150920.3083.1313863891.divmod.xquotient.2@localhost6.localdomain6>
	<CAGDztiHnVLEfEuyBwFEgVB_WL9ctZRCj401S=U-_QekR-VDHKg@mail.gmail.com>
Message-ID: <4F54FBA9.50203@imperial.ac.uk>

On 05/03/12 15:19, Jacek Furmankiewicz wrote:
> Hm, I would prefer to avoid that.
>
> In my case, the cost of creating a new Resource is high (since it needs
> to parse all the URLs it can dispatch to for all the REST services),
> therefore I would prefer to cache a single ReadOnlyResource vs
> AdminResource (as an example)

If you search the archives, you will find discussions on this.

The general conclusion was: Resource objects should be lightweight and 
fast. If you've got expensive stuff, pre-computer / cache / share / 
whatever, and make your Resource objects talk to the cache.

> and just serve one or the other.

So? Do that:

avatars = {}

class MyRealm:
   def requestAvatar(...):

     if is_admin(avatarId):
       if not 'admin' in avatars:
          avatars['admin'] = MyAdmin()
       return avatars['admin'], ...

Of course, you'll be re-using the same avatar for all admins, and won't 
be able to distinguish them, or access their usernames.

Alternatively you might have a lightweight resource that just does 
simple authorization / logging, and passes render calls through to the 
heavyweight resource:

class MyAdmin():
   def render(...):
     request.username = self.username
     return CachedHeavyAdmin.render(request, ...)

class MyRealm():
   def requestAvatar(...):
     if is_admin(avatarId):
       r = MyAdmin()
       r.username = avatarId
       return r





From jacek99 at gmail.com  Mon Mar  5 12:51:19 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Mon, 5 Mar 2012 12:51:19 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <4F54FBA9.50203@imperial.ac.uk>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
	<1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
	<CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
	<5E29968F-F820-4E8D-A0D6-6CA941A06A14@twistedmatrix.com>
	<CAGDztiGnSTXm=NAaT5NKCBd0sEDzNfVgCakcw5e2k-N0XUyamQ@mail.gmail.com>
	<20120305150920.3083.1313863891.divmod.xquotient.2@localhost6.localdomain6>
	<CAGDztiHnVLEfEuyBwFEgVB_WL9ctZRCj401S=U-_QekR-VDHKg@mail.gmail.com>
	<4F54FBA9.50203@imperial.ac.uk>
Message-ID: <CAGDztiE5cexzn2SfHrDZ+AaQMGVbWByVGkRCO5PPZNrZte00-w@mail.gmail.com>

Got it. The latter approach makes sense.

Thank you
Jacek

On Mon, Mar 5, 2012 at 12:45 PM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> On 05/03/12 15:19, Jacek Furmankiewicz wrote:
> > Hm, I would prefer to avoid that.
> >
> > In my case, the cost of creating a new Resource is high (since it needs
> > to parse all the URLs it can dispatch to for all the REST services),
> > therefore I would prefer to cache a single ReadOnlyResource vs
> > AdminResource (as an example)
>
> If you search the archives, you will find discussions on this.
>
> The general conclusion was: Resource objects should be lightweight and
> fast. If you've got expensive stuff, pre-computer / cache / share /
> whatever, and make your Resource objects talk to the cache.
>
> > and just serve one or the other.
>
> So? Do that:
>
> avatars = {}
>
> class MyRealm:
>   def requestAvatar(...):
>
>     if is_admin(avatarId):
>       if not 'admin' in avatars:
>          avatars['admin'] = MyAdmin()
>       return avatars['admin'], ...
>
> Of course, you'll be re-using the same avatar for all admins, and won't
> be able to distinguish them, or access their usernames.
>
> Alternatively you might have a lightweight resource that just does
> simple authorization / logging, and passes render calls through to the
> heavyweight resource:
>
> class MyAdmin():
>   def render(...):
>     request.username = self.username
>     return CachedHeavyAdmin.render(request, ...)
>
> class MyRealm():
>   def requestAvatar(...):
>     if is_admin(avatarId):
>       r = MyAdmin()
>       r.username = avatarId
>       return r
>
>
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120305/b8c81538/attachment.htm 

From jacek99 at gmail.com  Thu Mar  8 13:26:27 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 8 Mar 2012 13:26:27 -0500
Subject: [Twisted-web] CorePost 0.0.12 is out
In-Reply-To: <CAGDztiHNXaNzn-XpsBB4YWS8E3ODDYw+r6AaR-=uDrkURThoVA@mail.gmail.com>
References: <CAGDztiHNXaNzn-XpsBB4YWS8E3ODDYw+r6AaR-=uDrkURThoVA@mail.gmail.com>
Message-ID: <CAGDztiEwbAZwMnKc0d79NBHQc0z4=3MtEw9F3c1pUZrxXYZKQw@mail.gmail.com>

Just a minor update:

Got a first iteration of proper HTML docs:
http://jacek99.github.com/corepost/

and PDF:
https://github.com/jacek99/corepost/raw/master/doc/build/latex/CorePost.pdf

to clearly explain what CorePost is (in particular what it adds on top of
the core twisted.web APIs), introduce new users to Twisted and point them
to the proper tutorials, etc.

Cheers
Jacek

On Sun, Mar 4, 2012 at 9:04 PM, Jacek Furmankiewicz <jacek99 at gmail.com>wrote:

> Support for more advanced, nested URL routing with dynamic paths,
> for building more complex REST apps with multiple nested services:
>
> http://pypi.python.org/pypi/CorePost/
>
> Due to some architectural changes, it contains some backwards incompatible
> changes (minor).
> Migration steps documented in release notes.
>
> Jacek
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120308/beb2751b/attachment.htm 

From jacek99 at gmail.com  Thu Mar  8 17:45:38 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 8 Mar 2012 17:45:38 -0500
Subject: [Twisted-web] PB vs Foolscap vs AMP?
Message-ID: <CAGDztiGWmQkCCuukAs-P-Hz1g6ThgBaNnaqa=5v+B9aCHjmH4A@mail.gmail.com>

Hi,

I am trying to do some research on what is the most performant method for a
Twisted server to speak to a client running in a separate process.
The default solution in Twisted seems to be Perspective Broker, but then
there is AMP and Foolscap as well.

Has anyone ever done any benchmarks comparing those? I'd like to have an
idea as to which one is most likely to give me the best performance.

Thanks in advance
Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120308/1d87ae13/attachment.htm 

From glyph at twistedmatrix.com  Thu Mar  8 17:50:09 2012
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 8 Mar 2012 14:50:09 -0800
Subject: [Twisted-web] PB vs Foolscap vs AMP?
In-Reply-To: <CAGDztiGWmQkCCuukAs-P-Hz1g6ThgBaNnaqa=5v+B9aCHjmH4A@mail.gmail.com>
References: <CAGDztiGWmQkCCuukAs-P-Hz1g6ThgBaNnaqa=5v+B9aCHjmH4A@mail.gmail.com>
Message-ID: <995E38FB-A217-4B08-AFFC-9F302278BE2C@twistedmatrix.com>


On Mar 8, 2012, at 2:45 PM, Jacek Furmankiewicz wrote:

> I am trying to do some research on what is the most performant method for a Twisted server to speak to a client running in a separate process.
> 
> The default solution in Twisted seems to be Perspective Broker, but then there is AMP and Foolscap as well.
> 
> Has anyone ever done any benchmarks comparing those? I'd like to have an idea as to which one is most likely to give me the best performance.

AMP is fastest.  It's not really possible to directly compare, because PB and Foolscap respectively have more features, but compare here:

http://speed.twistedmatrix.com/timeline/?exe=2%2C4&base=none&ben=pb&env=d3&revs=200

and

http://speed.twistedmatrix.com/timeline/?exe=2%2C4&base=none&ben=amp&env=d3&revs=200

You're of course welcome to contribute optimizations to PB :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120308/8ac2101b/attachment.htm 

From jacek99 at gmail.com  Thu Mar  8 17:54:42 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 8 Mar 2012 17:54:42 -0500
Subject: [Twisted-web] PB vs Foolscap vs AMP?
In-Reply-To: <995E38FB-A217-4B08-AFFC-9F302278BE2C@twistedmatrix.com>
References: <CAGDztiGWmQkCCuukAs-P-Hz1g6ThgBaNnaqa=5v+B9aCHjmH4A@mail.gmail.com>
	<995E38FB-A217-4B08-AFFC-9F302278BE2C@twistedmatrix.com>
Message-ID: <CAGDztiFg1656Lo-p=6R5v2R3bzOGFvk5OK6V1jsR7ObmZRL2yQ@mail.gmail.com>

Great, thanks! It would be great if someone had done comparisons with
txZMQ<https://github.com/smira/txZMQ>as well
but I guess I'll have to play with that myself.

Jacek

On Thu, Mar 8, 2012 at 5:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Mar 8, 2012, at 2:45 PM, Jacek Furmankiewicz wrote:
>
> I am trying to do some research on what is the most performant method for
> a Twisted server to speak to a client running in a separate process.
>
>
> The default solution in Twisted seems to be Perspective Broker, but then
> there is AMP and Foolscap as well.
>
> Has anyone ever done any benchmarks comparing those? I'd like to have an
> idea as to which one is most likely to give me the best performance.
>
>
> AMP is fastest.  It's not really possible to *directly* compare, because
> PB and Foolscap respectively have more features, but compare here:
>
>
> http://speed.twistedmatrix.com/timeline/?exe=2%2C4&base=none&ben=pb&env=d3&revs=200
>
> and
>
>
> http://speed.twistedmatrix.com/timeline/?exe=2%2C4&base=none&ben=amp&env=d3&revs=200
>
> You're of course welcome to contribute optimizations to PB :).
>
> -glyph
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120308/c29233d4/attachment.htm 

From dynamicgl at gmail.com  Sat Mar 10 01:07:38 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 10 Mar 2012 14:07:38 +0800
Subject: [Twisted-web] PB vs Foolscap vs AMP?
In-Reply-To: <CAGDztiFg1656Lo-p=6R5v2R3bzOGFvk5OK6V1jsR7ObmZRL2yQ@mail.gmail.com>
References: <CAGDztiGWmQkCCuukAs-P-Hz1g6ThgBaNnaqa=5v+B9aCHjmH4A@mail.gmail.com>
	<995E38FB-A217-4B08-AFFC-9F302278BE2C@twistedmatrix.com>
	<CAGDztiFg1656Lo-p=6R5v2R3bzOGFvk5OK6V1jsR7ObmZRL2yQ@mail.gmail.com>
Message-ID: <CABkOF6RB=VcbFhzKEuQ+ouBL-sRL8yBVfkUDRkCYkPCKjEYJgQ@mail.gmail.com>

On Fri, Mar 9, 2012 at 6:54 AM, Jacek Furmankiewicz <jacek99 at gmail.com>wrote:

> Great, thanks! It would be great if someone had done comparisons with
> txZMQ <https://github.com/smira/txZMQ> as well
> but I guess I'll have to play with that myself.
>
> Jacek
>
> On Thu, Mar 8, 2012 at 5:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:
>
>>
>> On Mar 8, 2012, at 2:45 PM, Jacek Furmankiewicz wrote:
>>
>> I am trying to do some research on what is the most performant method for
>> a Twisted server to speak to a client running in a separate process.
>>
>>
>> The default solution in Twisted seems to be Perspective Broker, but then
>> there is AMP and Foolscap as well.
>>
>> Has anyone ever done any benchmarks comparing those? I'd like to have an
>> idea as to which one is most likely to give me the best performance.
>>
>>
>> AMP is fastest.  It's not really possible to *directly* compare, because
>> PB and Foolscap respectively have more features, but compare here:
>>
>>
>> http://speed.twistedmatrix.com/timeline/?exe=2%2C4&base=none&ben=pb&env=d3&revs=200
>>
>> and
>>
>>
>> http://speed.twistedmatrix.com/timeline/?exe=2%2C4&base=none&ben=amp&env=d3&revs=200
>>
>> You're of course welcome to contribute optimizations to PB :).
>>
>> -glyph
>>
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
Based on my experience, AMP is the fastest and then Pb, fullscap is the
last one. I suggest using Pb first.. it is very nice and the performance
isn't bad. (At my machine, It can handle 5K req/s, 2K req/s for foolscap)..

I am not an expert on foolscap and I believe there are rooms for
improvement, moreover, foolscap provides more features in terms of security.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120310/e91d1690/attachment.htm 

From jacek99 at gmail.com  Mon Mar 19 17:19:36 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Mon, 19 Mar 2012 17:19:36 -0400
Subject: [Twisted-web] CorePost 0.0.14 is out: automatic parsing of
 arguments from JSON, YAML and XML docs
Message-ID: <CAGDztiH37EZA8TLYqKQOKSWhECD+rgAdpPjvinG8j-FBX=UEuA@mail.gmail.com>

Version 0.0.14 of the CorePost Twisted REST microframework is out.

This new release has a nice set of enhancements for automatically parsing
incoming JSON, YAML or XML document payloads
and extracting them for arguments into router methods:

Documented on github:
http://jacek99.github.com/corepost/argument_parsing.html

Cheers
Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120319/762e9cfa/attachment.htm 

From ilja.livenson at gmail.com  Tue Mar 20 09:49:09 2012
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Tue, 20 Mar 2012 14:49:09 +0100
Subject: [Twisted-web] accessing tls session from twisted web
Message-ID: <CAF8QyE8U30jsYbwM5kwuu_yL5TfUVqUaR-Mz-F5ae5BP7rwtoQ@mail.gmail.com>

Hi, all

I have a twisted web server, exposing https interface. What I'm trying
to do now is to support usage of two-way tls authentication and use
data from the client certificate as a seed for authenticated avatar.
Any hints as to how to do that in the best way? I guess it should be
done before Realm's requestAvatar method is called?

thanks for your input!

Ilya

PS. Roughly speaking the code for that part looks like this:

wrapper = guard.HTTPAuthSessionWrapper(Portal(SimpleRealm(),
used_checkers), authn_methods)
reactor.listenSSL(8080, server.Site(resource=wrapper), contextFactory
= sslContext)


