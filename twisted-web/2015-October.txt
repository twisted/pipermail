From hawkowl at atleastfornow.net  Mon Oct 12 19:33:42 2015
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 13 Oct 2015 09:33:42 +0800
Subject: [Twisted-web] Changes to Twisted's binary distribution
Message-ID: <4DF8DEC8-6EA9-4EE6-9808-D98C11088DE2@atleastfornow.net>

Hi everyone,

Just letting everyone know, the next release (Twisted 15.5) will not include MSI or EXE installers for Windows, only binary wheels, and installation through pip or from source dist will be the only supported method of installation. The exe/msi installers didn't work well (or at all?) for virtualenvs, and when we (eventually) start shipping binary wheels for OS X, it'll make everything more consistent.

Regards,

Amber "Hawkie" Brown
Twisted Release manager
GPG: https://keybase.io/hawkowl
hawkowl at atleastfornow.net


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-web/attachments/20151013/7c54c937/attachment.pgp>

From rgacote at appropriatesolutions.com  Tue Oct 13 14:38:38 2015
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Tue, 13 Oct 2015 16:38:38 -0400
Subject: [Twisted-web] Changes to Twisted's binary distribution
In-Reply-To: <4DF8DEC8-6EA9-4EE6-9808-D98C11088DE2@atleastfornow.net>
References: <4DF8DEC8-6EA9-4EE6-9808-D98C11088DE2@atleastfornow.net>
Message-ID: <CAG5tnzofDsbXEOAxmBd7-4iWK=N7emXYcha29PAUMOWSF4APhA@mail.gmail.com>

On Mon, Oct 12, 2015 at 9:33 PM, Amber "Hawkie" Brown <
hawkowl at atleastfornow.net> wrote:

> Just letting everyone know, the next release (Twisted 15.5) will not
> include MSI or EXE installers for Windows, only binary wheels, and
> installation through pip or from source dist will be the only supported
> method of installation. The exe/msi installers didn't work well (or at
> all?) for virtualenvs, and when we (eventually) start shipping binary
> wheels for OS X, it'll make everything more consistent.
>

This is tremendously welcome news. Congrats!


-- 
Raymond Cote, President
voice: +1.603.924.6079 email: rgacote at AppropriateSolutions.com skype:
ray.cote
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-web/attachments/20151013/1c41a690/attachment.html>

From glyph at twistedmatrix.com  Tue Oct 13 18:18:48 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 13 Oct 2015 17:18:48 -0700
Subject: [Twisted-web] Changes to Twisted's binary distribution
In-Reply-To: <CAG5tnzofDsbXEOAxmBd7-4iWK=N7emXYcha29PAUMOWSF4APhA@mail.gmail.com>
References: <4DF8DEC8-6EA9-4EE6-9808-D98C11088DE2@atleastfornow.net>
 <CAG5tnzofDsbXEOAxmBd7-4iWK=N7emXYcha29PAUMOWSF4APhA@mail.gmail.com>
Message-ID: <4E6DB325-B673-4EF7-A8EF-4CAC300EFA74@twistedmatrix.com>


> On Oct 13, 2015, at 1:38 PM, Ray Cote <rgacote at appropriatesolutions.com> wrote:
> 
> 
> On Mon, Oct 12, 2015 at 9:33 PM, Amber "Hawkie" Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> Just letting everyone know, the next release (Twisted 15.5) will not include MSI or EXE installers for Windows, only binary wheels, and installation through pip or from source dist will be the only supported method of installation. The exe/msi installers didn't work well (or at all?) for virtualenvs, and when we (eventually) start shipping binary wheels for OS X, it'll make everything more consistent.
> 
> This is tremendously welcome news. Congrats!

I hope that our other efforts to stop doing things are met with such enthusiasm :-)

Thanks!

-glyph

P.S.: seriously though this is a good move, I am also excited about it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-web/attachments/20151013/d6dc4155/attachment.html>

From 2500994985 at qq.com  Tue Oct 13 22:39:00 2015
From: 2500994985 at qq.com (=?utf-8?B?YSfjgp4g5a2Q5aWIPz/mnqrouabni5flj4s=?=)
Date: Wed, 14 Oct 2015 12:39:00 +0800
Subject: [Twisted-web] Twisted-web Digest, Vol 128, Issue 1
In-Reply-To: <mailman.3.1444759201.22794.twisted-web@twistedmatrix.com>
References: <mailman.3.1444759201.22794.twisted-web@twistedmatrix.com>
Message-ID: <tencent_27601DFC1EF72B4435836996@qq.com>

9?QQ?????http://yz.hzhack.com/?post=8
8?QQ?????http://yz.hzhack.com/?post=7
?????????????????????????2500994985? 





------------------ Original ------------------
From:  "twisted-web-request";<twisted-web-request at twistedmatrix.com>;
Date:  Wed, Oct 14, 2015 02:00 AM
To:  "twisted-web"<twisted-web at twistedmatrix.com>; 

Subject:  Twisted-web Digest, Vol 128, Issue 1



Send Twisted-web mailing list submissions to
	twisted-web at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
	http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
or, via email, send a message with subject or body 'help' to
	twisted-web-request at twistedmatrix.com

You can reach the person managing the list at
	twisted-web-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-web digest..."


Today's Topics:

   1. Changes to Twisted's binary distribution (Amber "Hawkie" Brown)


----------------------------------------------------------------------

Message: 1
Date: Tue, 13 Oct 2015 09:33:42 +0800
From: "Amber \"Hawkie\" Brown" <hawkowl at atleastfornow.net>
To: twisted-web at twistedmatrix.com, Twisted-Python
	<twisted-python at twistedmatrix.com>
Subject: [Twisted-web] Changes to Twisted's binary distribution
Message-ID: <4DF8DEC8-6EA9-4EE6-9808-D98C11088DE2 at atleastfornow.net>
Content-Type: text/plain; charset="us-ascii"

Hi everyone,

Just letting everyone know, the next release (Twisted 15.5) will not include MSI or EXE installers for Windows, only binary wheels, and installation through pip or from source dist will be the only supported method of installation. The exe/msi installers didn't work well (or at all?) for virtualenvs, and when we (eventually) start shipping binary wheels for OS X, it'll make everything more consistent.

Regards,

Amber "Hawkie" Brown
Twisted Release manager
GPG: https://keybase.io/hawkowl
hawkowl at atleastfornow.net


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-web/attachments/20151013/7c54c937/attachment-0001.pgp>

------------------------------

_______________________________________________
Twisted-web mailing list
Twisted-web at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


End of Twisted-web Digest, Vol 128, Issue 1
*******************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-web/attachments/20151014/a9a6d9b3/attachment.html>

From glyph at twistedmatrix.com  Tue Oct 13 22:53:29 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 13 Oct 2015 21:53:29 -0700
Subject: [Twisted-web] Twisted-web Digest, Vol 128, Issue 1
In-Reply-To: <tencent_27601DFC1EF72B4435836996@qq.com>
References: <mailman.3.1444759201.22794.twisted-web@twistedmatrix.com>
 <tencent_27601DFC1EF72B4435836996@qq.com>
Message-ID: <9397004E-D8F8-45E1-BEA7-5257EFD159E6@twistedmatrix.com>

On Oct 13, 2015, at 9:39 PM, a'? ???????? <2500994985 at qq.com> wrote:
> [some spam]

Sorry everybody; that person is now unsubscribed.

-glyph

From hawkowl at atleastfornow.net  Sun Oct 25 18:48:07 2015
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Mon, 26 Oct 2015 08:48:07 +0800
Subject: [Twisted-web] Changing the Twisted Compatibility Policy
Message-ID: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>

Hi everyone,

As many know, one of the things that makes the Twisted project so unique is our conformance to our Compatibility Policy. This policy means that users of Twisted can freely upgrade between versions with all incompatibilities being warned about before causing code to break. However, for a while, one part of the compatibility policy has caused issues - what we do with code that has been deprecated for a long time, and at least the release +  2 & 1 year after.

The existing policy states:

"Removal should happen once the deprecated API becomes an additional maintenance burden. For example, if it makes implementation of a new feature more difficult, if it makes documentation of non-deprecated APIs more confusing, or if its unit tests become an undue burden on the continuous integration system. Removal should not be undertaken just to follow a timeline."

This makes the only reasonable cause for any code being removed from Twisted is if it is a maintenance burden, but does not take into account the effect that keeping large amounts of deprecated code has on new, existing, and future Twisted users. It does specify that it should be removed if it makes documentation of non-deprecated APIs confusing, but by its very existence, it makes what should be "best practice" more confusing -- especially if the deprecated API is "simpler" at first glance, but was deprecated because of vast underlying issues,

Discussions have come to the conclusion that the exact reverse of this policy should be instated:

"Removal of code should occur as soon as the deprecation grace period has ended."

The reason for this is that a leaner Twisted is a better Twisted -- we should strive to not break existing applications, but we have the deprecation policy in place to ensure that breakage is, if all goes to plan, never out of the blue. Less code surface means that Twisted is easier to learn for new users and Twisted-using projects onboarding new people, easier to use for established users with a clear best practice, and easier to maintain because the codebase is not a web of things we deprecated and then never removed. We believe this change benefits everyone.

This is also similar to the deprecation policy of another time-based releasing project, Django (https://docs.djangoproject.com/en/1.8/internals/release-process/#internal-release-deprecation-policy), where releases are every 9 months and code is *always* removed in Release where deprecated + 2, giving them a deprecation grace period of up to 1 and a half years.

If you have any opinions on this change, please let me know, and we'll take it all into account before changing the policy.

Twisted Regards,
Amber "Hawkie" Brown
Twisted Release Manager
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-web/attachments/20151026/1d106076/attachment.pgp>

From phil at bubblehouse.org  Sun Oct 25 19:01:13 2015
From: phil at bubblehouse.org (Phil Christensen)
Date: Sun, 25 Oct 2015 21:01:13 -0400
Subject: [Twisted-web] Changing the Twisted Compatibility Policy
In-Reply-To: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>
References: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>
Message-ID: <03134EBE-6DCB-470F-89DA-B8B270DD22A9@bubblehouse.org>

I've been subject to the Django versioning/deprecation process for some time, and I agree with Amber

-Phil
sent from my phone

> On Oct 25, 2015, at 8:48 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> Hi everyone,
> 
> As many know, one of the things that makes the Twisted project so unique is our conformance to our Compatibility Policy. This policy means that users of Twisted can freely upgrade between versions with all incompatibilities being warned about before causing code to break. However, for a while, one part of the compatibility policy has caused issues - what we do with code that has been deprecated for a long time, and at least the release +  2 & 1 year after.
> 
> The existing policy states:
> 
> "Removal should happen once the deprecated API becomes an additional maintenance burden. For example, if it makes implementation of a new feature more difficult, if it makes documentation of non-deprecated APIs more confusing, or if its unit tests become an undue burden on the continuous integration system. Removal should not be undertaken just to follow a timeline."
> 
> This makes the only reasonable cause for any code being removed from Twisted is if it is a maintenance burden, but does not take into account the effect that keeping large amounts of deprecated code has on new, existing, and future Twisted users. It does specify that it should be removed if it makes documentation of non-deprecated APIs confusing, but by its very existence, it makes what should be "best practice" more confusing -- especially if the deprecated API is "simpler" at first glance, but was deprecated because of vast underlying issues,
> 
> Discussions have come to the conclusion that the exact reverse of this policy should be instated:
> 
> "Removal of code should occur as soon as the deprecation grace period has ended."
> 
> The reason for this is that a leaner Twisted is a better Twisted -- we should strive to not break existing applications, but we have the deprecation policy in place to ensure that breakage is, if all goes to plan, never out of the blue. Less code surface means that Twisted is easier to learn for new users and Twisted-using projects onboarding new people, easier to use for established users with a clear best practice, and easier to maintain because the codebase is not a web of things we deprecated and then never removed. We believe this change benefits everyone.
> 
> This is also similar to the deprecation policy of another time-based releasing project, Django (https://docs.djangoproject.com/en/1.8/internals/release-process/#internal-release-deprecation-policy), where releases are every 9 months and code is *always* removed in Release where deprecated + 2, giving them a deprecation grace period of up to 1 and a half years.
> 
> If you have any opinions on this change, please let me know, and we'll take it all into account before changing the policy.
> 
> Twisted Regards,
> Amber "Hawkie" Brown
> Twisted Release Manager
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From phil at bubblehouse.org  Sun Oct 25 19:09:44 2015
From: phil at bubblehouse.org (Phil Christensen)
Date: Sun, 25 Oct 2015 21:09:44 -0400
Subject: [Twisted-web] Changing the Twisted Compatibility Policy
In-Reply-To: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>
References: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>
Message-ID: <EDF99ADC-E4B5-49E7-915F-D948898E8E25@bubblehouse.org>

Sorry for the double post, I accidentally hit send too early.

I've been subject to the Django versioning/deprecation process for some time, and I agree with Amber. In practice, I usually pin Twisted apps to the version deployed when I hand them over to a client, and only install point releases until the next time I do major work/maintenance.

But the size of the Twisted codebase can be a challenge as well as an asset, so any work towards removing old cruft is a great initiative.

-Phil
sent from my phone

> On Oct 25, 2015, at 8:48 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> Hi everyone,
> 
> As many know, one of the things that makes the Twisted project so unique is our conformance to our Compatibility Policy. This policy means that users of Twisted can freely upgrade between versions with all incompatibilities being warned about before causing code to break. However, for a while, one part of the compatibility policy has caused issues - what we do with code that has been deprecated for a long time, and at least the release +  2 & 1 year after.
> 
> The existing policy states:
> 
> "Removal should happen once the deprecated API becomes an additional maintenance burden. For example, if it makes implementation of a new feature more difficult, if it makes documentation of non-deprecated APIs more confusing, or if its unit tests become an undue burden on the continuous integration system. Removal should not be undertaken just to follow a timeline."
> 
> This makes the only reasonable cause for any code being removed from Twisted is if it is a maintenance burden, but does not take into account the effect that keeping large amounts of deprecated code has on new, existing, and future Twisted users. It does specify that it should be removed if it makes documentation of non-deprecated APIs confusing, but by its very existence, it makes what should be "best practice" more confusing -- especially if the deprecated API is "simpler" at first glance, but was deprecated because of vast underlying issues,
> 
> Discussions have come to the conclusion that the exact reverse of this policy should be instated:
> 
> "Removal of code should occur as soon as the deprecation grace period has ended."
> 
> The reason for this is that a leaner Twisted is a better Twisted -- we should strive to not break existing applications, but we have the deprecation policy in place to ensure that breakage is, if all goes to plan, never out of the blue. Less code surface means that Twisted is easier to learn for new users and Twisted-using projects onboarding new people, easier to use for established users with a clear best practice, and easier to maintain because the codebase is not a web of things we deprecated and then never removed. We believe this change benefits everyone.
> 
> This is also similar to the deprecation policy of another time-based releasing project, Django (https://docs.djangoproject.com/en/1.8/internals/release-process/#internal-release-deprecation-policy), where releases are every 9 months and code is *always* removed in Release where deprecated + 2, giving them a deprecation grace period of up to 1 and a half years.
> 
> If you have any opinions on this change, please let me know, and we'll take it all into account before changing the policy.
> 
> Twisted Regards,
> Amber "Hawkie" Brown
> Twisted Release Manager
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From rgacote at appropriatesolutions.com  Sun Oct 25 19:23:53 2015
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Sun, 25 Oct 2015 21:23:53 -0400
Subject: [Twisted-web] Changing the Twisted Compatibility Policy
In-Reply-To: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>
References: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>
Message-ID: <CAG5tnzqAw98xQwCJ_rHJZA3Mzgo_9rE=cfgYWS398TukLWZWtw@mail.gmail.com>

This is a reasonable change.

I say that as someone who rarely tracks individual Twisted releases. We
typically upgrade client-deployed applications every three to five years
(at the moment, I?m working on upgrading several projects from 12.1 to
15.4).

For us, being able to easily track back through release notes to understand
why specific methods are no longer available is extremely important as our
upgrade cycle frequently exceeds the deprecation/removal timeframe. These
long update times work for us because our typical Twisted deploy is
embedded deep inside an environment and not exposed directly to public
hazards. As such, we?re not quite as sensitive to public attack vectors ?
and our clients typically prefer long-term stable environments.
?Ray

On Sun, Oct 25, 2015 at 8:48 PM, Amber "Hawkie" Brown <
hawkowl at atleastfornow.net> wrote:

> Hi everyone,
>
> As many know, one of the things that makes the Twisted project so unique
> is our conformance to our Compatibility Policy. This policy means that
> users of Twisted can freely upgrade between versions with all
> incompatibilities being warned about before causing code to break. However,
> for a while, one part of the compatibility policy has caused issues - what
> we do with code that has been deprecated for a long time, and at least the
> release +  2 & 1 year after.
>
> The existing policy states:
>
> "Removal should happen once the deprecated API becomes an additional
> maintenance burden. For example, if it makes implementation of a new
> feature more difficult, if it makes documentation of non-deprecated APIs
> more confusing, or if its unit tests become an undue burden on the
> continuous integration system. Removal should not be undertaken just to
> follow a timeline."
>
> This makes the only reasonable cause for any code being removed from
> Twisted is if it is a maintenance burden, but does not take into account
> the effect that keeping large amounts of deprecated code has on new,
> existing, and future Twisted users. It does specify that it should be
> removed if it makes documentation of non-deprecated APIs confusing, but by
> its very existence, it makes what should be "best practice" more confusing
> -- especially if the deprecated API is "simpler" at first glance, but was
> deprecated because of vast underlying issues,
>
> Discussions have come to the conclusion that the exact reverse of this
> policy should be instated:
>
> "Removal of code should occur as soon as the deprecation grace period has
> ended."
>
> The reason for this is that a leaner Twisted is a better Twisted -- we
> should strive to not break existing applications, but we have the
> deprecation policy in place to ensure that breakage is, if all goes to
> plan, never out of the blue. Less code surface means that Twisted is easier
> to learn for new users and Twisted-using projects onboarding new people,
> easier to use for established users with a clear best practice, and easier
> to maintain because the codebase is not a web of things we deprecated and
> then never removed. We believe this change benefits everyone.
>
> This is also similar to the deprecation policy of another time-based
> releasing project, Django (
> https://docs.djangoproject.com/en/1.8/internals/release-process/#internal-release-deprecation-policy),
> where releases are every 9 months and code is *always* removed in Release
> where deprecated + 2, giving them a deprecation grace period of up to 1 and
> a half years.
>
> If you have any opinions on this change, please let me know, and we'll
> take it all into account before changing the policy.
>
> Twisted Regards,
> Amber "Hawkie" Brown
> Twisted Release Manager
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>


-- 
Raymond Cote, President
voice: +1.603.924.6079 email: rgacote at AppropriateSolutions.com skype:
ray.cote
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-web/attachments/20151025/09c559b9/attachment.html>

From glyph at twistedmatrix.com  Sun Oct 25 21:34:44 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 25 Oct 2015 20:34:44 -0700
Subject: [Twisted-web] Changing the Twisted Compatibility Policy
In-Reply-To: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>
References: <F014B67C-1A19-445F-9723-6F862FF74849@atleastfornow.net>
Message-ID: <167E1C3A-BB30-41B3-A1F9-D5C316BD6290@twistedmatrix.com>


> On Oct 25, 2015, at 5:48 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> Hi everyone,
> 
> As many know, one of the things that makes the Twisted project so unique is our conformance to our Compatibility Policy. This policy means that users of Twisted can freely upgrade between versions with all incompatibilities being warned about before causing code to break. However, for a while, one part of the compatibility policy has caused issues - what we do with code that has been deprecated for a long time, and at least the release +  2 & 1 year after.
> 
> The existing policy states:
> 
> "Removal should happen once the deprecated API becomes an additional maintenance burden. For example, if it makes implementation of a new feature more difficult, if it makes documentation of non-deprecated APIs more confusing, or if its unit tests become an undue burden on the continuous integration system. Removal should not be undertaken just to follow a timeline."
> 
> This makes the only reasonable cause for any code being removed from Twisted is if it is a maintenance burden, but does not take into account the effect that keeping large amounts of deprecated code has on new, existing, and future Twisted users. It does specify that it should be removed if it makes documentation of non-deprecated APIs confusing, but by its very existence, it makes what should be "best practice" more confusing -- especially if the deprecated API is "simpler" at first glance, but was deprecated because of vast underlying issues,
> 
> Discussions have come to the conclusion that the exact reverse of this policy should be instated:
> 
> "Removal of code should occur as soon as the deprecation grace period has ended."
> 
> The reason for this is that a leaner Twisted is a better Twisted -- we should strive to not break existing applications, but we have the deprecation policy in place to ensure that breakage is, if all goes to plan, never out of the blue. Less code surface means that Twisted is easier to learn for new users and Twisted-using projects onboarding new people, easier to use for established users with a clear best practice, and easier to maintain because the codebase is not a web of things we deprecated and then never removed. We believe this change benefits everyone.
> 
> This is also similar to the deprecation policy of another time-based releasing project, Django (https://docs.djangoproject.com/en/1.8/internals/release-process/#internal-release-deprecation-policy), where releases are every 9 months and code is *always* removed in Release where deprecated + 2, giving them a deprecation grace period of up to 1 and a half years.
> 
> If you have any opinions on this change, please let me know, and we'll take it all into account before changing the policy.

I am generally in favor, for the reasons that the other participants already said: removing things faster results in a cleaner codebase that's easier to figure out.

However, I feel like making "get rid of deprecated code faster" be the first thing we do to mitigate these costs might be putting the cart before the horse.  The costs of maintaining large piles of legacy API surface are definitely not trivial.  A few are:

Maintainers have to read and understand more code when maintaining a feature, regardless of whether that code ultimately impacts the code being modified.
Testing more code means longer test runs for everyone.  Older, deprecated code is more likely to have test cases that require the reactor to run, so in many cases it can also mean less reliable test runs.
Example code, in Twisted, in Twisted's documentation, and on other sites, may continue to refer to deprecated APIs.  Given that this appears to work, the transition takes longer because new users start using old APIs.
Twisted's users, both new and old, have to refer to API documentation that describes numerous different ways to do something, and deprecations are not clear.

For problems 1 and 2, there's nothing much we can do but delete the code itself.  However, for problems 3 and 4, there are two other solutions which I think that we should explore as well, and we should possibly try to get in place before more aggressively deleting the actual code.

For one thing, we currently do not fail our tests on, or even ratchet on, warnings.  If I turn on warnings (meaning "export PYTHONWARNINGS='all::DeprecationWarning'"), purely at test _startup_ I see these:

/Users/glyph/Projects/Twisted/twisted/internet/endpoints.py:29: DeprecationWarning: twisted.internet.interfaces.IStreamClientEndpointStringParser was deprecated in Twisted 14.0.0: This interface has been superseded by IStreamClientEndpointStringParserWithReactor.
  from twisted.internet.interfaces import (
/Users/glyph/Projects/Twisted/twisted/spread/jelly.py:92: DeprecationWarning: the sets module is deprecated
  import sets as _sets
/Users/glyph/Projects/Twisted/twisted/scripts/test/test_tap2deb.py:8: DeprecationWarning: tap2deb is deprecated since Twisted 15.2.
  from twisted.scripts import tap2deb
/Users/glyph/Projects/Twisted/twisted/scripts/test/test_tap2rpm.py:15: DeprecationWarning: tap2rpm is deprecated since Twisted 15.2.
  from twisted.scripts import tap2rpm
/Users/glyph/Projects/Twisted/twisted/words/test/test_msn.py:28: DeprecationWarning: twisted.words.protocols.msn was deprecated in Twisted 15.1.0: MSN has shutdown.
  from twisted.words.protocols import msn

not to mention the scads of additional warnings that our test suite spits out over the course of its run.  We really need to get rid of these warnings to be sure that it's even possible to actually remove the deprecated APIs, and to ensure that there's not something internal that they're really necessary for.

For another, we have no way to hide deprecated APIs in the API documentation.  If a new user is trying to figure out how to do something, if they're doing it during the deprecation period, they should not start out by using a deprecated API; yet, sometimes, if you look at the docs, that's what you'll find first.

Also, we haven't done a serious overhaul of our documentation in far too long, and we have no automated tooling to tell us if it's producing warnings or even tracebacks.

So, while I think we should start removing more deprecated APIs, I think it's important to address these deficiencies first, so that when we perform those removals we have a higher degree of confidence that we're not breaking our own documentation and breaking programs that users wrote last week and thought were working fine because they didn't notice the fine-print "deprecated" at the end of a docstring.  If we can't figure out how to get our own house in order in terms of keeping up with deprecations, it seems like we are likely to create unforseen problems for our users.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-web/attachments/20151025/1888d8bf/attachment-0001.html>

