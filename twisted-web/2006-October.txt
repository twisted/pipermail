From p.mayers at imperial.ac.uk  Sun Oct  1 05:27:43 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun Oct  1 05:27:47 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <20060930233854.1717.1999771214.divmod.quotient.63984@ohm>
References: <20060930233854.1717.1999771214.divmod.quotient.63984@ohm>
Message-ID: <451F981F.2010701@imperial.ac.uk>

glyph@divmod.com wrote:
> 
> I don't see a render=T.directive("liveFragment") anywhere, so this 

That was a typo (I was removing style-related stan as I went) - the 
render directive is there.

From p.mayers at imperial.ac.uk  Sun Oct  1 06:15:17 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun Oct  1 06:15:22 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <20060930233628.1717.1503593566.divmod.quotient.63983@ohm>
References: <20060930233628.1717.1503593566.divmod.quotient.63983@ohm>
Message-ID: <451FA345.8070202@imperial.ac.uk>

Jean-Paul Calderone wrote:
>> The nevow debug console thing logs "self has no properties" - what is 
>> self in this context of a widget method/event call? Why does it have 
>> no properties?

Actually, this seems to be a MochiKit bug - the fact it was appearing in 
the divmod/nevow debug thing was confusing me. Mochikit's connect() 
seems to be referencing a non-existent "self" somewhere. Grumble.

Sorry for the noise

From p.mayers at imperial.ac.uk  Sun Oct  1 07:13:07 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun Oct  1 07:13:12 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <451FA345.8070202@imperial.ac.uk>
References: <20060930233628.1717.1503593566.divmod.quotient.63983@ohm>
	<451FA345.8070202@imperial.ac.uk>
Message-ID: <451FB0D3.3050604@imperial.ac.uk>

Phil Mayers wrote:
> Jean-Paul Calderone wrote:
>>> The nevow debug console thing logs "self has no properties" - what is 
>>> self in this context of a widget method/event call? Why does it have 
>>> no properties?
> 
> Actually, this seems to be a MochiKit bug - the fact it was appearing in 
> the divmod/nevow debug thing was confusing me. Mochikit's connect() 
> seems to be referencing a non-existent "self" somewhere. Grumble.
> 
> Sorry for the noise

Ha. Actually it's not. I'm using Nevow 0.9 which still has Mochikit in 
it so I'm failing to load my local version, and the version in Nevow 0.9 
does *not* have the MochiKit.Signal module. Sigh...

From p.mayers at imperial.ac.uk  Sun Oct  1 07:13:11 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun Oct  1 07:13:15 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <20060930233854.1717.1999771214.divmod.quotient.63984@ohm>
References: <20060930233854.1717.1999771214.divmod.quotient.63984@ohm>
Message-ID: <451FB0D7.8090406@imperial.ac.uk>

glyph@divmod.com wrote:
> Some parts of the Divmod infrastructure still use MochiKit.  We're 
> trying to remove this dependency in the future to allow Nevow users to 
> use whatever version of MochiKit they like, but at least for the time 

Would you expect that to work completely? How will the two kits interact 
with regards things like e.g. addLoadEvent, addToCallStack, connct() and 
so forth?

Also, I'm not an expert, but don't many browsers limit you to 2 HTTP 
requests outstanding to a given server at once, meaning it's likely 
you'd run into problems running e.g. the Mochikit xmlhttp and the Athena 
one?

What I'm trying to get a feel for with the Athena stuff is what parts of 
the javascript runtime, if any, are supposed to be used, and which parts 
are private and just for implementing callRemote and friends.

From glyph at divmod.com  Sun Oct  1 08:52:37 2006
From: glyph at divmod.com (glyph@divmod.com)
Date: Sun Oct  1 08:52:41 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <451F981F.2010701@imperial.ac.uk>
Message-ID: <20061001135237.1717.622289047.divmod.quotient.64310@ohm>


On Sun, 01 Oct 2006 11:27:43 +0100, Phil Mayers <p.mayers@imperial.ac.uk> wrote:
>glyph@divmod.com wrote:
>>
>>I don't see a render=T.directive("liveFragment") anywhere, so this
>
>That was a typo (I was removing style-related stan as I went) - the render 
>directive is there.

A pity - that was the only correct observation I made :).

From glyph at divmod.com  Sun Oct  1 08:58:39 2006
From: glyph at divmod.com (glyph@divmod.com)
Date: Sun Oct  1 08:58:40 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <451FB0D3.3050604@imperial.ac.uk>
Message-ID: <20061001135839.1717.1165955114.divmod.quotient.64313@ohm>


On Sun, 01 Oct 2006 13:13:07 +0100, Phil Mayers <p.mayers@imperial.ac.uk> wrote:
>Phil Mayers wrote:
>>Jean-Paul Calderone wrote:
>>>>The nevow debug console thing logs "self has no properties" - what is 
>>>>self in this context of a widget method/event call? Why does it have no 
>>>>properties?
>>

>Ha. Actually it's not. I'm using Nevow 0.9 which still has Mochikit in it so 
>I'm failing to load my local version, and the version in Nevow 0.9 does 
>*not* have the MochiKit.Signal module. Sigh...

OK, so part of what I said was right, except only by accident.  You want a (more recent) version of Nevow without MochiKit.

I realize that you're probably not running off trunk@HEAD for good reason - things tend to destabilize occasionally, especially if you're not following the daily hustle and bustle on #divmod.

Our internal testing process involves creating "releases", though.  Some time in the future, when we have more resources, they'll be properly kept up to date on the website, announced, QA'd and so on.  For the time being though, you can split the difference between trunk@HEAD and "latest released, publicised tarball" by using these interim releases, which you can see here:

    http://divmod.org:81/svn/Divmod/tags/releases/

Nevow 0.9.9, for example, doesn't seem to contain MochiKit.

From glyph at divmod.com  Sun Oct  1 09:03:28 2006
From: glyph at divmod.com (glyph@divmod.com)
Date: Sun Oct  1 09:03:30 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <451FB0D7.8090406@imperial.ac.uk>
Message-ID: <20061001140328.1717.395524689.divmod.quotient.64315@ohm>

On Sun, 01 Oct 2006 13:13:11 +0100, Phil Mayers <p.mayers@imperial.ac.uk> wrote:
>glyph@divmod.com wrote:
>>Some parts of the Divmod infrastructure still use MochiKit.  We're trying 
>>to remove this dependency in the future to allow Nevow users to use 
>>whatever version of MochiKit they like, but at least for the time
>
>Would you expect that to work completely? How will the two kits interact 
>with regards things like e.g. addLoadEvent, addToCallStack, connct() and so 
>forth?

It depends on your application.  Athena doesn't internally generate much DOM client side, or attempt to handle your events.  If you do that with MochiKit it shouldn't conflict.

>Also, I'm not an expert, but don't many browsers limit you to 2 HTTP 
>requests outstanding to a given server at once, meaning it's likely you'd 
>run into problems running e.g. the Mochikit xmlhttp and the Athena one?

Yep.  This isn't a library problem though: if you're using Athena, you _must not_ use any other XHR APIs in your page.  Athena goes to a good deal of trouble to allow you to have more than 2 outstanding athena requests when the browser allows you only 2 HTTP requests.  It needs both of those requests though, one to wait for incoming notifications and one to make outgoing requests.

>What I'm trying to get a feel for with the Athena stuff is what parts of the 
>javascript runtime, if any, are supposed to be used, and which parts are 
>private and just for implementing callRemote and friends.

I hope someone more knowledgeable about the intent of those APIs will answer.  Technically speaking the rule is that the APIs are public unless they start with "_", but "public" doesn't necessarily mean "supported in perpetuity".

Please feel free to ask about specific things though; hopefully someone more knowledgeable about the API's intent than I will answer.


From p.mayers at imperial.ac.uk  Sun Oct  1 09:50:58 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun Oct  1 09:51:07 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <20061001135839.1717.1165955114.divmod.quotient.64313@ohm>
References: <20061001135839.1717.1165955114.divmod.quotient.64313@ohm>
Message-ID: <451FD5D2.70202@imperial.ac.uk>

glyph@divmod.com wrote:
> Our internal testing process involves creating "releases", though.  Some 
> time in the future, when we have more resources, they'll be properly 
> kept up to date on the website, announced, QA'd and so on.  For the time 
> being though, you can split the difference between trunk@HEAD and 
> "latest released, publicised tarball" by using these interim releases, 
> which you can see here:
> 
>    http://divmod.org:81/svn/Divmod/tags/releases/
> 
> Nevow 0.9.9, for example, doesn't seem to contain MochiKit.

Ah ha. That's useful, thanks.

I should just add by the way that I think the Divmod team are very kind 
supporting the (non-paying!) community of users, especially given your 
relatively small size and need to earn a living at the same time.

I'll have to see what I can do about getting my employers to join the 
fan club.

From p.mayers at imperial.ac.uk  Sun Oct  1 17:57:01 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun Oct  1 17:57:12 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <20061001140328.1717.395524689.divmod.quotient.64315@ohm>
References: <20061001140328.1717.395524689.divmod.quotient.64315@ohm>
Message-ID: <452047BD.9030309@imperial.ac.uk>

glyph@divmod.com wrote:
>> Also, I'm not an expert, but don't many browsers limit you to 2 HTTP 
>> requests outstanding to a given server at once, meaning it's likely 
>> you'd run into problems running e.g. the Mochikit xmlhttp and the 
>> Athena one?
> 
> Yep.  This isn't a library problem though: if you're using Athena, you 
> _must not_ use any other XHR APIs in your page.  Athena goes to a good 
> deal of trouble to allow you to have more than 2 outstanding athena 
> requests when the browser allows you only 2 HTTP requests.  It needs 
> both of those requests though, one to wait for incoming notifications 
> and one to make outgoing requests.

Ah. That's an issue.

This rules out safely calling other non-Nevow RPCs (which might be glued 
into the same server & URL space by reverse proxying, and in fact are in 
my case). Obviously I can write (tedious) code to execute those RPCs on 
the server, but scalability aside it also breaks single sign-on.

(Note: I'm not saying Nevow or Athena are doing the wrong thing here - 
as you correctly say, this is a browser limitation).

I think this can be solved using IFRAMEs to make the RPCs, but at the 
expense of another server name (and IP if using SSL in fact). Will have 
to look into that.

> 
>> What I'm trying to get a feel for with the Athena stuff is what parts 
>> of the javascript runtime, if any, are supposed to be used, and which 
>> parts are private and just for implementing callRemote and friends.
> 
> I hope someone more knowledgeable about the intent of those APIs will 
> answer.  Technically speaking the rule is that the APIs are public 
> unless they start with "_", but "public" doesn't necessarily mean 
> "supported in perpetuity".
> 
> Please feel free to ask about specific things though; hopefully someone 
> more knowledgeable about the API's intent than I will answer.

Well, the specific thing I was thinking of was the JSON-RPC but knowing 
that Athena consumes both available XHR requests makes the point moot.

Interestingly, it seems we've reached a situation analogous with the 
desire for a single event loop in the python standard library, only this 
time in the JavaScript VM ;o)

For the info of anyone reading, I did eventually get all this working, 
and am using MochiKit for the client-side DOM stuff but calling athena 
widget callRemote channels - cool stuff like (untested copy&paste):

function saveEditable(evt) {
   var tb = event.src();
   var span = tb.parentNode;
   var widget = Nevow.Athena.Widget.get(span);

   /* only if it has changed... */
   if (tb.value!=tb.orig) {

     /* mark it dirty */
     addElementClass(span, 'dirty');
     /* push update to server */
     var d = widget.callRemote('update', span.id, tb.value);

     /* wait for ok/fail */
     d.addCallbacks(
       /* ok, remove dirty mark */
       function(v) {
         removeElementClass(span, 'dirty');
       },

       /* fail, display error for 5 seconds,
       function(e) {
         var v = scrapeText(span);
         replaceChildNodes(span, e);
         callLater(5, replaceChildNodes, span, v);
       });

   }

   /* convert the span back to a plain text holder */
   replaceChildNodes(span, tb.value);
   removeElementClass(span, 'editing');
}

function makeEditable(evt) {
   var span = evt.src();

   if (hasElementClass(span, 'editing')) return false;

   /* get the contents of the span */
   var text = scrapeText(span);
   /* put it into a text field... */
   var tb = INPUT({'type': 'text', 'value': text});
   tb['orig'] = text;
   /* ...inside the span */
   replaceChildNodes(span, tb);
   tb.focus();
   connect(tb, 'onblur', saveEditable);

   addElementClass(span, 'editing');
}

function setupEditFields(node) {
   forEach(
     getElementsByTagAndClassName('span', 'editable', node),
     function(n) {
       connect(n, 'onclick', makeEditable);
     });
}

myApp.myWidget = Nevow.Athena.Widget.subclass('myApp.myWidget');
myApp.myWidget.methods(
   function __init__(self, node) {
     myApp.myWidget.upcall(self, '__init__', node);
     setupEditFields(node);
   });

From exarkun at divmod.com  Sun Oct  1 18:29:34 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun Oct  1 18:29:36 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <452047BD.9030309@imperial.ac.uk>
Message-ID: <20061001232934.1717.77809807.divmod.quotient.64647@ohm>

On Sun, 01 Oct 2006 23:57:01 +0100, Phil Mayers <p.mayers@imperial.ac.uk> wrote:
> [snip]
>
>For the info of anyone reading, I did eventually get all this working, and 
>am using MochiKit for the client-side DOM stuff but calling athena widget 
>callRemote channels - cool stuff like (untested copy&paste):
>
>function saveEditable(evt) {
> [snip]
>}
>
>function makeEditable(evt) {
> [snip]
>}
>
>function setupEditFields(node) {
> [snip]
>}
>
>myApp.myWidget = Nevow.Athena.Widget.subclass('myApp.myWidget');
>myApp.myWidget.methods(
>   function __init__(self, node) {
>     myApp.myWidget.upcall(self, '__init__', node);
>     setupEditFields(node);
>   });

I wonder why you chose to make those three functions free instead of
methods of your widget class?

Jean-Paul

From terry at jon.es  Sun Oct  1 20:57:46 2006
From: terry at jon.es (Terry Jones)
Date: Sun Oct  1 20:58:00 2006
Subject: [Twisted-web] Looking for help on an equity or consulting basis
Message-ID: <17696.29210.477762.139670@terry-jones-computer.local>

I'm finally reaching the stage where I want to build a web front end for
the project my company is developing. I still have a strong preference for
using Twisted, and I think it also makes sense to use Nevow/Athena.

But...

I'd prefer not to have to learn all the details of Nevow/Athena myself.  I
do the occasional svn up in the Nevow trunk, and see that there is what
looks like daily activity there, but rather few of the changes are in the
documentation. So it looks like a lot of functionality has been added to
Nevow, and that it's not yet documented. Thus I have the strong feeling
that the sensible route to getting the best out of Nevow is to ask for help
from someone who's familiar with the current state of the art.

So I'm firstly wondering if there is someone who knows their way around
Nevow and Twisted who might be interested in doing some work in exchange
for early equity in a startup. There are various ways we might do this -
you could put something in place and hand it off, or get more involved if
you like the project, or simply agree to talk things through, etc.

While I can't give details about what's being built, I can say that I'm
working in the area of information representation / dynamics, and also
search.  The application I'm beginning to build now relies on an
architecture (already working) that I've already put nearly 3 years into
thinking about and developing.  I plan a release in early 2007.

If you're curious, I've put a few links onto http://jon.es (bio, resume,
odds & ends) that give some information about who I am.

If no-one is interested, my second choice would be to pay someone as a
consultant to spend some hours in skype listening to what I'm planning to
do, and telling me what they think is the best way to go about it. I find
some aspects of Nevow quite mysterious, and there are undoubtedly many
things I should understand better about Twisted. Is anyone be interested in
this?

I hope this message wont seem lazy, or be deemed inappropriate for this
list.  My apologies if so.

Regards,
Terry

From p.mayers at imperial.ac.uk  Mon Oct  2 11:45:01 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon Oct  2 11:45:15 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <20061001232934.1717.77809807.divmod.quotient.64647@ohm>
References: <20061001232934.1717.77809807.divmod.quotient.64647@ohm>
Message-ID: <4521420D.9080109@imperial.ac.uk>

Jean-Paul Calderone wrote:
> 
> I wonder why you chose to make those three functions free instead of
> methods of your widget class?

Conceptually, one might have multiple different widgets wanting the 
editable span functionality which cannot easily share a base class, and 
also since I'm told Athena does very little client-side DOM work, to 
separate out the athena-specific code from the client-side DOM code.

But it would have worked just as well on the widget.

Third reason - VIMs syntax highlighting fails for encapsulated functions 
but works for bare ones :o)

From corydodt at gmail.com  Mon Oct  2 13:24:20 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Mon Oct  2 13:24:24 2006
Subject: [Twisted-web] Looking for help on an equity or consulting basis
In-Reply-To: <17696.29210.477762.139670@terry-jones-computer.local>
References: <17696.29210.477762.139670@terry-jones-computer.local>
Message-ID: <c16a94ff0610021124k4845edd4s7773dcbc4ee366c5@mail.gmail.com>

You know, you could probably pay a little less for someone to thoroughly
document Nevow.  Then everyone wins.  Just a thought. :-)

C

On 10/1/06, Terry Jones <terry@jon.es> wrote:
>
> I'm finally reaching the stage where I want to build a web front end for
> the project my company is developing. I still have a strong preference for
> using Twisted, and I think it also makes sense to use Nevow/Athena.
>
> But...
>
> I'd prefer not to have to learn all the details of Nevow/Athena myself.  I
> do the occasional svn up in the Nevow trunk, and see that there is what
> looks like daily activity there, but rather few of the changes are in the
> documentation. So it looks like a lot of functionality has been added to
> Nevow, and that it's not yet documented. Thus I have the strong feeling
> that the sensible route to getting the best out of Nevow is to ask for
> help
> from someone who's familiar with the current state of the art.
>
> So I'm firstly wondering if there is someone who knows their way around
> Nevow and Twisted who might be interested in doing some work in exchange
> for early equity in a startup. There are various ways we might do this -
> you could put something in place and hand it off, or get more involved if
> you like the project, or simply agree to talk things through, etc.
>
> While I can't give details about what's being built, I can say that I'm
> working in the area of information representation / dynamics, and also
> search.  The application I'm beginning to build now relies on an
> architecture (already working) that I've already put nearly 3 years into
> thinking about and developing.  I plan a release in early 2007.
>
> If you're curious, I've put a few links onto http://jon.es (bio, resume,
> odds & ends) that give some information about who I am.
>
> If no-one is interested, my second choice would be to pay someone as a
> consultant to spend some hours in skype listening to what I'm planning to
> do, and telling me what they think is the best way to go about it. I find
> some aspects of Nevow quite mysterious, and there are undoubtedly many
> things I should understand better about Twisted. Is anyone be interested
> in
> this?
>
> I hope this message wont seem lazy, or be deemed inappropriate for this
> list.  My apologies if so.
>
> Regards,
> Terry
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20061002/58def7d6/attachment.htm
From fabio.forno at gmail.com  Wed Oct  4 17:01:50 2006
From: fabio.forno at gmail.com (Fabio Forno)
Date: Sun Oct  8 17:22:00 2006
Subject: [Twisted-web] "Athena transport duplicate message, discarding"
Message-ID: <2fd53c3a0610041501o52207408q57d18237f0fd2cd8@mail.gmail.com>

Hi, is it normal that I receive this message each time I call a method
on the client (I'm using the example at this address)?

-- 
Fabio Forno, PhD
Istituto Superiore Mario Boella
Jabber ID: xmpp:ff@kamin.polito.it
** Try Jabber http://www.jabber.org

From manlio_perillo at libero.it  Sun Oct  8 05:17:56 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun Oct  8 17:37:15 2006
Subject: [Twisted-web] my guard implementation
Message-ID: <4528D054.9040706@libero.it>

Hi.

I have updated
http://divmod.org/trac/ticket/1435/

This ticket contains a reimplementation of guard, based on the work of
dialtone.

I have added several new features to dialtone original implementation.
I would like to receive some feedback since I'm planning to use it in
production.


Thanks   Manlio Perillo

From corydodt at gmail.com  Mon Oct  9 13:29:35 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Mon Oct  9 13:29:38 2006
Subject: [Twisted-web] DOM manipulation in an athena widget
In-Reply-To: <4521420D.9080109@imperial.ac.uk>
References: <20061001232934.1717.77809807.divmod.quotient.64647@ohm>
	<4521420D.9080109@imperial.ac.uk>
Message-ID: <c16a94ff0610091129h59b00289j65a77616a89fe5f3@mail.gmail.com>

Really?  The syntax highlighting works for me using Vim 7.  Now if I could
only find syntax folding for Javascript.

C


On 10/2/06, Phil Mayers <p.mayers@imperial.ac.uk> wrote:
>
> Jean-Paul Calderone wrote:
> >
> > I wonder why you chose to make those three functions free instead of
> > methods of your widget class?
>
> Conceptually, one might have multiple different widgets wanting the
> editable span functionality which cannot easily share a base class, and
> also since I'm told Athena does very little client-side DOM work, to
> separate out the athena-specific code from the client-side DOM code.
>
> But it would have worked just as well on the widget.
>
> Third reason - VIMs syntax highlighting fails for encapsulated functions
> but works for bare ones :o)
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20061009/610d11db/attachment.htm
From fabio.forno at gmail.com  Wed Oct 11 05:35:42 2006
From: fabio.forno at gmail.com (Fabio Forno)
Date: Wed Oct 11 05:35:46 2006
Subject: [Twisted-web] athena widgets and IE
Message-ID: <2fd53c3a0610110335v73145af0hb5ae2dc865a61dc8@mail.gmail.com>

Hi, I've a problem with an athena widget and IE.

I define a widget for a LiveFragment like this one:


var Widgets = {};

Widgets.ChatWidget = Nevow.Athena.Widget.subclass('Widgets.ChatWidget');


Widgets.ChatWidget.methods(

    function keyPressed (self, event) {
        if(event.key()["string"] == "KEY_ENTER") {
            text_area = window.document.getElementById("chat_area");
            d = self.callRemote('got_text', text_area.value);
            d.addCallback(self.text_sent);
        }
    }
)

Then in the xml template I try to get a reference to the just defined
method in this way:

widget = Nevow.Athena.Widget.get(
            document.getElementById("athena:1");
        );

widget.keyPressed

In firefox everything is ok, while in explorer 6.0 I get undefined.
MOreover, in i.e. there is this oddity. if a loop on all the
attributes of widgetwith for(var i in widget) , I get also the
keyPressed method, but when I try to get it with widget[i], I keep
having undefined as result.

Any idea?

-- 
Fabio Forno, PhD
Istituto Superiore Mario Boella
Jabber ID: xmpp:ff@kamin.polito.it
** Try Jabber http://www.jabber.org

From exarkun at divmod.com  Wed Oct 11 07:31:46 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Oct 11 07:31:51 2006
Subject: [Twisted-web] athena widgets and IE
In-Reply-To: <2fd53c3a0610110335v73145af0hb5ae2dc865a61dc8@mail.gmail.com>
Message-ID: <20061011123146.1717.2032044096.divmod.quotient.73618@ohm>

On Wed, 11 Oct 2006 12:35:42 +0200, Fabio Forno <fabio.forno@gmail.com> wrote:
>Hi, I've a problem with an athena widget and IE.
>
>I define a widget for a LiveFragment like this one:
>
>
>var Widgets = {};
>

Using a recent version of Nevow, you shouldn't need to define the Widgets
namespace explicitly.  Also, "Widgets" is a pretty vague name.  I'd suggest
picking something less likely to collide.

>Widgets.ChatWidget = Nevow.Athena.Widget.subclass('Widgets.ChatWidget');
>
>Widgets.ChatWidget.methods(
>
>    function keyPressed (self, event) {
>        if(event.key()["string"] == "KEY_ENTER") {
>            text_area = window.document.getElementById("chat_area");
>            d = self.callRemote('got_text', text_area.value);
>            d.addCallback(self.text_sent);
>        }
>    }
>)

It's better to not use getElementById.  Instead, make the chat area node
a child of the ChatWidget's node and find it either by class or using the
new Widget.nodeById method.

>
>Then in the xml template I try to get a reference to the just defined
>method in this way:
>
>widget = Nevow.Athena.Widget.get(
>            document.getElementById("athena:1");
>        );
>
>widget.keyPressed

Likewise, "athena:1" is an implementation detail, and you can't rely on
your widget getting id "1" all the time.  Instead, try using the
athena:handler feature:

    <div nevow:render="liveFragment">
      ...
      <textarea>
          <athena:handler event="onkeypress" handler="keyPressed" />
      </textarea>
    </div>

>
>In firefox everything is ok, while in explorer 6.0 I get undefined.
>MOreover, in i.e. there is this oddity. if a loop on all the
>attributes of widgetwith for(var i in widget) , I get also the
>keyPressed method, but when I try to get it with widget[i], I keep
>having undefined as result.
>
>Any idea?

A difference here wouldn't surprise me.  Iteration in JavaScript is extremely
inconsistent, even within a single runtime.  I don't know of the /specific/
problem which causes the behavior you're describing above, and it may be
fixable, but it'd probably be better just to not rely on iteration.

Jean-Paul

From corydodt at gmail.com  Wed Oct 11 10:50:13 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Wed Oct 11 10:50:39 2006
Subject: [Twisted-web] athena widgets and IE
In-Reply-To: <20061011123146.1717.2032044096.divmod.quotient.73618@ohm>
References: <2fd53c3a0610110335v73145af0hb5ae2dc865a61dc8@mail.gmail.com>
	<20061011123146.1717.2032044096.divmod.quotient.73618@ohm>
Message-ID: <c16a94ff0610110850j6e4dbe1q8f168c4f07fb6897@mail.gmail.com>

On 10/11/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
>
> On Wed, 11 Oct 2006 12:35:42 +0200, Fabio Forno <fabio.forno@gmail.com>
> wrote:
> >Widgets.ChatWidget = Nevow.Athena.Widget.subclass('Widgets.ChatWidget');
> >
> >Widgets.ChatWidget.methods(
> >
> >    function keyPressed (self, event) {
> >        if(event.key()["string"] == "KEY_ENTER") {
> >            text_area = window.document.getElementById("chat_area");
> >            d = self.callRemote('got_text', text_area.value);
> >            d.addCallback(self.text_sent);
> >        }
> >    }
> >)

 [...]

> >
> >Then in the xml template I try to get a reference to the just defined
> >method in this way:
> >
> >widget = Nevow.Athena.Widget.get(
> >            document.getElementById("athena:1");
> >        );
> >
> >widget.keyPressed
>
> Likewise, "athena:1" is an implementation detail, and you can't rely on
> your widget getting id "1" all the time.  Instead, try using the
> athena:handler feature:
>
>     <div nevow:render="liveFragment">
>       ...
>       <textarea>
>           <athena:handler event="onkeypress" handler="keyPressed" />
>       </textarea>
>     </div>
>
> The problem is he needs to examine the event details after it's received,
and athena:handler only gives the event handler access to the node where it
happened, not the event object.

I suggest this:

YourNS.YourWidget.methods(
    function __init__(self, node) { // {{{
        YourNS.YourWidget.upcall(self, '__init__', node);
        DeanEdwards.addEvent(node, 'keyPressed',
            function onKeyPressed(event) { return self.onKeyPressed(event)
});
    }, // }}}


What's DeanEdwards, you ask?

http://rafb.net/paste/results/57Orqx27.html

Dean Edwards came up with a nifty cross-browser event handling solution, but
there are others that could work here.  I adapted his solution to the Divmod
namespace style, and added line 63 so .target and .srcElement mean the same
thing.  The above URL will rot pretty quickly, so just google for <dean
edwards event handling>.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20061011/ed892c29/attachment.htm
From exarkun at divmod.com  Wed Oct 11 11:05:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Oct 11 11:05:56 2006
Subject: [Twisted-web] athena widgets and IE
In-Reply-To: <c16a94ff0610110850j6e4dbe1q8f168c4f07fb6897@mail.gmail.com>
Message-ID: <20061011160554.1717.638249181.divmod.quotient.73755@ohm>

On Wed, 11 Oct 2006 08:50:13 -0700, Cory Dodt <corydodt@gmail.com> wrote:
> [snip]
>The problem is he needs to examine the event details after it's received,
>and athena:handler only gives the event handler access to the node where it
>happened, not the event object.

Perhaps it should pass along the event, then.

Jean-Paul

From corydodt at gmail.com  Wed Oct 11 12:08:48 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Wed Oct 11 12:08:57 2006
Subject: [Twisted-web] athena widgets and IE
In-Reply-To: <20061011160554.1717.638249181.divmod.quotient.73755@ohm>
References: <c16a94ff0610110850j6e4dbe1q8f168c4f07fb6897@mail.gmail.com>
	<20061011160554.1717.638249181.divmod.quotient.73755@ohm>
Message-ID: <c16a94ff0610111008x7852a7bdof8c9ed1ff46c014@mail.gmail.com>

+1

But the event object will still need to be normalized to some extent across
browsers, e.g. srcElement == target etc.

C


On 10/11/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
>
> On Wed, 11 Oct 2006 08:50:13 -0700, Cory Dodt <corydodt@gmail.com> wrote:
> > [snip]
> >The problem is he needs to examine the event details after it's received,
> >and athena:handler only gives the event handler access to the node where
> it
> >happened, not the event object.
>
> Perhaps it should pass along the event, then.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20061011/756a1f28/attachment.htm
From fabio.forno at gmail.com  Wed Oct 11 17:19:04 2006
From: fabio.forno at gmail.com (Fabio Forno)
Date: Wed Oct 11 17:19:08 2006
Subject: [Twisted-web] athena widgets and IE
In-Reply-To: <20061011123146.1717.2032044096.divmod.quotient.73618@ohm>
References: <2fd53c3a0610110335v73145af0hb5ae2dc865a61dc8@mail.gmail.com>
	<20061011123146.1717.2032044096.divmod.quotient.73618@ohm>
Message-ID: <2fd53c3a0610111519m48d542dfte5ae9ea856c198a0@mail.gmail.com>

On 10/11/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:

> It's better to not use getElementById.  Instead, make the chat area node
> a child of the ChatWidget's node and find it either by class or using the
> new Widget.nodeById method.
>

I'm using trunk, but I can't find it. Anyway in the handler I've no
problems in getting references to the items of the page, instead it's
the reference to handler that makes problems.

> Likewise, "athena:1" is an implementation detail, and you can't rely on
> your widget getting id "1" all the time.

Yep, this was only a quick shortcut for doing a test trying to have a
ref to the handler.

> Instead, try using the
> athena:handler feature:
>
>     <div nevow:render="liveFragment">
>       ...
>       <textarea>
>           <athena:handler event="onkeypress" handler="keyPressed" />
>       </textarea>
>     </div>
>

IT was my first option. But I had a problem of synchronization with
the server. After the first exachange of messages each time the
handler is called, there's also a duplicate message sent to the
server. I think this is a problem with the ack sequence and the
outgoing message queue, but I hadn't the time to figure out. So I
tried to use the Mochikit event handler, but I had to pass it a
reference to a widget method in order to send data back to the server.
And there came the problems with IE

>
> A difference here wouldn't surprise me.  Iteration in JavaScript is extremely
> inconsistent, even within a single runtime.  I don't know of the /specific/
> problem which causes the behavior you're describing above, and it may be
> fixable, but it'd probably be better just to not rely on iteration.

I know, I did it just to check if I had a reference to the right
objetc, since I couldn't find any method of the widget. With iteration
I can see that they are there, somewere, but I cannot use them :(

-- 
Fabio Forno, PhD
Istituto Superiore Mario Boella
Jabber ID: xmpp:ff@kamin.polito.it
** Try Jabber http://www.jabber.org

From fabio.forno at gmail.com  Wed Oct 11 18:16:13 2006
From: fabio.forno at gmail.com (Fabio Forno)
Date: Wed Oct 11 18:16:15 2006
Subject: [Twisted-web] athena widgets and IE
In-Reply-To: <2fd53c3a0610111519m48d542dfte5ae9ea856c198a0@mail.gmail.com>
References: <2fd53c3a0610110335v73145af0hb5ae2dc865a61dc8@mail.gmail.com>
	<20061011123146.1717.2032044096.divmod.quotient.73618@ohm>
	<2fd53c3a0610111519m48d542dfte5ae9ea856c198a0@mail.gmail.com>
Message-ID: <2fd53c3a0610111616g755c9f87m2f1e63f2db7c2585@mail.gmail.com>

Let's forget about event handlers. The basic problem I'm facing at
present is this one:

MyNS.MyWidget.methods(
  function __init__(self, node) {
        MyNS.MyWidget.upcall(self, '__init__', node);
        alert(self.myMethod);
},

function myMethod (self) {
}

)

in Firefox the alert displays the body of the function (actually the
stub calling it), instead in IE I get undefined. This makes it
impossible to pass any method to an external method...

-- 
Fabio Forno, PhD
Istituto Superiore Mario Boella
Jabber ID: xmpp:ff@kamin.polito.it
** Try Jabber http://www.jabber.org

From jml at mumak.net  Thu Oct 12 02:45:40 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu Oct 12 02:45:55 2006
Subject: [Twisted-web] Don't use the context?
Message-ID: <d06a5cd30610120045g4d624f7cyf0a9678d665854e7@mail.gmail.com>

Hello,

"DON'T USE THE CONTEXT" has been in the #twisted.web topic for some
time. I've heard that the context is being removed from Nevow.

* Why is the context being removed?

* What should I use instead of the context to get at ctx.tag?

* How does nevow:data stuff work in a world without context?

* nevow-rendering.txt should be updated. It currently recommends that
people use the context.


cheers,
jml

From markus at bluegap.ch  Thu Oct 12 03:57:03 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Thu Oct 12 03:57:12 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>	<451810DB.4040300@bluegap.ch>	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>	<4519827E.2080502@bluegap.ch>
	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <452E035F.2020006@bluegap.ch>

Hi,

L. Daniel Burr wrote:
> I'm a bit busy today, but I will respond in greater length about why I do
> not care for the "every URL segment is a template" design approach, and
> what I prefer to do instead.
> 
> Also, thanks for actually reading up on Zope Acquisition and WSGI issues;
> I'll try to explain where I think they go wrong.

Did you find some time to explain already? I'm still curious.

My current project which started all this is almost over now. As you 
might know, I tried to do it the nevow way. And I guess I've come to the 
root of my problem: I'm more looking for a _website_ building system, 
while nevow seems to be a system to build web applications. Which is in 
no way meant to put nevow down, it just has a slightly different focus.

Another thought I've had was: most probably I could come away with just 
having the templates split up. I don't need (and as you have pointed 
out, it's probably dangerous) to split the code behind. One way to do 
that would be writing a docFactory which compiles a template from 
multiple XML fragments.

Anyway, before writing any code I'd love to hear what concepts others 
have in mind. Especially your argumentation against WSGI would be 
interesting for me.

Regards

Markus

From exarkun at divmod.com  Thu Oct 12 07:25:38 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Oct 12 07:25:41 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <d06a5cd30610120045g4d624f7cyf0a9678d665854e7@mail.gmail.com>
Message-ID: <20061012122538.1717.2115438040.divmod.quotient.74604@ohm>

On Thu, 12 Oct 2006 17:45:40 +1000, Jonathan Lange <jml@mumak.net> wrote:
>Hello,
>
>"DON'T USE THE CONTEXT" has been in the #twisted.web topic for some
>time. I've heard that the context is being removed from Nevow.
>
>* Why is the context being removed?

 - It causes buggy software to be written
 - It causes complex software to be written
 - It causes rendering to be O(N ** N) in memory and CPU

>
>* What should I use instead of the context to get at ctx.tag?

nevow.page.Element has a render dispatcher which passes the request
and the tag to render methods.

>
>* How does nevow:data stuff work in a world without context?

I don't know.  It doesn't so far.

>
>* nevow-rendering.txt should be updated. It currently recommends that
>people use the context.

Patches accepted, etc (please convert it from rest to lore too :( ).

Jean-Paul

From jml at mumak.net  Thu Oct 12 07:43:28 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu Oct 12 07:43:31 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <20061012122538.1717.2115438040.divmod.quotient.74604@ohm>
References: <d06a5cd30610120045g4d624f7cyf0a9678d665854e7@mail.gmail.com>
	<20061012122538.1717.2115438040.divmod.quotient.74604@ohm>
Message-ID: <d06a5cd30610120543w5defff2btb5223a55b51a3aa@mail.gmail.com>

On 10/12/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
> On Thu, 12 Oct 2006 17:45:40 +1000, Jonathan Lange <jml@mumak.net> wrote:
> >* How does nevow:data stuff work in a world without context?
>
> I don't know.  It doesn't so far.
>

Will it?


> >* nevow-rendering.txt should be updated. It currently recommends that
> >people use the context.
>
> Patches accepted, etc (please convert it from rest to lore too :( ).
>

I don't understand Nevow enough. Anyway, isn't the target a little mobile?

cheers,
jml

From exarkun at divmod.com  Thu Oct 12 08:55:34 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Oct 12 08:55:37 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <d06a5cd30610120543w5defff2btb5223a55b51a3aa@mail.gmail.com>
Message-ID: <20061012135534.26151.916367382.divmod.quotient.10@ohm>

On Thu, 12 Oct 2006 22:43:28 +1000, Jonathan Lange <jml@mumak.net> wrote:
>On 10/12/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
>>On Thu, 12 Oct 2006 17:45:40 +1000, Jonathan Lange <jml@mumak.net> wrote:
>> >* How does nevow:data stuff work in a world without context?
>>
>>I don't know.  It doesn't so far.
>
>Will it?

Don't know that, either.  Convince me. :)

>> >* nevow-rendering.txt should be updated. It currently recommends that
>> >people use the context.
>>
>>Patches accepted, etc (please convert it from rest to lore too :( ).
>
>I don't understand Nevow enough. Anyway, isn't the target a little mobile?

Include tests that fail when it gets out of date.  I'll make sure they
keep passing. :)

Jean-Paul

From corydodt at gmail.com  Thu Oct 12 10:18:27 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Thu Oct 12 10:18:30 2006
Subject: [Twisted-web] athena widgets and IE
In-Reply-To: <2fd53c3a0610111616g755c9f87m2f1e63f2db7c2585@mail.gmail.com>
References: <2fd53c3a0610110335v73145af0hb5ae2dc865a61dc8@mail.gmail.com>
	<20061011123146.1717.2032044096.divmod.quotient.73618@ohm>
	<2fd53c3a0610111519m48d542dfte5ae9ea856c198a0@mail.gmail.com>
	<2fd53c3a0610111616g755c9f87m2f1e63f2db7c2585@mail.gmail.com>
Message-ID: <c16a94ff0610120818p5e060c9vc3555e21de804aa8@mail.gmail.com>

Well I can tell you that I don't have this problem in my widgets.  Perhaps
you could post a larger snippet, including your docFactory?

C


On 10/11/06, Fabio Forno <fabio.forno@gmail.com> wrote:
>
> Let's forget about event handlers. The basic problem I'm facing at
> present is this one:
>
> MyNS.MyWidget.methods(
>   function __init__(self, node) {
>         MyNS.MyWidget.upcall(self, '__init__', node);
>         alert(self.myMethod);
> },
>
> function myMethod (self) {
> }
>
> )
>
> in Firefox the alert displays the body of the function (actually the
> stub calling it), instead in IE I get undefined. This makes it
> impossible to pass any method to an external method...
>
> --
> Fabio Forno, PhD
> Istituto Superiore Mario Boella
> Jabber ID: xmpp:ff@kamin.polito.it
> ** Try Jabber http://www.jabber.org
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20061012/91cfe501/attachment.htm
From ldanielburr at mac.com  Thu Oct 12 12:12:02 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu Oct 12 12:12:08 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <452E035F.2020006@bluegap.ch>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>
	<451810DB.4040300@bluegap.ch>
	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>
	<4519827E.2080502@bluegap.ch>
	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<452E035F.2020006@bluegap.ch>
Message-ID: <op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi Markus,

Sorry I've been so tardy in responding, and thanks for reminding me.


On Thu, 12 Oct 2006 03:57:03 -0500, Markus Schiltknecht  
<markus@bluegap.ch> wrote:

> Hi,
>
> L. Daniel Burr wrote:
>> I'm a bit busy today, but I will respond in greater length about why I  
>> do
>> not care for the "every URL segment is a template" design approach, and
>> what I prefer to do instead.
>>  Also, thanks for actually reading up on Zope Acquisition and WSGI  
>> issues;
>> I'll try to explain where I think they go wrong.
>

Ok, first things first.  The reason I hate "template per segment" designs
is the same reason that I hate Zope acquisition.  They both suffer from
the same illness, which is complexity. Take the following URL:

http://myhost.com/foo/bar/baz

This URL identifies a resource, and when some client requests this URL,
a representation of that resource will be sent to the client.  In order
to render this representation in "template-per-segment" design, I have
to first traverse the tree and render "foo", then "bar" then lastly,
"baz".  This enforces a needless dependency upon containment.  Why does
the resource living at "baz" have to depend upon "foo" and "bar" in
order to produce a representation of "baz"?  Answer: It doesn't have to,
and it shouldn't.  By imposing this kind of dependency, you are *not*
gaining the componentization you desire; on the contrary, you've now
got tight coupling, and changes to the way "foo" is rendered may cause
problems when rendering "bar" or "baz".  The longer your URLs get, and
the more segments you have to render, the greater the likelihood that
you are going to start breaking stuff each time you fiddle with one of
your templates.

The same argument applies to acquisition.  In the above example, let's
suppose that I need to access an object, named "userData".  Using the
acquisition model, this means that first "baz" will be searched, then
"bar", then "foo".  If you are lucky, or extremely careful, you can
code to avoid problems with this, but sooner or later, you will run
into the situation where more than one resource in the URL has a
userData object.  When this collision occurs, the userData object
nearest to the end of the URL will be used.  Maybe that is what you
want, but maybe it isn't.

Put more simply, the problem with both "template-per-segment" and
acquisition is that they do not scale.  Cannot scale.  Will never
be made to scale without massive effort on the part of the coder,
and weren't you thinking that you wanted this model because it would
be *less* work?

> My current project which started all this is almost over now. As you  
> might know, I tried to do it the nevow way. And I guess I've come to the  
> root of my problem: I'm more looking for a _website_ building system,  
> while nevow seems to be a system to build web applications. Which is in  
> no way meant to put nevow down, it just has a slightly different focus.
>

This is an excellent observation.  I find that I build far more web apps
than web sites, in my work, although it seems that the vast majority of
developers seem to still be building sites.  Note though, that I do not
think that the "template-per-segment" design is good for large web-sites
either.  The scale argument still applies.

That said, nevow could certainly use some help in documenting what the
"best practices" are, for building both nevow sites, and nevow apps.
I have long had good intentions about helping in this area, but I have
so far failed to find time to do it.

> Another thought I've had was: most probably I could come away with just  
> having the templates split up. I don't need (and as you have pointed  
> out, it's probably dangerous) to split the code behind. One way to do  
> that would be writing a docFactory which compiles a template from  
> multiple XML fragments.
>

That's not a bad idea.  Another idea is to simply stop worrying about
HTML duplication, and let each URL segment be fully responsible for
rendering itself, rather than enforcing a meaningless inheritance
model on what should be a simple resource.  Seriously, URL segments
show containment, but nowhere is it written in stone that containment
equals inheritance.

Once you stop thinking this way, you can achieve great flexibility, just
as using interfaces is more flexible that relying on subclassing.

> Anyway, before writing any code I'd love to hear what concepts others  
> have in mind. Especially your argumentation against WSGI would be  
> interesting for me.
>

WSGI.  This is one that I am virtually certain to be alone on.  The
fact is, some very smart people came up with WSGI.  Another fact is
that some very smart people came up with SOAP, WSDL, UDDI, etc.

I find WSGI of little value because, to me, it is just another attempt
at creating the "lego" model.  Every once in awhile, some smart people
get together and try to come up with a component model that will truly
give them "lego" style pluggability.  WSGI is all about saying, "hey,
choose whatever app server you want, as long as it speaks German. Want
a session component?  Go ahead, use any one you like, as long as it
speaks German.  An ORM?  If it speaks German, you're good to go!"

Seriously, the whole pluggability, freedom-of-choice thing is a bunch
of nonsense.  Who the hell cares if you can plug stuff together, when
it all has to plug together in the same way?  Any color you want, as
long as it is black.

Also, I've been using twisted since version 0.9 or so, and WSGI is
very honest about saying that it doesn't really have anything useful
to contribute to the async model of web development.  WSGI is really
great for those people who like threads, and that's great for them.
For people who prefer async architectures, WSGI will never be a good
fit.  Note that web2 does support WSGI, but in order to do so, it
has to give up most of the value of being async.

One last gripe with regards to WSGI: It claims to be a solution to
the problem of "too many web stacks" in Python-land.  In reality,
it is just another attempt at creating The One True Stack, and I
have been opposed to that since the first blog appeared,
complaining that other languages are "winning", due to the existence
of one overwhelmingly popular choice for web dev.

Many people will disagree with my stance on these topics, I'm sure.
On the other hand, this rant is so long that many will simply avoid
responding ;)

> Regards
>
> Markus

Have a good one,

L. Daniel Burr

From manlio_perillo at libero.it  Thu Oct 12 12:30:18 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu Oct 12 12:27:19 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>	<451810DB.4040300@bluegap.ch>	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>	<4519827E.2080502@bluegap.ch>	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E035F.2020006@bluegap.ch>
	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <452E7BAA.5040504@libero.it>

L. Daniel Burr ha scritto:
> [...]
>
> Ok, first things first.  The reason I hate "template per segment" designs
> is the same reason that I hate Zope acquisition.  They both suffer from
> the same illness, which is complexity. Take the following URL:
> 
> http://myhost.com/foo/bar/baz
> 
> This URL identifies a resource, and when some client requests this URL,
> a representation of that resource will be sent to the client.  In order
> to render this representation in "template-per-segment" design, I have
> to first traverse the tree and render "foo", then "bar" then lastly,
> "baz".  This enforces a needless dependency upon containment.  Why does
> the resource living at "baz" have to depend upon "foo" and "bar" in
> order to produce a representation of "baz"?  

Because it is a child of foo and bar.

It is thanks to "template per segment" design, that guard can do its job...

And, IMHO, guard is a great semplification for handling authentication.






Regards  Manlio Perillo

From mike at mkp.ca  Wed Oct 11 02:31:33 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Thu Oct 12 12:31:09 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>
	<452E035F.2020006@bluegap.ch>
	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <200610110331.33653.mike@mkp.ca>

On Thursday 12 October 2006 13:12, L. Daniel Burr wrote:
> WSGI. ?This is one that I am virtually certain to be alone on.

The resident dragons of the list have often railed against WSGI.  An argument 
that stuck with me (though I forget who offered it) is that WSGI doesn't 
really offer anything beyond plain HTTP except the additional complexity of 
wrapping HTTP in a new protocol.

Mike.

From ldanielburr at mac.com  Thu Oct 12 12:35:05 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu Oct 12 12:35:11 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <452E7BAA.5040504@libero.it>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>
	<451810DB.4040300@bluegap.ch>
	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>
	<4519827E.2080502@bluegap.ch>
	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<452E035F.2020006@bluegap.ch>
	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<452E7BAA.5040504@libero.it>
Message-ID: <op.thbkgrzw3oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi Manlio,

On Thu, 12 Oct 2006 12:30:18 -0500, Manlio Perillo  
<manlio_perillo@libero.it> wrote:

> L. Daniel Burr ha scritto:
>> [...]
>>
>> Ok, first things first.  The reason I hate "template per segment"  
>> designs
>> is the same reason that I hate Zope acquisition.  They both suffer from
>> the same illness, which is complexity. Take the following URL:
>>
>> http://myhost.com/foo/bar/baz
>>
>> This URL identifies a resource, and when some client requests this URL,
>> a representation of that resource will be sent to the client.  In order
>> to render this representation in "template-per-segment" design, I have
>> to first traverse the tree and render "foo", then "bar" then lastly,
>> "baz".  This enforces a needless dependency upon containment.  Why does
>> the resource living at "baz" have to depend upon "foo" and "bar" in
>> order to produce a representation of "baz"?
>
> Because it is a child of foo and bar.
>

That's closer to a tautology than an answer ;)

> It is thanks to "template per segment" design, that guard can do its  
> job...
>

No, it is thanks to "tree of resources" design, that guard can do its
job.  That is not the same thing as saying that every segment has a
template.  Some resources do *not* render anything; instead, via
locateChild, or other mechanisms, they return other resources.

> And, IMHO, guard is a great semplification for handling authentication.
>

I agree with this statement.  I think you've reached the right conclusion,
just for the wrong reasons ;)

>
> Regards  Manlio Perillo

L. Daniel Burr

From markus at bluegap.ch  Thu Oct 12 13:41:00 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Thu Oct 12 13:41:07 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>	<451810DB.4040300@bluegap.ch>	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>	<4519827E.2080502@bluegap.ch>	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E035F.2020006@bluegap.ch>
	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <452E8C3C.6090404@bluegap.ch>

Hi,

thank you for your answer, it's definitely not to long for me ;-)

L. Daniel Burr wrote:
> Ok, first things first.  The reason I hate "template per segment" designs
> is the same reason that I hate Zope acquisition.  They both suffer from
> the same illness, which is complexity. Take the following URL:
> 
> http://myhost.com/foo/bar/baz
> 
> This URL identifies a resource, and when some client requests this URL,
> a representation of that resource will be sent to the client.  In order
> to render this representation in "template-per-segment" design, I have
> to first traverse the tree and render "foo", then "bar" then lastly,
> "baz".  

Yes, that's how Mason, Myghty and all those do it.

> This enforces a needless dependency upon containment.  Why does
> the resource living at "baz" have to depend upon "foo" and "bar" in
> order to produce a representation of "baz"?  Answer: It doesn't have to,
> and it shouldn't.  

Please define 'resource' here.

I agree with the 'should not have to depend on' statement if you are 
speaking about programm code, i.e. perl or python objects.

Concerning HTML Fragments or templates, I do not agree. You don't want 
to output a table row (<tr...>) if you are not in a table definition 
(<table...>).

I think it's important do distinguish between those two. I'm not sure 
how to call it: code vs. design, controller vs. view or in your words: 
dependency vs containment.

As of now, I don't know a decent way on how to represent containment in 
nevow. (Yes, there are macros, but...)  I very much agree with you that 
it has nothing to do with (code) dependencies even (OOP) inheritance.

> By imposing this kind of dependency, you are *not*
> gaining the componentization you desire; on the contrary, you've now
> got tight coupling, and changes to the way "foo" is rendered may cause
> problems when rendering "bar" or "baz".  The longer your URLs get, and
> the more segments you have to render, the greater the likelihood that
> you are going to start breaking stuff each time you fiddle with one of
> your templates.
> 
> The same argument applies to acquisition.  In the above example, let's
> suppose that I need to access an object, named "userData".  Using the
> acquisition model, this means that first "baz" will be searched, then
> "bar", then "foo".  If you are lucky, or extremely careful, you can
> code to avoid problems with this, but sooner or later, you will run
> into the situation where more than one resource in the URL has a
> userData object.  When this collision occurs, the userData object
> nearest to the end of the URL will be used.  Maybe that is what you
> want, but maybe it isn't.
> 
> Put more simply, the problem with both "template-per-segment" and
> acquisition is that they do not scale.  Cannot scale.  Will never
> be made to scale without massive effort on the part of the coder,
> and weren't you thinking that you wanted this model because it would
> be *less* work?

Your 'scaling' is referring to the amount of human work, right?

Maybe it's not "template-per-segment", but some form of template 
containment is necessary, IMHO. It reduces the amount of work for 
template designers.

> That said, nevow could certainly use some help in documenting what the
> "best practices" are, for building both nevow sites, and nevow apps.
> I have long had good intentions about helping in this area, but I have
> so far failed to find time to do it.

Well, some people even read mailing lists. So you've already helped 
somewhat!

> That's not a bad idea.  Another idea is to simply stop worrying about
> HTML duplication, and let each URL segment be fully responsible for
> rendering itself, rather than enforcing a meaningless inheritance
> model on what should be a simple resource.  Seriously, URL segments
> show containment, but nowhere is it written in stone that containment
> equals inheritance.

Certainly URL segments do not equal inheritance in the code. Sometimes 
not even containment on the template level (as in 
"template-per-segment"). OTOH, the URL hierarchy very often resembles 
the template hierarchy (especially for websites).

> WSGI.  This is one that I am virtually certain to be alone on.  The
> fact is, some very smart people came up with WSGI.  Another fact is
> that some very smart people came up with SOAP, WSDL, UDDI, etc.

Please define 'smart' ;-)

No, seriously, I'm not a fan of all of those, so...

> I find WSGI of little value because, to me, it is just another attempt
> at creating the "lego" model.  Every once in awhile, some smart people
> get together and try to come up with a component model that will truly
> give them "lego" style pluggability.  WSGI is all about saying, "hey,
> choose whatever app server you want, as long as it speaks German. Want
> a session component?  Go ahead, use any one you like, as long as it
> speaks German.  An ORM?  If it speaks German, you're good to go!"

Oh, I'm glad I'm speaking German :-)

> Seriously, the whole pluggability, freedom-of-choice thing is a bunch
> of nonsense.  Who the hell cares if you can plug stuff together, when
> it all has to plug together in the same way?  Any color you want, as
> long as it is black.

I guess they are all looking for the most colorful variant of black. ;-)

> Also, I've been using twisted since version 0.9 or so, and WSGI is
> very honest about saying that it doesn't really have anything useful
> to contribute to the async model of web development.  WSGI is really
> great for those people who like threads, and that's great for them.
> For people who prefer async architectures, WSGI will never be a good
> fit.  Note that web2 does support WSGI, but in order to do so, it
> has to give up most of the value of being async.

I don't want to get into the sync vs async issue now, but it would 
certainly be possible to write an async WSGI-like interface, doing 
similar URL segment processing, content filtering and such. Why should 
such a thing not be great if you consider WSGI to be "great for people 
who like threads" (i.e. sync)?

As you might have guessed, I do not agree with your point of view 
regarding the 'lego model'. I'm surprised to read that "pluggability ... 
is a bunch of nonsense" from somebody who obviously knows OOP, python, 
interfaces, etc.. I don't understand how you came to that conclusion (or 
believe) WRT templates.

Again, thank you for your answer. I very much enjoy discussing such 
design issues.

Regards

Markus


From ldanielburr at mac.com  Thu Oct 12 14:36:50 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu Oct 12 14:37:01 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <452E8C3C.6090404@bluegap.ch>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>
	<451810DB.4040300@bluegap.ch>
	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>
	<4519827E.2080502@bluegap.ch>
	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<452E035F.2020006@bluegap.ch>
	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<452E8C3C.6090404@bluegap.ch>
Message-ID: <op.thbp3oob3oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi Markus,

On Thu, 12 Oct 2006 13:41:00 -0500, Markus Schiltknecht  
<markus@bluegap.ch> wrote:

> Hi,
>
> thank you for your answer, it's definitely not to long for me ;-)
>
> L. Daniel Burr wrote:
>> Ok, first things first.  The reason I hate "template per segment"  
>> designs
>> is the same reason that I hate Zope acquisition.  They both suffer from
>> the same illness, which is complexity. Take the following URL:
>>  http://myhost.com/foo/bar/baz
>>  This URL identifies a resource, and when some client requests this URL,
>> a representation of that resource will be sent to the client.  In order
>> to render this representation in "template-per-segment" design, I have
>> to first traverse the tree and render "foo", then "bar" then lastly,
>> "baz".
>
> Yes, that's how Mason, Myghty and all those do it.
>
>> This enforces a needless dependency upon containment.  Why does
>> the resource living at "baz" have to depend upon "foo" and "bar" in
>> order to produce a representation of "baz"?  Answer: It doesn't have to,
>> and it shouldn't.
>
> Please define 'resource' here.
>

See http://en.wikipedia.org/wiki/Representational_State_Transfer

> I agree with the 'should not have to depend on' statement if you are  
> speaking about programm code, i.e. perl or python objects.
>

You can't get away from it: a python object is responsible for rendering
the template.  The template by itself is just a text file; in order to
define the kind of template inheritance you seem to prefer, you have to
do it in code.  So you are, in fact, enforcing dependencies in code.

> Concerning HTML Fragments or templates, I do not agree. You don't want  
> to output a table row (<tr...>) if you are not in a table definition  
> (<table...>).
>

Precisely.  Given that you have to output the table anyway, you have
created a tight coupling between your "row" template and your "table"
template.  If you can show me how having a "row" template and a "table"
template as opposed to a single template describing the entire table,
is in any way useful to a designer, I'll be amazed ;)

> I think it's important do distinguish between those two. I'm not sure  
> how to call it: code vs. design, controller vs. view or in your words:  
> dependency vs containment.
>

I call it a misguided emphasis on componentizing templates, rather than
componentizing application functionality, but that's just me ;)

> As of now, I don't know a decent way on how to represent containment in  
> nevow. (Yes, there are macros, but...)  I very much agree with you that  
> it has nothing to do with (code) dependencies even (OOP) inheritance.
>

Nevow does containment just fine.  There is a tree of resources, that's
the containment.  I think you're just way too focused on html markup, and
that causes you to ignore the fact that a resource in the tree may be
more than just a means of emitting html to a browser.

>>  Put more simply, the problem with both "template-per-segment" and
>> acquisition is that they do not scale.  Cannot scale.  Will never
>> be made to scale without massive effort on the part of the coder,
>> and weren't you thinking that you wanted this model because it would
>> be *less* work?
>
> Your 'scaling' is referring to the amount of human work, right?
>

Yes, and also to the performance of the application.  The more complex
your template nesting becomes, the slower the server will be.  The
common answer is "but, caching!".  My rebuttal: Caching is a great
thing, but it shouldn't be used as a means of making inefficient
architectures tolerably performant.  It should be used to make an
efficient architecture more scalable.  In other words, it should
be a vitamin supplement, not a pain-reliever.

> Maybe it's not "template-per-segment", but some form of template  
> containment is necessary, IMHO. It reduces the amount of work for  
> template designers.
>

There's the magic phrase: IMHO.  I simply can't agree with you on this,
as my own experience is the opposite of yours.

Creating snippets of html does *not* reduce the designer's work.  The
average designer uses tools, and those tools usually result in complete
page of html markup.  You're actually imposing more work on them, not
by making them cut-down their tool's output to match your vision of
template reusability.

Someone will doubtless object strenuously to my use of the phrase, "the
average designer".  Insert disclaimer about how my generalizations do
not apply to anyone else in the world, etc.

>> That said, nevow could certainly use some help in documenting what the
>> "best practices" are, for building both nevow sites, and nevow apps.
>> I have long had good intentions about helping in this area, but I have
>> so far failed to find time to do it.
>
> Well, some people even read mailing lists. So you've already helped  
> somewhat!
>

I'm certainly glad if this discussion proves useful to someone.

> Certainly URL segments do not equal inheritance in the code. Sometimes  
> not even containment on the template level (as in  
> "template-per-segment"). OTOH, the URL hierarchy very often resembles  
> the template hierarchy (especially for websites).
>

It does?  Your statement assumes that most web sites do things the way
Myghty or Mason do.  I'd revise that statement to say "the URL hierarchy
in a Mason or Myghty application often (always) resembles the template
hierarchy".

Whether the majority of web sites actually do things that way or not
is open to debate of course.

>> WSGI.  This is one that I am virtually certain to be alone on.  The
>> fact is, some very smart people came up with WSGI.  Another fact is
>> that some very smart people came up with SOAP, WSDL, UDDI, etc.
>
> Please define 'smart' ;-)
>
> No, seriously, I'm not a fan of all of those, so...
>

By "smart", I mean "possessed of intelligence, education, and experience".
That's certainly not the best definition in the world, but it is the one
I find useful.

I made mention of it to underscore the fact that simply because some
very smart people produce a solution, it does not always follow that the
solution is good.

The twisted devs are all very smart people, and they'll certainly attest
that there are things in twisted that didn't turn out to be great.  That
they recognize it, and work to improve those areas, is one of the things
I like about the twisted project.

>> I find WSGI of little value because, to me, it is just another attempt
>> at creating the "lego" model.  Every once in awhile, some smart people
>> get together and try to come up with a component model that will truly
>> give them "lego" style pluggability.  WSGI is all about saying, "hey,
>> choose whatever app server you want, as long as it speaks German. Want
>> a session component?  Go ahead, use any one you like, as long as it
>> speaks German.  An ORM?  If it speaks German, you're good to go!"
>
> Oh, I'm glad I'm speaking German :-)
>

Nicht sprechen sie gut Deutsch, I'm afraid :)

>> Seriously, the whole pluggability, freedom-of-choice thing is a bunch
>> of nonsense.  Who the hell cares if you can plug stuff together, when
>> it all has to plug together in the same way?  Any color you want, as
>> long as it is black.
>
> I guess they are all looking for the most colorful variant of black. ;-)
>

Again, that's precisely my point.  Everyone likes their own idea best.

>> Also, I've been using twisted since version 0.9 or so, and WSGI is
>> very honest about saying that it doesn't really have anything useful
>> to contribute to the async model of web development.  WSGI is really
>> great for those people who like threads, and that's great for them.
>> For people who prefer async architectures, WSGI will never be a good
>> fit.  Note that web2 does support WSGI, but in order to do so, it
>> has to give up most of the value of being async.
>
> I don't want to get into the sync vs async issue now, but it would  
> certainly be possible to write an async WSGI-like interface, doing  
> similar URL segment processing, content filtering and such. Why should  
> such a thing not be great if you consider WSGI to be "great for people  
> who like threads" (i.e. sync)?
>

Read the WSGI archives from the beginning.  You'll see the debate about
async apps, and you'll see why they decided that WSGI doesn't really
address asynchronous servers.  Trust me, the reasons are there, and
they are laid out in excellent detail by Phillip J. Eby.

Also, when I say "great for people who like threads", I am being mean.
I think people who like threads are hopelessly misguided, much as I
think people who focus on server-side template includes are misguided ;)

> As you might have guessed, I do not agree with your point of view  
> regarding the 'lego model'. I'm surprised to read that "pluggability ...  
> is a bunch of nonsense" from somebody who obviously knows OOP, python,  
> interfaces, etc.. I don't understand how you came to that conclusion (or  
> believe) WRT templates.
>

I was fairly certain you weren't going to change your views based on
any argument I might make.  This *is* the Internet, after all, and I
find very few cases where someone actually changes their mind about
anything as the result of a debate on a mailing list.

As for being surprised by my dislike of the "lego" model, I'll answer
thusly:

"""
According to some accounts, Emerson visited Thoreau in jail and
asked, ?Henry, what are you doing in there?? Thoreau replied,
?Waldo, the question is what are you doing out there??
"""

> Again, thank you for your answer. I very much enjoy discussing such  
> design issues.
>

You're welcome.  I doubt we'll ever agree on these matters, but I
do believe in respectful disagreement.

> Regards
>
> Markus
>

L. Daniel Burr

From nico at tekNico.net  Thu Oct 12 16:12:41 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Thu Oct 12 17:23:01 2006
Subject: [Twisted-web] Re: fragments with child lookup
In-Reply-To: <op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>	<451810DB.4040300@bluegap.ch>	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>	<4519827E.2080502@bluegap.ch>	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E035F.2020006@bluegap.ch>
	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <egmb46$ab4$1@sea.gmane.org>

[warning: unabashed fanboyism follows, can't help it :-) ]


L. Daniel Burr wrote:
> That said, nevow could certainly use some help in documenting what the
> "best practices" are, for building both nevow sites, and nevow apps.
> I have long had good intentions about helping in this area, but I have
> so far failed to find time to do it.

Man, you definitely need to write more docs, you're good. :-)


> WSGI.  This is one that I am virtually certain to be alone on.

No, you're not. :-)


> The
> fact is, some very smart people came up with WSGI.  Another fact is
> that some very smart people came up with SOAP, WSDL, UDDI, etc.

And some even smarter people (Roy Fielding) just looked at the Web, and
described it under the REST moniker.


> Seriously, the whole pluggability, freedom-of-choice thing is a bunch
> of nonsense.  Who the hell cares if you can plug stuff together, when
> it all has to plug together in the same way?  Any color you want, as
> long as it is black.

Well, that's true for any purported standard. The point is, is it a useful
thing?


> Also, I've been using twisted since version 0.9 or so, and WSGI is
> very honest about saying that it doesn't really have anything useful
> to contribute to the async model of web development.  WSGI is really
> great for those people who like threads, and that's great for them.

No, it's not.


> For people who prefer async architectures, WSGI will never be a good
> fit.  Note that web2 does support WSGI, but in order to do so, it
> has to give up most of the value of being async.

Exactly, and that's why it's not useful.


> Many people will disagree with my stance on these topics, I'm sure.
> On the other hand, this rant is so long that many will simply avoid
> responding ;)

And some others will stand up and cheer. :-)


-- 
Nicola Larosa - http://www.tekNico.net/

One more poor soul lost to PHP is one too many...
 -- Todd O'Bryan, May 2006


From nico at tekNico.net  Thu Oct 12 16:18:25 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Thu Oct 12 17:24:40 2006
Subject: [Twisted-web] Re: fragments with child lookup
In-Reply-To: <op.thbp3oob3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>	<451810DB.4040300@bluegap.ch>	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>	<4519827E.2080502@bluegap.ch>	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E035F.2020006@bluegap.ch>	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E8C3C.6090404@bluegap.ch>
	<op.thbp3oob3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <egmbet$br6$1@sea.gmane.org>

[warning: *more* unabashed fanboyism follows]


L. Daniel Burr wrote:
> Caching is a great
> thing, but it shouldn't be used as a means of making inefficient
> architectures tolerably performant.  It should be used to make an
> efficient architecture more scalable.  In other words, it should
> be a vitamin supplement, not a pain-reliever.

Wow. Write more docs, man. ;-)


> Read the WSGI archives from the beginning.

You mean the Web-SIG mailing list, or elsewhere?


> You'll see the debate about
> async apps, and you'll see why they decided that WSGI doesn't really
> address asynchronous servers.  Trust me, the reasons are there, and
> they are laid out in excellent detail by Phillip J. Eby.
> 
> Also, when I say "great for people who like threads", I am being mean.
> I think people who like threads are hopelessly misguided,

...but we will save them poor souls! ;-)


-- 
Nicola Larosa - http://www.tekNico.net/

One more poor soul lost to PHP is one too many...
 -- Todd O'Bryan, May 2006


From jml at mumak.net  Thu Oct 12 18:00:54 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu Oct 12 18:00:56 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <20061012135534.26151.916367382.divmod.quotient.10@ohm>
References: <d06a5cd30610120543w5defff2btb5223a55b51a3aa@mail.gmail.com>
	<20061012135534.26151.916367382.divmod.quotient.10@ohm>
Message-ID: <d06a5cd30610121600n2c67616cwd191fb0c1608992d@mail.gmail.com>

On 10/12/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
> On Thu, 12 Oct 2006 22:43:28 +1000, Jonathan Lange <jml@mumak.net> wrote:
> >On 10/12/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
> >>On Thu, 12 Oct 2006 17:45:40 +1000, Jonathan Lange <jml@mumak.net> wrote:
> >> >* How does nevow:data stuff work in a world without context?
> >>
> >>I don't know.  It doesn't so far.
> >
> >Will it?
>
> Don't know that, either.  Convince me. :)
>

Allow me to question your answer with a question: How does one render
a sequence without nevow:data directives?

<ul n:data="foo" n:render="sequence">
<li n:pattern="item">
<n:invisible n:data="name" n:render="string"/>
</li>
</ul>

> >> >* nevow-rendering.txt should be updated. It currently recommends that
> >> >people use the context.
> >>
> >>Patches accepted, etc (please convert it from rest to lore too :( ).
> >
> >I don't understand Nevow enough. Anyway, isn't the target a little mobile?
>
> Include tests that fail when it gets out of date.  I'll make sure they
> keep passing. :)
>

I appreciate that. Maybe I'll hold you to it. :)

However, if I don't know the right way to build a list of things, then
it's going to be an useless document.

cheers,
jml

From exarkun at divmod.com  Thu Oct 12 19:06:56 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Oct 12 19:06:59 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <d06a5cd30610121600n2c67616cwd191fb0c1608992d@mail.gmail.com>
Message-ID: <20061013000656.26151.1253819270.divmod.quotient.395@ohm>

On Fri, 13 Oct 2006 09:00:54 +1000, Jonathan Lange <jml@mumak.net> wrote:
>On 10/12/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
>>On Thu, 12 Oct 2006 22:43:28 +1000, Jonathan Lange <jml@mumak.net> wrote:
>> >On 10/12/06, Jean-Paul Calderone <exarkun@divmod.com> wrote:
>> >>On Thu, 12 Oct 2006 17:45:40 +1000, Jonathan Lange <jml@mumak.net> wrote:
>> >> >* How does nevow:data stuff work in a world without context?
>> >>
>> >>I don't know.  It doesn't so far.
>> >
>> >Will it?
>>
>>Don't know that, either.  Convince me. :)
>
>Allow me to question your answer with a question: How does one render
>a sequence without nevow:data directives?
>
><ul n:data="foo" n:render="sequence">
><li n:pattern="item">
><n:invisible n:data="name" n:render="string"/>
></li>
></ul>

Perhaps like this:

    <n:invisible n:render="foo_sequence" />

Combined with this:

    def foo_sequence(self, req, tag):
        return Sequence(foo)


Jean-Paul

From manlio_perillo at libero.it  Fri Oct 13 10:25:12 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri Oct 13 10:22:16 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <op.thbkgrzw3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>	<451810DB.4040300@bluegap.ch>	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>	<4519827E.2080502@bluegap.ch>	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E035F.2020006@bluegap.ch>	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E7BAA.5040504@libero.it>
	<op.thbkgrzw3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <452FAFD8.4070003@libero.it>

L. Daniel Burr ha scritto:
> Hi Manlio,
> 
> On Thu, 12 Oct 2006 12:30:18 -0500, Manlio Perillo
> <manlio_perillo@libero.it> wrote:
> 
>> L. Daniel Burr ha scritto:
>>> [...]
>>>
>>> Ok, first things first.  The reason I hate "template per segment"
>>> designs
>>> is the same reason that I hate Zope acquisition.  They both suffer from
>>> the same illness, which is complexity. Take the following URL:
>>>
>>> http://myhost.com/foo/bar/baz
>>>
>>> This URL identifies a resource, and when some client requests this URL,
>>> a representation of that resource will be sent to the client.  In order
>>> to render this representation in "template-per-segment" design, I have
>>> to first traverse the tree and render "foo", then "bar" then lastly,
>>> "baz".  This enforces a needless dependency upon containment.  Why does
>>> the resource living at "baz" have to depend upon "foo" and "bar" in
>>> order to produce a representation of "baz"?
>>
>> Because it is a child of foo and bar.
>>
> 
> That's closer to a tautology than an answer ;)
> 
>> It is thanks to "template per segment" design, that guard can do its
>> job...
>>
> 
> No, it is thanks to "tree of resources" design, that guard can do its
> job.  That is not the same thing as saying that every segment has a
> template.  Some resources do *not* render anything; instead, via
> locateChild, or other mechanisms, they return other resources.
> 


Then I don't understand what do you mean by "template-per-segment" design...

In the URL http://myhost.com/foo/bar/baz, the resource living at baz
depends upon foo and bar because of the "tree of resurces" design.




Regards  Manlio Perillo

From ldanielburr at mac.com  Fri Oct 13 10:58:03 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri Oct 13 10:58:11 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <452FAFD8.4070003@libero.it>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>
	<451810DB.4040300@bluegap.ch>
	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>
	<4519827E.2080502@bluegap.ch>
	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<452E035F.2020006@bluegap.ch>
	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<452E7BAA.5040504@libero.it>
	<op.thbkgrzw3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<452FAFD8.4070003@libero.it>
Message-ID: <op.thdam1pn3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Fri, 13 Oct 2006 10:25:12 -0500, Manlio Perillo  
<manlio_perillo@libero.it> wrote:

> L. Daniel Burr ha scritto:
[SNIP]
>> No, it is thanks to "tree of resources" design, that guard can do its
>> job.  That is not the same thing as saying that every segment has a
>> template.  Some resources do *not* render anything; instead, via
>> locateChild, or other mechanisms, they return other resources.
>>
>
>
> Then I don't understand what do you mean by "template-per-segment"  
> design...
>
> In the URL http://myhost.com/foo/bar/baz, the resource living at baz
> depends upon foo and bar because of the "tree of resurces" design.
>

Sorry, I realize terminology can be imprecise and confusing in many
cases.  "template-per-segment", as I am using it, means this: each
segment in the URL corresponds to an HTML/XML/XHTML/Whatever template.

In nevow, this does not have to be the case.  A resource might only
return child resources, and have no template of its own.  In fact,
this is one of the really useful things about the tree-of-resource
structure: Some resources have concrete representations, and some
are purely logical.

The point I am trying to make, and have apparently failed to make,
is that URL segment != markup snippet.  A "template-per-segment"
design means that every segment must have a corresponding template
that gets rendered as some kind of markup.  It also means that each
template depends on markup from the template containing it, which
is what I am objecting to so strenuously.

Also, your statement that "baz" depends upon "foo" and "bar" is not
necessarily true.  "baz" is clearly contained within "bar", which is
contained within "foo".  Containment != dependency.  This does not
preclude enforcing a dependency if you so desire, but I think that
mandating such a dependency is unnecessary and limiting.

Is this explanation any clearer?


> Regards  Manlio Perillo

L. Daniel Burr

From manlio_perillo at libero.it  Fri Oct 13 11:35:28 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri Oct 13 11:32:32 2006
Subject: [Twisted-web] fragments with child lookup
In-Reply-To: <op.thdam1pn3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060925153814.1717.885910867.divmod.quotient.59655@ohm>	<451810DB.4040300@bluegap.ch>	<op.tgf3r7z53oj628@l-daniel-burrs-powerbook-g4-17.local>	<4519827E.2080502@bluegap.ch>	<op.tgh6omqn3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E035F.2020006@bluegap.ch>	<op.thbjecrf3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452E7BAA.5040504@libero.it>	<op.thbkgrzw3oj628@l-daniel-burrs-powerbook-g4-17.local>	<452FAFD8.4070003@libero.it>
	<op.thdam1pn3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <452FC050.3080605@libero.it>

L. Daniel Burr ha scritto:
> [...]

> Sorry, I realize terminology can be imprecise and confusing in many
> cases.  "template-per-segment", as I am using it, means this: each
> segment in the URL corresponds to an HTML/XML/XHTML/Whatever template.
> 

Ok.

> In nevow, this does not have to be the case.  A resource might only
> return child resources, and have no template of its own.  In fact,
> this is one of the really useful things about the tree-of-resource
> structure: Some resources have concrete representations, and some
> are purely logical.
> 

Yes, this is very useful.

> The point I am trying to make, and have apparently failed to make,
> is that URL segment != markup snippet. 

This is clear, IMHO.
A IResource has not only renderHTTP, but also locateChild.

> A "template-per-segment"
> design means that every segment must have a corresponding template
> that gets rendered as some kind of markup.  It also means that each
> template depends on markup from the template containing it, which
> is what I am objecting to so strenuously.
> 

Here, again, I don't understand.
What means that "each template depends on markup from the template
containing it"?

> Also, your statement that "baz" depends upon "foo" and "bar" is not
> necessarily true.  "baz" is clearly contained within "bar", which is
> contained within "foo".  Containment != dependency.  This does not
> preclude enforcing a dependency if you so desire, but I think that
> mandating such a dependency is unnecessary and limiting.
> 
> Is this explanation any clearer?
> 

Yes, thanks.



Regards  Manlio Perillo

From gscott2112 at gmail.com  Fri Oct 13 14:25:53 2006
From: gscott2112 at gmail.com (Gordon Scott)
Date: Fri Oct 13 14:25:57 2006
Subject: [Twisted-web] Question about url rewriting
Message-ID: <8c856b690610131225l5f9b3a6br36c00d72faeb603@mail.gmail.com>

Hi I'm looking into using twisted and possibly twisted web in a small
project I'm doing.

I've been fumbling through the documentation trying to figure out how url
rewriting works, or a way to short circuit request processing.

Bascially I want to serve dynamic images but the clients are all expecting
pretty urls that end in the correct file extension.

An example might be

http://someserver.com/images/600x800/watermark/file_a.png

where 600x800 and watermark are file parameters

since obviously I won't have '600x800', 'watermark', and 'file_a.png' as
resources I either need to stop processing with the 'image' resource,  or

rewrite the request as  /image/getImage.rpy?size=600x800&wm=watermark

But I can't seem to find an example of terminating a request early or how to
correctlly setup the a rewrite object.

If anyone knows of where to go look at examples of such usage that would be
great.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20061013/ff50ea64/attachment.htm
From radix at twistedmatrix.com  Fri Oct 13 14:33:16 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri Oct 13 14:33:22 2006
Subject: [Twisted-web] Question about url rewriting
In-Reply-To: <8c856b690610131225l5f9b3a6br36c00d72faeb603@mail.gmail.com>
References: <8c856b690610131225l5f9b3a6br36c00d72faeb603@mail.gmail.com>
Message-ID: <60ed19d40610131233v4033c7fer41774bfea830b160@mail.gmail.com>

On 10/13/06, Gordon Scott <gscott2112@gmail.com> wrote:
> An example might be
>
>  http://someserver.com/images/600x800/watermark/file_a.png
>
> where 600x800 and watermark are file parameters
>
> since obviously I won't have '600x800', 'watermark', and 'file_a.png' as
> resources I either need to stop processing with the 'image' resource,  or

Well, it's not *necessarily* a bad idea to make individual resources
for each of those segments. It can often make sense to make a resource
which only manages children.

However, if you do want to handle all of those parameters at once,
then override locateChild on your "images" resource. It will be passed
a context (probably soon to become a request) and segments. The
segments will be a tuple like ("600x800", "watermark", "file_a.png").
Then locateChild should "return imageResource, ()", where () means
"there should be no further processing of segments".


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From mithrandi-twisted-web at mithrandi.za.net  Mon Oct 16 07:07:13 2006
From: mithrandi-twisted-web at mithrandi.za.net (Tristan Seligmann)
Date: Mon Oct 16 07:06:50 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <d06a5cd30610121600n2c67616cwd191fb0c1608992d@mail.gmail.com>
References: <d06a5cd30610120543w5defff2btb5223a55b51a3aa@mail.gmail.com>
	<20061012135534.26151.916367382.divmod.quotient.10@ohm>
	<d06a5cd30610121600n2c67616cwd191fb0c1608992d@mail.gmail.com>
Message-ID: <20061016120712.GG14742@mithrandi.za.net>

* Jonathan Lange <jml@mumak.net> [2006-10-13 09:00:54 +1000]:

> Allow me to question your answer with a question: How does one render
> a sequence without nevow:data directives?
> 
> <ul n:data="foo" n:render="sequence">
> <li n:pattern="item">
> <n:invisible n:data="name" n:render="string"/>
> </li>
> </ul>

I generally just do something like this:

<ul n:render="products">
<li n:pattern="item">
<n:slot name="name" />
</li>
</ul>

The "products" renderer is then implemented by handing the relevant data
to a helper function.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20061016/30876f54/attachment.pgp
From lucaberto at libero.it  Tue Oct 17 10:27:56 2006
From: lucaberto at libero.it (lucaberto@libero.it)
Date: Tue Oct 17 10:28:00 2006
Subject: [Twisted-web] pop3server.py
Message-ID: <J7ADMK$4A0A79D1638607512E58D5EEFD83432F@libero.it>

Hello i'm making this test using the program written in twisted book on page 134 to 136 but i get this error:

passwordChecker = CredentialsChecker(passwords)
NameError: name 'CredentialsChecker' is not defined

Why?





------------------------------------------------------
Risparmia fino al 30% sulla Rc auto e approffitta dello sconto extra del 10%, fino al 31 Ottobre! Scegli Direct Line!
http://click.libero.it/direct_line6



From duncan.mcgreggor at gmail.com  Tue Oct 17 12:11:17 2006
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Tue Oct 17 12:11:26 2006
Subject: [Twisted-web] pop3server.py
In-Reply-To: <J7ADMK$4A0A79D1638607512E58D5EEFD83432F@libero.it>
References: <J7ADMK$4A0A79D1638607512E58D5EEFD83432F@libero.it>
Message-ID: <45350EB5.8010506@gmail.com>

lucaberto@libero.it wrote:

> Hello i'm making this test using the program written in twisted book
> on page 134 to 136 but i get this error:
> 
> passwordChecker = CredentialsChecker(passwords) NameError: name
> 'CredentialsChecker' is not defined
> 
> Why?

Is it anywhere in your code? Is it in any file you have imported?

It's either missing or misspelled.

d

From ptonning at yahoo.com  Tue Oct 17 18:47:48 2006
From: ptonning at yahoo.com (Paul Tonning)
Date: Tue Oct 17 18:47:51 2006
Subject: [Twisted-web] Crypto with py2exe
Message-ID: <20061017234748.23478.qmail@web31012.mail.mud.yahoo.com>

I have a twisted app using Crypto
(twisted.internet.ssl)

Works great, but when I use py2exe to create a
standalone I get 
NameError: Can't find file for module Crypto

All of the Ciphers compile to .pyd files and are in
the dist directory but there is no Crypto.pyd file. 
Any ideas or possible work arounds?

Thanks in advance.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From exarkun at divmod.com  Tue Oct 17 19:45:01 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Oct 17 19:45:03 2006
Subject: [Twisted-web] Crypto with py2exe
In-Reply-To: <20061017234748.23478.qmail@web31012.mail.mud.yahoo.com>
Message-ID: <20061018004501.26151.1058928192.divmod.quotient.5357@ohm>

On Tue, 17 Oct 2006 16:47:48 -0700 (PDT), Paul Tonning <ptonning@yahoo.com> wrote:
>I have a twisted app using Crypto
>(twisted.internet.ssl)
>
>Works great, but when I use py2exe to create a
>standalone I get
>NameError: Can't find file for module Crypto
>
>All of the Ciphers compile to .pyd files and are in
>the dist directory but there is no Crypto.pyd file.
>Any ideas or possible work arounds?
>
>Thanks in advance.
>

This would be more appropriate on a py2exe list, since the problem
you're having is py2exe induced.  Twisted itself isn't responsible
for providing Crypto to your runtime, nor does it care how it gets
there, so long as it does somehow.

Jean-Paul

From aleuser at inwind.it  Tue Oct 17 23:45:46 2006
From: aleuser at inwind.it (Alessandro)
Date: Tue Oct 17 23:41:50 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <20061013000656.26151.1253819270.divmod.quotient.395@ohm>
References: <20061013000656.26151.1253819270.divmod.quotient.395@ohm>
Message-ID: <4535B17A.8030301@inwind.it>

Jean-Paul Calderone wrote:
>> Allow me to question your answer with a question: How does one render
>> a sequence without nevow:data directives?
>>
>> <ul n:data="foo" n:render="sequence">
>> <li n:pattern="item">
>> <n:invisible n:data="name" n:render="string"/>
>> </li>
>> </ul>
> Perhaps like this:
>
>    <n:invisible n:render="foo_sequence" />
>
> Combined with this:
>
>    def foo_sequence(self, req, tag):
>        return Sequence(foo)
>
>
> Jean-Paul
>
I didn't understand, and I can't find so much informations on internet: 
in the future the "n:data" will be not available? This will be the only 
modification? And the python rendering functions will be always 
"render_func(self, ctx, data) ?

Thanks
Alessandro

From exarkun at divmod.com  Wed Oct 18 07:16:37 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Oct 18 07:16:42 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <4535B17A.8030301@inwind.it>
Message-ID: <20061018121637.26151.284481676.divmod.quotient.5824@ohm>

On Wed, 18 Oct 2006 06:45:46 +0200, Alessandro <aleuser@inwind.it> wrote:
>Jean-Paul Calderone wrote:
>>>Allow me to question your answer with a question: How does one render
>>>a sequence without nevow:data directives?
>>>
>>><ul n:data="foo" n:render="sequence">
>>><li n:pattern="item">
>>><n:invisible n:data="name" n:render="string"/>
>>></li>
>>></ul>
>>Perhaps like this:
>>
>>    <n:invisible n:render="foo_sequence" />
>>
>>Combined with this:
>>
>>    def foo_sequence(self, req, tag):
>>        return Sequence(foo)
>>
>>
>>Jean-Paul

>I didn't understand, and I can't find so much informations on internet: in 
>the future the "n:data" will be not available?

This is not yet decided.

>This will be the only modification?

Likely there will be others :)

>And the python rendering functions will be always 
>"render_func(self, ctx, data) ?

New render functions will probably take a request object and a tag object.

All of these API changes will be introduced gradually and with either a
backwards compatibility API or a long period of deprecation warnings for
the old API before the old API stops working.

Jean-Paul

From aleuser at inwind.it  Wed Oct 18 11:11:59 2006
From: aleuser at inwind.it (Alessandro)
Date: Wed Oct 18 11:31:37 2006
Subject: [Twisted-web] Don't use the context?
In-Reply-To: <20061018121637.26151.284481676.divmod.quotient.5824@ohm>
References: <20061018121637.26151.284481676.divmod.quotient.5824@ohm>
Message-ID: <4536524F.80200@inwind.it>

Jean-Paul Calderone wrote:
> All of these API changes will be introduced gradually and with either a
> backwards compatibility API or a long period of deprecation warnings for
> the old API before the old API stops working.
>
> Jean-Paul
That's all I want to hear!

Thanks

Alessandro

From mikeal at osafoundation.org  Wed Oct 18 20:46:33 2006
From: mikeal at osafoundation.org (Mikeal Rogers)
Date: Wed Oct 18 20:46:36 2006
Subject: [Twisted-web] web2 proxy docs?
Message-ID: <650F1A46-A008-471B-9338-A1C272ABAC6C@osafoundation.org>

Is there any web2 specific proxy documentation, or anything I need to  
know when using the web2 proxy that differs from old web proxy  
documentation?

-Mikeal

From aleuser at inwind.it  Fri Oct 20 05:58:22 2006
From: aleuser at inwind.it (aleuser@inwind.it)
Date: Fri Oct 20 05:58:26 2006
Subject: [Twisted-web] nevow athena: node id issue (bug?)
Message-ID: <J7FL5A$B9EA4BC2B432F26C87A7C57006880C0F@libero.it>

Hi,
  I have many problems with nodes "id" attributes; using loaders.xmlstr all id names will be converted to "athena:X-nameid", but using loaders.stan they will be converted to "athena:X-athena:X-nameid"

Client side "self.nodeById('nameid')" function is not able to locate the correct node if the node has been created with loaders.stan.

Do you think is a bug?


For example, you can modify the 
examples/athenademo/widgets.py

modifying the Clock class:
from nevow import tags as T
docFactory = loaders.stan(T.div(id="test_id")[' this is a test '])

and the source html will be
...
<div id="athenaid:1-athenaid:1-test_id"> this is a test </div></div
...
<div id="athenaid:2-athenaid:2-test_id"> this is a test </div></div


Alessandro


------------------------------------------------------
Riascolta i tuoi 33 e 45 giri con un bellissimo Giradischi Retr?, tecnologia HI-FI, collegamento PC e design anni '60 !
http://click.libero.it/dmail3



From aleuser at inwind.it  Fri Oct 20 08:04:37 2006
From: aleuser at inwind.it (aleuser@inwind.it)
Date: Fri Oct 20 08:04:41 2006
Subject: [Twisted-web] nevow athena: node id issue (bug?)
Message-ID: <J7FQZP$E75FDBAEB1F790C87AB067F4427348E2@libero.it>

> Hi,
>   I have many problems with nodes "id" attributes; using loaders.xmlstr all id names will be converted to "athena:X-nameid", but using loaders.stan they will be converted to "athena:X-athena:X-nameid"


It seems to be a LiveFragment issue; I have switched to LiveElement, and now that's all ok.


I'm speaking about the trunk code, so I think the examples will be update in the future.

Alessandro

PS: I'testing the rev 9594; the head revision has some problem istalling the "js" directory and I have to copy it manually under /usr/lib/python2.4/etc..



------------------------------------------------------
Riascolta i tuoi 33 e 45 giri con un bellissimo Giradischi Retr?, tecnologia HI-FI, collegamento PC e design anni '60 !
http://click.libero.it/dmail3



From exarkun at divmod.com  Fri Oct 20 09:52:13 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri Oct 20 09:52:17 2006
Subject: [Twisted-web] nevow athena: node id issue (bug?)
In-Reply-To: <J7FQZP$E75FDBAEB1F790C87AB067F4427348E2@libero.it>
Message-ID: <20061020145213.26151.895997349.divmod.quotient.8108@ohm>

On Fri, 20 Oct 2006 15:04:37 +0200, "aleuser@inwind.it" <aleuser@inwind.it> wrote:
>> Hi,
>>   I have many problems with nodes "id" attributes; using loaders.xmlstr all id names will be converted to "athena:X-nameid", but using loaders.stan they will be converted to "athena:X-athena:X-nameid"
>
>
>It seems to be a LiveFragment issue; I have switched to LiveElement, and now that's all ok.
>
>
>I'm speaking about the trunk code, so I think the examples will be update in the future.
>

These both sound like bugs which should be fixed.  Can you file two bug
reports at http://divmod.org/?

Jean-Paul

From aleuser at inwind.it  Fri Oct 20 11:49:19 2006
From: aleuser at inwind.it (aleuser@inwind.it)
Date: Fri Oct 20 11:49:23 2006
Subject: [Twisted-web] nevow athena: node id issue (bug?)
Message-ID: <J7G1E7$EAA708D62A89C8BD91EF2A2607876D74@libero.it>


> These both sound like bugs which should be fixed.  Can you file two bug
> reports at http://divmod.org/?
> 
> Jean-Paul

I have opened one ticket
http://divmod.org/trac/ticket/1638#preview


Alessandro


------------------------------------------------------
Riascolta i tuoi 33 e 45 giri con un bellissimo Giradischi Retr?, tecnologia HI-FI, collegamento PC e design anni '60 !
http://click.libero.it/dmail3



From iacovou at gmail.com  Tue Oct 31 03:58:35 2006
From: iacovou at gmail.com (kgi)
Date: Tue Oct 31 03:58:44 2006
Subject: [Twisted-web] How to insert an Athena event handler using Stan?
Message-ID: <200610311158.35557.iacovou@gmail.com>


Hi all.

I've got some LiveElements in an Athena page to which I want to attach event 
handlers. Their XHTML is stan-based.

What I've got right now (which works) is something like this, which I've 
understood is the Right Way to do it if you're explicitly using inline 
Javascript:

    _js = (
        "Nevow.Athena.Widget.get(this).keyPressed(this, event); " +
        "return false;"
    )

    docFactory = loaders.stan (
        T.div (
            render = T.directive ( 'liveElement' ),
            ) [
                "Blah Text Label",
                T.input (
                    type = "text",
                    _class = "sw-input",
                    onkeyup = _js,
                    ),
                T.div ( _class = "sw-output" ) [ "Blah More Text" ],
            ]
    )


There are messages in the mailing list (for example, from JP on October 11th 
2006) recommending that one should use the athena:handler feature, like this:

  <textarea>
    <athena:handler event="onkeypress" handler="keyPressed" />
  </textarea>

However, if one has stan-based rather than file-based XHTML, it's neither 
documented nor obvious how this should be done. I've managed to get this far:

    from nevow import stan
    ...
    _athena = stan.Proto (
        'athena:handler event="onkeypress" handler="keyPressed"'
    )
    ...
    T.input ( type = "text", _class = "sw-input" ) [ _athena ]

This serialises OK, but it doesn't work, because the node doesn't get 
rewritten; that is, the generated XHTML contains the athena:handler node 
verbatim.

Now, rewriteEventHandlerNodes() in Nevow/nevow/athena.py (around line 962) 
seems to traverse the tree looking for athena:handler nodes and replacing 
them with "Nevow.Athena.Widget.handleEvent()" Javascript, so I presume that 
the node I'm creating fails to get identified as an athena:handler node 
because I'm creating it incorrectly.

What is the correct way to create such a node such that it gets picked up by 
rewriteEventHandlerNodes()?

Regards,

Ricky

From mithrandi-twisted-web at mithrandi.za.net  Tue Oct 31 07:12:39 2006
From: mithrandi-twisted-web at mithrandi.za.net (Tristan Seligmann)
Date: Tue Oct 31 07:12:18 2006
Subject: [Twisted-web] How to insert an Athena event handler using Stan?
In-Reply-To: <200610311158.35557.iacovou@gmail.com>
References: <200610311158.35557.iacovou@gmail.com>
Message-ID: <20061031131238.GB7812@mithrandi.za.net>

* kgi <iacovou@gmail.com> [2006-10-31 11:58:35 +0200]:

> However, if one has stan-based rather than file-based XHTML, it's neither 
> documented nor obvious how this should be done. I've managed to get this far:
> 
>     from nevow import stan
>     ...
>     _athena = stan.Proto (
>         'athena:handler event="onkeypress" handler="keyPressed"'
>     )
>     ...
>     T.input ( type = "text", _class = "sw-input" ) [ _athena ]

stan.Proto takes a tag name, so you would really want
just stan.Proto('athena:handler'). However, there's already one of these
in athena, so you can just do:

from nevow import stan, athena
# ...
T.input(type='text', _class='sw-input')[
    athena.handler(event='onkeypress', handler='keypressed']
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20061031/4e0aaf36/attachment.pgp
From iacovou at gmail.com  Tue Oct 31 08:38:22 2006
From: iacovou at gmail.com (kgi)
Date: Tue Oct 31 08:38:32 2006
Subject: [Twisted-web] How to insert an Athena event handler using Stan?
In-Reply-To: <20061031131238.GB7812@mithrandi.za.net>
References: <200610311158.35557.iacovou@gmail.com>
	<20061031131238.GB7812@mithrandi.za.net>
Message-ID: <200610311638.22779.iacovou@gmail.com>

On Tuesday 31 October 2006 15:12, Tristan Seligmann wrote:
> * kgi <iacovou@gmail.com> [2006-10-31 11:58:35 +0200]:
> > However, if one has stan-based rather than file-based XHTML, it's neither
> > documented nor obvious how this should be done. I've managed to get this
> > far:
> >
> >     from nevow import stan
> >     ...
> >     _athena = stan.Proto (
> >         'athena:handler event="onkeypress" handler="keyPressed"'
> >     )
> >     ...
> >     T.input ( type = "text", _class = "sw-input" ) [ _athena ]
>
> stan.Proto takes a tag name, so you would really want
> just stan.Proto('athena:handler'). However, there's already one of these
> in athena, so you can just do:
>
> from nevow import stan, athena
> # ...
> T.input(type='text', _class='sw-input')[
>     athena.handler(event='onkeypress', handler='keypressed']

Thanks, Tristan; that's certainly a step forward: the tag is now being 
recognised and replaced. However, it's not quite perfect yet: the generated 
HTML is escaped:

  _handler = athena.handler ( event = 'onkeypress', handler = 'keyPressed' )
  ...
  T.input ( _class = "sw-input", type = "text" ) [ _handler ],

Results in:

<input type="text" class="sw-input" onkeypress="return 
Nevow.Athena.Widget.handleEvent(this, &quot;onkeypress&quot;, 
&quot;keyPressed&quot;);" />

Should I be wrapping it in anything else (T.raw()?).

Ricky

From exarkun at divmod.com  Tue Oct 31 09:25:31 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Oct 31 09:25:36 2006
Subject: [Twisted-web] How to insert an Athena event handler using Stan?
In-Reply-To: <200610311638.22779.iacovou@gmail.com>
Message-ID: <20061031152531.20948.1012821243.divmod.quotient.7476@ohm>

On Tue, 31 Oct 2006 16:38:22 +0200, kgi <iacovou@gmail.com> wrote:
>On Tuesday 31 October 2006 15:12, Tristan Seligmann wrote:
>> * kgi <iacovou@gmail.com> [2006-10-31 11:58:35 +0200]:
>> > However, if one has stan-based rather than file-based XHTML, it's neither
>> > documented nor obvious how this should be done. I've managed to get this
>> > far:
>> >
>> >     from nevow import stan
>> >     ...
>> >     _athena = stan.Proto (
>> >         'athena:handler event="onkeypress" handler="keyPressed"'
>> >     )
>> >     ...
>> >     T.input ( type = "text", _class = "sw-input" ) [ _athena ]
>>
>> stan.Proto takes a tag name, so you would really want
>> just stan.Proto('athena:handler'). However, there's already one of these
>> in athena, so you can just do:
>>
>> from nevow import stan, athena
>> # ...
>> T.input(type='text', _class='sw-input')[
>>     athena.handler(event='onkeypress', handler='keypressed']
>
>Thanks, Tristan; that's certainly a step forward: the tag is now being
>recognised and replaced. However, it's not quite perfect yet: the generated
>HTML is escaped:
>
>  _handler = athena.handler ( event = 'onkeypress', handler = 'keyPressed' )
>  ...
>  T.input ( _class = "sw-input", type = "text" ) [ _handler ],
>
>Results in:
>
><input type="text" class="sw-input" onkeypress="return
>Nevow.Athena.Widget.handleEvent(this, &quot;onkeypress&quot;,
>&quot;keyPressed&quot;);" />
>
>Should I be wrapping it in anything else (T.raw()?).

Are you sure this is causing a problem?  It looks correct to me. :)

<tag onkeypress="return foo("bar")"> would seriously confuse an html parser.

Jean-Paul

From phil at bubblehouse.org  Tue Oct 31 09:44:02 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Oct 31 09:44:13 2006
Subject: [Twisted-web] How to insert an Athena event handler using Stan?
In-Reply-To: <20061031152531.20948.1012821243.divmod.quotient.7476@ohm>
References: <20061031152531.20948.1012821243.divmod.quotient.7476@ohm>
Message-ID: <8F7B784E-06C1-4BF2-A45B-BE19B57F3B90@bubblehouse.org>

On Oct 31, 2006, at 10:25 AM, Jean-Paul Calderone wrote:
>> On Tuesday 31 October 2006 15:12, Tristan Seligmann wrote:
>> Results in:
>>
>> <input type="text" class="sw-input" onkeypress="return
>> Nevow.Athena.Widget.handleEvent(this, &quot;onkeypress&quot;,
>> &quot;keyPressed&quot;);" />
>>
>> Should I be wrapping it in anything else (T.raw()?).
>
> Are you sure this is causing a problem?  It looks correct to me. :)
>
> <tag onkeypress="return foo("bar")"> would seriously confuse an  
> html parser.

I am seeing the same behavior in my app, where I was working on  
implementing a feature similar to Tristan's. I'm seeing:

<input onkeypress="return Nevow.Athena.Widget.handleEvent(this,  
&quot;onkeypress&quot;, &quot;parse&quot;);" type="text" size="80" />

I updated before trying it, so this is from SVN r9862.

-phil

From phil at bubblehouse.org  Tue Oct 31 10:57:05 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Oct 31 10:57:15 2006
Subject: [Twisted-web] How to insert an Athena event handler using Stan?
In-Reply-To: <8F7B784E-06C1-4BF2-A45B-BE19B57F3B90@bubblehouse.org>
References: <20061031152531.20948.1012821243.divmod.quotient.7476@ohm>
	<8F7B784E-06C1-4BF2-A45B-BE19B57F3B90@bubblehouse.org>
Message-ID: <20213D9B-8139-4B01-BBD1-E4867B11760A@bubblehouse.org>

On Oct 31, 2006, at 10:44 AM, Phil Christensen wrote:
> On Oct 31, 2006, at 10:25 AM, Jean-Paul Calderone wrote:
>> Are you sure this is causing a problem?  It looks correct to me. :)
>>
>> <tag onkeypress="return foo("bar")"> would seriously confuse an  
>> html parser.
>
> I am seeing the same behavior in my app, where I was working on  
> implementing a feature similar to Tristan's. I'm seeing:

Now I'm just realizing what JP was referring to. That's definitely  
acceptable syntax, but it still doesn't seem to be working for me.  
Using this:

  T.div(render=T.directive('liveElement'))[
  T.input(type="text", size=80, onKeyUp='Nevow.Athena.Widget.get 
(this).parse(event)')
  ]

works, but this:

  T.div(render=T.directive('liveElement'))[
  T.input(type='text', size=80)[athena.handler(event='onkeypress',  
handler='parse')]])
  ]

fails without generating any error. I guess I'm okay with the first  
version for my particular use-case, but I'd be interested to know if  
there's something obvious I'm missing, or other information I can  
supply.

-phil

From exarkun at divmod.com  Tue Oct 31 13:56:19 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Oct 31 13:56:22 2006
Subject: [Twisted-web] How to insert an Athena event handler using Stan?
In-Reply-To: <20213D9B-8139-4B01-BBD1-E4867B11760A@bubblehouse.org>
Message-ID: <20061031195619.20948.1261871051.divmod.quotient.7775@ohm>

On Tue, 31 Oct 2006 11:57:05 -0500, Phil Christensen <phil@bubblehouse.org> wrote:
> [snip]
>
>Now I'm just realizing what JP was referring to. That's definitely 
>acceptable syntax, but it still doesn't seem to be working for me.  Using 
>this:
>
>  T.div(render=T.directive('liveElement'))[
>  T.input(type="text", size=80, onKeyUp='Nevow.Athena.Widget.get 
>(this).parse(event)')
>  ]
>
>works, but this:
>
>  T.div(render=T.directive('liveElement'))[
>  T.input(type='text', size=80)[athena.handler(event='onkeypress', 
>handler='parse')]])
>  ]
>
>fails without generating any error. I guess I'm okay with the first  version 
>for my particular use-case, but I'd be interested to know if  there's 
>something obvious I'm missing, or other information I can  supply.

How does it fail?  Can you throw together a minimal self-contained example?
I use this in a lot of places and it works and as far as I understand there
is no reason it shouldn't.

Jean-Paul

From glyph at divmod.com  Tue Oct 31 14:49:25 2006
From: glyph at divmod.com (glyph@divmod.com)
Date: Tue Oct 31 14:49:50 2006
Subject: [Twisted-web] How to insert an Athena event handler using Stan?
Message-ID: <20061031204925.5287.1667927129.divmod.xquotient.6@joule.divmod.com>

On 07:56 pm, exarkun@divmod.com wrote:
>On Tue, 31 Oct 2006 11:57:05 -0500, Phil Christensen <phil@bubblehouse.org> 
>wrote:

>>  T.div(render=T.directive('liveElement'))[
>>  T.input(type='text', size=80)[athena.handler(event='onkeypress', 
>>handler='parse')]])
>>  ]
>>
>>fails without generating any error. I guess I'm okay with the first 
>>version for my particular use-case, but I'd be interested to know if 
>>there's something obvious I'm missing, or other information I can  supply.
>
>How does it fail?  Can you throw together a minimal self-contained example?
>I use this in a lot of places and it works and as far as I understand there
>is no reason it shouldn't.

Not only does it work, but we are trying to move towards that being the suggested style, as it generally has superior error-handling characteristics.  It would be really nice to get issues with it fixed, and even if this isn't a real problem, document it as a possible "gotcha" so people do not feel uneasy about taking this approach.

So.. got a unit test? :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20061031/4520ed77/attachment.htm
