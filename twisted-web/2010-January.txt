From drewp at bigasterisk.com  Fri Jan  1 22:43:14 2010
From: drewp at bigasterisk.com (Drew Perttula)
Date: Fri, 01 Jan 2010 19:43:14 -0800
Subject: [Twisted-web] twisted version of openid
In-Reply-To: <95bb10690912290825w5c45bd0akdcee5eb160b16645@mail.gmail.com>
References: <140575.11540.qm@web8708.mail.in.yahoo.com>
	<95bb10690912290825w5c45bd0akdcee5eb160b16645@mail.gmail.com>
Message-ID: <4B3EC0D2.2040709@bigasterisk.com>

Reza Lotun wrote:
> Hi Raj,
> 
>> Currently I'm having a server running under twisted. I'm planning to
>> implement openid in my application. Is there any twisted version of openid
>> api? I need some reference to go through openid examples.
> 
> Check out
> https://launchpad.net/txopenid
> 

I wrote a openid consumer for my own applications here:

http://bigasterisk.com/darcs/?r=nevowopenid;a=tree

It mostly sucks, but it probably beats starting from scratch.

One cool thing I have written with that library is an openid http proxy:

  user  --> openid_proxy -----------------> web app(s)
             (with nevowopenid.py)            (these receive simple
                                               http headers saying
                                               what openid was approved)

This is working really well for me, and it would be cool if it was 
easier for others to deploy. My openid_proxy program stores the sites, 
permissions, and user logins in an RDF graph store.




From eurleif at gmail.com  Sat Jan  2 22:26:57 2010
From: eurleif at gmail.com (Leif K-Brooks)
Date: Sat, 2 Jan 2010 22:26:57 -0500
Subject: [Twisted-web] 100% CPU; what are my options?
Message-ID: <85d9a9091001021926u450bf05aj4d6e3200370af02@mail.gmail.com>

Hey,

I operate Omegle (http://omegle.com/), which is a COMET-driven
Twisted.Web app. (It doesn't use Nevow or anything; just Twisted.Web.)
It gets fairly heavy traffic; right now, it peaks daily at around 6500
concurrent users. Technical details:

- Hosted on a Linode 2880 virtual private server
(https://www.linode.com/); Ubuntu, 2880 MB of RAM, 4 cores available
- EPollReactor

Omegle currently runs at close to 100% CPU for most of the day, and
I'm a bit concerned about that. Here are some questions I have:

- How much more load might my app be able to take before it dies?
Currently, during peak load, a request from localhost is completed in
around 350ms; not ideal, but acceptable. I think anything under 1000ms
would be all right, but I'd prefer the latency to be as low as
possible, of course. Is this likely to scale linearly with traffic, or
what?
- I've looked at my code pretty closely, and it doesn't seem to be
doing anything particularly inefficient, but are there any tricks I
might be able to use to increase performance? Tweaking settings, etc.?
- Ultimately, I think my app will need to be able to use multiple
cores. If I have to, I'm going to either rewrite it in Erlang, or
rewrite it to load balance across multiple Twisted processes. Is there
anything easier I could do to allow the use of multiple cores?

Thanks a lot,
Leif


From karnaugh at karnaugh.za.net  Sun Jan  3 01:20:52 2010
From: karnaugh at karnaugh.za.net (Colin)
Date: Sun, 3 Jan 2010 08:20:52 +0200
Subject: [Twisted-web] 100% CPU; what are my options?
In-Reply-To: <85d9a9091001021926u450bf05aj4d6e3200370af02@mail.gmail.com>
References: <85d9a9091001021926u450bf05aj4d6e3200370af02@mail.gmail.com>
Message-ID: <78bfcf051001022220k553e275fra664f5aee992f333@mail.gmail.com>

On Sun, Jan 3, 2010 at 5:26 AM, Leif K-Brooks <eurleif at gmail.com> wrote:

> Hey,
>
> I operate Omegle (http://omegle.com/), which is a COMET-driven
> Twisted.Web app. (It doesn't use Nevow or anything; just Twisted.Web.)
> It gets fairly heavy traffic; right now, it peaks daily at around 6500
> concurrent users. Technical details:
>

You should write a success story! I've used Omegle when the boredom hits
hard.


>
> - Hosted on a Linode 2880 virtual private server
> (https://www.linode.com/); Ubuntu, 2880 MB of RAM, 4 cores available
> - EPollReactor
>
> Omegle currently runs at close to 100% CPU for most of the day, and
> I'm a bit concerned about that.
>
>
Try use the standard reactor instead of epoll. I found a similar problem
when I switched my product to the epoll reactor, the cpu usage problem went
away when I reverted back to the normal reactor.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100103/92ff83ab/attachment.htm 

From chhetriarun84 at gmail.com  Sun Jan  3 02:29:19 2010
From: chhetriarun84 at gmail.com (Arun Gmail)
Date: Sun, 3 Jan 2010 01:29:19 -0600
Subject: [Twisted-web] 100% CPU; what are my options?
In-Reply-To: <78bfcf051001022220k553e275fra664f5aee992f333@mail.gmail.com>
References: <85d9a9091001021926u450bf05aj4d6e3200370af02@mail.gmail.com>
	<78bfcf051001022220k553e275fra664f5aee992f333@mail.gmail.com>
Message-ID: <F056208F-4293-4137-9FE3-F163A80FA78B@gmail.com>

Hey I believe twisted is developed in a way that it can only use one  
processor at a time. As process scheduling is part of operating system  
it can only schedule one twisted reactor based application on one  
processor. For taking advantage of multiple processor you can use  
fork, but then it is not twisted way of doing stuff,, i am a new bie  
in twisted world, so comments are appreciated. Moreover I think  
twisted is similar to C select for tcp server



Thanks
Arun

Sent from my iPhone

On Jan 3, 2010, at 12:20 AM, Colin <karnaugh at karnaugh.za.net> wrote:

>
>
> On Sun, Jan 3, 2010 at 5:26 AM, Leif K-Brooks <eurleif at gmail.com>  
> wrote:
> Hey,
>
> I operate Omegle (http://omegle.com/), which is a COMET-driven
> Twisted.Web app. (It doesn't use Nevow or anything; just Twisted.Web.)
> It gets fairly heavy traffic; right now, it peaks daily at around 6500
> concurrent users. Technical details:
>
> You should write a success story! I've used Omegle when the boredom  
> hits hard.
>
>
> - Hosted on a Linode 2880 virtual private server
> (https://www.linode.com/); Ubuntu, 2880 MB of RAM, 4 cores available
> - EPollReactor
>
> Omegle currently runs at close to 100% CPU for most of the day, and
> I'm a bit concerned about that.
>
>
> Try use the standard reactor instead of epoll. I found a similar  
> problem when I switched my product to the epoll reactor, the cpu  
> usage problem went away when I reverted back to the normal reactor.
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100103/21c269a0/attachment.htm 

From andrew at bemusement.org  Sun Jan  3 02:32:02 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 3 Jan 2010 18:32:02 +1100
Subject: [Twisted-web] 100% CPU; what are my options?
In-Reply-To: <85d9a9091001021926u450bf05aj4d6e3200370af02@mail.gmail.com>
References: <85d9a9091001021926u450bf05aj4d6e3200370af02@mail.gmail.com>
Message-ID: <20100103073202.GM2630@steerpike.home.puzzling.org>

Leif K-Brooks wrote:
[...]
> - EPollReactor
> 
> Omegle currently runs at close to 100% CPU for most of the day, and

100% CPU with epoll sounds like <http://twistedmatrix.com/trac/ticket/2809>,
which was fixed in Twisted 8.0.0.  Which version of Twisted are you using?

[...]
> - I've looked at my code pretty closely, and it doesn't seem to be
> doing anything particularly inefficient, but are there any tricks I
> might be able to use to increase performance? Tweaking settings, etc.?

Run it under a profiler.  You can't know where the time is going if you
don't measure.  Guesses about this sort of thing are usually wrong, so
measurement is vital.

-Andrew.



From clemesha at gmail.com  Sun Jan  3 04:10:02 2010
From: clemesha at gmail.com (Alex Clemesha)
Date: Sun, 3 Jan 2010 09:10:02 +0000
Subject: [Twisted-web] 100% CPU; what are my options?
In-Reply-To: <20100103073202.GM2630@steerpike.home.puzzling.org>
References: <85d9a9091001021926u450bf05aj4d6e3200370af02@mail.gmail.com>
	<20100103073202.GM2630@steerpike.home.puzzling.org>
Message-ID: <d272f0691001030110i602842e2g56bea35af3cc138d@mail.gmail.com>

On Sun, Jan 3, 2010 at 7:32 AM, Andrew Bennetts <andrew at bemusement.org> wrote:
> Leif K-Brooks wrote:
> [...]
>> - EPollReactor
>>
>> Omegle currently runs at close to 100% CPU for most of the day, and
I really hope us people on this mailing list can help you fix this issue,
instead of you re-writing your (very cool) app in Erlang or whatever.
In my opinion, then we will have a success story.

Load-balancing over several twisted.web instances seems like something
easy to try,
have you looked harder into that yet? Maybe because you are running the entire
app on just one machine you are seeing some sort of contention between
processes?

More statistics/benchmarks could really help us pin-point the issue.



>
> 100% CPU with epoll sounds like <http://twistedmatrix.com/trac/ticket/2809>,
> which was fixed in Twisted 8.0.0. ?Which version of Twisted are you using?
It looks like he is using version "TwistedWeb/8.1.0". (from the
Firefox 'server spy' plugin I have).


-Alex




>
> [...]
>> - I've looked at my code pretty closely, and it doesn't seem to be
>> doing anything particularly inefficient, but are there any tricks I
>> might be able to use to increase performance? Tweaking settings, etc.?
>
> Run it under a profiler. ?You can't know where the time is going if you
> don't measure. ?Guesses about this sort of thing are usually wrong, so
> measurement is vital.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



-- 
Alex Clemesha
clemesha.org


From chhetriarun84 at gmail.com  Wed Jan  6 21:04:22 2010
From: chhetriarun84 at gmail.com (arun chhetri)
Date: Wed, 6 Jan 2010 20:04:22 -0600
Subject: [Twisted-web] Parallelism is twisted
Message-ID: <8181edc01001061804s20cc0600of32c2ef206082c66@mail.gmail.com>

First of all I would like to thank to developer of twisted for making such a
great platform for network applications,, I just love it...
But for theory point of view I want to clear some of my doubts.

1) What is the underlying technology?
As, I believe that twisted is a TCP server which which uses select() based
call to handle multiple requests. Is it true or there is something else
which I am not aware of.

2) So, if twisted is single process based network application framework
(without threads and forks),, I believe it cannot take advantage of multiple
processor residing on one machine. For e.g. if OS schedule twisted process
on one processor,, that's it,, it can only run on same processor not taking
advantage of multiple processor. I am kind of confused in this question. Can
anyone shed some light on this?

3) So, suppose I have one twisted reactor based process running,, I can use
defferToThread as one of the way to kind of using multiple processing?

4) So, one of the technique to achieve parallelism is by running multiple
twisted reactor on different processor and using some scheduler which takes
the web request and forwards that request to different twisted reactor
instance on different processor.
This is close to Load balancing as we can also use the upper architecture
and configure the scheduler to schedule requests to different computers.

Many of the questions might sound weird,, and please feel free to write any
comment.
Thanks
Arun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100106/fe9fed89/attachment.htm 

From glyph at twistedmatrix.com  Wed Jan  6 22:02:06 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 6 Jan 2010 22:02:06 -0500
Subject: [Twisted-web] Parallelism is twisted
In-Reply-To: <8181edc01001061804s20cc0600of32c2ef206082c66@mail.gmail.com>
References: <8181edc01001061804s20cc0600of32c2ef206082c66@mail.gmail.com>
Message-ID: <A0B4B1BB-B9CE-4B8A-9914-3BE486006E0C@twistedmatrix.com>


On Jan 6, 2010, at 9:04 PM, arun chhetri wrote:

> First of all I would like to thank to developer of twisted for making such a great platform for network applications,, I just love it...

Great!  Glad to hear you're enjoying it!

> 1) What is the underlying technology?
> As, I believe that twisted is a TCP server which which uses select() based call to handle multiple requests. Is it true or there is something else which I am not aware of.

Twisted uses select() (or something like it) to handle multiple connections, it's true.  But Twisted can handle UDP, UNIX sockets, serial ports, and several other kinds of resource in addition to just TCP.  If you are using Twisted with a GUI library (such as GTK+, Qt, Cocoa, or WxWidgets) you can handle GUI events in the same event loop.

> 2) So, if twisted is single process based network application framework (without threads and forks),, I believe it cannot take advantage of multiple processor residing on one machine. For e.g. if OS schedule twisted process on one processor,, that's it,, it can only run on same processor not taking advantage of multiple processor. I am kind of confused in this question. Can anyone shed some light on this?

One of the other types of connection that Twisted can handle is a pipe connection to a subprocess.  If you want to take advantage of multiple connections, you can use Twisted's process-spawning APIs, either directly:

http://twistedmatrix.com/documents/9.0.0/api/twisted.internet.interfaces.IReactorProcess.spawnProcess.html

or via a convenience process-pool API, such as Ampoule:

https://launchpad.net/ampoule

> 3) So, suppose I have one twisted reactor based process running,, I can use defferToThread as one of the way to kind of using multiple processing?

No, not really.  Threads in python are bound by the global interpreter lock and are therefore not that useful for using multiple processors.



From andreas at kostyrka.org  Wed Jan  6 22:16:53 2010
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Thu, 07 Jan 2010 04:16:53 +0100
Subject: [Twisted-web] Parallelism is twisted
In-Reply-To: <8181edc01001061804s20cc0600of32c2ef206082c66@mail.gmail.com>
References: <8181edc01001061804s20cc0600of32c2ef206082c66@mail.gmail.com>
Message-ID: <1262834213.10308.45.camel@andidesk.lan>

Am Mittwoch, den 06.01.2010, 20:04 -0600 schrieb arun chhetri:
> First of all I would like to thank to developer of twisted for making
> such a great platform for network applications,, I just love it...
> But for theory point of view I want to clear some of my doubts.
> 
> 1) What is the underlying technology?
> As, I believe that twisted is a TCP server which which uses select()
> based call to handle multiple requests. Is it true or there is
> something else which I am not aware of.

Basically yes. It uses select or more or less equivalent techniques to
do an event handling loop. It's called a reactor in Twisted ;)

> 
> 2) So, if twisted is single process based network application
> framework (without threads and forks),, I believe it cannot take
> advantage of multiple processor residing on one machine. For e.g. if
> OS schedule twisted process on one processor,, that's it,, it can only
> run on same processor not taking advantage of multiple processor. I am
> kind of confused in this question. Can anyone shed some light on this?

Correctly. If you want to use multiple processors, you should consider
running multiple processes, e.g. using load balancing.

> 
> 3) So, suppose I have one twisted reactor based process running,, I
> can use defferToThread as one of the way to kind of using multiple
> processing?

Yes and no. Yes it runs in a thread. Yes, in some cases you can use many
cores this way. But no, Python with it's GIL is not the perfect language
to write threaded programs that want to use threads for performance.

> 
> 4) So, one of the technique to achieve parallelism is by running
> multiple twisted reactor on different processor and using some
> scheduler which takes the web request and forwards that request to
> different twisted reactor instance on different processor. 
> This is close to Load balancing as we can also use the upper
> architecture and configure the scheduler to schedule requests to
> different computers.

Exactly. Or you can split the work asymetrically, I once had a server
that did the work (data lookups), but used multiple backends for
different languages (1 for French, a couple of English lookup
processes).

One thing to consider is that Twisted, when done correctly is rather
efficient. 

2 experiences from my work come to mind:

-) once I've done a web crawler in Twisted without any consideration how
many connections I create. The website which was not a first tier
operation (like Google, Yahoo, MSN, ...), but still some commerical
offering was DoSed in seconds. Twisted has no problem with opening 20000
http connections (if you give it the file descriptors to manage that),
but typical sites, don't take that very well. Lesson to consider: Always
consider your server and client capabilities, and rate limit stuff as
needed.

-) I've also done some years ago a delivery network, that patched files
on the fly (by substituting a couple of bytes, nothing eleborate, but it
did complicate the reading and sending of the data). Even early versions
of that http server (it was twisted.web2 back then) where capable to
fill a Gigabit pipe without issues.

So the "single-threadness" of Twisted (and in some ways of Python) is
not that big an issue, other moving parts will probably limit you first,
e.g. SQL databases are notorious for being a choking point for scaling.

Andreas
> 
> Many of the questions might sound weird,, and please feel free to
> write any comment. 
> Thanks
> Arun
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web



From andreas at kostyrka.org  Wed Jan  6 22:28:07 2010
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Thu, 07 Jan 2010 04:28:07 +0100
Subject: [Twisted-web] Parallelism is twisted
In-Reply-To: <A0B4B1BB-B9CE-4B8A-9914-3BE486006E0C@twistedmatrix.com>
References: <8181edc01001061804s20cc0600of32c2ef206082c66@mail.gmail.com>
	<A0B4B1BB-B9CE-4B8A-9914-3BE486006E0C@twistedmatrix.com>
Message-ID: <1262834887.10308.56.camel@andidesk.lan>

Am Mittwoch, den 06.01.2010, 22:02 -0500 schrieb Glyph Lefkowitz:

> > 3) So, suppose I have one twisted reactor based process running,, I can use defferToThread as one of the way to kind of using multiple processing?
> 
> No, not really.  Threads in python are bound by the global interpreter lock and are therefore not that useful for using multiple processors.

While this is generally true, in specific cases you can use it for
speeding up by using multiple cores. One example would be a program that
does image manipulation via PIL. PIL does release the GIL before it
starts to munch on the image, hence you can achieve more than 100% user
time :)

One script that I use to scale images does manage, in ideal settings
over 300% user time; the trick being to use a couple of threads more
than I've got cpu cores, this way a couple of threads can inform the
Linux kernel what files the process is interested in. This way, the CPU
has usually enough work to do the work, and as most work is spent in C
code in PIL, the GIL does not limit CPU utilization.

But generally speaking as Glyph has mentioned, Python usually can use
only one CPU core per process. The reason for that you need to hold a
single global lock to access the virtual machine, but also the runtime
in any way.

So some C function, can do something like that:

* extract input arguments from PyObjects.
* release GIL
* munch munch
* reacquire GIL
* create PyObjects for return state.

notice that only code that in no way touches the Python runtime can run
without the GIL being hold.

Andreas

> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web



From k_r_a_j_kumar at yahoo.co.in  Mon Jan 25 10:40:15 2010
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Mon, 25 Jan 2010 21:10:15 +0530 (IST)
Subject: [Twisted-web] upload and receive
Message-ID: <50253.9632.qm@web8706.mail.in.yahoo.com>

Hi,
Currently I'm using twisted.web api for my http server.
If I have to implement a file upload from client, is it possible to receive a file at server end using twisted.web? or should I move to twisted.web2?
but I read twisted.web2 is not stable(that too, I may have to change my code for a shift).
Any sample references (using twisted.web api) to receive a file from client is appreciated.

Thanks in advance.

Raj.



      The INTERNET now has a personality. YOURS! See your Yahoo! Homepage. http://in.yahoo.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100125/94563646/attachment.htm 

From exarkun at twistedmatrix.com  Mon Jan 25 11:00:18 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 25 Jan 2010 16:00:18 -0000
Subject: [Twisted-web] upload and receive
In-Reply-To: <50253.9632.qm@web8706.mail.in.yahoo.com>
References: <50253.9632.qm@web8706.mail.in.yahoo.com>
Message-ID: <20100125160018.1898.1097305600.divmod.xquotient.600@localhost.localdomain>

On 03:40 pm, k_r_a_j_kumar at yahoo.co.in wrote:
>Hi,
>Currently I'm using twisted.web api for my http server.
>If I have to implement a file upload from client, is it possible to 
>receive a file at server end using twisted.web? or should I move to 
>twisted.web2?

Sure.  See the "content" attribute of the request object.  You don't 
need to, and should not, switch to twisted.web2.

http://jcalderone.livejournal.com/49707.html doesn't cover file uploads, 
but it does go over some of the other things you need to do to handle 
POSTs, which you'll probably be interested in.

Jean-Paul


