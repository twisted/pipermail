From karnaugh at karnaugh.za.net  Sun Jun  3 15:30:16 2007
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Sun Jun  3 15:31:07 2007
Subject: [Twisted-web] Hello and Enamel
Message-ID: <466316C8.7070509@karnaugh.za.net>

Hi
My first time on this list, but most people already know my antics 
from #twisted.web

I was advised to join and make noise and hype about my project Enamel 
http://open.thusa.co.za/enamel/ although I hope it may not be 
premature to do so.

I know it's "yet another framework" to some people, but I hope there 
will be enough interest at some stage to achieve it's goals - which 
ultimately is to get more people using Nevow.

Comments/flames/whatever are welcome.

-- 
Colin Alston ~ http://www.karnaugh.za.net/

Expecting one person to deal with all your problems is like praying 
each time you require an ambulance: You'll eventually be dead long 
before you get a response.

From glyph at divmod.com  Mon Jun  4 01:10:45 2007
From: glyph at divmod.com (glyph@divmod.com)
Date: Mon Jun  4 01:10:51 2007
Subject: [Twisted-web] Hello and Enamel
In-Reply-To: <466316C8.7070509@karnaugh.za.net>
References: <466316C8.7070509@karnaugh.za.net>
Message-ID: <20070604051045.24950.1101408943.divmod.xquotient.149@joule.divmod.com>

T24gMyBKdW4sIDA3OjMwIHBtLCBrYXJuYXVnaEBrYXJuYXVnaC56YS5uZXQgd3JvdGU6Cj5IaQo+
TXkgZmlyc3QgdGltZSBvbiB0aGlzIGxpc3QsIGJ1dCBtb3N0IHBlb3BsZSBhbHJlYWR5IGtub3cg
bXkgYW50aWNzIGZyb20gCj4jdHdpc3RlZC53ZWIKCkhlbGxvLCBDb2xpbiEKPkNvbW1lbnRzL2Zs
YW1lcy93aGF0ZXZlciBhcmUgd2VsY29tZS4KCkkgbm90aWNlIHRoYXQgb25lIG9mIHRoZSBnb2Fs
cyB0aGF0IHlvdSBwcm92aWRlIGlzIHRvICJwcm92aWRlIGEgCnNtb290aGVyIGFuZCBtb3JlIHBy
b2R1Y3RpdmUgZW50cnkgcG9pbnQiIHRvIFR3aXN0ZWQgZGV2ZWxvcG1lbnQuICBXaGlsZSAKSSdt
IHN1cmUgdGhhdCBFbmFtZWwgcHJvdmlkZXMgdXNlZnVsIGFic3RyYWN0aW9ucyB0aGF0IHdpbGwg
YmUgbW9yZSAKZmFtaWxpYXIgdG8gcGVvcGxlIHdobyBhcmUgZmFtaWxpYXIgd2l0aCB0cmFkaXRp
b25hbCAzLXRpZXIgd2ViIAphcHBsaWNhdGlvbiBhcmNoaXRlY3R1cmVzLCB0aGVyZSBpcyBzdGls
bCBhIGxvdCBvZiByb29tIGZvciBhIHNtb290aGVyIAphbmQgbW9yZSBwcm9kdWN0aXZlIGVudHJ5
cG9pbnQgdG8gVHdpc3RlZC9OZXZvdy9BdGhlbmEgZGV2ZWxvcG1lbnQgdG8gYmUgCnByb3ZpZGVk
IHNpbXBseSBieSBoYXZpbmcgYmV0dGVyIGludHJvZHVjdG9yeSBkb2N1bWVudGF0aW9uLgoKSSB3
b3VsZCBzdHJvbmdseSBlbmNvdXJhZ2UgeW91IChhbmQgYW55b25lIGVsc2UgaW50ZXJlc3RlZCBp
biB0aGlzKSB0byAKY29uc2lkZXIgcmVwb3J0aW5nIChhbmQgZml4aW5nISkgYnVncyBpbiB0aGUg
RGl2bW9kIHRyYWNrZXIgcmVsYXRlZCB0byAKdGhlIGVhc2Ugb2YgdXNlIG9mIGluc3RhbGxpbmcg
TmV2b3cgb3IgQ29tYmluYXRvciwgYW5kIGluIHRoZSBUd2lzdGVkIAp0cmFja2VyIHJlbGF0ZWQg
dG8gdGhlIGVhc2Ugb2YgaW5zdGFsbGluZyBUd2lzdGVkLgoKVGhlcmUncyBhbHNvIGFuIHVuZm9y
dHVuYXRlIGFtb3VudCBvZiBib2lsZXJwbGF0ZSBhc3NvY2lhdGVkIHdpdGggCnNldHRpbmcgdXAg
YSBuZXcgTmV2b3cgYXBwbGljYXRpb24uICBXZSByZWNlbnRseSBhZGRlZCBhbiAiYXRoZW5hLSAK
d2lkZ2V0IiB0d2lzdGQgcGx1Z2luIHRvIE5ldm93IHRvIHRyeSB0byBtaXRpZ2F0ZSB0aGF0LCBi
dXQgdGhlIApkb2N1bWVudGF0aW9uIG9uIGdldHRpbmcgc3RhcnRlZCB3aXRoIEF0aGVuYSAoIApo
dHRwOi8vZGl2bW9kLm9yZy90cmFjL3dpa2kvRGl2bW9kTmV2b3cvQXRoZW5hICkgaXMgcG9vcmx5
IGxpbmtlZCwgYW5kIApieSB0dXJucyBvYnNjdXJlLCBvYnNvbGV0ZSwgb3IgaW5jb21wbGV0ZS4g
IFRoZXJlIHNob3VsZCByZWFsbHkgYmUgYSAKb25lLXBhZ2UsIG9uZS1zb3VyY2UtZmlsZSB0dXRv
cmlhbCBmb3IgYW55IHBhcnRpY3VsYXIgVHdpc3RlZCBvciBEaXZtb2QgCmZyYW1ld29yaywgd2hp
Y2ggYWxsb3dzIHlvdSB0byBnbG9zcyBvdmVyIHRoZSBkZXRhaWxzIHRvIGdldCBzb21ldGhpbmcg
CmRlbW9hYmxlIHF1aWNrbHkuCgpJbiBvdGhlciB3b3Jkcywgd2UgbmVlZCBoZWxwISAgSWYgeW91
J3JlIHdvbmRlcmluZyBpZiB0aGVyZSdzIHNvbWV0aGluZyAKeW91IGNhbiBoZWxwIHRvIGRvY3Vt
ZW50LCBjaGFuY2VzIGFyZSB0aGVyZSBpcy4gIERvbid0IHdvcnJ5IGlmIHlvdSAKZG9uJ3QgZmVl
bCBxdWFsaWZpZWQgdG8gZG8gdGhlIGJlc3Qgam9iOyBhbnl0aGluZyBpcyBiZXR0ZXIgdGhhbiAK
bm90aGluZywgd2hpY2ggaXMgbW9zdGx5IHdoYXQgd2UgaGF2ZS4KLS0tLS0tLS0tLS0tLS0gbmV4
dCBwYXJ0IC0tLS0tLS0tLS0tLS0tCkFuIEhUTUwgYXR0YWNobWVudCB3YXMgc2NydWJiZWQuLi4K
VVJMOiBodHRwOi8vdHdpc3RlZG1hdHJpeC5jb20vcGlwZXJtYWlsL3R3aXN0ZWQtd2ViL2F0dGFj
aG1lbnRzLzIwMDcwNjA0L2VmNmFiYmE2L2F0dGFjaG1lbnQuaHRtCg==
From karnaugh at karnaugh.za.net  Mon Jun  4 01:57:31 2007
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Mon Jun  4 01:58:20 2007
Subject: [Twisted-web] Hello and Enamel
In-Reply-To: <20070604051045.24950.1101408943.divmod.xquotient.149@joule.divmod.com>
References: <466316C8.7070509@karnaugh.za.net>
	<20070604051045.24950.1101408943.divmod.xquotient.149@joule.divmod.com>
Message-ID: <4663A9CB.60604@karnaugh.za.net>

On 04/06/2007 07:10 glyph@divmod.com wrote:
> In other words, we need help!  If you're wondering if there's something 
> you can help to document, chances are there is.  Don't worry if you 
> don't feel qualified to do the best job; anything is better than 
> nothing, which is mostly what we have.

You're right, and it's never been the plan to just leave my gripes 
(which are very few) with Nevow behind and fork an abstraction layer 
to hide them away.
The main issue is that I actually like the complexity behind Nevow, 
because it's not deceiving or limiting, ie - Once you can do Hello 
World, the rest is as difficult.

The main thing that a lot of people do ask for is boiler plate code - 
but mostly only when they are beginning. After this your 'boiler 
plate' starts to become much more application tuned. Of course, I 
would work on Mantissa but there needs to be less cohesion between it 
and Axiom and thats a scary job. You'll note pretty much each of the 
documentation pages on Enamel links at the bottom "If you want to do 
more go to X and learn it properly" sort of thing.

The other thing is that no-context needs to be completed before there 
is much point in commencing a wide scale rewrite of Nevows 
documentation. Someone also needs to rewrite Formal to play with 
no-context.

I am but one man :P

-- 
Colin Alston ~ http://www.karnaugh.za.net/

Expecting one person to deal with all your problems is like praying 
each time you require an ambulance: You'll eventually be dead long 
before you get a response.

From manlio_perillo at libero.it  Thu Jun  7 08:11:14 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu Jun  7 08:11:53 2007
Subject: [Twisted-web] xml include in a Nevow template
Message-ID: <4667F5E2.60305@libero.it>

Hi.

I would like to include a XML template inside another template.
Using XML Inclusion this should be possibile at the XML level.

Is this feature available or easy to support?


Thanks  Manlio Perillo

From karnaugh at karnaugh.za.net  Thu Jun  7 13:23:47 2007
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Thu Jun  7 13:24:45 2007
Subject: [Twisted-web] xml include in a Nevow template
In-Reply-To: <4667F5E2.60305@libero.it>
References: <4667F5E2.60305@libero.it>
Message-ID: <46683F23.9010804@karnaugh.za.net>

On 07/06/2007 14:11 Manlio Perillo wrote:
> Hi.

Hi

> I would like to include a XML template inside another template.
> Using XML Inclusion this should be possibile at the XML level.
> 
> Is this feature available or easy to support?

What you should be using is Fragment or the newer page.Element.

-- 
Colin Alston ~ http://www.karnaugh.za.net/

Expecting one person to deal with all your problems is like praying 
each time you require an ambulance: You'll eventually be dead long 
before you get a response.

From markus at bluegap.ch  Sat Jun  9 11:02:39 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Sat Jun  9 11:02:54 2007
Subject: [Twisted-web] disabling redirection
Message-ID: <466AC10F.5050106@bluegap.ch>

Hi,

I'm having problems with reverse proxies and twisted web / nevow. Which 
one does the redirection, in case the host or port doesn't match? How 
can I disable that? I want twisted to simply serve the URL it's given 
and not do anything fancy with the Host: header.

Sorry if that sounds to harsh, I'm simply frustrated and could use some 
help...

Regards

Markus

From karnaugh at karnaugh.za.net  Sat Jun  9 11:32:44 2007
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Sat Jun  9 11:33:35 2007
Subject: [Twisted-web] disabling redirection
In-Reply-To: <466AC10F.5050106@bluegap.ch>
References: <466AC10F.5050106@bluegap.ch>
Message-ID: <466AC81C.1010503@karnaugh.za.net>

On 09/06/2007 17:02 Markus Schiltknecht wrote:
> Hi,
> 
> I'm having problems with reverse proxies and twisted web / nevow. Which 
> one does the redirection, in case the host or port doesn't match? How 
> can I disable that? I want twisted to simply serve the URL it's given 
> and not do anything fancy with the Host: header.

Are you using the virtual host wrapper for correcting the hostname 
writing?

-- 
Colin Alston ~ http://www.karnaugh.za.net/

Expecting one person to deal with all your problems is like praying 
each time you require an ambulance: You'll eventually be dead long 
before you get a response.

From markus at bluegap.ch  Sat Jun  9 13:07:00 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Sat Jun  9 13:07:16 2007
Subject: [Twisted-web] disabling redirection
In-Reply-To: <466AC81C.1010503@karnaugh.za.net>
References: <466AC10F.5050106@bluegap.ch> <466AC81C.1010503@karnaugh.za.net>
Message-ID: <466ADE34.6040106@bluegap.ch>

Hi,

Colin Alston wrote:
> Are you using the virtual host wrapper for correcting the hostname writing?

If you are talking about the VHostMonsterResource, yes, I've used that 
so far together with apache.

But it requires to rewrite the URLs to, i.e., 
localhost:8080/vhost/http/my.site.com/the/real/url. With varnish, a 
modern and very fast reverse proxy, this is not possible (nor wanted). 
It simply forwards the request without adding anything to the requested 
URL, i.e. 'GET /the/real/url'.

If that can be done with a VHostMonsterResource, too, then I'd be 
curious how. But as far as I understand, it allows twisted to serve 
multiple hosts, which I don't need. I only have exactly one host per 
twisted instance, so I would like to simply hardcode the host and port 
it's supposed to serve. But how?

Regards

Markus



From karnaugh at karnaugh.za.net  Sat Jun  9 18:16:26 2007
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Sat Jun  9 18:17:14 2007
Subject: [Twisted-web] disabling redirection
In-Reply-To: <466ADE34.6040106@bluegap.ch>
References: <466AC10F.5050106@bluegap.ch> <466AC81C.1010503@karnaugh.za.net>
	<466ADE34.6040106@bluegap.ch>
Message-ID: <466B26BA.2060905@karnaugh.za.net>

On 09/06/2007 19:07 Markus Schiltknecht wrote:
> But it requires to rewrite the URLs to, i.e., 
> localhost:8080/vhost/http/my.site.com/the/real/url. With varnish, a 
> modern and very fast reverse proxy, this is not possible (nor wanted). 
> It simply forwards the request without adding anything to the requested 
> URL, i.e. 'GET /the/real/url'.

What is the basis for using Varnish as opposed to just serving up with 
Twisted directly?

> If that can be done with a VHostMonsterResource, too, then I'd be 
> curious how. But as far as I understand, it allows twisted to serve 
> multiple hosts, which I don't need. I only have exactly one host per 
> twisted instance, so I would like to simply hardcode the host and port 
> it's supposed to serve. But how?

Perhaps you should point out just exactly where and when you're 
experiencing problems with URL rewrites. I've never experienced any of 
these problems deploying either with a simple reverse proxy or the 
VHostMonstorResource. It used to be a problem specifically with Guard 
but these issues seem to have dissolved over the current versions.

-- 
Colin Alston ~ http://www.karnaugh.za.net/

Expecting one person to deal with all your problems is like praying 
each time you require an ambulance: You'll eventually be dead long 
before you get a response.

From twisted-python at 2xlp.com  Sat Jun  9 19:34:00 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Sat Jun  9 19:34:33 2007
Subject: [Twisted-web] web2 working with 2.5 - eta ?
Message-ID: <C5BE7906-0FC6-400A-89C0-A50641C12BD7@2xlp.com>

is there an eta for web2 to work with 2.5 ?

From dreid at dreid.org  Sat Jun  9 19:45:55 2007
From: dreid at dreid.org (David Reid)
Date: Sat Jun  9 19:46:04 2007
Subject: [Twisted-web] web2 working with 2.5 - eta ?
In-Reply-To: <C5BE7906-0FC6-400A-89C0-A50641C12BD7@2xlp.com>
References: <C5BE7906-0FC6-400A-89C0-A50641C12BD7@2xlp.com>
Message-ID: <E92B3575-6035-45D1-A279-37E6FC2D45B4@dreid.org>

Hi Jonathan,

On Jun 9, 2007, at 4:34 PM, Jonathan Vanasco wrote:

> is there an eta for web2 to work with 2.5 ?

No, not really an ETA for the 0.3 release, there is a milestone for  
it, which you can find in twisted's trac, but I haven't had a lot of  
time to maintain the milestone much less fix the bugs.  Most people  
using web2 seem to be tracking twisted trunk from svn.  I hope this  
is a suitable answer.

-David
http://dreid.org/

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz





From markus at bluegap.ch  Sun Jun 10 11:32:47 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Sun Jun 10 11:33:04 2007
Subject: [Twisted-web] disabling redirection
In-Reply-To: <466B26BA.2060905@karnaugh.za.net>
References: <466AC10F.5050106@bluegap.ch>
	<466AC81C.1010503@karnaugh.za.net>	<466ADE34.6040106@bluegap.ch>
	<466B26BA.2060905@karnaugh.za.net>
Message-ID: <466C199F.80401@bluegap.ch>

Hi,

Colin Alston wrote:
> What is the basis for using Varnish as opposed to just serving up with 
> Twisted directly?

Uh.. server side caching, reverse proxying... Why does that need more 
explanation? Why should I do that with twisted, if varnish is better at 
being a reverse proxy (assuming that twisted also offers a caching 
module, which I'm guessing)?

Besides, varnish does a very good job with virtual hosts and multiple 
backends (web servers), given that I'm not exclusively running twisted, 
but other web servers as well. (And running one twisted instance per 
virtual website.)

> Perhaps you should point out just exactly where and when you're 
> experiencing problems with URL rewrites. I've never experienced any of 
> these problems deploying either with a simple reverse proxy or the 
> VHostMonstorResource. It used to be a problem specifically with Guard 
> but these issues seem to have dissolved over the current versions.

Maybe I'm just missing an example...

What I want is pretty simple: I want twisted to serve the URL which I 
requested in the HTTP requests top line, no matter what the Host: header 
says, i.e. the following two requests:

GET /sample.html HTTP/1.0
Host: localhost:8080

and:

GET /sample.html HTTP/1.0
Host: www.postgres-r.org

..should both deliver the same sample.html file. And *not* a redirect to 
whatever twisted thinks is it's hostname and port.

If twisted could simply ignore the 'Host' field, that would be fine. If 
I could tell it, what Hosts it should accept (instead of only accepting 
'localhost:8080') and what not (i.e. it should probably redirect 
'postgres-r.org' to 'www.postgres-r.org'), that would be extra super!

Maybe, someone could simply point me to the python file where twisted 
does the hostname and port checking and the redirection? That would 
already help...

Regards

Markus






From exarkun at divmod.com  Sun Jun 10 12:03:32 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun Jun 10 12:03:37 2007
Subject: [Twisted-web] disabling redirection
In-Reply-To: <466C199F.80401@bluegap.ch>
Message-ID: <20070610160332.30678.596493588.divmod.quotient.13635@ohm>

On Sun, 10 Jun 2007 17:32:47 +0200, Markus Schiltknecht <markus@bluegap.ch> wrote:
>Hi,
>
>Colin Alston wrote:
>>What is the basis for using Varnish as opposed to just serving up with 
>>Twisted directly?
>
>Uh.. server side caching, reverse proxying... Why does that need more 
>explanation? Why should I do that with twisted, if varnish is better at 
>being a reverse proxy (assuming that twisted also offers a caching module, 
>which I'm guessing)?
>
>Besides, varnish does a very good job with virtual hosts and multiple 
>backends (web servers), given that I'm not exclusively running twisted, but 
>other web servers as well. (And running one twisted instance per virtual 
>website.)
>>Perhaps you should point out just exactly where and when you're 
>>experiencing problems with URL rewrites. I've never experienced any of 
>>these problems deploying either with a simple reverse proxy or the 
>>VHostMonstorResource. It used to be a problem specifically with Guard but 
>>these issues seem to have dissolved over the current versions.
>
>Maybe I'm just missing an example...
>
>What I want is pretty simple: I want twisted to serve the URL which I 
>requested in the HTTP requests top line, no matter what the Host: header 
>says, i.e. the following two requests:
>
>GET /sample.html HTTP/1.0
>Host: localhost:8080
>
>and:
>
>GET /sample.html HTTP/1.0
>Host: www.postgres-r.org
>
>..should both deliver the same sample.html file. And *not* a redirect to 
>whatever twisted thinks is it's hostname and port.
>
>If twisted could simply ignore the 'Host' field, that would be fine. If I 
>could tell it, what Hosts it should accept (instead of only accepting 
>'localhost:8080') and what not (i.e. it should probably redirect 
>'postgres-r.org' to 'www.postgres-r.org'), that would be extra super!
>
>Maybe, someone could simply point me to the python file where twisted does 
>the hostname and port checking and the redirection? That would already 
>help...
>

You're going about this wrong, unfortunately.  "Twisted" won't issue a
redirect based on the Host header.  Even "twisted.web" won't do that.
Some resource provided by twisted.web (or nevow, I forget what you're
using) might, but only if you put it into your resource hierarchy.  Perhaps
you could elaborate on how and of what your Site is constructed?  A minimal
code example would be ideal, since it communicates exactly the problem
you're having, instead of relying on the imperfect ability of other people
to translate a prose description of a program back into the same program.

Jean-Paul

From markus at bluegap.ch  Mon Jun 11 04:11:33 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Mon Jun 11 04:11:47 2007
Subject: [Twisted-web] disabling redirection
In-Reply-To: <20070610160332.30678.596493588.divmod.quotient.13635@ohm>
References: <20070610160332.30678.596493588.divmod.quotient.13635@ohm>
Message-ID: <466D03B5.8070908@bluegap.ch>

Hi,

Jean-Paul Calderone wrote:
> You're going about this wrong, unfortunately.  "Twisted" won't issue a
> redirect based on the Host header.  Even "twisted.web" won't do that.

Okay, good to know. (And good it is that way)

> Some resource provided by twisted.web (or nevow, I forget what you're
> using) might, but only if you put it into your resource hierarchy.  Perhaps
> you could elaborate on how and of what your Site is constructed?  A minimal
> code example would be ideal, since it communicates exactly the problem
> you're having, instead of relying on the imperfect ability of other people
> to translate a prose description of a program back into the same program.

After the frustrating experience with various caches (server and browser 
side) interrupting and adding to the confusion, I didn't feel like 
compiling a test case, sorry.

Today, thanks to you motivating mail, I've tried again and tcpdump'ed 
the h*** out of it! I think I've finally tracked down what's bugging me: 
it's the addSlash = True forwarder (presumably in the nevow code).

(Sorry if that's the wrong list for nevow related stuff - is there a 
dedicated nevow mailing list?)

Here's how to reproduce my problem:

##### sample.tac #####

from nevow import rend, loaders
from nevow import tags as T
from nevow.appserver import NevowSite
from twisted.application import service, internet

class Child(rend.Page):
     addSlash = True
     docFactory = loaders.stan(T.html[ T.p[ "Hello, child!" ] ])

class Site(rend.Page):
     docFactory = loaders.stan(T.html[ T.p[ "Hello, world!" ] ])
     child_test = Child()

application = service.Application('sample')
internet.TCPServer(
     8081,
     NevowSite(Site(), logPath="web.log")
).setServiceParent(application)

##### telnet session to that server #####

markus@argodan:/home/markus# telnet localhost 8081
Trying 127.0.0.1...
Connected to argodan.
Escape character is '^]'.
GET / HTTP/1.1
Host: somewhere.com

HTTP/1.1 200 OK
Transfer-encoding: chunked
Date: Mon, 11 Jun 2007 07:59:37 GMT
Content-type: text/html; charset=UTF-8
Server: TwistedWeb/2.4.0

21
<html><p>Hello, world!</p></html>
0

GET /test HTTP/1.1
Host: somewhere.com

HTTP/1.1 302 Found
Transfer-encoding: chunked
Date: Mon, 11 Jun 2007 07:59:46 GMT
Content-type: text/html; charset=UTF-8
Location: http://somewhere.com:8081/test/     <--- I'VE STUMBLED OVER
Server: TwistedWeb/2.4.0                           THIS REDIRECT HERE

0

GET /test/ HTTP/1.1
Host: somewhere.com

HTTP/1.1 200 OK
Transfer-encoding: chunked
Date: Mon, 11 Jun 2007 07:59:55 GMT
Content-type: text/html; charset=UTF-8
Server: TwistedWeb/2.4.0

21
<html><p>Hello, child!</p></html>
0


So, the question now is: how do I tell nevow where it should redirect to 
in case of 'addSlash = True'? I don't want it to redirect to the 
internal port 8081.

[ Why does it use the Host: header field, but not the corresponding 
port? Maybe this has already been fixed and I only need an update? Or 
does this have a good reason for being as it is? ]

Thanks for you help.

Regards

Markus


From magnus at spotify.com  Wed Jun 13 08:40:11 2007
From: magnus at spotify.com (Magnus Hult)
Date: Wed Jun 13 08:40:16 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
Message-ID: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>

Hi,

When executing the following program, changes in the database (other
than those made by this program) aren't visible until it is restarted,
due to some form of SQLAlchemy caching:

from twisted.web import server, resource
import model # my database model

class MyRoot(resource.Resource):
  def render(self, request):
    m = model.MyModel.get(request.args['id'][0])
    return m.some_column

# Connect to database.
model.metadata.connect('some_dburi')

# Create site structure.
root = resource.Resource()
root.putChild('', MyRoot())
site = server.Site(root)

# Switch user, start service.
from twisted.application import service, strports
application = service.Application("myexample")
s = strports.service('tcp:8080', site)
s.setServiceParent(application)

So if I visit http://localhost:8080/?id=1, then alter the some_column
value for the row who's id is 1 and reload, the change is not
reflected.

Problem is, I need the update to be visible. How would I go about
implementing this?

Regards,
Magnus

From manlio_perillo at libero.it  Wed Jun 13 09:08:01 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Wed Jun 13 09:08:39 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
In-Reply-To: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>
References: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>
Message-ID: <466FEC31.7070805@libero.it>

Magnus Hult ha scritto:
> Hi,
> 
> When executing the following program, changes in the database (other
> than those made by this program) aren't visible until it is restarted,
> due to some form of SQLAlchemy caching:
> 

Are you using PostgreSQL?

If this is the case, then give a look at:
http://initd.org/tracker/psycopg/wiki/psycopg2_documentation#setting-transaction-isolation-levels

psycopg1 has a SERIALIZED default isolation level, psycopg2 has a READ 
COMMITED default isolation level.

The solution is: make sure to add a commit after every select.

You can read a discussion with the psycopg author in the 
it.comp.lang.python newsgroup:
http://groups.google.com/group/it.comp.lang.python/browse_thread/thread/bf98fd21e78958e4

 > [...]


Regards  Manlio Perillo

From exarkun at divmod.com  Wed Jun 13 09:15:59 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Jun 13 09:16:04 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
In-Reply-To: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>
Message-ID: <20070613131559.4947.1989578961.divmod.quotient.1010@ohm>

On Wed, 13 Jun 2007 14:40:11 +0200, Magnus Hult <magnus@spotify.com> wrote:
>Hi,
>
>When executing the following program, changes in the database (other
>than those made by this program) aren't visible until it is restarted,
>due to some form of SQLAlchemy caching:
>
>from twisted.web import server, resource
>import model # my database model
>
>class MyRoot(resource.Resource):
>  def render(self, request):
>    m = model.MyModel.get(request.args['id'][0])
>    return m.some_column

Here, you're arranging to render whatever the expression `m.some_column'
evaluates to.  However that is implemented and whatever value it results
in, that's what will be rendered on the page.

> [snip - db and service setup]
>
>So if I visit http://localhost:8080/?id=1, then alter the some_column
>value for the row who's id is 1 and reload, the change is not
>reflected.
>
>Problem is, I need the update to be visible. How would I go about
>implementing this?
>

It would seem that `m.some_column' evaluates to the same value each time
the page is rendered.  Could it be that SQLAlchemy is performing some
undesirable caching which is preventing the new value from showing up?  I
am not particularly familiar with SQLAlchemy, so I'm not sure why this
might be.  It does seem like you want to be looking into SQLAlchemy behavior
to figure this out, though.

Hope this helps,

Jean-Paul

From magnus at spotify.com  Wed Jun 13 09:56:23 2007
From: magnus at spotify.com (Magnus Hult)
Date: Wed Jun 13 09:56:31 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
In-Reply-To: <466FEC31.7070805@libero.it>
References: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>
	<466FEC31.7070805@libero.it>
Message-ID: <71e31fe60706130656k2a299e3bo35c86cd94a764419@mail.gmail.com>

Thanks for your swift reply!

On 6/13/07, Manlio Perillo <manlio_perillo@libero.it> wrote:
> Magnus Hult ha scritto:
> > When executing the following program, changes in the database (other
> > than those made by this program) aren't visible until it is restarted,
> > due to some form of SQLAlchemy caching:
>
> Are you using PostgreSQL?

Yes, I am. With psycopg2.

> [...]
> The solution is: make sure to add a commit after every select.

It doesn't seem to help though. In fact, the following little program

t = objectstore.create_transaction()
m = model.MyModel.get(1)
print m.some_column
t.commit()
sys.stdin.readline()
t = objectstore.create_transaction()
m = model.MyModel.get(1)
print m.some_column
t.commit()

only seems to execute one select statement. The other result seems to
be taken from the cache. If this is the case, then this question would
rather belong in an SQLAlchemy mailing list, I guess.

> You can read a discussion with the psycopg author in the
> it.comp.lang.python newsgroup:
> http://groups.google.com/group/it.comp.lang.python/browse_thread/thread/bf98fd21e78958e4

Yes, I could, if I could read Italian. :)

From manlio_perillo at libero.it  Wed Jun 13 10:16:41 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Wed Jun 13 10:16:57 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
In-Reply-To: <71e31fe60706130656k2a299e3bo35c86cd94a764419@mail.gmail.com>
References: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>	<466FEC31.7070805@libero.it>
	<71e31fe60706130656k2a299e3bo35c86cd94a764419@mail.gmail.com>
Message-ID: <466FFC49.70709@libero.it>

Magnus Hult ha scritto:
> Thanks for your swift reply!
> 
> On 6/13/07, Manlio Perillo <manlio_perillo@libero.it> wrote:
>> Magnus Hult ha scritto:
>> > When executing the following program, changes in the database (other
>> > than those made by this program) aren't visible until it is restarted,
>> > due to some form of SQLAlchemy caching:
>>
>> Are you using PostgreSQL?
> 
> Yes, I am. With psycopg2.
> 
>> [...]
>> The solution is: make sure to add a commit after every select.
> 
> It doesn't seem to help though. In fact, the following little program
> 
> t = objectstore.create_transaction()
> m = model.MyModel.get(1)
> print m.some_column
> t.commit()
> sys.stdin.readline()
> t = objectstore.create_transaction()
> m = model.MyModel.get(1)
> print m.some_column
> t.commit()
> 
> only seems to execute one select statement. The other result seems to
> be taken from the cache. If this is the case, then this question would
> rather belong in an SQLAlchemy mailing list, I guess.
> 

The problem can be this:
http://www.sqlalchemy.org/docs/documentation.html#unitofwork_identitymap


After the first "select" you do not reset the Unif Of Work.
In my queries I always do:

     def _sessionTransaction(self, callable_, *args, **kwargs):
         from sqlalchemy import orm

         conn = self.contextual_connect()
         sess = orm.create_session(bind_to=conn) # This cannot fail

         try:
             trans = sess.create_transaction()
             try:
                 ret = callable_(conn, sess, *args, **kwargs)
                 trans.commit()
                 return ret
             except:
                 trans.rollback()
                 raise
         finally:
             sess.close() # This cannot fail
             conn.close()

I create and close a new session object for every request.
You can give a look at my nadbapi:
http://developer.berlios.de/projects/nadbapi/



Regards  Manlio Perillo

From karnaugh at karnaugh.za.net  Wed Jun 13 10:23:22 2007
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Wed Jun 13 10:24:06 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
In-Reply-To: <71e31fe60706130656k2a299e3bo35c86cd94a764419@mail.gmail.com>
References: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>	<466FEC31.7070805@libero.it>
	<71e31fe60706130656k2a299e3bo35c86cd94a764419@mail.gmail.com>
Message-ID: <466FFDDA.5000308@karnaugh.za.net>

On 13/06/2007 15:56 Magnus Hult wrote:
> only seems to execute one select statement. The other result seems to
> be taken from the cache. If this is the case, then this question would
> rather belong in an SQLAlchemy mailing list, I guess.

Have you tried using the sAsync wrapper for Twisted? I have not 
experienced caching problems with anything wrapped with it's 
transaction decorator.

-- 
Colin Alston ~ http://www.karnaugh.za.net/

Expecting one person to deal with all your problems is like praying 
each time you require an ambulance: You'll eventually be dead long 
before you get a response.

From magnus at spotify.com  Wed Jun 13 10:59:28 2007
From: magnus at spotify.com (Magnus Hult)
Date: Wed Jun 13 10:59:35 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
In-Reply-To: <466FFC49.70709@libero.it>
References: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>
	<466FEC31.7070805@libero.it>
	<71e31fe60706130656k2a299e3bo35c86cd94a764419@mail.gmail.com>
	<466FFC49.70709@libero.it>
Message-ID: <71e31fe60706130759r2163c3d2ua3883f2b8ff5ac36@mail.gmail.com>

On 6/13/07, Manlio Perillo <manlio_perillo@libero.it> wrote:

> The problem can be this:
> http://www.sqlalchemy.org/docs/documentation.html#unitofwork_identitymap
>
> After the first "select" you do not reset the Unif Of Work.

Yes, that seems to be the problem. For this my tiny problem, I can get
away by simply not using activemapper, though.

mytable.select().execute(id=1)
mytable.select().execute(id=1)

yields two select statements towards the database, just as I want it.

Thanks!

From magnus at spotify.com  Wed Jun 13 11:01:16 2007
From: magnus at spotify.com (Magnus Hult)
Date: Wed Jun 13 11:01:21 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
In-Reply-To: <466FFDDA.5000308@karnaugh.za.net>
References: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>
	<466FEC31.7070805@libero.it>
	<71e31fe60706130656k2a299e3bo35c86cd94a764419@mail.gmail.com>
	<466FFDDA.5000308@karnaugh.za.net>
Message-ID: <71e31fe60706130801w3caf0147i2d8554227297a558@mail.gmail.com>

On 6/13/07, Colin Alston <karnaugh@karnaugh.za.net> wrote:
> On 13/06/2007 15:56 Magnus Hult wrote:
> > only seems to execute one select statement. The other result seems to
> > be taken from the cache. If this is the case, then this question would
> > rather belong in an SQLAlchemy mailing list, I guess.
>
> Have you tried using the sAsync wrapper for Twisted? I have not
> experienced caching problems with anything wrapped with it's
> transaction decorator.

No, I stumbled upon it while investigating this problem though. I'll
definitely give it a closer look!

From sebastien.lelong at dexia-securities.fr  Wed Jun 13 11:22:45 2007
From: sebastien.lelong at dexia-securities.fr (=?iso-8859-1?q?S=E9bastien_LELONG?=)
Date: Wed Jun 13 11:24:17 2007
Subject: [Twisted-web] Twisted and SQLAlchemy Cache Problem
In-Reply-To: <71e31fe60706130759r2163c3d2ua3883f2b8ff5ac36@mail.gmail.com>
References: <71e31fe60706130540p450c6ea9g10ee322331b4384b@mail.gmail.com>
	<466FFC49.70709@libero.it>
	<71e31fe60706130759r2163c3d2ua3883f2b8ff5ac36@mail.gmail.com>
Message-ID: <200706131722.45454.sebastien.lelong@dexia-securities.fr>

> only seems to execute one select statement. The other result seems to
> be taken from the cache.

AFAIK, SQLAlchemy does perform the select statements, but, the second time,  
does not populate your mapped object since it's already present in the 
identity_map cache. You can see these by turning SA's engine.echo = True

> Yes, that seems to be the problem. For this my tiny problem, I can get
> away by simply not using activemapper, though.

Have you tried myobject.refresh(), before the second time ? This will force SA 
to repopulate your instance

Also, depending on your application behavior, you might want to consider a 
request to your server <=> a session in SA (that's usually what used for web 
apps). This means each time you end a request, you would have to 
session.clear(), preventing any caching.

Hope that helps.


Cheers,

Seb
-- 
S?bastien LELONG
http://sirloon.net
http://sirbot.org
sebastien.lelong[at]sirloon.net

From dav at securme.net  Fri Jun 15 00:01:22 2007
From: dav at securme.net (Dav Clark)
Date: Fri Jun 15 00:01:32 2007
Subject: [Twisted-web] Failure to install javascripts in Nevow
Message-ID: <FF2A8FAF-4CDE-4FEB-BA3F-BD64780B59C6@securme.net>

Hi all,

So, I'm just getting started, so please forgive any rampant noob-ness  
on my part.

But, the problem is simple - there doesn't seem to be any logic  
anywhere to install the .js files in the nevow directory for either  
the traditional or setuptools method of installing Nevow.

I can copy these files into the site-python/nevow directory no  
problem, but this seems to defeat the notion of an install script.

Or am I missing something?

If not, I'm happy to file a bug report.

Cheers,
Dav Clark





Dav Clark
917-544-8408



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070615/4c647b98/attachment.htm
From exarkun at divmod.com  Fri Jun 15 08:18:24 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri Jun 15 08:18:27 2007
Subject: [Twisted-web] Failure to install javascripts in Nevow
In-Reply-To: <FF2A8FAF-4CDE-4FEB-BA3F-BD64780B59C6@securme.net>
Message-ID: <20070615121824.4947.757883034.divmod.quotient.1895@ohm>

On Fri, 15 Jun 2007 00:01:22 -0400, Dav Clark <dav@securme.net> wrote:
>Hi all,
>
>So, I'm just getting started, so please forgive any rampant noob-ness  on my 
>part.
>
>But, the problem is simple - there doesn't seem to be any logic  anywhere to 
>install the .js files in the nevow directory for either  the traditional or 
>setuptools method of installing Nevow.
>
>I can copy these files into the site-python/nevow directory no  problem, but 
>this seems to defeat the notion of an install script.
>
>Or am I missing something?
>
>If not, I'm happy to file a bug report.
>

It does appear to be broken, so a bug report would be welcome.

Thanks,

Jean-Paul

From markus at bluegap.ch  Fri Jun 15 12:31:36 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri Jun 15 12:31:50 2007
Subject: [Twisted-web] disabling redirection
In-Reply-To: <466D03B5.8070908@bluegap.ch>
References: <20070610160332.30678.596493588.divmod.quotient.13635@ohm>
	<466D03B5.8070908@bluegap.ch>
Message-ID: <4672BEE8.2000608@bluegap.ch>

Hi,

Some time ago, I wrote:
> Here's how to reproduce my problem:
 > ...


And now, here comes how I've solved it. My solution forces nevow to 
think, that the request has been made for a given host and port. If 
that's not really the case, nevow will serve the Resource anyway - 
that's no different from not using the ForcedHost wrapper. Only in case 
nevow wants to issue a 301 redirect (due to addSlash=True), the forced 
host (and port) apply. Nevow will redirect to that host:port.


class ForcedHost(rend.Page):

	def __init__(self, res, host, port=80):
		self.wrappedResource = res
		self.host = host
		self.port = port

	def locateChild(self, ctx, segments):
		request = inevow.IRequest(ctx)
		request.setHost(self.host, self.port)
		return self.wrappedResource.locateChild(ctx, segments)

siteRoot = ForcedHost(MyNevowResource, 'www.my-forced-site.org')


Does anybody see any problems with this approach?

Regards

Markus

From mike at inzanix.com  Sat Jun 16 05:23:01 2007
From: mike at inzanix.com (Mike Kenny)
Date: Sat Jun 16 05:25:13 2007
Subject: [Twisted-web] Installation problem? Missing Interface
Message-ID: <4673ABF5.8050707@inzanix.com>

Hi,

I have installed Twisted-2.5.0 and the zope.interface-3.3.0 that comes 
with this package. I then tried to follow some introductory steps on the 
web site and downloaded the simple.py example. When I execute 'twistd 
-ny simple.py' I obtain the output below informing me that I am missing 
Interface. Everything seems to be installed correctly. Is there some 
simple step I have overlooked?

Thanks

2007/06/16 11:14 +0200 [-] Log opened.
2007/06/16 11:14 +0200 [-] twistd 2.5.0 (/usr/bin/python 2.5.1) starting up
2007/06/16 11:14 +0200 [-] reactor class: <class 
'twisted.internet.selectreactor.SelectReactor'>
2007/06/16 11:14 +0200 [-] Loading simple.py...
2007/06/16 11:14 +0200 [-] Traceback (most recent call last):
2007/06/16 11:14 +0200 [-]   File 
"/usr/lib/python2.5/site-packages/twisted/application/app.py", line 218, 
in getApplication
2007/06/16 11:14 +0200 [-]     application = 
service.loadApplication(filename, style, passphrase)
2007/06/16 11:14 +0200 [-]   File 
"/usr/lib/python2.5/site-packages/twisted/application/service.py", line 
341, in loadApplication
2007/06/16 11:14 +0200 [-]     application = 
sob.loadValueFromFile(filename, 'application', passphrase)
2007/06/16 11:14 +0200 [-]   File 
"/usr/lib/python2.5/site-packages/twisted/persisted/sob.py", line 215, 
in loadValueFromFile
2007/06/16 11:14 +0200 [-]     exec fileObj in d, d
2007/06/16 11:14 +0200 [-]   File "simple.py", line 1, in <module>
2007/06/16 11:14 +0200 [-]     from twisted.web2 import server, http, 
resource, channel
2007/06/16 11:14 +0200 [-]   File 
"/usr/lib/python2.5/site-packages/twisted/web2/server.py", line 25, in 
<module>
2007/06/16 11:14 +0200 [-]     from twisted.web2 import http, iweb, 
fileupload, responsecode
2007/06/16 11:14 +0200 [-]   File 
"/usr/lib/python2.5/site-packages/twisted/web2/http.py", line 27, in 
<module>
2007/06/16 11:14 +0200 [-]     from twisted.web2 import iweb
2007/06/16 11:14 +0200 [-]   File 
"/usr/lib/python2.5/site-packages/twisted/web2/iweb.py", line 58, in 
<module>
2007/06/16 11:14 +0200 [-]     class 
IOldNevowResource(components.Interface):
2007/06/16 11:14 +0200 [-] AttributeError: 'module' object has no 
attribute 'Interface'
2007/06/16 11:14 +0200 [-] Failed to load application: 'module' object 
has no attribute 'Interface'
2007/06/16 11:14 +0200 [-] Unhandled Error
       Traceback (most recent call last):
         File 
"/usr/lib/python2.5/site-packages/twisted/application/app.py", line 379, 
in run
           runApp(config)
         File 
"/usr/lib/python2.5/site-packages/twisted/scripts/twistd.py", line 23, 
in runApp
           _SomeApplicationRunner(config).run()
         File 
"/usr/lib/python2.5/site-packages/twisted/application/app.py", line 157, 
in run
           self.application = self.createOrGetApplication()
         File 
"/usr/lib/python2.5/site-packages/twisted/application/app.py", line 207, 
in createOrGetApplication
           application = getApplication(self.config, passphrase)
       --- <exception caught here> ---
         File 
"/usr/lib/python2.5/site-packages/twisted/application/app.py", line 218, 
in getApplication
           application = service.loadApplication(filename, style, 
passphrase)
         File 
"/usr/lib/python2.5/site-packages/twisted/application/service.py", line 
341, in loadApplication
           application = sob.loadValueFromFile(filename, 'application', 
passphrase)
         File 
"/usr/lib/python2.5/site-packages/twisted/persisted/sob.py", line 215, 
in loadValueFromFile
           exec fileObj in d, d
         File "simple.py", line 1, in <module>
           from twisted.web2 import server, http, resource, channel
         File "/usr/lib/python2.5/site-packages/twisted/web2/server.py", 
line 25, in <module>
           from twisted.web2 import http, iweb, fileupload, responsecode
         File "/usr/lib/python2.5/site-packages/twisted/web2/http.py", 
line 27, in <module>
           from twisted.web2 import iweb
         File "/usr/lib/python2.5/site-packages/twisted/web2/iweb.py", 
line 58, in <module>
           class IOldNevowResource(components.Interface):
       exceptions.AttributeError: 'module' object has no attribute 
'Interface'


Failed to load application: 'module' object has no attribute 'Interface'
2007/06/16 11:14 +0200 [-]

From exarkun at divmod.com  Sat Jun 16 11:55:09 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat Jun 16 11:55:13 2007
Subject: [Twisted-web] Installation problem? Missing Interface
In-Reply-To: <4673ABF5.8050707@inzanix.com>
Message-ID: <20070616155509.4947.1454333865.divmod.quotient.2048@ohm>

On Sat, 16 Jun 2007 11:23:01 +0200, Mike Kenny <mike@inzanix.com> wrote:
>Hi,
>
>I have installed Twisted-2.5.0 and the zope.interface-3.3.0 that comes with 
>this package. I then tried to follow some introductory steps on the web site 
>and downloaded the simple.py example. When I execute 'twistd -ny simple.py' 
>I obtain the output below informing me that I am missing Interface. 
>Everything seems to be installed correctly. Is there some simple step I have 
>overlooked?

You'll need web2 from svn if you want to use Twisted 2.5.

Jean-Paul

From dav at securme.net  Sun Jun 17 19:25:29 2007
From: dav at securme.net (Dav Clark)
Date: Sun Jun 17 19:25:32 2007
Subject: [Twisted-web] Obvious stuff... just not to me,
	re: Failure to Install...
Message-ID: <95868F71-36B1-4570-B1A8-E1EDBD443085@securme.net>

I'm slowly beginning to wrap my head around Nevow.  For one, while  
it's not explicit anywhere, it seems really clear that the intention  
is simply to add the Nevow root directory to your python path.  In my  
case, I'm using the easy_install develop workaround:

python -c "import setuptools; execfile('setup.py')" develop

from the .../Nevow path.  This means I can svn update, and that  
version is working without any more reinstalls.

In addition, I got thrown for a loop with the Athena tutorial,  
because it suggests that to understand the Nevow plugin search  
system, you should just look at the Twisted plugin search system.   
This had me with a custom <emph>twisted</emph>/plugins directory, and  
using pdb to step through code to see why it wasn't getting loaded by  
Nevow, when clearly the Twisted plugin system was populating this  
with the normal 'dropin.cache' and soforth.

But now I understand that the nevow/plugins and the twisted/plugins  
are similarly handled but distinct repo's.

So, while I have a borderline unhealthy desire to learn twisted &  
nevow, and will work through this stuff, I recon a lot of people  
might have a look and say, "WTF!" and go to Django or something.  I'd  
like to help fix the documentation as I learn, but I don't want to  
write the wrong thing either.  So, here are some changes I would make  
if OK to the Nevow and Athena docs on the Wiki:

1) This is the only obviously wrong thing - on the Athena page, it  
says that you should install modules into a plugin directory under  
Nevow instead of nevow.  This is confusing and had me creating a  
Nevow/plugins directory in my private PYTHONPATH (which makes sense  
at first, as there is a Nevow directory as well as a nevow directory  
if you checkout from svn).

2) Modify the Nevow install instructions to explain that neither ./ 
setup.py install or easy_install are fully supported.  Suggest  
easy_install develop or similar as preferred alternative, outright  
copying or adding the Nevow direcotry to your PYTHONPATH as a  
secondary (as well as setting up scripts somewhere in your PATH).  I  
would just fix the install to work properly, but I'm not sure what  
would be "right" more on that below.

3) Regarding, e.g. javascript plugins, it seems that the convention  
is to install both user and 3rd party packages into the nevow  
package.  This is very different than what most people are used to,  
but quite similar to the way e.g. an in-place Zope install behaves  
(particularly if you are doing an in-place install as I describe  
above).  I don't like doing this - as it moves me away from a clean  
separation of "my" code from "your" code.

3a) So, for example, after getting the thing working with the stock  
nevow/plugins directory, I standardized on having a local nevow/ 
plugins directory as a sibling of my tac file.  I would suggest this  
be the recommended (or at least an alternative) method described in  
the wiki - this keeps all example files bundled under the same root  
dir.  This also allows the possibility of bundling a tar or zip of an  
athena package, you un-archive it, and the example just works with  
twistd -ny example.tac from where it sits.  (well, you need to alter  
the /path/to/your/file to sibpath(__file__, 'mymodule.js')).

3b)  I would go a step further and suggest that, as in zope, a way to  
create "instances" be created.  This would just mean populating a  
directory with things like a plugins direcotry, a js dir for  
nevow.athena.autoJSPackage to load and other stuff I haven't learned  
about yet.  A set of scripts localized for that instance would add  
the appropriate root to the python path before running.  Or, you  
could just require people to run twistd from the root dir of the  
bundle.  This would be remarkably similar to the "solution" for 3a.

3c) I'm still a bit unclear on how python deals with identically  
named packages in different directories in the path.  So, for  
example, I know have two nevow/plugins directories on my path.   
Everything seems to work fine, and indeed, the athena.JSDependencies  
seems to be able to find files from both.  Even if I add an  
__init__.py file to my own nevow/plugins directory, the autoJSPackage  
call from the default nevow/plugins/__init__.py seems to fire  
correctly.  But at some point, name collisions are necessarily going  
to be a problem.  I could see some _very_ funny errors arising from  
this, e.g. if the python interpreter simply uses the first file it  
finds, it could load a .py file from one directory, then load an  
__init__.py file from another directory which overrides the objects  
loaded from that first .py file... pointers would be appreciated on  
this.

3d) Speaking of strange .js includes, some system (correctly?)  
associates the nevow/empty.js file with most Nevow classes.  But for  
root classes, you also get these __init__.js associations, which are  
non-existent *.js files.  Is this a bug?

4) Perhaps have a page describing Divmod wiki etiquette... answering  
the question of this e-mail, which is "How liberal should I be in  
editing the Wiki(s)?"

5) Why do all examples have twistd -noy, when -y implies -o?

Anyway, as I've said, I'd like to leave some breadcrumbs for those  
right behind me before I forget what it's like to be such a noob!   
Any feedback or guidance on appropriate help is appreciated.  In  
particular, how I should proceed now and in future with Wiki /  
documentation edits.

Cheers,
Dav Clark
917-544-8408





Dav Clark
917-544-8408



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070617/09a4e71d/attachment.htm
From exarkun at divmod.com  Sun Jun 17 19:54:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun Jun 17 19:54:49 2007
Subject: [Twisted-web] Obvious stuff... just not to me,
	re: Failure to Install...
In-Reply-To: <95868F71-36B1-4570-B1A8-E1EDBD443085@securme.net>
Message-ID: <20070617235444.4947.789290027.divmod.quotient.2284@ohm>

On Sun, 17 Jun 2007 19:25:29 -0400, Dav Clark <dav@securme.net> wrote:
>I'm slowly beginning to wrap my head around Nevow.  For one, while  it's not 
>explicit anywhere, it seems really clear that the intention  is simply to 
>add the Nevow root directory to your python path.

The Nevow install process is more or less the same as the install process
for any other Python package.  Yep, the package directories need to be in
sys.path somehow, either by having their parents added to PYTHONPATH or by
being copied to a directory which is in the default search path.

>In my  case, I'm using 
>the easy_install develop workaround:
>
>python -c "import setuptools; execfile('setup.py')" develop
>
>from the .../Nevow path.  This means I can svn update, and that  version is 
>working without any more reinstalls.
>

This may indeed work, although setuptools isn't really supported (meaning
there is no automated test coverage for setuptools working, and further none
of the primary Nevow developers use setuptools, so if it is working now, we
might break it unintentionally and unknowingly at some future time).

I use Combinator to manage my Python import path.  If you're tracking svn
trunk@HEAD, you might want to consider it too.  Or you can just edit your
shell's startup script to add the checkout directory to PYTHONPATH.

>In addition, I got thrown for a loop with the Athena tutorial,  because it 
>suggests that to understand the Nevow plugin search  system, you should just 
>look at the Twisted plugin search system.   This had me with a custom 
><emph>twisted</emph>/plugins directory, and  using pdb to step through code 
>to see why it wasn't getting loaded by  Nevow, when clearly the Twisted 
>plugin system was populating this  with the normal 'dropin.cache' and 
>soforth.
>
>But now I understand that the nevow/plugins and the twisted/plugins  are 
>similarly handled but distinct repo's.
>

Oops, that sounds like some unfortunately misleading documentation.  Do you
think you could correct the wiki page in question to make this explicit?

>So, while I have a borderline unhealthy desire to learn twisted &  nevow, 
>and will work through this stuff, I recon a lot of people  might have a look 
>and say, "WTF!" and go to Django or something.  I'd  like to help fix the 
>documentation as I learn, but I don't want to  write the wrong thing either. 
>So, here are some changes I would make  if OK to the Nevow and Athena docs 
>on the Wiki:
>
>1) This is the only obviously wrong thing - on the Athena page, it  says 
>that you should install modules into a plugin directory under  Nevow instead 
>of nevow.  This is confusing and had me creating a  Nevow/plugins directory 
>in my private PYTHONPATH (which makes sense  at first, as there is a Nevow 
>directory as well as a nevow directory  if you checkout from svn).

Aha.  Yes, please do fix this. :)

>
>2) Modify the Nevow install instructions to explain that neither ./ setup.py 
>install or easy_install are fully supported.  Suggest  easy_install develop 
>or similar as preferred alternative, outright  copying or adding the Nevow 
>direcotry to your PYTHONPATH as a  secondary (as well as setting up scripts 
>somewhere in your PATH).  I  would just fix the install to work properly, 
>but I'm not sure what  would be "right" more on that below.

setup.py is basically fully supported.  If you find bugs in it, we will do
our best to fix them.  easy_install isn't really supported at all; please
don't suggest it or anything related to setuptools.

>
>3) Regarding, e.g. javascript plugins, it seems that the convention  is to 
>install both user and 3rd party packages into the nevow  package.  This is 
>very different than what most people are used to,  but quite similar to the 
>way e.g. an in-place Zope install behaves  (particularly if you are doing an 
>in-place install as I describe  above).  I don't like doing this - as it 
>moves me away from a clean  separation of "my" code from "your" code.
>
>3a) So, for example, after getting the thing working with the stock 
>nevow/plugins directory, I standardized on having a local nevow/ plugins 
>directory as a sibling of my tac file.  I would suggest this  be the 
>recommended (or at least an alternative) method described in  the wiki - 
>this keeps all example files bundled under the same root  dir.  This also 
>allows the possibility of bundling a tar or zip of an  athena package, you 
>un-archive it, and the example just works with  twistd -ny example.tac from 
>where it sits.  (well, you need to alter  the /path/to/your/file to 
>sibpath(__file__, 'mymodule.js')).

I'm not totally clear on what you're suggesting here.  As described on the
wiki, the plugin system does let you keep all of your source files beneath
one directory.  Maybe I'm not understanding your concern, or maybe you're
still missing something about how plugins work.  Could you describe this
issue further?

>
>3b)  I would go a step further and suggest that, as in zope, a way to 
>create "instances" be created.  This would just mean populating a  directory 
>with things like a plugins direcotry, a js dir for 
>nevow.athena.autoJSPackage to load and other stuff I haven't learned  about 
>yet.  A set of scripts localized for that instance would add  the 
>appropriate root to the python path before running.  Or, you  could just 
>require people to run twistd from the root dir of the  bundle.  This would 
>be remarkably similar to the "solution" for 3a.

Requiring extra programs in order to run the actually interesting program
doesn't interest me very much.  Beyond this, I'm not really sure how this
suggestion differs much from the current system, except that it explicitly
makes environment setup something that goes into a helper script, rather
than relying on each user to have an environment which is "correctly"
configured.  Perhaps the documentation should go into more detail about
what Nevow considers a "correct" environment?

>
>3c) I'm still a bit unclear on how python deals with identically  named 
>packages in different directories in the path.  So, for  example, I know 
>have two nevow/plugins directories on my path.   Everything seems to work 
>fine, and indeed, the athena.JSDependencies  seems to be able to find files 
>from both.  Even if I add an  __init__.py file to my own nevow/plugins 
>directory, the autoJSPackage  call from the default 
>nevow/plugins/__init__.py seems to fire  correctly.  But at some point, name 
>collisions are necessarily going  to be a problem.  I could see some _very_ 
>funny errors arising from  this, e.g. if the python interpreter simply uses 
>the first file it  finds, it could load a .py file from one directory, then 
>load an  __init__.py file from another directory which overrides the objects 
>loaded from that first .py file... pointers would be appreciated on  this.

The plugin system uses some advanced features of the Python package system.
Normally Python packages wouldn't let you have multiple packages or modules
with the same name (and even here it doesn't really - the nevow/plugins and
nevow directories you create to add plugins are just directories, rather than
packages, although nevow/plugins/ does _contribute_ to "the" nevow.plugins
package).

There is necessarily the potential for a name conflict here, since multiple
authors are contributing to the same namespace.  This is the same as the
problem of top-level Python packages, since two authors might choose to name
their package the same thing.  However, unlike that case, it is trivially
resolved, since the names of things in nevow/plugins/ are essentially
irrelevant.  At packaging or installation time, the name can be changed to
resolve a conflict without breaking the plugins (this might be a problem
for unit tests, though, if they try to import from the plugins package in
order to test functionality it provides - they will be broken by the name
change, probably).

>
>3d) Speaking of strange .js includes, some system (correctly?)  associates 
>the nevow/empty.js file with most Nevow classes.  But for  root classes, you 
>also get these __init__.js associations, which are  non-existent *.js files. 
>Is this a bug?

Hmm, could be.  Can you describe this further?

>
>4) Perhaps have a page describing Divmod wiki etiquette... answering  the 
>question of this e-mail, which is "How liberal should I be in  editing the 
>Wiki(s)?"
>
>5) Why do all examples have twistd -noy, when -y implies -o?
>

Historic reasons.  The people writing these wiki pages probably still have
finger memory from before -y implied -o. :)  Feel free to fix this.

>Anyway, as I've said, I'd like to leave some breadcrumbs for those  right 
>behind me before I forget what it's like to be such a noob!   Any feedback 
>or guidance on appropriate help is appreciated.  In  particular, how I 
>should proceed now and in future with Wiki /  documentation edits.
>

Thanks for digging into this and collecting your experiences in this email!

Jean-Paul

From karnaugh at karnaugh.za.net  Mon Jun 18 02:21:25 2007
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Mon Jun 18 02:21:57 2007
Subject: [Twisted-web] Obvious stuff... just not to me,	re: Failure to
	Install...
In-Reply-To: <20070617235444.4947.789290027.divmod.quotient.2284@ohm>
References: <20070617235444.4947.789290027.divmod.quotient.2284@ohm>
Message-ID: <46762465.5020002@karnaugh.za.net>

On 18/06/2007 01:54 Jean-Paul Calderone wrote:
> On Sun, 17 Jun 2007 19:25:29 -0400, Dav Clark <dav@securme.net> wrote:
>> 5) Why do all examples have twistd -noy, when -y implies -o?
>>
> 
> Historic reasons.  The people writing these wiki pages probably still have
> finger memory from before -y implied -o. :)  Feel free to fix this.

Also, 'Noy' sounds cool and gives you a mnemonic to remember the 
parameters :)

-- 
Colin Alston ~ http://www.karnaugh.za.net/

Expecting one person to deal with all your problems is like praying 
each time you require an ambulance: You'll eventually be dead long 
before you get a response.

From dav at securme.net  Mon Jun 18 23:17:12 2007
From: dav at securme.net (Dav Clark)
Date: Mon Jun 18 23:17:22 2007
Subject: [Twisted-web] Obvious stuff... just not to me,
	re: 	Failure to Install...
In-Reply-To: <E1I0Je7-0002b3-GP@cube.twistedmatrix.com>
References: <E1I0Je7-0002b3-GP@cube.twistedmatrix.com>
Message-ID: <5880D15F-8254-4A5F-93D4-5F5E862C1B9B@securme.net>

First off, thanks for answering my e-mail so thoroughly!  I even had  
a lightbulb moment with your "nevow/plugins is just a directory"  
comment (though now I'm thinking "but why does it use an __init__.py  
then?" - but I'm letting it go for now).  As for your questions, I  
attempt to answer below.

On Jun 18, 2007, at 12:00 PM, Jean-Paul Calderone wrote:

> setup.py is basically fully supported.  If you find bugs in it, we  
> will do
> our best to fix them.  easy_install isn't really supported at all;  
> please
> don't suggest it or anything related to setuptools.

Got it - I guess the failure to install javascripts really is a  
"real" bug then... but I've reported it already.

>> 3a) So, for example, after getting the thing working with the stock
>> nevow/plugins directory, I standardized on having a local nevow/  
>> plugins
>> directory as a sibling of my tac file.  I would suggest this  be the
>> recommended (or at least an alternative) method described in  the  
>> wiki -
>> this keeps all example files bundled under the same root  dir.   
>> This also
>> allows the possibility of bundling a tar or zip of an  athena  
>> package, you
>> un-archive it, and the example just works with  twistd -ny  
>> example.tac from
>> where it sits.  (well, you need to alter  the /path/to/your/file to
>> sibpath(__file__, 'mymodule.js')).
>
> I'm not totally clear on what you're suggesting here.  As described  
> on the
> wiki, the plugin system does let you keep all of your source files  
> beneath
> one directory.  Maybe I'm not understanding your concern, or maybe  
> you're
> still missing something about how plugins work.  Could you describe  
> this
> issue further?

An example is probably more useful.  I've put something here for you:

http://www.keepopen.com/files/athena-example.tar.bz2

You can just un-archive that and immediately run `twistd -ny  
myelement.tac` (and you can check those files with a quick diff  
against the default Athena tutorial files to see the very few changes  
- basically those described above).

Anyway, I'll admit that you're not forced to learn as much my way!

>> 3b)  I would go a step further and suggest that, as in zope, a way to
>> create "instances" be created.  This would just mean populating a   
>> directory
>> with things like a plugins direcotry, a js dir for
>> nevow.athena.autoJSPackage to load and other stuff I haven't  
>> learned  about
>> yet.  A set of scripts localized for that instance would add  the
>> appropriate root to the python path before running.  Or, you   
>> could just
>> require people to run twistd from the root dir of the  bundle.   
>> This would
>> be remarkably similar to the "solution" for 3a.
>
> Requiring extra programs in order to run the actually interesting  
> program
> doesn't interest me very much.  Beyond this, I'm not really sure  
> how this
> suggestion differs much from the current system, except that it  
> explicitly
> makes environment setup something that goes into a helper script,  
> rather
> than relying on each user to have an environment which is "correctly"
> configured.  Perhaps the documentation should go into more detail  
> about
> what Nevow considers a "correct" environment?

Agreed - maybe some of the "agreed" changes to the wiki will go some  
way towards this.  I was thinking of something more like a helper  
script.  But I'm beginning to understand that if you're using  
twisted, you're probably doing something complicated... so you should  
probably think about things before you do them :)

Maybe an environment recipe collection would be nice.

>> 3d) Speaking of strange .js includes, some system (correctly?)   
>> associates
>> the nevow/empty.js file with most Nevow classes.  But for  root  
>> classes, you
>> also get these __init__.js associations, which are  non-existent  
>> *.js files.
>> Is this a bug?
>
> Hmm, could be.  Can you describe this further?

--
import nevow.athena
jsd.getModuleForName('MyModule') # or whatever
print jsd.mapping
--

yeilds (among many other things):

{ ......
u'Divmod': '/Users/dav/Desktop/SecurMe/dev/Nevow/nevow/js/Divmod/ 
__init__.js',
u'Divmod..svn': '/Users/dav/Desktop/SecurMe/dev/Nevow/nevow/empty.js',
u'Divmod..svn.prop-base': '/Users/dav/Desktop/SecurMe/dev/Nevow/nevow/ 
empty.js'
.....}

These "empty.js" files occur if and only if we're mapping to a .svn  
directory.  So, I guess this is just a side-effect of my using a svn  
checkout.  But it's still weird.  That emtpy.js file does exist -  
it's empty.

The __init__.js entries refer to non-existent files.

>> 5) Why do all examples have twistd -noy, when -y implies -o?
>>
>
> Historic reasons.  The people writing these wiki pages probably  
> still have
> finger memory from before -y implied -o. :)  Feel free to fix this.

I see no need to remove history!

Thanks again,
Dav

From mithrandi-twisted-web at mithrandi.za.net  Tue Jun 19 07:56:40 2007
From: mithrandi-twisted-web at mithrandi.za.net (Tristan Seligmann)
Date: Tue Jun 19 07:57:34 2007
Subject: [Twisted-web] Obvious stuff... just not to me,
	re: 	Failure to Install...
In-Reply-To: <5880D15F-8254-4A5F-93D4-5F5E862C1B9B@securme.net>
References: <E1I0Je7-0002b3-GP@cube.twistedmatrix.com>
	<5880D15F-8254-4A5F-93D4-5F5E862C1B9B@securme.net>
Message-ID: <20070619115640.GA31194@mithrandi.za.net>

KiBEYXYgQ2xhcmsgPGRhdkBzZWN1cm1lLm5ldD4gWzIwMDctMDYtMTggMjM6MTc6MTIgLTA0MDBd
OgoKPiBGaXJzdCBvZmYsIHRoYW5rcyBmb3IgYW5zd2VyaW5nIG15IGUtbWFpbCBzbyB0aG9yb3Vn
aGx5ISAgSSBldmVuIGhhZCAgCj4gYSBsaWdodGJ1bGIgbW9tZW50IHdpdGggeW91ciAibmV2b3cv
cGx1Z2lucyBpcyBqdXN0IGEgZGlyZWN0b3J5IiAgCj4gY29tbWVudCAodGhvdWdoIG5vdyBJJ20g
dGhpbmtpbmcgImJ1dCB3aHkgZG9lcyBpdCB1c2UgYW4gX19pbml0X18ucHkgIAo+IHRoZW4/IiAt
IGJ1dCBJJ20gbGV0dGluZyBpdCBnbyBmb3Igbm93KS4gIEFzIGZvciB5b3VyIHF1ZXN0aW9ucywg
SSAgCj4gYXR0ZW1wdCB0byBhbnN3ZXIgYmVsb3cuCgpUaGUgbmV2b3cvcGx1Z2lucyBkaXJlY3Rv
cnkgaW4gTmV2b3cgaXRzZWxmIGhhcyBhbiBfX2luaXRfXy5weSwgYnV0Cm90aGVyICJpbnN0YW5j
ZXMiIG9mIHRoZSBkaXJlY3RvcnkgZG9uJ3QuCgo+IE9uIEp1biAxOCwgMjAwNywgYXQgMTI6MDAg
UE0sIEplYW4tUGF1bCBDYWxkZXJvbmUgd3JvdGU6Cj4gCj4gPnNldHVwLnB5IGlzIGJhc2ljYWxs
eSBmdWxseSBzdXBwb3J0ZWQuICBJZiB5b3UgZmluZCBidWdzIGluIGl0LCB3ZSAgCj4gPndpbGwg
ZG8KPiA+b3VyIGJlc3QgdG8gZml4IHRoZW0uICBlYXN5X2luc3RhbGwgaXNuJ3QgcmVhbGx5IHN1
cHBvcnRlZCBhdCBhbGw7ICAKPiA+cGxlYXNlCj4gPmRvbid0IHN1Z2dlc3QgaXQgb3IgYW55dGhp
bmcgcmVsYXRlZCB0byBzZXR1cHRvb2xzLgo+IAo+IEdvdCBpdCAtIEkgZ3Vlc3MgdGhlIGZhaWx1
cmUgdG8gaW5zdGFsbCBqYXZhc2NyaXB0cyByZWFsbHkgaXMgYSAgCj4gInJlYWwiIGJ1ZyB0aGVu
Li4uIGJ1dCBJJ3ZlIHJlcG9ydGVkIGl0IGFscmVhZHkuCgpJIGJlbGlldmUgdGhlcmUgYXJlIHNv
bWUgb3V0c3RhbmRpbmcgaXNzdWVzIC8gdGlja2V0cyByZWdhcmRpbmcgdGhpcywKYW5kIGluIGZh
Y3Qgb25lIG9mIHRoZW0gbWF5IGJlIGFzc2lnbmVkIHRvIG1lOyB1bmZvcnR1bmF0ZWx5IEkgZG9u
J3QKaGF2ZSB0aGUgZGlzdHV0aWxzLWZ1IHRvIGtub3cgd2hhdCB0aGUgcHJvYmxlbSBpcywgYW5k
IEkgaGF2ZW4ndCBoYWQgYQpjaGFuY2UgdG8gZGlnIGRlZXBlciBpbnRvIGRpc3R1dGlscyB0byBm
aWd1cmUgaXQgb3V0LgoKPiAtLQo+IGltcG9ydCBuZXZvdy5hdGhlbmEKPiBqc2QuZ2V0TW9kdWxl
Rm9yTmFtZSgnTXlNb2R1bGUnKSAjIG9yIHdoYXRldmVyCj4gcHJpbnQganNkLm1hcHBpbmcKPiAt
LQo+IAo+IHllaWxkcyAoYW1vbmcgbWFueSBvdGhlciB0aGluZ3MpOgo+IAo+IHsgLi4uLi4uCj4g
dSdEaXZtb2QnOiAnL1VzZXJzL2Rhdi9EZXNrdG9wL1NlY3VyTWUvZGV2L05ldm93L25ldm93L2pz
L0Rpdm1vZC8gCj4gX19pbml0X18uanMnLAo+IHUnRGl2bW9kLi5zdm4nOiAnL1VzZXJzL2Rhdi9E
ZXNrdG9wL1NlY3VyTWUvZGV2L05ldm93L25ldm93L2VtcHR5LmpzJywKPiB1J0Rpdm1vZC4uc3Zu
LnByb3AtYmFzZSc6ICcvVXNlcnMvZGF2L0Rlc2t0b3AvU2VjdXJNZS9kZXYvTmV2b3cvbmV2b3cv
IAo+IGVtcHR5LmpzJwo+IC4uLi4ufQo+IAo+IFRoZXNlICJlbXB0eS5qcyIgZmlsZXMgb2NjdXIg
aWYgYW5kIG9ubHkgaWYgd2UncmUgbWFwcGluZyB0byBhIC5zdm4gIAo+IGRpcmVjdG9yeS4gIFNv
LCBJIGd1ZXNzIHRoaXMgaXMganVzdCBhIHNpZGUtZWZmZWN0IG9mIG15IHVzaW5nIGEgc3ZuICAK
PiBjaGVja291dC4gIEJ1dCBpdCdzIHN0aWxsIHdlaXJkLiAgVGhhdCBlbXRweS5qcyBmaWxlIGRv
ZXMgZXhpc3QgLSAgCj4gaXQncyBlbXB0eS4KClRoZSAuc3ZuIGRpcmVjdG9yaWVzIHNob3VsZG4n
dCByZWFsbHkgYmUgcGlja2VkIHVwOyB0aGlzIGlzc3VlIHdpbGwKcHJvYmFibHkgYmUgZml4ZWQg
b24gdHJ1bmsgaW4gdGhlIHZlcnkgbmVhciBmdXR1cmUsIGhvd2V2ZXIuCgo+IFRoZSBfX2luaXRf
Xy5qcyBlbnRyaWVzIHJlZmVyIHRvIG5vbi1leGlzdGVudCBmaWxlcy4KClRoZSBvbmx5IF9faW5p
dF9fLmpzIGZpbGUgaW4geW91ciBleGFtcGxlIGlzCk5ldm93L25ldm93L2pzL0Rpdm1vZC9fX2lu
aXRfXy5qcywgd2hpY2ggbW9zdCBkZWZpbml0ZWx5IHNob3VsZCBleGlzdDsKYW5kIGluIG15IHN2
biBjaGVja291dCBpdCBkb2VzLiBJZiBpdCBkb2Vzbid0IGV4aXN0IG9uIHlvdXIgZW5kLCB0aGVu
CnRoZXJlIGlzIGEgcHJvYmxlbSBzb21ld2hlcmUuCi0tIAptaXRocmFuZGksIGkgQWluaWwgZW4t
QmFsYW5kb3IsIGEgZmFlciBBbWJhcgotLS0tLS0tLS0tLS0tLSBuZXh0IHBhcnQgLS0tLS0tLS0t
LS0tLS0KQSBub24tdGV4dCBhdHRhY2htZW50IHdhcyBzY3J1YmJlZC4uLgpOYW1lOiBub3QgYXZh
aWxhYmxlClR5cGU6IGFwcGxpY2F0aW9uL3BncC1zaWduYXR1cmUKU2l6ZTogMTk3IGJ5dGVzCkRl
c2M6IERpZ2l0YWwgc2lnbmF0dXJlClVybCA6IGh0dHA6Ly90d2lzdGVkbWF0cml4LmNvbS9waXBl
cm1haWwvdHdpc3RlZC13ZWIvYXR0YWNobWVudHMvMjAwNzA2MTkvZDA5MTc4N2IvYXR0YWNobWVu
dC5wZ3AK
From daniel.cuesta at iavante.es  Thu Jun 21 02:57:27 2007
From: daniel.cuesta at iavante.es (Daniel de la Cuesta)
Date: Thu Jun 21 02:58:33 2007
Subject: [Twisted-web] Web development using Twisted
Message-ID: <467A2157.8090704@iavante.es>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070621/4e006b63/attachment.htm
From karnaugh at karnaugh.za.net  Thu Jun 21 03:08:57 2007
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Thu Jun 21 03:09:39 2007
Subject: [Twisted-web] Web development using Twisted
In-Reply-To: <467A2157.8090704@iavante.es>
References: <467A2157.8090704@iavante.es>
Message-ID: <467A2409.80604@karnaugh.za.net>

On 21/06/2007 08:57 Daniel de la Cuesta wrote:
>   Hi,
> 
> I have just started using Twisted. I want to use it for web development 
> and I have a few questions:
> 
>     * Is there any efficient template mechanism to render html pages. I
>       am talking about something like Zope Page Templates.
>     * Is there any HOWTO or explanation about setting up a structured
>       and scalable web site using Twister?

I think you're looking for Nevow.
http://divmod.org/trac/wiki/DivmodNevow

-- 
Colin Alston ~ http://www.karnaugh.za.net/

Expecting one person to deal with all your problems is like praying 
each time you require an ambulance: You'll eventually be dead long 
before you get a response.

From glyph at divmod.com  Thu Jun 21 10:45:18 2007
From: glyph at divmod.com (glyph@divmod.com)
Date: Thu Jun 21 10:45:22 2007
Subject: [Twisted-web] Web development using Twisted
In-Reply-To: <467A2157.8090704@iavante.es>
References: <467A2157.8090704@iavante.es>
Message-ID: <20070621144518.10159.335772748.divmod.xquotient.152@joule.divmod.com>

CkhhdmUgeW91IHJlYWQgdGhpcyBwYWdlPwoKaHR0cDovL3R3aXN0ZWRtYXRyaXguY29tL3RyYWMv
d2lraS9XZWJEZXZlbG9wbWVudFdpdGhUd2lzdGVkCi0tLS0tLS0tLS0tLS0tIG5leHQgcGFydCAt
LS0tLS0tLS0tLS0tLQpBbiBIVE1MIGF0dGFjaG1lbnQgd2FzIHNjcnViYmVkLi4uClVSTDogaHR0
cDovL3R3aXN0ZWRtYXRyaXguY29tL3BpcGVybWFpbC90d2lzdGVkLXdlYi9hdHRhY2htZW50cy8y
MDA3MDYyMS9kZTQwZTA1Zi9hdHRhY2htZW50Lmh0bQo=
From simon at hedberg.net  Mon Jun 25 03:27:48 2007
From: simon at hedberg.net (Simon Hedberg)
Date: Mon Jun 25 03:31:52 2007
Subject: [Twisted-web] FCKEditor integration
Message-ID: <003c01c7b6fa$576981c0$630fa8c0@hp>


Hi,
I'm starting up some work where I plan to use the FCKEditor[1] but
before I start I'd like to know if perhaps anyone has already done a
File Browser Connector[2] based on Nevow?

Best regards,
Simon H

[1] http://www.fckeditor.net
[2]
http://fckeditor.wikiwikiweb.de/Developer's_Guide/Participating/Server_S
ide_Integration#Browser



From nmilkovits at gmail.com  Mon Jun 25 15:39:46 2007
From: nmilkovits at gmail.com (Nicholas Milkovits)
Date: Mon Jun 25 15:39:49 2007
Subject: [Twisted-web] Best way to serve up XML
Message-ID: <71a75690706251239o53ae284dya05cd3505d66674a@mail.gmail.com>

Hello all,

I am working on my first twisted app which is a set of restful services that
return xml to the consumers.  When it comes to generating the XML it seems
like there are a lot of solutions (i.e. building it manually using
xml.dom.minidom, woven, nevow + stan, sux, microdom). I wanted to get an
idea of what other twisted users think 1) is the most maintainable approach
2) what method has the most stable supporting libs and 3) is the fastest. On
average the XML documents will be small but could potentially grow to a
considerable size. Any comments or insights are appreciated.

-Nick M.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070625/c8=
78b9b8/attachment.htm
From maarten at treewalker.org  Mon Jun 25 17:06:41 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Mon Jun 25 17:06:56 2007
Subject: [Twisted-web] Best way to serve up XML
In-Reply-To: <71a75690706251239o53ae284dya05cd3505d66674a@mail.gmail.com>
References: <71a75690706251239o53ae284dya05cd3505d66674a@mail.gmail.com>
Message-ID: <200706252306.47617.maarten@treewalker.org>

On Monday 25 June 2007, Nicholas Milkovits wrote:

> I am working on my first twisted app which is a set of restful services
> that return xml to the consumers.  When it comes to generating the XML it
> seems like there are a lot of solutions (i.e. building it manually using
> xml.dom.minidom, woven, nevow + stan, sux, microdom). I wanted to get an
> idea of what other twisted users think

> 1) is the most maintainable approach

I would avoid anything that uses the DOM API, because it is very clumsy. You 
could use elementtree instead, which is bundled with Python from version 2.5 
onwards.

For my work project, I wrote something like Nevow's Stan, that uses nested 
Python expressions to build XML. It can use generators to create child nodes. 
The resulting code is quite readable, because the Python code structure 
matches the XML structure.

Probably it would be useful to write the same small example program using all 
the APIs you're seriously considering and see how long and how readable the 
resulting code is.

> 2) what method has the most stable supporting libs and

elementtree is part of the Python library now, so it's likely to be around for 
a long time and not change a lot. Woven is no longer maintained, because 
Nevow replaced it. Nevow is popular, so it's also likely to be around for a 
long time, but it does change its APIs every now and then, as far as I know.

> 3) is the fastest. 

The documents I generate are pretty small, so I haven't done much 
benchmarking.

One thing you should avoid is repeatedly appending to a string. Instead, you 
can put string fragments in a list and join that at the end, or use StringIO.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20070625/7e167943/attachment.pgp
From dav at securme.net  Tue Jun 26 16:32:44 2007
From: dav at securme.net (Dav Clark)
Date: Tue Jun 26 16:32:51 2007
Subject: [Twisted-web] Best way to serve up XML
In-Reply-To: <E1I3DSW-0006Px-N9@cube.twistedmatrix.com>
References: <E1I3DSW-0006Px-N9@cube.twistedmatrix.com>
Message-ID: <6189FA9B-2092-4160-8F7F-0DB77A7FA6AD@securme.net>

So, first off - I'm new to Twisted.  I've done mostly Zope & lxml +  
the standard libs for my "web" needs until I got involved in a crazy  
project that _needs_ an event loop.

My initial reaction is that there's no right answer to your question  
without more detail.  I'm just getting started, but Stan provides  
excellent facilities for loading in XML files and then composing  
them, including the ability to create templates.  I don't like  
transcoding - the easiest way to see if your code will generate the  
XML you want is if your code _is_ the XML you want.

This is probably the best place to read about this method:

http://divmod.org/users/mg/nevow-doc/nevow-xml-templates.html

These XML templates are pretty well self-documenting, and can be  
easily edited by anyone with a basic understanding of XML.

If you want to use a pure python solution, and you don't want to use  
Stan, I'd second a vote for ElementTree.  This also provides an easy  
migration path to Martjin Faasen's (sp?) blazing fast (and otherwise  
generally awesome) lxml package:

http://codespeak.net/lxml/

Cheers,
Dav Clark
917-544-8408



> From: "Nicholas Milkovits" <nmilkovits@gmail.com>
> Subject: [Twisted-web] Best way to serve up XML

> ...what other twisted users think 1) is the most maintainable approach
> 2) what method has the most stable supporting libs and 3) is the  
> fastest. On
> average the XML documents will be small but could potentially grow  
> to a
> considerable size. Any comments or insights are appreciated.



Dav Clark
917-544-8408



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070626/c245fe1d/attachment.htm
