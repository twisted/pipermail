From fog at initd.org  Mon May  3 07:18:40 2004
From: fog at initd.org (Federico Di Gregorio)
Date: Mon May  3 07:20:24 2004
Subject: [Twisted-web] rendering sub-Pages in nevow (probable bug)
Message-ID: <1083590320.3677.84.camel@localhost>

Hi *,

I am using nevow 0.1 so if this has been fixed/is a know problem just
redirect me to the right resource.

Apparently it is possible to serve a Page instance from a render_XXX
method if it is implemented as a rend.stan docFactory but not if it
tries to load a template from disk (rend.htmlfile). i.e., the following
code (add some imports, etc.) works:

        class Foo(rend.Page):
            docFactory = rend.htmlfile('foo.html')
        
            def render_content(self, context, data):
                return context.tag.clear()[Bar()]
        
        class Bar(rend.Page):
            docFactory = rend.stan(T.p["Some content"])

but if Bar is implemented as follows, a "maximum recursion depth
exceeded" error is raised (the function that gets called a zillion times
is renderer._strflatten):

        class Bar(rend.Page):
            docFactory = rend.htmlfile('bar.html')

I am trying to fix this, but I still don't know very well what happens
under the hood during the rendering process, so hints are very
apreciated. :)

thanks,
federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog@debian.org
INIT.D Developer                                           fog@initd.org
  We are all dust, Saqi, so play the lute
                    We are all wind, Saqi, so bring wine. -- Omar Khayam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040503/20d6f0b8/attachment.bin
From mesozoic at polynode.com  Mon May  3 13:15:30 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Mon May  3 13:16:05 2004
Subject: [Twisted-web] Re: rendering sub-Pages in nevow (probable bug)
In-Reply-To: <1083590320.3677.84.camel@localhost>
References: <1083590320.3677.84.camel@localhost>
Message-ID: <1083611730.1267.24.camel@hyla>

On Mon, 2004-05-03 at 09:18, Federico Di Gregorio wrote:
> Hi *,
> 
> I am using nevow 0.1 so if this has been fixed/is a know problem just
> redirect me to the right resource.
> 
> Apparently it is possible to serve a Page instance from a render_XXX
> method if it is implemented as a rend.stan docFactory but not if it
> tries to load a template from disk (rend.htmlfile). i.e., the following
> code (add some imports, etc.) works [...]

Nevow 0.1 is very _very_ outdated. I'd recommend using SVN trunk
instead, and if you want stability, just don't update unless you
encounter bugs (like now :)

Being able to return pages from render_ methods is (should be) fully
supported in SVN trunk. 

You can even go a step further and denote a specific part of the doc
factory which should be used for this:

class SomePage(rend.Page):
    docFactory = rend.htmlstr('''
      <html><body>
        <h1>Header</h1>
        <div nevow:pattern="content">Content</div>
      </body></html>
    ''')

If this object is rendered as a page, the header will show up. But if
you return it from a render_ method, then only the div with the
"content" pattern (and everything inside it) will be used. So you can
create pages with all the necessary fluff around the edges, but avoid
rendering the "skin" (headers, navbars, what have you) multiple times.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040503/e42cd9d8/attachment.bin
From fog at initd.org  Mon May  3 16:48:00 2004
From: fog at initd.org (Federico Di Gregorio)
Date: Mon May  3 16:48:24 2004
Subject: [Twisted-web] Re: rendering sub-Pages in nevow (probable bug)
In-Reply-To: <1083611730.1267.24.camel@hyla>
References: <1083590320.3677.84.camel@localhost>
	<1083611730.1267.24.camel@hyla>
Message-ID: <1083624480.2798.21.camel@localhost>

L? luned?, 2004/05/03 alle 15:15, -0400, Alex Levy ha scritto:
> On Mon, 2004-05-03 at 09:18, Federico Di Gregorio wrote:
> > Hi *,
> > 
> > I am using nevow 0.1 so if this has been fixed/is a know problem just
> > redirect me to the right resource.
> > 
> > Apparently it is possible to serve a Page instance from a render_XXX
> > method if it is implemented as a rend.stan docFactory but not if it
> > tries to load a template from disk (rend.htmlfile). i.e., the following
> > code (add some imports, etc.) works [...]
> 
> Nevow 0.1 is very _very_ outdated. I'd recommend using SVN trunk
> instead, and if you want stability, just don't update unless you
> encounter bugs (like now :)

using trunk and branches/freeform-patterned (after irc session with
fzZzy) right now.

> Being able to return pages from render_ methods is (should be) fully
> supported in SVN trunk. 

it is not; here are the problems:

	trunk:
		stan     -> works as expected
		htmlfile -> infinite recursion
		xmlfile  -> no error but does not render
                            (template copied 'as is' to output)
	branch:
		stan     -> works as expected
		htmlfile -> works as expected
		xmlfile  -> no error but does not render
                            (template copied 'as is' to output)

i can check the other loader if needed. a test case is on the way.

> You can even go a step further and denote a specific part of the doc
> factory which should be used for this:
> 
> class SomePage(rend.Page):
>     docFactory = rend.htmlstr('''
>       <html><body>
>         <h1>Header</h1>
>         <div nevow:pattern="content">Content</div>
>       </body></html>
>     ''')
> 
> If this object is rendered as a page, the header will show up. But if
> you return it from a render_ method, then only the div with the
> "content" pattern (and everything inside it) will be used. So you can
> create pages with all the necessary fluff around the edges, but avoid
> rendering the "skin" (headers, navbars, what have you) multiple times.

I don't find this much usefull, sorry. what we really need in a real
use-case (on your browser in 15 days and GPL'ed after that :) is
sub-template rendering. luckily enough loaders.htmlfile is working. hope
to see that in trunk (and maybe a working xmlfile too) soon.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog@debian.org
INIT.D Developer                                           fog@initd.org
  We are all dust, Saqi, so play the lute
                    We are all wind, Saqi, so bring wine. -- Omar Khayam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040504/f216e2f6/attachment.bin
From fog at initd.org  Tue May  4 03:16:55 2004
From: fog at initd.org (Federico Di Gregorio)
Date: Tue May  4 03:18:20 2004
Subject: [Twisted-web] Re: rendering sub-Pages in nevow (probable bug)
In-Reply-To: <1083611730.1267.24.camel@hyla>
References: <1083590320.3677.84.camel@localhost>
	<1083611730.1267.24.camel@hyla>
Message-ID: <1083662215.2648.13.camel@localhost>

L? luned?, 2004/05/03 alle 15:15, -0400, Alex Levy ha scritto:
> On Mon, 2004-05-03 at 09:18, Federico Di Gregorio wrote:
> > Hi *,
> > 
> > I am using nevow 0.1 so if this has been fixed/is a know problem just
> > redirect me to the right resource.
> > 
> > Apparently it is possible to serve a Page instance from a render_XXX
> > method if it is implemented as a rend.stan docFactory but not if it
> > tries to load a template from disk (rend.htmlfile). i.e., the following
> > code (add some imports, etc.) works [...]

Hi *,

the problem has been solved on irc and i report here because i hate to
search, find something in a ML archive and then nothing. empty. void. :)

it was a problem with data not being correctly set (i had a mismatched
data_xxx/nevow:data="Xxx" function). the right behaviour would have been
to raise an error, not enter infinite recursion. fzzzy or gm helped me a
lot and will fix it, i think. in the meantime check your "data". :)

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog@debian.org
INIT.D Developer                                           fog@initd.org
  We are all dust, Saqi, so play the lute
                    We are all wind, Saqi, so bring wine. -- Omar Khayam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040504/8e134f3b/attachment.bin
From matt at pollenation.net  Tue May  4 03:48:03 2004
From: matt at pollenation.net (Matt Goodall)
Date: Tue May  4 03:58:10 2004
Subject: [Twisted-web] Re: rendering sub-Pages in nevow (probable bug)
In-Reply-To: <1083662215.2648.13.camel@localhost>
References: <1083590320.3677.84.camel@localhost>
	<1083611730.1267.24.camel@hyla>  <1083662215.2648.13.camel@localhost>
Message-ID: <1083664082.17827.26.camel@harold>

On Tue, 2004-05-04 at 10:16, Federico Di Gregorio wrote:
> L? luned?, 2004/05/03 alle 15:15, -0400, Alex Levy ha scritto:
> > On Mon, 2004-05-03 at 09:18, Federico Di Gregorio wrote:
> > > Hi *,
> > > 
> > > I am using nevow 0.1 so if this has been fixed/is a know problem just
> > > redirect me to the right resource.
> > > 
> > > Apparently it is possible to serve a Page instance from a render_XXX
> > > method if it is implemented as a rend.stan docFactory but not if it
> > > tries to load a template from disk (rend.htmlfile). i.e., the following
> > > code (add some imports, etc.) works [...]
> 
> Hi *,
> 
> the problem has been solved on irc and i report here because i hate to
> search, find something in a ML archive and then nothing. empty. void. :)
> 
> it was a problem with data not being correctly set (i had a mismatched
> data_xxx/nevow:data="Xxx" function). the right behaviour would have been
> to raise an error, not enter infinite recursion. fzzzy or gm helped me a
> lot and will fix it, i think. in the meantime check your "data". :)

It was mg actually. I'm 100% natural ;-)

I added a test to trunk for the missing data problem and marked it as
skipped as it passes in the freeform-patterned branch. I later realised
that the test does not test the mispelled nevow:data attribute problem.
That problem occurs in trunk and the branch. I will add another test
later.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From python at adytumsolutions.com  Thu May  6 00:11:34 2004
From: python at adytumsolutions.com (Duncan McGreggor)
Date: Thu May  6 00:11:38 2004
Subject: [Twisted-web] qual, namedAny
Message-ID: <39DF33DF-9F24-11D8-AF5C-000393DB4358@adytumsolutions.com>

I just did an svn update of the latest Nevow tonight, and I've got some 
brokeness. It seems that site-packages/nevow/compy.py is trying to 
import the following:

  from nevow.util import qual, namedAny

however, I can't find these methods in util.py; am I doing something 
stupid?

--
Duncan M. McGreggor        mailto:duncan@adytum.us
Systems &                  p 301.698.5032
Applications Engineer      m 301.801.0349
AdytumSolutions, Inc.      http://adytum.us


From andrew-twisted at puzzling.org  Thu May  6 00:26:12 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu May  6 00:26:15 2004
Subject: [Twisted-web] qual, namedAny
In-Reply-To: <39DF33DF-9F24-11D8-AF5C-000393DB4358@adytumsolutions.com>
References: <39DF33DF-9F24-11D8-AF5C-000393DB4358@adytumsolutions.com>
Message-ID: <20040506062612.GG24284@frobozz>

On Thu, May 06, 2004 at 02:11:34AM -0400, Duncan McGreggor wrote:
> I just did an svn update of the latest Nevow tonight, and I've got some 
> brokeness. It seems that site-packages/nevow/compy.py is trying to 
> import the following:
> 
>  from nevow.util import qual, namedAny
> 
> however, I can't find these methods in util.py; am I doing something 
> stupid?

At a guess, that line should read:

    from twisted.python.util import qual, namedAny

-Andrew.


From matt at pollenation.net  Thu May  6 02:32:49 2004
From: matt at pollenation.net (Matt Goodall)
Date: Thu May  6 02:43:04 2004
Subject: [Twisted-web] qual, namedAny
In-Reply-To: <39DF33DF-9F24-11D8-AF5C-000393DB4358@adytumsolutions.com>
References: <39DF33DF-9F24-11D8-AF5C-000393DB4358@adytumsolutions.com>
Message-ID: <1083832369.8027.6.camel@harold>

On Thu, 2004-05-06 at 07:11, Duncan McGreggor wrote:
> I just did an svn update of the latest Nevow tonight, and I've got some 
> brokeness. It seems that site-packages/nevow/compy.py is trying to 
> import the following:
> 
>   from nevow.util import qual, namedAny
> 
> however, I can't find these methods in util.py; am I doing something 
> stupid?

Those functions are in nevow.util. In fact, that module has only had one
minor change since Nevow was moved to subversion.

Try an "svn status" and see what it says. Perhaps subversion is refusing
to fetch the latest version for some reason.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From stephen at thorne.id.au  Thu May  6 16:57:46 2004
From: stephen at thorne.id.au (stephen@thorne.id.au)
Date: Thu May  6 16:57:47 2004
Subject: [Twisted-web] Re: [Twisted-Python] t.p.http handling of
	multipart/form-data
Message-ID: <20040506225746.9235.1140814545.divmod.quotient.508@ohm>

Yes! This is Fantastic! Keep working!

Make sure you're on the twisted-web list, which is more appropriate for takling about web based technologies.

Jump on irc and talk to dreid or fzzzy or myself (jerub) about where things are at with the new-web rewrite.

Stephen.

On Thu, 06 May 2004 17:57:13 -0400, "Stephen C. Waterbury" <golux@comcast.net> wrote:
>Hey http rewriting team ...
> (or more specifically foom, I think :)
> 
> I'm (for my sins, no doubt) using the multipart/form-data
> implementation in t.p.http to transfer files, and it works
> okay but could be improved<snip>

From dp at ulaluma.com  Thu May  6 21:03:28 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Thu May  6 21:03:53 2004
Subject: [Twisted-web] Warning: Before you update Nevow. Major merge
	completed!
Message-ID: <1D420FCD-9FD3-11D8-85C5-000A95864FC4@ulaluma.com>

Before you update Nevow to the latest version of trunk, make sure you 
have a few minutes to work around any potential roughness. The 
development which was happening on the freeform-patterened branch was 
merged tonight. All in all, it seems to be fairly backwards compatible.

*You should clean out your old pyc files*. Otherwise, nevow will have 
problems starting up because it will import the old nevow/formless.pyc 
module instead of the new top-level formless package.

If you were doing anything fancy with formless, such as subclassing 
Configurable or implementing your own Typed subclass, you will need to 
make some minor tweaks. The Configurable baseclass is now in the 
formless.configurable module, and the Typed.coerce signature is now 
coerce(self, data, configurable) instead of coerce(self, data).

This merge almost completely rewrites the formless code from the ground 
up. The code is much more straightforward and better tested. 
formless.webform.renderForms() can now be provided with pattern nodes 
to influence the rendering of the forms. The structure and layout of 
the forms can be completely controlled.

This merge also significantly simplifies how Nevow goes about the 
rendering process, reducing the previous flatten, strflatten _flatten, 
render, and other incomprehensible driver functions with a simpler set 
of driver functions, contained in the nevow.flat package. You probably 
won't care about this unless you would like to try to read the nevow 
code and understand how it works.

If you encounter any other problems with this update, please let us 
know on the mailing list or on the #twisted.web channel. Thanks!

dp


From radix at twistedmatrix.com  Thu May  6 21:29:05 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu May  6 21:28:57 2004
Subject: [Twisted-web] Warning: Before you update Nevow. Major
	merge	completed!
In-Reply-To: <1D420FCD-9FD3-11D8-85C5-000A95864FC4@ulaluma.com>
References: <1D420FCD-9FD3-11D8-85C5-000A95864FC4@ulaluma.com>
Message-ID: <409B0281.6060905@twistedmatrix.com>

Donovan Preston wrote:
> Before you update Nevow to the latest version of trunk, make sure you 
> have a few minutes to work around any potential roughness. The 
> development which was happening on the freeform-patterened branch was 
> merged tonight. All in all, it seems to be fairly backwards compatible.

Did you change formless so it doesn't automatically create a "Submit" 
button before giving it to the UI-generator, and thus would instead rely 
on the UI-generator to automatically add such a button?

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040506/47ce2927/signature.bin
From dp at ulaluma.com  Thu May  6 21:32:42 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Thu May  6 21:33:07 2004
Subject: [Twisted-web] Warning: Before you update Nevow. Major
	merge	completed!
In-Reply-To: <409B0281.6060905@twistedmatrix.com>
References: <1D420FCD-9FD3-11D8-85C5-000A95864FC4@ulaluma.com>
	<409B0281.6060905@twistedmatrix.com>
Message-ID: <32D9C093-9FD7-11D8-85C5-000A95864FC4@ulaluma.com>


On May 6, 2004, at 11:29 PM, Christopher Armstrong wrote:

> Donovan Preston wrote:
>> Before you update Nevow to the latest version of trunk, make sure you 
>> have a few minutes to work around any potential roughness. The 
>> development which was happening on the freeform-patterened branch was 
>> merged tonight. All in all, it seems to be fairly backwards 
>> compatible.
>
> Did you change formless so it doesn't automatically create a "Submit" 
> button before giving it to the UI-generator, and thus would instead 
> rely on the UI-generator to automatically add such a button?

Yes, I did.

dp


From mesozoic at polynode.com  Thu May  6 23:25:14 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Thu May  6 23:25:48 2004
Subject: [Twisted-web] Problem with Nevow changes
Message-ID: <1083907514.1321.3408.camel@hyla>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040507/59ae01f6/attachment.bin
From matt at pollenation.net  Fri May  7 04:14:53 2004
From: matt at pollenation.net (Matt Goodall)
Date: Fri May  7 04:25:13 2004
Subject: [Twisted-web] Problem with Nevow changes
In-Reply-To: <1083907514.1321.3408.camel@hyla>
References: <1083907514.1321.3408.camel@hyla>
Message-ID: <1083924893.17873.20.camel@harold>

On Fri, 2004-05-07 at 06:25, Alex Levy wrote:
> It seems like a couple things have broken (or, at the least, stopped
> behaving as they used to) since the freeform-patterned branch got merged
> back into trunk.
> 
> For one, rend.Page.renderString() raises tracebacks. Ew.
> 
> Second, something I haven't been able to figure out the cause of, method
> bindings that are part of a TypedInterface aren't being rendered with
> the proper values filled in.
> 
> I've attached an example of what I mean; if you run this script with
> 'twistd -ony' using Nevow before the merge, the web form gets rendered
> with the appropriate values included. But after the merge, the forms
> appear blank. What gives?

IIRC, autocallable methods have never been populated from the
configurable object's data. You need to use form defaults for that,
which would look something like ...

        def render_edit(self, ctx, data):
            defs = ctx.locate(iformless.IFormDefaults)
            defs.setDefault('someMethod.one', self.myObject.one)
            defs.setDefault('someMethod.two', self.myObject.two)
            ... etc ...
        
Interestingly, setting the defaults as above prepopulates *both* forms.
I think it should only populate the self.orginal form. To populate the
self.myObject form I expected to need to set the default for the
myobject.someMethod.(one|two|three) key.

> 
> Oh, and if you run this with python instead of twistd, you'll see the
> traceback that rend.Page.renderString() is raising. Added bonus. :P
-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From matt at pollenation.net  Tue May 11 06:14:26 2004
From: matt at pollenation.net (Matt Goodall)
Date: Tue May 11 06:25:17 2004
Subject: [Twisted-web] Problem with Nevow changes
In-Reply-To: <1083907514.1321.3408.camel@hyla>
References: <1083907514.1321.3408.camel@hyla>
Message-ID: <1084277665.21011.22.camel@harold>

On Fri, 2004-05-07 at 06:25, Alex Levy wrote:
> It seems like a couple things have broken (or, at the least, stopped
> behaving as they used to) since the freeform-patterned branch got merged
> back into trunk.
> 
> For one, rend.Page.renderString() raises tracebacks. Ew.
> 
> Second, something I haven't been able to figure out the cause of, method
> bindings that are part of a TypedInterface aren't being rendered with
> the proper values filled in.
> 
> I've attached an example of what I mean; if you run this script with
> 'twistd -ony' using Nevow before the merge, the web form gets rendered
> with the appropriate values included. But after the merge, the forms
> appear blank. What gives?
> 
> Oh, and if you run this with python instead of twistd, you'll see the
> traceback that rend.Page.renderString() is raising. Added bonus. :P

For reference, I added a couple of failing tests for renderString() this
morning.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt@pollenation.net

Any views expressed are my own and do not necessarily reflect the
views of my employer.


From bryan.larsen at lumenera.com  Tue May 11 14:11:17 2004
From: bryan.larsen at lumenera.com (Bryan Larsen)
Date: Tue May 11 14:12:40 2004
Subject: [Twisted-web] [PATCH] basic authentication and delimiter support
	for web.client
Message-ID: <1084306277.18402.29.camel@boom>

This patch adds two things to web.client:

1) support for basic authentication.  (but not digest authentication).

2) allow the delimiter to be changed from '\r\n' to '\n'.  Because of
bugs in browsers, all servers send '\r\n' instead of the technically
legal '\n'.  But that's a pain for nph-sh scripts, so here's a quick
hack to change the delimiter.  To be legal, HttpClient should handle
both '\n' and '\r\n' simultaneously, but LineReceiver does not provide
this facility, so I'm using this hack instead.

Bryan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: client.patch
Type: text/x-patch
Size: 1848 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040511/55b88658/client.bin
From foom at fuhm.net  Tue May 11 14:58:36 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue May 11 14:58:41 2004
Subject: [Twisted-web] [PATCH] basic authentication and delimiter support
	for web.client
In-Reply-To: <1084306277.18402.29.camel@boom>
References: <1084306277.18402.29.camel@boom>
Message-ID: <F8E80460-A38D-11D8-9424-000A95A50FB2@fuhm.net>

On May 11, 2004, at 4:11 PM, Bryan Larsen wrote:
> 2) allow the delimiter to be changed from '\r\n' to '\n'.  Because of
> bugs in browsers, all servers send '\r\n' instead of the technically
> legal '\n'.  But that's a pain for nph-sh scripts, so here's a quick
> hack to change the delimiter.  To be legal, HttpClient should handle
> both '\n' and '\r\n' simultaneously, but LineReceiver does not provide
> this facility, so I'm using this hack instead.


Excuuuuuse me? HTTP *requires* CRLF to terminate header lines. "\n" is 
never ever ever a legal header delimiter! The last bit of the HTTP 1.1 
spec, under 19.3 "Tolerant Applications", does allow you to interpret 
incoming \n as an end of line:
"The line terminator for message-header fields is the sequence CRLF.  
However, we recommend that applications, when parsing such headers,  
recognize a single LF as a line terminator and ignore the leading CR."

But that's not even a SHOULD, it's just a "we recommend", so I think it 
ought to be ignored. Anyone broken enough to send \n deserves what's 
coming to them.

James


From bryan.larsen at lumenera.com  Tue May 11 15:10:43 2004
From: bryan.larsen at lumenera.com (Bryan Larsen)
Date: Tue May 11 15:11:53 2004
Subject: [Twisted-web] [PATCH] basic authentication and delimiter
	support for web.client
In-Reply-To: <F8E80460-A38D-11D8-9424-000A95A50FB2@fuhm.net>
References: <1084306277.18402.29.camel@boom>
	<F8E80460-A38D-11D8-9424-000A95A50FB2@fuhm.net>
Message-ID: <1084309842.18402.34.camel@boom>


> Excuuuuuse me? HTTP *requires* CRLF to terminate header lines. "\n" is
> never ever ever a legal header delimiter!
>

I feel appropriately chastened.  even old HTTP 0.9 required crlf.

The CGI spec allows lf or crlf.  HTTP doesn't.

sorry,

Bryan




From vlupien at drummonddesigns.com  Thu May 13 07:28:33 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Thu May 13 07:29:32 2004
Subject: [Twisted-web] formless
Message-ID: <000601c438ee$307fa4a0$847ba8c0@Stagiaire>

I saw that the structure and layout of the forms can be completely
controlled with the new formless.  
I want to know if we can get examples for it and in which way it can be
controlled.

vicky


-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 3184 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040513/6aacc0d9/winmail.bin
From matt at pollenation.net  Fri May 14 05:05:03 2004
From: matt at pollenation.net (Matt Goodall)
Date: Fri May 14 05:15:54 2004
Subject: [Twisted-web] formless
In-Reply-To: <000601c438ee$307fa4a0$847ba8c0@Stagiaire>
References: <000601c438ee$307fa4a0$847ba8c0@Stagiaire>
Message-ID: <1084532703.1443.24.camel@harold>

On Thu, 2004-05-13 at 14:28, vicky wrote:
> I saw that the structure and layout of the forms can be completely
> controlled with the new formless.  
> I want to know if we can get examples for it and in which way it can be
> controlled.

There is now the beginnings of an example in the svn repository. It's in
trunk/sandbox/mg/customform.tac right now but I will move it to the
examples once complete. Basically, it is a matter of providing patterns
containing slots for the webform renderer to use.

Once /I've/ worked out everything, I will try to document what can and
cannot be controlled using patterns and slots. In the meantime ... the
webform code is not particularly difficult to read so, now you know
roughly how it works, you should be able to find out what else you can
achieve.

Hope this helps to get you going.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From vlupien at drummonddesigns.com  Mon May 17 07:41:03 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Mon May 17 07:42:03 2004
Subject: [Twisted-web] Multiple choices
Message-ID: <000a01c43c14$98d5d6e0$847ba8c0@Stagiaire>

Hi,

         I'm working on forms with nevow. I would like to know if it's
possible to use multiple choices with ChoiceRenderer. I noticed that the
multiple choices are not available because the class ProcessTyped return
data[0] and not the complete list data. I know that I could create my own
classes and functions but I wanted to know if it was already possible to do
it. 

Thank you

Vicky
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 3488 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040517/38a6a85f/winmail.bin
From dp at ulaluma.com  Mon May 17 08:11:19 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Mon May 17 08:11:44 2004
Subject: [Twisted-web] Multiple choices
In-Reply-To: <000a01c43c14$98d5d6e0$847ba8c0@Stagiaire>
References: <000a01c43c14$98d5d6e0$847ba8c0@Stagiaire>
Message-ID: <11B9E077-A80C-11D8-AAA1-000A95864FC4@ulaluma.com>


On May 17, 2004, at 9:41 AM, vicky wrote:

>          I'm working on forms with nevow. I would like to know if it's
> possible to use multiple choices with ChoiceRenderer. I noticed that 
> the
> multiple choices are not available because the class ProcessTyped 
> return
> data[0] and not the complete list data. I know that I could create my 
> own
> classes and functions but I wanted to know if it was already possible 
> to do
> it.

No, currently there are no implementations of a multiple choice ui and 
form handling, I just haven't had the need for it. Patches would be 
welcome.

dp


From justinjohnson at gmail.com  Mon May 17 09:15:02 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon May 17 09:15:05 2004
Subject: [Twisted-web] Multiple choices
In-Reply-To: <11B9E077-A80C-11D8-AAA1-000A95864FC4@ulaluma.com>
References: <000a01c43c14$98d5d6e0$847ba8c0@Stagiaire>
	<11B9E077-A80C-11D8-AAA1-000A95864FC4@ulaluma.com>
Message-ID: <94a776e704051708156149a04b@mail.gmail.com>

Here's an example of what I did to get a multiple choice select box. 
It's been a while since I did this so it could probably use some
cleanup.  But it is working for me.



class MultipleChoice(formless.Typed):
    """Allow the user to pick from a list of "choices", or a list of
choices found
    by accessing the list in the attribute "choicesAttribute" of the object we
    are configuring. The elements of the list will be rendered by calling the 
    function passed to stringify, which is by default "str".
    """
    def __init__(self, choices=None, choicesAttribute=None,
stringify=str, *args, **kw):
        formless.Typed.__init__(self, *args, **kw)
        if choices is None:
            self.choices = []
        else:
            self.choices = choices
        self.choicesAttribute = choicesAttribute
        self.stringify = stringify

    def coerceWithBinding(self, values, binding):
        """Coerce a value with the help of an object, which is the object
        we are configuring.
        """
        int_values = []
        try:
            for val in values:
                int_values.append(int(val))
        except ValueError:
            raise InputError("%s contains an invalid choice." % str(values))
        if self.choicesAttribute is not None:
            choices = getattr(binding, self.choicesAttribute)
        else:
            choices = self.choices
        return [choices[val] for val in int_values]


class MultipleChoiceInputProcessor(compy.Adapter):
    __implements__ = iformless.IInputProcessor,

    def process(self, context, boundTo, data):
        """data is a list of strings at this point
        """
        typed = self.original

        if data[0] == '':
            if typed.required:
                raise InputError(typed.requiredFailMessage)
            else:
                return []
        elif hasattr(typed, 'coerceWithBinding'):
            return typed.coerceWithBinding(data, boundTo)
        return typed.coerce(data)


class MultipleChoiceRenderer(webform.BaseInputRenderer):
    def input(self, context, slot, data, name, value):
        tv = data.typedValue
        if tv.choicesAttribute:
            choices = getattr(context.locate(formless.IConfigurable),
tv.choicesAttribute)
        else:
            choices = tv.choices

        numChoices = len(choices)
        if numChoices == 0:
            return None

        selecter = select(name=name, size=min(5,numChoices), multiple=1)
        stringify = tv.stringify

        for index, val in enumerate(choices):
            if val == value:
                selecter[option(value=str(index),
selected="selected")[stringify(val)]]
            else:
                selecter[option(value=str(index))[stringify(val)]]
        return slot[selecter]


class Sites(MultipleChoice):
    def __init__(self, choices=None, choicesAttribute=None,
stringify=str, *args, **kw):
        choices = SITES  # SITES is a list of strings
        MultipleChoice.__init__(self, choices, choicesAttribute,
stringify, *args, **kw)
        self.requiredFailMessage = "Please select at least one site."

compy.registerAdapter(MultipleChoiceRenderer, MultipleChoice,
iformless.ITypedRenderer)
compy.registerAdapter(MultipleChoiceInputProcessor, MultipleChoice,
iformless.IInputProcessor)

compy.registerAdapter(MultipleChoiceRenderer, Sites, iformless.ITypedRenderer)
compy.registerAdapter(MultipleChoiceInputProcessor, Sites,
iformless.IInputProcessor)


On Mon, 17 May 2004 10:11:19 -0400, Donovan Preston <dp@ulaluma.com> wrote:
> 
> 
> 
> On May 17, 2004, at 9:41 AM, vicky wrote:
> 
> >          I'm working on forms with nevow. I would like to know if it's
> > possible to use multiple choices with ChoiceRenderer. I noticed that
> > the
> > multiple choices are not available because the class ProcessTyped
> > return
> > data[0] and not the complete list data. I know that I could create my
> > own
> > classes and functions but I wanted to know if it was already possible
> > to do
> > it.
> 
> No, currently there are no implementations of a multiple choice ui and
> form handling, I just haven't had the need for it. Patches would be
> welcome.
> 
> dp
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>

From matt at pollenation.net  Mon May 17 15:07:30 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon May 17 15:07:53 2004
Subject: [Twisted-web] Problem with Nevow changes
In-Reply-To: <1083907514.1321.3408.camel@hyla>
References: <1083907514.1321.3408.camel@hyla>
Message-ID: <1084828050.5669.51.camel@debian>

On Fri, 2004-05-07 at 06:25, Alex Levy wrote:
> It seems like a couple things have broken (or, at the least, stopped
> behaving as they used to) since the freeform-patterned branch got merged
> back into trunk.
> 
> For one, rend.Page.renderString() raises tracebacks. Ew.

For the record, the renderString() problem(s) should now be fixed in svn
trunk.

Cheers, Matt
-- 
Matt Goodall <matt@pollenation.net>


From stephen at thorne.id.au  Mon May 17 16:48:38 2004
From: stephen at thorne.id.au (stephen@thorne.id.au)
Date: Mon May 17 16:48:42 2004
Subject: [Twisted-web] Problem with Nevow changes
In-Reply-To: <1084828050.5669.51.camel@debian>
Message-ID: <20040517224838.14915.1031480737.divmod.quotient.93@ohm>

On Mon, 17 May 2004 22:07:30 +0100, Matt Goodall <matt@pollenation.net> wrote:
>On Fri, 2004-05-07 at 06:25, Alex Levy wrote:
> > It seems like a couple things have broken (or, at the least, stopped
> > behaving as they used to) since the freeform-patterned branch got merged
> > back into trunk.
> > 
> > For one, rend.Page.renderString() raises tracebacks. Ew.
> 
> For the record, the renderString() problem(s) should now be fixed in svn
> trunk.

Yay!

Thankyou, my RSS aggregator works again.

Stephen

From vlupien at drummonddesigns.com  Wed May 19 08:27:41 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Wed May 19 08:28:48 2004
Subject: [Twisted-web] ProcessMethodBinding
Message-ID: <000001c43dad$71c3a420$847ba8c0@Stagiaire>

Hi, 
     I made a change in the class ProcessMethodBinding but I do not want to
change directly the code in processors.py. I want my class to be under
another name ( MyProcessMethodBinding) in another file and to adapt it in
nevow with compy.registerAdapter. 
My new class has to be to call up instead of ProcessMethodBinding. I've been
searching for awhile and I didn't find out how to make.

Thank you 
Vicky
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 3420 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040519/115acf93/winmail.bin
From jbdunsmo at utmb.edu  Wed May 19 08:38:58 2004
From: jbdunsmo at utmb.edu (jbdunsmo@utmb.edu)
Date: Wed May 19 08:35:57 2004
Subject: [Twisted-web] can't load modules in nevow tutorial
Message-ID: <20040519143858.GB8014@zwei.homelinux.net>

i just installed nevow and am trying to run the tutorial
(http://nevow.com/Nevow2004Tutorial.html), but i get the following
error that the modules located in the Example4 directory can't be
found:

# twistd -noy sched.tac 
2004/05/19 08:08 CDT [-] Log opened.
2004/05/19 08:08 CDT [-] twistd 1.2.0 (/usr/bin/python 2.3.3) starting up
2004/05/19 08:08 CDT [-] reactor class: twisted.internet.default.SelectReactor
2004/05/19 08:08 CDT [-] Loading sched.tac...
2004/05/19 08:08 CDT [-] Traceback (most recent call last):
2004/05/19 08:08 CDT [-]   File "/usr/lib/python2.3/site-packages/twisted/application/app.py", line 117, in getApplication
2004/05/19 08:08 CDT [-]     application = service.loadApplication(filename, style, passphrase)
2004/05/19 08:08 CDT [-]   File "/usr/lib/python2.3/site-packages/twisted/application/service.py", line 291, in loadApplication
2004/05/19 08:08 CDT [-]     application = sob.loadValueFromFile(filename, 'application', passphrase)
2004/05/19 08:08 CDT [-]   File "/usr/lib/python2.3/site-packages/twisted/persisted/sob.py", line 213, in loadValueFromFile
2004/05/19 08:08 CDT [-]     exec data in d, d
2004/05/19 08:08 CDT [-]   File "<string>", line 3, in ?
2004/05/19 08:08 CDT [-] ImportError: No module named iCal
2004/05/19 08:08 CDT [-] Failed to load application: No module named iCal
2004/05/19 08:08 CDT [-] Traceback (most recent call last):
          File "/usr/bin/twistd", line 36, in ?
            run()
          File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py", line 188, in run
            app.run(runApp, ServerOptions)
          File "/usr/lib/python2.3/site-packages/twisted/application/app.py", line 204, in run
            runApp(config)
          File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py", line 178, in runApp
            application = app.getApplication(config, passphrase)
        --- <exception caught here> ---
          File "/usr/lib/python2.3/site-packages/twisted/application/app.py", line 117, in getApplication
            application = service.loadApplication(filename, style, passphrase)
          File "/usr/lib/python2.3/site-packages/twisted/application/service.py", line 291, in loadApplication
            application = sob.loadValueFromFile(filename, 'application', passphrase)
          File "/usr/lib/python2.3/site-packages/twisted/persisted/sob.py", line 213, in loadValueFromFile
            exec data in d, d
          File "<string>", line 3, in ?
            
        exceptions.ImportError: No module named iCal


Failed to load application: No module named iCal
2004/05/19 08:08 CDT [-] 


when i set $PYTHONPATH to /usr/share/doc/nevow-0.1/doc/Example4 it
works fine.  what's the problem here?

thanks,
jason

From dialtone at gmail.com  Wed May 19 11:17:18 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed May 19 11:17:30 2004
Subject: [Twisted-web] Fixing a failing test
Message-ID: <c893b85304051910171da1cd7b@mail.gmail.com>

Fixed a failing test added by mg with r296. 

It was due to not detecting properly if l was already root.

Run test_url.py and all 10 tests passed.

--- url.py      (revision 296)
+++ url.py      (working copy)
@@ -82,6 +82,10 @@
             l.append(path)
         return self._pathMod(l, self.queryList(0))
  
+    def isRoot(self, pathlist):
+        if len(pathlist) > 2: return False
+        return True
+
     def parent(self):
         """Construct a url which is a parent of this url;
         This is logically equivalent to '..' of the current url.
@@ -99,7 +103,8 @@
             # we are a file, such as http://example.com/foo/bar our
             # parent directory is http://example.com/
             l.pop()
-            l[-1] = ''
+            if self.isRoot(l): l.append('')
+            else: l[-1] = ''
         return self._pathMod(l, self.queryList(0))
  
     def here(self):

From dialtone at gmail.com  Wed May 19 11:23:22 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed May 19 11:23:26 2004
Subject: [Twisted-web] [PATCH] Added package nevow.test to default
	installation
Message-ID: <c893b853040519102355ae913e@mail.gmail.com>

Index: setup.py
===================================================================
--- setup.py    (revision 291)
+++ setup.py    (working copy)
@@ -15,7 +15,7 @@
     description='Web Application Framework',
     url='http://www.nevow.com/',
     download_url='http://www.nevow.com/',
-    packages=['formless', 'nevow', 'nevow.flat'],
+    packages=['formless', 'nevow', 'nevow.flat', 'nevow.test'],
     data_files=[
         ['formless', ['formless/freeform-default.css']],
         ]

From jason at mobarak.name  Wed May 19 16:19:29 2004
From: jason at mobarak.name (Jason Mobarak)
Date: Wed May 19 16:20:38 2004
Subject: [Twisted-web] Re: can't load modules in nevow tutorial
In-Reply-To: <20040519143858.GB8014@zwei.homelinux.net>
References: <20040519143858.GB8014@zwei.homelinux.net>
Message-ID: <c8gmd9$nri$1@sea.gmane.org>

jbdunsmo@utmb.edu wrote:
> i just installed nevow and am trying to run the tutorial
> (http://nevow.com/Nevow2004Tutorial.html), but i get the following
> error that the modules located in the Example4 directory can't be
> found:
> 
> # twistd -noy sched.tac 
> 2004/05/19 08:08 CDT [-] Log opened.
> 2004/05/19 08:08 CDT [-] twistd 1.2.0 (/usr/bin/python 2.3.3) starting up
> 2004/05/19 08:08 CDT [-] reactor class: twisted.internet.default.SelectReactor
> 2004/05/19 08:08 CDT [-] Loading sched.tac...
> 2004/05/19 08:08 CDT [-] Traceback (most recent call last):
> 2004/05/19 08:08 CDT [-]   File "/usr/lib/python2.3/site-packages/twisted/application/app.py", line 117, in getApplication
> 2004/05/19 08:08 CDT [-]     application = service.loadApplication(filename, style, passphrase)
> 2004/05/19 08:08 CDT [-]   File "/usr/lib/python2.3/site-packages/twisted/application/service.py", line 291, in loadApplication
> 2004/05/19 08:08 CDT [-]     application = sob.loadValueFromFile(filename, 'application', passphrase)
> 2004/05/19 08:08 CDT [-]   File "/usr/lib/python2.3/site-packages/twisted/persisted/sob.py", line 213, in loadValueFromFile
> 2004/05/19 08:08 CDT [-]     exec data in d, d
> 2004/05/19 08:08 CDT [-]   File "<string>", line 3, in ?
> 2004/05/19 08:08 CDT [-] ImportError: No module named iCal
> 2004/05/19 08:08 CDT [-] Failed to load application: No module named iCal
> 2004/05/19 08:08 CDT [-] Traceback (most recent call last):
>           File "/usr/bin/twistd", line 36, in ?
>             run()
>           File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py", line 188, in run
>             app.run(runApp, ServerOptions)
>           File "/usr/lib/python2.3/site-packages/twisted/application/app.py", line 204, in run
>             runApp(config)
>           File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py", line 178, in runApp
>             application = app.getApplication(config, passphrase)
>         --- <exception caught here> ---
>           File "/usr/lib/python2.3/site-packages/twisted/application/app.py", line 117, in getApplication
>             application = service.loadApplication(filename, style, passphrase)
>           File "/usr/lib/python2.3/site-packages/twisted/application/service.py", line 291, in loadApplication
>             application = sob.loadValueFromFile(filename, 'application', passphrase)
>           File "/usr/lib/python2.3/site-packages/twisted/persisted/sob.py", line 213, in loadValueFromFile
>             exec data in d, d
>           File "<string>", line 3, in ?
>             
>         exceptions.ImportError: No module named iCal
> 
> 
> Failed to load application: No module named iCal
> 2004/05/19 08:08 CDT [-] 
> 
> 
> when i set $PYTHONPATH to /usr/share/doc/nevow-0.1/doc/Example4 it
> works fine.  what's the problem here?
> 
> thanks,
> jason

If I'm in the Example4 directory it works fine, seeing as that's were 
iCal is.

--
Jason Mobarak


From foom at fuhm.net  Wed May 19 20:09:22 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed May 19 20:09:28 2004
Subject: [Twisted-web] new http
Message-ID: <B593ACCA-AA02-11D8-9424-000A95A50FB2@fuhm.net>

Firstly: HTTP 1.1 compliance is not easy. It's not *too* bad for an 
origin server, but if Twisted wants a compliant HTTP proxy module (even 
non-caching), there's a lot of requirements. Squid made a nice table of 
the 473 MUST/MAY/SHOULD [NOT]s which is helpful.

Anyhow as it's nearing workability, I thought I'd just write a bit 
about how I it's structured. This is kinda rambling but oh well. ;)

There's 4 main classes on the path for handling a HTTP connection:
HTTPFactory: a ServerFactory that creates HTTPChannel objects for each 
incoming TCP connection.
HTTPChannel: keeps track of queued 'ChannelRequest' objects, and some 
of the splitting up of the incoming data into distinct requests work.
ChannelRequest: handles all the low-level hop-by-hop behavior.
Request: high level request/response behavior.

The split off of ChannelRequest from bits of HTTPChannel and bits of 
Request is geared towards allowing a different request transport than 
normal HTTP. PB is one possibility. Also, it simplifies the Request 
object and gives it a cleaner API that only has to deal with the actual 
request, not the details of transfer encodings, pipelined connections, 
etc.

ChannelRequest provides the following methods for Requests to call:
     def writeIntermediateResponse(self, code, headers=None, 
code_message=None):
     def writeHeaders(self, code, headers, code_message=None):
     def writeData(self, data):
     def finish(self):
     def abortConnection(self):
Also the producer methods:
     def registerProducer(self, producer, streaming):
     def unregisterProducer(self):


Request provides the following callbacks that are called by 
ChannelRequest:
     def __init__(self, chanRequest, command, path, version, in_headers):
     def handleContentChunk(self, data):
     def handleContentComplete(self):
     def connectionLost(self, reason):

The core of the public interface to this whole thing are the 
fields/methods on Request:
   method: HTTP method used
   uri: URI passed in the request.
   clientproto: Tuple like (1,1)
   out_headers: a Headers object containing the headers to output.
   in_headers: a Headers object containing the incoming headers.

   acceptData(self): Call to notify the sender that you intend to accept 
the request.
   checkPreconditions(self); check if the preconditions are satisfied, 
and thus whether the action should take place/the output data should be 
written.
   write(self, data): Call to write some data. If headers haven't been 
written yet, write them.
   writeFile(...): Call to write a file in an optimized way like 
sendfile(). TBD what actually goes here.
   finish(self): Call when you've finished writing data.

Callbacks to override:
   process(self): called from __init__. Incoming headers have been 
received, but no data yet. Should do resource lookup.
   handleContentChunk(self, data): A chunk of data was received.
   handleContentComplete(self): The incoming data is done.
   connectionLost(self): the underlying connection was lost.


in_headers/out_headers are objects of type http_headers.Headers which 
provides for a standardized way of translating between raw string 
headers and structured data headers. Some of the header parsers are not 
written yet.

Unlike the old Request, this one is going to do nothing with incoming 
data. No form processing, no buffering, no nothing. No args processing 
of the uri, either. The "full featured" subclass of Request (e.g. 
server.Request) can do that stuff. It is expected to do all URI 
frobbing and then a locateChild() lookup at process() time (before the 
data has arrived). Then, figure out what the located resource wants to 
do with the incoming data (ignore it, buffer it all up into one string, 
or pass it along as it comes in). Note that this means locateChild 
can't use POST arguments. Then, in the usual case, render() would be 
called after all the data has arrived and form processing has been done 
on it. But for some resources, e.g. a proxying resource, it would just 
send all the data straight through, without doing form processing.

James


From dialtone at gmail.com  Thu May 20 04:07:08 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Thu May 20 04:07:14 2004
Subject: [Twisted-web] New cache proposal
Message-ID: <c893b85304052003071ce54e61@mail.gmail.com>

I've seen taht at least in ten.py and in loaders.py you cache adapters
and templates.

Not too long ago I've written a metaclass that would cache instances
based on what arguments were passed during instantiation.

http://mattgoodall.dyndns.org:8081/105

cache = {}
class MyMetaTemplate(type):
    def __call__(self, *args):
        cached = cache.get(args, None)
        print cache, cached
        if not cached:
            instance = type.__call__(self, *args)
            cache.update({args:instance})
            return instance
        return cached
        
class Pippo(object):
    __metaclass__ = MyMetaTemplate
    template = ''
    def __init__(self, arg1, arg2, arg3):
        self.template = arg1

a = Pippo(1,2,3)
b = Pippo(2,3,4)
c = Pippo(1,2,3)
d = Pippo(2,3,4)
e = Pippo(5,6,7)
f = Pippo(5,6,7)

print id(a), id(b), id(c), id(d), id(e), id(f)

I think the only 'drawback' is that it needs new-style classes, but It
would be easier to use since you don't need extra checking in methods
but once you instantiate you know that the object you are working on
is a new one (if it wasn't cached) or the cached one.

HTH

From pvl at por.to  Fri May 21 03:18:08 2004
From: pvl at por.to (Pedro Lima)
Date: Fri May 21 03:31:05 2004
Subject: [Twisted-web] Nevow newbie question
Message-ID: <c8khh6$ejc$1@sea.gmane.org>

Hello all,

I would like to use nevow with data from a sql query, but I'm having trouble
figuring out how to do it.

>From what I understood, data is fetched in the data_xxx methods. But if I
use the ConnectionPool query I get a Defered as a result. And the data_xxx
method should return the data and not a Defered, correct?

The other way would be to get a db connection and make the query in the
data_xxx method. But then, I suppose it would not run in a thread and it
would block the processing.

Can someone give me a hint on how to do it?

Thanks
Pedro Lima




From fog at initd.org  Fri May 21 03:38:33 2004
From: fog at initd.org (Federico Di Gregorio)
Date: Fri May 21 03:40:00 2004
Subject: [Twisted-web] Nevow newbie question
In-Reply-To: <c8khh6$ejc$1@sea.gmane.org>
References: <c8khh6$ejc$1@sea.gmane.org>
Message-ID: <1085132312.2668.18.camel@localhost>

L? venerd?, 2004/05/21 alle 10:18, +0100, Pedro Lima ha scritto:
> Hello all,
> 
> I would like to use nevow with data from a sql query, but I'm having trouble
> figuring out how to do it.
> 
> >From what I understood, data is fetched in the data_xxx methods. But if I
> use the ConnectionPool query I get a Defered as a result. And the data_xxx
> method should return the data and not a Defered, correct?

just return the deferred. nevow will do the right thing (tm).

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog@debian.org
INIT.D Developer                                           fog@initd.org
  We are all dust, Saqi, so play the lute
                    We are all wind, Saqi, so bring wine. -- Omar Khayam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040521/c323fd53/attachment.bin
From alex-news at comcast.net  Wed May 26 13:38:51 2004
From: alex-news at comcast.net (Alexander May)
Date: Wed May 26 13:39:10 2004
Subject: [Twisted-web] FW: [Twisted-Python] How to organize a web
	application?
Message-ID: <E1BT4F3-0002T7-00@pyramid.twistedmatrix.com>

Hello all,

I am looking for advice on how to organize a web application.  I've never
written a web application before, and would appreciate any insight into best
practices and overall structure.

I have html pages, html templates, an underlying database, and (hopefully)
an understanding of twisted and nevow.  What is the best way to glue all of
this together?

For example, what is the best way to associate derived rend.Page classes
with html templates?  I'll have all these different data and render
functions that could potentially be used by many different templates.  Do I
create one monster rend.Page derived class responsible for servicing all the
possible display an render functions?  That seems wrong.  What's the
alternative?

What is the best way to manage links?  The html page template will link to
each other, mostly at the discretion of the html designers (admittedly me at
first).  Should I utilize the underlying file system to define the link
structure as I might do for static html site?  If yes, should I use
static.File and create a special resource type for the html template and
then return rend.Page derived classes?  Or should I do something else all
together?

What is the best way to manage state (non database)?  Cookies or mugged URLS
mapped to closures seems like it would work well.  Perhaps someone has some
experience doing this?

I took a look at the Quotient source, and did not see any html templates at
all, so I assume all the html generation is occurring dynamically via Stan
or some other method.  Likewise for nevow Calendar example which has a
single html template and links to dynamically generated pages (I'll probably
need to do that too).

Thought and comments?

Thanks,
Alex






_______________________________________________
Twisted-Python mailing list
Twisted-Python@twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From vlupien at drummonddesigns.com  Thu May 27 06:37:57 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Thu May 27 06:39:09 2004
Subject: [Twisted-web] IRedirectAfterPost
Message-ID: <000001c443e7$705d3700$847ba8c0@Stagiaire>

Hi,

      I'm having some problems with iformless.IRedirectAfterPost.  The first
time I post my form, I see my results' page with the data posted.  But when
I use "back" on my browser and I try to post my form again, the
IRedirectAfterPost doesn't seem to be done.  It bring me back the page with
the form posted (no data in my fields). Only once out of two my form is
posted correctly even if I'm using the back button.  I didn't find out how
to fix it.

Vicky


From vlupien at drummonddesigns.com  Thu May 27 08:34:40 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Thu May 27 08:35:47 2004
Subject: [Twisted-web] IRedirectAfterPost
Message-ID: <000101c443f7$be9efc90$847ba8c0@Stagiaire>

Hi,

I finally found where the probleme is. It's in the file Rend.py and in the
locateChild function of the class FreeformChildMixin.  The problem is the
content of context. To solve my problem, it was necessary to put
request.context automatically in context instead of verifying if the context
is empty. Otherwise the IRedirectAfterPost works once out of two.    

I would like to know if this change can cause many other problems and if it
is possible for you to change it directly in the code so when I'll update
nevow the change will be in it.

Here's the class with the modification I made:

class FreeformChildMixin:
    """Mixin that handles locateChild for freeform segments."""
    def locateChild(self, request, segments):
        ## The method or property name we are going to validate ainst/affect
        bindingName = None

        name = segments[0]
        if name.startswith('freeform_post!'):
            configurableName, bindingName = name.split('!')[1:3]
        elif name.startswith('freeform-action-post!'):
            configurableName, request.args['freeform-actee'] =
name.split('!')[1:3]
            bindingName = request.args['freeform-action'][0]
             
        if bindingName:

            #this is where I made my change
            #Instead of verifying if the ctx is empty, I automatically put
#request.context in ctx            
            ctx = request.context
            self.context = ctx
            ctx.remember(self, inevow.IResource)
            ctx.remember(request, inevow.IRequest)
            cf = iformless.IConfigurableFactory(self)
            c = cf.locateConfigurable(ctx, configurableName)
            return self.webFormPost(request, self, c, ctx, bindingName,
request.args)
        return NotFound


Thanks,

Vicky


From dp at ulaluma.com  Thu May 27 16:51:17 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Thu May 27 16:51:38 2004
Subject: [Twisted-web] IRedirectAfterPost
In-Reply-To: <000001c443e7$705d3700$847ba8c0@Stagiaire>
References: <000001c443e7$705d3700$847ba8c0@Stagiaire>
Message-ID: <5D49F120-B030-11D8-91DC-000A95864FC4@ulaluma.com>


On May 27, 2004, at 8:37 AM, vicky wrote:

> Hi,
>
>       I'm having some problems with iformless.IRedirectAfterPost.  The 
> first
> time I post my form, I see my results' page with the data posted.  But 
> when
> I use "back" on my browser and I try to post my form again, the
> IRedirectAfterPost doesn't seem to be done.  It bring me back the page 
> with
> the form posted (no data in my fields). Only once out of two my form is
> posted correctly even if I'm using the back button.  I didn't find out 
> how
> to fix it.

I believe the current version of formless only lets you set 
IRedirectAfterPost on the request, so you will have to set it on the 
request object associated with the form post, not the form render -- 
this could be why you are having problems with the wrong redirect 
occurring after you use the back button.

As for why your form is only working every other time, I can only guess 
that there must be a problem with your code. Are you sure you are 
properly waiting on a deferred, if you are using one? I have seen code 
that doesn't wait on a deferred work "every other time" because in 
between the first page and the second page render, the first deferred 
fires, and a callback stores this data in a place where the second page 
render can find it.

dp


From dp at ulaluma.com  Thu May 27 16:56:46 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Thu May 27 16:57:08 2004
Subject: [Twisted-web] IRedirectAfterPost
In-Reply-To: <000101c443f7$be9efc90$847ba8c0@Stagiaire>
References: <000101c443f7$be9efc90$847ba8c0@Stagiaire>
Message-ID: <2166403B-B031-11D8-91DC-000A95864FC4@ulaluma.com>


On May 27, 2004, at 10:34 AM, vicky wrote:

> Hi,
>
> I finally found where the probleme is. It's in the file Rend.py and in 
> the
> locateChild function of the class FreeformChildMixin.  The problem is 
> the
> content of context. To solve my problem, it was necessary to put
> request.context automatically in context instead of verifying if the 
> context
> is empty. Otherwise the IRedirectAfterPost works once out of two.
>
> I would like to know if this change can cause many other problems and 
> if it
> is possible for you to change it directly in the code so when I'll 
> update
> nevow the change will be in it.

Can you please put a diff in the nevow issue tracker? Use 'svn diff 
nevow/filename.py > filename.diff' to make the diff file, then create a 
new issue in the bug tracker: 
http://www.divmod.org/users/roundup.twistd/nevow/index

You should do this for each outstanding patch you have against the 
nevow code. If you just send code to the mailing list, it is most 
likely to be lost.

dp


From craig at coot.net  Fri May 28 00:02:36 2004
From: craig at coot.net (Craig H. Anderson)
Date: Fri May 28 00:03:13 2004
Subject: [Twisted-web] ResourceTemplate is cool
Message-ID: <E1BTaRw-0004zY-00@pub.coot.net>

Greetings, 

While sitting and waiting for our Cold Fusion consultant
to show up I remembered that I had twisted loaded on
my XP box.  So I looked over the documentation and found
the page 'Light Weight Templating With Resource Templates'
I downloaded and installed Quixote and in 2 hours time have
a little demo of what we plan to do with Cold Fusion.
Being a Python devotee, I can see I'll have a lot of fun
with this. 

Are there any examples using ResoureTemplate beyond the
QuoteResource() page?

From vlupien at drummonddesigns.com  Fri May 28 07:45:42 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Fri May 28 07:46:53 2004
Subject: [Twisted-web] IRedirectAfterPost
In-Reply-To: <5D49F120-B030-11D8-91DC-000A95864FC4@ulaluma.com>
Message-ID: <001301c444ba$11e56a70$847ba8c0@Stagiaire>

Hi dp,

	I tested one of your examples to see if the problem of
IRedirectAfterPost when the preceding button is used occurs in this example
too. When the form is correct (no error), I return a result's page with
IRedirectAfterPost and a child function (I don't have any differed). Even
if, I don't have a differed the same problem occurs. 

I attached the example with my modification 

Vicky



>I believe the current version of formless only lets you set 
>IRedirectAfterPost on the request, so you will have to set it on the 
>request object associated with the form post, not the form render -- 
>this could be why you are having problems with the wrong redirect 
>occurring after you use the back button.
>
>As for why your form is only working every other time, I can only guess 
>that there must be a problem with your code. Are you sure you are 
>properly waiting on a deferred, if you are using one? I have seen code 
>that doesn't wait on a deferred work "every other time" because in 
>between the first page and the second page render, the first deferred 
>fires, and a callback stores this data in a place where the second page 
>render can find it.
>
>dp


-------------- next part --------------
A non-text attachment was scrubbed...
Name: customform.tac
Type: application/octet-stream
Size: 3603 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040528/9cafc882/customform.obj
From mary-twisted at puzzling.org  Mon May 31 18:50:40 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon May 31 18:50:55 2004
Subject: [Twisted-web] Set request headers in rend.Page
Message-ID: <20040601005040.GA2781@titus.home.puzzling.org>

Hi,

I have a subclass of rend.Page. When this page is rendered to HTTP, I
want to modify the request object (specifically, I want to set an entity
tag, since this resource is quite large when transferred and is being
polled every ten minutes).

I don't know whether the underlying data has been modified until after
locateChild has finished, so I can't modify the headers there, unless I
move a lot of functionality into the parent page in the tree. This seems
strange from a design point of view. (Why should the parent Page need to
know enough about the child to be able to tell if its underlying data
source has changed?)

Is there some point where I can add new headers to the request in a Page
itself? I haven't tested thoroughly, but it seems to me that the HTTP
headers have already been transmitted by the time render_ and data_
methods are called.

-Mary

From dp at ulaluma.com  Mon May 31 18:58:39 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Mon May 31 18:59:07 2004
Subject: [Twisted-web] Set request headers in rend.Page
In-Reply-To: <20040601005040.GA2781@titus.home.puzzling.org>
References: <20040601005040.GA2781@titus.home.puzzling.org>
Message-ID: <D1843420-B366-11D8-B64F-000A95864FC4@ulaluma.com>


On May 31, 2004, at 8:50 PM, Mary Gardiner wrote:

> Is there some point where I can add new headers to the request in a 
> Page
> itself? I haven't tested thoroughly, but it seems to me that the HTTP
> headers have already been transmitted by the time render_ and data_
> methods are called.

Override beforeRender on your Page subclass, or just override 
renderHTTP directly. beforeRender is a hook for doing exactly these 
types of things.

Nevow streams html to the browser as the page is being rendered, so by 
the time your render_ method is called, all of the html which logically 
comes before that has been sent. Thus the headers have already been 
written.

There was also previously a way to indicate that nevow should wait for 
the entire page render to complete before sending any data, which I may 
have inadvertently removed in a recent refactor. If it's important to 
anyone, let me know and I'll look into it.

dp


From mary-twisted at puzzling.org  Mon May 31 19:03:06 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon May 31 19:03:20 2004
Subject: [Twisted-web] Set request headers in rend.Page
In-Reply-To: <20040601005040.GA2781@titus.home.puzzling.org>
References: <20040601005040.GA2781@titus.home.puzzling.org>
Message-ID: <20040601010306.GA3967@titus.home.puzzling.org>

On Tue, Jun 01, 2004, Mary Gardiner wrote:
> Is there some point where I can add new headers to the request in a
> Page itself? I haven't tested thoroughly, but it seems to me that the
> HTTP headers have already been transmitted by the time render_ and
> data_ methods are called.

Looking at the implementation of rend.Page.renderHTTP makes me suspect
that the way to do this is by making a beforeRender(self, request)
method. Is this right?

And if so, beforeRender looks like it's meant to be synchronous, and
unfortunately my "check for new data" method needs to wait on a Deferred
to be called back.

-Mary

From dp at ulaluma.com  Mon May 31 19:18:48 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Mon May 31 19:19:12 2004
Subject: [Twisted-web] Set request headers in rend.Page
In-Reply-To: <20040601010306.GA3967@titus.home.puzzling.org>
References: <20040601005040.GA2781@titus.home.puzzling.org>
	<20040601010306.GA3967@titus.home.puzzling.org>
Message-ID: <A27280DE-B369-11D8-B64F-000A95864FC4@ulaluma.com>


On May 31, 2004, at 9:03 PM, Mary Gardiner wrote:

> On Tue, Jun 01, 2004, Mary Gardiner wrote:
>> Is there some point where I can add new headers to the request in a
>> Page itself? I haven't tested thoroughly, but it seems to me that the
>> HTTP headers have already been transmitted by the time render_ and
>> data_ methods are called.
>
> Looking at the implementation of rend.Page.renderHTTP makes me suspect
> that the way to do this is by making a beforeRender(self, request)
> method. Is this right?
>
> And if so, beforeRender looks like it's meant to be synchronous, and
> unfortunately my "check for new data" method needs to wait on a 
> Deferred
> to be called back.

That's probably an oversight; beforeRender and afterRender should 
support deferreds. Until that works though, you should override 
renderHTTP and return a deferred. Do this:

def renderHTTP(self, request):
     d = doSomethingDeferred()
     return d.addCallback(self.myCallback, request)

def myCallback(self, result, request):
	# Do whatever
	return rend.Page.renderHTTP(self, request)

rend.Page.renderHTTP returns a deferred which fires when the page is 
done rendering.

dp


From mary-twisted at puzzling.org  Mon May 31 19:58:31 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon May 31 19:58:43 2004
Subject: [Twisted-web] Set request headers in rend.Page
In-Reply-To: <A27280DE-B369-11D8-B64F-000A95864FC4@ulaluma.com>
References: <20040601005040.GA2781@titus.home.puzzling.org>
	<20040601010306.GA3967@titus.home.puzzling.org>
	<A27280DE-B369-11D8-B64F-000A95864FC4@ulaluma.com>
Message-ID: <20040601015831.GA5795@titus.home.puzzling.org>

On Mon, May 31, 2004, Donovan Preston wrote:
> That's probably an oversight; beforeRender and afterRender should 
> support deferreds.

Filed Issue 49 about this:
http://divmod.org/users/roundup.twistd/nevow/issue49

> Do this:
> 
> def renderHTTP(self, request):
>     d = doSomethingDeferred()
>     return d.addCallback(self.myCallback, request)
> 
> def myCallback(self, result, request):
> 	# Do whatever
> 	return rend.Page.renderHTTP(self, request)
> 
> rend.Page.renderHTTP returns a deferred which fires when the page is 
> done rendering.

OK, a simple test case (like that attached to Issue 49) shows that this
does work, but I'm having trouble with it as part of my codebase. I will
hunt for the problem elsewhere for now.

-Mary

