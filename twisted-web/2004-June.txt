From spam at mike-warren.com  Wed Jun  2 15:59:36 2004
From: spam at mike-warren.com (Mike Warren)
Date: Wed Jun  2 15:59:37 2004
Subject: [Twisted-web] nevow/stan + pregenerated HTML
Message-ID: <E1BVdlo-0003vU-00@meejah.homeip.net>


Greetings,

I'm using Nevow+Twisted, and want to do something like this:

,----
|     def render_something(self,context,data):
|         pregeneratedHTML = someComplexFunctionReturningStringOfHTML()
|         context.tag[ pregeneratedHTML ] # my problem here
| 
|         otherstuff = []
|                 
|         return context.tag[otherstuff]
`----

What I'm looking for is some way to get Nevow to not quote all the
stuff in the pregeneratedHTML string. (FWIW, I'm using docutils to
generate HTML from ReStructuredText markup, so switching this to use
stan would be a lot of work).

Is there any way to do this? Ideas?

Thanks,

-- 
mike [at] mike [dash] warren [dot] com
<URL:http://www.mike-warren.com>
gpg --keyserver 80.71.227.37 --recv-key 579911BD
87F2 4D98 BDB0 0E90 EE2A 0CF9 1087 0884 5799 11BD

From spam at mike-warren.com  Wed Jun  2 16:59:11 2004
From: spam at mike-warren.com (Mike Warren)
Date: Wed Jun  2 16:59:12 2004
Subject: [Twisted-web] nevow/stan + pregenerated HTML
References: <E1BVdlo-0003vU-00@meejah.homeip.net>
Message-ID: <E1BVehT-00048M-00@meejah.homeip.net>

Mike Warren <spam@mike-warren.com> writes:

> Is there any way to do this? Ideas?

Of course, I got an idea right after I sent this. But, I think I might
have found a bug in Nevow (although I'm pretty new at this; *please*
correct me if I'm wrong).

I figured I could make my own class implementing
nevow.inevow.ISerializable and skip the whole "quoting" phase
altogether. I did this:

,----
| class RawString(str):
|     __implements__ = nevow.inevow.ISerializable
|     
|     def serialize(self, context):
|         return str(self)
`----

...however, in nevow/flat/ten.py:

,----
| # FIXME: hack!
| # and the way serialize is implemented is possibly an
| # abuse of the compy system, but hey, it WORKS. :)
| 
| cachedAdapters = {}
| def getSerializer(obj):
|     if hasattr(obj, '__class__'):
|         klas = obj.__class__
|     else:
|         klas = type(obj)
| 
|     adapter = cachedAdapters.get(klas, None)
|     if adapter is not None:
|         return adapter
|     
|     #print "Adding cache entry for ",klas
|     registry = compy.getRegistry(None)
|     fromInterfaces = compy.classToInterfaces(klas)
|     for fromInterface in fromInterfaces:
|         #print " trying: ", fromInterface
|         adapter = registry.getAdapterFactory(
|             fromInterface,
|             inevow.ISerializable,
|             None)
|         if adapter is not None:
|             cachedAdapters[klas] = adapter
|             return adapter
|     return None
`----

...it appears that this code presumes that one needs an adaptor to the
ISerializable interface. My object already implements this, however,
so I added these two lines (after the " trying:" print statement):

,----
|         if fromInterface == inevow.ISerializable:      
|             return lambda object,x: object.serialize(x)
`----

...which makes everything do exactly what I want (namely, in my
original code, I return a RawString for my pregenerated HTML and it
makes it through fine). [Of course, I realise I might end up with
non-conforming XHTML if I fuck up my pregeneration, but hey...]

Am I right? Should I file a patch? (After adding code to cache the
lambda, too)

Cheers,

-- 
mike [at] mike [dash] warren [dot] com
<URL:http://www.mike-warren.com>
gpg --keyserver 80.71.227.37 --recv-key 579911BD
87F2 4D98 BDB0 0E90 EE2A 0CF9 1087 0884 5799 11BD

From mary-twisted at puzzling.org  Wed Jun  2 17:23:08 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed Jun  2 17:23:20 2004
Subject: [Twisted-web] nevow/stan + pregenerated HTML
In-Reply-To: <E1BVdlo-0003vU-00@meejah.homeip.net>
References: <E1BVdlo-0003vU-00@meejah.homeip.net>
Message-ID: <20040602232308.GA29998@titus.home.puzzling.org>

On Wed, Jun 02, 2004, Mike Warren wrote:
> What I'm looking for is some way to get Nevow to not quote all the
> stuff in the pregeneratedHTML string. (FWIW, I'm using docutils to
> generate HTML from ReStructuredText markup, so switching this to use
> stan would be a lot of work).

tags.xml does this:

    from nevow import tags

    def render_something(self,context,data):
        pregeneratedHTML = someComplexFunctionReturningStringOfHTML()
        context.tag[tags.xml(pregeneratedHTML)]

        otherstuff = []

        return context.tag[otherstuff]

This is mentioned in the wiki FAQ:
http://divmod.org/users/wiki.twistd/nevow/moin.cgi/FrequentlyAskedQuestions

-Mary

From joe at seventy-twodpi.com  Thu Jun  3 07:40:13 2004
From: joe at seventy-twodpi.com (Joe Bowers)
Date: Thu Jun  3 07:44:19 2004
Subject: [Twisted-web] Nevow without twisted
In-Reply-To: <E1BVDYS-0007aD-02@pyramid.twistedmatrix.com>
Message-ID: <AGEIJJAOINCAPLOMDIAHKEJBDNAA.joe@seventy-twodpi.com>

There has been some talk (although
I may have imagined it, not being
very IRC savvy) of making
Nevow deployable outside of twisted
(for example, as CGI). This sounds
pretty hard! Is there really a development
effort in this direction? Is it active?
If so, is there a branch to contribute
on, or a To Do list?

Thanks!

--------------------
Joe Bowers
Technical Director
Seventy-two dpi

828.252.2408 [x308]
joe@seventytwodpi.com
http://www.seventytwodpi.com


From dp at ulaluma.com  Thu Jun  3 10:35:50 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Thu Jun  3 10:36:15 2004
Subject: [Twisted-web] Nevow without twisted
In-Reply-To: <AGEIJJAOINCAPLOMDIAHKEJBDNAA.joe@seventy-twodpi.com>
References: <AGEIJJAOINCAPLOMDIAHKEJBDNAA.joe@seventy-twodpi.com>
Message-ID: <13121954-B57C-11D8-8445-000A95864FC4@ulaluma.com>


On Jun 3, 2004, at 9:40 AM, Joe Bowers wrote:

> There has been some talk (although
> I may have imagined it, not being
> very IRC savvy) of making
> Nevow deployable outside of twisted
> (for example, as CGI). This sounds
> pretty hard! Is there really a development
> effort in this direction? Is it active?
> If so, is there a branch to contribute
> on, or a To Do list?

Most of the hard work is already done; however the hard work that is 
left is details, details, details. The remaining difficulty is going to 
be purging twisted-web assumptions from nevow.rend.Page.

If you are interested: The core nevow rendering refactor that happened 
between 0.1 and 0.2 has split the rendering machinery into two 
functions. nevow.flat.ten.iterflatten is the core render loop; it runs 
as a generator and has a yield hook which users of flatten can 
implement to pause and restart rendering if required. 
nevow.rend.deferflatten (which should be moved out of the rend module 
and into the flat package) is the code which drives iterflatten, 
pausing each time a deferred is encountered and waiting for the 
deferred to fire.

Right now rend.Page.renderHTTP just uses deferflatten directly, but it 
should be changed to import a new, undecided name from nevow.flat which 
is either a function that returns a string in the absence of Twisted 
(nevow.flat.ten.flatten), or a deferred in the presence of Twisted 
(what is currently nevow.rend.deferflatten).

Once this change is made to rend.Page and other needless twisted 
dependencies are purged from nevow.rend, the next step is to write a 
replacement for NevowSite.

NevowSite is a subclass of twisted.web.server.Site which is responsible 
for constructing a Request object and dispatching it to the appropriate 
Page which will fulfill the request. In the case of a CGI-specific 
replacement for NevowSite, an object which emulates IRequest (which is 
currently poorly defined) will need to be constructed which does the 
appropriate thing for CGI in the face of the various request methods 
(setHeader, setCookie, write, finish)

At the moment, all this required development I described is not 
happening. I don't have a burning need to be able to use Nevow without 
twisted.web. I would like it to be completed at some point, because I 
think using software in a variety of environments exposes inappropriate 
assumptions and I would like to make it as easy as possible to deploy 
very small Nevow applications quickly, for small apps and 
experimentation.

dp


From murphy at sgtp.samara.ru  Thu Jun  3 22:14:47 2004
From: murphy at sgtp.samara.ru (Alex Murphy)
Date: Thu Jun  3 22:15:05 2004
Subject: [Twisted-web] Simple Threaded Web Server on Twisted
Message-ID: <1086322487.17600.41.camel@bene.samgtp>

Hello!
 The small web-server was necessary for the development written on
python for me. I write it on a basis twisted. All is simply excellent -
twisted rules. That only there is a variable args with all in parameters
transferred of inquiry. But here there was a question how to make
sessions?? Yes I understand, what on basis Cookie all turns out without
ceremony, but I saw object session, only I can not understand as them to
use? I bring below my code, at the same time tell where I have admitted
mistakes.

mtp is mine handler which processes files with expansion mpt. If it is
possible, correct wrong places of a code and result an example of use
cookie sessions.

 Yours faithfully, Alexey.
                                                                                                                       ---------------------------------------------------------------
#!/bin/env python
root_dir = 'wwwroot'
version = '0.1'

# Import need twisted module
from twisted.web import static, server, vhost, twcgi, script
from twisted.internet import reactor, protocol

# MPT Handle
def handle_mpt(x,fn,env,qargs):
    request = x.request

  ....
  .....
  .....
  # me handlers


                                                                                                                       
server.version = "MPT_Server %s" % version
class MPTScript(twcgi.CGIScript):
    def runProcess(self, env, request, qargs=[]):
        p = twcgi.CGIProcessProtocol(request)
        reactor.callInThread(handle_mpt,p,self.filename,env,qargs)
                                                                                                                       
                                                                                                                       
root = static.File(root_dir)
root.indexNames.append('index.mpt')
root.indexNames.append('index.cgi')
root.indexNames.append('index.php')
root.indexNames.append('index.php3')
root.processors = {
            '.mpt': MPTScript,
            '.cgi': twcgi.CGIScript,
            '.php3': twcgi.PHP3Script,
            '.php': twcgi.PHPScript,
}
                                                                                                                       
root.putChild('vhost', vhost.VHostMonsterResource())
site = server.Site(root)
reactor.listenTCP(8080, site)
reactor.initThreads()
reactor.run()
---------------------------------------------------------


From hendry at cs.helsinki.fi  Mon Jun  7 03:53:52 2004
From: hendry at cs.helsinki.fi (Kai Hendry)
Date: Mon Jun  7 03:54:22 2004
Subject: [Twisted-web] Web applications
Message-ID: <20040607095350.GB15427@cs.helsinki.fi>

http://listserver.dreamhost.com/pipermail/whatwg-whatwg.org/2004-June/000005.html

There is an open web application work group forming which could do with
your comments "from the trenches" of web application development. :)

Kind regards,

From craig at coot.net  Thu Jun 10 18:07:26 2004
From: craig at coot.net (Craig H. Anderson)
Date: Thu Jun 10 18:07:59 2004
Subject: [Twisted-web] Newbie help on session data
Message-ID: <E1BYZZu-0003Tl-00@pub.coot.net>

I am working on an internal database app
served by twisted.web.  I need help on
how to attach data to sessions.  Point
me to any examples to look at.  Here is
fragments from my first nonworking attempt. 

#------------------------- 

from twisted.python import components
from twisted.web.resource import Resource 

class IGcsSession(components.Interface):
	def getData(self):
		"""Return the session data
		"""
class GcsSession:
	__implements__ = (IGcsSession, )
	def __init__(self):
		self.counter = 0
		self.dict = {}
	def getData(self):
		return self 


class CalForm(Resource):
	template render(self,request):
		sess = request.getSession()
		sessData = sess.getComponent(IGcsSession,default=GcsSession())
		sessData.counter += 1 

resource = CalForm() 


From craig at coot.net  Thu Jun 10 21:40:11 2004
From: craig at coot.net (Craig H. Anderson)
Date: Thu Jun 10 21:40:44 2004
Subject: [Twisted-web] Re: Newbie help on session data
In-Reply-To: <E1BYZZu-0003Tl-00@pub.coot.net> 
References: <E1BYZZu-0003Tl-00@pub.coot.net>
Message-ID: <E1BYctn-000405-00@pub.coot.net>


Some more attempts and reading of code and
here are code fragments with working session data. 

Where is a good place to call components.registerAdapter()
for a server? 

#---------------------------------------
from twisted.python import components
from twisted.web.resource import Resource
from twisted.web import server 

class IGcsSession(components.Interface):
	def getData(self):
		"""Return the session data
		"""
class GcsSession(components.Adapter):
	__implements__ = (IGcsSession, )
	def __init__(self,original):
		components.Adapter.__init__(self,original)
		self.counter = 0
		self.dict = {}
	def getData(self):
		return self
components.registerAdapter(GcsSession, server.Session, IGcsSession) 

class CalForm(Resource):
	template render(self,request): 

		sessData = request.getSession(IGcsSession)
		sessData.counter += 1
		'counter %d<br>' % sessData.counter 

resource = CalForm() 


From craig at coot.net  Fri Jun 11 08:15:19 2004
From: craig at coot.net (Craig H. Anderson)
Date: Fri Jun 11 08:15:53 2004
Subject: [Twisted-web] How to configure quixote rtl?
Message-ID: <E1BYmoS-0005VV-00@pub.coot.net>


Greetings, 

I would like to do some custom configuration and setup
ResourceTemplate handling of xxx.rtl files.  I'm thinking
I can modify the following code to add the ResourceTemplate
handling.  I will be working on this today and will post
what I find and check for any advice you may have. 


http://twistedmatrix.com/documents/current/howto/using-twistedweb
Advanced Configuration
Non-trivial configurations of Twisted Web are achieved
with Python configuration files.
#---------------------------------------
from twisted.application import internet, service
from twisted.web import static, server 

root = static.File("/var/www/htdocs")
application = service.Application('web')
site = server.Site(root)
sc = service.IServiceCollection(application)
i = internet.TCPServer(80, site)
i.setServiceParent(sc) 


From craig at coot.net  Fri Jun 11 09:06:14 2004
From: craig at coot.net (Craig H. Anderson)
Date: Fri Jun 11 09:06:48 2004
Subject: [Twisted-web] Re: How to configure quixote rtl?
In-Reply-To: <E1BYmoS-0005VV-00@pub.coot.net> 
References: <E1BYmoS-0005VV-00@pub.coot.net>
Message-ID: <E1BYnbi-0005gE-00@pub.coot.net>

If I read just a little further on
http://twistedmatrix.com/documents/current/howto/using-twistedweb
I see the examples I need.  In my case I will be processing xxx.rtl files. 


Modifying File Resources 


File resources, be they root object or children thereof, have two important 
attributes that often need to be modified: indexNames and processors. 
indexNames determines which files are treated as index files -- served up 
when a directory is rendered. processors determine how certain file 
extensions are treated. 


Here is an example for both, creating a site where all .rpy extensions are 
Resource Scripts, and which renders directories by searching for a index.rpy 
file. 


from twisted.application import internet, service
from twisted.web import static, server, script 

root = static.File("/var/www/htdocs")
root.indexNames=['index.rpy']
root.processors = {'.rpy': script.ResourceScript}
application = service.Application('web')
sc = service.IServiceCollection(application)
site = server.Site(root)
i = internet.TCPServer(80, site)
i.setServiceParent(sc) 


File objects also have a method called ignoreExt. This method can be used to 
give extension-less URLs to users, so that implementation is hidden. Here is 
an example: 


from twisted.application import internet, service
from twisted.web import static, server, script 

root = static.File("/var/www/htdocs")
root.ignoreExt(".rpy")
root.processors = {'.rpy': script.ResourceScript}
application = service.Application('web')
sc = service.IServiceCollection(application)
site = server.Site(root)
i = internet.TCPServer(80, site)
i.setServiceParent(sc) 


Now, a URL such as /foo might be served from a Resource Script called 
foo.rpy, if no file by the name of foo exists. 

 

Craig H. Anderson writes: 

> 
> Greetings,  
> 
> I would like to do some custom configuration and setup
> ResourceTemplate handling of xxx.rtl files.  I'm thinking
> I can modify the following code to add the ResourceTemplate
> handling.  I will be working on this today and will post
> what I find and check for any advice you may have.  
> 
> 
> http://twistedmatrix.com/documents/current/howto/using-twistedweb
> Advanced Configuration
> Non-trivial configurations of Twisted Web are achieved
> with Python configuration files.
> #---------------------------------------
> from twisted.application import internet, service
> from twisted.web import static, server  
> 
> root = static.File("/var/www/htdocs")
> application = service.Application('web')
> site = server.Site(root)
> sc = service.IServiceCollection(application)
> i = internet.TCPServer(80, site)
> i.setServiceParent(sc)  
> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web 
> 
 

From nico at tekNico.net  Mon Jun 14 02:18:45 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Mon Jun 14 02:27:58 2004
Subject: [Twisted-web] Re: Newbie help on session data
In-Reply-To: <E1BYZZu-0003Tl-00@pub.coot.net>
References: <E1BYZZu-0003Tl-00@pub.coot.net>
Message-ID: <40CD5F65.7030205@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> I am working on an internal database app
> served by twisted.web.  I need help on
> how to attach data to sessions.  Point
> me to any examples to look at.

You can do this without adapters. Look at the Session class in the
twisted/web/server.py file. In the class __init__ (line #400 in v.1.2.0)
there's this cute "sessionNamespaces" empty dict attribute that is not
referenced anywhere else in the Twisted code. Put this somewhere:

sessNS = request.getSession().sessionNamespaces
sessNS['someKey'] = something

and somewhere else:

sessNS = request.getSession().sessionNamespaces
something = sessNS['someKey']

Works like a charm. :^)

Now, if we could change those session timeouts, that would be something. ;^)


- --
Nicola Larosa - nico@tekNico.net

"Pressure is something that you choose to embrace in your life or not.
Pressure is drama, and doesn't really interest me in my everyday life."
 -- Julia Roberts


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFAzV9kXv0hgDImBm4RAs/2AKCuS4Fg0PFbPj2K5uA3NQ//ZcCL6gCgmdfQ
yKQBafV8Hq7vFGgTize/tew=
=I1+s
-----END PGP SIGNATURE-----


From michal at pasternak.w.lub.pl  Mon Jun 14 03:29:04 2004
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Mon Jun 14 03:29:11 2004
Subject: [Twisted-web] atop + nevow: a slightly different approach,
	than Quotient
Message-ID: <20040614092904.GA46268@pasternak.w.lub.pl>

Hi,

I am trying to implement (using atop & nevow) a simple site with logged in
and anonymous users.

The problem is, that I want to allow users, who are logged in, to view
basically the same content, only with some options added.

Currently I use pretty much the same approach as Quotient does: I used a
Webup, that I use as a IRequest for Avatars, I have AnonWebup, that I use
for anonymouse access. 

The question is: what's the best approach to have the same functionality
(preferably by the same classess), at same URLs, but have a slightly more
value added for non-anonymous logins?

-- 
m
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 187 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040614/46e64a7b/attachment.bin
From craig at coot.net  Mon Jun 14 13:18:36 2004
From: craig at coot.net (Craig H. Anderson)
Date: Mon Jun 14 13:19:10 2004
Subject: [Twisted-web] ConnectionPool problem
Message-ID: <E1BZwya-0006H9-00@pub.coot.net>


What am I doing wrong.  The call back is never run. 

# twisted.web server
from twisted.application import internet, service
from twisted.web import static, server, script
from twisted.python import components 

root = static.File("/CraigSvn/Code/Python/twistedWebTest/trunk/")
#root.ignoreExt(".rtl")
root.processors = {'.rtl': script.ResourceTemplate,
                  '.rpy': script.ResourceScript
                  }
application = service.Application('web')
site = server.Site(root)
sc = service.IServiceCollection(application)
ii = internet.TCPServer(8080, site)
ii.setServiceParent(sc) 

 

#-------------------------
from twisted.web import resource, server
from gcs.htmllib import sessionData
from twisted.enterprise import adbapi
import time 

class MyResource(resource.Resource):
   isLeaf = 1
   #Package twisted :: Package python :: Module failure :: Class Failure
   def dbErrBack(self,failure):
	html = "<html><head>" \
		"<head><title>GCS database exercise</title></head>" \
		"<body><h1>GCS database exercise</h1>"
	self.request.write(html)
	self.request.write('Error<br></body></html>')
	self.request.finish()
	return None
   #def dbThread(self,txn,arg):
   def dbThread(self,txn,arg):
	qry = 'select top 1 recordid from ActiveLeads'
	txn.execute(qry)
	rslt = txn.fetchall()
	return rslt[0][0]
   def finish(self,arg):
	html = "<html><head>" \
		"<head><title>GCS database exercise</title></head>" \
		"<body><h1>GCS database exercise</h1>"
	self.request.write(html)
	self.request.write('<br></body></html>')
	self.request.finish()
   def render_GET(self, request):
	return self.render_it(request)
   def render_it(self,request):
	print 'render_it'
	self.request = request
	self.connData = ('DENVERORACLE','GcsProduction','sa','mushroom')
	self.connectionStr = "Provider=sqloledb;" \
                            "Data Source=%s;" \
                            "Initial Catalog=%s;" \
                            "User Id=%s;" \
                            "Password=%s" \
                            % self.connData
	dbpool = adbapi.ConnectionPool('adodbapi',self.connectionStr)
	dfrd = dbpool.runInteraction(self.dbThread,None)
	dfrd.addCallback(self.finish,self)
	dfrd.addErrback(self.dbErrBack,None)
	print 'render_it. about to return dbpool running %s' % str(dbpool.running)
	return  server.NOT_DONE_YET
   def render_POST(self, request):
	return self.render_it(request) 

resource = MyResource() 


From syver at inout.no  Thu Jun 17 08:00:20 2004
From: syver at inout.no (Syver Enstad)
Date: Thu Jun 17 08:00:52 2004
Subject: [Twisted-web] Configuration data
Message-ID: <usmcuxp1n.fsf@inout.no>


How does one access the configuration data for a web application from
a twisted web Resource? I have understood that the way to configure a
twisted service is to store data in its Application object. How does
one access the application from within a Resource?



From matt at pollenation.net  Sat Jun 19 04:44:19 2004
From: matt at pollenation.net (Matt Goodall)
Date: Sat Jun 19 04:45:59 2004
Subject: [Twisted-web] Re: [Twisted-Python] question about RSS + dynamic
	content...
In-Reply-To: <opr9pqqpopn679qn@pcp08347952pcs.michav01.md.comcast.net>
References: <opr9pqqpopn679qn@pcp08347952pcs.michav01.md.comcast.net>
Message-ID: <1087641859.13460.5.camel@debian>

On Wed, 2004-06-16 at 20:38 -0300, Stella Rockford wrote:
> I am interestested in using Nevow as a templating alternative to ZPT.
> 
> I am having difficulty triggering the nevow intepreter with very similar  
> language as was included in the pycon 2004 PDF.
> 
> If anyone could provide an example of rendering an RSS feed into a slot  
> that is defined in an html tmeplate it would be very helpful indeed.

Not exactly sure what you mean by "rendering an RSS feed into a slot"
but I knocked up a small example of fetching and rendering an RSS feed
using Nevow some time ago. You can find the example in the Nevow
subversion repository as sandbox/mg/rsschannel.py.

Details on getting Nevow from the subversion repository can be found in
the Nevow wiki <http://divmod.org/users/wiki.twistd/nevow/moin.cgi/
GettingNevow>.

Hope that helps.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt@pollenation.net

Any views expressed are my own and do not necessarily reflect
the views of my employer.


From mary-twisted at puzzling.org  Sat Jun 19 18:36:39 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat Jun 19 18:36:49 2004
Subject: [Twisted-web] rend.Page's default locateChild doesn't handle
	Deferred results
Message-ID: <20040620003639.GA6183@titus.home.puzzling.org>

Cross-posted from the issue tracker:
http://divmod.org/users/roundup.twistd/nevow/issue52 , see the attached
file for a test case.

-Mary
-------------- next part --------------
A non-text attachment was scrubbed...
Name: deferredResourceTest.py
Type: text/x-python
Size: 2550 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040620/a2c782e7/deferredResourceTest.py
From alex at alexnewby.com  Sat Jun 19 19:39:08 2004
From: alex at alexnewby.com (Alex Newby)
Date: Sat Jun 19 19:39:16 2004
Subject: [Twisted-web] NameVirtualHost
Message-ID: <1087695548.10547.198776082@webmail.messagingengine.com>

Hi,

I'm a stumped newbie. I've adapted the moin_twisted.py script for
MoinMoin on localhost on WinXP Python2.3.3 to use the Nevow vhost module
instead of from twisted.web, and from twisted.application import
internet, service and replaced the call to app.Application as follows. 

#application = app.Application("web")
#application.listenTCP(httpd_port, site, interface=httpd_host)

application = service.Application('web')
sc = service.IServiceCollection(application)
site = server.Site(root)
i = internet.TCPServer(8001, site)
i.setServiceParent(sc)

I am using mod_rewrite behind apache. Twisted handles localhost requests
passed from Apache for 127.0.0.2, 127.0.0.3 no problem, but the remote
server gives the error.

/usr/local/lib/python2.3/site-packages/twisted/web/resource.py, line 59
in getChildForRequest
57def getChildForRequest(resource, request):
58  """Traverse resource tree to find who will handle the request."""
59  while request.postpath and not resource.isLeaf:
60    pathElement = request.postpath.pop(0)
 
exceptions.AttributeError: 'NameVirtualHost' object has no attribute
'isLeaf'
---------------------------------
Sincerely,

Alex Newby 
E-mail: alex@alexnewby.com
Website: http://www.alexnewby.com


From shahid at mislbd.com  Sun Jun 20 01:54:47 2004
From: shahid at mislbd.com (S S Islam Shahid)
Date: Sun Jun 20 01:59:01 2004
Subject: [Twisted-web] Apache + Twisted-web
Message-ID: <20040620075209.M60002@mislbd.com>

I'm trying to configure twisted-web to work with apache. Could you please 
provide me some study materials like useful web links?

Thanks and regards,


====================================
S S Islam Shahid
System Administrator
Millennium Information Solution Ltd.


From mailinglists at shechen.at  Sun Jun 20 02:54:08 2004
From: mailinglists at shechen.at (noema)
Date: Sun Jun 20 02:53:15 2004
Subject: [Twisted-web] Apache + Twisted-web
In-Reply-To: <20040620075209.M60002@mislbd.com>
References: <20040620075209.M60002@mislbd.com>
Message-ID: <opr9vxoil63lm9gq@mail.geekmail.cc>



You might want to try the following directive in the apache configuration. 
This assumes that twisted is running on the same machine on port 8765. 
Also make sure the libproxy.so module is loaded.

<VirtualHost *>
   ServerAdmin you@wherever.com
   ServerName virtualhostname.domain.com

   ProxyVia On
   ProxyPass / http://127.0.0.1:8765/
   ProxyPassReverse / http://127.0.0.1:8765/
</VirtualHost>



The result is that all requests that are made via 
virtualhostname.domain.com are forwarded to the twisted server.


#noema

From matt at pollenation.net  Sun Jun 20 16:54:10 2004
From: matt at pollenation.net (Matt Goodall)
Date: Sun Jun 20 16:55:50 2004
Subject: [Twisted-web] rend.Page's default locateChild doesn't handle
	Deferred results
In-Reply-To: <20040620003639.GA6183@titus.home.puzzling.org>
References: <20040620003639.GA6183@titus.home.puzzling.org>
Message-ID: <1087772050.9452.3.camel@debian>

On Sun, 2004-06-20 at 10:36 +1000, Mary Gardiner wrote:
> Cross-posted from the issue tracker:
> http://divmod.org/users/roundup.twistd/nevow/issue52 , see the attached
> file for a test case.

This is fixed in subversion. You can now return a deferred (which later
provides the child resource) from child_ methods and getDynamicChild.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt@pollenation.net

Any views expressed are my own and do not necessarily reflect
the views of my employer.


From michal at pasternak.w.lub.pl  Sun Jun 20 21:20:39 2004
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Sun Jun 20 21:20:46 2004
Subject: [Twisted-web] Making a Page instance a proxy to another one
Message-ID: <20040621032039.GA4221@pasternak.w.lub.pl>

Hi,

I need to have a Page instance to work as a proxy to another one - so url
"somesite/somepage/child1" will return not "child1" of "somepage", but
"child1" of "someOtherPage". What's the easiest and most correct method to
do that? I've had some partial success with getDynamicChild:

	def child_(self, req):
		return self.getDynamicChild("", req)
		
	def getDynamicChild(self, name, req):
		if name="":
			return self.proxyPage
		else:
			return maybeDeferred(self.proxyPage.locateChild, [name], req).addCallback(lambda x: x[0])
	
... basically, this works okay for child_* methods in proxyPage, but gives
wrong results for formless child mixins (I haven't tested
proxyPage.getDynamicChild).

I cannot just replicate child_ methods of proxyPage in Page, because I have
no idea, what child methods proxyPage has (it's a dynamically generated page
instance).

Help! :^)

-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net

"Frankly, any company would look bad if their corporate e-mail was available
for anyone to read," -- Jim Dose of Ritual Entertainment. 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 187 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040621/20164467/attachment.bin
From michal at pasternak.w.lub.pl  Mon Jun 21 05:12:54 2004
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Mon Jun 21 05:13:10 2004
Subject: [Twisted-web] Making a Page instance a proxy to another one
In-Reply-To: <20040621032039.GA4221@pasternak.w.lub.pl>
References: <20040621032039.GA4221@pasternak.w.lub.pl>
Message-ID: <20040621111254.GA7589@pasternak.w.lub.pl>

Michal Pasternak [Mon, Jun 21, 2004 at 05:20:39AM +0200]:
> 	def child_(self, req):
> 		return self.getDynamicChild("", req)
> 		
> 	def getDynamicChild(self, name, req):
> 		if name="":
> 			return self.proxyPage
> 		else:
> 			return maybeDeferred(self.proxyPage.locateChild, [name], req).addCallback(lambda x: x[0])
> 	
> ... basically, this works okay for child_* methods in proxyPage, but gives
> wrong results for formless child mixins (I haven't tested
> proxyPage.getDynamicChild).

Well, that behaviour was caused by broken locateChild, fixed in rev. 346.
Anyway, even if that works, I still look forward for any better methods :)
-- 
m
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 187 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040621/5c94fc0c/attachment.bin
From vlupien at drummonddesigns.com  Mon Jun 21 09:40:45 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Mon Jun 21 09:42:09 2004
Subject: [Twisted-web] form attributes in an html file
Message-ID: <000401c457a6$1e4df670$847ba8c0@Stagiaire>

Hi,
	I need some help.  I have an HTML file in my project which contains
a form.  I would like that the attributes 'action' of my form is filled as
loaders.stan which is done like this:
 
	tags.form(pattern='freeform-form', action=slot('form-artion'))[
		... 
	] 

I looked at the customform.tac example which uses the loaders.xmlstr and
filled the attributes this way: 

	<form nevow:pattern='freeform-form'>
		<nevow:attr name='action'><nevow:slot name='form-action' />
</nevow:attr>
		...
	</form>

I've done the same thing in my HTML file and that doesn't works. I was
wondering if there's another way to do this.

Vicky


From mesozoic at polynode.com  Mon Jun 21 15:57:51 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Mon Jun 21 15:58:25 2004
Subject: [Twisted-web] Re: form attributes in an html file
In-Reply-To: <000401c457a6$1e4df670$847ba8c0@Stagiaire>
Message-ID: <E1BcWnX-00029p-00@perpetual.moxn.net>


On 6/21/2004, "vicky" <vlupien@drummonddesigns.com> wrote:

>I looked at the customform.tac example which uses the loaders.xmlstr and
>filled the attributes this way:
-(snip)-
>I've done the same thing in my HTML file and that doesn't works. I was
>wondering if there's another way to do this.

As far as I remember, nevow:attr only works with xmlstr/xmlfile, not
htmlstr/htmlfile.

If it were me, I would just have something like:

# <form nevow:render="updateFormAction">..</form>
def render_updateFormAction(self, ctx, data):
  if something: return ctx.tag(action='/something')
  else: return ctx.tag(action='/otherthing')

From matt at pollenation.net  Mon Jun 21 16:03:31 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon Jun 21 16:05:03 2004
Subject: [Twisted-web] NameVirtualHost
In-Reply-To: <1087695548.10547.198776082@webmail.messagingengine.com>
References: <1087695548.10547.198776082@webmail.messagingengine.com>
Message-ID: <1087855411.20503.2.camel@debian>

On Sat, 2004-06-19 at 18:39 -0700, Alex Newby wrote:
> Hi,
> 
> I'm a stumped newbie. I've adapted the moin_twisted.py script for
> MoinMoin on localhost on WinXP Python2.3.3 to use the Nevow vhost module
> instead of from twisted.web, and from twisted.application import
> internet, service and replaced the call to app.Application as follows. 
> 
> #application = app.Application("web")
> #application.listenTCP(httpd_port, site, interface=httpd_host)
> 
> application = service.Application('web')
> sc = service.IServiceCollection(application)
> site = server.Site(root)
> i = internet.TCPServer(8001, site)
> i.setServiceParent(sc)

You need to use nevow.appserver.NevowSite instead of twisted.web.server.

Cheers, Matt

> 
> I am using mod_rewrite behind apache. Twisted handles localhost requests
> passed from Apache for 127.0.0.2, 127.0.0.3 no problem, but the remote
> server gives the error.
> 
> /usr/local/lib/python2.3/site-packages/twisted/web/resource.py, line 59
> in getChildForRequest
> 57def getChildForRequest(resource, request):
> 58  """Traverse resource tree to find who will handle the request."""
> 59  while request.postpath and not resource.isLeaf:
> 60    pathElement = request.postpath.pop(0)
>  
> exceptions.AttributeError: 'NameVirtualHost' object has no attribute
> 'isLeaf'
> ---------------------------------
> Sincerely,
> 
> Alex Newby 
> E-mail: alex@alexnewby.com
> Website: http://www.alexnewby.com
> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From matt at pollenation.net  Mon Jun 21 17:23:04 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon Jun 21 17:24:38 2004
Subject: [Twisted-web] Re: form attributes in an html file
In-Reply-To: <E1BcWnX-00029p-00@perpetual.moxn.net>
References: <E1BcWnX-00029p-00@perpetual.moxn.net>
Message-ID: <1087860184.20504.7.camel@debian>

On Mon, 2004-06-21 at 17:57 -0400, Alex Levy wrote:
> On 6/21/2004, "vicky" <vlupien@drummonddesigns.com> wrote:
> 
> >I looked at the customform.tac example which uses the loaders.xmlstr and
> >filled the attributes this way:
> -(snip)-
> >I've done the same thing in my HTML file and that doesn't works. I was
> >wondering if there's another way to do this.
> 
> As far as I remember, nevow:attr only works with xmlstr/xmlfile, not
> htmlstr/htmlfile.

No, I fixed that a while ago now. IIRC, it was before the 0.2.0 release.

Cheers, Matt

> 
> If it were me, I would just have something like:
> 
> # <form nevow:render="updateFormAction">..</form>
> def render_updateFormAction(self, ctx, data):
>   if something: return ctx.tag(action='/something')
>   else: return ctx.tag(action='/otherthing')
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From stephen at thorne.id.au  Tue Jun 22 05:49:14 2004
From: stephen at thorne.id.au (stephen@thorne.id.au)
Date: Tue Jun 22 05:49:19 2004
Subject: [Twisted-web] Log analysis
In-Reply-To: 0
Message-ID: <20040622114914.1796.1325393498.divmod.quotient.1915@ohm>

I'd like to analyze my twisted.web logs. I'm wondering if anyone has written any software which will allow me to do this easily? I don't really care about the logs of the past, creating new logs going forward that are analyzable is perfectly acceptable.

Stephen.

From mesozoic at polynode.com  Tue Jun 22 10:09:19 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Tue Jun 22 10:10:39 2004
Subject: [Twisted-web] Re: Log analysis
In-Reply-To: <20040622114914.1796.1325393498.divmod.quotient.1915@ohm>
Message-ID: <E1Bcnpn-0005Yb-00@perpetual.moxn.net>


On 6/22/2004, "stephen@thorne.id.au" <stephen@thorne.id.au> wrote:

>I'd like to analyze my twisted.web logs. I'm wondering if anyone has 
>written any software which will allow me to do this easily? I don't really 
>care about the logs of the past, creating new logs going forward that are 
>analyzable is perfectly acceptable.

I've been using Webalizer for a long time to generate statistics on my
twisted.web logs, and it works very well. Do you use Moshe's
twisted-web package for Debian? On my server, it generates a perfectly
usable Apache-style access.log; there are plenty of tools available for
chewing those up.

If you're not using it already, try:
>>> site = server.Site(rootResource, logPath='access.log')

From mary-twisted at puzzling.org  Tue Jun 22 15:17:20 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue Jun 22 15:17:30 2004
Subject: [Twisted-web] Re: Log analysis
In-Reply-To: <E1Bcnpn-0005Yb-00@perpetual.moxn.net>
References: <20040622114914.1796.1325393498.divmod.quotient.1915@ohm>
	<E1Bcnpn-0005Yb-00@perpetual.moxn.net>
Message-ID: <20040622211720.GA30014@titus.home.puzzling.org>

On Tue, Jun 22, 2004, Alex Levy wrote:
> I've been using Webalizer for a long time to generate statistics on my
> twisted.web logs, and it works very well. Do you use Moshe's
> twisted-web package for Debian? On my server, it generates a perfectly
> usable Apache-style access.log; there are plenty of tools available
> for chewing those up.

Unless there's something I'm missing, its impossible to distinguish hits
to two virtual hosts though (unless you can manually distinguish them
from the / onwards).

-Mary

From mesozoic at polynode.com  Tue Jun 22 15:43:34 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Tue Jun 22 15:44:07 2004
Subject: [Twisted-web] Re: Re: Log analysis
In-Reply-To: <20040622211720.GA30014@titus.home.puzzling.org>
Message-ID: <E1Bct3G-0003Ce-00@perpetual.moxn.net>


On 6/22/2004, "Mary Gardiner" <mary-twisted@puzzling.org> wrote:

>On Tue, Jun 22, 2004, Alex Levy wrote:
>> I've been using Webalizer for a long time to generate statistics on my
>> twisted.web logs, and it works very well. Do you use Moshe's
>> twisted-web package for Debian? On my server, it generates a perfectly
>> usable Apache-style access.log; there are plenty of tools available
>> for chewing those up.
>
>Unless there's something I'm missing, its impossible to distinguish hits
>to two virtual hosts though (unless you can manually distinguish them
>from the / onwards).

This _is_ true, although it seems that there is some discussion going on
about how to support this in new-web:

http://www.twistedmatrix.com/users/roundup.twistd/twisted/issue75


--
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_

From soft.omicron at laposte.net  Wed Jun 23 09:51:11 2004
From: soft.omicron at laposte.net (soft.omicron@laposte.net)
Date: Wed Jun 23 09:55:49 2004
Subject: [Twisted-web] Stan and specials chars
Message-ID: <000801c45939$e885d770$1401a8c0@Server2000>

How to obtain the following chars with stan : ????? for example (I always obtain the ? char)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040623/5b1e89db/attachment.htm
From mesozoic at polynode.com  Wed Jun 23 11:38:43 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Wed Jun 23 11:39:19 2004
Subject: [Twisted-web] Re: Stan and specials chars
In-Reply-To: <000801c45939$e885d770$1401a8c0@Server2000>
Message-ID: <E1BdBhr-0000CH-00@perpetual.moxn.net>


On 6/23/2004, "soft.omicron@laposte.net" <soft.omicron@laposte.net>
wrote:

>How to obtain the following chars with stan : ????? for example (I always 
>obtain the ? char)

You'll have to use XML identities, as far as I know. So the Stan would
be:

myStan = tags.div[tags.xml("&copy; 2004 Soft Omicron"]

If you had any characters that needed to be translated into XML, you
would do something like this:

myStan = tags.div[
    "<&&This will render as normal text&>",
    "but this won't: ", tags.xml("&copy;"),
    ]

There may be a way to extend the string renderer so that it detects these
special characters and reformats them, but I think that'd get way too
hairy (given the plethora of different native encodings people use these
days).

From gumuz at looze.net  Thu Jun 24 17:12:49 2004
From: gumuz at looze.net (=?iso-8859-1?Q?Guyon_Mor=E9e?=)
Date: Thu Jun 24 17:12:50 2004
Subject: [Twisted-web] msn client
Message-ID: <001b01c45a41$0bba4f70$0301a8c0@turk>

hi,

does anyone have a (slightly) more sophisticated example for using the msn
client module, than the one which is provided with the twisted package.

thanx,

Guyon


From radix at twistedmatrix.com  Thu Jun 24 17:54:28 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu Jun 24 17:54:31 2004
Subject: [Twisted-web] msn client
In-Reply-To: <001b01c45a41$0bba4f70$0301a8c0@turk>
References: <001b01c45a41$0bba4f70$0301a8c0@turk>
Message-ID: <40DB69B4.3030901@twistedmatrix.com>

Guyon Mor?e wrote:
> hi,
> 
> does anyone have a (slightly) more sophisticated example for using the msn
> client module, than the one which is provided with the twisted package.
> 
> thanx,
> 
> Guyon

You want to post this to twisted-python@twistedmatrix.com. Sign up at 
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

This mailing list is for web stuff, mostly twisted.web and nevow.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040624/992050fd/signature.bin
From spam at mike-warren.com  Fri Jun 25 16:18:43 2004
From: spam at mike-warren.com (Mike Warren)
Date: Fri Jun 25 16:17:25 2004
Subject: [Twisted-web] nevow + cookieless sessions
Message-ID: <E1Bdz1v-0004pa-00@meejah.homeip.net>


Greetings,

I'm using Twisted+Nevow and everything works great, except if I
attempt to use cookie-less sessions (i.e. "block cookies" in Mozilla);
the URLs start out fine (/__session_key__ETC) but the session keys
changes for every child resource I visit, which seems bad.

I'm using a nevow.guard.SessionWrapper around
twisted.cred.portal.Portal which contains a simple implementation of
IRealm containing my root resource.

I'm not entirely sure where to look for problems. I would have
expected Nevow to re-write href attributes to be something like
/__session_key__BAR/foo from /foo, but that's not happening.

Any guidance or suggestions for things I should look into?

Thanks,
mike



From radix at twistedmatrix.com  Fri Jun 25 16:23:43 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri Jun 25 16:23:43 2004
Subject: [Twisted-web] nevow + cookieless sessions
In-Reply-To: <E1Bdz1v-0004pa-00@meejah.homeip.net>
References: <E1Bdz1v-0004pa-00@meejah.homeip.net>
Message-ID: <40DCA5EF.4070106@twistedmatrix.com>

Mike Warren wrote:
> I'm not entirely sure where to look for problems. I would have
> expected Nevow to re-write href attributes to be something like
> /__session_key__BAR/foo from /foo, but that's not happening.
> 
> Any guidance or suggestions for things I should look into?

Rewriting is way too problematic. This form of session management is 
only compatible with relative links. Just use relative links instead of 
absolute ones.


-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040625/9004d600/signature.bin
From spam at mike-warren.com  Fri Jun 25 19:54:05 2004
From: spam at mike-warren.com (Mike Warren)
Date: Fri Jun 25 20:00:04 2004
Subject: [Twisted-web] nevow + cookieless sessions
In-Reply-To: <40DCA5EF.4070106@twistedmatrix.com>
References: <E1Bdz1v-0004pa-00@meejah.homeip.net>
	<40DCA5EF.4070106@twistedmatrix.com>
Message-ID: <E1Be2OL-0005R5-00@meejah.homeip.net>

Christopher Armstrong <radix@twistedmatrix.com> writes:
> Mike Warren wrote:

> > I'm not entirely sure where to look for problems. I would have
> > expected Nevow to re-write href attributes to be something like
> > /__session_key__BAR/foo from /foo, but that's not happening.  Any
> > guidance or suggestions for things I should look into?

> Rewriting is way too problematic. This form of session management is
> only compatible with relative links. Just use relative links instead
> of absolute ones.

Is there a way to turn it off, besides overriding the locateChild
method is nevow.guard.SessionWrapper? In my case, re-writing the URLs
myself is going to be about the same amount of work as writing
relative URLs, so I'd rather do the former or neither (and just make
users turn on cookies or not interact).

What exactly are the problems with re-writing? I tried some quick
hackery in nevow.flat.flatstan near line 110 to look for an "href" key
and then check that the resulting serialized value started with the
appropriate magic if it started with '/', but neither the request nor
session is "remembered" in the context I get; is this the "way too
problematic" bit? (I don't know quite how the remembering/flattening
works).

It would be preferable to just have a "please turn on cookies if you
want to do ``X''" page; I would like to keep site-customisation sorts
of things in the session (rather than, for example, cookies) but the
way the session_key code works right now, a user with blocked cookies
will be generating a new session for every request they make; I'd
rather have just one "anonymous" session which wouldn't be mutable
(i.e. it would always be filled with the defaults which would be
generated by creating a new session).

To that end, would anyone else find a "default session if no cookies"
bit of code useful? (Obviously, one could then determine if the user
was a "no-cookies" user by seeing if their session is the same as the
"no-cookies" session).

Thanks,

-- 
mike [at] mike [dash] warren [dot] com
<URL:http://www.mike-warren.com>
gpg --keyserver 80.71.227.37 --recv-key 579911BD
87F2 4D98 BDB0 0E90 EE2A 0CF9 1087 0884 5799 11BD

From jason at mobarak.name  Sun Jun 27 00:19:45 2004
From: jason at mobarak.name (Jason Mobarak)
Date: Sun Jun 27 00:50:29 2004
Subject: [Twisted-web] Re: Apache + Twisted-web
In-Reply-To: <20040620075209.M60002@mislbd.com>
References: <20040620075209.M60002@mislbd.com>
Message-ID: <cblop9$nei$1@sea.gmane.org>

S S Islam Shahid wrote:
> I'm trying to configure twisted-web to work with apache. Could you please 
> provide me some study materials like useful web links?
> 
> Thanks and regards,
> 
> 
> ====================================
> S S Islam Shahid
> System Administrator
> Millennium Information Solution Ltd.

This worked for me:

http://divmod.org/users/wiki.twistd/nevow/moin.cgi/ApacheSetup


From andy at thecablelounge.com  Sun Jun 27 02:21:44 2004
From: andy at thecablelounge.com (Andy Gayton)
Date: Sun Jun 27 02:21:51 2004
Subject: [Twisted-web] gronking nevow forms
Message-ID: <40DE8398.6030502@thecablelounge.com>

Hey there,

Just trying to get a handle on how forms in nevow work.

Reading through it looks like there are two main ways to express forms; 
as loose properties, and as methods - or:

---
class IUser_FormEdit(annotate.TypedInterface):
     name = annotate.String()
     age  = annotate.Integer()

vs

class IUser_FormEdit(annotate.TypedInterface):
     def edit( self, name=annotate.String(), age=annotate.Integer() ):
         pass
     annotate.autocallable( edit )
---

Properties make it easy to present the existing values of an object - 
but as far as I can tell, they're a one per form kind of thing.  Methods 
on the other hand are good since as it's easy to throw a bunch of 
elements in a single form; but it looks horrible trying to load them up 
with existing data.

The only way I've found is in the pastebin example:

---
formDefaults = context.locate(iformless.IFormDefaults)
formDefaults.setDefault('editPasting.text', version.getText())
formDefaults.setDefault('editPasting.postedBy', version.getAuthor())
---

Is there a way to show more than one property in a form + have an action 
triggered when the property update is over?

Is there a more intuitive way of loading values into a method defined 
form than the pastebin example?

cheers!
Andy.

From andy at thecablelounge.com  Sun Jun 27 05:06:44 2004
From: andy at thecablelounge.com (Andy Gayton)
Date: Sun Jun 27 05:06:50 2004
Subject: [Twisted-web] gronking nevow forms
In-Reply-To: <40DE8398.6030502@thecablelounge.com>
References: <40DE8398.6030502@thecablelounge.com>
Message-ID: <40DEAA44.3010902@thecablelounge.com>

Andy Gayton wrote:

> Reading through it looks like there are two main ways to express forms; 
> as loose properties, and as methods - or:
> 
> Properties make it easy to present the existing values of an object - 
> but as far as I can tell, they're a one per form kind of thing.  Methods 
> on the other hand are good since as it's easy to throw a bunch of 
> elements in a single form; but it looks horrible trying to load them up 
> with existing data.
> 
> The only way I've found is in the pastebin example:
> 
> ---
> formDefaults = context.locate(iformless.IFormDefaults)
> formDefaults.setDefault('editPasting.text', version.getText())
> formDefaults.setDefault('editPasting.postedBy', version.getAuthor())
> ---
> 
> Is there a more intuitive way of loading values into a method defined 
> form than the pastebin example?

Just chatted with mg on irc - it looks like this sort of thing is 
necessary - so you do have to have a custom render_ something that pokes 
defaults into the form.  There is some nicer syntax to do it with though:

defaults = ctx.locate(IFormDefaults)
myForm = defaults.getAllDefaults('nameOfForm')
myForm['foo'] = 'bar'

and

ctx.locate(IFormDefaults).getAllDefaults('nameOfForm').update(aDictWithEverythingIn)

Thanks mg!

Andy.

From matt at pollenation.net  Sun Jun 27 05:23:21 2004
From: matt at pollenation.net (Matt Goodall)
Date: Sun Jun 27 05:25:33 2004
Subject: [Twisted-web] nevow.url bug (i think)
Message-ID: <1088335401.6450.6.camel@debian>

Hi,

Just came across something which is possibly a bug but don't have time
to think about right now ...

Special characters in url path segments are not encoded, i.e. url.here.
child('?') generates a broken URL. Perhaps the encoding is dependent on
where the URL is used, i.e. in an attribute vs in the page content.
That's the bit that I haven't thought about yet.

Anyway, this is just to prompt me or someone else to look into it
properly.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From dialtone at gmail.com  Sun Jun 27 05:29:32 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sun Jun 27 05:29:34 2004
Subject: [Twisted-web] Patch for the new tree.tac example
Message-ID: <c893b85304062704297a06eca0@mail.gmail.com>

Here's just a little patch for the tree.tac example just added which
uses the htmlstr loader while using xhtml to define the template.

http://rafb.net/paste/results/N8gwXV20.html

Index: examples/tree.tac
===================================================================
--- examples/tree.tac   (revision 356)
+++ examples/tree.tac   (working copy)
@@ -23,8 +23,8 @@
 
 class TreeRenderer(rend.Page):
     __implements__ = ITreeEdit, rend.Page.__implements__
-    docFactory = loaders.htmlstr("""
-<html>
+    docFactory = loaders.xmlstr("""
+<html xmlns="http://www.w3.org/1999/xhtml"
xmlns:nevow="http://nevow.com/ns/nevow/0.1">
 <head><title>Tree Editor</title></head>
 <body><h1><span nevow:data="description"
                 nevow:render="string">Tree Description</span></h1>

From andy at thecablelounge.com  Sun Jun 27 21:03:49 2004
From: andy at thecablelounge.com (Andy Gayton)
Date: Sun Jun 27 21:03:56 2004
Subject: [Twisted-web] civil guards
Message-ID: <40DF8A95.5050304@thecablelounge.com>

I'm looking for a convenient way to show login error messages.  I've 
made an attempt in the attached civilguard.tac which is a modified 
version of examples/guarded.tac.

It abuses that checkers.ANONYMOUS is really an empty tuple, and instead 
of returning failure.Failure(error.UnauthorizedLogin()) returns a tuple 
with the appropiate error message.

The realm then stretches its definition of ANONYMOUS to be any tuple, 
and hands the NotLoggedIn page this tuple so it gets a chance to render 
the error messages.

It seems like a pretty round about way of doing things though.

Just hoping to get feedback on how others are doing this sort of thing.

cheers!

Andy.
-------------- next part --------------
from twisted.internet import defer
from twisted.application import service, internet
from twisted.cred import portal, checkers, credentials
from nevow import inevow, rend, tags, appserver, guard, loaders


### Renderers

class NotLoggedIn(rend.Page):

    def __init__( self, errors=() ):
        rend.Page.__init__( self )
        self.errors = errors

    def render_errors( self, ctx, data ):
        if self.errors:
            return [
                "Login Error:",
                tags.br(),
                [ tags.strong[error] for error in self.errors ]
            ]
        return ""


    docFactory = loaders.stan(
    tags.html[
        tags.head[tags.title["Not Logged In"]],
        tags.body[
            render_errors,
            tags.form(action=guard.LOGIN_AVATAR)[
                tags.table[
                    tags.tr[
                        tags.td[ "Username:" ],
                        tags.td[ tags.input(type='text',name='username') ],
                    ],
                    tags.tr[
                        tags.td[ "Password:" ],
                        tags.td[ tags.input(type='password',name='password') ],
                    ]
                ],
                tags.input(type='submit'),
                tags.p,
            ]
        ]
    ]
)


class LoggedIn(rend.Page):
    """The resource that is returned when you login"""
    docFactory = loaders.stan(
    tags.html[
        tags.head[tags.title["Logged In"]],
        tags.body[
            tags.h3(render=tags.directive("welcome")),
            tags.a(href=guard.LOGOUT_AVATAR)["Logout"]
        ]
    ]
)

    def render_welcome(self, context, data):
        return context.tag[ "Hello, %s!" % data]

    def logout(self):
        ## self.original is the page's main data -- the object that was passed in to the constructor, and
        ## the object that is initially passed as the 'data' parameter to renderers
        print "%s logged out!" % self.original


### Users

class User:
    def __init__( self, name, password ):
        self.name      = name
        self.password  = password


userdb = {
    "fred" : User( "fred", "fred" ),
    "ned" :  User( "ned",  "ned" ),
}


### Authentication

class SimpleChecker:
    __implements__ = checkers.ICredentialsChecker
    credentialInterfaces = (credentials.IUsernamePassword,)

    def __init__(self, userdb):
        self.userdb = userdb

    def requestAvatarId(self, credentials):
        user = self.userdb.get( credentials.username, None )
        if user is not None:
            return defer.maybeDeferred(
                credentials.checkPassword, user.password).addCallback(
                self._cbPasswordMatch, credentials.username)
        else:
            return ( "No user named: %s" % credentials.username, )


    def _cbPasswordMatch(self, matched, username):
        if matched: return username
        return ( "password didn't match: %s" % username, )


class SimpleRealm:
    __implements__ = portal.IRealm,

    def requestAvatar(self, avatarId, mind, *interfaces):
        for iface in interfaces:
            if iface is inevow.IResource:
                if type(avatarId) is type(checkers.ANONYMOUS):
                    resc = NotLoggedIn( avatarId )
                    resc.realm = self
                    return ( inevow.IResource, resc, lambda : None )
                else:
                    resc = LoggedIn( avatarId )
                    resc.realm = self
                    return ( inevow.IResource, resc, resc.logout )

        raise NotImplementedError("Can't support that interface.")



### Application setup

realm = SimpleRealm()
portal = portal.Portal(realm)
myChecker = SimpleChecker( userdb )

portal.registerChecker(checkers.AllowAnonymousAccess(), credentials.IAnonymous)
portal.registerChecker(myChecker)

site = appserver.NevowSite(
    resource=guard.SessionWrapper(portal)
)

application = service.Application("guarded")
internet.TCPServer(8080, site).setServiceParent(application)
From vlupien at drummonddesigns.com  Tue Jun 29 09:59:38 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Tue Jun 29 10:01:09 2004
Subject: [Twisted-web] Re: form attributes in an html file
In-Reply-To: <1087860184.20504.7.camel@debian>
Message-ID: <000001c45df2$15363780$847ba8c0@Stagiaire>

I'm using the latest version of nevow and I'm not able to use the nevow:attr
in my html file.  Do I have to put something special in my file.  I want to
fill the attribute action with form-action but I get this error : 

exceptions.KeyError: "Slot named 'form-action' was not filled."

I've done the same thing with an xml file and everything was alright.

Vicky
 

-----Message d'origine-----
De?: twisted-web-bounces@twistedmatrix.com
[mailto:twisted-web-bounces@twistedmatrix.com] De la part de Matt Goodall
Envoy??: 21 juin, 2004 19:23
??: twisted-web
Objet?: Re: [Twisted-web] Re: form attributes in an html file

On Mon, 2004-06-21 at 17:57 -0400, Alex Levy wrote:
> On 6/21/2004, "vicky" <vlupien@drummonddesigns.com> wrote:
> 
> >I looked at the customform.tac example which uses the loaders.xmlstr and
> >filled the attributes this way:
> -(snip)-
> >I've done the same thing in my HTML file and that doesn't works. I was
> >wondering if there's another way to do this.
> 
> As far as I remember, nevow:attr only works with xmlstr/xmlfile, not
> htmlstr/htmlfile.

No, I fixed that a while ago now. IIRC, it was before the 0.2.0 release.

Cheers, Matt




From jason.mobarak at gmail.com  Wed Jun 30 22:30:28 2004
From: jason.mobarak at gmail.com (Jason Mobarak)
Date: Wed Jun 30 22:31:49 2004
Subject: [Twisted-web] Trouble with templates
Message-ID: <b194c91904063021307004e8f2@mail.gmail.com>

"""
I'm having trouble with templates and slots... this example code is
producing a traceback, am I doing something wrong?
"""

from twisted.application import service
from twisted.application import internet

from nevow import appserver, loaders, rend, tags, inevow
from formless import annotate, webform, iformless

xml0 = loaders.xmlstr("""<?xml version="1.0"?>
<html xmlns:n="http://nevow.com/ns/nevow/0.1">
<body>
<div n:render="sequence" n:data="foo">
<p n:render="sequence" n:pattern="item">
<span n:pattern="item" n:render="string" />
<span n:pattern="item" n:render="string" />
<div n:pattern="footer" n:render="bar">
<n:slot name="bar" />
</div>
</p>
</div>
</body>
</html>
""")

xml1 = loaders.xmlstr("""<?xml version="1.0"?>
<p xmlns:n="http://nevow.com/ns/nevow/0.1" n:data="baz" n:render="string" />
""")


class FooPage (rend.Page):

    docFactory = xml0

    def data_foo (self, ctx, d):

        return [['foo ', ' bar'], ['oof ', ' rab']]

    def render_bar (self, ctx, d):

        ctx.fillSlots('bar', xml1)
        return ctx.tag

    def data_baz (self, ctx, d):

        return "baz"
        

application = service.Application("MinimalExample")
server = internet.TCPServer(8080, appserver.NevowSite(FooPage()))
server.setServiceParent(application)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: minimalex.tac
Type: application/octet-stream
Size: 1164 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040630/bed7dc3b/minimalex.obj
From tv at tv.debian.net  Tue Jun 29 01:10:16 2004
From: tv at tv.debian.net (Tommi Virtanen)
Date: Sun Jul  4 08:13:58 2004
Subject: [Twisted-web] Nevow 0.2.0 tarball and tag mismatch?
Message-ID: <40E115D8.2000908@tv.debian.net>

Hello. Is there a sane explanation, or even a reason,
for the differences between the SVN tag for the 0.2.0
release and the actual contents of the tarball?

[0 tv@tao ~/src/nevow]$ diff -x .svn -ru tags/releases/0.2.0/ 
tar/nevow-0.2.0/
Only in tags/releases/0.2.0/: MANIFEST.in
Only in tar/nevow-0.2.0/: PKG-INFO
Only in tags/releases/0.2.0/examples/pastebin: TODO
Only in tags/releases/0.2.0/examples/pastebin: data
Only in tags/releases/0.2.0/examples/pastebin/static: robots.txt
Only in tags/releases/0.2.0/formless: test
Only in tags/releases/0.2.0/: sandbox
[1 tv@tao ~/src/nevow]$

