From jml at mumak.net  Sun Jul  4 11:36:19 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 4 Jul 2010 16:36:19 +0100
Subject: [Twisted-web] Twisted 10.1.0 released
Message-ID: <AANLkTinBcj50Bz0lERPbXvCtdWRwLedTljto9Nz2ss0f@mail.gmail.com>

On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 10.1.0.

Highlights include:

 * Deferreds now support cancellation

 * A new "endpoint" interface which can abstractly describe stream
transport endpoints such as TCP and SSL

 * inotify support for Linux, which allows monitoring of file system events.

 * AMP supports transferring timestamps

Note also that this is the *last* supported release of Twisted for
Python 2.4 on Windows.

For more information, see the NEWS file.

It's stable, backwards compatible, well tested and in every way an
improvement. Download it now from:

 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.tar.bz2
 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.winxp32-py2.5.msi
 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.winxp32-py2.6.msi

Many thanks to Glyph Lefkowitz, who helped do the release preparation,
and the PyCon 2010 sprinters, who did so much of the work for this
release.

jml


From nikolasergeeee at mail.ru  Sat Jul 10 13:13:14 2010
From: nikolasergeeee at mail.ru (=?koi8-r?Q?=ED=C1=D2=C9=D1_=F3=C5=D2=C7=C5=C5=D7=C1?=)
Date: Sat, 10 Jul 2010 21:13:14 +0400
Subject: [Twisted-web] Hi!
Message-ID: <E1OXdc2-0002xv-00.nikolasergeeee-mail-ru@f255.mail.ru>

Hi 2 all! Good subscrubtion, thx!
________________________________________________
http://stydentkam.ru


From gelonida at gmail.com  Sun Jul 11 18:39:31 2010
From: gelonida at gmail.com (Gelonida)
Date: Mon, 12 Jul 2010 00:39:31 +0200
Subject: [Twisted-web] https server example with client certs for twisted
Message-ID: <i1dh74$k5i$1@dough.gmane.org>

H,

I posted this question already to comp.python.twisted
just to discover a little later, that comp.python.twisted.web
might be more appropriate.

So here is my post again


I'd like to implement a small https twisted server,

which can wrap a wsgi module and which
can verify client certificates


I am able to do this with apache, but would like to do the same with
twisted.

(For some projects it would allow me to get rid of apache or to perform
certain tests on a Windows hosts)


What I have running is following shell script
calling twistd
#!/bin/sh
certfile=mycert.crt
keyfile=mycert.key
wsgi_module=tw_wrapper.application

twistd -n web --https 4433 \
    --certificate $certfile --privkey $keyfile \
    --wsgi $wsgi_module

Basically I just use my wsgi script and didn't write any twisted code.

My first step would be how to write the same twisted code without
calling twistd

The next step how to enforce enable client certificates


I wondered where I could find any good example code
implementing a web server with client certificate authentication
( and ideally with a  subsequent wsgi module)

TIA



From julian at whisper-net.de  Fri Jul 16 10:45:03 2010
From: julian at whisper-net.de (Julian Pietron)
Date: Fri, 16 Jul 2010 16:45:03 +0200
Subject: [Twisted-web] Large file uploads
Message-ID: <201007161645.03561.julian@whisper-net.de>

Hallo,

I'm currently realizing a web server for my company which allows control of 
some of our embedded devices. After some research, I decided on python and 
twisted as the way to go using genshi as templating engine, which works very 
well.
The problem I encountered is as follows: The user of the web panel should also 
be able to upgrade the firmware on our device. To make this possible, a file 
upload has to take place. The firmware file can have a size of up to 150MB, so 
it will not fit in the RAM of our device. It either won't fit on the NAND flash 
chip twice, so it should be written to NAND with its final name and not as a 
temporary file. To tell the server where to store the file upload, I could add a 
hidden input to the upload form indicating the type of the file being uploaded, 
so that the web server can save it to the right location.
Where's the place to hook in twisted to implement such a behaviour? Do I 
really have to write a completely independent implementation of the HTTP 
handler or could I also reuse some parts of twisted.web?
Does some code exist already which implements the wanted behaviour or could be 
modified to implement it?

Thanks for your reply,
J. Pietron


From exarkun at twistedmatrix.com  Fri Jul 16 11:33:18 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 16 Jul 2010 15:33:18 -0000
Subject: [Twisted-web] Large file uploads
In-Reply-To: <201007161645.03561.julian@whisper-net.de>
References: <201007161645.03561.julian@whisper-net.de>
Message-ID: <20100716153318.1722.1325748314.divmod.xquotient.9@localhost.localdomain>

On 02:45 pm, julian at whisper-net.de wrote:
>Hallo,
>
>I'm currently realizing a web server for my company which allows 
>control of
>some of our embedded devices. After some research, I decided on python 
>and
>twisted as the way to go using genshi as templating engine, which works 
>very
>well.
>The problem I encountered is as follows: The user of the web panel 
>should also
>be able to upgrade the firmware on our device. To make this possible, a 
>file
>upload has to take place. The firmware file can have a size of up to 
>150MB, so
>it will not fit in the RAM of our device. It either won't fit on the 
>NAND flash
>chip twice, so it should be written to NAND with its final name and not 
>as a
>temporary file. To tell the server where to store the file upload, I 
>could add a
>hidden input to the upload form indicating the type of the file being 
>uploaded,
>so that the web server can save it to the right location.
>Where's the place to hook in twisted to implement such a behaviour? Do 
>I
>really have to write a completely independent implementation of the 
>HTTP
>handler or could I also reuse some parts of twisted.web?
>Does some code exist already which implements the wanted behaviour or 
>could be
>modified to implement it?

You can override `Request.gotLength` to inspect the request and select 
an appropriate destination for the request body.

You can convince Site to use your custom request by setting it as the 
`requestFactory` attribute.

Jean-Paul


From chhetriarun84 at gmail.com  Fri Jul 16 11:56:41 2010
From: chhetriarun84 at gmail.com (Arun)
Date: Fri, 16 Jul 2010 08:56:41 -0700
Subject: [Twisted-web] Large file uploads
In-Reply-To: <201007161645.03561.julian@whisper-net.de>
References: <201007161645.03561.julian@whisper-net.de>
Message-ID: <5BEE94AD-065C-4DD7-85F1-ED812D6342C2@gmail.com>

Python and twisted on an embedded device? Have you considered size of python as well as twisted, have you compiled those on the firmware, because as per my experience, it was difficult to install twisted on firmware, so I wrote a small c program which does the job. As per your question, twisted has a tcpserver, so you can have web interface using twisted.web and file upload using tcpserver, I have never done this but you can try.

Sent from my iPhone

On Jul 16, 2010, at 7:45 AM, Julian Pietron <julian at whisper-net.de> wrote:

> Hallo,
> 
> I'm currently realizing a web server for my company which allows control of 
> some of our embedded devices. After some research, I decided on python and 
> twisted as the way to go using genshi as templating engine, which works very 
> well.
> The problem I encountered is as follows: The user of the web panel should also 
> be able to upgrade the firmware on our device. To make this possible, a file 
> upload has to take place. The firmware file can have a size of up to 150MB, so 
> it will not fit in the RAM of our device. It either won't fit on the NAND flash 
> chip twice, so it should be written to NAND with its final name and not as a 
> temporary file. To tell the server where to store the file upload, I could add a 
> hidden input to the upload form indicating the type of the file being uploaded, 
> so that the web server can save it to the right location.
> Where's the place to hook in twisted to implement such a behaviour? Do I 
> really have to write a completely independent implementation of the HTTP 
> handler or could I also reuse some parts of twisted.web?
> Does some code exist already which implements the wanted behaviour or could be 
> modified to implement it?
> 
> Thanks for your reply,
> J. Pietron
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From nickpholden at gmail.com  Mon Jul 19 09:28:12 2010
From: nickpholden at gmail.com (Nick Holden)
Date: Mon, 19 Jul 2010 14:28:12 +0100
Subject: [Twisted-web] Mirror Down
Message-ID: <4C4452EC.2060202@gmail.com>

  Hi,

The main mirror for the twisted download is down, this is causing 
easy_install to hang for ages and fail when I try and install:

"
Reading http://tmrc.mit.edu/mirror/twisted/Twisted/10.0/
Download error: (110, 'Connection timed out') -- Some packages may not 
be found!
Reading http://tmrc.mit.edu/mirror/twisted/Twisted/9.0/
Download error: (110, 'Connection timed out') -- Some packages may not 
be found!
Reading http://twistedmatrix.com/projects/core/
Reading http://tmrc.mit.edu/mirror/twisted/Twisted/8.2/
Download error: (110, 'Connection timed out') -- Some packages may not 
be found!
Reading http://tmrc.mit.edu/mirror/twisted/Twisted/8.1/
Download error: (110, 'Connection timed out') -- Some packages may not 
be found!
"

Any idea when it will be back up? Or any way to make easy_install or pip 
ignore the main mirror?

Thanks!

Nick Holden


From superdupont at gmail.com  Mon Jul 19 11:54:55 2010
From: superdupont at gmail.com (Carlos Valiente)
Date: Mon, 19 Jul 2010 16:54:55 +0100
Subject: [Twisted-web] Partial HTTP downloads using twisted.web.client.Agent
Message-ID: <AANLkTill94BeIaeAwjeSW9WocPbbm-igrHUc_XxopmuM@mail.gmail.com>

Hi! I need to download a fragment of a file using HTTP. The file is
stored in several hosts, and I need to handle the case where one or
several hosts are down, or do not have a copy of the file, or the
connection fails for any other reason.

Inspired by the Twisted client tutorial
(http://twistedmatrix.com/documents/current/web/howto/client.html),
I've written a function called ``download()``
(http://gist.github.com/481575) which iterates through a list of URLs.
I find the resulting code a bit too long, however -- in particular the
need for the ``FileWriter`` class.

Have I overlooked some Twisted helper code, or some Twisted coding
idiom, that could simplify the example above? Can you guys think of
any way to improve that code fragment?

Thanks a lot,

C


From exarkun at twistedmatrix.com  Mon Jul 19 22:20:17 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 20 Jul 2010 02:20:17 -0000
Subject: [Twisted-web] Mirror Down
In-Reply-To: <4C4452EC.2060202@gmail.com>
References: <4C4452EC.2060202@gmail.com>
Message-ID: <20100720022017.27251.420066821.divmod.xquotient.75@localhost.localdomain>

On 19 Jul, 01:28 pm, nickpholden at gmail.com wrote:
>  Hi,
>
>The main mirror for the twisted download is down, this is causing
>easy_install to hang for ages and fail when I try and install:

For Twisted 10.1, we took the extra step of loading the tarball to PyPI 
to address this issue.  Apparently that was pointless, though?  Because 
easy_install doesn't care about the downloads available on PyPI?  It'd 
be good to know if this is the case, so we can consider whether or not 
to waste the time for the next release.

Jean-Paul


From glyph at twistedmatrix.com  Mon Jul 19 23:35:47 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Jul 2010 23:35:47 -0400
Subject: [Twisted-web] Mirror Down
In-Reply-To: <20100720022017.27251.420066821.divmod.xquotient.75@localhost.localdomain>
References: <4C4452EC.2060202@gmail.com>
	<20100720022017.27251.420066821.divmod.xquotient.75@localhost.localdomain>
Message-ID: <EC49D719-F997-4FB3-95B5-9C894C35B914@twistedmatrix.com>


On Jul 19, 2010, at 10:20 PM, exarkun at twistedmatrix.com wrote:

> On 19 Jul, 01:28 pm, nickpholden at gmail.com wrote:
>> Hi,
>> 
>> The main mirror for the twisted download is down, this is causing
>> easy_install to hang for ages and fail when I try and install:
> 
> For Twisted 10.1, we took the extra step of loading the tarball to PyPI 
> to address this issue.  Apparently that was pointless, though?  Because 
> easy_install doesn't care about the downloads available on PyPI?  It'd 
> be good to know if this is the case, so we can consider whether or not 
> to waste the time for the next release.

As an experiment, I took the _additional_ step of updating the "download_url" field to point at the PyPI URL, <http://pypi.python.org/packages/source/T/Twisted/Twisted-10.1.0.tar.bz2>.

Before I did this, easy_install selected the download link from twistedmatrix.com.  Now, it reliably selects the PyPI URL first.

Looking at the history now, I can see that therve actually updated the download_url to something else already, but now I can't see what he set it to.  Maybe it was pointing at "twistedmatrix.com" and that's why it was screen-scraping?

I am not sure how to *remove* the download_url, though; it might be interesting to see what PyPI does in that case.

Can anyone with some more direct knowledge of how PyPI works comment on this?

(Cross-posting to the main Twisted list because this is of general interest.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100719/ea1b66c6/attachment.htm 

From julian at whisper-net.de  Fri Jul 23 16:34:21 2010
From: julian at whisper-net.de (Julian Pietron)
Date: Fri, 23 Jul 2010 22:34:21 +0200
Subject: [Twisted-web] Large file uploads
In-Reply-To: <20100716153318.1722.1325748314.divmod.xquotient.9@localhost.localdomain>
References: <201007161645.03561.julian@whisper-net.de>
	<20100716153318.1722.1325748314.divmod.xquotient.9@localhost.localdomain>
Message-ID: <4C49FCCD.1010500@whisper-net.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Am 16.07.2010 17:33, schrieb exarkun at twistedmatrix.com:
> 
> You can override `Request.gotLength` to inspect the request and select 
> an appropriate destination for the request body.
> 
> You can convince Site to use your custom request by setting it as the 
> `requestFactory` attribute.
> 
> Jean-Paul
> 

Hi,

thanks for your reply. In meantime I tried cherrypy, which does its job
very good but has some flaws compared to my twisted applications when it
comes to performance and resource usage. So I'm still interested in
solving my problem by using twisted.
The problem is as follows: The file which shall be uploaded is sent via
a HTML form (encoded as multipart/form-data), and I'd like to use
Python's FieldStorage to parse the request body because it handles the
file matters very well. You can tell cherrypy, that for a certain
request uri cherrypy should not parse the request body but instead pass
it on unparsed to the handler method.
Is there a simple way of configuring twisted.web in this way to?
So that e.g. if request uri /do-upload-form is issued, twisted.web does
not try to parse the request body on its own and generate the args dict
to pass on to the render_POST method, but instead uses FieldStorage (or
better: my own subclass of FieldStorage, which employs a NamedTempFile
instead of an anonymous tempfile, which allows me to simply rename it
after it has passed some sanity checks) for parsing the body?

Thanks for your reply,
Julian
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.15 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iQIcBAEBAgAGBQJMSfzNAAoJENidYKvYQHlQNvwQAMdZLl6S2hXgGyMDYEezILEB
xSQgaZ0ZcvWbuoAt4wwwYwzWHT778VaYfsnn5IJnpumluylu2KiMj1TDJpumOo7I
WvSVpBVojrr1akXx8QLNOYCtFVLteRWOahKYG6P2OQlf5moJm/E4PfAKwVn4Ogba
TgJ3joujIYyZy/WX5n+TBHWweT1dthr7a1nDsJJzMhTuqW7X3O9lw+ewC83n320L
3V4rO0rgBF84ltCjiiOK10lR5F2VjjkS975Y1N6CEYhtl0NORbWmKIummb5bpnjT
uSqvwCb0WOXhzvPPHs+MDXDCxkW83TmFOHtCsFnWtS9FXmTUuMi1eNZX8PyshT9D
2t8lvdFFZFwvsgR0BATt+jI3nJzcz06Xo1OrYUr2G91UI8ITsFRcP4EdawKFAfap
CInUvB7bZMDe19j+cRlGGRBEiLFaLMG6KUoaCFkHWVleMmgKPuEtq4Iz9QTNRNq1
HMZDFhmYIJGa8sSbijI6+UqrCqY70VcMQNScm0D3nUlLlXEoYM+myY2VC89NLWfx
8IN44CzLBI2KO9J8B2m/dk8rMRUvYRKP+Wll3OyOEdQvCh7pJh3auIn8nY3P14Az
5E3LvXxOJP4NCHIW8rImy/3Fpfl4dOANF7QuXdeXBp8XOnkG5qX69cqX6T2Cemtq
9qCEF/ddp3yoiNr4Kwng
=EPhL
-----END PGP SIGNATURE-----


From julian at whisper-net.de  Fri Jul 23 17:35:35 2010
From: julian at whisper-net.de (Julian Pietron)
Date: Fri, 23 Jul 2010 23:35:35 +0200
Subject: [Twisted-web] Large file uploads
In-Reply-To: <4C49FCCD.1010500@whisper-net.de>
References: <201007161645.03561.julian@whisper-net.de>	<20100716153318.1722.1325748314.divmod.xquotient.9@localhost.localdomain>
	<4C49FCCD.1010500@whisper-net.de>
Message-ID: <4C4A0B27.8080901@whisper-net.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

After some looks at twisted.web's http.py, I came to the conclusion,
that for my solution to work the way of receiving client's request has
to be modified quite much.
I think twisted does the body parsing when all data has been received
(i.e. is stored somewhere in memory). So it would be too late to hook in
at this point, because the whole file would've been loaded to memory
(or, rather, it wouldn't, because it simply wouldn't fit in). Instead,
the way to go would be to parse the Content-type header of the client's
request as early as possible to decide whether
a) do the parsing in the traditional, twisted.web way (which means to
wait until the request has been completely received and then parse it)
b) in case of multipart/form-data redirect the following input to an
instance of cgi.FieldStorage, which writes any files directly to disk
instead of loading their contents to memory, or, alternatively, write an
own FieldStorage-like class (but why should one re-implement already
existing and well-tested classes?)

The only question that remains is that, while it would (imho) be quiet
easy to watch out for an multipart/form-data header, where do I generate
the input stream from that FieldStorage expects? In cherrypy, this is
quiet simple, because it's not async as twisted is but uses a more
traditional approach to sockets, so that an input stream is easily
available. But as twisted is async and dataReceived() is called on
received data, there is no input stream available to direct to
FieldStorage, or am I wrong in this conclusion? If I'm not, is there any
way to supply FieldStorage with an input stream without pre-reading the
whole request body to memory?

Thanks,
Julian
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.15 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iQIcBAEBAgAGBQJMSgsnAAoJENidYKvYQHlQhNgQAJk4u3VklMZeJkHvCn/H+mHv
i6TDwkGAXEv5fhPxbSVNb+5zDQUS1w305Zx9/oQeJldViKzGN82p4x2D5doapzOI
OD7Nm8wDo/giFByjLwXffxvpFKcz/fyKgS/eK8w6gj0MJQ9ZIqpwEXj9L3OvmFgx
VUaVO3hDv4BRIxLCvG1dZYmdvqnY0W8/z1Bv472ZU48SoK+NhF+zNhhq3VPFDwOv
J56HWrWR7DXjoBZvgxr6r39kmjpblkoknppAXhgEMMPmsSsKe3tG4QVuFUkvqjKL
4IajlSo+Lu9bqAwHhZBw91XfFJhWtflWxQQjgoCWAa3TeNj97WrDGI3y4MRCnDyt
36i4DRK1FMqmnUcxEXMW0C0pviU4caQASmQ+74RsgGOsgCFOtznZOEBk4RN+cLLk
6ONPHpD3q0mHhrzFcIQTgebocMyjnmK+I8AuPirwrVwF1plsKxozNTmHPPJKR1F3
hdWWk0z7ywOlkfpgBpO8sbCmp0bNbryCpCXLG8Qq3SqKbFW8nfwC/SYWr0P1nM6t
VBTAxw31HfH0897xXK/wdnGIM7glBkypagcVp+YcyNJx/QN33zEA7M2Gn1h4sWpg
o+tpTfbI201wrUWooM8U0srGa0fLB3ftjXAFfwOUwJVUVmP47hZLDisPaHrzdmZU
dpTV/NcYhuqSnN+PgflF
=z4LY
-----END PGP SIGNATURE-----


From exarkun at twistedmatrix.com  Fri Jul 23 23:50:06 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 24 Jul 2010 03:50:06 -0000
Subject: [Twisted-web] Large file uploads
In-Reply-To: <4C49FCCD.1010500@whisper-net.de>
References: <201007161645.03561.julian@whisper-net.de>
	<20100716153318.1722.1325748314.divmod.xquotient.9@localhost.localdomain>
	<4C49FCCD.1010500@whisper-net.de>
Message-ID: <20100724035006.27251.1144516852.divmod.xquotient.144@localhost.localdomain>

On 23 Jul, 08:34 pm, julian at whisper-net.de wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>Am 16.07.2010 17:33, schrieb exarkun at twistedmatrix.com:
>>
>>You can override `Request.gotLength` to inspect the request and select
>>an appropriate destination for the request body.
>>
>>You can convince Site to use your custom request by setting it as the
>>`requestFactory` attribute.
>>
>>Jean-Paul
>
>Hi,
>
>thanks for your reply. In meantime I tried cherrypy, which does its job
>very good but has some flaws compared to my twisted applications when 
>it
>comes to performance and resource usage. So I'm still interested in
>solving my problem by using twisted.
>The problem is as follows: The file which shall be uploaded is sent via
>a HTML form (encoded as multipart/form-data), and I'd like to use
>Python's FieldStorage to parse the request body because it handles the
>file matters very well. You can tell cherrypy, that for a certain
>request uri cherrypy should not parse the request body but instead pass
>it on unparsed to the handler method.
>Is there a simple way of configuring twisted.web in this way to?
>So that e.g. if request uri /do-upload-form is issued, twisted.web does
>not try to parse the request body on its own and generate the args dict
>to pass on to the render_POST method, but instead uses FieldStorage (or
>better: my own subclass of FieldStorage, which employs a NamedTempFile
>instead of an anonymous tempfile, which allows me to simply rename it
>after it has passed some sanity checks) for parsing the body?

This will be easier once #288 is resolved.  Until then, you just have to 
hack around with the Request to change the behavior at a very low level.

Jean-Paul


From julian at whisper-net.de  Sat Jul 24 08:32:24 2010
From: julian at whisper-net.de (Julian Pietron)
Date: Sat, 24 Jul 2010 14:32:24 +0200
Subject: [Twisted-web] Large file uploads
In-Reply-To: <20100724035006.27251.1144516852.divmod.xquotient.144@localhost.localdomain>
References: <201007161645.03561.julian@whisper-net.de>	<20100716153318.1722.1325748314.divmod.xquotient.9@localhost.localdomain>	<4C49FCCD.1010500@whisper-net.de>
	<20100724035006.27251.1144516852.divmod.xquotient.144@localhost.localdomain>
Message-ID: <4C4ADD58.1070406@whisper-net.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Am 24.07.2010 05:50, schrieb exarkun at twistedmatrix.com:
> On 23 Jul, 08:34 pm, julian at whisper-net.de wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Am 16.07.2010 17:33, schrieb exarkun at twistedmatrix.com:
>>>
>>> You can override `Request.gotLength` to inspect the request and select
>>> an appropriate destination for the request body.
>>>
>>> You can convince Site to use your custom request by setting it as the
>>> `requestFactory` attribute.
>>>
>>> Jean-Paul
>>
>> Hi,
>>
>> thanks for your reply. In meantime I tried cherrypy, which does its job
>> very good but has some flaws compared to my twisted applications when 
>> it
>> comes to performance and resource usage. So I'm still interested in
>> solving my problem by using twisted.
>> The problem is as follows: The file which shall be uploaded is sent via
>> a HTML form (encoded as multipart/form-data), and I'd like to use
>> Python's FieldStorage to parse the request body because it handles the
>> file matters very well. You can tell cherrypy, that for a certain
>> request uri cherrypy should not parse the request body but instead pass
>> it on unparsed to the handler method.
>> Is there a simple way of configuring twisted.web in this way to?
>> So that e.g. if request uri /do-upload-form is issued, twisted.web does
>> not try to parse the request body on its own and generate the args dict
>> to pass on to the render_POST method, but instead uses FieldStorage (or
>> better: my own subclass of FieldStorage, which employs a NamedTempFile
>> instead of an anonymous tempfile, which allows me to simply rename it
>> after it has passed some sanity checks) for parsing the body?
> 
> This will be easier once #288 is resolved.  Until then, you just have to 
> hack around with the Request to change the behavior at a very low level.
> 
> Jean-Paul
> 

If I've unterstood the source code of http.py, class Request right, the
methods to override would be:
1. handleContentChunk, which is called after some data has been received
by the transfer decoder. Something that behaves like cgi.FieldStorage,
but in an async way, should be installed here / instead of the StringIO
used for self.content
2. requestReceived, which has nothing to do anymore besides of calling
self.process

The only thing that misses now is request's command (GET, POST, HEAD
etc.) and request path. Is there a way to install these in the Request
instance before allContentReceived is called other than overriding
HTTPChannel's lineReceived?

Thanks,
Julian
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.15 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iQIcBAEBAgAGBQJMSt1YAAoJENidYKvYQHlQt5UP+waxLHEVCHQOOY7saeECwEEZ
QsxZpsEyHKd8imcpfrzIgQaooj5OlcFLpAWkaaGFOhUDxq6RmXrLL60/awCTSiCI
Xv1EsNJiwml5/uemhny4BCUq1aBcM0qcMg6BAZG8jwDy2nAVgyX3kall2a+17ybr
aBnssceBHFJm2I7o/yV9ZkrzIPtOabZKqEAyBlE9pqYA1SHZfKhuUZw+BQMpdGdV
HnE+58YRk39B1sTi5GQc5Qed3ynTxeE8tLTHgvi/99QMs+pGQP7kmFbq5KYch8ks
IGVBYJCZXoSZ6aow6zkYSZ8/hmiI5bS3OAnzVSkcOz122UlCqhicSQ7aUUJXrKKs
Er9R4ETNbCYAkZqw+8XofSgcawuP3XxDBfChPeDAC7G1bjnVEO7vEAeUyl+wQ9AO
UXnQde25HAIz88ouXo50Au7Q0Wx/qpnC7Xnl2u6Bbykj0c1UNg1146ZyFCXx3L7f
OT7kQgAIGm3cbCtVU1RLKegsXJD318xEEAHEUoAOjLzbHbuM7cLy6lP5udz/U4QF
pcbpEahNesMKiD7qCGrFzp7nEHu2A272iSN3rbOq0YQILCMhe9uBFqwP1KPsPcMQ
2Or1/n0meu00kZqrFy2t7SsPg3c2754UwC9kLwWXrsP/XoP3HG+YeBFe54sowB2S
lEmLCSwtNlEHH0dy4rmr
=IJw9
-----END PGP SIGNATURE-----


From ashish.jha at gmail.com  Fri Jul 30 23:30:48 2010
From: ashish.jha at gmail.com (Ashish Jha)
Date: Fri, 30 Jul 2010 20:30:48 -0700 (PDT)
Subject: [Twisted-web] Invitation to connect on LinkedIn
Message-ID: <772800883.1869194.1280547048078.JavaMail.app@ech3-cdn11.prod>

LinkedIn
------------Ashish Jha ha chiesto di aggiungerti ai suoi collegamenti su LinkedIn:
------------------------------------------

Cosimo,

I'd like to add you to my professional network on LinkedIn.

- Ashish

Accetta l'invito di Ashish Jha
http://www.linkedin.com/e/-rpxul5-gc9wndzf-34/4n7A7PsxkFDd5rSefp5q2Sv6qHQ8YrSefp5q2SqEBLYJ/blk/I2233720379_2/1BpC5vrmRLoRZcjkkZt5YCpnlOt3RApnhMpmdzgmhxrSNBszYOnPATcP0OdPcPcz99bSEJh4Jlpjx2bP8QdPgMdjsNdj4LrCBxbOYWrSlI/EML_comm_afe/

Visualizza l'invito di Ashish Jha
http://www.linkedin.com/e/-rpxul5-gc9wndzf-34/4n7A7PsxkFDd5rSefp5q2Sv6qHQ8YrSefp5q2SqEBLYJ/blk/I2233720379_2/39vejsPc38TcPcOcAALqnpPbOYWrSlI/svi/ 
------------------------------------------

SAPEVI CHE puoi mostrare le tue competenze professionali su LinkedIn per ricevere offerte di lavoro o di consulenza e migliorare la tua reputazione professionale? Pubblicando risposte in Risposte di LinkedIn ti farai notare dalla comunit? professionale di tutto il mondo.
http://www.linkedin.com/e/-rpxul5-gc9wndzf-34/abq/inv-24/

 
------
(c) 2010, LinkedIn Corporation
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100730/2762c8fb/attachment.htm 

From exarkun at twistedmatrix.com  Sat Jul 31 09:58:21 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 31 Jul 2010 13:58:21 -0000
Subject: [Twisted-web] Invitation to connect on LinkedIn
In-Reply-To: <772800883.1869194.1280547048078.JavaMail.app@ech3-cdn11.prod>
References: <772800883.1869194.1280547048078.JavaMail.app@ech3-cdn11.prod>
Message-ID: <20100731135821.2813.1884044492.divmod.xquotient.0@localhost.localdomain>

If anyone knows how to configure Mailman to block such posts, I'd be 
happy to do it.

Jean-Paul


From karnaugh at karnaugh.za.net  Sat Jul 31 10:04:35 2010
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Sat, 31 Jul 2010 16:04:35 +0200
Subject: [Twisted-web] Invitation to connect on LinkedIn
In-Reply-To: <20100731135821.2813.1884044492.divmod.xquotient.0@localhost.localdomain>
References: <772800883.1869194.1280547048078.JavaMail.app@ech3-cdn11.prod>
	<20100731135821.2813.1884044492.divmod.xquotient.0@localhost.localdomain>
Message-ID: <AANLkTinKiNn0dkFJDk095wTBB5OieQwMHbAvx1PQXPeN@mail.gmail.com>

On Sat, Jul 31, 2010 at 3:58 PM, <exarkun at twistedmatrix.com> wrote:

> If anyone knows how to configure Mailman to block such posts, I'd be
> happy to do it.
>
>
Not sure there is a sane way to since LinkedIn forge your address :(
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100731/bfe240a7/attachment.htm 

From exarkun at twistedmatrix.com  Sat Jul 31 10:15:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 31 Jul 2010 14:15:30 -0000
Subject: [Twisted-web] Invitation to connect on LinkedIn
In-Reply-To: <AANLkTinKiNn0dkFJDk095wTBB5OieQwMHbAvx1PQXPeN@mail.gmail.com>
References: <772800883.1869194.1280547048078.JavaMail.app@ech3-cdn11.prod>
	<20100731135821.2813.1884044492.divmod.xquotient.0@localhost.localdomain>
	<AANLkTinKiNn0dkFJDk095wTBB5OieQwMHbAvx1PQXPeN@mail.gmail.com>
Message-ID: <20100731141530.2813.799866263.divmod.xquotient.4@localhost.localdomain>

On 02:04 pm, karnaugh at karnaugh.za.net wrote:
>On Sat, Jul 31, 2010 at 3:58 PM, <exarkun at twistedmatrix.com> wrote:
>>If anyone knows how to configure Mailman to block such posts, I'd be
>>happy to do it.
>Not sure there is a sane way to since LinkedIn forge your address :(

Someone pointed out the "header_filter_rules" feature which lets 
messages be blocked on arbitrary headers.  I've set one up which will 
hopefully match any future messages of this sort.

Jean-Paul


From glyph at twistedmatrix.com  Sat Jul 31 23:12:03 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 31 Jul 2010 23:12:03 -0400
Subject: [Twisted-web] Invitation to connect on LinkedIn
In-Reply-To: <20100731141530.2813.799866263.divmod.xquotient.4@localhost.localdomain>
References: <772800883.1869194.1280547048078.JavaMail.app@ech3-cdn11.prod>
	<20100731135821.2813.1884044492.divmod.xquotient.0@localhost.localdomain>
	<AANLkTinKiNn0dkFJDk095wTBB5OieQwMHbAvx1PQXPeN@mail.gmail.com>
	<20100731141530.2813.799866263.divmod.xquotient.4@localhost.localdomain>
Message-ID: <75AD94A3-BF1C-4AF9-BF2A-41D2BC39EB00@twistedmatrix.com>


On Jul 31, 2010, at 10:15 AM, exarkun at twistedmatrix.com wrote:

> Someone pointed out the "header_filter_rules" feature which lets 
> messages be blocked on arbitrary headers.  I've set one up which will 
> hopefully match any future messages of this sort.

Thanks for taking the time to do that.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100731/f6ac17bc/attachment.htm 

