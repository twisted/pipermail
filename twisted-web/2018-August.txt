From drjasonharrison at gmail.com  Wed Aug  8 09:48:35 2018
From: drjasonharrison at gmail.com (Jason Harrison)
Date: Wed, 8 Aug 2018 08:48:35 -0700
Subject: [Twisted-web] Asynchronous responses example from documentation --
 why import time??
Message-ID: <CAHVLaBG_fE65Vb-b1Mt9Ew9AR3TiSHTDdkQw3S8Wgka8poY1QA@mail.gmail.com>

Hi,

I am learning twisted-web by attempting each of the examples in the
documentation and making any (small) changes necessary for Python 3.
However when I got to the Aysnchronous Responses example I was not able to
get it to work. The example is at:

https://twistedmatrix.com/documents/current/web/howto/web-in-60/asynchronous.html

I have adapted it to be a self-contained "server" rather than a .rpy
snippet but the response was always a 404.  After much head scratching and
comparison to other examples, I discovered that by adding "import time" to
my "server" it started working.

Why is "import time" required. What is happening without the "import time"?

-Jason

Cell: 604 644 8611
Email: drjasonharrison at gmail.com
LinkedIn: http://www.linkedin.com/in/drjasonharrison
Twitter: http://twitter.com/drjasonharrison



#!/usr/bin/env python3
#
https://twistedmatrix.com/documents/current/web/howto/web-in-60/asynchronous.html
# Asynchronous responses,
#
# try
# - http://localhost:8888

import sys
from twisted.web.server import Site
from twisted.web.resource import Resource
from twisted.internet import reactor, endpoints
from twisted.web.resource import NoResource
from twisted.web.server import NOT_DONE_YET
from twisted.python import log
import time #???

log.startLogging(sys.stdout)
observer = log.PythonLoggingObserver()
observer.start()

class DelayedResource(Resource):
    def _delayedRender(self, request):
        log.msg("_delayedRender request {request!r}", request = request)
        request.write(b"<html><body>Sorry to keep you
waiting.</body></html>")
        request.finish()

    def render_GET(self, request):
        log.msg("get request {request!r}", request = request)
        reactor.callLater(5, self._delayedRender, request)
        return NOT_DONE_YET

resource = DelayedResource()
factory = Site(resource)
endpoint = endpoints.TCP4ServerEndpoint(reactor, 8888)
endpoint.listen(factory)
log.msg("running reactor")
reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20180808/0465e62c/attachment.html>

From exarkun at twistedmatrix.com  Wed Aug  8 09:58:37 2018
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 8 Aug 2018 11:58:37 -0400
Subject: [Twisted-web] Asynchronous responses example from documentation
 -- why import time??
In-Reply-To: <CAHVLaBG_fE65Vb-b1Mt9Ew9AR3TiSHTDdkQw3S8Wgka8poY1QA@mail.gmail.com>
References: <CAHVLaBG_fE65Vb-b1Mt9Ew9AR3TiSHTDdkQw3S8Wgka8poY1QA@mail.gmail.com>
Message-ID: <CAEeXt4P3z1qBY8dD6GrGr2TUX4LHMSFByzFN07NQi11vW81ivw@mail.gmail.com>

On Wed, Aug 8, 2018 at 11:51 AM Jason Harrison <drjasonharrison at gmail.com>
wrote:

> Hi,
>
> I am learning twisted-web by attempting each of the examples in the
> documentation and making any (small) changes necessary for Python 3.
> However when I got to the Aysnchronous Responses example I was not able to
> get it to work. The example is at:
>
>
> https://twistedmatrix.com/documents/current/web/howto/web-in-60/asynchronous.html
>
> I have adapted it to be a self-contained "server" rather than a .rpy
> snippet but the response was always a 404.  After much head scratching
> and comparison to other examples, I discovered that by adding "import time"
> to my "server" it started working.
>
> Why is "import time" required. What is happening without the "import time"?
>
>
One possible explanation is that it has nothing to do with import time per
se.  Instead, *any* change to your source file would have fixed the
problem.  This could be because you had "stale" pyc files lying around
(cached bytecode the interpreter *thought* was up-to-date with your source
but was actually outdated).  It could also be that your server process was
left running and was still using your old code.  Then, for some reason,
after you added the import time your server got the new version of the code
(perhaps you're relying on an auto-reloader and it missed a change, for
example, or you just forgot to restart the server yourself).

import time itself is definitely not a requirement for arbitrary Twisted
Web-based programs to return a response other than 404.

Jean-Paul


> -Jason
>
> Cell: 604 644 8611
> Email: drjasonharrison at gmail.com
> LinkedIn: http://www.linkedin.com/in/drjasonharrison
> Twitter: http://twitter.com/drjasonharrison
>
>
>
> #!/usr/bin/env python3
> #
> https://twistedmatrix.com/documents/current/web/howto/web-in-60/asynchronous.html
> # Asynchronous responses,
> #
> # try
> # - http://localhost:8888
>
> import sys
> from twisted.web.server import Site
> from twisted.web.resource import Resource
> from twisted.internet import reactor, endpoints
> from twisted.web.resource import NoResource
> from twisted.web.server import NOT_DONE_YET
> from twisted.python import log
> import time #???
>
> log.startLogging(sys.stdout)
> observer = log.PythonLoggingObserver()
> observer.start()
>
> class DelayedResource(Resource):
>     def _delayedRender(self, request):
>         log.msg("_delayedRender request {request!r}", request = request)
>         request.write(b"<html><body>Sorry to keep you
> waiting.</body></html>")
>         request.finish()
>
>     def render_GET(self, request):
>         log.msg("get request {request!r}", request = request)
>         reactor.callLater(5, self._delayedRender, request)
>         return NOT_DONE_YET
>
> resource = DelayedResource()
> factory = Site(resource)
> endpoint = endpoints.TCP4ServerEndpoint(reactor, 8888)
> endpoint.listen(factory)
> log.msg("running reactor")
> reactor.run()
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20180808/6dffbf0f/attachment.html>

From drjasonharrison at gmail.com  Wed Aug  8 14:19:23 2018
From: drjasonharrison at gmail.com (Jason Harrison)
Date: Wed, 8 Aug 2018 13:19:23 -0700
Subject: [Twisted-web] Asynchronous responses example from documentation
 -- why import time??
Message-ID: <CAHVLaBHQPq6fqQ9efiYU_F1e8BCTHg_6FYrdmHQQOQJZ49UmjQ@mail.gmail.com>

> On Wed, 8 Aug 2018 at 11:58 AM  Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:

One possible explanation is that it has nothing to do with import time per
> se.  Instead, *any* change to your source file would have fixed the
> problem.  This could be because you had "stale" pyc files lying around
> (cached bytecode the interpreter *thought* was up-to-date with your source
> but was actually outdated).  It could also be that your server process was
> left running and was still using your old code.  Then, for some reason,
> after you added the import time your server got the new version of the code
> (perhaps you're relying on an auto-reloader and it missed a change, for
> example, or you just forgot to restart the server yourself).
>
> import time itself is definitely not a requirement for arbitrary Twisted
> Web-based programs to return a response other than 404.
>
> Jean-Paul
>
>
Hi Jean-Paul,

I made many changes to the example in order to get it to work. So perhaps
it's a caching issue, but I can't find any caches. Here's what I'm
developing on:

- OSX 10.13.6
- I'm using Sublime text, no auto reloaders afaik
- python3 --version :  Python 3.7.0
- pip3 list:

Package        Version
-------------- -------
attrs          18.1.0
Automat        0.7.0
constantly     15.1.0
dlib           19.15.0
hyperlink      18.0.0
idna           2.7
incremental    17.5.0
numpy          1.15.0
pip            18.0
PyHamcrest     1.9.0
setuptools     39.2.0
six            1.11.0
Twisted        18.7.0
wheel          0.31.1
zope.interface 4.5.0

- running the server using ./asynchronous.py
- I don't have any .pyc files in the script directory, possibly because I
"chmod +x" the source file and included the #! at the top
- I added logging and while the main program (setup of Twisted reactor)
logged, the DelayedResource class did not
- I added parts of the example at
https://twistedmatrix.com/documents/current/web/howto/web-in-60/dynamic-content.html
- I changed "resource = DelayedResource()" to "resource = ClockPage()"
- I changed the render_GET handler to return the Clock page example output
- etc until I stopped getting a 404
- I restarted the server many many times

I removed and backed out every change until I got a 404, concluding it was
the "import time" line.
Any other ideas?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20180808/6319b2b5/attachment.html>

From drjasonharrison at gmail.com  Wed Aug  8 14:44:03 2018
From: drjasonharrison at gmail.com (Jason Harrison)
Date: Wed, 8 Aug 2018 13:44:03 -0700
Subject: [Twisted-web] Asynchronous responses example from documentation
 -- why import time??
In-Reply-To: <CAHVLaBHQPq6fqQ9efiYU_F1e8BCTHg_6FYrdmHQQOQJZ49UmjQ@mail.gmail.com>
References: <CAHVLaBHQPq6fqQ9efiYU_F1e8BCTHg_6FYrdmHQQOQJZ49UmjQ@mail.gmail.com>
Message-ID: <CAHVLaBF9AqxAcQ3fgiXv_XEujc3=WQAEm-OfLJt4T7XWqgEWUA@mail.gmail.com>

I may have found it, by adding the assignment "isLeaf = True" to the
DelayedResponse class it also appears to work.
However many of the examples in the documentation do not assign "isLeaf =
True".
Would this also explain the difference in behaviour?

-Jason

Cell: 604 644 8611
Email: drjasonharrison at gmail.com
LinkedIn: http://www.linkedin.com/in/drjasonharrison
Twitter: http://twitter.com/drjasonharrison

On Wed, Aug 8, 2018 at 1:19 PM, Jason Harrison <drjasonharrison at gmail.com>
wrote:

>
> On Wed, 8 Aug 2018 at 11:58 AM  Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>
> One possible explanation is that it has nothing to do with import time per
>> se.  Instead, *any* change to your source file would have fixed the
>> problem.  This could be because you had "stale" pyc files lying around
>> (cached bytecode the interpreter *thought* was up-to-date with your source
>> but was actually outdated).  It could also be that your server process was
>> left running and was still using your old code.  Then, for some reason,
>> after you added the import time your server got the new version of the
>> code
>> (perhaps you're relying on an auto-reloader and it missed a change, for
>> example, or you just forgot to restart the server yourself).
>>
>> import time itself is definitely not a requirement for arbitrary Twisted
>> Web-based programs to return a response other than 404.
>>
>> Jean-Paul
>>
>>
> Hi Jean-Paul,
>
> I made many changes to the example in order to get it to work. So perhaps
> it's a caching issue, but I can't find any caches. Here's what I'm
> developing on:
>
> - OSX 10.13.6
> - I'm using Sublime text, no auto reloaders afaik
> - python3 --version :  Python 3.7.0
> - pip3 list:
>
> Package        Version
> -------------- -------
> attrs          18.1.0
> Automat        0.7.0
> constantly     15.1.0
> dlib           19.15.0
> hyperlink      18.0.0
> idna           2.7
> incremental    17.5.0
> numpy          1.15.0
> pip            18.0
> PyHamcrest     1.9.0
> setuptools     39.2.0
> six            1.11.0
> Twisted        18.7.0
> wheel          0.31.1
> zope.interface 4.5.0
>
> - running the server using ./asynchronous.py
> - I don't have any .pyc files in the script directory, possibly because I
> "chmod +x" the source file and included the #! at the top
> - I added logging and while the main program (setup of Twisted reactor)
> logged, the DelayedResource class did not
> - I added parts of the example at https://twistedmatrix.com/
> documents/current/web/howto/web-in-60/dynamic-content.html
> - I changed "resource = DelayedResource()" to "resource = ClockPage()"
> - I changed the render_GET handler to return the Clock page example output
> - etc until I stopped getting a 404
> - I restarted the server many many times
>
> I removed and backed out every change until I got a 404, concluding it was
> the "import time" line.
> Any other ideas?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20180808/7c438c5d/attachment.html>

From exarkun at twistedmatrix.com  Thu Aug  9 07:31:35 2018
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 9 Aug 2018 09:31:35 -0400
Subject: [Twisted-web] Asynchronous responses example from documentation
 -- why import time??
In-Reply-To: <CAHVLaBF9AqxAcQ3fgiXv_XEujc3=WQAEm-OfLJt4T7XWqgEWUA@mail.gmail.com>
References: <CAHVLaBHQPq6fqQ9efiYU_F1e8BCTHg_6FYrdmHQQOQJZ49UmjQ@mail.gmail.com>
 <CAHVLaBF9AqxAcQ3fgiXv_XEujc3=WQAEm-OfLJt4T7XWqgEWUA@mail.gmail.com>
Message-ID: <CAEeXt4M1hUiZBg26C-J3dQecKv-WtesRMdrnGC8uHnr_9o7TdA@mail.gmail.com>

In the code you posted, DelayedResponse is the root resource.  The root
resource *always* has to provide a child resource.  If someone requests
/foo then the child is "foo".  If someone requests "/" then the child is "".

isLeaf = True is a shortcut that stops traversal and uses the current
resource as the requested resource.  Without this, DelayedResponse must
have a child or it can only produce a 404.

Maybe that explains it?  If there are examples in the documentation that
have root resources with no children and without isLeaf = True then perhaps
they are also broken and should be fixed.  If you see any, please point
them out.

Jean-Paul

On Wed, Aug 8, 2018 at 4:47 PM Jason Harrison <drjasonharrison at gmail.com>
wrote:

> I may have found it, by adding the assignment "isLeaf = True" to the
> DelayedResponse class it also appears to work.
> However many of the examples in the documentation do not assign "isLeaf =
> True".
> Would this also explain the difference in behaviour?
>
> -Jason
>
> Cell: 604 644 8611
> Email: drjasonharrison at gmail.com
> LinkedIn: http://www.linkedin.com/in/drjasonharrison
> Twitter: http://twitter.com/drjasonharrison
>
> On Wed, Aug 8, 2018 at 1:19 PM, Jason Harrison <drjasonharrison at gmail.com>
> wrote:
>
>>
>> On Wed, 8 Aug 2018 at 11:58 AM  Jean-Paul Calderone <
>>> exarkun at twistedmatrix.com> wrote:
>>
>> One possible explanation is that it has nothing to do with import time per
>>> se.  Instead, *any* change to your source file would have fixed the
>>> problem.  This could be because you had "stale" pyc files lying around
>>> (cached bytecode the interpreter *thought* was up-to-date with your
>>> source
>>> but was actually outdated).  It could also be that your server process
>>> was
>>> left running and was still using your old code.  Then, for some reason,
>>> after you added the import time your server got the new version of the
>>> code
>>> (perhaps you're relying on an auto-reloader and it missed a change, for
>>> example, or you just forgot to restart the server yourself).
>>>
>>> import time itself is definitely not a requirement for arbitrary Twisted
>>> Web-based programs to return a response other than 404.
>>>
>>> Jean-Paul
>>>
>>>
>> Hi Jean-Paul,
>>
>> I made many changes to the example in order to get it to work. So perhaps
>> it's a caching issue, but I can't find any caches. Here's what I'm
>> developing on:
>>
>> - OSX 10.13.6
>> - I'm using Sublime text, no auto reloaders afaik
>> - python3 --version :  Python 3.7.0
>> - pip3 list:
>>
>> Package        Version
>> -------------- -------
>> attrs          18.1.0
>> Automat        0.7.0
>> constantly     15.1.0
>> dlib           19.15.0
>> hyperlink      18.0.0
>> idna           2.7
>> incremental    17.5.0
>> numpy          1.15.0
>> pip            18.0
>> PyHamcrest     1.9.0
>> setuptools     39.2.0
>> six            1.11.0
>> Twisted        18.7.0
>> wheel          0.31.1
>> zope.interface 4.5.0
>>
>> - running the server using ./asynchronous.py
>> - I don't have any .pyc files in the script directory, possibly because I
>> "chmod +x" the source file and included the #! at the top
>> - I added logging and while the main program (setup of Twisted reactor)
>> logged, the DelayedResource class did not
>> - I added parts of the example at
>> https://twistedmatrix.com/documents/current/web/howto/web-in-60/dynamic-content.html
>> - I changed "resource = DelayedResource()" to "resource = ClockPage()"
>> - I changed the render_GET handler to return the Clock page example output
>> - etc until I stopped getting a 404
>> - I restarted the server many many times
>>
>> I removed and backed out every change until I got a 404, concluding it
>> was the "import time" line.
>> Any other ideas?
>>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20180809/8265efb3/attachment-0001.html>

From drjasonharrison at gmail.com  Thu Aug  9 11:32:24 2018
From: drjasonharrison at gmail.com (Jason Harrison)
Date: Thu, 9 Aug 2018 10:32:24 -0700
Subject: [Twisted-web] Twisted-web Digest, Vol 151, Issue 2
Message-ID: <CAHVLaBEOrTfccmdu_VDzUvM7-22JLBErvBYWay1XNt_GHp5p4Q@mail.gmail.com>

On Thu, 9 Aug 2018 at 09:31 am Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> In the code you posted, DelayedResponse is the root resource.  The root
> resource *always* has to provide a child resource.  If someone requests
> /foo then the child is "foo".  If someone requests "/" then the child is
> "".
>
> isLeaf = True is a shortcut that stops traversal and uses the current
> resource as the requested resource.  Without this, DelayedResponse must
> have a child or it can only produce a 404.
>
> Maybe that explains it?  If there are examples in the documentation that
> have root resources with no children and without isLeaf = True then perhaps
> they are also broken and should be fixed.  If you see any, please point
> them out.
>
>
Thank you for the explanation! Let's see if I understand your explanation
and the variation in the examples.

https://twistedmatrix.com/documents/current/web/howto/web-in-60/custom-codes.html
does not have isLeaf = True because it has:

root = Resource()
root.putChild(b"buy", PaymentRequired())
factory = Site(root)


https://twistedmatrix.com/documents/current/web/howto/web-in-60/dynamic-content.html
does have isLeaf = True because it does not have a .putChild()

The explanation about isLeaf could be improved by:

Setting isLeaf to True indicates that ClockPage resources will never have
any children.

Without this, the ClockPage resources must have a child or it can only
produce a 404.


https://twistedmatrix.com/documents/current/web/howto/web-in-60/dynamic-dispatch.html
does not have isLeaf = True because it defines getChild for the root class
Calendar

So does not have isLeaf = True because it was written as an .rpy script??
http://twistedmatrix.com/documents/current/web/howto/web-in-60/asynchronous.html

Thank you again,
-Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20180809/f37c62f5/attachment.html>

From exarkun at twistedmatrix.com  Thu Aug  9 11:55:48 2018
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 9 Aug 2018 13:55:48 -0400
Subject: [Twisted-web] Twisted-web Digest, Vol 151, Issue 2
In-Reply-To: <CAHVLaBEOrTfccmdu_VDzUvM7-22JLBErvBYWay1XNt_GHp5p4Q@mail.gmail.com>
References: <CAHVLaBEOrTfccmdu_VDzUvM7-22JLBErvBYWay1XNt_GHp5p4Q@mail.gmail.com>
Message-ID: <CAEeXt4Ph30Wmq1Yaa95X3hexpWBnq8+hzyAtW8TqP3zXF-BsTQ@mail.gmail.com>

On Thu, Aug 9, 2018 at 1:32 PM Jason Harrison <drjasonharrison at gmail.com>
wrote:

> On Thu, 9 Aug 2018 at 09:31 am Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>> In the code you posted, DelayedResponse is the root resource.  The root
>> resource *always* has to provide a child resource.  If someone requests
>> /foo then the child is "foo".  If someone requests "/" then the child is
>> "".
>>
>> isLeaf = True is a shortcut that stops traversal and uses the current
>> resource as the requested resource.  Without this, DelayedResponse must
>> have a child or it can only produce a 404.
>>
>> Maybe that explains it?  If there are examples in the documentation that
>> have root resources with no children and without isLeaf = True then
>> perhaps
>> they are also broken and should be fixed.  If you see any, please point
>> them out.
>>
>>
> Thank you for the explanation! Let's see if I understand your explanation
> and the variation in the examples.
>
>
> https://twistedmatrix.com/documents/current/web/howto/web-in-60/custom-codes.html
> does not have isLeaf = True because it has:
>
> root = Resource()
> root.putChild(b"buy", PaymentRequired())
> factory = Site(root)
>
>
>
> https://twistedmatrix.com/documents/current/web/howto/web-in-60/dynamic-content.html
> does have isLeaf = True because it does not have a .putChild()
>
> The explanation about isLeaf could be improved by:
>
> Setting isLeaf to True indicates that ClockPage resources will never have
> any children.
>
> Without this, the ClockPage resources must have a child or it can only
> produce a 404.
>
>
>
> https://twistedmatrix.com/documents/current/web/howto/web-in-60/dynamic-dispatch.html
> does not have isLeaf = True because it defines getChild for the root class
> Calendar
>
> So does not have isLeaf = True because it was written as an .rpy script??
>
> http://twistedmatrix.com/documents/current/web/howto/web-in-60/asynchronous.html
>
>
You got all these explanations right.  To expand on the rpy case, the root
resource is a static.File("/directory/containing/script/") and the rpy's
resource is accessed as a child of that (which child depends on what the
rpy script is named).

I agree the explanation about isLeaf in that document could be improved.
Perhaps there should be a new web in 60 seconds dedicated to isLeaf instead
of just having a drive-by explanation in another example.


> Thank you again,
> -Jason
>
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20180809/bd074480/attachment.html>

