From dreid at dreid.org  Thu Mar  1 09:10:51 2007
From: dreid at dreid.org (David Reid)
Date: Thu Mar  1 09:11:09 2007
Subject: [Twisted-web] Setting server.Site.protocol stops the site factory
	resource class from renderin
In-Reply-To: <BAY118-F37A99A77D6EF313375739D2800@phx.gbl>
References: <BAY118-F37A99A77D6EF313375739D2800@phx.gbl>
Message-ID: <1A79ADE2-9000-43F1-8A0F-F70AC36C303D@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Feb 28, 2007, at 7:52 PM, Steve doh wrote:

> I have the code below that works fine. If I uncomment the 3rd to  
> last line so that the site.protocol uses the ServerProtocol class,  
> then the render_GET() method does not get called and the browser  
> waits for a response. I understand why this is happening but don't  
> know how to fix it. I need to override the connectionMade() method  
> for the site factory inorder to verify the connection. Can someone  
> explain how I override connectionMade() correctly? Any help  
> appreciated. Cheers Steve

twisted.internet.protocol.Protocol doesn't know anything about HTTP,  
and it doesn't know anything about the resource hierarchy and HTTP  
methods.  server.Site.protocol defaults to  
twisted.web.http.HTTPChannel, which does know what to do when faced  
with HTTP, so subclass that instead.  And don't forget to call the  
superclass's connectionMade or timeouts won't work properly.

- -David
http://dreid.org

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz




-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFF5u0CrsrO6aeULcgRAsQtAJwLjqQuv4AkoapqWKO/0ap/N/YGKgCfZz1o
KvS9cz9xZdGaxUW96buX+b8=
=Zlqp
-----END PGP SIGNATURE-----

From tfif at hotmail.com  Thu Mar  1 16:08:52 2007
From: tfif at hotmail.com (Steve doh)
Date: Thu Mar  1 16:08:54 2007
Subject: [Twisted-web] Setting server.Site.protocol stops the site
	factoryresource cl
In-Reply-To: <1A79ADE2-9000-43F1-8A0F-F70AC36C303D@dreid.org>
Message-ID: <BAY118-F13F809C4800667DE6658C7D2800@phx.gbl>

Thanks David - it's now working!
One minor error I get when I add a super call as:

class ServerProtocol(http.HTTPChannel):
    def connectionMade(self):
        print "[connectionMade] entering function....."
        super(ServerProtocol, self).connectionMade()

this generates:

  File "test.py", line 20, in connectionMade
    super(ServerProtocol, self).connectionMade()
exceptions.TypeError: super() argument 1 must be type, not classobj

Any ideas?
Cheers
Steve

>From: David Reid <dreid@dreid.org>
>Reply-To: Twisted Web World <twisted-web@twistedmatrix.com>
>To: Twisted Web World <twisted-web@twistedmatrix.com>
>Subject: Re: [Twisted-web] Setting server.Site.protocol stops the site 
>factoryresource class from renderin
>Date: Thu, 1 Mar 2007 07:10:51 -0800
>
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>
>On Feb 28, 2007, at 7:52 PM, Steve doh wrote:
>
>>I have the code below that works fine. If I uncomment the 3rd to  last 
>>line so that the site.protocol uses the ServerProtocol class,  then the 
>>render_GET() method does not get called and the browser  waits for a 
>>response. I understand why this is happening but don't  know how to fix 
>>it. I need to override the connectionMade() method  for the site factory 
>>inorder to verify the connection. Can someone  explain how I override 
>>connectionMade() correctly? Any help  appreciated. Cheers Steve
>
>twisted.internet.protocol.Protocol doesn't know anything about HTTP,  and 
>it doesn't know anything about the resource hierarchy and HTTP  methods.  
>server.Site.protocol defaults to  twisted.web.http.HTTPChannel, which does 
>know what to do when faced  with HTTP, so subclass that instead.  And don't 
>forget to call the  superclass's connectionMade or timeouts won't work 
>properly.
>
>- -David
>http://dreid.org

_________________________________________________________________
Discover fun and games at  @  http://xtramsn.co.nz/kids


From dreid at dreid.org  Thu Mar  1 17:12:51 2007
From: dreid at dreid.org (David Reid)
Date: Thu Mar  1 17:13:07 2007
Subject: [Twisted-web] Setting server.Site.protocol stops the site
	factoryresource cl
In-Reply-To: <BAY118-F13F809C4800667DE6658C7D2800@phx.gbl>
References: <BAY118-F13F809C4800667DE6658C7D2800@phx.gbl>
Message-ID: <6093D555-3D4A-4659-9E17-37355CC59D05@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Mar 1, 2007, at 2:08 PM, Steve doh wrote:

> argument 1 must be type, not classobj
HTTPChannel is an oldstyle class.

Use http.HTTPChannel.connectionMade(self)

- -David
http://dreid.org

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz




-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFF5133rsrO6aeULcgRAtZcAJ4l6yYPo3a1e8CuKtqZYhDAzSP/lQCfVavE
7+/9dAitgQlkYyMhxYNeXIM=
=fka/
-----END PGP SIGNATURE-----

From tfif at hotmail.com  Sun Mar  4 19:27:25 2007
From: tfif at hotmail.com (Steve doh)
Date: Sun Mar  4 19:27:28 2007
Subject: [Twisted-web] Default processing of a page in http.Request.process()
In-Reply-To: <6093D555-3D4A-4659-9E17-37355CC59D05@dreid.org>
Message-ID: <BAY118-F21AAA8824822484EA26537D2840@phx.gbl>

Hi,
In the code below I am validating page requests and then want to cause a 
simple send of the known page to the browser. What class and method should I 
use?

Thanks Steve
----------------------------------------------------------------------------
import os, sys
from twisted.web import http, static, server, resource
from twisted.internet.protocol import Factory
from twisted.internet import reactor

class RequestHandler(http.Request):
    pageHandlers = {
        'index.html': 'def',
        'main.html': 'def',
        #'/posthandler': handlePost,
    }
    def process(self):
        filename = os.path.basename(self.path)
        print "[process] request = " + self.path

        if self.pageHandlers.has_key(filename):
            handler = self.pageHandlers[filename]
            if handler == 'def':
                ### What do I call here to simply get the page sent to the 
browser??? ####
            else:
                handler(self, filename)
        else:
            self.setHeader('Content-Type', 'text/html')
            self.setResponseCode(http.NOT_FOUND)
            self.write("<h1>Not Found</h1>Sorry, no such page.")
            self.finish()

class ServerProtocol(http.HTTPChannel):
    requestFactory = RequestHandler

os.chdir('D:\\html')

factory = http.HTTPFactory()
factory.protocol = ServerProtocol
reactor.listenTCP(80, factory)
reactor.run()

_________________________________________________________________
Find the coolest online games @ http://xtramsn.co.nz/gaming


From dreid at dreid.org  Mon Mar  5 13:15:03 2007
From: dreid at dreid.org (David Reid)
Date: Mon Mar  5 13:16:00 2007
Subject: [Twisted-web] Default processing of a page in
	http.Request.process()
In-Reply-To: <BAY118-F21AAA8824822484EA26537D2840@phx.gbl>
References: <BAY118-F21AAA8824822484EA26537D2840@phx.gbl>
Message-ID: <8CFCD533-EF2F-405B-93FE-F3596792B2E7@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

You should rarely have to subclass http.Request, in this case you  
really want to construct a root resource that validates the request  
in getChild[1].  After the request is validated you can return a  
Resource representing the page you want to serve.  If these are  
static files static.File can be used to wrap them.  Otherwise you'll  
probably have to construct a custom resource that solves your problem.

See the twisted.web howto for more details.[2]

[1] http://twistedmatrix.com/documents/current/api/ 
twisted.web.resource.Resource.html#getChild
[2] http://twistedmatrix.com/projects/web/documentation/howto/using- 
twistedweb.html

- -David
http://dreid.org

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz




-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFF7GxhrsrO6aeULcgRAl37AJ468ccWegVbR9I4YoVptO/1ZZ3e7wCfU+1l
XLFnh9P1juPRCdL5UN70Ry8=
=gJ2q
-----END PGP SIGNATURE-----

From rampeters at gmail.com  Mon Mar 12 08:06:58 2007
From: rampeters at gmail.com (Ram Peters)
Date: Mon Mar 12 08:07:02 2007
Subject: [Twisted-web] Using Twisted with django
Message-ID: <81b45360703120706u15dd8094x455c5d53e891d5ca@mail.gmail.com>

I want to handle reporting part of my app with Twisted and rest will
be handled with Django.  I have Django setup on mod_python.  There is
some mention of "I want a container for my WSGI application" in
TwistedMatrix.  Does it mean twisted just handle the request and
forward to some other framework?  Does TwistedMatrix support
mod_python? Can I use twisted with django models and django templating
system?

Thank you.
John

From exarkun at divmod.com  Mon Mar 12 08:38:03 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon Mar 12 08:38:05 2007
Subject: [Twisted-web] Using Twisted with django
In-Reply-To: <81b45360703120706u15dd8094x455c5d53e891d5ca@mail.gmail.com>
Message-ID: <20070312143803.18920.489429501.divmod.quotient.1322@ohm>

On Mon, 12 Mar 2007 10:06:58 -0400, Ram Peters <rampeters@gmail.com> wrote:
>I want to handle reporting part of my app with Twisted and rest will
>be handled with Django.  I have Django setup on mod_python.  There is
>some mention of "I want a container for my WSGI application" in
>TwistedMatrix.  Does it mean twisted just handle the request and
>forward to some other framework?  Does TwistedMatrix support
>mod_python? Can I use twisted with django models and django templating
>system?
>

There is some experimental support for using Twisted as a WSGI container.
Zope is using it, with some success as far as I am aware.  If you use WSGI,
however, you lose pretty much all the Twisted request processing features.

It is pretty unlikely that Twisted will work inside mod_python, and there
wouldn't be any reason to use it there anyway, since you already have an
HTTP server.

I haven't used Django so I can't say whether or not it will work well in a
Twisted server.  If it performs blocking operations (for example, to talk
to a database), then it probably won't work very well.

Jean-Paul


From rampeters at gmail.com  Mon Mar 12 14:36:10 2007
From: rampeters at gmail.com (Ram Peters)
Date: Mon Mar 12 14:36:16 2007
Subject: [Twisted-web] Using Twisted with django
In-Reply-To: <20070312143803.18920.489429501.divmod.quotient.1322@ohm>
References: <81b45360703120706u15dd8094x455c5d53e891d5ca@mail.gmail.com>
	<20070312143803.18920.489429501.divmod.quotient.1322@ohm>
Message-ID: <81b45360703121336j6c6e2ddbx12baa67618f6bc0d@mail.gmail.com>

Some where in the documentation, I read you can do blocking stuff like
access to database using twisted.enterprise.adbapi.  I don't really
see, why, anyone want to use Twisted for other than writing their on
communication protocol like BitTorrent.

John

On 12/03/07, Jean-Paul Calderone <exarkun@divmod.com> wrote:
> On Mon, 12 Mar 2007 10:06:58 -0400, Ram Peters <rampeters@gmail.com> wrote:
> >I want to handle reporting part of my app with Twisted and rest will
> >be handled with Django.  I have Django setup on mod_python.  There is
> >some mention of "I want a container for my WSGI application" in
> >TwistedMatrix.  Does it mean twisted just handle the request and
> >forward to some other framework?  Does TwistedMatrix support
> >mod_python? Can I use twisted with django models and django templating
> >system?
> >
>
> There is some experimental support for using Twisted as a WSGI container.
> Zope is using it, with some success as far as I am aware.  If you use WSGI,
> however, you lose pretty much all the Twisted request processing features.
>
> It is pretty unlikely that Twisted will work inside mod_python, and there
> wouldn't be any reason to use it there anyway, since you already have an
> HTTP server.
>
> I haven't used Django so I can't say whether or not it will work well in a
> Twisted server.  If it performs blocking operations (for example, to talk
> to a database), then it probably won't work very well.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>

From exarkun at divmod.com  Mon Mar 12 15:17:33 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon Mar 12 15:17:35 2007
Subject: [Twisted-web] Using Twisted with django
In-Reply-To: <81b45360703121336j6c6e2ddbx12baa67618f6bc0d@mail.gmail.com>
Message-ID: <20070312211733.18920.716960688.divmod.quotient.1479@ohm>

On Mon, 12 Mar 2007 16:36:10 -0400, Ram Peters <rampeters@gmail.com> wrote:
>Some where in the documentation, I read you can do blocking stuff like
>access to database using twisted.enterprise.adbapi.

Yes.  But does Django use this? :)

>I don't really
>see, why, anyone want to use Twisted for other than writing their on
>communication protocol like BitTorrent.

Some people find it easier than writing threaded code.  Other people need
better performance than threaded solutions can provide.  Other people want
to use some protocol which has a Twisted implementation.

Jean-Paul

From duncan.mcgreggor at gmail.com  Mon Mar 12 15:39:31 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon Mar 12 15:39:38 2007
Subject: [Twisted-web] Vote: The Engine of Your Internet
Message-ID: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>

Vote now!

In the spirit of all contests that are thinly disguised high school
popularity contests, there is a poll up on jyte.com, and we need your
help!

 http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet

Because, if we loose... well... the Jocks will get to claim the
sandpit for their debauched parties, and where will we host our
late-night chess and math club parties?

d

From duncan.mcgreggor at gmail.com  Mon Mar 12 17:20:40 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon Mar 12 17:20:45 2007
Subject: [Twisted-web] Re: Vote: The Engine of Your Internet
In-Reply-To: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
References: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
Message-ID: <4327dfbd0703121620q1a0661fjda14c6a94846f00@mail.gmail.com>

On 3/12/07, Duncan McGreggor <duncan.mcgreggor@gmail.com> wrote:
> Vote now!
>
> In the spirit of all contests that are thinly disguised high school
> popularity contests, there is a poll up on jyte.com, and we need your
> help!
>
>  http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet
>
> Because, if we loose... well... the Jocks will get to claim the
> sandpit for their debauched parties, and where will we host our
> late-night chess and math club parties?

The sandpit is almost ours! We've gone from 10 against 31 to 21
against 31. Still down by ten,, but climbing steadily...

d

From rampeters at gmail.com  Mon Mar 12 18:33:12 2007
From: rampeters at gmail.com (Ram Peters)
Date: Mon Mar 12 18:33:20 2007
Subject: [Twisted-web] Using Twisted with django
In-Reply-To: <20070312211733.18920.716960688.divmod.quotient.1479@ohm>
References: <81b45360703121336j6c6e2ddbx12baa67618f6bc0d@mail.gmail.com>
	<20070312211733.18920.716960688.divmod.quotient.1479@ohm>
Message-ID: <81b45360703121733g64e903f3ma7040af7ec6ae8a9@mail.gmail.com>

I think I am understanding it now, Twisted handles request for you.
So you don't need Apache + Mod_Python.  You just have to put in a loop
and tell Twisted to listen to the port.

For example, I just tell it to listen to some port.

def main():
        factory = protocol.ServerFactory()
        factory.protocol = Echo
        reactor.listenTCP(5555,factory)
        reactor.run()
if _name_=='_main_':
        main()

On 12/03/07, Jean-Paul Calderone <exarkun@divmod.com> wrote:
> On Mon, 12 Mar 2007 16:36:10 -0400, Ram Peters <rampeters@gmail.com> wrote:
> >Some where in the documentation, I read you can do blocking stuff like
> >access to database using twisted.enterprise.adbapi.
>
> Yes.  But does Django use this? :)
>
> >I don't really
> >see, why, anyone want to use Twisted for other than writing their on
> >communication protocol like BitTorrent.
>
> Some people find it easier than writing threaded code.  Other people need
> better performance than threaded solutions can provide.  Other people want
> to use some protocol which has a Twisted implementation.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>

From flashbuster at gmail.com  Tue Mar 13 02:11:45 2007
From: flashbuster at gmail.com (Sebastian Schulze)
Date: Tue Mar 13 02:11:50 2007
Subject: [Twisted-web] Re: Vote: The Engine of Your Internet
In-Reply-To: <4327dfbd0703121620q1a0661fjda14c6a94846f00@mail.gmail.com>
References: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
	<4327dfbd0703121620q1a0661fjda14c6a94846f00@mail.gmail.com>
Message-ID: <c2959a420703130111t5cf8a366h9eb5c25c62a1e199@mail.gmail.com>

The victory is ours!

2007/3/13, Duncan McGreggor <duncan.mcgreggor@gmail.com>:
>
> On 3/12/07, Duncan McGreggor <duncan.mcgreggor@gmail.com> wrote:
> > Vote now!
> >
> > In the spirit of all contests that are thinly disguised high school
> > popularity contests, there is a poll up on jyte.com, and we need your
> > help!
> >
> >  http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet
> >
> > Because, if we loose... well... the Jocks will get to claim the
> > sandpit for their debauched parties, and where will we host our
> > late-night chess and math club parties?
>
> The sandpit is almost ours! We've gone from 10 against 31 to 21
> against 31. Still down by ten,, but climbing steadily...
>
> d
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070313/a2d27a36/attachment.htm
From duncan.mcgreggor at gmail.com  Tue Mar 13 11:50:25 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Tue Mar 13 11:50:30 2007
Subject: [Twisted-web] Re: Vote: The Engine of Your Internet
In-Reply-To: <c2959a420703130111t5cf8a366h9eb5c25c62a1e199@mail.gmail.com>
References: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
	<4327dfbd0703121620q1a0661fjda14c6a94846f00@mail.gmail.com>
	<c2959a420703130111t5cf8a366h9eb5c25c62a1e199@mail.gmail.com>
Message-ID: <4327dfbd0703131050y5324fb3dk2a9b33f4b47d8571@mail.gmail.com>

On 3/13/07, Sebastian Schulze <flashbuster@gmail.com> wrote:
>
> > http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet
>
> The victory is ours!
>

Sweet -- we are almost 10 ahead ;-)

From david at remahl.se  Tue Mar 13 12:06:03 2007
From: david at remahl.se (David Remahl)
Date: Tue Mar 13 12:09:58 2007
Subject: [Twisted-web] Re: Vote: The Engine of Your Internet
In-Reply-To: <4327dfbd0703131050y5324fb3dk2a9b33f4b47d8571@mail.gmail.com>
References: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
	<4327dfbd0703121620q1a0661fjda14c6a94846f00@mail.gmail.com>
	<c2959a420703130111t5cf8a366h9eb5c25c62a1e199@mail.gmail.com>
	<4327dfbd0703131050y5324fb3dk2a9b33f4b47d8571@mail.gmail.com>
Message-ID: <647E0B26-5FEE-4A40-947A-4ED97C0E5C4E@remahl.se>

On Mar 13, 2007, at 6:50 PM, Duncan McGreggor wrote:

> On 3/13/07, Sebastian Schulze <flashbuster@gmail.com> wrote:
>>
>> > http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet
>>
>> The victory is ours!
>>
> Sweet -- we are almost 10 ahead ;-)

We can't rule out the possibility that there's a slight sample bias at  
work. ;-)

/ David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070313/82f98830/attachment.htm
From duncan.mcgreggor at gmail.com  Tue Mar 13 13:13:07 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Tue Mar 13 13:13:10 2007
Subject: [Twisted-web] Re: Vote: The Engine of Your Internet
In-Reply-To: <647E0B26-5FEE-4A40-947A-4ED97C0E5C4E@remahl.se>
References: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
	<4327dfbd0703121620q1a0661fjda14c6a94846f00@mail.gmail.com>
	<c2959a420703130111t5cf8a366h9eb5c25c62a1e199@mail.gmail.com>
	<4327dfbd0703131050y5324fb3dk2a9b33f4b47d8571@mail.gmail.com>
	<647E0B26-5FEE-4A40-947A-4ED97C0E5C4E@remahl.se>
Message-ID: <4327dfbd0703131213g60cbd25ehc50bb4b5f70c42c0@mail.gmail.com>

On 3/13/07, David Remahl <david@remahl.se> wrote:
>
> > > > http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet
> > >
> > > The victory is ours!
> > >
> > Sweet -- we are almost 10 ahead ;-)
>
> We can't rule out the possibility that there's a slight sample bias at work.
> ;-)
>
> / David

We'll keep em' distracted with cheerleaders and beer...

d

From glyph at divmod.com  Wed Mar 14 21:19:30 2007
From: glyph at divmod.com (glyph@divmod.com)
Date: Wed Mar 14 21:19:35 2007
Subject: [Twisted-web] Re: [Twisted-Python] What is the most recent
	compatible combination of Twisted and Twisted.web2?
In-Reply-To: <601051.53014.qm@web32508.mail.mud.yahoo.com>
References: <E1HRVSa-0008Fn-02@pyramid.twistedmatrix.com>
	<601051.53014.qm@web32508.mail.mud.yahoo.com>
Message-ID: <20070315031930.7769.63739133.divmod.xquotient.764@joule.divmod.com>

On 02:14 am, jonathansamuel@yahoo.com wrote:
>My Redhat 7.3/Python 2.5 box had TwistedWeb2-0.2.0 and
>Twisted 2.5 . However, they are not compatible.
>
>What is the most recent combination of Twisted and
>Twisted.Web2 that I could use together?

Since no "blessed" production-ready release of web2 is yet available, 
you are probably better off checking it out from Twisted trunk, or 
checking out the entire Twisted trunk together.

If you're interested in rectifying this situation, the path to a web2 
release is pretty well plotted in the Twisted tracker already, and you 
could submit patches to the tickets in there.

Start here:

http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&milestone=Web2 
-Gold-Master

Also, since this question is more appropriate to the twisted-web list I 
am cross-posting the response there.  Please follow up without cross- 
posting to twisted-python.

Good luck!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070315/b3eb4ed2/attachment.htm
From dakoner at gmail.com  Sun Mar 18 20:08:58 2007
From: dakoner at gmail.com (David Konerding)
Date: Sun Mar 18 20:09:01 2007
Subject: [Twisted-web] Using web2 to run a Cherrpy site
Message-ID: <4f0f0cb0703181908j536ed09ck7caf667fdaca30f8@mail.gmail.com>

Hi,

I am using web2 to run a cherrypy server at the root of the site using WSGI.

I've got a nearly working set up, the only problem is that when a request
comes in for the root of the site, it gets redirected
back to itself:
% curl http://localhost:8080
This resource resides temporarily at <a href='http://localhost:8080/'>
http://localhost:8080/</a>

Intriguingly, if I request locations below the root, things work more OK:
% curl http://localhost:8080/test/index

then it works OK, even though I am registering the cherrypy at the root of
the site.

I've experimented, and if I register the cherrypy site in a subdir,
everything works normally as expected!

Here's the code that puts it at the root of the site.  I've tested this code
with a basic WSGI app,
and it works OK.  Only cherrypy seems to have this problem.  One clue is
that the logger shows
that the URL being requested is '//' instead of '/':

2007-03-18 19:07:02-0700 [HTTPChannel,6,127.0.0.1] 127.0.0.1 - -
[18/Mar/2007:19:07:02] "GET // HTTP/1.1" 302 97 "" "curl/7.15.1
(i686-suse-linux) libcurl/7.15.1 OpenSSL/0.9.8a zlib/1.2.3 libidn/0.6.0"

Here's the nearly working test example:


from twisted.application import service, strports
from twisted.web2 import server, channel
from twisted.web2 import log
from twisted.web2 import wsgi
from twisted.web2.wsgi import WSGIResource
from cherrypy._cpwsgi import wsgiApp
import cherrypy

## Basic cherrypy index object that dumps the WSGI environment
class Root(object):
    @cherrypy.expose
    def index(self):
        s = []
        for key in cherrypy.request.wsgi_environ:
            s.append("%s=%s<br/>" % (key, cherrypy.request.wsgi_environ
[key]))

        return "".join(s)

## Run this site using "twistd -noy"
if __name__ == '__builtin__':

    ## Create an instance of the root object and mount it at /
    r = Root()
    cherrypy.tree.mount(r, '/')
    wsgi = wsgi.WSGIResource(wsgiApp)

    ## Set up the cherrypy environment
    cherrypy.config.update({
        'server.environment':'production',
        'server.socketHost':'127.0.0.1',
        })

    ## Start the cherrypy server; don't actually run an HTTP server, though
    cherrypy.server.start(initOnly=True, serverClass=None)

    ## Setup default common access logging
    res = log.LogWrapperResource(wsgi)
    log.DefaultCommonAccessLoggingObserver().start()

    # Create twisted web2 site
    site = server.Site(res)
    application = service.Application("demo")

    ## Launch the HTTP site at port 8080
    s = strports.service('tcp:8080', channel.HTTPFactory(site))
    s.setServiceParent(application)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070318/d9a9cd4f/attachment.htm
From dreid at dreid.org  Tue Mar 20 09:24:03 2007
From: dreid at dreid.org (David Reid)
Date: Tue Mar 20 09:24:20 2007
Subject: [Twisted-web] Using web2 to run a Cherrpy site
In-Reply-To: <4f0f0cb0703181908j536ed09ck7caf667fdaca30f8@mail.gmail.com>
References: <4f0f0cb0703181908j536ed09ck7caf667fdaca30f8@mail.gmail.com>
Message-ID: <033D1AC8-A6A3-41A7-B420-C311F2CD15F0@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi David,

On Mar 18, 2007, at 7:08 PM, David Konerding wrote:

> Hi,
>
> I am using web2 to run a cherrypy server at the root of the site  
> using WSGI.

Which version of cherrypy are you using?  I did an easy_install  
cherrypy and got 3.0.1 but your code didn't work on it.  wsgiApp is  
somewhere else now or something.

> I've got a nearly working set up, the only problem is that when a  
> request comes in for the root of the site, it gets redirected
> back to itself:
> % curl http://localhost:8080
> This resource resides temporarily at <a href='http://localhost: 
> 8080/'> http://localhost:8080/</a>
>
There are only 2 places we redirect like this, if we're a subclass of  
resource.Resource with addSlash=True and the url didn't end in a /,  
and if we're a static.File attached to a directory and the url didn't  
end in a /.

But WSGIResource does not do either of those things.  Which leads me  
to believe that perhaps cherrypy is causing the redirect?  I don't  
know, let me know what cherrypy version you're using and I'll try to  
play with it later.

- -David
http://dreid.org

"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz




-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFF//ybrsrO6aeULcgRAkQIAJwJqrAqHskSqeDtIMNy1hHS5Zvy7QCdFsZc
ZHDEml2w34fkqn29IDGcGW4=
=EpzH
-----END PGP SIGNATURE-----

From dakoner at gmail.com  Tue Mar 20 09:40:08 2007
From: dakoner at gmail.com (David Konerding)
Date: Tue Mar 20 09:40:14 2007
Subject: [Twisted-web] Using web2 to run a Cherrpy site
In-Reply-To: <033D1AC8-A6A3-41A7-B420-C311F2CD15F0@dreid.org>
References: <4f0f0cb0703181908j536ed09ck7caf667fdaca30f8@mail.gmail.com>
	<033D1AC8-A6A3-41A7-B420-C311F2CD15F0@dreid.org>
Message-ID: <4f0f0cb0703200840j19e274f6y8df6fb8707a2cb95@mail.gmail.com>

On 3/20/07, David Reid <dreid@dreid.org> wrote:
>
>
> Which version of cherrypy are you using?  I did an easy_install
> cherrypy and got 3.0.1 but your code didn't work on it.  wsgiApp is
> somewhere else now or something.


I'm using CherryPy 2.2 which I got with TurboGears tgsetup.py.
I can try CherryPy 3.0.1.


> >
> There are only 2 places we redirect like this, if we're a subclass of
> resource.Resource with addSlash=True and the url didn't end in a /,
> and if we're a static.File attached to a directory and the url didn't
> end in a /.



But WSGIResource does not do either of those things.  Which leads me
> to believe that perhaps cherrypy is causing the redirect?  I don't
> know, let me know what cherrypy version you're using and I'll try to
> play with it later.


OK, and I will try to adapt my code for CherryPy 3.0.1 as well.  If
the problem goes away with newer code, then I'm fine with it.

It's almost certainly cherrypy causing the redirect:
using the WSGI app from the twisted web2 demo, I don't see the same kind of
problem.

I still think this is a good clue:
2007-03-20 08:39:48-0700 [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
[20/Mar/2007:08:39:48] "GET // HTTP/1.1" 302 97 "" "curl/7.15.1
(i686-suse-linux) libcurl/7.15.1 OpenSSL/0.9.8a zlib/1.2.3 libidn/0.6.0"
2007-03-20 08:39:48-0700 [-] 127.0.0.1 - - [20/Mar/2007:08:39:48 -0700] "GET
/ HTTP/1.1" 302 97 "-" "curl/7.15.1 (i686-suse-linux) libcurl/7.15.1
OpenSSL/0.9.8a zlib/1.2.3 libidn/0.6.0"

Note the 'GET //': I can't tell if that's the logging line coming from
Twisted or from CherryPy.

Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070320/8e908199/attachment.htm
From dakoner at gmail.com  Tue Mar 20 09:55:59 2007
From: dakoner at gmail.com (David Konerding)
Date: Tue Mar 20 09:56:11 2007
Subject: [Twisted-web] Using web2 to run a Cherrpy site
In-Reply-To: <033D1AC8-A6A3-41A7-B420-C311F2CD15F0@dreid.org>
References: <4f0f0cb0703181908j536ed09ck7caf667fdaca30f8@mail.gmail.com>
	<033D1AC8-A6A3-41A7-B420-C311F2CD15F0@dreid.org>
Message-ID: <4f0f0cb0703200855w475261dbv99239a5626494cc9@mail.gmail.com>

>
>
> Which version of cherrypy are you using?  I did an easy_install
> cherrypy and got 3.0.1 but your code didn't work on it.  wsgiApp is
> somewhere else now or something.



OK, I've updated my test example to work with CherryPy 3.0.  This works a
bit better,
in fact, when I visit the root of the site I get my cherrypy application!
Since
I'm not tied to CherryPy 2.2 (unless TurboGears requires it) this 'fixes'
most of my problem.
I'm still having a problem if I access some URLs under the root, but I have
yet to determine if it's going
to be a problem.

Here's a CherryPy 3.0.1 application that works with Twisted web2 using the
WSGI app support.

from twisted.internet import reactor
from twisted.application import service, strports
from twisted.web2 import server, channel
from twisted.web2 import log
from twisted.web2 import wsgi
from twisted.web2.wsgi import WSGIResource
import cherrypy

## Basic cherrypy index object that dumps the WSGI environment
class Root(object):
    @cherrypy.expose
    def index(self):
        s = []
        for key in cherrypy.request.wsgi_environ:
            s.append("%s=%s<br/>" % (key, cherrypy.request.wsgi_environ
[key]))

        return "".join(s)

## Create an instance of the root application and mount it at /
r = Root()

## Convert the Root application to a hostable WSGI application
cpwsgiapp = cherrypy.Application(Root(), '/')

## Convert the CherryPy WSGI app to a Twisted WSGI resource
wsgi = wsgi.WSGIResource(cpwsgiapp)

## Set up the cherrypy environment
cherrypy.config.update({
    'server.environment':'production',
    })

## Start the cherrypy engine without starting a blocking server
cherrypy.engine.start(blocking=False)

## Setup default common access logging
res = log.LogWrapperResource(wsgi)
log.DefaultCommonAccessLoggingObserver().start()

# Create twisted web2 site
site = server.Site(res)

## Launch the HTTP site at port 8080

## code path invoked by twistd
if __name__ == '__builtin__':
    application = service.Application("demo")
    s = strports.service('tcp:8080', channel.HTTPFactory(site))
    s.setServiceParent(application)

## code path when run directly
if __name__ == '__main__':
    from twisted.python import log as pythonlog
    import sys
    pythonlog.startLogging(sys.stdout)
    reactor.listenTCP(8080, channel.HTTPFactory(site))
    reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20070320/1043f724/attachment.htm
From p.mayers at imperial.ac.uk  Tue Mar 20 18:09:26 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue Mar 20 18:09:36 2007
Subject: [Twisted-web] page.Element render directives don't support arguments
Message-ID: <460077B6.8000800@imperial.ac.uk>

So, on a rend.Page you can do:

T.div[
   T.directive('field textbox dbcolumn1'),
   T.directive('field textarea dbcolumn2'),
]

def render_field(self, what):
    kind, dbcol = what.split(' ')
    return widgets[kind](value=self.dbrow[dbcol])

...however page.Element's "rendered" method doesn't see the spaces in 
the T.directive and instead looks for a render method called:

"field textbox dbcolumn1"

...which is not useful.

Intentional or just missed?

From mithrandi-twisted-web at mithrandi.za.net  Tue Mar 20 18:47:36 2007
From: mithrandi-twisted-web at mithrandi.za.net (Tristan Seligmann)
Date: Tue Mar 20 18:47:44 2007
Subject: [Twisted-web] Divmod Nevow 0.9.18
Message-ID: <20070321004736.GI29606@mithrandi.za.net>

Hi all,

I'm pleased to announce the Divmod Nevow 0.9.18 release (tagged about a
month ago), available here:

<http://divmod.org/trac/attachment/wiki/SoftwareReleases/Nevow-0.9.18.tar.gz?format=raw>

I'm including the changelog for 0.9.18, and all previous releases since
the last announced release. Brace yourself for impending verbosity, as
0.9.0 was 18 versions and 9 months ago!

0.9.18 (2007-02-23):
  - Athena 'connection lost' notification now styleable via the
    'nevow-connection-lost' CSS class.
  - The 'runjstests' script has been removed, now that JS tests can be
    run with trial.

0.9.17 (2006-12-08):
  - More efficient JSON string parsing.
  - Give FakeRequests a default status code of OK.  Accept all of
    FakeRequest.__init__'s arguments in the __init__ of
    AccumulatingFakeRequest.

0.9.16 (2006-11-17):
  - Updated nit to work with Twisted trunk.
  - Athena module import caching has been fixed.

0.9.15 (2006-11-08):
  - Changed _LiveMixin rendering to be idempotent to support the case
    where a transport hiccup causes a LiveFragment or LiveElement to be
    sent to the browser multiple times.
  - Improvements to the tests.

0.9.14 (2006-10-31):
  - Support code for running non-browser javascript tests has been
    added.
  - Added a workaround for nodeById on widgets not yet added to the
    document in IE.
  - Athena will now invoke the nodeInserted method (if it exists) on a
    widget that it instantiates statically.
  - ID rewriting, similar to existing rewriting support for 'id'
    attributes, has been added in 'for' and 'headers' attributes of
    'label' and 'td'/'th' elements, respectively.

0.9.13 (2006-10-21):
  - Adjust non-selected panes in tabbedpane to be further out of the
    viewport.
  - Convert to using the Javascript module plugin system for
    Nevow-provided modules.

0.9.12 (2006-10-17):
  - Added id rewriting for LiveElement and LiveFragment, such that id
    attributes in a widget template are rewritten so that they are
    unique to the widget instance. A client-side API,
    Nevow.Athena.Widget.nodeById(), is provided to allow location of
    these nodes.

0.9.11 (2006-10-10):
  - Fixed dynamic widget instantiation in IE.
  - Added support for correctly quoting the values of slots which are
    used as attributes.

0.9.10 (2006-10-05):
  - Minor update to nevow.testutil.

0.9.9 (2006-09-26):
  - Several nit changes, including the addition of the "check" method to
    Failure, and the addition of an "assertFailure" method.
  - The ability to pass Python exceptions to Javascript has been added
    to Athena.
  - Dynamic module import has been added for the cases where it is
    necessary to dynamically add a widget to an existing page.

0.9.8 (2009-09-20):
  - A bug in nit that caused it to fail if there were too many tests in
    a test case, and swallow failures in some cases, has been fixed.
  - Widgets can no longer be added to a page after render time using
    Divmod.Runtime.Platform.{set,append}NodeContent.  Instead, they must
    be added using Nevow.Athena.Widget.addChildWidgetFromWidgetInfo.

0.9.7 (2009-09-12):
  - Automatic Athena event handler registration is fixed for all
    supported browsers and is no longer document-sensitive (ie, it works
    inside tables now).
  - Nit has gained a new assertion method, assertIn.

0.9.6 (2008-08-30):
  - Fixed a bug in the IE implementation of the runtime.js node fetching
    functions.

0.9.5 (2006-08-22):
  - Instance attributes can now be exposed to Athena with
    nevow.utils.Expose and Expose.exposedMethodNames() no longer returns
    unexposed names.

0.9.4 (2006-08-14):
  - Added test method discovery to nit test cases, so multiple test
    methods may be put in a single test case.
  - use XPath for certain DOM traversals when available. This yields
    significant speedups on Opera.
  - Made Divmod.Runtime.Platform.getAttribute deal with IE attribute
    name-mangling properly.
  - Javascript logging is now done in Firebug 0.4 style rather than 0.3.
  - Some cases where Deferred-returning render methods raised exceptions
    or buried failures were fixed.
  - Removed MochiKit. The pieces Nevow depends on have been moved to
    Divmod.Base in nevow/base.js.
  - Various doc fixes.

0.9.3 (2006-07-17):
  - Page rendering now supports preprocessors.

0.9.2 (2006-07-08):
  - Fixes to the typeahead demo.
  - Elements are now automatically serialized by json, just like
    Fragments.

0.9.1 (2006-07-05):
  - Made nevow.athena.expose the mandatory means of publishing a method
    to the browser.  The allowedMethods dictionary will no longer be
    respected.
  - Added nevow.page.Element and nevow.athena.LiveElement: these are
    preferred over nevow.rend.Fragment and nevow.athena.LiveFragment for
    all new development.

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20070321/4132e447/attachment.pgp
From psanchez at nortel.com  Wed Mar 21 08:53:21 2007
From: psanchez at nortel.com (Pedro Sanchez)
Date: Wed Mar 21 08:55:41 2007
Subject: [Twisted-web] Divmod Nevow 0.9.18
In-Reply-To: <20070321004736.GI29606@mithrandi.za.net>
References: <20070321004736.GI29606@mithrandi.za.net>
Message-ID: <1174488801.7176.11.camel@pcard0ze.ca.nortel.com>

On Wed, 2007-03-21 at 02:47 +0200, Tristan Seligmann wrote:
> Hi all,
> 
> I'm pleased to announce the Divmod Nevow 0.9.18 release (tagged about a
> month ago), available here:
> 
> <http://divmod.org/trac/attachment/wiki/SoftwareReleases/Nevow-0.9.18.tar.gz?format=raw>
> 

After a clean install of both Twisted 2.5 and this release of Nevow I
can tell that most examples in the LivePage/Canvas/XUL section fail to
execute due to the fact that liveglue.js can't be found. It is certainly
not installed by setup.py even though it is part of the distribution tar
file.

-- 
Pedro



From exarkun at divmod.com  Wed Mar 21 09:40:32 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Mar 21 09:40:35 2007
Subject: [Twisted-web] Divmod Nevow 0.9.18
In-Reply-To: <1174488801.7176.11.camel@pcard0ze.ca.nortel.com>
Message-ID: <20070321154032.18920.1696961947.divmod.quotient.4567@ohm>

On Wed, 21 Mar 2007 10:53:21 -0400, Pedro Sanchez <psanchez@nortel.com> wrote:
>On Wed, 2007-03-21 at 02:47 +0200, Tristan Seligmann wrote:
>> Hi all,
>>
>> I'm pleased to announce the Divmod Nevow 0.9.18 release (tagged about a
>> month ago), available here:
>>
>> <http://divmod.org/trac/attachment/wiki/SoftwareReleases/Nevow-0.9.18.tar.gz?format=raw>
>>
>
>After a clean install of both Twisted 2.5 and this release of Nevow I
>can tell that most examples in the LivePage/Canvas/XUL section fail to
>execute due to the fact that liveglue.js can't be found. It is certainly
>not installed by setup.py even though it is part of the distribution tar
>file.
>

Thanks.  Can you create a ticket for this at <http://divmod.org/>?

Jean-Paul

From psanchez at nortel.com  Wed Mar 21 11:30:56 2007
From: psanchez at nortel.com (Pedro Sanchez)
Date: Wed Mar 21 11:31:07 2007
Subject: [Twisted-web] Divmod Nevow 0.9.18
In-Reply-To: <20070321154032.18920.1696961947.divmod.quotient.4567@ohm>
References: <20070321154032.18920.1696961947.divmod.quotient.4567@ohm>
Message-ID: <1174498256.31932.0.camel@pcard0ze.ca.nortel.com>

On Wed, 2007-03-21 at 10:40 -0500, Jean-Paul Calderone wrote:
> On Wed, 21 Mar 2007 10:53:21 -0400, Pedro Sanchez <psanchez@nortel.com> wrote:
> >On Wed, 2007-03-21 at 02:47 +0200, Tristan Seligmann wrote:
> >> Hi all,
> >>
> >> I'm pleased to announce the Divmod Nevow 0.9.18 release (tagged about a
> >> month ago), available here:
> >>
> >> <http://divmod.org/trac/attachment/wiki/SoftwareReleases/Nevow-0.9.18.tar.gz?format=raw>
> >>
> >
> >After a clean install of both Twisted 2.5 and this release of Nevow I
> >can tell that most examples in the LivePage/Canvas/XUL section fail to
> >execute due to the fact that liveglue.js can't be found. It is certainly
> >not installed by setup.py even though it is part of the distribution tar
> >file.
> >
> 
> Thanks.  Can you create a ticket for this at <http://divmod.org/>?
> 
> Jean-Paul
> 
http://divmod.org/trac/ticket/1998

-- 
Pedro



From JRBoverhof at lbl.gov  Thu Mar 22 14:18:23 2007
From: JRBoverhof at lbl.gov (Joshua Boverhof)
Date: Thu Mar 22 14:19:44 2007
Subject: [Twisted-web] Using web2 to run a Cherrpy site
In-Reply-To: <4f0f0cb0703200855w475261dbv99239a5626494cc9@mail.gmail.com>
References: <4f0f0cb0703181908j536ed09ck7caf667fdaca30f8@mail.gmail.com>
	<033D1AC8-A6A3-41A7-B420-C311F2CD15F0@dreid.org>
	<4f0f0cb0703200855w475261dbv99239a5626494cc9@mail.gmail.com>
Message-ID: <299CD85F-5050-480E-8034-F7B1E71924AC@lbl.gov>

Here is a fix.

It looks like a bug in twisted.web2.twcgi to me.  Cherrypy is  
confused by the  "//".

-josh

 > svn diff
Index: twcgi.py
===================================================================
--- twcgi.py    (revision 19890)
+++ twcgi.py    (working copy)
@@ -51,7 +51,7 @@
      if request.postpath:
          # Should we raise an exception if this contains "/" chars?
-        env["PATH_INFO"] = '/' + '/'.join(request.postpath)
+        env["PATH_INFO"] = '/'.join(request.postpath)
      # MUST always be present, even if no query
      env["QUERY_STRING"] = request.querystring






On Mar 20, 2007, at 8:55 AM, David Konerding wrote:

>
>
>
> Which version of cherrypy are you using?  I did an easy_install
> cherrypy and got 3.0.1 but your code didn't work on it.  wsgiApp is
> somewhere else now or something.
>
>
> OK, I've updated my test example to work with CherryPy 3.0.  This  
> works a bit better,
> in fact, when I visit the root of the site I get my cherrypy  
> application!  Since
> I'm not tied to CherryPy 2.2 (unless TurboGears requires it) this  
> 'fixes' most of my problem.
> I'm still having a problem if I access some URLs under the root,  
> but I have yet to determine if it's going
> to be a problem.
>
> Here's a CherryPy 3.0.1 application that works with Twisted web2  
> using the WSGI app support.
>
> from twisted.internet import reactor
> from twisted.application import service, strports
> from twisted.web2 import server, channel
> from twisted.web2 import log
> from twisted.web2 import wsgi
> from twisted.web2.wsgi import WSGIResource
> import cherrypy
>
> ## Basic cherrypy index object that dumps the WSGI environment
> class Root(object):
>     @cherrypy.expose
>     def index(self):
>         s = []
>         for key in cherrypy.request.wsgi_environ:
>             s.append("%s=%s<br/>" % (key,  
> cherrypy.request.wsgi_environ [key]))
>
>         return "".join(s)
>
> ## Create an instance of the root application and mount it at /
> r = Root()
>
> ## Convert the Root application to a hostable WSGI application
> cpwsgiapp = cherrypy.Application(Root(), '/')
>
> ## Convert the CherryPy WSGI app to a Twisted WSGI resource
> wsgi = wsgi.WSGIResource(cpwsgiapp)
>
> ## Set up the cherrypy environment
> cherrypy.config.update({
>     'server.environment':'production',
>     })
>
> ## Start the cherrypy engine without starting a blocking server
> cherrypy.engine.start(blocking=False)
>
> ## Setup default common access logging
> res = log.LogWrapperResource(wsgi)
> log.DefaultCommonAccessLoggingObserver().start()
>
> # Create twisted web2 site
> site = server.Site(res)
>
> ## Launch the HTTP site at port 8080
>
> ## code path invoked by twistd
> if __name__ == '__builtin__':
>     application = service.Application("demo")
>     s = strports.service('tcp:8080', channel.HTTPFactory(site))
>     s.setServiceParent(application)
>
> ## code path when run directly
> if __name__ == '__main__':
>     from twisted.python import log as pythonlog
>     import sys
>     pythonlog.startLogging(sys.stdout)
>     reactor.listenTCP(8080, channel.HTTPFactory (site))
>     reactor.run()
>
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2526 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20070322/3a328245/smime.bin
From rampeters at gmail.com  Thu Mar 22 14:45:25 2007
From: rampeters at gmail.com (Ram Peters)
Date: Thu Mar 22 14:45:30 2007
Subject: [Twisted-web] newb: Twisted and API for Web Services
Message-ID: <81b45360703221345yc3ad493i1c2d9dad30c81e82@mail.gmail.com>

Question1: How do I distinguish the request in Twisted web for each
uri and call the appropriate class to handle the request, and response
back a xml data?

Question2: It will be listening on port 8080.  How does this get
translated to url?

For example, my URI as follows:
http://api.example.org/auto/Ford
http://api.example.org/auto/Chevy
http://api.example.org/auto/add
http://api.example.org/auto/delete
http://api.example.org/dealer/inventory
http://api.example.org/dealer/invoice

Thank you, it would be nice if you guys moved your mailing list to
google groups.  Just my 2 cents.

From ldanielburr at mac.com  Thu Mar 22 15:05:55 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu Mar 22 15:05:59 2007
Subject: [Twisted-web] newb: Twisted and API for Web Services
In-Reply-To: <81b45360703221345yc3ad493i1c2d9dad30c81e82@mail.gmail.com>
References: <81b45360703221345yc3ad493i1c2d9dad30c81e82@mail.gmail.com>
Message-ID: <op.tplzj5e33oj628@l-daniel-burrs-powerbook-g4-17.local>

On Thu, 22 Mar 2007 15:45:25 -0500, Ram Peters <rampeters@gmail.com> wrote:

> Question1: How do I distinguish the request in Twisted web for each
> uri and call the appropriate class to handle the request, and response
> back a xml data?
>

See  
http://twistedmatrix.com/projects/web/documentation/howto/using-twistedweb.html#resources

At the url mentioned above, pay attention to the parts about getChild
and putChild.

If you are using twisted.web2, then see
http://twistedmatrix.com/projects/web2/documentation/howto/object-traversal.xhtml

> Question2: It will be listening on port 8080.  How does this get
> translated to url?
>
> For example, my URI as follows:
> http://api.example.org/auto/Ford
> http://api.example.org/auto/Chevy
> http://api.example.org/auto/add
> http://api.example.org/auto/delete
> http://api.example.org/dealer/inventory
> http://api.example.org/dealer/invoice
>

If your server is listening on port 8080, your URLs will look like this:

http://api.example.org:8080/auto/Ford
http://api.example.org:8080/auto/Chevy
http://api.example.org:8080/auto/add
http://api.example.org:8080/auto/delete
http://api.example.org:8080/dealer/inventory
http://api.example.org:8080/dealer/invoice

Hope this helps,

L. Daniel Burr

From duncan.mcgreggor at gmail.com  Thu Mar 22 17:17:14 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu Mar 22 17:17:19 2007
Subject: [Twisted-web] newb: Twisted and API for Web Services
In-Reply-To: <81b45360703221345yc3ad493i1c2d9dad30c81e82@mail.gmail.com>
References: <81b45360703221345yc3ad493i1c2d9dad30c81e82@mail.gmail.com>
Message-ID: <4327dfbd0703221617v13df4e7cxbc0307abb6fbdbda@mail.gmail.com>

On 3/22/07, Ram Peters <rampeters@gmail.com> wrote:
>
> Question1: How do I distinguish the request in Twisted web for each
> uri and call the appropriate class to handle the request, and response
> back a xml data?
>
> Question2: It will be listening on port 8080.  How does this get
> translated to url?
>
> For example, my URI as follows:
> http://api.example.org/auto/Ford
> http://api.example.org/auto/Chevy
> http://api.example.org/auto/add
> http://api.example.org/auto/delete
> http://api.example.org/dealer/inventory
> http://api.example.org/dealer/invoice
>
> Thank you

Also, be sure you are using the right tool for the right job for the
right reasons :-) Read this page for more direction/information:
  http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted

From jarek.zgoda at sensisoft.com  Wed Mar 28 04:39:52 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Wed Mar 28 04:40:10 2007
Subject: [Twisted-web] request.args empty when rendering PUT?
Message-ID: <460A45F8.1050107@sensisoft.com>

I just discovered, that when using twisted.web and resource framework,
request.args are empty when I render the PUT method. Specifically, if I
issue http.request('PUT', path, params, headers) (http is
httplib.HTTPConnection object) and the params is urlencoded dictionary,
in the resource's render_PUT method I get request.args equal to {}. Is
this intended, or should I do something to enable passing data to PUT
method?

-- 
Jarek Zgoda

"We read Knuth so you don't have to."

From ldanielburr at mac.com  Wed Mar 28 05:49:08 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Wed Mar 28 05:49:17 2007
Subject: [Twisted-web] request.args empty when rendering PUT?
In-Reply-To: <460A45F8.1050107@sensisoft.com>
References: <460A45F8.1050107@sensisoft.com>
Message-ID: <op.tpwdr61m3oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi Jarek,

On Wed, 28 Mar 2007 05:39:52 -0500, Jarek Zgoda  
<jarek.zgoda@sensisoft.com> wrote:

> I just discovered, that when using twisted.web and resource framework,
> request.args are empty when I render the PUT method. Specifically, if I
> issue http.request('PUT', path, params, headers) (http is
> httplib.HTTPConnection object) and the params is urlencoded dictionary,
> in the resource's render_PUT method I get request.args equal to {}. Is
> this intended, or should I do something to enable passing data to PUT
> method?
>

I've never had a problem using PUT with twisted,web; I've had one such
application running for over 2 years without a problem.

Could you please provide some more details, perhaps a snippet of how
the client-code is calling your twisted.web server?  It is most likely
something simple that is preventing your code from working as you desire.

Also, have you tried sending the PUT "by hand", i.e., using telnet to
send the PUT line-by-line, or using curl, or some other client besides
httplib?

Thanks,

L. Daniel Burr

From jarek.zgoda at sensisoft.com  Wed Mar 28 06:24:00 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Wed Mar 28 06:24:08 2007
Subject: [Twisted-web] request.args empty when rendering PUT?
In-Reply-To: <op.tpwdr61m3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <460A45F8.1050107@sensisoft.com>
	<op.tpwdr61m3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <460A5E60.7050209@sensisoft.com>

L. Daniel Burr napisa?(a):

>> I just discovered, that when using twisted.web and resource framework,
>> request.args are empty when I render the PUT method. Specifically, if I
>> issue http.request('PUT', path, params, headers) (http is
>> httplib.HTTPConnection object) and the params is urlencoded dictionary,
>> in the resource's render_PUT method I get request.args equal to {}. Is
>> this intended, or should I do something to enable passing data to PUT
>> method?
>>
> 
> I've never had a problem using PUT with twisted,web; I've had one such
> application running for over 2 years without a problem.
> 
> Could you please provide some more details, perhaps a snippet of how
> the client-code is calling your twisted.web server?  It is most likely
> something simple that is preventing your code from working as you desire.

The code that produces failure:

path = '/indexer'
headers = {
    'Content-Type': 'application/x-www-form-urlencoded',
    'accept': 'text/plain',
}
docs = [{'field1': 'value1', 'field2': 'value2'}]
params = urllib.urlencode({'items': pickle.dumps(docs)})
http = httplib.HTTPConnection('localhost', 8080)
try:
    http.request('PUT', path, params, headers)
    response = http.getresponse()
    print response.reason
finally:
    http.close()

The dictionary I get as request.args is empty.

> Also, have you tried sending the PUT "by hand", i.e., using telnet to
> send the PUT line-by-line, or using curl, or some other client besides
> httplib?

Will try this.

-- 
Jarek Zgoda

"We read Knuth so you don't have to."

From ldanielburr at mac.com  Wed Mar 28 07:51:43 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Wed Mar 28 07:51:49 2007
Subject: [Twisted-web] request.args empty when rendering PUT?
In-Reply-To: <460A5E60.7050209@sensisoft.com>
References: <460A45F8.1050107@sensisoft.com>
	<op.tpwdr61m3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<460A5E60.7050209@sensisoft.com>
Message-ID: <op.tpwjghf73oj628@l-daniel-burrs-powerbook-g4-17.local>

On Wed, 28 Mar 2007 07:24:00 -0500, Jarek Zgoda  
<jarek.zgoda@sensisoft.com> wrote:

> The code that produces failure:
>
> path = '/indexer'
> headers = {
>     'Content-Type': 'application/x-www-form-urlencoded',
>     'accept': 'text/plain',
> }
> docs = [{'field1': 'value1', 'field2': 'value2'}]
> params = urllib.urlencode({'items': pickle.dumps(docs)})
> http = httplib.HTTPConnection('localhost', 8080)
> try:
>     http.request('PUT', path, params, headers)
>     response = http.getresponse()
>     print response.reason
> finally:
>     http.close()
>
> The dictionary I get as request.args is empty.
>

My apologies, I was thinking about POST, not PUT.  request.args
will always be empty in the case of a PUT.  This is because
twisted.web.http.Request does the following:

- parse the querystring (note that your PUT has no querystring)
- if the request method is POST
   - parse the request body

Long story short, a PUT gets ignored when it comes to parsing
and populating request.args.  I've never run into this problem
because I don't PUT 'application/x-www-urelencoded' data, only
JSON or text/xml, which don't get handled as request.args anyway.

The solution is, in your render_PUT method, to do something like
this:

 from twisted.web import http, resource


class MyResource(resource.Resource):
     allowedMethods = ('PUT',)
     isLeaf = True

     def render_PUT(self, request):
         parameters = http.parse_qs(request.content.read(), 1)
         # proceed using parameters instead of request.args

Obviously, this is a fairly trivial piece of code, but if you
feel strongly about this issue, please consider filing a ticket
on twistedmatrix.com, requesting that a PUT, with a Content-Type
of 'application/x-www/urlencoded' or 'multipart/form-data' be
parsed into request.args just as a POST would be.

Hope this helps,

L. Daniel Burr

