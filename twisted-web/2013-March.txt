From ardesai at yahoo.com  Tue Mar 12 06:15:49 2013
From: ardesai at yahoo.com (A Desai)
Date: Tue, 12 Mar 2013 03:15:49 -0700 (PDT)
Subject: [Twisted-web] Setting of TCP Receive buffer size and Flow Control
	in producer/consumer
Message-ID: <1363083349.91268.YahooMailNeo@web122101.mail.ne1.yahoo.com>

Scenario:? TCP Receive Buffer on twisted HTTP server using the twisted application framework.? And its behavior when set up as producer/consumer.


(1) Would like to set the receive buffer size on socket.? One way to do this would be to create a derived class of TCPServer (or SSLServer) and set the buffer size and use derived class server in the .tac file.? Would like to know if there is any sample code for such usage?? For example, in which method of the derived class would one set the receive buffer size?


(2) When an incoming http POST request is acting as a producer of data, which is tied to a consumer resource (some other connection), how can I control the incoming tcp window size, if the consumer has paused consuming?? I presume the incoming network data will keep piling up in the 'huge' tcp buffer eventually advertising a 'tcp zero window' to the network peer of the data producer, AND the server ends up using up a large amount of memory for the paused connection.? Is there an alternative?? I realize that the TCP protocol inhibits 'reducing of an already advertised receive window', but I am wondering if pauseProducing() on an http channel could do something to at least prevent the tcp window size from increasing any further?

Thank you,
Arun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130312/eb424c01/attachment.htm 

From glyph at twistedmatrix.com  Tue Mar 12 15:27:04 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 12 Mar 2013 12:27:04 -0700
Subject: [Twisted-web] Setting of TCP Receive buffer size and Flow
	Control in producer/consumer
In-Reply-To: <1363083349.91268.YahooMailNeo@web122101.mail.ne1.yahoo.com>
References: <1363083349.91268.YahooMailNeo@web122101.mail.ne1.yahoo.com>
Message-ID: <946D1AAF-D15F-4330-BA69-60EA9203FCC6@twistedmatrix.com>


On Mar 12, 2013, at 3:15 AM, A Desai <ardesai at yahoo.com> wrote:

> Scenario:  TCP Receive Buffer on twisted HTTP server using the twisted application framework.  And its behavior when set up as producer/consumer.
> 
> (1) Would like to set the receive buffer size on socket.  One way to do this would be to create a derived class of TCPServer (or SSLServer) and set the buffer size and use derived class server in the .tac file.  Would like to know if there is any sample code for such usage?  For example, in which method of the derived class would one set the receive buffer size?

You don't need to subclass these classes; and in any event, it wouldn't help, TCPServer and SSLServer don't have connections of their own, they're services that hold listening sockets, not connected sockets.  If you want to set an option unsupported by Twisted, "transport.getHandle()" will give you the Python socket object (on those reactors which use socket objects internally, which is most of them).  You can just set SO_RCVBUF on that socket from your Protocol class.

Also, this ticket may be of interest to you: <https://twistedmatrix.com/trac/ticket/4089>.  Tuning send and receive buffers should be more explicitly supported by Twisted.

> (2) When an incoming http POST request is acting as a producer of data, which is tied to a consumer resource (some other connection), how can I control the incoming tcp window size, if the consumer has paused consuming?  I presume the incoming network data will keep piling up in the 'huge' tcp buffer eventually advertising a 'tcp zero window' to the network peer of the data producer, AND the server ends up using up a large amount of memory for the paused connection.  Is there an alternative?  I realize that the TCP protocol inhibits 'reducing of an already advertised receive window', but I am wondering if pauseProducing() on an http channel could do something to at least prevent the tcp window size from increasing any further?

I don't know that much about window scaling, but won't the fact that the application isn't receiving any data from the kernel automatically prevent the window from scaling any bigger?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130312/579b43a5/attachment.htm 

From ardesai at yahoo.com  Wed Mar 13 00:04:36 2013
From: ardesai at yahoo.com (A Desai)
Date: Tue, 12 Mar 2013 21:04:36 -0700 (PDT)
Subject: [Twisted-web] Setting of TCP Receive buffer size and Flow
	Control in producer/consumer
In-Reply-To: <946D1AAF-D15F-4330-BA69-60EA9203FCC6@twistedmatrix.com>
References: <1363083349.91268.YahooMailNeo@web122101.mail.ne1.yahoo.com>
	<946D1AAF-D15F-4330-BA69-60EA9203FCC6@twistedmatrix.com>
Message-ID: <1363147476.51113.YahooMailNeo@web122103.mail.ne1.yahoo.com>

I penned the questions at 3am, so please punt my second question since it is half-baked.? Found some time this afternoon to revisit bulk-data flow discussion in Steven's book. ?

The first question still applies though.

Using the protocol's transport object, I can fetch the SO_RCVBUF value on the 'accepted' connection and even set the SO_SNDBUF value.? However, since TCP Window scaling is enabled by default, it is my understanding that the SO_RCVBUF has to be set before the listen() call is invoked.? The .tac file passes the TCPServer object to application/service framework, which in turn calls the listener.? So I am wondering if I have to derive a subclass of TCPServer and somehow set the SO_RCVBUF value before the application framework invokes listen();? i.e. drill down to the Port object where it calls createInternetSocket()?





On Mar 12, 2013, at 3:15 AM, A Desai <ardesai at yahoo.com> wrote:

Scenario:? TCP Receive Buffer on twisted HTTP server using the twisted application framework.? And its behavior when set up as producer/consumer.
>
>
>
>(1) Would like to set the receive buffer size on socket.? One way to do this would be to create a derived class of TCPServer (or SSLServer) and set the buffer size and use derived class server in the .tac file.? Would like to know if there is any sample code for such usage?? For example, in which method of the derived class would one set the receive buffer size?

You don't need to subclass these classes; and in any event, it wouldn't help, TCPServer and SSLServer don't have connections of their own, they're services that hold listening sockets, not connected sockets. ?If you want to set an option unsupported by Twisted, "transport.getHandle()" will give you the Python socket object (on those reactors which use socket objects internally, which is most of them). ?You can just set SO_RCVBUF on that socket from your Protocol class.

Also, this ticket may be of interest to you: <https://twistedmatrix.com/trac/ticket/4089>. ?Tuning send and receive buffers should?be more explicitly supported by Twisted.

(2) When an incoming http POST request is acting as a producer of data, which is tied to a consumer resource (some other connection), how can I control the incoming tcp window size, if the consumer has paused consuming?? I presume the incoming network data will keep piling up in the 'huge' tcp buffer eventually advertising a 'tcp zero window' to the network peer of the data producer, AND the server ends up using up a large amount of memory for the paused connection.? Is there an alternative?? I realize that the TCP protocol inhibits 'reducing of an already advertised receive window', but I am wondering if pauseProducing() on an http channel could do something to at least prevent the tcp window size from increasing any further?
>

I don't know that much about window scaling, but won't the fact that the application isn't receiving any data from the kernel automatically prevent the window from scaling any bigger?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130312/6b7f6e7b/attachment.htm 

From glyph at twistedmatrix.com  Wed Mar 13 14:33:31 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 13 Mar 2013 11:33:31 -0700
Subject: [Twisted-web] Setting of TCP Receive buffer size and Flow
	Control in producer/consumer
In-Reply-To: <1363147476.51113.YahooMailNeo@web122103.mail.ne1.yahoo.com>
References: <1363083349.91268.YahooMailNeo@web122101.mail.ne1.yahoo.com>
	<946D1AAF-D15F-4330-BA69-60EA9203FCC6@twistedmatrix.com>
	<1363147476.51113.YahooMailNeo@web122103.mail.ne1.yahoo.com>
Message-ID: <B2F8C088-43EE-435D-9F99-2A63891B568D@twistedmatrix.com>

On Mar 12, 2013, at 9:04 PM, A Desai <ardesai at yahoo.com> wrote:

> Using the protocol's transport object, I can fetch the SO_RCVBUF value on the 'accepted' connection and even set the SO_SNDBUF value.  However, since TCP Window scaling is enabled by default, it is my understanding that the SO_RCVBUF has to be set before the listen() call is invoked.  The .tac file passes the TCPServer object to application/service framework, which in turn calls the listener.  So I am wondering if I have to derive a subclass of TCPServer and somehow set the SO_RCVBUF value before the application framework invokes listen();  i.e. drill down to the Port object where it calls createInternetSocket()?

You'd need to actually subclass tcp.Server, an implementation mechanism that we would really like to deprecate :).

Really, the right way to do this is to contribute a fix to the ticket I linked, and do it directly next to the listen() call within Twisted :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130313/d9c04a36/attachment.htm 

From ardesai at yahoo.com  Wed Mar 13 23:45:27 2013
From: ardesai at yahoo.com (A Desai)
Date: Wed, 13 Mar 2013 20:45:27 -0700 (PDT)
Subject: [Twisted-web] Setting of TCP Receive buffer size and Flow
	Control in producer/consumer
In-Reply-To: <B2F8C088-43EE-435D-9F99-2A63891B568D@twistedmatrix.com>
References: <1363083349.91268.YahooMailNeo@web122101.mail.ne1.yahoo.com>
	<946D1AAF-D15F-4330-BA69-60EA9203FCC6@twistedmatrix.com>
	<1363147476.51113.YahooMailNeo@web122103.mail.ne1.yahoo.com>
	<B2F8C088-43EE-435D-9F99-2A63891B568D@twistedmatrix.com>
Message-ID: <1363232727.95864.YahooMailNeo@web122106.mail.ne1.yahoo.com>

Let me think about it.


________________________________
 From: Glyph <glyph at twistedmatrix.com>
To: A Desai <ardesai at yahoo.com> 
Cc: Twisted Web World <twisted-web at twistedmatrix.com> 
Sent: Wednesday, March 13, 2013 11:33 AM
Subject: Re: [Twisted-web] Setting of TCP Receive buffer size and Flow Control in producer/consumer
 

On Mar 12, 2013, at 9:04 PM, A Desai <ardesai at yahoo.com> wrote:


Using the protocol's transport object, I can fetch the SO_RCVBUF value on the 'accepted' connection and even set the SO_SNDBUF value.? However, since TCP Window scaling is enabled by default, it is my understanding that the SO_RCVBUF has to be set before the listen() call is invoked.? The .tac file passes the TCPServer object to application/service framework, which in turn calls the listener.? So I am wondering if I have to derive a subclass of TCPServer and somehow set the SO_RCVBUF value before the application framework invokes listen();? i.e. drill down to the Port object where it calls createInternetSocket()?
>

You'd need to actually subclass tcp.Server, an implementation mechanism that we would really like to deprecate :).

Really, the right way to do this is to contribute a fix to the ticket I linked, and do it directly next to the listen() call within Twisted :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130313/ebf27d56/attachment.htm 

From xxy-php at qq.com  Thu Mar 21 03:48:07 2013
From: xxy-php at qq.com (=?gb18030?B?0KHRp9SwUEhQ?=)
Date: Thu, 21 Mar 2013 15:48:07 +0800
Subject: [Twisted-web] A Question, TIA!
Message-ID: <tencent_602313685F3F25CE1EC19064@qq.com>

My program(Cumulus) receives http put(file by chunk).And then resend the file to another process(Hadoop).
The trouble is that i need get the file object in my program(not stored on disk then read from).
So where should i get it? rawDataReceived or allContentReceived?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130321/ba4c3c53/attachment.htm 

From _ at lvh.cc  Thu Mar 21 10:32:18 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 21 Mar 2013 07:32:18 -0700
Subject: [Twisted-web] A Question, TIA!
In-Reply-To: <tencent_602313685F3F25CE1EC19064@qq.com>
References: <tencent_602313685F3F25CE1EC19064@qq.com>
Message-ID: <CAE_Hg6YN8-cf42=ddPSW2w6zJ08-R+9z=+9G0q2EHOXYyMSRdQ@mail.gmail.com>

Sounds like you want twisted.web.client.Agent;  when you make a request you
get an IResponse object that has a deliverBody method that takes a
protocol. That protocol can receive chunks (dataReceived), or you could use
e.g. a LineReceiver if you know they're delimited chunks.


On Thu, Mar 21, 2013 at 12:48 AM, ???PHP <xxy-php at qq.com> wrote:

> My program(Cumulus) receives http put(file by chunk).
> And then resend the file to another process(Hadoop).
> The trouble is that i need get the file object in my program*(not stored
> on disk then read from).*
> So where should i get it? rawDataReceived or allContentReceived?
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130321/7a64f29b/attachment.htm 

From xxy-php at qq.com  Thu Mar 21 21:34:49 2013
From: xxy-php at qq.com (=?gb18030?B?0KHRp9SwUEhQ?=)
Date: Fri, 22 Mar 2013 09:34:49 +0800
Subject: [Twisted-web] Twisted-web Digest, Vol 107, Issue 4
Message-ID: <tencent_35601D836BA227867CF8AF3A@qq.com>

Thanks, Laurens. I will have a try with your advices.

Message: 2
Date: Thu, 21 Mar 2013 07:32:18 -0700
From: Laurens Van Houtven <_ at lvh.cc>
Subject: Re: [Twisted-web] A Question, TIA!
To: Twisted Web World <twisted-web at twistedmatrix.com>
Message-ID:
	<CAE_Hg6YN8-cf42=ddPSW2w6zJ08-R+9z=+9G0q2EHOXYyMSRdQ at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

Sounds like you want twisted.web.client.Agent;  when you make a request you
get an IResponse object that has a deliverBody method that takes a
protocol. That protocol can receive chunks (dataReceived), or you could use
e.g. a LineReceiver if you know they're delimited chunks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130322/f5b8e724/attachment.htm 

From awbuga at gmail.com  Mon Mar 25 13:43:24 2013
From: awbuga at gmail.com (Adam Buga)
Date: Mon, 25 Mar 2013 10:43:24 -0700
Subject: [Twisted-web] txJSON-RPC, deferred,
 and longpolling ajax -- limited number of connections, setting
Message-ID: <CABp7HXU98RaxMyrdPiyXxHceHNaygN2Z0WejRML6TGKW4ZV5HQ@mail.gmail.com>

Hi,
I'm writing a simple JSONRPC server that is intended to have a number of
longpolling http connections.

-On the server side, I'm using txJSON-RPC and utilizing returning deferred
(which translate into NOT_DONE_YET at the next layer).
-On a clientside, I'm using JQuery to kick off a longpolling ajax POST to
the rpc interface.

Upon the requests arrival to the RPC server I returned a Deferred, adding
it to my list. The POST should only return data (finish the request) once
the server side has some changed state. It works for basic tests.

However, once I increase the number of outstanding connections, I don't see
any more connections accepted from my browser. I seem to be capped at 6
open connections. If I start a new browser, ie: chrome, or even change the
URL from localhost to 127.0.0.1 I'm able to open another 6.

I've never done much server programming so I'm a bit confused as to where
to look to fix this. I've import pdb and set_trace() all the way down to
the tcp.py part and I still don't see any activity coming in.

What steps should I take to identify and fix this limitation? Any help
would be appreciated!

-Adam
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130325/0106ba9b/attachment.htm 

From jkakar at kakar.ca  Mon Mar 25 13:53:14 2013
From: jkakar at kakar.ca (Jamu Kakar)
Date: Mon, 25 Mar 2013 10:53:14 -0700
Subject: [Twisted-web] txJSON-RPC, deferred,
 and longpolling ajax -- limited number of connections, setting
In-Reply-To: <CABp7HXU98RaxMyrdPiyXxHceHNaygN2Z0WejRML6TGKW4ZV5HQ@mail.gmail.com>
References: <CABp7HXU98RaxMyrdPiyXxHceHNaygN2Z0WejRML6TGKW4ZV5HQ@mail.gmail.com>
Message-ID: <CALWnh8pn6empiQVRYPgVjJGTvq6hvKSi1Czg3SpHr1jkudCNrQ@mail.gmail.com>

Hi Adam,

On Mon, Mar 25, 2013 at 10:43 AM, Adam Buga <awbuga at gmail.com> wrote:
> However, once I increase the number of outstanding connections, I don't see
> any more connections accepted from my browser. I seem to be capped at 6 open
> connections. If I start a new browser, ie: chrome, or even change the URL
> from localhost to 127.0.0.1 I'm able to open another 6.

It sounds like you're hitting the limit of connections in your
browser.  This may shed some light on the situation:

  http://stackoverflow.com/questions/561046/how-many-concurrent-ajax-xmlhttprequest-requests-are-allowed-in-popular-browse

Thanks,
J.


