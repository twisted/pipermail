From georgewr at bigpond.net.au  Tue Dec  2 06:12:01 2008
From: georgewr at bigpond.net.au (George Wright)
Date: Tue Dec  2 06:12:55 2008
Subject: [Twisted-web] error: "No module named strcred"
Message-ID: <D3FE927E-C28C-4463-9689-CCB7AB8E0A59@bigpond.net.au>

Gidday
I'm Looking for help.
Trying to run twisted and twistd examples (such as from here:
http://www.saltycrane.com/blog/2008/10/running-twisted-perspective-broker-example-twistd/)
I sometimes get a  "No module named strcred" error.
For example:
$ twistd twistd --help

geomacbk:~ georgewr$ twistd --help
Traceback (most recent call last):
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/usage.py", line 373, in __str__
     return self.getSynopsis() + '\n' + self.getUsage(width=None)
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/usage.py", line 407, in getUsage
     for (cmd, short, parser, desc) in self.subCommands:
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/application/app.py", line 364, in subCommands
     for plug in plugins:
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/plugin.py", line 227, in getPlugins
     allDropins = getCache(package)
--- <exception caught here> ---
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/plugin.py", line 178, in getCache
     provider = namedAny(module.__name__ + '.' + moduleName)
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/reflect.py", line 357, in namedAny
     topLevelPackage = __import__(trialname)
   File "/Users/georgewr/Library/Python/2.5/site-packages/twisted/ 
plugins/cred_memory.py", line 13, in <module>
     from twisted.cred.strcred import ICheckerFactory
exceptions.ImportError: No module named strcred
Traceback (most recent call last):
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/usage.py", line 373, in __str__
     return self.getSynopsis() + '\n' + self.getUsage(width=None)
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/usage.py", line 407, in getUsage
     for (cmd, short, parser, desc) in self.subCommands:
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/application/app.py", line 364, in subCommands
     for plug in plugins:
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/plugin.py", line 227, in getPlugins
     allDropins = getCache(package)
--- <exception caught here> ---
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/plugin.py", line 178, in getCache
     provider = namedAny(module.__name__ + '.' + moduleName)
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/reflect.py", line 357, in namedAny
     topLevelPackage = __import__(trialname)
   File "/Users/georgewr/Library/Python/2.5/site-packages/twisted/ 
plugins/cred_file.py", line 16, in <module>
     from twisted.cred.strcred import ICheckerFactory
exceptions.ImportError: No module named strcred
Traceback (most recent call last):
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/usage.py", line 373, in __str__
     return self.getSynopsis() + '\n' + self.getUsage(width=None)
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/usage.py", line 407, in getUsage
     for (cmd, short, parser, desc) in self.subCommands:
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/application/app.py", line 364, in subCommands
     for plug in plugins:
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/plugin.py", line 227, in getPlugins
     allDropins = getCache(package)
--- <exception caught here> ---
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/plugin.py", line 178, in getCache
     provider = namedAny(module.__name__ + '.' + moduleName)
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/reflect.py", line 357, in namedAny
     topLevelPackage = __import__(trialname)
   File "/Users/georgewr/Library/Python/2.5/site-packages/twisted/ 
plugins/cred_unix.py", line 13, in <module>
     from twisted.cred.strcred import ICheckerFactory
exceptions.ImportError: No module named strcred
Traceback (most recent call last):
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/usage.py", line 373, in __str__
     return self.getSynopsis() + '\n' + self.getUsage(width=None)
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/usage.py", line 407, in getUsage
     for (cmd, short, parser, desc) in self.subCommands:
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/application/app.py", line 364, in subCommands
     for plug in plugins:
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/plugin.py", line 227, in getPlugins
     allDropins = getCache(package)
--- <exception caught here> ---
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/plugin.py", line 178, in getCache
     provider = namedAny(module.__name__ + '.' + moduleName)
   File "/System/Library/Frameworks/Python.framework/Versions/2.5/ 
Extras/lib/python/twisted/python/reflect.py", line 357, in namedAny
     topLevelPackage = __import__(trialname)
   File "/Users/georgewr/Library/Python/2.5/site-packages/twisted/ 
plugins/cred_anonymous.py", line 14, in <module>
     from twisted.cred.strcred import ICheckerFactory
exceptions.ImportError: No module named strcred
Usage: twistd [options]
Options:
       --savestats        save the Stats object rather than the text  
output of
                          the profiler.
   -o, --no_save          do not save state on shutdown
   -e, --encrypted        The specified tap/aos/xml file is encrypted.
       --nothotshot       Don't use the 'hotshot' profiler even if it's
                          available.

........
snip
.........

     manhole          An interactive remote debugger service  
accessible via
                      telnet and ssh and providing syntax coloring and  
basic line
                      editing functionality.
     conch            A Conch SSH service.


George Wright
georgewr@bigpond.net.au
http://mywebsite.bigpond.net.au/georgewr/
http://www.labyrinth.net.au/~gwright





From exarkun at divmod.com  Tue Dec  2 09:20:59 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Dec  2 09:21:19 2008
Subject: [Twisted-web] error: "No module named strcred"
In-Reply-To: <D3FE927E-C28C-4463-9689-CCB7AB8E0A59@bigpond.net.au>
Message-ID: <20081202142059.20272.1233407000.divmod.quotient.14527@ohm>

On Tue, 2 Dec 2008 22:12:01 +1100, George Wright <georgewr@bigpond.net.au> wrote:
>Gidday
>I'm Looking for help.
>Trying to run twisted and twistd examples (such as from here:
>http://www.saltycrane.com/blog/2008/10/running-twisted-perspective-broker- 
>example-twistd/)
>I sometimes get a  "No module named strcred" error.

One problem is that you have two versions of Twisted installed, one in
/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/ and
another in /Users/georgewr/Library/Python/2.5/site-packages/.  This should
not pose as great a problem with a newer version of Twisted (such as 8.1)
but older versions incorrectly handled this case.  So if it's an option,
you should try upgrading one of the installations to 8.1 and then make sure
it comes first in PYTHONPATH.  If one of them is already 8.1, then just
make sure it comes first in PYTHONPATH.  Once this is the case, it should
correctly ignore the other older version.

The import error comes from a newer plugin being found which tries to import
a module which didn't exist in the older version of Twisted, but the older
version of Twisted appears on PYTHONPATH first, so when the plugin tries to
import the module, Python finds the older version of Python which does not
have that module, and you get an ImportError.

You can read more about the plugin system (if you're interested) here:

  http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

Jean-Paul

From georgewr at bigpond.net.au  Wed Dec  3 03:35:41 2008
From: georgewr at bigpond.net.au (George Wright)
Date: Wed Dec  3 03:36:31 2008
Subject: [Twisted-web] error: "No module named strcred"
In-Reply-To: <E1L7YbT-0005vf-TK@cube.twistedmatrix.com>
References: <E1L7YbT-0005vf-TK@cube.twistedmatrix.com>
Message-ID: <5463251B-87C2-45FF-810D-66A0785A90E3@bigpond.net.au>

Thanks Jean-Paul
One version of twisted (system/library etc) was 2.5! I don't know how  
it got there. Maybe it was included in the Apple OSX and I shouldn't  
trash it?
Anyhow I did easy_install -U twisted and got version 8.1 and things  
seem OK now.

On 03/12/2008, at 4:00 AM, Jean-Paul Calderone <exarkun@divmod.com>  
wrote:
>
> One problem is that you have two versions of Twisted installed, one in
> /System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/  
> and
> another in /Users/georgewr/Library/Python/2.5/site-packages/.

> you should try upgrading one of the installations to 8.1 and then  
> make sure
> it comes first in PYTHONPATH.

> Jean-Paul

George Wright
georgewr@bigpond.net.au
http://mywebsite.bigpond.net.au/georgewr/
http://www.labyrinth.net.au/~gwright




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20081203/5f3f665d/attachment.htm
From swapnil_manthanwar at persistent.co.in  Wed Dec  3 05:00:49 2008
From: swapnil_manthanwar at persistent.co.in (Swapnil Manthanwar)
Date: Wed Dec  3 05:01:26 2008
Subject: [Twisted-web] Problem with twisted.web2.
Message-ID: <006601c9552e$04d84a30$043f0b0a@persistent.co.in>

Hi All,

 

 

I have deployed all the dependencies required for OpenXCAP server but when I
run openxcap, I get an error;

Traceback (most recent call last):

  File "/usr/local/bin/openxcap", line 41, in <module>

    from xcap.logutil import start_log

  File "/usr/local/lib/python2.5/site-packages/xcap/logutil.py", line 6, in
<module>

    from twisted.web2 import responsecode

ImportError: No module named web2 

It may require the latest version of twisted.web2. I tried on
"svn://svn.twistedmatrix.com/svn/Twisted/trunk"to download the latest
version but failed.

Please let me know if I can get the latest twisted.web2 from any other
location.

 

 

Thanks in advance,

-Swapnil 

 

 


DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Ltd. does not accept any liability for virus infected mails.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20081203/47814b9e/attachment.htm
From dotfill at gmail.com  Thu Dec  4 08:51:20 2008
From: dotfill at gmail.com (Dot Fill)
Date: Thu Dec  4 08:51:55 2008
Subject: [Twisted-web] wsgi and twisted.web{,2} again
Message-ID: <a2c5ed3d0812040551o53bc7671vc3bfac44753dccab@mail.gmail.com>

I know, people on this list dislike WSGI as a matter of principle,
so don't kick me into head before I have spoken the rest...
Sorry for my English too.

I do really appreciate the original mood of nevow, the clean and creative
approach of twisted, that is to be said. AFAIK, they are both OpenSource
developments, and being developed by community. So the only thing they both
need is the wide acceptance by the public, to be enhanced more and more
and to keeping it alive too.

But here just want to say, that I am unhappy with the fact that nevow is a
framework of it's own server and is not a more general thing.
I suppose that I am not alone in that unhappiness.
Believe me, sometimes we can't choose all the software we will deploy for
a particular site. Sometimes WSGI hosting is easier to require/ask for.
So what about using twisted as WSGI application or WSGI middleware,
not just only as WSGI gateway?
Is it really technically impossible to run twisted.web2 application on
a WSGI hosting
together with some (thin?) layer of twisted, but without HTTP-server?
AFAIK there is no modules, that already do the job needed. Am I right?

I understand, that adoption of WSGI makes the usage of twisted-based HTTP server
unnecessary and that probably can't be tolerated by several people on this list,
as they have spent too much effort on developing the HTTP server in twisted.
But anyway, the availability of it's own dedicated HTTP server is not the
first argument when advocating the twisted methodology, believe me.
As for me personally - it is the last argument, but this is only IMHO.
The more valuable argument will be the possibility to plug twisted
into any existing
HTTP-server. Consider imaginary apache's "mod_twisted", just imagine
that's power and
flexibility if it will allow to pre-fork twisted process with
specified uids, send
some requests to that process via a secure channel like UNIX-socket.
(Just look at the mod_wsgi and you will get the idea.)

You may notice, that it is already possible with apache as reverse HTTP-proxy,
but:
 - pure-HTTP reverse proxies cannot be nested (for obvious reasons),
 don't giving an example here.
 - HTTP-based application servers cannot securely live inside single
unix operating
 system instance. Consider student's server with Joe and Matthew as
 students, building their twisted application and deploying it on the same
 machine and behind HTTP-reverse proxy. They operate under different
 accounts, but common UNIX system makes no difference on who is trying
 to bind to TCP-socket for listening. Thus, once being drunk after holidays,
 Joe decides to show his coolhacker skills to Matthew and runs application,
 that bind itself continuously to Matthew's TCP port. Matthew sucks, his
 application fails to run. This was a real life example, and in real life
 it was fixed by employing SELinux on public student's server, and as a
 consequence, students lost the feeling of pure-UNIX system's behaviour,
 so that had it's impact on didactic issues of using student's server.
   That could be fixed easily if UNIX sockets were used instead of
 internet-sockets, but for that time we had no reverse proxy with
 UNIX-sockets supported nor we had working twisted application,
 implementing HTTP-over-UNIX-socket protocol.
 - indeed, you will probably (dis)agree that HTTP in it's design, history of
 deployment, together with complications of tons of differently behaving
 HTTP-client implementations, etc, etc is NOT A PERFECT solution for
 protocol of interchanging with binary messages between two automated
 systems (remember the need for unnecessary escaping/unescaping? what does it
 bring to automated systems' dialogue? only unnecessary complexity, right?).
 - OK, it is not perfect, but it works and is widely adopted and
 accepted, but even then is it so ideal to be used everywhere as a versatile
 protocol?

So why is it not so useful to formalize the interface between the HTTP-server
and the application? CGI was an attempt and it showed, that while being
quite universal, it brings too much overhead to the whole process. That's
why there happened to appear FastCGI and it's emulations and followers.
FastCGI were accepted not for it's best design decisions, but for solving
the CGI problem.
Perhaps you, people, have strong arguments against WSGI at it's current state.
But I can't believe, that there can exist valuable arguments against the idea
of such interface in general.
If there are some, I am interested to know that.

PS: Not trying to start a flame war, ignore the post if you feel suspicious.

PPS: Please, people, understand that you have done a great work, invented
     (or just implemented?) some really useful and insightful approaches in
     the area. But it all may get lost among the alikes and may get lost in the
     history of the web development, if it will continue to be so specific and
     inflexible (without a real visible need). I will personally be so
unhappy for that
     happens.

From exarkun at divmod.com  Thu Dec  4 09:22:49 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Dec  4 09:23:07 2008
Subject: [Twisted-web] wsgi and twisted.web{,2} again
In-Reply-To: <a2c5ed3d0812040551o53bc7671vc3bfac44753dccab@mail.gmail.com>
Message-ID: <20081204142249.20272.1670434026.divmod.quotient.15586@ohm>

On Thu, 4 Dec 2008 17:51:20 +0400, Dot Fill <dotfill@gmail.com> wrote:
>I know, people on this list dislike WSGI as a matter of principle,
>so don't kick me into head before I have spoken the rest...

It seems you put a lot of thought into this.  I could argue with various
points that you've made, but I'll just skip to the end instead.  If you'd
like to contribute support to Twisted Web or Nevow for running in a WSGI
container, then we'll accept it and maintain it (with all of the usual
caveats about documentation, test coverage, etc).  In case there is any
confusion caused by the recent deprecation of Nevow's wsgi module, this
was done because that module didn't meet quality requirements, not because
we think there is no place for such functionality in Nevow (although from
an implementation perspective, it *would* be preferable if a Twisted Web
WSGI module could provide this feature for both Twisted Web *and* Nevow).

Due to the current roadmap for Twisted Web and Twisted Web2, I would not
encourage you to contribute Twisted Web2 WSGI support, though.

>Sorry for my English too.

Your English is great. :)

Jean-Paul

From foom at fuhm.net  Thu Dec  4 20:24:03 2008
From: foom at fuhm.net (James Y Knight)
Date: Thu Dec  4 20:24:11 2008
Subject: [Twisted-web] wsgi and twisted.web{,2} again
In-Reply-To: <20081204142249.20272.1670434026.divmod.quotient.15586@ohm>
References: <20081204142249.20272.1670434026.divmod.quotient.15586@ohm>
Message-ID: <6B3172C0-4E39-4459-BB6D-AEBAF398CD7E@fuhm.net>

On Dec 4, 2008, at 9:22 AM, Jean-Paul Calderone wrote:
> Due to the current roadmap for Twisted Web and Twisted Web2, I would  
> not
> encourage you to contribute Twisted Web2 WSGI support, though.

Web2 was written with the goal of allowing many protocols/deployment  
mechanisms to hook up to it: http, cgi, scgi, and maybe-working  
fastcgi are present. WSGI was not omitted because of any hatred of it,  
only because it was simply not done before plans changed.

Anyhow, I agree, it'd be really nice to have that flexibility ported  
back into twisted.web so you could deploy a t.web-based app on top of  
any server you like.

James

From listsin at integrateddevcorp.com  Thu Dec  4 21:13:04 2008
From: listsin at integrateddevcorp.com (s s)
Date: Thu Dec  4 21:13:40 2008
Subject: [Twisted-web] wsgi and twisted.web{,2} again
In-Reply-To: <6B3172C0-4E39-4459-BB6D-AEBAF398CD7E@fuhm.net>
References: <20081204142249.20272.1670434026.divmod.quotient.15586@ohm>
	<6B3172C0-4E39-4459-BB6D-AEBAF398CD7E@fuhm.net>
Message-ID: <14110504-A8C2-487C-97C1-E152E53E278C@integrateddevcorp.com>


On Dec 4, 2008, at 8:24 PM, James Y Knight wrote:

> On Dec 4, 2008, at 9:22 AM, Jean-Paul Calderone wrote:
>> Due to the current roadmap for Twisted Web and Twisted Web2, I  
>> would not
>> encourage you to contribute Twisted Web2 WSGI support, though.
>
> Web2 was written with the goal of allowing many protocols/deployment  
> mechanisms to hook up to it: http, cgi, scgi, and maybe-working  
> fastcgi are present. WSGI was not omitted because of any hatred of  
> it, only because it was simply not done before plans changed.

Speaking of "plans", is there, somewhere, some sort of plan for web2?

After seeing this thread, I went and looked at the roadmap for  
"Milestone Web2-Gold-Master" (http://twistedmatrix.com/trac/milestone/Web2-Gold-Master 
)  and saw that some of the tickets were three years old, many two  
years old, and none newer than 6 months ago.

Is there some "master plan for Web2" somewhere that I've just missed?

Thanks,

S


From maarten at treewalker.org  Thu Dec  4 21:26:57 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu Dec  4 21:27:38 2008
Subject: [Twisted-web] wsgi and twisted.web{,2} again
In-Reply-To: <14110504-A8C2-487C-97C1-E152E53E278C@integrateddevcorp.com>
References: <20081204142249.20272.1670434026.divmod.quotient.15586@ohm>
	<6B3172C0-4E39-4459-BB6D-AEBAF398CD7E@fuhm.net>
	<14110504-A8C2-487C-97C1-E152E53E278C@integrateddevcorp.com>
Message-ID: <200812050326.57863.maarten@treewalker.org>

On Friday 05 December 2008, s s wrote:

> Is there some "master plan for Web2" somewhere that I've just missed?

The short version is that the good bits of web2 will be merged into 
twisted.web and the web2 namespace will be phased out.

The full version is here:
  http://twistedmatrix.com/trac/wiki/TwistedWebPlan

Bye,
		Maarten


From listsin at integrateddevcorp.com  Thu Dec  4 21:39:42 2008
From: listsin at integrateddevcorp.com (s s)
Date: Thu Dec  4 21:40:18 2008
Subject: [Twisted-web] wsgi and twisted.web{,2} again
In-Reply-To: <200812050326.57863.maarten@treewalker.org>
References: <20081204142249.20272.1670434026.divmod.quotient.15586@ohm>
	<6B3172C0-4E39-4459-BB6D-AEBAF398CD7E@fuhm.net>
	<14110504-A8C2-487C-97C1-E152E53E278C@integrateddevcorp.com>
	<200812050326.57863.maarten@treewalker.org>
Message-ID: <E5238265-FD6E-4321-B8B8-B5EDC80A008D@integrateddevcorp.com>


On Dec 4, 2008, at 9:26 PM, Maarten ter Huurne wrote:

> On Friday 05 December 2008, s s wrote:
>
>> Is there some "master plan for Web2" somewhere that I've just missed?
>
> The short version is that the good bits of web2 will be merged into
> twisted.web and the web2 namespace will be phased out.
>
> The full version is here:
>  http://twistedmatrix.com/trac/wiki/TwistedWebPlan

Ahhhh, the plan!

Any idea when that plan was last updated, what's been done to move  
toward it, or what needs to be done to make it all happen?

Are the 15 remaining tickets in the:

	Milestone Web2-Gold-Master

	relevant and current or does this warrant a new, fresh milestone with  
current tickets reflecting the actual work that needs to be done?

Thanks,

S


From maarten at treewalker.org  Thu Dec  4 22:04:24 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu Dec  4 22:05:05 2008
Subject: [Twisted-web] wsgi and twisted.web{,2} again
In-Reply-To: <E5238265-FD6E-4321-B8B8-B5EDC80A008D@integrateddevcorp.com>
References: <20081204142249.20272.1670434026.divmod.quotient.15586@ohm>
	<200812050326.57863.maarten@treewalker.org>
	<E5238265-FD6E-4321-B8B8-B5EDC80A008D@integrateddevcorp.com>
Message-ID: <200812050404.24674.maarten@treewalker.org>

On Friday 05 December 2008, s s wrote:
> On Dec 4, 2008, at 9:26 PM, Maarten ter Huurne wrote:
> > The full version is here:
> >  http://twistedmatrix.com/trac/wiki/TwistedWebPlan
>
> Ahhhh, the plan!
>
> Any idea when that plan was last updated, what's been done to move
> toward it, or what needs to be done to make it all happen?

According to the Wiki, the plan wasn't significantly changed since it was 
written 8 months ago. As far as I know it's still accurate.

I don't know exactly what kind of work has been done and has to be done, I 
hope one of the developers can tell you.

Bye,
		Maarten


From exarkun at divmod.com  Thu Dec  4 22:25:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu Dec  4 22:25:29 2008
Subject: [Twisted-web] wsgi and twisted.web{,2} again
In-Reply-To: <E5238265-FD6E-4321-B8B8-B5EDC80A008D@integrateddevcorp.com>
Message-ID: <20081205032510.20272.1405015465.divmod.quotient.15902@ohm>

On Thu, 4 Dec 2008 21:39:42 -0500, s s <listsin@integrateddevcorp.com> wrote:
>
>On Dec 4, 2008, at 9:26 PM, Maarten ter Huurne wrote:
>>On Friday 05 December 2008, s s wrote:
>>>Is there some "master plan for Web2" somewhere that I've just missed?
>>
>>The short version is that the good bits of web2 will be merged into
>>twisted.web and the web2 namespace will be phased out.
>>
>>The full version is here:
>>  http://twistedmatrix.com/trac/wiki/TwistedWebPlan
>
>Ahhhh, the plan!
>
>Any idea when that plan was last updated, what's been done to move  toward 
>it, or what needs to be done to make it all happen?

It's current.  Work is being done.  Plenty is left to do.  Any assistance
will be greatly appreciated. :)

>Are the 15 remaining tickets in the:
>
>         Milestone Web2-Gold-Master
>
>         relevant and current or does this warrant a new, fresh milestone 
>with  current tickets reflecting the actual work that needs to be done?

The tickets aren't directly related to the plan described on TwistedWebPlan,
but they're not necessarily invalid.  If there are bugs in the implementation
of features in Twisted Web2 which are being ported to Twisted Web, they do
need to be fixed.

Since Twisted Web2 was such a radical approach to solving the problem (of
Twisted not having an awesome web server), we decided to use a milestone
to keep track of its progress.  Since we've decided to focus on improving
Twisted Web, no one has voiced the desire for a similar milestone to track
progress on that front.  A different query you could look at in the issue
tracker to see what's what might be this one:

http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&component=web&order=priority

And if there's something in Web2 that you'd like to see in Web, but for
which there isn't already a ticket, please do file one. :)

Jean-Paul

From waldemar.osuch at gmail.com  Tue Dec  9 00:38:01 2008
From: waldemar.osuch at gmail.com (Waldemar Osuch)
Date: Tue Dec  9 00:38:03 2008
Subject: [Twisted-web] twisted.web.wsgi usage example
Message-ID: <6fae95540812082138r39ec8d7by972cc7d834bd7642@mail.gmail.com>

Hi,
I'm trying to come up with an example on how to use the spanking new
twisted.web.wsgi
module.  Here it is.  Any comments?

8<--------------------------------------------------------------------------------------------

from twisted.internet import reactor
from twisted.application import service, internet
from twisted.web import server, static, wsgi
from twisted.python import threadpool


def wsgi_app(environ, start_response):
    status = '200 OK'
    response_headers = [('Content-type', 'text/plain')]
    start_response(status, response_headers)
    return ['Hello from twisted.web.wsgi']


class WSGIService(service.Service):
    def __init__(self, minPoolSize=5, maxPoolSize=20):
        self.pool = threadpool.ThreadPool(minPoolSize, maxPoolSize)

    def startService(self):
        self.pool.start()
        service.Service.startService(self)

    def stopService(self):
        self.pool.stop()
        service.Service.stopService(self)


application = service.Application('wsgi')

root = static.File("www/documents")
site = server.Site(root)
internet.TCPServer(8080, site).setServiceParent(application)

serv = WSGIService()
root.putChild('wsgi', wsgi.WSGIResource(reactor, serv.pool, wsgi_app))
serv.setServiceParent(application)

From phil at bubblehouse.org  Tue Dec  9 14:40:13 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Dec  9 14:40:30 2008
Subject: [Twisted-web] twisted.web.wsgi usage example
In-Reply-To: <6fae95540812082138r39ec8d7by972cc7d834bd7642@mail.gmail.com>
References: <6fae95540812082138r39ec8d7by972cc7d834bd7642@mail.gmail.com>
Message-ID: <FF76AB8F-6E0D-40AF-AD00-8975450415F3@bubblehouse.org>

Just because I've found myself doing this several times, you might  
give an example of how to run an existing WSGI application in twisted.

I would suggest Trac, since you can just import  
trac.web.main.dispatch_request and pass it as your WSGI application  
object, plus it's something that I know I often end up using in tandem  
with web projects.

-phil

On Dec 9, 2008, at 12:38 AM, Waldemar Osuch wrote:

> Hi,
> I'm trying to come up with an example on how to use the spanking new
> twisted.web.wsgi
> module.  Here it is.  Any comments?
>
> 8 
> < 
> --------------------------------------------------------------------------------------------
>
> from twisted.internet import reactor
> from twisted.application import service, internet
> from twisted.web import server, static, wsgi
> from twisted.python import threadpool
>
>
> def wsgi_app(environ, start_response):
>    status = '200 OK'
>    response_headers = [('Content-type', 'text/plain')]
>    start_response(status, response_headers)
>    return ['Hello from twisted.web.wsgi']
>
>
> class WSGIService(service.Service):
>    def __init__(self, minPoolSize=5, maxPoolSize=20):
>        self.pool = threadpool.ThreadPool(minPoolSize, maxPoolSize)
>
>    def startService(self):
>        self.pool.start()
>        service.Service.startService(self)
>
>    def stopService(self):
>        self.pool.stop()
>        service.Service.stopService(self)
>
>
> application = service.Application('wsgi')
>
> root = static.File("www/documents")
> site = server.Site(root)
> internet.TCPServer(8080, site).setServiceParent(application)
>
> serv = WSGIService()
> root.putChild('wsgi', wsgi.WSGIResource(reactor, serv.pool, wsgi_app))
> serv.setServiceParent(application)
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From exarkun at divmod.com  Tue Dec  9 16:19:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Dec  9 16:19:28 2008
Subject: [Twisted-web] twisted.web.wsgi usage example
In-Reply-To: <FF76AB8F-6E0D-40AF-AD00-8975450415F3@bubblehouse.org>
Message-ID: <20081209211910.20272.1345699771.divmod.quotient.18615@ohm>

On Tue, 9 Dec 2008 14:40:13 -0500, Phil Christensen <phil@bubblehouse.org> wrote:
>Just because I've found myself doing this several times, you might  give an 
>example of how to run an existing WSGI application in twisted.
>
>I would suggest Trac, since you can just import 
>trac.web.main.dispatch_request and pass it as your WSGI application  object, 
>plus it's something that I know I often end up using in tandem  with web 
>projects.

This is pretty easy:

    twistd web --wsgi trac.web.main.dispatch_request

>
>-phil
>
>On Dec 9, 2008, at 12:38 AM, Waldemar Osuch wrote:
>>Hi,
>>I'm trying to come up with an example on how to use the spanking new
>>twisted.web.wsgi
>>module.  Here it is.  Any comments?

Just one, I think

>>
>>8 < 
>>--------------------------------------------------------------------------------------------
>>
>>from twisted.internet import reactor
>>from twisted.application import service, internet
>>from twisted.web import server, static, wsgi
>>from twisted.python import threadpool
>>
>>
>>def wsgi_app(environ, start_response):
>>    status = '200 OK'
>>    response_headers = [('Content-type', 'text/plain')]
>>    start_response(status, response_headers)
>>    return ['Hello from twisted.web.wsgi']
>>
>>
>>class WSGIService(service.Service):
>>    def __init__(self, minPoolSize=5, maxPoolSize=20):
>>        self.pool = threadpool.ThreadPool(minPoolSize, maxPoolSize)
>>
>>    def startService(self):
>>        self.pool.start()
>>        service.Service.startService(self)
>>
>>    def stopService(self):
>>        self.pool.stop()
>>        service.Service.stopService(self)
>>

self.pool.stop() will block until all the threads in the pool finish whatever
job they're on.  This is probably okay for now, but if Twisted's WSGI server
ever changes to deliver request body bytes to WSGI applications incrementally
then this could cause a deadlock.  In order to fix this, there needs to be a
way to shut down the threadpool without blocking the reactor.  This would
make a good enhancement request for ThreadPool.  Another approach would be to
stop the HTTP port so that new requests cannot be made and then wait for all
existing requests to finish before trying to stop the pool.

>>
>>application = service.Application('wsgi')
>>
>>root = static.File("www/documents")
>>site = server.Site(root)
>>internet.TCPServer(8080, site).setServiceParent(application)
>>
>>serv = WSGIService()
>>root.putChild('wsgi', wsgi.WSGIResource(reactor, serv.pool, wsgi_app))
>>serv.setServiceParent(application)
>>

Jean-Paul

From general at vultaire.net  Wed Dec 10 21:28:34 2008
From: general at vultaire.net (Paul Goins)
Date: Wed Dec 10 21:28:37 2008
Subject: [Twisted-web] finger tutorial: problems rewriting finger08.py to
 use inlineCallbacks
Message-ID: <54789.219.101.239.101.1228962514.squirrel@mail.vultaire.net>

I'm having problems with using inlineCallbacks in the finger tutorial. 
I've used them successfully in some other test programs, but in this case
I really don't know what I'm doing wrong.

Here's the FingerProtocol code from the finger tutorial:

class FingerProtocol(basic.LineReceiver):
    def lineReceived(self, user):
        self.factory.getUser(user) \
            .addErrback(lambda _: "Internal error in server") \
            .addCallback(lambda m:
                             (self.transport.write(m + "\r\n"),
                              self.transport.loseConnection()))

And here's my modified version:

class FingerProtocol(basic.LineReceiver):
    @defer.inlineCallbacks
    def lineReceived(self, user):
        try:
            data = yield self.factory.getUser(user)
        except Exception:
            data = "Internal error in server"
        self.transport.write(data + "\r\n")
        self.transport.loseConnection()

For some reason, in my version, the connection is getting terminated
before any writes can take place.  Even if I comment out the
loseConnection line, still nothing goes across to the client and the
connection still gets terminated.

Could anyone tell me where I'm going wrong on this?  Thanks in advance.

- Paul Goins



From exarkun at divmod.com  Wed Dec 10 22:37:01 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed Dec 10 22:37:22 2008
Subject: [Twisted-web] finger tutorial: problems rewriting finger08.py
	to use inlineCallbacks
In-Reply-To: <54789.219.101.239.101.1228962514.squirrel@mail.vultaire.net>
Message-ID: <20081211033701.20272.2955920.divmod.quotient.19310@ohm>

On Thu, 11 Dec 2008 11:28:34 +0900 (JST), Paul Goins <general@vultaire.net> wrote:
>I'm having problems with using inlineCallbacks in the finger tutorial.
>I've used them successfully in some other test programs, but in this case
>I really don't know what I'm doing wrong.
>
>Here's the FingerProtocol code from the finger tutorial:
>
>class FingerProtocol(basic.LineReceiver):
>    def lineReceived(self, user):
>        self.factory.getUser(user) \
>            .addErrback(lambda _: "Internal error in server") \
>            .addCallback(lambda m:
>                             (self.transport.write(m + "\r\n"),
>                              self.transport.loseConnection()))
>
>And here's my modified version:
>
>class FingerProtocol(basic.LineReceiver):
>    @defer.inlineCallbacks
>    def lineReceived(self, user):
>        try:
>            data = yield self.factory.getUser(user)
>        except Exception:
>            data = "Internal error in server"
>        self.transport.write(data + "\r\n")
>        self.transport.loseConnection()
>
>For some reason, in my version, the connection is getting terminated
>before any writes can take place.  Even if I comment out the
>loseConnection line, still nothing goes across to the client and the
>connection still gets terminated.
>
>Could anyone tell me where I'm going wrong on this?  Thanks in advance.

By decorating your lineReceived with inlineCallbacks, you made it return
a Deferred.  If lineReceived returns non-None, the protocol disconnects
itself.

One solution would be to put your inlineCallbacks-decorated generator
code into another function, call it from lineReceived, and discard the
return value.

This preserves a minor problem with your current implementation though,
which is that if a client sends you two lines and the Deferred returned
by the second call to getUser fires first, you'll write out the second
user's info and then close the connection.  This isn't a major flaw for
a finger server to have, since a client is only allowed to send you one
line, but it's something to keep in mind if you use inlineCallbacks in
a more complicated application.

Jean-Paul

From phil at bubblehouse.org  Fri Dec 12 16:02:25 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri Dec 12 16:02:46 2008
Subject: [Twisted-web] possible bug in t.web.wsgi
Message-ID: <6AC8C9B0-CA0E-41B3-9230-D24C250A13B9@bubblehouse.org>

Hi All,

I haven't opened a ticket for this because I'm not sure if it's a bug  
or not.

I found this in my WSGI code that I had copied from web2, and it looks  
like the current twisted.web.wsgi inherited the same usage.

Basically, the issue is with SERVER_PORT; in t.w.wsgi, around line  
171, the environ dictionary is created like this:

        self.environ = {
             'REQUEST_METHOD': request.method,
             'SCRIPT_NAME': '/' + '/'.join(request.prepath),
             'PATH_INFO': pathInfo,
             'QUERY_STRING': queryString,
             'CONTENT_TYPE': request.getHeader('content-type') or '',
             'CONTENT_LENGTH': request.getHeader('content-length') or  
'',
             'SERVER_NAME': request.getRequestHostname(),
             'SERVER_PORT': str(request.getHost().port),
             'SERVER_PROTOCOL': request.clientproto}

This means SERVER_PORT is always set to the 'real' port that the  
transport is using, not the port that was provided in the request. The  
port used in the request ends up appended to the end of SERVER_NAME.  
Several sources I've referenced indicate something like the following:

	SERVER_PORT
	Typically, Web servers listen to HTTP requests on port 80. However, a  
Web server can
	listen to any port that's not in use by another application. A CGI  
program can find
	out the port the Web server is serving HTTP requests by looking at  
the value of the
	SERVER_PORT environment variable. When displaying self-referencing  
hypertext links
	at runtime by examining the contents of SERVER_NAME, be sure to  
append the port
	number of the Web server (typically port 80)  by concatenating it  
with the value of 	SERVER_PORT.

Which leads me to believe that SERVER_NAME should not have the port  
attached, and that SERVER_PORT should be the *requested* port, not the  
'real' port.

The end result of this is that WSGI apps break if run under a port- 
forwarding scenario, where the external port is different from the  
internal one, and where the code is using SERVER_PORT to construct URLs.

Let me know if this is the commonly accepted understanding of these  
variables, and I'll file a bug report.

-phil

From buchanan at library.tamu.edu  Mon Dec 15 18:11:05 2008
From: buchanan at library.tamu.edu (Sean Buchanan)
Date: Mon Dec 15 18:11:37 2008
Subject: [Twisted-web] ASN1_TIME_to_generalizedtime error on windows box
Message-ID: <49468FA5.4EBC.0021.0@lib-gw.tamu.edu>

installed:

  python 2.4.5
  twisted 8.1.0
  nevow 0.9.32

error:

  when i installed nevow and everytime i run a .tac i get..

  python.exe - Entry Point Not Found

  The procedure entry point ASN1_TIME_to_generalizedtime could not be located in libeay32.dll

version of libeay32.dll  in c:\windows\system32\  777kb 09 July 2008 8:05a

  i must be missing something..   where do i look..  i have googled and scanned archives for past 2 years..

thx for help..

- cheers =)


From exarkun at divmod.com  Mon Dec 15 20:32:41 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon Dec 15 20:32:59 2008
Subject: [Twisted-web] ASN1_TIME_to_generalizedtime error on windows box
In-Reply-To: <49468FA5.4EBC.0021.0@lib-gw.tamu.edu>
Message-ID: <20081216013241.20272.759758232.divmod.quotient.21569@ohm>

On Mon, 15 Dec 2008 17:11:05 -0600, Sean Buchanan <buchanan@library.tamu.edu> wrote:
>installed:
>
>  python 2.4.5
>  twisted 8.1.0
>  nevow 0.9.32
>
>error:
>
>  when i installed nevow and everytime i run a .tac i get..
>
>  python.exe - Entry Point Not Found
>
>  The procedure entry point ASN1_TIME_to_generalizedtime could not be located in libeay32.dll
>
>version of libeay32.dll  in c:\windows\system32\  777kb 09 July 2008 8:05a
>
>  i must be missing something..   where do i look..  i have googled and scanned archives for past 2 years..
>
>thx for help..
>

This is a pyOpenSSL problem, not a Twisted problem.  I suggest the pyOpenSSL
mailing list, <http://sourceforge.net/mail/?group_id=31249>.

Jean-Paul

From radudragusin at gmail.com  Mon Dec 15 22:31:45 2008
From: radudragusin at gmail.com (Radu Dragusin)
Date: Mon Dec 15 22:31:51 2008
Subject: [Twisted-web] How can I change the HTTP request to avoid gzip
Message-ID: <b657efa80812151931y4d0dacdv3aee3fec51eaf007@mail.gmail.com>

I have a HTTP Proxy made with twisted.web and want to change the request
that the browser sends to the Proxy such that I erase the value of the
'accept-encoding' key from 'gzip,deflate' to ' '.

I use the example from the Tisted Book:

By adding the overriden process method in WordCountProxyRequest I can get
the request header but have found no way to set a key, value pair.
I want make the server think that the browser does not support gzip because
twisted seems to not support gzip as the response from www.google.com and
many (but not all) sites appears still encoded. www.dpreview.com seems not
to gzip the response, and so the resonse is processed correctly.

What can I do to either correctly decode gzip responses or modify the
'accept-encoding' value to nothing so the server does not compress the
response?

Thank you!
*Example 4-8. wordcountproxy.py*

import sgmllib, re
from twisted.web import proxy, http
import sys
from twisted.python import log
log.startLogging(sys.stdout)

WEB_PORT =3D 8000
PROXY_PORT =3D 8001

class WordParser(sgmllib.SGMLParser):
    def __init__(self):
        sgmllib.SGMLParser.__init__(self)
        self.chardata =3D []
        self.inBody =3D False

    def start_body(self, attrs):
        self.inBody =3D True

    def end_body(self):
        self.inBody =3D False

    def handle_data(self, data):
        if self.inBody:
            self.chardata.append(data)

    def getWords(self):
        # extract words
        wordFinder =3D re.compile(r'\w*')
        words =3D wordFinder.findall("".join(self.chardata))
        words =3D filter(lambda word: word.strip( ), words)
        print "WORDS ARE", words
        return words

class WordCounter(object):
    ignoredWords =3D "the a of in from to this that and or but is was be
can could i you they we at".split( )

    def __init__(self):
        self.words =3D {}

    def addWords(self, words):
        for word in words:
            word =3D word.lower( )
            if not word in self.ignoredWords:
                currentCount =3D self.words.get(word, 0)
                self.words[word] =3D currentCount + 1

class WordCountProxyClient(proxy.ProxyClient):
    def handleHeader(self, key, value):
        proxy.ProxyClient.handleHeader(self, key, value)
        if key.lower( ) =3D=3D "content-type":
            if value.split(';')[0] =3D=3D 'text/html':
                self.parser =3D WordParser( )

    def handleResponsePart(self, data):
        proxy.ProxyClient.handleResponsePart(self, data)
        if hasattr(self, 'parser'): self.parser.feed(data)


    def handleResponseEnd(self):
        proxy.ProxyClient.handleResponseEnd(self)
        if hasattr(self, 'parser'):
            self.parser.close( )
            self.father.wordCounter.addWords(self.parser.getWords( ))
            del(self.parser)

class WordCountProxyClientFactory(proxy.ProxyClientFactory):
    def buildProtocol(self, addr):
        client =3D proxy.ProxyClientFactory.buildProtocol(self, addr)
        # upgrade proxy.proxyClient object to WordCountProxyClient
        client.__class__ =3D WordCountProxyClient
        return client

class WordCountProxyRequest(proxy.ProxyRequest):
    protocols =3D {'http': WordCountProxyClientFactory}

    def __init__(self, wordCounter, *args):
        self.wordCounter =3D wordCounter
        proxy.ProxyRequest.__init__(self, *args)

*    def process(self):
        proxy.ProxyRequest.process(self)
        print "received_headers", proxy.ProxyRequest.getAllHeaders(self)*

class WordCountProxy(proxy.Proxy):
    def __init__(self, wordCounter):
        self.wordCounter =3D wordCounter
        proxy.Proxy.__init__(self)

    def requestFactory(self, *args):
        return WordCountProxyRequest(self.wordCounter, *args)

class WordCountProxyFactory(http.HTTPFactory):
    def __init__(self, wordCounter):
        self.wordCounter =3D wordCounter
        http.HTTPFactory.__init__(self)

    def buildProtocol(self, addr):
        protocol =3D WordCountProxy(self.wordCounter)
        return protocol

# classes for web reporting interface
class WebReportRequest(http.Request):
    def __init__(self, wordCounter, *args):
        self.wordCounter =3D wordCounter
        http.Request.__init__(self, *args)

    def process(self):
        self.setHeader("Content-Type", "text/html")
        words =3D self.wordCounter.words.items( )
        words.sort(lambda (w1, c1), (w2, c2): cmp(c2, c1))
        for word, count in words:
            self.write("<li>%s %s</li>" % (word, count))
        self.finish( )

class WebReportChannel(http.HTTPChannel):
    def __init__(self, wordCounter):
        self.wordCounter =3D wordCounter
        http.HTTPChannel.__init__(self)

    def requestFactory(self, *args):
        return WebReportRequest(self.wordCounter, *args)

class WebReportFactory(http.HTTPFactory):
    def __init__(self, wordCounter):
        self.wordCounter =3D wordCounter
        http.HTTPFactory.__init__(self)

    def buildProtocol(self, addr):
        return WebReportChannel(self.wordCounter)

if __name__ =3D=3D "__main__":
    from twisted.internet import reactor
    counter =3D WordCounter( )
    prox =3D WordCountProxyFactory(counter)
    reactor.listenTCP(PROXY_PORT, prox)
    reactor.listenTCP(WEB_PORT, WebReportFactory(counter))
    reactor.run( )



-- =

Radu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20081216/ee=
2bdc5e/attachment.htm
From exarkun at divmod.com  Tue Dec 16 07:20:56 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Dec 16 07:21:47 2008
Subject: [Twisted-web] How can I change the HTTP request to avoid gzip
In-Reply-To: <b657efa80812151931y4d0dacdv3aee3fec51eaf007@mail.gmail.com>
Message-ID: <20081216122056.20272.1291122364.divmod.quotient.21756@ohm>

On Tue, 16 Dec 2008 05:31:45 +0200, Radu Dragusin <radudragusin@gmail.com> wrote:
>I have a HTTP Proxy made with twisted.web and want to change the request
>that the browser sends to the Proxy such that I erase the value of the
>'accept-encoding' key from 'gzip,deflate' to ' '.
>
>I use the example from the Tisted Book:
>
>By adding the overriden process method in WordCountProxyRequest I can get
>the request header but have found no way to set a key, value pair.
>I want make the server think that the browser does not support gzip because
>twisted seems to not support gzip as the response from www.google.com and
>many (but not all) sites appears still encoded. www.dpreview.com seems not
>to gzip the response, and so the resonse is processed correctly.
>
>What can I do to either correctly decode gzip responses or modify the
>'accept-encoding' value to nothing so the server does not compress the
>response?
>
>Thank you!
>*Example 4-8. wordcountproxy.py*
>
>import sgmllib, re
>from twisted.web import proxy, http
>import sys
>from twisted.python import log
>log.startLogging(sys.stdout)
>
>WEB_PORT = 8000
>PROXY_PORT = 8001
>
>class WordParser(sgmllib.SGMLParser):
>    def __init__(self):
>        sgmllib.SGMLParser.__init__(self)
>        self.chardata = []
>        self.inBody = False
>
>    def start_body(self, attrs):
>        self.inBody = True
>
>    def end_body(self):
>        self.inBody = False
>
>    def handle_data(self, data):
>        if self.inBody:
>            self.chardata.append(data)
>
>    def getWords(self):
>        # extract words
>        wordFinder = re.compile(r'\w*')
>        words = wordFinder.findall("".join(self.chardata))
>        words = filter(lambda word: word.strip( ), words)
>        print "WORDS ARE", words
>        return words
>
>class WordCounter(object):
>    ignoredWords = "the a of in from to this that and or but is was be
>can could i you they we at".split( )
>
>    def __init__(self):
>        self.words = {}
>
>    def addWords(self, words):
>        for word in words:
>            word = word.lower( )
>            if not word in self.ignoredWords:
>                currentCount = self.words.get(word, 0)
>                self.words[word] = currentCount + 1
>
>class WordCountProxyClient(proxy.ProxyClient):
>    def handleHeader(self, key, value):
>        proxy.ProxyClient.handleHeader(self, key, value)

How about skipping it here?

>        if key.lower( ) == "content-type":
>            if value.split(';')[0] == 'text/html':
>                self.parser = WordParser( )
>
>    def handleResponsePart(self, data):
>        proxy.ProxyClient.handleResponsePart(self, data)
>        if hasattr(self, 'parser'): self.parser.feed(data)
>
>
>    def handleResponseEnd(self):
>        proxy.ProxyClient.handleResponseEnd(self)
>        if hasattr(self, 'parser'):
>            self.parser.close( )
>            self.father.wordCounter.addWords(self.parser.getWords( ))
>            del(self.parser)
>
>class WordCountProxyClientFactory(proxy.ProxyClientFactory):
>    def buildProtocol(self, addr):
>        client = proxy.ProxyClientFactory.buildProtocol(self, addr)
>        # upgrade proxy.proxyClient object to WordCountProxyClient
>        client.__class__ = WordCountProxyClient
>        return client
>
>class WordCountProxyRequest(proxy.ProxyRequest):
>    protocols = {'http': WordCountProxyClientFactory}
>
>    def __init__(self, wordCounter, *args):
>        self.wordCounter = wordCounter
>        proxy.ProxyRequest.__init__(self, *args)
>
>*    def process(self):
>        proxy.ProxyRequest.process(self)
>        print "received_headers", proxy.ProxyRequest.getAllHeaders(self)*
>
>class WordCountProxy(proxy.Proxy):
>    def __init__(self, wordCounter):
>        self.wordCounter = wordCounter
>        proxy.Proxy.__init__(self)
>
>    def requestFactory(self, *args):
>        return WordCountProxyRequest(self.wordCounter, *args)
>
>class WordCountProxyFactory(http.HTTPFactory):
>    def __init__(self, wordCounter):
>        self.wordCounter = wordCounter
>        http.HTTPFactory.__init__(self)
>
>    def buildProtocol(self, addr):
>        protocol = WordCountProxy(self.wordCounter)
>        return protocol
>
># classes for web reporting interface
>class WebReportRequest(http.Request):
>    def __init__(self, wordCounter, *args):
>        self.wordCounter = wordCounter
>        http.Request.__init__(self, *args)
>
>    def process(self):
>        self.setHeader("Content-Type", "text/html")
>        words = self.wordCounter.words.items( )
>        words.sort(lambda (w1, c1), (w2, c2): cmp(c2, c1))
>        for word, count in words:
>            self.write("<li>%s %s</li>" % (word, count))
>        self.finish( )
>
>class WebReportChannel(http.HTTPChannel):
>    def __init__(self, wordCounter):
>        self.wordCounter = wordCounter
>        http.HTTPChannel.__init__(self)
>
>    def requestFactory(self, *args):
>        return WebReportRequest(self.wordCounter, *args)
>
>class WebReportFactory(http.HTTPFactory):
>    def __init__(self, wordCounter):
>        self.wordCounter = wordCounter
>        http.HTTPFactory.__init__(self)
>
>    def buildProtocol(self, addr):
>        return WebReportChannel(self.wordCounter)
>
>if __name__ == "__main__":
>    from twisted.internet import reactor
>    counter = WordCounter( )
>    prox = WordCountProxyFactory(counter)
>    reactor.listenTCP(PROXY_PORT, prox)
>    reactor.listenTCP(WEB_PORT, WebReportFactory(counter))
>    reactor.run( )
>
>

Jean-Paul

From radudragusin at gmail.com  Tue Dec 16 08:57:18 2008
From: radudragusin at gmail.com (Radu Dragusin)
Date: Tue Dec 16 08:57:57 2008
Subject: [Twisted-web] How can I change the HTTP request to avoid gzip
In-Reply-To: <20081216122056.20272.1291122364.divmod.quotient.21756@ohm>
References: <b657efa80812151931y4d0dacdv3aee3fec51eaf007@mail.gmail.com>
	<20081216122056.20272.1291122364.divmod.quotient.21756@ohm>
Message-ID: <b657efa80812160557p44ceb437y44587f7f7a4442c1@mail.gmail.com>

On Tue, Dec 16, 2008 at 2:20 PM, Jean-Paul Calderone <exarkun@divmod.com>wr=
ote:

> On Tue, 16 Dec 2008 05:31:45 +0200, Radu Dragusin <radudragusin@gmail.com>
> wrote:
>
>> I have a HTTP Proxy made with twisted.web and want to change the request
>> that the browser sends to the Proxy such that I erase the value of the
>> 'accept-encoding' key from 'gzip,deflate' to ' '.
>>
>> I use the example from the Tisted Book:
>>
>> By adding the overriden process method in WordCountProxyRequest I can get
>> the request header but have found no way to set a key, value pair.
>> I want make the server think that the browser does not support gzip
>> because
>> twisted seems to not support gzip as the response from www.google.com and
>> many (but not all) sites appears still encoded. www.dpreview.com seems
>> not
>> to gzip the response, and so the resonse is processed correctly.
>>
>> What can I do to either correctly decode gzip responses or modify the
>> 'accept-encoding' value to nothing so the server does not compress the
>> response?
>>
>> Thank you!
>> *Example 4-8. wordcountproxy.py*
>>
>> import sgmllib, re
>> from twisted.web import proxy, http
>> import sys
>> from twisted.python import log
>> log.startLogging(sys.stdout)
>>
>> WEB_PORT =3D 8000
>> PROXY_PORT =3D 8001
>>
>> class WordParser(sgmllib.SGMLParser):
>>   def __init__(self):
>>       sgmllib.SGMLParser.__init__(self)
>>       self.chardata =3D []
>>       self.inBody =3D False
>>
>>   def start_body(self, attrs):
>>       self.inBody =3D True
>>
>>   def end_body(self):
>>       self.inBody =3D False
>>
>>   def handle_data(self, data):
>>       if self.inBody:
>>           self.chardata.append(data)
>>
>>   def getWords(self):
>>       # extract words
>>       wordFinder =3D re.compile(r'\w*')
>>       words =3D wordFinder.findall("".join(self.chardata))
>>       words =3D filter(lambda word: word.strip( ), words)
>>       print "WORDS ARE", words
>>       return words
>>
>> class WordCounter(object):
>>   ignoredWords =3D "the a of in from to this that and or but is was be
>> can could i you they we at".split( )
>>
>>   def __init__(self):
>>       self.words =3D {}
>>
>>   def addWords(self, words):
>>       for word in words:
>>           word =3D word.lower( )
>>           if not word in self.ignoredWords:
>>               currentCount =3D self.words.get(word, 0)
>>               self.words[word] =3D currentCount + 1
>>
>> class WordCountProxyClient(proxy.ProxyClient):
>>   def handleHeader(self, key, value):
>>       proxy.ProxyClient.handleHeader(self, key, value)
>>
>
> How about skipping it here?
>

If I use here the following:

print "[", key, ":", value,"]"

I get:
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Cache-Control :
no-cache, no-store, max-age=3D0, must-revalidate ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Pragma : no-cache ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Expires : Fri, 01
Jan 1990 00:00:00 GMT ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Date : Tue, 16 Dec
2008 13:37:21 GMT ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Content-Type :
text/javascript; charset=3DUTF-8 ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Set-Cookie :
GMAIL_STAT_3492=3DEXPIRED; Expires=3DMon, 15-Dec-2008 13:37:21 GMT; Path=3D=
/a/
dragusin.ro ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Set-Cookie :
GMAIL_IMP=3DEXPIRED; Expires=3DMon, 15-Dec-2008 13:37:21 GMT; Path=3D/a/
dragusin.ro ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Content-Encoding :
gzip ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [
X-Content-Type-Options : nosniff ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Content-Length :
14340 ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Server : GFE/1.3 ]
2008-12-16 15:37:21+0200 [WordCountProxyClient,client] [ Connection : Close
]
2008-12-16 15:37:22+0200 [WordCountProxyClient,client] [ Cache-Control :
private, max-age=3D0 ]
2008-12-16 15:37:22+0200 [WordCountProxyClient,client] [ Date : Tue, 16 Dec
2008 13:37:21 GMT ]
2008-12-16 15:37:22+0200 [WordCountProxyClient,client] [ Expires : -1 ]
2008-12-16 15:37:22+0200 [WordCountProxyClient,client] [ Content-Type :
text/html; charset=3DUTF-8 ]
2008-12-16 15:37:22+0200 [WordCountProxyClient,client] [ Content-Encoding :
gzip ]
2008-12-16 15:37:22+0200 [WordCountProxyClient,client] [ Server : gws ]
2008-12-16 15:37:22+0200 [WordCountProxyClient,client] [ Content-Length :
2597 ]
2008-12-16 15:37:22+0200 [WordCountProxyClient,client] [ Connection : Close
]

So that is the response header.
I need to override the request header, the one that the browser sends to the
proxy server.
See below:


>
>
>        if key.lower( ) =3D=3D "content-type":
>>           if value.split(';')[0] =3D=3D 'text/html':
>>               self.parser =3D WordParser( )
>>
>>   def handleResponsePart(self, data):
>>       proxy.ProxyClient.handleResponsePart(self, data)
>>       if hasattr(self, 'parser'): self.parser.feed(data)
>>
>>
>>   def handleResponseEnd(self):
>>       proxy.ProxyClient.handleResponseEnd(self)
>>       if hasattr(self, 'parser'):
>>           self.parser.close( )
>>           self.father.wordCounter.addWords(self.parser.getWords( ))
>>           del(self.parser)
>>
>> class WordCountProxyClientFactory(proxy.ProxyClientFactory):
>>   def buildProtocol(self, addr):
>>       client =3D proxy.ProxyClientFactory.buildProtocol(self, addr)
>>       # upgrade proxy.proxyClient object to WordCountProxyClient
>>       client.__class__ =3D WordCountProxyClient
>>       return client
>>
>> class WordCountProxyRequest(proxy.ProxyRequest):
>>   protocols =3D {'http': WordCountProxyClientFactory}
>>
>>   def __init__(self, wordCounter, *args):
>>       self.wordCounter =3D wordCounter
>>       proxy.ProxyRequest.__init__(self, *args)
>>
>> *    def process(self):
>>       proxy.ProxyRequest.process(self)
>>       print "received_headers", proxy.ProxyRequest.getAllHeaders(self)*
>
>
the print above prints:

received_headers: {'accept-language': 'en-us,en;q=3D0.5', 'accept-encoding':
'gzip,deflate', 'keep-alive': '300', 'accept':
'text/html,application/xhtml+xml,application/xml;q=3D0.9,*/*;q=3D0.8',
'user-agent': 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.4)
Gecko/2008111318 Ubuntu/8.10 (intrepid) Firefox/3.0.4', 'accept-charset':
'ISO-8859-1,utf-8;q=3D0.7,*;q=3D0.7', 'host': 'www.google.com', 'cookie':
'PREF=3DID=3Dcfb3eb179de0c1e6:LD=3Den:NR=3D100:CR=3D2:TM=3D1228315308:LM=3D=
1229032156:GM=3D1:S=3DImAuEufbnV6S7BAz;
NID=3D17=3DlOVMiFLculcrfN-zUO7xxFTTUFzqQqaHOFHcG_BDmYFX8QKYbMoo7GrDoYH-8ASP=
BlVijG_Hstp7HSDQ_8WQexHPjwz6g_7ZVpBhwmh3vkKuO3jpf9dnzrnWthcW1mGh;
S=3Dphotos_html=3D6ScUGfd699g4Xuuh0FeizA; TZ=3D-120', 'cache-control':
'max-age=3D0', 'proxy-connection': 'keep-alive'}

these are the values I want to modify, the 'accept-encoding', to be
specific. How can I do it?

Thank you!



> class WordCountProxy(proxy.Proxy):
>>   def __init__(self, wordCounter):
>>       self.wordCounter =3D wordCounter
>>       proxy.Proxy.__init__(self)
>>
>>   def requestFactory(self, *args):
>>       return WordCountProxyRequest(self.wordCounter, *args)
>>
>> class WordCountProxyFactory(http.HTTPFactory):
>>   def __init__(self, wordCounter):
>>       self.wordCounter =3D wordCounter
>>       http.HTTPFactory.__init__(self)
>>
>>   def buildProtocol(self, addr):
>>       protocol =3D WordCountProxy(self.wordCounter)
>>       return protocol
>>
>> # classes for web reporting interface
>> class WebReportRequest(http.Request):
>>   def __init__(self, wordCounter, *args):
>>       self.wordCounter =3D wordCounter
>>       http.Request.__init__(self, *args)
>>
>>   def process(self):
>>       self.setHeader("Content-Type", "text/html")
>>       words =3D self.wordCounter.words.items( )
>>       words.sort(lambda (w1, c1), (w2, c2): cmp(c2, c1))
>>       for word, count in words:
>>           self.write("<li>%s %s</li>" % (word, count))
>>       self.finish( )
>>
>> class WebReportChannel(http.HTTPChannel):
>>   def __init__(self, wordCounter):
>>       self.wordCounter =3D wordCounter
>>       http.HTTPChannel.__init__(self)
>>
>>   def requestFactory(self, *args):
>>       return WebReportRequest(self.wordCounter, *args)
>>
>> class WebReportFactory(http.HTTPFactory):
>>   def __init__(self, wordCounter):
>>       self.wordCounter =3D wordCounter
>>       http.HTTPFactory.__init__(self)
>>
>>   def buildProtocol(self, addr):
>>       return WebReportChannel(self.wordCounter)
>>
>> if __name__ =3D=3D "__main__":
>>   from twisted.internet import reactor
>>   counter =3D WordCounter( )
>>   prox =3D WordCountProxyFactory(counter)
>>   reactor.listenTCP(PROXY_PORT, prox)
>>   reactor.listenTCP(WEB_PORT, WebReportFactory(counter))
>>   reactor.run( )
>>
>>
>>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



-- =

Radu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20081216/da=
b51661/attachment-0001.htm
From exarkun at divmod.com  Tue Dec 16 09:25:52 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Dec 16 09:26:13 2008
Subject: [Twisted-web] How can I change the HTTP request to avoid gzip
In-Reply-To: <b657efa80812160557p44ceb437y44587f7f7a4442c1@mail.gmail.com>
Message-ID: <20081216142552.20272.100806881.divmod.quotient.21795@ohm>

On Tue, 16 Dec 2008 15:57:18 +0200, Radu Dragusin <radudragusin@gmail.com> wrote:
>On Tue, Dec 16, 2008 at 2:20 PM, Jean-Paul Calderone <exarkun@divmod.com>wrote:
>
>> On Tue, 16 Dec 2008 05:31:45 +0200, Radu Dragusin <radudragusin@gmail.com>
>> wrote:
>>
> [snip]
>>>
>>> class WordCountProxyRequest(proxy.ProxyRequest):
>>>   protocols = {'http': WordCountProxyClientFactory}
>>>
>>>   def __init__(self, wordCounter, *args):
>>>       self.wordCounter = wordCounter
>>>       proxy.ProxyRequest.__init__(self, *args)
>>>
>>> *    def process(self):
>>>       proxy.ProxyRequest.process(self)
>>>       print "received_headers", proxy.ProxyRequest.getAllHeaders(self)*
>>
>>
>the print above prints:
>
>received_headers: {'accept-language': 'en-us,en;q=0.5', 'accept-encoding':
>'gzip,deflate', 'keep-alive': '300', 'accept':
>'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
>'user-agent': 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.4)
>Gecko/2008111318 Ubuntu/8.10 (intrepid) Firefox/3.0.4', 'accept-charset':
>'ISO-8859-1,utf-8;q=0.7,*;q=0.7', 'host': 'www.google.com', 'cookie':
>'PREF=ID=cfb3eb179de0c1e6:LD=en:NR=100:CR=2:TM=1228315308:LM=1229032156:GM=1:S=ImAuEufbnV6S7BAz;
>NID=17=lOVMiFLculcrfN-zUO7xxFTTUFzqQqaHOFHcG_BDmYFX8QKYbMoo7GrDoYH-8ASPBlVijG_Hstp7HSDQ_8WQexHPjwz6g_7ZVpBhwmh3vkKuO3jpf9dnzrnWthcW1mGh;
>S=photos_html=6ScUGfd699g4Xuuh0FeizA; TZ=-120', 'cache-control':
>'max-age=0', 'proxy-connection': 'keep-alive'}
>
>these are the values I want to modify, the 'accept-encoding', to be
>specific. How can I do it?

Request has a received_headers attribute which refers to a dictionary.  You
can delete the "accept" key from it.  Make sure you do it before you call
the base process method, though:

    def process(self):
        try:
            del self.received_headers['accept']
        except KeyError:
            pass
        proxy.ProxyRequest.process(self)

Or, in Twisted 8.2, you can use a slightly better headers API:

    def process(self):
        self.requestHeaders.removeHeader('accept')
        proxy.ProxyRequest.process(self)

Jean-Paul

From radudragusin at gmail.com  Tue Dec 16 09:54:17 2008
From: radudragusin at gmail.com (Radu Dragusin)
Date: Tue Dec 16 09:54:52 2008
Subject: [Twisted-web] How can I change the HTTP request to avoid gzip
In-Reply-To: <20081216142552.20272.100806881.divmod.quotient.21795@ohm>
References: <b657efa80812160557p44ceb437y44587f7f7a4442c1@mail.gmail.com>
	<20081216142552.20272.100806881.divmod.quotient.21795@ohm>
Message-ID: <b657efa80812160654k225efe20g219eb51acd307c84@mail.gmail.com>

I deleted the 'accept-encoding' key as you said and it worked. No more gzip.

Thread solved.
Thank you!


> Request has a received_headers attribute which refers to a dictionary.  Y=
ou
> can delete the "accept" key from it.  Make sure you do it before you call
> the base process method, though:
>
>   def process(self):
>       try:
>           del self.received_headers['accept']
>       except KeyError:
>           pass
>       proxy.ProxyRequest.process(self)
>
> Or, in Twisted 8.2, you can use a slightly better headers API:
>
>   def process(self):
>       self.requestHeaders.removeHeader('accept')
>       proxy.ProxyRequest.process(self)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>


-- =

Radu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20081216/31=
e67f65/attachment.htm
From abdulwahid at gmail.com  Tue Dec 16 10:07:41 2008
From: abdulwahid at gmail.com (Abdul-Wahid Paterson)
Date: Tue Dec 16 10:07:44 2008
Subject: [Twisted-web] Finding memory leaks in Nevow/Twisted
Message-ID: <995fcdb00812160707y140b4b7fxb6fc21b410166ad2@mail.gmail.com>

Hi

I have managed to write my nevow/twisted site. I am using a lot of Athena
elements on my site and they are all working well from a functional point of
view. However, the Athena elements are eating up RAM and as I leave things
running the Twisted process slowly consumes more and more RAM until the
process dies.

This only happens for the pages with Athena elements which suggests that
something isn't been cleaned up when AJAX methods are being called.

Can anyone suggest a possible cause? Or what I really need is a suggestion
in how to track down the memory leak. Is there a way of doing memory
profiling to find the culprit?

Any advice is welcomed.

AW
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20081216/a9=
a20412/attachment.htm
From exarkun at divmod.com  Tue Dec 16 10:22:40 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Dec 16 10:22:59 2008
Subject: [Twisted-web] Finding memory leaks in Nevow/Twisted
In-Reply-To: <995fcdb00812160707y140b4b7fxb6fc21b410166ad2@mail.gmail.com>
Message-ID: <20081216152240.20272.1693705796.divmod.quotient.21815@ohm>

On Tue, 16 Dec 2008 18:07:41 +0300, Abdul-Wahid Paterson <abdulwahid@gmail.com> wrote:
>Hi
>
>I have managed to write my nevow/twisted site. I am using a lot of Athena
>elements on my site and they are all working well from a functional point of
>view. However, the Athena elements are eating up RAM and as I leave things
>running the Twisted process slowly consumes more and more RAM until the
>process dies.
>
>This only happens for the pages with Athena elements which suggests that
>something isn't been cleaned up when AJAX methods are being called.
>
>Can anyone suggest a possible cause? Or what I really need is a suggestion
>in how to track down the memory leak. Is there a way of doing memory
>profiling to find the culprit?
>

I've found http://guppy-pe.sourceforge.net/ to be useful for tracking down
memory issues.

Jean-Paul

From phil at bubblehouse.org  Tue Dec 16 10:23:16 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Dec 16 10:23:38 2008
Subject: [Twisted-web] Finding memory leaks in Nevow/Twisted
In-Reply-To: <995fcdb00812160707y140b4b7fxb6fc21b410166ad2@mail.gmail.com>
References: <995fcdb00812160707y140b4b7fxb6fc21b410166ad2@mail.gmail.com>
Message-ID: <989C4E38-B529-49B4-9663-FBD236ADC509@bubblehouse.org>

On Dec 16, 2008, at 10:07 AM, Abdul-Wahid Paterson wrote:
> I have managed to write my nevow/twisted site. I am using a lot of  
> Athena elements on my site and they are all working well from a  
> functional point of view. However, the Athena elements are eating up  
> RAM and as I leave things running the Twisted process slowly  
> consumes more and more RAM until the process dies.

The first thing would be to check that you're running at least Python  
2.5. Previous versions have garbage collection problems on long- 
running apps like a Twisted web app.

Athena-based apps should not inherently leak memory, but adding leaks  
of your own creation isn't too hard ;-)

If you are running 2.5 or later, you should try to reduce your app to  
the smallest possible test version that demonstrates the leak, and  
someone here can probably be of more help.

-phil

From exarkun at divmod.com  Tue Dec 16 10:39:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Dec 16 10:40:02 2008
Subject: [Twisted-web] Finding memory leaks in Nevow/Twisted
In-Reply-To: <989C4E38-B529-49B4-9663-FBD236ADC509@bubblehouse.org>
Message-ID: <20081216153943.20272.1086025338.divmod.quotient.21821@ohm>

On Tue, 16 Dec 2008 10:23:16 -0500, Phil Christensen <phil@bubblehouse.org> wrote:
>On Dec 16, 2008, at 10:07 AM, Abdul-Wahid Paterson wrote:
>>I have managed to write my nevow/twisted site. I am using a lot of  Athena 
>>elements on my site and they are all working well from a  functional point 
>>of view. However, the Athena elements are eating up  RAM and as I leave 
>>things running the Twisted process slowly  consumes more and more RAM until 
>>the process dies.
>
>The first thing would be to check that you're running at least Python  2.5. 
>Previous versions have garbage collection problems on long- running apps 
>like a Twisted web app.

I think this is an overstatement of the memory allocation issues in Python
2.4 and older. :)  Python 2.5 does a better job of backing off from peak
allocation, but it's entirely possible to have a long running Python 2.4
process which doesn't grow in memory usage without bounds.  I have a Python
2.4 server which often runs for months at a time and has stable memory
usage - at the moment, it's been running since Nov 7 and is using 133MB of
memory, a size it reached within a couple hours of starting up.

Jean-Paul

From abdulwahid at gmail.com  Tue Dec 16 11:02:00 2008
From: abdulwahid at gmail.com (Abdul-Wahid Paterson)
Date: Tue Dec 16 11:02:07 2008
Subject: [Twisted-web] Finding memory leaks in Nevow/Twisted
In-Reply-To: <989C4E38-B529-49B4-9663-FBD236ADC509@bubblehouse.org>
References: <995fcdb00812160707y140b4b7fxb6fc21b410166ad2@mail.gmail.com>
	<989C4E38-B529-49B4-9663-FBD236ADC509@bubblehouse.org>
Message-ID: <995fcdb00812160802j6f6b2d1fpeb764a0f33df3978@mail.gmail.com>

Hi,

I am using Python 2.5.

I will try to use guppy as suggested in another post to so if it will help.
Otherwise yes, I will try to reduce it to the smallest possible code to
demonstrate the leak. At the moment the code is a bit complex so is hard to
track down.

Thanks for the help.

AW



On Tue, Dec 16, 2008 at 6:23 PM, Phil Christensen <phil@bubblehouse.org>wro=
te:

> On Dec 16, 2008, at 10:07 AM, Abdul-Wahid Paterson wrote:
>
>> I have managed to write my nevow/twisted site. I am using a lot of Athena
>> elements on my site and they are all working well from a functional poin=
t of
>> view. However, the Athena elements are eating up RAM and as I leave thin=
gs
>> running the Twisted process slowly consumes more and more RAM until the
>> process dies.
>>
>
> The first thing would be to check that you're running at least Python 2.5.
> Previous versions have garbage collection problems on long-running apps l=
ike
> a Twisted web app.
>
> Athena-based apps should not inherently leak memory, but adding leaks of
> your own creation isn't too hard ;-)
>
> If you are running 2.5 or later, you should try to reduce your app to the
> smallest possible test version that demonstrates the leak, and someone he=
re
> can probably be of more help.
>
> -phil
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20081216/32=
469f40/attachment.htm
From wthie at thiengineering.ch  Tue Dec 16 14:39:06 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue Dec 16 14:39:46 2008
Subject: [Twisted-web] Finding memory leaks in Nevow/Twisted
In-Reply-To: <995fcdb00812160802j6f6b2d1fpeb764a0f33df3978@mail.gmail.com>
References: <995fcdb00812160707y140b4b7fxb6fc21b410166ad2@mail.gmail.com>	<989C4E38-B529-49B4-9663-FBD236ADC509@bubblehouse.org>
	<995fcdb00812160802j6f6b2d1fpeb764a0f33df3978@mail.gmail.com>
Message-ID: <494803DA.2060300@thiengineering.ch>

Hi

I was bitten by the same problem and went so far to track down all the 
fishy cycles which easily can be created. Most of the cycles I detected 
were multi-object cycles which were created by me just storing 
references to objects to have them handy. Certain types of cycles cannot 
be broken by the gc, you get a runaway situation either in Python24 or 
Python25. My code now runs without problems for months serving more than 
10k users a day providing a card gaming environment.

Things to check:
- the object hierarchy on the server and the client should be in sync, 
if not detach might not work correctly

- do you use stateful LivePages?
if so, check the toremember list in the request if its growing ad libidum

- do you use guard/sessions?
if so, be careful with the session/mind object and what you store in mind

But without seeing your code it's close to impossible to give you more 
than hints.

I include some code which I wrote to peek into my running server with a 
manhole connection. dumpobjects is loosely based on several Python 
snippets and might not win a contest in programming but it helps to 
track the number of objects of certain types in the running system when 
used on the commandline from inside your server.

HTH, Werner

To create a manhole in the same process you started with your .tac file 
use the following code:

---------------------------------------------------------------
def ManholeFactory(namespace, **passwords):
   realm = manhole_ssh.TerminalRealm()

   def getManhole(_):
     return manhole.Manhole(namespace)

   realm.chainedProtocolFactory.protocolFactory = getManhole
   p = portal.Portal(realm)

p.registerChecker(checkers.InMemoryUsernamePasswordDatabaseDontUse(**passwords))
   f = manhole_ssh.ConchFactory(p)
   return f

console = ManholeFactory(globals(), admin='admin')
internet.TCPServer(2222, console, 
interface='localhost').setServiceParent(application)
---------------------------------------------------------------

exc = [
   "function",
   "type",
   "list",
   "dict",
   "tuple",
   "wrapper_descriptor",
   "module",
   "method_descriptor",
   "member_descriptor",
   "instancemethod",
   "builtin_function_or_method",
   "frame",
   "classmethod",
   "classmethod_descriptor",
   "_Environ",
   "MemoryError",
   "_Printer",
   "_Helper",
   "getset_descriptor",
   "weakreaf"
]

inc = [
   'YourObject_One',
   'YourObject_Two'
]

prev = {}

def dumpObjects(delta=True, limit=0, include=inc, exclude=[]):
   global prev
   if include != [] and exclude != []:
     print 'cannot use include and exclude at the same time'
     return
   print 'working with:'
   print '   delta: ', delta
   print '   limit: ', limit
   print ' include: ', include
   print ' exclude: ', exclude
   objects = {}
   gc.collect()
   oo = gc.get_objects()
   for o in oo:
     if getattr(o, "__class__", None):
       name = o.__class__.__name__
       if ((exclude == [] and include == [])       or \
           (exclude != [] and name not in exclude) or \
           (include != [] and name in include)):
         objects[name] = objects.get(name, 0) + 1
##    if more:
##      print o
   pk = prev.keys()
   pk.sort()
   names = objects.keys()
   names.sort()
   for name in names:
     if limit == 0 or objects[name] > limit:
       if not prev.has_key(name):
         prev[name] = objects[name]
       dt = objects[name] - prev[name]
       if delta or dt != 0:
         print '%0.6d -- %0.6d -- ' % (dt, objects[name]),  name
       prev[name] = objects[name]







Abdul-Wahid Paterson wrote:
> Hi,
> 
> I am using Python 2.5.
> 
> I will try to use guppy as suggested in another post to so if it will 
> help. Otherwise yes, I will try to reduce it to the smallest possible 
> code to demonstrate the leak. At the moment the code is a bit complex so 
> is hard to track down.
> 
> Thanks for the help.
> 
> AW
> 
> 
> 
> On Tue, Dec 16, 2008 at 6:23 PM, Phil Christensen <phil@bubblehouse.org 
> <mailto:phil@bubblehouse.org>> wrote:
> 
>     On Dec 16, 2008, at 10:07 AM, Abdul-Wahid Paterson wrote:
> 
>         I have managed to write my nevow/twisted site. I am using a lot
>         of Athena elements on my site and they are all working well from
>         a functional point of view. However, the Athena elements are
>         eating up RAM and as I leave things running the Twisted process
>         slowly consumes more and more RAM until the process dies.
> 
> 
>     The first thing would be to check that you're running at least
>     Python 2.5. Previous versions have garbage collection problems on
>     long-running apps like a Twisted web app.
> 
>     Athena-based apps should not inherently leak memory, but adding
>     leaks of your own creation isn't too hard ;-)
> 
>     If you are running 2.5 or later, you should try to reduce your app
>     to the smallest possible test version that demonstrates the leak,
>     and someone here can probably be of more help.
> 
>     -phil
> 
>     _______________________________________________
>     Twisted-web mailing list
>     Twisted-web@twistedmatrix.com <mailto:Twisted-web@twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

From abdulwahid at gmail.com  Wed Dec 17 00:41:11 2008
From: abdulwahid at gmail.com (Abdul-Wahid Paterson)
Date: Wed Dec 17 00:41:14 2008
Subject: [Twisted-web] Finding memory leaks in Nevow/Twisted
In-Reply-To: <494803DA.2060300@thiengineering.ch>
References: <995fcdb00812160707y140b4b7fxb6fc21b410166ad2@mail.gmail.com>
	<989C4E38-B529-49B4-9663-FBD236ADC509@bubblehouse.org>
	<995fcdb00812160802j6f6b2d1fpeb764a0f33df3978@mail.gmail.com>
	<494803DA.2060300@thiengineering.ch>
Message-ID: <995fcdb00812162141p4ca8cf81o7c4d1fec8a502bd@mail.gmail.com>

Werner,

Thanks for your post. Is very useful.

I am using Guard so that might be one place to start looking although I
personally didn't develop that part of the code. (Which kinda make me even
more suspicious).

The Manhole stuff looks interesting too. I will give that a go if I can't
find anything by disabling the Guard code.

Thanks again.

AW

On Tue, Dec 16, 2008 at 10:39 PM, Werner Thie <wthie@thiengineering.ch>wrot=
e:

> Hi
>
> I was bitten by the same problem and went so far to track down all the
> fishy cycles which easily can be created. Most of the cycles I detected w=
ere
> multi-object cycles which were created by me just storing references to
> objects to have them handy. Certain types of cycles cannot be broken by t=
he
> gc, you get a runaway situation either in Python24 or Python25. My code n=
ow
> runs without problems for months serving more than 10k users a day provid=
ing
> a card gaming environment.
>
> Things to check:
> - the object hierarchy on the server and the client should be in sync, if
> not detach might not work correctly
>
> - do you use stateful LivePages?
> if so, check the toremember list in the request if its growing ad libidum
>
> - do you use guard/sessions?
> if so, be careful with the session/mind object and what you store in mind
>
> But without seeing your code it's close to impossible to give you more th=
an
> hints.
>
> I include some code which I wrote to peek into my running server with a
> manhole connection. dumpobjects is loosely based on several Python snippe=
ts
> and might not win a contest in programming but it helps to track the numb=
er
> of objects of certain types in the running system when used on the
> commandline from inside your server.
>
> HTH, Werner
>
> To create a manhole in the same process you started with your .tac file u=
se
> the following code:
>
> ---------------------------------------------------------------
> def ManholeFactory(namespace, **passwords):
>  realm =3D manhole_ssh.TerminalRealm()
>
>  def getManhole(_):
>    return manhole.Manhole(namespace)
>
>  realm.chainedProtocolFactory.protocolFactory =3D getManhole
>  p =3D portal.Portal(realm)
>
>
> p.registerChecker(checkers.InMemoryUsernamePasswordDatabaseDontUse(**pass=
words))
>  f =3D manhole_ssh.ConchFactory(p)
>  return f
>
> console =3D ManholeFactory(globals(), admin=3D'admin')
> internet.TCPServer(2222, console,
> interface=3D'localhost').setServiceParent(application)
> ---------------------------------------------------------------
>
> exc =3D [
>  "function",
>  "type",
>  "list",
>  "dict",
>  "tuple",
>  "wrapper_descriptor",
>  "module",
>  "method_descriptor",
>  "member_descriptor",
>  "instancemethod",
>  "builtin_function_or_method",
>  "frame",
>  "classmethod",
>  "classmethod_descriptor",
>  "_Environ",
>  "MemoryError",
>  "_Printer",
>  "_Helper",
>  "getset_descriptor",
>  "weakreaf"
> ]
>
> inc =3D [
>  'YourObject_One',
>  'YourObject_Two'
> ]
>
> prev =3D {}
>
> def dumpObjects(delta=3DTrue, limit=3D0, include=3Dinc, exclude=3D[]):
>  global prev
>  if include !=3D [] and exclude !=3D []:
>    print 'cannot use include and exclude at the same time'
>    return
>  print 'working with:'
>  print '   delta: ', delta
>  print '   limit: ', limit
>  print ' include: ', include
>  print ' exclude: ', exclude
>  objects =3D {}
>  gc.collect()
>  oo =3D gc.get_objects()
>  for o in oo:
>    if getattr(o, "__class__", None):
>      name =3D o.__class__.__name__
>      if ((exclude =3D=3D [] and include =3D=3D [])       or \
>          (exclude !=3D [] and name not in exclude) or \
>          (include !=3D [] and name in include)):
>        objects[name] =3D objects.get(name, 0) + 1
> ##    if more:
> ##      print o
>  pk =3D prev.keys()
>  pk.sort()
>  names =3D objects.keys()
>  names.sort()
>  for name in names:
>    if limit =3D=3D 0 or objects[name] > limit:
>      if not prev.has_key(name):
>        prev[name] =3D objects[name]
>      dt =3D objects[name] - prev[name]
>      if delta or dt !=3D 0:
>        print '%0.6d -- %0.6d -- ' % (dt, objects[name]),  name
>      prev[name] =3D objects[name]
>
>
>
>
>
>
>
> Abdul-Wahid Paterson wrote:
>
>> Hi,
>>
>> I am using Python 2.5.
>>
>> I will try to use guppy as suggested in another post to so if it will
>> help. Otherwise yes, I will try to reduce it to the smallest possible co=
de
>> to demonstrate the leak. At the moment the code is a bit complex so is h=
ard
>> to track down.
>>
>> Thanks for the help.
>>
>> AW
>>
>>
>>
>> On Tue, Dec 16, 2008 at 6:23 PM, Phil Christensen <phil@bubblehouse.org<=
mailto:
>> phil@bubblehouse.org>> wrote:
>>
>>    On Dec 16, 2008, at 10:07 AM, Abdul-Wahid Paterson wrote:
>>
>>        I have managed to write my nevow/twisted site. I am using a lot
>>        of Athena elements on my site and they are all working well from
>>        a functional point of view. However, the Athena elements are
>>        eating up RAM and as I leave things running the Twisted process
>>        slowly consumes more and more RAM until the process dies.
>>
>>
>>    The first thing would be to check that you're running at least
>>    Python 2.5. Previous versions have garbage collection problems on
>>    long-running apps like a Twisted web app.
>>
>>    Athena-based apps should not inherently leak memory, but adding
>>    leaks of your own creation isn't too hard ;-)
>>
>>    If you are running 2.5 or later, you should try to reduce your app
>>    to the smallest possible test version that demonstrates the leak,
>>    and someone here can probably be of more help.
>>
>>    -phil
>>
>>    _______________________________________________
>>    Twisted-web mailing list
>>    Twisted-web@twistedmatrix.com <mailto:Twisted-web@twistedmatrix.com>
>>    http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web@twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20081217/cd=
d42b56/attachment.htm
From spongelavapaul at googlemail.com  Wed Dec 17 05:18:29 2008
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Wed Dec 17 05:19:08 2008
Subject: [Twisted-web] Athena IE lockup on page refresh
In-Reply-To: <48EC5F69.6080203@thiengineering.ch>
References: <1ff309e60809151123h518d1029w8004123185427aa1@mail.gmail.com>	<48CF5B6C.7030405@thiengineering.ch>	<20080916102200.GA23508@mithrandi.net>	<48CFC50A.5070503@thiengineering.ch>	<1ff309e60809160930u70f60fa1n6ff80b05b7f04bef@mail.gmail.com>	<48EB99DF.3070500@thiengineering.ch>
	<1ff309e60810071203u722b0c56i25ed988589d417c1@mail.gmail.com>
	<48EC5F69.6080203@thiengineering.ch>
Message-ID: <0D5379FA-0722-4EB8-8552-9B80ABA9A762@googlemail.com>

What is the current status of this fix please?

I have to find a fix for our athena app locking up in IE but I'm  
having difficulty following the comments in #2731 - am I right in  
thinking that the problem is fixed on the ie-onbeforeunload-2731-3  
branch but hasn't yet been applied to the trunk?

I'm running version 0.9.31 and while I'd like to upgrade eventually to  
get Safari support, I really need a fix for IE7 without changing too  
much.

Paul.

On 8 Oct 2008, at 08:21, Werner Thie wrote:

> Filed my proposed fix with attached unified diff as response to  
> Haralds ticket.
>
> For those interested the fix also works when used at application  
> code level, just copy the line
>
> window.document.body.onbeforeunload = window.onbeforeunload;
>
> as last line into one of the widgets __init__ function.
>
> Werner
>
> Harald Bl?tand wrote:
>> On Tue, Oct 7, 2008 at 7:18 PM, Werner Thie  
>> <wthie@thiengineering.ch> wrote:
>>    May I pick up this particular problem and its proposed solution up
>>    again:
>>    Was there a ticket opened by Harald Bl?tand?
>> Yes: http://divmod.org/trac/ticket/2731 .
>> (The Subject of this thread has become a little misleading.)
>> Harald
>> ------------------------------------------------------------------------
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web@twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From mithrandi at mithrandi.net  Wed Dec 17 06:29:20 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed Dec 17 06:29:32 2008
Subject: [Twisted-web] Athena IE lockup on page refresh
In-Reply-To: <0D5379FA-0722-4EB8-8552-9B80ABA9A762@googlemail.com>
References: <1ff309e60809151123h518d1029w8004123185427aa1@mail.gmail.com>
	<48CF5B6C.7030405@thiengineering.ch>
	<20080916102200.GA23508@mithrandi.net>
	<48CFC50A.5070503@thiengineering.ch>
	<1ff309e60809160930u70f60fa1n6ff80b05b7f04bef@mail.gmail.com>
	<48EB99DF.3070500@thiengineering.ch>
	<1ff309e60810071203u722b0c56i25ed988589d417c1@mail.gmail.com>
	<48EC5F69.6080203@thiengineering.ch>
	<0D5379FA-0722-4EB8-8552-9B80ABA9A762@googlemail.com>
Message-ID: <20081217112920.GA1245@mithrandi.net>

KiBQYXVsIFRob21hcyA8c3BvbmdlbGF2YXBhdWxAZ29vZ2xlbWFpbC5jb20+IFsyMDA4LTEyLTE3
IDEwOjE4OjI5ICswMDAwXToKCj4gV2hhdCBpcyB0aGUgY3VycmVudCBzdGF0dXMgb2YgdGhpcyBm
aXggcGxlYXNlPwo+Cj4gSSBoYXZlIHRvIGZpbmQgYSBmaXggZm9yIG91ciBhdGhlbmEgYXBwIGxv
Y2tpbmcgdXAgaW4gSUUgYnV0IEknbSBoYXZpbmcgCj4gZGlmZmljdWx0eSBmb2xsb3dpbmcgdGhl
IGNvbW1lbnRzIGluICMyNzMxIC0gYW0gSSByaWdodCBpbiB0aGlua2luZyB0aGF0IAo+IHRoZSBw
cm9ibGVtIGlzIGZpeGVkIG9uIHRoZSBpZS1vbmJlZm9yZXVubG9hZC0yNzMxLTMgYnJhbmNoIGJ1
dCBoYXNuJ3QgCj4geWV0IGJlZW4gYXBwbGllZCB0byB0aGUgdHJ1bms/CgpUaGF0J3MgY29ycmVj
dDsgdGhlIGxhc3QgZmV3IGlzc3VlcyB3aXRoIHRoaXMgYnJhbmNoIGFyZSByZWxhdGl2ZWx5Cm1p
bm9yLCBzbyB3aXRoIGFueSBsdWNrIGl0J2xsIGJlIG1lcmdlZCBpbiB0aGUgbmVhciBmdXR1cmUu
Ci0tIAptaXRocmFuZGksIGkgQWluaWwgZW4tQmFsYW5kb3IsIGEgZmFlciBBbWJhcgotLS0tLS0t
LS0tLS0tLSBuZXh0IHBhcnQgLS0tLS0tLS0tLS0tLS0KQSBub24tdGV4dCBhdHRhY2htZW50IHdh
cyBzY3J1YmJlZC4uLgpOYW1lOiBub3QgYXZhaWxhYmxlClR5cGU6IGFwcGxpY2F0aW9uL3BncC1z
aWduYXR1cmUKU2l6ZTogMTk3IGJ5dGVzCkRlc2M6IERpZ2l0YWwgc2lnbmF0dXJlClVybCA6IGh0
dHA6Ly90d2lzdGVkbWF0cml4LmNvbS9waXBlcm1haWwvdHdpc3RlZC13ZWIvYXR0YWNobWVudHMv
MjAwODEyMTcvZDdjOGM5Y2IvYXR0YWNobWVudC0wMDAxLnBncAo=
From spongelavapaul at googlemail.com  Wed Dec 17 06:35:19 2008
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Wed Dec 17 06:35:27 2008
Subject: [Twisted-web] Athena IE lockup on page refresh
In-Reply-To: <20081217112920.GA1245@mithrandi.net>
References: <1ff309e60809151123h518d1029w8004123185427aa1@mail.gmail.com>
	<48CF5B6C.7030405@thiengineering.ch>
	<20080916102200.GA23508@mithrandi.net>
	<48CFC50A.5070503@thiengineering.ch>
	<1ff309e60809160930u70f60fa1n6ff80b05b7f04bef@mail.gmail.com>
	<48EB99DF.3070500@thiengineering.ch>
	<1ff309e60810071203u722b0c56i25ed988589d417c1@mail.gmail.com>
	<48EC5F69.6080203@thiengineering.ch>
	<0D5379FA-0722-4EB8-8552-9B80ABA9A762@googlemail.com>
	<20081217112920.GA1245@mithrandi.net>
Message-ID: <916FA497-274B-4B28-AB58-A310DE5D6D71@googlemail.com>


On 17 Dec 2008, at 11:29, Tristan Seligmann wrote:

> * Paul Thomas <spongelavapaul@googlemail.com> [2008-12-17 10:18:29  
> +0000]:
>
>> What is the current status of this fix please?
>>
>> I have to find a fix for our athena app locking up in IE but I'm  
>> having
>> difficulty following the comments in #2731 - am I right in thinking  
>> that
>> the problem is fixed on the ie-onbeforeunload-2731-3 branch but  
>> hasn't
>> yet been applied to the trunk?
>
> That's correct; the last few issues with this branch are relatively
> minor, so with any luck it'll be merged in the near future.

That's good to hear. I'm running the branch with our app right now and  
it's looking generally good. IE seems to behave and the whole  
experience is 'snappier'. Our app makes fairly heavy use of Athena  
with multiple widgets.

I've hit one problem with a FlattenError but I suspect it's more to do  
with moving from such an old version rather than anything to do with  
the branch changes. I'll give it a good thrashing and let you know if  
anything bad crops up.

Paul.


From tzury.by at gmail.com  Thu Dec 18 04:23:05 2008
From: tzury.by at gmail.com (Tzury Bar Yochay)
Date: Thu Dec 18 04:26:02 2008
Subject: [Twisted-web] SSH Server with commands filtering
Message-ID: <2f5ea7490812180123wdfeb2f1k6ad493f1e632b9e9@mail.gmail.com>

Hi,
I am willing to deploy on my server an SSH daemon which I can control
what commands can be executed, and by who.
After playing with jailkit [link] I realised that implementing my own
SSH server will give me more power and scalability (especially
regarding of users, keys and accounts management).

Naturally I approached twisted knowing it will solve this problem as a
smart kiddo solves a simple safari puzzle.

Playing with samples found on the web and at Twisted docs, I realised
that twisted has everything I need for the task, but I am missing the
knowledge of how to glue it all together.

In fact, a command if not working on the first strike, works on the second try.

at http://gist.github.com/37446 I pasted the server.py code. which is
a modification of what I've found at:
http://twistedmatrix.com/projects/conch/documentation/examples/sshsimpleserver.py

for instance trying to run git over ssh yeilds error at first, and
when running again seems to be working.
below is the console output on the client side

#first attempt
tzury@regulus:~$ git clone
ssh://tzury@localhost:5022/home/tzury/devel/ice/snoip/freespeech
clone-repo7
Initialized empty Git repository in /home/tzury/clone-repo7/.git/
remote: Counting objects: 347, done.
remote: Compressing objects: 100% (232/232), done.
Receiving objects: 100% (347/347), 91.75 KiB, done.
remote: Total 347 (delta 234), reused 177 (delta 114)
fatal: The remote end hung up unexpectedly
Resolving deltas: 100% (234/234), done.
error: waitpid (async) failed
fatal: error in sideband demultiplexer

#second attempt
tzury@regulus:~$ git clone
ssh://tzury@localhost:5022/home/tzury/devel/ice/snoip/freespeech
clone-repo7
Initialized empty Git repository in /home/tzury/clone-repo7/.git/
remote: Counting objects: 347, done.
remote: Compressing objects: 100% (232/232), done.
Receiving objects: 100% (347/347), 91.75 KiB, done.
remote: Total 347 (delta 234), reused 177 (delta 114)
Resolving deltas: 100% (234/234), done.
tzury@regulus:~$

From tzury.by at gmail.com  Thu Dec 18 05:08:37 2008
From: tzury.by at gmail.com (Tzury Bar Yochay)
Date: Thu Dec 18 05:10:44 2008
Subject: [Twisted-web] SSH Server with commands filtering
In-Reply-To: <2f5ea7490812180123wdfeb2f1k6ad493f1e632b9e9@mail.gmail.com>
References: <2f5ea7490812180123wdfeb2f1k6ad493f1e632b9e9@mail.gmail.com>
Message-ID: <2f5ea7490812180208y76043b9co56358eebdae48a6e@mail.gmail.com>

Hi,
I am willing to deploy on my server an SSH daemon which I can control
what commands can be executed, and by who.
After playing with jailkit [link] I realised that implementing my own
SSH server will give me more power and scalability (especially
regarding of users, keys and accounts management).

Naturally I approached twisted knowing it will solve this problem as a
smart kiddo solves a simple safari puzzle.

Playing with samples found on the web and at Twisted docs, I realised
that twisted has everything I need for the task, but I am missing the
knowledge of how to glue it all together.

In fact, a command if not working on the first strike, works on the second try.

at http://gist.github.com/37446 I pasted the server.py code. which is
a modification of what I've found at:
http://twistedmatrix.com/projects/conch/documentation/examples/sshsimpleserver.py

for instance trying to run git over ssh yeilds error at first, and
when running again seems to be working.
below is the console output on the client side

#first attempt
tzury@regulus:~$ git clone
ssh://tzury@localhost:5022/home/tzury/devel/ice/snoip/freespeech
clone-repo7
Initialized empty Git repository in /home/tzury/clone-repo7/.git/
remote: Counting objects: 347, done.
remote: Compressing objects: 100% (232/232), done.
Receiving objects: 100% (347/347), 91.75 KiB, done.
remote: Total 347 (delta 234), reused 177 (delta 114)
fatal: The remote end hung up unexpectedly
Resolving deltas: 100% (234/234), done.
error: waitpid (async) failed
fatal: error in sideband demultiplexer

#second attempt
tzury@regulus:~$ git clone
ssh://tzury@localhost:5022/home/tzury/devel/ice/snoip/freespeech
clone-repo7
Initialized empty Git repository in /home/tzury/clone-repo7/.git/
remote: Counting objects: 347, done.
remote: Compressing objects: 100% (232/232), done.
Receiving objects: 100% (347/347), 91.75 KiB, done.
remote: Total 347 (delta 234), reused 177 (delta 114)
Resolving deltas: 100% (234/234), done.
tzury@regulus:~$

From glyph at divmod.com  Sun Dec 21 02:31:52 2008
From: glyph at divmod.com (glyph@divmod.com)
Date: Sun Dec 21 02:25:34 2008
Subject: [Twisted-web] database best practices
In-Reply-To: <492C0718.1050400@gmail.com>
References: <29216E03CB2EDA448AE99071A3D9DE7202C30014@mail.casero.com>
	<492C0718.1050400@gmail.com>
Message-ID: <20081221073152.12555.1756365603.divmod.xquotient.2319@weber.divmod.com>


On 25 Nov, 02:09 pm, michal.dtz@gmail.com wrote:
>I believe it was Glyph Lefkowitz who once said, that he finds 
>asynchronous data access APIs extremely painful (and that's why Divmod 
>Axiom has synchronous API).

This isn't exactly how I feel, but it took me a really long time to 
frame my response.  You can find it here: 
<http://glyph.twistedmatrix.com/2008/12/databases-and-twisted-when- 
threads-are.html>

