From twisted-web@twistedmatrix.com  Thu Jan  1 10:11:24 2004
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Thu, 01 Jan 2004 12:11:24 +0200
Subject: [Twisted-web] Possible bug in freeform List
Message-ID: <3FF3F24C.1020708@disksites.com>

This is a multi-part message in MIME format.
--------------090003070107020805050604
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Hi,

I cannot get the List functionality of freeform to work when the 
renderer itself implements a formless interface, rather than using a 
separate class for that.

I took one of Donovan's examples (at 
http://www.livejournal.com/users/fzzzy/) and modified it to work this 
way, but to no avail.

Attached are two scripts, based in the freeformpost4.tac example. The 
formpost4-good.tac uses a separate class that implements the formless 
interface, and works perfectly.

The formpost4-bad.tac script uses a Renderer subclass which also 
implements the formless interface (I need to do it this way because my 
pages include forms and also other renderers on the same page). However, 
this script renders the form fine, but blows up when submitting the form 
(traceback attached).

Any form that does not use the formless.List type does work correctly 
this way (i.e. using a Renderer subclass which implements the formless 
interface).

Help would be very much appreciated.

I'm using Twisted 1.1.0 with the latest nevow code from the Quotient CVS.

Thanks,

-- Gavrie.

--------------090003070107020805050604
Content-Type: text/plain;
 name="formpost4-bad.tac"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="formpost4-bad.tac"


from twisted.application import service, internet

from nevow import appserver
from nevow import renderer
from nevow import tags
from nevow import formless
from nevow import freeform
import nevow


class IAddress(formless.TypedInterface):
    street = formless.String()


class Address(object):
    __implements__ = IAddress

    street = "foo"

    def __str__(self):
        return "%s" % self.street


class IPerson(formless.TypedInterface):
    addresses = formless.List()


class FormPage(renderer.Renderer):

    __implements__ = IPerson, renderer.Renderer.__implements__

    name = "a person's name"
    addresses = [Address(), Address(), Address()]

    document = tags.html[
        tags.head[
            tags.link(href="/freeform_css", rel="stylesheet")
        ],
        tags.body[
            freeform.configure
        ]
    ]

    def child_freeform_css(self, request):
        from twisted.python import util
        from twisted.web import static
        return static.File(util.sibpath(nevow.__file__, 'freeform-default.css'))


application = service.Application("form")
internet.TCPServer(
    8081, 
    appserver.NevowSite(
        FormPage()#Person())
    )
).setServiceParent(application)

# vim: ft=python

--------------090003070107020805050604
Content-Type: text/plain;
 name="formpost4-good.tac"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="formpost4-good.tac"


from twisted.application import service, internet

from nevow import appserver
from nevow import renderer
from nevow import tags
from nevow import formless
from nevow import freeform
import nevow


class IAddress(formless.TypedInterface):
    street = formless.String()


class Address(object):
    __implements__ = IAddress

    street = "foo"

    def __str__(self):
        return "%s" % self.street


class IPerson(formless.TypedInterface):
    addresses = formless.List()


class Person(object):
    __implements__ = IPerson

    name = "a person's name"
    addresses = [Address(), Address(), Address()]


class FormPage(renderer.Renderer):

    document = tags.html[
        tags.head[
            tags.link(href="/freeform_css", rel="stylesheet")
        ],
        tags.body[
            freeform.configure
        ]
    ]

    def child_freeform_css(self, request):
        from twisted.python import util
        from twisted.web import static
        return static.File(util.sibpath(nevow.__file__, 'freeform-default.css'))


application = service.Application("form")
internet.TCPServer(
    8080, 
    appserver.NevowSite(
        FormPage(Person())
    )
).setServiceParent(application)

# vim: ft=python

--------------090003070107020805050604
Content-Type: text/plain;
 name="traceback"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="traceback"

2004/01/01 12:07 IST [HTTPChannel,0,127.0.0.1] Traceback (most recent call last):
          File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 950, in lineReceiv
ed
            self.allContentReceived()
          File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 991, in allContent
Received
            req.requestReceived(command, path, version)
          File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 549, in requestRec
eived
            self.process()
          File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 99, in process
            return server.Request.process(self)
        --- <exception caught here> ---
          File "/usr/lib/python2.3/site-packages/twisted/web/server.py", line 158, in process
            resrc = self.site.getResourceFor(self)
          File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 125, in getResourceFor
            res = gener.getResourceForRequest(request)
          File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 50, in getResourceForReqest
            return self.postForm(request, res, configurable, ctx, bindingName, request.args)
          File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 53, in postForm
            return configurable.postForm(ctx, bindingName, args)
          File "/usr/lib/python2.3/site-packages/nevow/freeform.py", line 750, in postForm
            binding = configurable.getBinding(ctx, seg)
          File "/usr/lib/python2.3/site-packages/nevow/freeform.py", line 735, in getBinding
            raise ImproperInputError, name
        nevow.freeform.ImproperInputError: 0


--------------090003070107020805050604--


From twisted-web@twistedmatrix.com  Thu Jan  1 15:15:42 2004
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Thu, 01 Jan 2004 17:15:42 +0200
Subject: [Twisted-web] freeform: Getting default field values for autocallable methods
Message-ID: <3FF4399E.4040008@disksites.com>

Hi,

When defining a form with attributes that are handled by freeform, the 
default values of the form are automatically filled in with the current 
values of the attributes.

However, when using an autocallable method which takes parameters, there 
seems to be no way to supply default values for the fields.

I'll elaborate a bit more on this by providing an example:
Say that I want to show a form with the current values of a database 
record. Then, when the user submits the form, I want to update the 
record using the changed values that the user entered.
It seems that using an autocallable is the correct way to do this. 
However, how do the original values from the database get to the form 
fields?

Thanks,

-- Gavrie.


From twisted-web@twistedmatrix.com  Thu Jan  1 17:17:06 2004
From: twisted-web@twistedmatrix.com (Chris Armstrong)
Date: Thu, 1 Jan 2004 12:17:06 -0500
Subject: [Twisted-web] freeform: Getting default field values for autocallable methods
In-Reply-To: <3FF4399E.4040008@disksites.com>
References: <3FF4399E.4040008@disksites.com>
Message-ID: <20040101171706.GB4438@pyramid.twistedmatrix.com>

On Thu, Jan 01, 2004 at 05:15:42PM +0200, Gavrie Philipson wrote:
> Hi,
> 
> When defining a form with attributes that are handled by freeform, the 
> default values of the form are automatically filled in with the current 
> values of the attributes.
> 
> However, when using an autocallable method which takes parameters, there 
> seems to be no way to supply default values for the fields.

fd = freeform.IFormDefaults(ctx.locate(IRequest).getSession())
fd.setDefault('setData.pageData', 'default text')

where setData is the autocallable's name, and pageData is the parameter.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com


From twisted-web@twistedmatrix.com  Thu Jan  1 17:32:01 2004
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Thu, 01 Jan 2004 19:32:01 +0200
Subject: [Twisted-web] freeform: Getting default field values for autocallable
 methods
In-Reply-To: <20040101171706.GB4438@pyramid.twistedmatrix.com>
References: <3FF4399E.4040008@disksites.com> <20040101171706.GB4438@pyramid.twistedmatrix.com>
Message-ID: <3FF45991.6070503@disksites.com>

Chris Armstrong wrote:
> On Thu, Jan 01, 2004 at 05:15:42PM +0200, Gavrie Philipson wrote:
...
>>However, when using an autocallable method which takes parameters, there 
>>seems to be no way to supply default values for the fields.
> 
> 
> fd = freeform.IFormDefaults(ctx.locate(IRequest).getSession())
> fd.setDefault('setData.pageData', 'default text')
> 
> where setData is the autocallable's name, and pageData is the parameter.

This looks like what I need.

Thanks,

-- Gavrie.


From twisted-web@twistedmatrix.com  Fri Jan  2 23:09:21 2004
From: twisted-web@twistedmatrix.com (dave giffin)
Date: Fri, 2 Jan 2004 15:09:21 -0800 (PST)
Subject: [Twisted-web] NEWBIE: how to use only the networking core of twisted-web
Message-ID: <20040102230921.94165.qmail@web60403.mail.yahoo.com>

I am currently running a web application on Medusa. I
wrote the request handling functions my self b/c I
needed to do make my web application work the way I
wanted. 

I'm having problems with Medusa though, because Medusa
(which uses the 'select' syscal) locks up on each
request, which is fine for quick/simple file serving,
but with some recent additions to my software, the
delays in processing scripts have increased and medusa
no longer serves my needs. 

I'm looking for a web server that uses threads (which
I think twisted-web does), but I want to use just the
HTTP server core of it, not the part that handles the
file locating, opening and the executing of python
scripts (the part that deals with .rpy scripts which
have to import certain classes). 

I just want to move my software from medusa to
twisted-web, so I need to know which function is
called when a request is recieved.

This way, I should be able to switch easily.

:)

__________________________________
Do you Yahoo!?
Protect your identity with Yahoo! Mail AddressGuard
http://antispam.yahoo.com/whatsnewfree


From twisted-web@twistedmatrix.com  Sat Jan  3 03:50:07 2004
From: twisted-web@twistedmatrix.com (Andrew Bennetts)
Date: Sat, 3 Jan 2004 14:50:07 +1100
Subject: [Twisted-web] NEWBIE: how to use only the networking core of twisted-web
In-Reply-To: <20040102230921.94165.qmail@web60403.mail.yahoo.com>
References: <20040102230921.94165.qmail@web60403.mail.yahoo.com>
Message-ID: <20040103035007.GB14197@frobozz>

On Fri, Jan 02, 2004 at 03:09:21PM -0800, dave giffin wrote:

[snip: Currently using Medusa, but having problems]
> 
> I'm looking for a web server that uses threads (which
> I think twisted-web does), but I want to use just the
> HTTP server core of it, not the part that handles the
> file locating, opening and the executing of python
> scripts (the part that deals with .rpy scripts which
> have to import certain classes). 

Twisted Web doesn't need threads for concurrency -- but there's no reason
why code using Twisted Web couldn't use them.  But then, this also applies
to Medusa -- that's how Zope works, for instance :)

> I just want to move my software from medusa to
> twisted-web, so I need to know which function is
> called when a request is recieved.

Two options spring to mind:
    - Create a simple twisted.web.server.Site with a single Resource with
      isLeaf = 1
    - Avoid twisted.web entirely, and use twisted.protocols.http.  

Oh, and a third:
    - Make your code no need threads anymore.  This is probably easier to do
      with Twisted than you expect.

If you want to stick with threads, I'd recommend figuring out how to do it
with Medusa.  Twisted is a fine framework, but if you want to basically
ignore its features (by blindly using threads for concurrency and by
bypassing the bulk of Twisted Web) then it's probably going to frustrate you
more than help, because it's not really designed for that use case.

That said, here's where to start looking for how to do it:

With method one (Twisted Web with a simple Resource), something like this:

    # Completely untested!!
    from twisted.web.resource import Resource
    from twisted.web.server import NOT_DONE_YET
    from twisted.web.error import ErrorPage
    from twisted.internet.threads import deferToThread
    from twisted.protocols import http
    from twisted.python import log
    from exMedusaCode import process_request
    
    class ThreadDispatchResource(Resource):
        isLeaf = 1
        
        def render(self, request):
            d = deferToThread(process_request, request)
            d.addCallback(self._cb, request)
            d.addErrback(self._eb, request)
            return NOT_DONE_YET

        def _cb(self, result, request):
            request.write(result)
            request.finish()

        def _eb(self, failure, request):
            log.err(failure)
            body = ErrorPage(http.INTERNAL_SERVER_ERROR,
                             "See log file for details").render(request)
            request.write(body)
            request.finish()

You'll probably want to munge the request object from the standard Twisted
one into whatever your Medusa code (which I'm assuming is called
'process_request') is expecting.

With method two, you'd probably want to make your own
twisted.protocols.http.Request subclass, which means overriding
HTTPFactory's buildProtocol to set the HTTPChannel's requestFactory to your
new subclass (see twisted.web.server.Site for an example).  The actual
mechanism will be pretty similar -- use deferToThread, and add a callback to
call request.finish() when code in the thread is done.

> This way, I should be able to switch easily.

If you just want a simple thread-dispatcher for your Medusa code, then
Twisted isn't really what you want.  I'd recommend looking at how ZServer in
Zope extends Medusa to do it.

-Andrew.



From twisted-web@twistedmatrix.com  Thu Jan  8 03:15:17 2004
From: twisted-web@twistedmatrix.com (Joel Boehland)
Date: Wed, 07 Jan 2004 19:15:17 -0800
Subject: [Twisted-web] Example App
Message-ID: <3FFCCB45.9090207@memes.com>

Hi,
I've been playing around with nevow the last week or so (love it!). I've been using the examples that Donavan 
Preston
posted on his blog to figure out how nevow works. The examples are a great help, and I thought I'd add another 
to help
other nevow people along, and also to get people to critique my approach to using nevow before I get any bad 
habits. :-)

So, I've uploaded the code for a small User Database nevow application at:
http://shamash.eece.unm.edu:8080/bin.rpy/531
  It hooks into cred, so you can add new users and login as them. You can also delete users and that will
prevent them from being able to login. If anyone has any comments on this application, let me know.

--Joel



From twisted-web@twistedmatrix.com  Thu Jan  8 14:05:02 2004
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Thu, 08 Jan 2004 08:05:02 -0600
Subject: [Twisted-web] Example App
In-Reply-To: <3FFCCB45.9090207@memes.com>
References: <3FFCCB45.9090207@memes.com>
Message-ID: <20040108140502.5963240B47@server1.messagingengine.com>

Excellent!  Thank you.

On Wed, 07 Jan 2004 19:15:17 -0800, "Joel Boehland" <joel@memes.com>
said:
> Hi,
> I've been playing around with nevow the last week or so (love it!). I've
> been using the examples that Donavan 
> Preston
> posted on his blog to figure out how nevow works. The examples are a
> great help, and I thought I'd add another 
> to help
> other nevow people along, and also to get people to critique my approach
> to using nevow before I get any bad 
> habits. :-)
> 
> So, I've uploaded the code for a small User Database nevow application
> at:
> http://shamash.eece.unm.edu:8080/bin.rpy/531
>   It hooks into cred, so you can add new users and login as them. You can
>   also delete users and that will
> prevent them from being able to login. If anyone has any comments on this
> application, let me know.
> 
> --Joel
> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From twisted-web@twistedmatrix.com  Thu Jan  8 23:13:31 2004
From: twisted-web@twistedmatrix.com (James Y Knight)
Date: Thu, 8 Jan 2004 18:13:31 -0500
Subject: [Twisted-web] Batch of nevow bugfixes
Message-ID: <468BD28F-4230-11D8-B29B-000A95A50FB2@fuhm.net>

--Apple-Mail-4-807131218
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=US-ASCII;
	format=flowed

So I've got a bunch of nevow patches here. They're all combined in one 
patchfile cause I'm way too lazy to split them up, but it should be 
pretty easy to see what's what.
1) most files: Compatibility with python2.2 (agian). Omitted changes to 
components.wsv, so it shouldn't hurt python2.3 users but won't actually 
work in python2.2 yet.
2) appserver.py: change to renderHTTP that allows returning a 
NOT_DONE_YET from a deferred without blowing up. Probably not necessary 
but makes it easier for me. :)
3) context.py, stan.py: stripContexts and clone look within sublists 
and attributes. This corrects bug #49, which causes the sequence 
renderer to fail to render some parts.
4) context.py, stan.py: use Unset instead of None for specials that 
haven't been set, so that None is a valid value (important at least for 
data attribute!)
5) renderer.py: Fix bug #36 "Nevow has issues with nested deferred 
renderers."
6) simple.py: Make this example work.
7) stan.py: specials/specialMatches: don't find specials on the current 
tag, only children. Fixes bug #50.

All the ones I submitted bug reports on have testcases on the bugreport.


--Apple-Mail-4-807131218
Content-Transfer-Encoding: 7bit
Content-Type: application/octet-stream;
	x-unix-mode=0644;
	name="nevow.patch"
Content-Disposition: attachment;
	filename=nevow.patch

Index: appserver.py
===================================================================
RCS file: /cvs/Quotient/nevow/appserver.py,v
retrieving revision 1.12
diff -u -r1.12 appserver.py
--- appserver.py	8 Jan 2004 01:11:33 -0000	1.12
+++ appserver.py	8 Jan 2004 22:11:57 -0000
@@ -3,6 +3,8 @@
 import cgi
 from copy import copy
 from urllib import unquote
+from types import StringTypes
+
 
 from twisted.web import server
 from twisted.web import resource
@@ -135,7 +137,7 @@
         self.deferred.callback("")
 
     def _cbFinishRender(self, html):
-        if isinstance(html, basestring):
+        if isinstance(html, StringTypes):
             self.write(html)
         server.Request.finish(self)
         return html
@@ -170,10 +172,15 @@
         request.postpath.insert(0, request.prepath.pop())
         return res, segments[1:]
 
-    def renderHTTP(self, request):
-        result = self.original.render(request)
-        if result == server.NOT_DONE_YET:
+    def _handle_NOT_DONE_YET(self, data, request):
+        if data == server.NOT_DONE_YET:
             return request.deferred
+        else:
+            return data
+        
+    def renderHTTP(self, request):
+        result = defer.maybeDeferred(self.original.render, request).addCallback(
+            self._handle_NOT_DONE_YET, request)
         return result
 
 
Index: context.py
===================================================================
RCS file: /cvs/Quotient/nevow/context.py,v
retrieving revision 1.14
diff -u -r1.14 context.py
--- context.py	11 Dec 2003 21:34:27 -0000	1.14
+++ context.py	8 Jan 2004 22:11:57 -0000
@@ -3,13 +3,15 @@
 # and/or modify it under the terms of version 2.1 of the GNU Lesser General
 # Public License as published by the Free Software Foundation.
 
+from __future__ import generators
+
 import warnings
 
 from twisted.python import components
 from twisted.python.reflect import qual
 
 from nevow.iwoven import IData
-from nevow.stan import specialMatches, specials, Tag
+from nevow.stan import specialMatches, specials, Tag, Unset
 from nevow.tags import invisible
 
 class _Marker(object):
@@ -36,14 +38,22 @@
         return "More than one %r with the name %r was found." % tuple(self.args[:2])
 
 
-def stripContexts(tag):
-    for i in range(len(tag.children)):
-        obj = tag.children[i]
+def _stripContexts(obj):
+    if isinstance(obj, (list, tuple)):
+        obj = [_stripContexts(x) for x in obj]
+    else:
         if isinstance(obj, WovenContext):
-            tag.children[i] = obj.tag
             obj = obj.tag
         if isinstance(obj, Tag):
-            stripContexts(obj)
+            return stripContexts(obj)
+    return obj
+
+def stripContexts(tag):
+    for i in range(len(tag.children)):
+        tag.children[i] = _stripContexts(tag.children[i])
+    for key in tag.attributes:
+        tag.attributes[key] = _stripContexts(tag.attributes[key])
+    return tag
 
 
 class WovenContext(object):
@@ -54,7 +64,7 @@
     def __init__(self, parent=None, tag=None, precompile=False, remembrances=None, key=None):
         self.tag = tag
         self.parent = parent
-        if key is not None:
+        if key is not None and key is not Unset:
             if self.parent is not None and self.parent.key is not None:
                 self.key = '.'.join((self.parent.key, key))
             else:
@@ -107,9 +117,9 @@
 #        data=None, renderer=None, observer=None, remembrances=None
 
         new = WovenContext(self, tag, self.precompile, key=tag.key)
-        if tag.data is not None:
+        if tag.data is not Unset:
             new.remember(tag.data, IData)
-        if tag.remember is not None:
+        if tag.remember is not Unset:
             new.remember(tag.remember)
 #        if renderer is not None:
 #            # push a renderer onto the stack
@@ -195,7 +205,7 @@
             for x in specialMatches(tag, 'pattern', pattern):
                 keeplooking = True
                 cloned = x.clone()
-                cloned.pattern = None
+                cloned.pattern = Unset
                 yield cloned
         if raiseIfMissing:
             raise RuntimeError, "Pattern %s was not found." % pattern
Index: formless.py
===================================================================
RCS file: /cvs/Quotient/nevow/formless.py,v
retrieving revision 1.32
diff -u -r1.32 formless.py
--- formless.py	4 Jan 2004 15:31:21 -0000	1.32
+++ formless.py	8 Jan 2004 22:11:57 -0000
@@ -20,10 +20,14 @@
 from twisted.internet import reactor, defer
 
 
-import itertools
+class count(object):
+    def __init__(self):
+        self.id = 0
+    def next(self):
+        self.id += 1
+        return self.id
 
-
-nextId = itertools.count().next
+nextId = count().next
 
 
 class InputError(Exception):
@@ -566,7 +570,8 @@
         """
         copied = copy.deepcopy(self.typedValue.arguments)
         curid = 0
-        for arg in copied[::-1]:
+        for n in xrange(len(copied)-1, -1, -1):
+            arg=copied[n]
             curid = arg.id
             if isinstance(arg, Button):
                 break
Index: freeform.py
===================================================================
RCS file: /cvs/Quotient/nevow/freeform.py,v
retrieving revision 1.85
diff -u -r1.85 freeform.py
--- freeform.py	4 Jan 2004 15:31:21 -0000	1.85
+++ freeform.py	8 Jan 2004 22:11:57 -0000
@@ -196,6 +196,15 @@
 
         defaults = IFormDefaults(request)
         value = defaults.getDefault(context.key, context)
+
+        if isinstance(value, Deferred):
+            value.addCallback(self._cb_call, context, data)
+            return value
+        else:
+            return self._cb_call(value, context, data)
+
+    def _cb_call(self, value, context, data):
+        request = context.locate(iwoven.IRequest)
         try:
             _, fbn = calculateFullBindingName(context, context.locate(formless.IBinding))
         except KeyError:
Index: renderer.py
===================================================================
RCS file: /cvs/Quotient/nevow/renderer.py,v
retrieving revision 1.29
diff -u -r1.29 renderer.py
--- renderer.py	23 Dec 2003 06:15:38 -0000	1.29
+++ renderer.py	8 Jan 2004 22:11:57 -0000
@@ -4,6 +4,8 @@
 # and/or modify it under the terms of version 2.1 of the GNU Lesser General
 # Public License as published by the Free Software Foundation.
 
+from __future__ import generators
+
 import os
 import stat
 import time
@@ -67,8 +69,12 @@
             buf(item)
         elif isinstance(item, Deferred):
             yield item
-            for flat in _strflatten(context, ISerializable(item.result).serialize(context, None), buf):
-                pass
+            if not hasattr(item, 'result'):
+                print "ERROR: Deferred has no result!"
+                buf("ERROR: Deferred has no result!")
+            else:
+                for sub in _strflatten(context, ISerializable(item.result).serialize(context, None), buf):
+                    yield sub
         else:
             for sub in _strflatten(context, item, buf):
                 yield sub
@@ -76,6 +82,12 @@
 from cStringIO import StringIO
 from twisted.python.context import get as getCtx
 
+def _error(failure):
+    # FIXME: this should *definitely* do something better
+    # doing this leaves the connection hanging, but it's better
+    # than nothing.
+    print "FAILURE !",failure 
+    
 def _subrender(L, itr, context, writer, closer):
     for item in itr:
         if writer is not None:
@@ -88,6 +100,7 @@
             item.addCallback(lambda ignored: transact(_subrender, L, itr, context, writer, closer))
         else:
             item.addCallback(lambda ignored: _subrender(L, itr, context, writer, closer))
+        item.addErrback(_error)
         return item
     data = ''.join(L)
     if writer is not None:
Index: simple.py
===================================================================
RCS file: /cvs/Quotient/nevow/simple.py,v
retrieving revision 1.3
diff -u -r1.3 simple.py
--- simple.py	28 Oct 2003 23:41:16 -0000	1.3
+++ simple.py	8 Jan 2004 22:11:57 -0000
@@ -4,7 +4,11 @@
 # Public License as published by the Free Software Foundation.
 
 
+from twisted.application import service, internet
+from twisted.web import server
+from nevow import renderer
 from nevow.tags import *
+from nevow import stan
 
 import random
 
@@ -17,23 +21,6 @@
     return data * 5
 
 
-def sequence(context, data):
-    patterns = context.generatePatterns('item')
-    return [patterns.next()(data=item) for item in data]
-
-
-def slotFiller(context, data):
-    assert hasattr(data, 'items'), "slotFiller needs an object which returns key, value tuples in response to items."
-    for k, v in data.items():
-        try:
-            slot = context.locateSlots(k).next()
-        except StopIteration:
-            raise RuntimeError, "Slot %s was not found." % k
-        slot.children.append(v)
-    context.tag.renderer = None
-    return context.tag
-
-
 def selectOptioner(context, data):
     tag = context.tag.clone(deep=False)
     tag(name="flavor")
@@ -46,8 +33,8 @@
     tag.renderer = None
     return tag
 
-
-doc = html[
+class Simple(renderer.Renderer):
+  document = html[
     head[
         title["Hello, World"]
     ],
@@ -59,7 +46,7 @@
             "Here are some random numbers: ",
             str, " ",
             str, " ",
-            str, " ",
+            str, " "
         ],
         ul(data={'one': 1, 'two': rand, 'three': 3})[
             li(data=directive("one"), renderer=str),
@@ -70,7 +57,7 @@
             li(data=_2, renderer=multiply),
             li(data=_1, renderer=multiply),
             li(data=_0, renderer=multiply),
-            li(data=multiply, renderer=sequence)[
+            li(data=multiply, renderer=stan.sequence)[
                 div(style="border: 1px solid blue; margin-bottom: 0.5em", pattern="item", renderer=str),
                 div(style="border: 1px solid red; margin-bottom: 0.5em", pattern="item", renderer=multiply),
             ]
@@ -84,8 +71,8 @@
                 td["AGE"]
             ],
 
-            div(renderer=sequence)[
-                tr(pattern="item", renderer=slotFiller)[
+            div(renderer=stan.sequence)[
+                tr(pattern="item", renderer=stan.mapping)[
                     td(style="background-color: #efefef", slot="name"),
                     td(style="background-color: #abcdef", slot="age"),
                 ]
@@ -95,3 +82,6 @@
                 renderer=selectOptioner)
     ]
 ]
+
+application = service.Application("simple")
+internet.TCPServer(8080, server.Site(Simple())).setServiceParent(application)
Index: stan.py
===================================================================
RCS file: /cvs/Quotient/nevow/stan.py,v
retrieving revision 1.15
diff -u -r1.15 stan.py
--- stan.py	2 Jan 2004 16:02:08 -0000	1.15
+++ stan.py	8 Jan 2004 22:11:58 -0000
@@ -3,6 +3,8 @@
 # and/or modify it under the terms of version 2.1 of the GNU Lesser General
 # Public License as published by the Free Software Foundation.
 
+from __future__ import generators
+
 
 class Proto(str):
     """Proto is a string subclass. Instances of Proto, which are constructed
@@ -124,19 +128,29 @@
         """
         raise NotImplementedError, "Stan tag instances are not iterable."
 
+    def _clone(self, obj, deep):
+        if hasattr(obj, 'clone'):
+            return obj.clone(deep)
+        elif isinstance(obj, (list, tuple)):
+            return [self._clone(x, deep)
+                    for x in obj]
+        else:
+            return obj
+        
     def clone(self, deep=True):
         """Return a clone of this tag. If deep is True, clone all of this
         tag's children. Otherwise, the children list of the clone will
         be empty.
         """
         if deep:
-            newchildren = [
-                hasattr(ch, 'clone') and ch.clone() or ch
-                for ch in self.children
-            ]
+            newchildren = [self._clone(x, True) for x in self.children]
         else:
             newchildren = []
-        return Tag(self.tagName, attributes=self.attributes.copy(), children=newchildren, specials=self._specials.copy())
+        newattrs = self.attributes.copy()
+        for key in newattrs:
+            newattrs[key]=self._clone(newattrs[key], True)
+        
+        return Tag(self.tagName, attributes=newattrs, children=newchildren, specials=self._specials.copy())
 
     def clear(self):
         """Clear any existing children from this tag.
@@ -156,9 +170,16 @@
         return "Tag(%r%s)" % (self.tagName, rstr)
 
 
+class UnsetClass:
+    def __nonzero__(self):
+        return False
+    def __repr__(self):
+        return "Unset"
+Unset=UnsetClass()
+
 def makeAccessors(special):
     def getSpecial(self):
-        return self._specials.get(special)
+        return self._specials.get(special, Unset)
 
     def setSpecial(self, data):
         self._specials[special] = data
@@ -171,31 +192,33 @@
 del name
 
 
-def specials(tagOrContext, special):
+def specials(tag, special):
     """Generate tags with special attributes regardless of attribute value.
     """
-    tag = getattr(tagOrContext, 'tag', tagOrContext)
-    if getattr(tag, special, None) is not None:
-        yield tag
-    else:
-        for child in getattr(tag, 'children', []):
+    for childOrContext in getattr(tag, 'children', []):
+        child = getattr(childOrContext, 'tag', childOrContext)
+        
+        if getattr(child, special, Unset) is not Unset:
+            yield child
+        else:
             for match in specials(child, special):
                 yield match
 
 
-def specialMatches(tagOrContext, special, pattern):
+def specialMatches(tag, special, pattern):
     """Generate special attribute matches starting with the given tag;
     if a match is found, do not look any deeper below that match.
     """
-    tag = getattr(tagOrContext, 'tag', tagOrContext)
-    if getattr(tag, special, None) == pattern:
-        yield tag
-    else:
-        for child in getattr(tag, 'children', []):
+    for childOrContext in getattr(tag, 'children', []):
+        child = getattr(childOrContext, 'tag', childOrContext)
+        
+        data = getattr(child, special, Unset)
+        if data == pattern:
+            yield child
+        elif data is Unset:
             for match in specialMatches(child, special, pattern):
                 yield match
 
-
 def sequence(context, data):
     headers = specialMatches(context.tag, 'pattern', 'header')
     pattern = context.patterns('item')
Index: url.py
===================================================================
RCS file: /cvs/Quotient/nevow/url.py,v
retrieving revision 1.5
diff -u -r1.5 url.py
--- url.py	23 Dec 2003 06:15:38 -0000	1.5
+++ url.py	8 Jan 2004 22:11:58 -0000
@@ -1,4 +1,4 @@
-
+from __future__ import generators
 import urllib
 import weakref
 
Index: serial/flatmdom.py
===================================================================
RCS file: /cvs/Quotient/nevow/serial/flatmdom.py,v
retrieving revision 1.10
diff -u -r1.10 flatmdom.py
--- serial/flatmdom.py	11 Dec 2003 03:22:04 -0000	1.10
+++ serial/flatmdom.py	8 Jan 2004 22:11:58 -0000
@@ -3,6 +3,8 @@
 # and/or modify it under the terms of version 2.1 of the GNU Lesser General
 # Public License as published by the Free Software Foundation.
 
+from __future__ import generators
+
 from nevow.iwoven import ISerializable
 from nevow.stan import Tag, xml, directive
 
Index: serial/flatstan.py
===================================================================
RCS file: /cvs/Quotient/nevow/serial/flatstan.py,v
retrieving revision 1.18
diff -u -r1.18 flatstan.py
--- serial/flatstan.py	17 Dec 2003 01:44:39 -0000	1.18
+++ serial/flatstan.py	8 Jan 2004 22:11:58 -0000
@@ -3,11 +3,12 @@
 # and/or modify it under the terms of version 2.1 of the GNU Lesser General
 # Public License as published by the Free Software Foundation.
 
-
+from __future__ import generators
+from types import StringTypes
 import types
 import warnings
 
 from twisted.python import components, log
 from nevow.stan import Proto, Tag, xml, directive
 from nevow.iwoven import ISerializable, IRendererFactory, IData
 from nevow.renderer import flatten
@@ -22,7 +24,7 @@
 
 class TagSerializer(components.Adapter):
     __implements__ = ISerializable,
-
+    
     def serialize(self, context, stream):
         visible = bool(self.original.tagName)
         singleton = not self.original.renderer and not self.original.children and not self.original.data
@@ -50,7 +52,7 @@
                             flat = flatten(ISerializable(v).serialize(context, stream))
                             if flat:
                                 val = flat[0]
-                                if isinstance(val, basestring):
+                                if isinstance(val, StringTypes):
                                     val = val.replace('"', '&quot;')
                                 yield xml(val)
                         yield xml('"')
@@ -63,9 +65,9 @@
                 # TODO: Make this less buggy.
                 try:
                     if context.locate(IData) != self.original.data:
-                        context = context.with(self.original)                    
+                        context = context.with(self.original)
                 except KeyError:
-                    context = context.with(self.original)                    
+                    context = context.with(self.original)
                 if self.original.renderer:
                     toBeRenderedBy = self.original.renderer
                     self.original.renderer = None
Index: test/test_disktemplate.py
===================================================================
RCS file: /cvs/Quotient/nevow/test/test_disktemplate.py,v
retrieving revision 1.16
diff -u -r1.16 test_disktemplate.py
--- test/test_disktemplate.py	11 Dec 2003 01:04:10 -0000	1.16
+++ test/test_disktemplate.py	8 Jan 2004 22:11:58 -0000
@@ -3,6 +3,7 @@
 # and/or modify it under the terms of version 2.1 of the GNU Lesser General
 # Public License as published by the Free Software Foundation.
 
+from __future__ import generators
 
 from nevow import renderer
 from nevow import util
Index: test/test_flatstan.py
===================================================================
RCS file: /cvs/Quotient/nevow/test/test_flatstan.py,v
retrieving revision 1.15
diff -u -r1.15 test_flatstan.py
--- test/test_flatstan.py	10 Dec 2003 19:48:49 -0000	1.15
+++ test/test_flatstan.py	8 Jan 2004 22:11:58 -0000
@@ -3,6 +3,8 @@
 # and/or modify it under the terms of version 2.1 of the GNU Lesser General
 # Public License as published by the Free Software Foundation.
 
+from __future__ import generators
+
 from twisted.python import reflect
 
 from twisted.web.resource import IResource

--Apple-Mail-4-807131218
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=US-ASCII;
	format=flowed



The deferred freeform patch from Gavrie Philipson should probably also 
go in.

James

--Apple-Mail-4-807131218--



From twisted-web@twistedmatrix.com  Fri Jan  9 08:19:31 2004
From: twisted-web@twistedmatrix.com (dave giffin)
Date: Fri, 9 Jan 2004 00:19:31 -0800 (PST)
Subject: [Twisted-web] NEWBIE: how to use only the networking core of twisted-web?
Message-ID: <20040109081931.11340.qmail@web60405.mail.yahoo.com>

I am currently running a web application on Medusa. I
wrote the request handling functions my self b/c I
needed to do make my web application work the way I
wanted. 

I'm having problems with Medusa though, because Medusa
(which uses the 'select' syscal) locks up on each
request, which is fine for quick/simple file serving,
but with some recent additions to my software, the
delays in processing scripts have increased and medusa
no longer serves my needs. 

I'm looking for a web server that uses threads (which
I think twisted-web does), but I want to use just the
HTTP server core of it, not the part that handles the
file locating, opening and the executing of python
scripts (the part that deals with .rpy scripts which
have to import certain classes). 

I just want to move my software from medusa to
twisted-web, so I need to know which function is
called when a request is recieved.

This way, I should be able to switch easily.

:)

__________________________________
Do you Yahoo!?
Yahoo! Hotjobs: Enter the "Signing Bonus" Sweepstakes
http://hotjobs.sweepstakes.yahoo.com/signingbonus


From twisted-web@twistedmatrix.com  Fri Jan  9 15:21:55 2004
From: twisted-web@twistedmatrix.com (Bart Frackiewicz)
Date: Fri, 09 Jan 2004 16:21:55 +0100
Subject: [Twisted-web] NEWBIE: Unittest hangs by deferred
Message-ID: <3FFEC713.6010104@ypsilon.net>

Hi,

i am a newbie to Twisted, so it would be fine if you can help me to 
understand, what i am doing wrong. I have a Package twisted_rpc3, which 
has a class City:

### file: twisted_rpc.py ###
  def getCityId(self, args):
      return dbpool.runInteraction(self._searchCityByString, args)

  def _searchCityByString(self, txn, args):
      .. search in database with some tricks
      return result # a string
### endfile: twisted_rpc.py ###

When i run this from bash, this works as excepted.

### file: city.py ###
import twisted_rpc3

def printResult(res):
    print res

c = twisted_rpc3.City()
c.getCityId(('berlin', 'de')).addCallback(printResult)

reactor.callLater(2, reactor.stop)
reactor.run()
### endfile: city.py ###

For the unittest, i create following:

## file test_twisted_rpc3.py ###
from twisted.trial import unittest

class TestCaseCity(unittest.TestCase):

    def testObject(self):
      c = twisted_rpc3.City()

    def testGetCityId(self):
      c = twisted_rpc3.City()
      d = c.getCityId(('Berlin', 'de'))
      self.assertEquals(unittest.deferredResult(d, 5), 'de_berlin')
## endfile test_twisted_rpc3.py ###

After starting test ([~/twisted]$ trial test_twisted_rpc3) , i get an 
timeout error, and if i add print statements, i see that getCityId() was 
called, but _searchCityByString() never. Where is my mistake?

TIA, Bart




From twisted-web@twistedmatrix.com  Fri Jan  9 16:09:56 2004
From: twisted-web@twistedmatrix.com (Andrew Bennetts)
Date: Sat, 10 Jan 2004 03:09:56 +1100
Subject: [Twisted-web] NEWBIE: Unittest hangs by deferred
In-Reply-To: <3FFEC713.6010104@ypsilon.net>
References: <3FFEC713.6010104@ypsilon.net>
Message-ID: <20040109160956.GA6198@frobozz>

On Fri, Jan 09, 2004 at 04:21:55PM +0100, Bart Frackiewicz wrote:
[...]
> 
> When i run this from bash, this works as excepted.
> 
> ### file: city.py ###
> import twisted_rpc3
> 
> def printResult(res):
>    print res
> 
> c = twisted_rpc3.City()
> c.getCityId(('berlin', 'de')).addCallback(printResult)
> 
> reactor.callLater(2, reactor.stop)
> reactor.run()

Gah!  You're assuming that the result will arrive in 2 seconds... you
probably should do that like this:

----
# ...
from twisted.python import log

c = twisted_rpc3.City()
d = c.getCityId(('berlin', 'de'))
d.addCallback(printResult)
d.addErrback(log.err)
d.addBoth(lambda _: reactor.stop())

reactor.run()
----

Which will wait until the result (or an error, which will be logged)
arrives, and only then stops.  Much better than hard-coding a response
time.

Anyway, that's not your problem, but I just felt compelled to point that
out.

> ### endfile: city.py ###
> 
> For the unittest, i create following:
> 
> ## file test_twisted_rpc3.py ###
> from twisted.trial import unittest
> 
> class TestCaseCity(unittest.TestCase):
> 
>    def testObject(self):
>      c = twisted_rpc3.City()
> 
>    def testGetCityId(self):
>      c = twisted_rpc3.City()
>      d = c.getCityId(('Berlin', 'de'))
>      self.assertEquals(unittest.deferredResult(d, 5), 'de_berlin')
> ## endfile test_twisted_rpc3.py ###
> 
> After starting test ([~/twisted]$ trial test_twisted_rpc3) , i get an 
> timeout error, and if i add print statements, i see that getCityId() was 
> called, but _searchCityByString() never. Where is my mistake?

I don't see any obvious problems here... but is it possible the dbpools from
the various tests are interfering with each other?  So, if you instruct
trial to just run that one test method, i.e.: 
    trial test_twisted_rpc3.TestCaseCity.testGetCityId
does that work?

If so, perhaps make sure you call .close on the dbpool the your City objects
create before the test is torn down?

(Should trial report on shutdown triggers that are left over after running a
test?  They might be a sign of resources not being properly cleaned up after
a test.)

Hmm, actually, because tests never call reactor.run (only reactor.iterate),
it's possible that you need to call dbpool.start() manually in your test.
That would explain your symptoms: the test times out because the dbpool
isn't actually running yet.

-Andrew.



From twisted-web@twistedmatrix.com  Fri Jan  9 20:02:03 2004
From: twisted-web@twistedmatrix.com (Bartlomiej Frackiewicz)
Date: 09 Jan 2004 21:02:03 +0100
Subject: [Twisted-web] NEWBIE: Unittest hangs by deferred
In-Reply-To: <20040109160956.GA6198@frobozz>
References: <3FFEC713.6010104@ypsilon.net>  <20040109160956.GA6198@frobozz>
Message-ID: <1073678523.2989.3.camel@moon.kosmos>

Andrew,

Am Fre, 2004-01-09 um 17.09 schrieb Andrew Bennetts:

> If so, perhaps make sure you call .close on the dbpool the your City objects
> create before the test is torn down?

that was it, i startet the pool outside the city class, so it never
started. Such anoying thing, thank you for your help.

Bart





From twisted-web@twistedmatrix.com  Sat Jan 10 16:47:42 2004
From: twisted-web@twistedmatrix.com (Dean Skuldt)
Date: Sat, 10 Jan 2004 08:47:42 -0800 (PST)
Subject: [Twisted-web] wmfactory not consistently executed
Message-ID: <20040110164742.2161.qmail@web41604.mail.yahoo.com>

Hello, 

I'm new to woven, but my understanding from the documentation is that the
appropriate model factories are executed for every request/response.  By
watching the twistd.log for a print statement in my wmfactory, it seems that
the wmfactory method is not executed for every request/response.  The
appearance (or lack thereof) of my printed statement in the log seems to be
unrelated to the frequency of requests.  

## test.py
import os
from twisted.application import service, internet
from twisted.web.woven import page
from twisted.web import server

class MainPage(page.Page):
    template = """
    <html>
    <body>
    <div model="test"/>
    </body>
    </html>
    """
    def wmfactory_test(self, request):
        print "in test wmfactory"
        return "hey"

site = server.Site(MainPage())
application = service.Application("test") 
parent = service.IServiceCollection(application)
internet.TCPServer(8088, site).setServiceParent(parent)
##


Can anyone tell me if I'm doing something wrong or if my understanding of
wmfactories is incorrect?

Thanks, 
Dean

__________________________________
Do you Yahoo!?
Yahoo! Hotjobs: Enter the "Signing Bonus" Sweepstakes
http://hotjobs.sweepstakes.yahoo.com/signingbonus


From twisted-web@twistedmatrix.com  Sat Jan 10 16:01:25 2004
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Sat, 10 Jan 2004 17:01:25 +0100
Subject: [Twisted-web] wmfactory not consistently executed
In-Reply-To: <20040110164742.2161.qmail@web41604.mail.yahoo.com>
References: <20040110164742.2161.qmail@web41604.mail.yahoo.com>
Message-ID: <20040110160125.GB18699@pasternak.w.lub.pl>

Dean Skuldt [Sat, Jan 10, 2004 at 08:47:42AM -0800]:
> I'm new to woven, but my understanding from the documentation is that the
> appropriate model factories are executed for every request/response.  By
> watching the twistd.log for a print statement in my wmfactory, it seems that
> the wmfactory method is not executed for every request/response.

Perhaps you could use View -- change:

>     <div model="test"/>

to:

	<div model="test" view="Text" />


From twisted-web@twistedmatrix.com  Sat Jan 10 17:07:43 2004
From: twisted-web@twistedmatrix.com (Dean Skuldt)
Date: Sat, 10 Jan 2004 09:07:43 -0800 (PST)
Subject: [Twisted-web] wmfactory not consistently executed
In-Reply-To: <20040110160125.GB18699@pasternak.w.lub.pl>
Message-ID: <20040110170743.79659.qmail@web41608.mail.yahoo.com>

Thanks for your quick response. I tried it out, and I'm observing the same
behaviour. Hmmmmm.

--- Michal Pasternak <michal@pasternak.w.lub.pl> wrote:
> Dean Skuldt [Sat, Jan 10, 2004 at 08:47:42AM -0800]:
> > I'm new to woven, but my understanding from the documentation is that the
> > appropriate model factories are executed for every request/response.  By
> > watching the twistd.log for a print statement in my wmfactory, it seems
> that
> > the wmfactory method is not executed for every request/response.
> 
> Perhaps you could use View -- change:
> 
> >     <div model="test"/>
> 
> to:
> 
> 	<div model="test" view="Text" />
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


__________________________________
Do you Yahoo!?
Yahoo! Hotjobs: Enter the "Signing Bonus" Sweepstakes
http://hotjobs.sweepstakes.yahoo.com/signingbonus


From twisted-web@twistedmatrix.com  Sat Jan 10 16:20:38 2004
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Sat, 10 Jan 2004 17:20:38 +0100
Subject: [Twisted-web] wmfactory not consistently executed
In-Reply-To: <20040110170743.79659.qmail@web41608.mail.yahoo.com>
References: <20040110160125.GB18699@pasternak.w.lub.pl> <20040110170743.79659.qmail@web41608.mail.yahoo.com>
Message-ID: <20040110162038.GA23350@pasternak.w.lub.pl>

Dean Skuldt [Sat, Jan 10, 2004 at 09:07:43AM -0800]:
> Thanks for your quick response. I tried it out, and I'm observing the same
> behaviour. Hmmmmm.

How are you running that script? On my machine (Twisted 1.1.1, Python 2.3)
when run with twistd -noy test.py works just okay. Perhaps the reason you're
not getting expected behaviour is your fault (eg. you're running wrong
script).


From twisted-web@twistedmatrix.com  Sat Jan 10 17:25:21 2004
From: twisted-web@twistedmatrix.com (Dean Skuldt)
Date: Sat, 10 Jan 2004 09:25:21 -0800 (PST)
Subject: [Twisted-web] wmfactory not consistently executed
In-Reply-To: <20040110162038.GA23350@pasternak.w.lub.pl>
Message-ID: <20040110172521.96778.qmail@web41609.mail.yahoo.com>

I'm using 
twistd -y test.py
It's the correct script - thanks for checking that.
--- Michal Pasternak <michal@pasternak.w.lub.pl> wrote:
> Dean Skuldt [Sat, Jan 10, 2004 at 09:07:43AM -0800]:
> > Thanks for your quick response. I tried it out, and I'm observing the same
> > behaviour. Hmmmmm.
> 
> How are you running that script? On my machine (Twisted 1.1.1, Python 2.3)
> when run with twistd -noy test.py works just okay. Perhaps the reason you're
> not getting expected behaviour is your fault (eg. you're running wrong
> script).
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


__________________________________
Do you Yahoo!?
Yahoo! Hotjobs: Enter the "Signing Bonus" Sweepstakes
http://hotjobs.sweepstakes.yahoo.com/signingbonus


From twisted-web@twistedmatrix.com  Sat Jan 10 18:01:47 2004
From: twisted-web@twistedmatrix.com (dave giffin)
Date: Sat, 10 Jan 2004 10:01:47 -0800 (PST)
Subject: [Twisted-web] NEWBIE: how to use only the networking core of twisted-web?
Message-ID: <20040110180147.81710.qmail@web60403.mail.yahoo.com>

I am currently running a web application on Medusa. I
wrote the request handling functions my self b/c I
needed to do make my web application work the way I
wanted. 

I'm having problems with Medusa though, because Medusa
(which uses the 'select' syscal) locks up on each
request, which is fine for quick/simple file serving,
but with some recent additions to my software, the
delays in processing scripts have increased and medusa
no longer serves my needs. 

I'm looking for a web server that uses threads (which
I think twisted-web does), but I want to use just the
HTTP server core of it, not the part that handles the
file locating, opening and the executing of python
scripts (the part that deals with .rpy scripts which
have to import certain classes). 

I just want to move my software from medusa to
twisted-web, so I need to know which function is
called when a request is recieved.

This way, I should be able to switch easily.

:)

__________________________________
Do you Yahoo!?
Yahoo! Hotjobs: Enter the "Signing Bonus" Sweepstakes
http://hotjobs.sweepstakes.yahoo.com/signingbonus


From twisted-web@twistedmatrix.com  Sat Jan 10 17:33:00 2004
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Sat, 10 Jan 2004 18:33:00 +0100
Subject: [Twisted-web] NEWBIE: how to use only the networking core of twisted-web?
In-Reply-To: <20040110180147.81710.qmail@web60403.mail.yahoo.com>
References: <20040110180147.81710.qmail@web60403.mail.yahoo.com>
Message-ID: <20040110173300.GA27122@pasternak.w.lub.pl>

dave giffin [Sat, Jan 10, 2004 at 10:01:47AM -0800]:
> I'm looking for a web server that uses threads (which
> I think twisted-web does),

Twisted Web doesn't use threads.

There are some reasons for that, I think that some of them are already
described at http://www.kuro5hin.org/story/2002/11/18/22112/860

> but I want to use just the
> HTTP server core of it, not the part that handles the
> file locating, opening and the executing of python
> scripts (the part that deals with .rpy scripts which
> have to import certain classes).

Twisted Web is highly customizable, so I think you won't have really big
problems with customizing it to a certain configuration. Basically speaking,
you don't have to use RPY scripts at all.


From twisted-web@twistedmatrix.com  Sat Jan 10 18:37:31 2004
From: twisted-web@twistedmatrix.com (Dean Skuldt)
Date: Sat, 10 Jan 2004 10:37:31 -0800 (PST)
Subject: [Twisted-web] wmfactory not consistently executed
In-Reply-To: <20040110172521.96778.qmail@web41609.mail.yahoo.com>
Message-ID: <20040110183731.24210.qmail@web41604.mail.yahoo.com>

It takes several tries for the error to occur.  Most often, the wmfactory
method is executed, but once in a while it fails.  When I test it, I issue
requests in a browser about once a second. The following shows three successes
followed by one failure:

2004/01/10 12:29 PST [HTTPChannel,0,127.0.0.1] in test wmfactory
2004/01/10 12:29 PST [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
[10/Jan/2004:20:29:19 +0000] "POST / HTTP/1.1" 200 74 "http://127.0.0.1:8088/"
"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.2.1) Gecko/20021204"
2004/01/10 12:29 PST [HTTPChannel,0,127.0.0.1] in test wmfactory
2004/01/10 12:29 PST [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
[10/Jan/2004:20:29:20 +0000] "POST / HTTP/1.1" 200 74 "http://127.0.0.1:8088/"
"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.2.1) Gecko/20021204"
2004/01/10 12:29 PST [HTTPChannel,0,127.0.0.1] in test wmfactory
2004/01/10 12:29 PST [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
[10/Jan/2004:20:29:21 +0000] "POST / HTTP/1.1" 200 74 "http://127.0.0.1:8088/"
"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.2.1) Gecko/20021204"
2004/01/10 12:29 PST [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
[10/Jan/2004:20:29:23 +0000] "POST / HTTP/1.1" 200 74 "http://127.0.0.1:8088/"
"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.2.1) Gecko/20021204"

I should also note that I wrote this test script to hone in on the problem.  In
my original script I also used a wvupdate method which DID consistently execute
for every request/response, but as with the test script the wmfactory method
didn't consistently execute.  

Has anyone experienced this?

Thanks, 

Dean

--- Dean Skuldt <deanskuldt@yahoo.com> wrote:
> I'm using 
> twistd -y test.py
> It's the correct script - thanks for checking that.
> --- Michal Pasternak <michal@pasternak.w.lub.pl> wrote:
> > Dean Skuldt [Sat, Jan 10, 2004 at 09:07:43AM -0800]:
> > > Thanks for your quick response. I tried it out, and I'm observing the
> same
> > > behaviour. Hmmmmm.
> > 
> > How are you running that script? On my machine (Twisted 1.1.1, Python 2.3)
> > when run with twistd -noy test.py works just okay. Perhaps the reason
> you're
> > not getting expected behaviour is your fault (eg. you're running wrong
> > script).
> > 
> > _______________________________________________
> > Twisted-web mailing list
> > Twisted-web@twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> 
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Hotjobs: Enter the "Signing Bonus" Sweepstakes
> http://hotjobs.sweepstakes.yahoo.com/signingbonus
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


__________________________________
Do you Yahoo!?
Yahoo! Hotjobs: Enter the "Signing Bonus" Sweepstakes
http://hotjobs.sweepstakes.yahoo.com/signingbonus


From twisted-web@twistedmatrix.com  Sat Jan 10 22:19:23 2004
From: twisted-web@twistedmatrix.com (James Y Knight)
Date: Sat, 10 Jan 2004 17:19:23 -0500
Subject: [Twisted-web] wmfactory not consistently executed
In-Reply-To: <20040110183731.24210.qmail@web41604.mail.yahoo.com>
References: <20040110183731.24210.qmail@web41604.mail.yahoo.com>
Message-ID: <0B030BF2-43BB-11D8-B29B-000A95A50FB2@fuhm.net>

On Jan 10, 2004, at 1:37 PM, Dean Skuldt wrote:
> It takes several tries for the error to occur.  Most often, the=20
> wmfactory
> method is executed, but once in a while it fails.  When I test it, I=20=

> issue
> requests in a browser about once a second. The following shows three=20=

> successes
> followed by one failure:
>
> I should also note that I wrote this test script to hone in on the=20
> problem.  In
> my original script I also used a wvupdate method which DID=20
> consistently execute
> for every request/response, but as with the test script the wmfactory=20=

> method
> didn't consistently execute.
>
> Has anyone experienced this?

I had all sorts of weird problems with the data caching in woven. I did=20=

try some workarounds, but never found one=A0I was happy with and that=20
worked quite properly. I don't recall ever seeing the problem with=20
wmfactory_ methods (just custom data objects), but I wouldn't be all=20
that surprised.

I've now moved to nevow, which doesn't cache data behind the scenes and=20=

thus doesn't have these problems.



From twisted-web@twistedmatrix.com  Sun Jan 11 02:18:04 2004
From: twisted-web@twistedmatrix.com (Andrew Bennetts)
Date: Sun, 11 Jan 2004 13:18:04 +1100
Subject: [Twisted-web] NEWBIE: how to use only the networking core of twisted-web?
In-Reply-To: <20040110180147.81710.qmail@web60403.mail.yahoo.com>
References: <20040110180147.81710.qmail@web60403.mail.yahoo.com>
Message-ID: <20040111021804.GA7709@frobozz>

Please stop reposting the exact same message over and over.  We read it the
first time.

-Andrew.



From twisted-web@twistedmatrix.com  Sun Jan 11 14:05:04 2004
From: twisted-web@twistedmatrix.com (Nikolaos Krontiris)
Date: Sun, 11 Jan 2004 16:05:04 +0200
Subject: [Twisted-web] Permission to use library?
Message-ID: <LAW11-OE331MULViPkp0001d7b9@hotmail.com>

This is a multi-part message in MIME format.

------=_NextPart_000_0062_01C3D85C.AD224140
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Hi there.
This is going to be a somewhat strange request but here goes...
I wrote a file transfer application which I want to copyright.
Only problem is, as you might imagine, it uses the twisted framework to =
do all the dirty sockets work. So, for this copyright to be filed =
properly, I need written permission from the authors of twisted.
I have read the license and I am also aware that there is not really =
just one "author" as such, since Twisted is a group of developers from =
all over ther world.
So, to make a long story short, could you please please please email me =
a signed written permission (scanned, obviously) so that I can go ahead =
with this copyright?
I guess it should say something like "We, the authors of the Twisted =
Framework give permission to Nikolaos Krontiris to use it as part of his =
work" or whatever you believe would be appropriate in such a case.
I know this is a hassle, but I would really appreciate your help.

Thanks in advance,

Nick.
------=_NextPart_000_0062_01C3D85C.AD224140
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2800.1276" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><FONT face=3DTahoma size=3D2>Hi there.</FONT></DIV>
<DIV><FONT face=3DTahoma size=3D2>This is going to be a somewhat strange =
request but=20
here goes...</FONT></DIV>
<DIV><FONT face=3DTahoma size=3D2>I wrote a file transfer application =
which I want=20
to copyright.</FONT></DIV>
<DIV><FONT face=3DTahoma size=3D2>Only problem is,&nbsp;as you might =
imagine, it=20
uses the twisted framework to&nbsp;do all the dirty sockets work. So, =
for this=20
copyright to be filed properly, I need written permission from the =
authors=20
of&nbsp;twisted.</FONT></DIV>
<DIV><FONT face=3DTahoma size=3D2>I have read the license and I am also =
aware that=20
there is not really just one&nbsp;"author" as such, since Twisted =
is&nbsp;a=20
group of developers from all over ther world.</FONT></DIV>
<DIV><FONT face=3DTahoma size=3D2>So, to make a long story short, could =
you please=20
please please&nbsp;email me a&nbsp;signed written=20
permission&nbsp;(scanned,&nbsp;obviously) so that I can go ahead with =
this=20
copyright?</FONT></DIV>
<DIV><FONT face=3DTahoma><FONT size=3D2>I guess it should say something =
like "We,=20
the authors of the&nbsp;Twisted Framework&nbsp;give permission to =
Nikolaos=20
Krontiris to use it as part of his work" or whatever you believe would =
be=20
appropriate in such a case.</FONT></FONT></DIV>
<DIV><FONT face=3DTahoma size=3D2>I know this is a hassle, but I would =
really=20
appreciate your help.</FONT></DIV>
<DIV><FONT face=3DTahoma size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>Thanks in advance,</FONT></DIV>
<DIV><FONT face=3DTahoma size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>Nick.</FONT></DIV></BODY></HTML>

------=_NextPart_000_0062_01C3D85C.AD224140--


From twisted-web@twistedmatrix.com  Sun Jan 11 14:02:00 2004
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Sun, 11 Jan 2004 15:02:00 +0100
Subject: [Twisted-web] Permission to use library?
In-Reply-To: <LAW11-OE331MULViPkp0001d7b9@hotmail.com>
References: <LAW11-OE331MULViPkp0001d7b9@hotmail.com>
Message-ID: <20040111140159.GA48617@pasternak.w.lub.pl>

Nikolaos Krontiris [Sun, Jan 11, 2004 at 04:05:04PM +0200]:
> I wrote a file transfer application which I want to copyright.
> Only problem is, as you might imagine, it uses the twisted framework to do all the dirty sockets work. So, for this copyright to be filed properly, I need written permission from the authors of twisted.

As Twisted is LGPL 2.1'd, you don't need such permission.

You can freely use it together with your applications, you don't have to
release the source of your application.

In case you modified Twisted itself and want to redistribute modified
product, you have to release sources if it.

Did I get LGPL 2.1 right?

-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net
::don't use MySQL::details on http://sql-info.de/mysql/gotchas.html::


From twisted-web@twistedmatrix.com  Sun Jan 11 15:09:15 2004
From: twisted-web@twistedmatrix.com (Ed Rahn)
Date: Sun, 11 Jan 2004 09:09:15 -0600
Subject: [Twisted-web] Permission to use library?
In-Reply-To: <LAW11-OE331MULViPkp0001d7b9@hotmail.com>
References: <LAW11-OE331MULViPkp0001d7b9@hotmail.com>
Message-ID: <20040111090915.280b89f4.ed@lamedomain.net>

Nick,
I would suggest you reread the copyright and license information
included with twisted. Twisted has only one copyright holder. The code
you wrote on your own is yours to copyright as you wish, you don't need
permission from anyone. You also don't need to file it with anyone. See
the LICENSE file included with twisted for distribution information.

Ed Rahn

On Sun, 11 Jan 2004 16:05:04 +0200
"Nikolaos Krontiris" <nkrontir@hotmail.com> wrote:

> Hi there.
> This is going to be a somewhat strange request but here goes...
> I wrote a file transfer application which I want to copyright.
> Only problem is, as you might imagine, it uses the twisted framework
> to do all the dirty sockets work. So, for this copyright to be filed
> properly, I need written permission from the authors of twisted. I
> have read the license and I am also aware that there is not really
> just one "author" as such, since Twisted is a group of developers from
> all over ther world. So, to make a long story short, could you please
> please please email me a signed written permission (scanned,
> obviously) so that I can go ahead with this copyright? I guess it
> should say something like "We, the authors of the Twisted Framework
> give permission to Nikolaos Krontiris to use it as part of his work"
> or whatever you believe would be appropriate in such a case. I know
> this is a hassle, but I would really appreciate your help.
> 
> Thanks in advance,
> 
> Nick.


From twisted-web@twistedmatrix.com  Sun Jan 11 15:49:04 2004
From: twisted-web@twistedmatrix.com (Andrew Bennetts)
Date: Mon, 12 Jan 2004 02:49:04 +1100
Subject: [Twisted-web] Permission to use library?
In-Reply-To: <LAW11-OE331MULViPkp0001d7b9@hotmail.com>
References: <LAW11-OE331MULViPkp0001d7b9@hotmail.com>
Message-ID: <20040111154858.GA1251@frobozz>

On Sun, Jan 11, 2004 at 04:05:04PM +0200, Nikolaos Krontiris wrote:
>    Hi there.
>    This is going to be a somewhat strange request but here goes...
>    I wrote a file transfer application which I want to copyright.
>    Only problem is, as you might imagine, it uses the twisted framework to do
>    all the dirty sockets work. So, for this copyright to be filed properly, I
>    need written permission from the authors of twisted.

This isn't quite right.

(I am not a lawyer, etc etc...)

With C code, the situation is that if your code depends on a library, it
must physically #include the other library's code (well, headers at least,
but they have code in them), and so the resulting executable is derived from
someone else's copywrited work, and so cannot be distributed by unless a the
library's license grants you the rights to do so.

With Python, the technical details of using libraries are different, but I
suspect that doesn't actually matter, legally speaking.  The intent is the
same -- your application depends on the library, so it is derived from it.

But as I understand it, just because your work is derived from someone
else's doesn't mean you don't own your work.  Or more precisely, I think the
way it works is that there's two inseperable parts to a derived work:
    - the portion you wrote.  You own the copyright of this portion.
    - the derived portion.  The copyright for this is obviously the same as
      the work it is derived from.

Because a derived work combines those two parts, then you have no rights to
copy it (i.e. copyright) unless you have a license that grants you those
rights.

Twisted is licensed under the LGPL (see the LICENSE file that comes with
Twisted).  For works that use LGPL code as a library, this license
explicitly allows you to distribute those works, and imposes no restrictions
on this, allowing you to license those works however you like.  If your work
falls into this category, then you have nothing at all to worry about.

The LGPL also allows you distribute works that are based on the library
(rather than merely using it), but in that case it requires that
distribution of those works must be licensed under the LGPL.

Read the LGPL for the exact distinction it makes between "uses a library"
and "is based on a library".  In the context of Python code, I'd say that
doing "import foolib" is "using a library", but creating a barlib that has
lines of source code copied from foolib would be "based on a library".

Also see e.g. http://www.groklaw.net/ for *lots* of discussion on these
topics...  the GPL FAQ is also a good reference (even though Twisted's
license is LGPL).

(If anyone has any links that explain (or refute! :) this clearly, I'd love
to see them.)

>    I have read the license and I am also aware that there is not really just
>    one "author" as such, since Twisted is a group of developers from all over
>    ther world.

This is true -- but one of the quirks of Twisted is that contributions'
copyright must be assigned to Glyph.  So while the original authors still
retain their individual copyrights, Glyph does have copyright for the entire
codebase, and can relicense the code if necessary.

I don't think this is necessary in your case, though (see my next comment).

>    So, to make a long story short, could you please please please email me
>    a signed written permission (scanned, obviously) so that I can go ahead
>    with this copyright?

You already have copyright.  It's automatically yours upon creation; see
http://www.copyright.gov/circs/circ1.html#hsc

Of course, I'm not a lawyer, so this is not proper legal advice, etc.  But I
do read too many websites for my own good! :)

-Andrew.



From twisted-web@twistedmatrix.com  Sun Jan 11 19:57:25 2004
From: twisted-web@twistedmatrix.com (Nikolaos Krontiris)
Date: Sun, 11 Jan 2004 21:57:25 +0200
Subject: [Twisted-web] Permission to use library?
References: <LAW11-OE331MULViPkp0001d7b9@hotmail.com>
Message-ID: <Law11-OE65KBPqiKYKH00005c02@hotmail.com>

This is a multi-part message in MIME format.

------=_NextPart_000_000A_01C3D88D.E61303A0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Thank you all for your quick replies and help, which is greatly =
appreciated. 
------=_NextPart_000_000A_01C3D88D.E61303A0
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2800.1276" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><FONT face=3DTahoma size=3D2>Thank you all for your quick replies =
and help,=20
which is greatly appreciated. </FONT></DIV></BODY></HTML>

------=_NextPart_000_000A_01C3D88D.E61303A0--


From twisted-web@twistedmatrix.com  Sun Jan 11 22:55:53 2004
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Sun, 11 Jan 2004 17:55:53 -0500
Subject: [Twisted-web] Permission to use library?
In-Reply-To: <Law11-OE65KBPqiKYKH00005c02@hotmail.com>
References: <LAW11-OE331MULViPkp0001d7b9@hotmail.com> <Law11-OE65KBPqiKYKH00005c02@hotmail.com>
Message-ID: <4001D479.6060502@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enigA54BBB09EEFBF9B702B02D99
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Nikolaos Krontiris wrote:
> Thank you all for your quick replies and help, which is greatly appreciated. 

Thank you, also, for posting all general Twisted discussion to the 
appropriate list, twisted-python, as opposed to the list for discussion 
of WEB technologies, twisted-web. :-)

In particular, this is because I don't believe the person who actually 
owns the copyright of Twisted is subscribed to this list. But even that 
wouldn't make it appropriate :-)

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enigA54BBB09EEFBF9B702B02D99
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFAAdR5Np279O1/OG4RAqRQAJ9pb3KwojkO6ta2qpwCt92uknu8SgCfYigv
D+WyB6fkPfIVlZCdfjw9oro=
=1pSQ
-----END PGP SIGNATURE-----

--------------enigA54BBB09EEFBF9B702B02D99--


From twisted-web@twistedmatrix.com  Tue Jan 13 04:30:55 2004
From: twisted-web@twistedmatrix.com (Mike Schneider)
Date: Mon, 12 Jan 2004 23:30:55 -0500
Subject: [Twisted-web] How do I Install Nevow in twisted
Message-ID: <20040113043055.JGYC22615.smtp2.fuse.net@smtp.fuse.net>

Hello All,


I am running twisted 1.1.1 on windows.  I read the docs on nevow and would
like to try it.  The docs said that nevou was not packaged with twisted.

I have a couple of simple questions that I hope some kind person can help me with.


- can I used twisted 1.1.1?
     - If not, do I need CVS head of twisted?
- What package(s) do I need to download from the sourceforge page to work with
- Do I install this package into my python environment or my twisted environment

???

Thanks in advance, it looks like a great package.

Mike Schneider



From twisted-web@twistedmatrix.com  Tue Jan 13 04:34:49 2004
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Mon, 12 Jan 2004 23:34:49 -0500
Subject: [Twisted-web] How do I Install Nevow in twisted
In-Reply-To: <20040113043055.JGYC22615.smtp2.fuse.net@smtp.fuse.net>
References: <20040113043055.JGYC22615.smtp2.fuse.net@smtp.fuse.net>
Message-ID: <40037569.4090603@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig8BADF3FE1F55BC295AAEDB5B
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Mike Schneider wrote:
> Hello All,
> 
> 
> I am running twisted 1.1.1 on windows.  I read the docs on nevow and would
> like to try it.  The docs said that nevou was not packaged with twisted.

Just make sure the nevow and atop packages are available in your 
pythonpath. I recommend *not* putting the quotient package in your 
pythonpath, because it has third party dependancies and things will be 
imported just from its existence there, because they're a bunch of 
goons. But enough of that :-) As long as you can say "import nevow" 
without an error, you're fine.

> - can I used twisted 1.1.1?
>      - If not, do I need CVS head of twisted?

Twisted 1.1.1 is probably fine, IIRC....

> - What package(s) do I need to download from the sourceforge page to work with

sourceforge paage? what are you talking about?

> - Do I install this package into my python environment or my twisted environment

Python environment.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig8BADF3FE1F55BC295AAEDB5B
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFAA3VpNp279O1/OG4RAjs5AKCKL3O5AyjU1kmIOOSbKH41O4VnZgCfZfYT
Pc0Ny8Khcvx+nCU3xSU/Fmw=
=xEqj
-----END PGP SIGNATURE-----

--------------enig8BADF3FE1F55BC295AAEDB5B--


From twisted-web@twistedmatrix.com  Tue Jan 13 18:05:23 2004
From: twisted-web@twistedmatrix.com (Mike Schneider)
Date: Tue, 13 Jan 2004 13:05:23 -0500
Subject: [Twisted-web] Re: How do I install Nevow in twisted
Message-ID: <20040113180523.CNGE27553.smtp1.fuse.net@smtp.fuse.net>

Christopher,

Thanks for your help.

>> - What package(s) do I need to download from the sourceforge page to work with

>sourceforge page? what are you talking about?

The docs said to install quotent, and the download page 
for quotent is on sourceforge

http://sourceforge.net/project/showfiles.php?group_id=78939

The CVS page is on the divmod.org server
$cvs -d:pserver:anon@divmod.org:/cvs login
When you get the "CVS Password: " prompt, just hit enter. Then, issue the command:

$ cvs -d:pserver:anon@divmod.org:/cvs co Quotient




Should I ditch the sourceforge release and go straight to CVS?

Thank you for your help,
Mike








From twisted-web@twistedmatrix.com  Tue Jan 13 23:22:08 2004
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Tue, 13 Jan 2004 18:22:08 -0500
Subject: [Twisted-web] Re: How do I install Nevow in twisted
In-Reply-To: <20040113180523.CNGE27553.smtp1.fuse.net@smtp.fuse.net>
References: <20040113180523.CNGE27553.smtp1.fuse.net@smtp.fuse.net>
Message-ID: <40047DA0.7060706@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig6A6589FBDAC42CCBED58E5E1
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Mike Schneider wrote:

> Should I ditch the sourceforge release and go straight to CVS?

Yes. Nevow is still in a state where it won't be useful to you unless 
you track CVS and keep in good communication with Donovan, through this 
list, and probably more effectively, IRC (#twisted.web on irc.freenode.net).

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig6A6589FBDAC42CCBED58E5E1
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFABH2gNp279O1/OG4RAgBeAJ4tcISUy8t5e1lyImJBAwNQUAeUGgCdHADJ
h9whbb9qzH2Pvx9XU1UK/2g=
=EPhq
-----END PGP SIGNATURE-----

--------------enig6A6589FBDAC42CCBED58E5E1--


From twisted-web@twistedmatrix.com  Thu Jan 15 04:02:29 2004
From: twisted-web@twistedmatrix.com (Mike Mueller)
Date: Thu, 15 Jan 2004 05:02:29 +0100
Subject: [Twisted-web] support for other languages in newov
Message-ID: <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net>

I am playing around with newov and especially freeform. It is very nice.
Since I need to support German at my web site it would nice if error=20
messages and other information that are sent back to the visitor could be=20
in an other language.
I came up with a simple solution using a dict that holds all the messages=20
in different languages.

multilang.py

multilangDict =3D {'emptyPasswd':{'eng':"Please enter a non-empty=
 password.",
                                'de':"Ein leeres Passwort ist nicht=20
erlaubt. Eingabe bitte wiederholen!"
                                 },
                  'passwdDontMatch':{'eng':"Passwords do not match. Please=
=20
reenter.",
                                     'de':"Die Passw=F6rter stimmen nicht=20
=FCberrein. Eingabe bitte wiederholen!"
                                     }
                  }

Umlauts (=F6 and =FC) work with my browser settings but might need to use &=
=20
uml; notation:

multilang2.py

from newov stan import xml
multilangDict =3D {'emptyPasswd':{'eng':"Please enter a non-empty=
 password.",
                                'de':"Ein leeres Passwort ist nicht=20
erlaubt. Eingabe bitte wiederholen!"
                                 },
                  'passwdDontMatch':{'eng':"Passwords do not match. Please=
=20
reenter.",
                                     'de':xml("Die Passw&uml;rter stimmen=20
nicht =E6uuml;berrein. Eingabe bitte wiederholen!")
                                     }
                  }

Unicode might be necessary if languages like Chinese are needed.

in freeform.py you just put:

from nevow import multilang
multilangDict =3D multilang.multilangDict
lang =3D 'de'  #read from configuration somewhere or set by visitor or url=
=20
like www.example.com/mylang/foo

and change the formless.InputError arguments to dict lookups, e.g.:

class PasswordValidator(components.Adapter):
     __implements__ =3D IInputValidator,

     def validate(self, context, boundTo, data):
         """Password needs to look at two passwords in the data,
         """
         pw1 =3D data[0]
         if pw1 =3D=3D '':
             raise formless.InputError(multilangDict['emptyPasswd'][lang])=
=20
#changed
         args =3D context.locate(iwoven.IRequest).args
         binding =3D context.locate(formless.IBinding)
         pw2 =3D args.get("%s____2" % binding.name, [''])[0]
         if pw1 !=3D pw2:
             raise=20
formless.InputError(multilangDict['passwdDontMatch'][lang]) #changed f
         return self.original.coerce(data[0])


This works the way I want it. Since the number of messages is rather small=
=20
a dict seems ok in terms of memory usage.

Because the languages part is in a separate file, it can be maintained by=20
anybody who knows the (foreign) languages without the need of looking=20
through the code. If the same message is used at several places changing it=
=20
becomes much easier too.

How do you thing about it?


Mike



From twisted-web@twistedmatrix.com  Thu Jan 15 08:02:03 2004
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Thu, 15 Jan 2004 09:02:03 +0100
Subject: [Twisted-web] support for other languages in newov
In-Reply-To: <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net>
References: <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net>
Message-ID: <20040115080203.GC98146@pasternak.w.lub.pl>

Mike Mueller [Thu, Jan 15, 2004 at 05:02:29AM +0100]:
> I came up with a simple solution using a dict that holds all the messages
> in different languages.
[...]
> How do you thing about it?

It's really nice. Any particular reasons you didn't use gettext?


From twisted-web@twistedmatrix.com  Fri Jan 16 00:00:03 2004
From: twisted-web@twistedmatrix.com (Mike Mueller)
Date: Fri, 16 Jan 2004 01:00:03 +0100
Subject: [Twisted-web] support for other languages in newov
In-Reply-To: <20040115080203.GC98146@pasternak.w.lub.pl>
References: <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net>
 <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net>
Message-ID: <5.2.1.1.1.20040115232343.00afa818@pop.gmx.net>

>Mike Mueller [Thu, Jan 15, 2004 at 05:02:29AM +0100]:
> > I came up with a simple solution using a dict that holds all the messages
> > in different languages.
>[...]
> > How do you thing about it?

At 09:02 15.01.2004 +0100, Michal wrote:

>It's really nice. Any particular reasons you didn't use gettext?
Just that I didn't know that it exists. Well, I didn't look for it.
After looking at it, the problem is that gettext assumes that there is a 
global language that is valid for the the whole application at any given 
point in time.
I would like to have two (or more) languages at the same time. Depending on 
the preferred language of the current visitor, each session has "its" language.

Even with my approach, using the lang attribute on the module level, will 
not work if asynchronous programming is involved. Since I am going to use 
deferreds, time is 'not linear any more'. So changing the lang attribute of 
a module back and forth might have effects on different sessions(?)

A solution would be to make the lang a session attribute:

At the first encounter of the session do:

request = context.locate(iwoven.IRequest)
session = request.getSession()
lang = getattr(session, 'lang', currentLang)


later you might want to change the language:

request = context.locate(iwoven.IRequest)
session = request.getSession()
session.lang = currentLangNow

Extend the relevant parts of freeform.py (and other modules that return 
messages) to:

class PasswordValidator(components.Adapter):
     __implements__ = IInputValidator,

     def validate(self, context, boundTo, data):
         """Password needs to look at two passwords in the data,
         """
         request = context.locate(iwoven.IRequest)
         session = request.getSession()
         pw1 = data[0]
         if pw1 == '':
             raise 
formless.InputError(multilangDict['emptyPasswd'][session.lang]) #changed
         args = context.locate(iwoven.IRequest).args
         binding = context.locate(formless.IBinding)
         pw2 = args.get("%s____2" % binding.name, [''])[0]
         if pw1 != pw2:
             raise 
formless.InputError(multilangDict['passwdDontMatch'][session.lang]) #changed
         return self.original.coerce(data[0])


This should give you the possibility to guess the language from

request.getHeader('user-agent')

and also let the visitor to select his/her preferred languages (you know 
those small icons with flags).

I don't know if this is the best way to do it. If yes, is there any way 
that it makes it into the source? It would essentially mean adding this two 
lines to all the methods that return some kind of message to the visitor, 
provided all of the relevant methods take a context argument. And of course 
it means using multilangDict['phraseKey'][session.lang] instead of a 
message English message consistently .


I would volunteer to implement this and could also make the German messages.



Mike








From twisted-web@twistedmatrix.com  Fri Jan 16 01:03:52 2004
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Thu, 15 Jan 2004 20:03:52 -0500
Subject: [Twisted-web] support for other languages in newov
In-Reply-To: <5.2.1.1.1.20040115232343.00afa818@pop.gmx.net>
References: <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net> <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net> <5.2.1.1.1.20040115232343.00afa818@pop.gmx.net>
Message-ID: <40073878.4000205@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enigB722A8877D9E94BF4112AE0F
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Mike Mueller wrote:
> At 09:02 15.01.2004 +0100, Michal wrote:
>> It's really nice. Any particular reasons you didn't use gettext?
> 
> Just that I didn't know that it exists. Well, I didn't look for it.
> After looking at it, the problem is that gettext assumes that there is a 
> global language that is valid for the the whole application at any given 
> point in time.
> I would like to have two (or more) languages at the same time. Depending 
> on the preferred language of the current visitor, each session has "its" 
> language.

You sure about that? I'm certain I remember a conversation where someone 
else said the same thing, but was successfully told otherwise (with an 
explanation). I don't remember the details, but maybe someone else does 
(or you'll notice them if you look deeper ;)

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enigB722A8877D9E94BF4112AE0F
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFABzh4Np279O1/OG4RAuZeAJ4pNmpdgCtVdjCOo8A2LY3o8ZA/0wCeIhvX
dqxjJ1PpXa1cXx4fHWeDg64=
=I+UW
-----END PGP SIGNATURE-----

--------------enigB722A8877D9E94BF4112AE0F--


From twisted-web@twistedmatrix.com  Fri Jan 16 03:23:57 2004
From: twisted-web@twistedmatrix.com (Mike Mueller)
Date: Fri, 16 Jan 2004 04:23:57 +0100
Subject: [Twisted-web] support for other languages in newov
In-Reply-To: <40073878.4000205@twistedmatrix.com>
References: <5.2.1.1.1.20040115232343.00afa818@pop.gmx.net>
 <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net>
 <5.2.1.1.1.20040115041019.00af7750@pop.gmx.net>
 <5.2.1.1.1.20040115232343.00afa818@pop.gmx.net>
Message-ID: <5.2.1.1.1.20040116040636.00b04e00@pop.gmx.net>

>>Mike : After looking at it, the problem is that gettext assumes that 
>>there is a global language that is valid for the the whole application at 
>>any given point in time.
>>I would like to have two (or more) languages at the same time. Depending 
>>on the preferred language of the current visitor, each session has "its" 
>>language.
>
>Christopher (radix): You sure about that? I'm certain I remember a 
>conversation where someone else said the same thing, but was successfully 
>told otherwise (with an explanation). I don't remember the details, but 
>maybe someone else does (or you'll notice them if you look deeper ;)


Do you mean gettext is not global for whole application or it is not 
possible to store the language in a session?
I guess the latter. This boils down to problems with unique session data.
In the December archive of twisted-web I found
<http://www.twistedmatrix.com/pipermail/twisted-web/2003-December/000045.html>http://www.twistedmatrix.com/pipermail/twisted-web/2003-December/000045.html
which a essentially says, as long as session data are always retrieved from 
request and ./twistd -oy script.tac is used it should work. I hope this 
applies to newov. Getting session straight is very important if people need 
to have different views on a page. This is a rather common scenario for 
dynamic pages, I think.


Mike



From twisted-web@twistedmatrix.com  Fri Jan 16 23:12:42 2004
From: twisted-web@twistedmatrix.com (James Y Knight)
Date: Fri, 16 Jan 2004 18:12:42 -0500
Subject: [Twisted-web] more nevow patches
Message-ID: <7CACBB3C-4879-11D8-BC99-000A95A50FB2@fuhm.net>

--Apple-Mail-3--649201377
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=US-ASCII;
	format=flowed

This time we've got the following:
1) context.patterns: replaced 'raiseIfMissing' argument with 'default' 
argument, as it's more flexible. Had to move 'invisible' into stan.py.
2) renderer.flatten: made it smaller, faster, better.
3) renderer.HTMLRenderer: class/initializer attribute 
"beExtremelyLenient" that gets passed to microdom, so that even sucky 
HTML can be used as a template, if desired. Defaults to false, of 
course.
5) stan.Proto has a clone method that returns self.
4) replaced ISerializable adapter with a simple function call. 
Currently looks up the function to call in the adapter binding list, 
which is kinda a hack, but simplest for now.
ISerializable(obj).serialize(obj, context, stream) is now 
renderer.serialize(obj, context).

The serialize and flatten changes together seriously sped up my app.

James


--Apple-Mail-3--649201377
Content-Transfer-Encoding: 7bit
Content-Type: application/octet-stream;
	x-unix-mode=0644;
	name="nevow2.patch"
Content-Disposition: attachment;
	filename=nevow2.patch

Index: context.py
===================================================================
RCS file: /cvs/Quotient/nevow/context.py,v
retrieving revision 1.15
diff -u -r1.15 context.py
--- context.py	16 Jan 2004 21:36:27 -0000	1.15
+++ context.py	16 Jan 2004 23:08:34 -0000
@@ -173,13 +173,17 @@
                 return
         top.parent = context
 
-    def patterns(self, pattern, raiseIfMissing=True):
+    def patterns(self, pattern, default=None):
         """Generate clones of pattern tags forever, looping around to the beginning
         when we run out of unique matches.
+
+        If no matches are found, and default is None, raise an exception,
+        otherwise, return clones of default, forever.
+
         """
         tag = self.tag.clone()
         stripContexts(tag)
-        patterner = self._locatePatterns(tag, pattern, raiseIfMissing)
+        patterner = self._locatePatterns(tag, pattern, default)
         return PatternTag(patterner)
 
     def slotted(self, slot):
@@ -198,7 +202,7 @@
         warnings.warn("use patterns instead", stacklevel=2)
         return self.patterns(pattern)
 
-    def _locatePatterns(self, tag, pattern, raiseIfMissing):
+    def _locatePatterns(self, tag, pattern, default):
         keeplooking = True
         while keeplooking:
             keeplooking = False
@@ -207,10 +211,10 @@
                 cloned = x.clone()
                 cloned.pattern = Unset
                 yield cloned
-        if raiseIfMissing:
+        if default is None:
             raise RuntimeError, "Pattern %s was not found." % pattern
         while True:
-            yield invisible
+            yield default.clone()
 
     def _locateOne(self, name, locator, descr):
         found = False
Index: freeform.py
===================================================================
RCS file: /cvs/Quotient/nevow/freeform.py,v
retrieving revision 1.88
diff -u -r1.88 freeform.py
--- freeform.py	16 Jan 2004 21:36:27 -0000	1.88
+++ freeform.py	16 Jan 2004 23:08:34 -0000
@@ -446,7 +446,7 @@
                         ]
                     else:
                         ## No configurable, let's just throw whatever it was in the dom
-                        if iwoven.ISerializable(value, None):
+                        if renderer.getSerializer(value):
                             try:
                                 for x in range(100):
                                     theData = context.locate(iwoven.IData, x+1)
@@ -529,7 +529,7 @@
         if getattr(typedRenderer, 'complexType', False):
             return invisible(data=data, renderer=typedRenderer)
 
-        flat = flatten(iwoven.ISerializable(invisible(data=data, renderer=typedRenderer, key=data.name)).serialize(context, None))
+        flat = flatten(renderer.serialize(invisible(data=data, renderer=typedRenderer, key=data.name), context))
         if not flat:
             return ''
         if isGrouped(context, 2):
Index: iwoven.py
===================================================================
RCS file: /cvs/Quotient/nevow/iwoven.py,v
retrieving revision 1.9
diff -u -r1.9 iwoven.py
--- iwoven.py	13 Jan 2004 18:26:12 -0000	1.9
+++ iwoven.py	16 Jan 2004 23:08:34 -0000
@@ -62,14 +62,13 @@
     """A web request
     """
 
-
 class ISerializable(components.Interface):
-    def serialize(self, context, stream):
-        """Serialize the adaptee to the given stream, with the given context
+    ## fixme -- how to describe new interface?
+    def serialize(self, context):
+        """Serialize the adaptee, with the given context
         stack if necessary.
         """
 
-
 class IStatusMessage(components.Interface):
     """A marker interface, which should be set on the user's web session
     to an object which can be cast to a string, which will be shown to the
Index: renderer.py
===================================================================
RCS file: /cvs/Quotient/nevow/renderer.py,v
retrieving revision 1.32
diff -u -r1.32 renderer.py
--- renderer.py	16 Jan 2004 21:36:27 -0000	1.32
+++ renderer.py	16 Jan 2004 23:08:34 -0000
@@ -25,39 +25,66 @@
 from nevow import tags
 from nevow.context import WovenContext
 
+from twisted.python import components
+# FIXME: hack!
+# and the way serialize is implemented is possibly an
+# abuse of the components system, but hey, it WORKS. :)
+
+cachedAdapters = {}
+def getSerializer(obj):
+    registry = components.getRegistry(None)
+    
+    if hasattr(obj, '__class__'):
+        klas = obj.__class__
+    else:
+        klas = type(obj)
+
+    adapter = cachedAdapters.get(klas, None)
+    if adapter is not None:
+        return adapter
+    
+    # print "Adding cache entry for ",klas
+    fromInterfaces = components.classToInterfaces(klas)
+    for fromInterface in fromInterfaces:
+        # print " trying: ", fromInterface
+        adapter = registry.getAdapterFactory(fromInterface, ISerializable, None)
+        if adapter is not None:
+            cachedAdapters[klas] = adapter
+            return adapter
+    return None
+
+def serialize(obj, context):
+    serializer = getSerializer(obj)
+    if serializer is not None:
+        return serializer(obj, context)
+    raise NotImplementedError('%s instance (type %s) does not implement %s, and '
+                              'there is no registered adapter.' %
+                              (obj, type(obj), ISerializable))
 
-def flatten(gen):
-    """
-    I am a permissive flattener for precompilation.
-    """
-    results = []
-    accumulator = ''
+
+def _flatten(gen, straccum, results):
     for item in gen:
         if isinstance(item, types.StringTypes):
-            accumulator += item
+            straccum.append(item)
         else:
-            if isinstance(item, types.GeneratorType):
-                for sub in flatten(item):
-                    if isinstance(sub, types.StringTypes):
-                        accumulator += sub
-                    else:
-                        if accumulator:
-                            results.append(xml(accumulator))
-                        results.append(sub)
-                        accumulator = ''
-            elif isinstance(item, types.ListType):
-                 if accumulator:
-                     results.append(xml(accumulator))
-                 results.extend(item)
-                 accumulator=''
+            if isinstance(item, (types.GeneratorType, types.ListType)):
+                _flatten(item, straccum, results)
             else:
-                # anything that can be adapted to ISerializable
-                if accumulator:
-                    results.append(xml(accumulator))
+                # anything that can be serialize()d
+                if straccum:
+                    results.append(xml(''.join(straccum)))
                 results.append(item)
-                accumulator = ''
-    if accumulator:
-        results.append(xml(accumulator))
+                del straccum[:]
+    
+def flatten(gen):
+    """
+    I am a permissive flattener for precompilation.
+    """
+    straccum = []
+    results = []
+    _flatten(gen, straccum, results)
+    if straccum:
+        results.append(xml(''.join(straccum)))
     return results
 
 def _strflatten(context, gen, buf):
@@ -73,7 +100,7 @@
                 print "ERROR: Deferred has no result!"
                 buf("ERROR: Deferred has no result!")
             else:
-                for sub in _strflatten(context, ISerializable(item.result).serialize(context, None), buf):
+                for sub in _strflatten(context, serialize(item.result, context), buf):
                     yield sub
         else:
             for sub in _strflatten(context, item, buf):
@@ -215,7 +242,7 @@
         context = WovenContext(precompile=True)
         context.remember(self, resource.IResource)
         context.remember(self, IRendererFactory)
-        _documents[klsnm] = rv = flatten(ISerializable(self.document).serialize(context, None))
+        _documents[klsnm] = rv = flatten(serialize(self.document, context))
         return rv
 
     beforeRender = None
@@ -258,7 +285,7 @@
             def finisher():
                 finishRequest()
                 return request.finish()
-        render(ISerializable(self.doc).serialize(context, request), context, writer, finisher)
+        render(serialize(self.doc, context), context, writer, finisher)
         return server.NOT_DONE_YET
 
 
@@ -268,21 +295,24 @@
     """
     templateDirectory = ''
     templateFile = ''
+    beExtremelyLenient=False
     key = 'content'
-    def __init__(self, original=None, templateDirectory=None, templateFile=None, key=None):
+    def __init__(self, original=None, templateDirectory=None, templateFile=None, key=None, beExtremelyLenient=None):
         if templateDirectory is not None:
             self.templateDirectory = templateDirectory
         if templateFile is not None:
             self.templateFile = templateFile
         if key is not None:
             self.key = key
+        if beExtremelyLenient is not None:
+            self.beExtremelyLenient = beExtremelyLenient
         self.precompileTime = None
         Renderer.__init__(self, original)
 
     def precompile(self):
         context = WovenContext(precompile=True).remember(self, resource.IResource)
-        dom = microdom.parse(os.path.join(self.templateDirectory, self.templateFile))
-        doc = flatten(ISerializable(dom).serialize(context, None))
+        dom = microdom.parse(os.path.join(self.templateDirectory, self.templateFile), beExtremelyLenient=self.beExtremelyLenient)
+        doc = flatten(serialize(dom, context))
         # Precompiled. Record the time so we know when to reload the template.
         self.precompileTime = time.time()
         return doc
@@ -325,7 +355,7 @@
     def __init__(self, doc):
         context = WovenContext(precompile=True).remember(self, resource.IResource)
         context.remember(self, IRendererFactory)
-        self.doc = flatten(ISerializable(doc).serialize(context, None))
+        self.doc = flatten(serialize(doc, context))
         ## Bypass Renderer init
         self.toremember = []
         resource.Resource.__init__(self)
Index: stan.py
===================================================================
RCS file: /cvs/Quotient/nevow/stan.py,v
retrieving revision 1.17
diff -u -r1.17 stan.py
--- stan.py	16 Jan 2004 21:36:27 -0000	1.17
+++ stan.py	16 Jan 2004 23:08:34 -0000
@@ -19,6 +19,8 @@
     def __getitem__(self, children):
         return Tag(self)[children]
 
+    def clone(self, deep=True):
+        return self
 
 class xml(str):
     """Raw xml marker
@@ -220,7 +222,7 @@
 def sequence(context, data):
     headers = specialMatches(context.tag, 'pattern', 'header')
     pattern = context.patterns('item')
-    divider = context.patterns('divider', raiseIfMissing=False)
+    divider = context.patterns('divider', default=Proto(''))
     content = [(pattern(data=element), divider(data=element)) for element in data]
     if not content:
         content = specialMatches(context.tag, 'pattern', 'empty')
@@ -251,5 +253,7 @@
     def __call__(self, **kw):
         return NotImplementedError('comments are not callable')
 
+invisible = Proto('')
+
 
 
Index: tags.py
===================================================================
RCS file: /cvs/Quotient/nevow/tags.py,v
retrieving revision 1.8
diff -u -r1.8 tags.py
--- tags.py	13 Jan 2004 01:46:40 -0000	1.8
+++ tags.py	16 Jan 2004 23:08:34 -0000
@@ -4,11 +4,9 @@
 # Public License as published by the Free Software Foundation.
 
 
-from nevow.stan import Proto, Tag, directive, xml, CommentProto
+from nevow.stan import Proto, Tag, directive, xml, CommentProto, invisible
 
 
-invisible = Proto('')
-
 comment = CommentProto()
 
 tags = [
Index: url.py
===================================================================
RCS file: /cvs/Quotient/nevow/url.py,v
retrieving revision 1.6
diff -u -r1.6 url.py
--- url.py	16 Jan 2004 21:36:27 -0000	1.6
+++ url.py	16 Jan 2004 23:08:34 -0000
@@ -64,19 +64,15 @@
 root = URLOverlay(rootaccessor)
 
 
-class URLOverlaySerializer(components.Adapter):
-    __implements__ = iwoven.ISerializable,
-
-    def serialize(self, context, stream):
-        over = self.original
-        if context.precompile:
-            yield self
-        else:
-            url = over.urlaccessor(context)
-            for (cmd, args, kw) in over.dolater:
-                url = getattr(url, cmd)(*args, **kw)
-            url.query = urllib.urlencode(over.appendquery)
-            yield xml(str(url))
+def URLOverlaySerializer(original, context, stream):
+    if context.precompile:
+        yield self
+    else:
+        url = original.urlaccessor(context)
+        for (cmd, args, kw) in original.dolater:
+            url = getattr(url, cmd)(*args, **kw)
+        url.query = urllib.urlencode(original.appendquery)
+        yield xml(str(url))
 
 
 ## This is totally unfinished and doesn't work yet.
Index: serial/flatmdom.py
===================================================================
RCS file: /cvs/Quotient/nevow/serial/flatmdom.py,v
retrieving revision 1.12
diff -u -r1.12 flatmdom.py
--- serial/flatmdom.py	16 Jan 2004 21:36:27 -0000	1.12
+++ serial/flatmdom.py	16 Jan 2004 23:08:34 -0000
@@ -5,38 +5,27 @@
 
 from __future__ import generators
 
-from nevow.iwoven import ISerializable
+from nevow.renderer import serialize
 from nevow.stan import Tag, xml, directive
 
 from twisted.python import components
 
-class MicroDomTextSerializer(components.Adapter):
-    __implements__ = ISerializable,
-    
-    def serialize(self, context, stream):
-        if self.original.raw:
-            yield self.original.nodeValue
-        else:
-            from twisted.xish.domish import escapeToXml
-            yield escapeToXml(self.original.nodeValue)
+def MicroDomTextSerializer(original, context):
+    if original.raw:
+        yield original.nodeValue
+    else:
+        from twisted.xish.domish import escapeToXml
+        yield escapeToXml(original.nodeValue)
 
 
-class MicroDomCommentSerializer(components.Adapter):
-    __implements__ = ISerializable,
+def MicroDomCommentSerializer(original, context):
+    yield xml("<!--%s-->" % original.data)
     
-    def serialize(self, context, stream):
-        yield xml("<!--%s-->" % self.original.data)
-
-class MicroDomEntityReferenceSerializer(components.Adapter):
-    __implements__ = ISerializable,
-
-    def serialize(self, context, stream):
-        yield xml(self.original.nodeValue)
-
+def MicroDomEntityReferenceSerializer(original, context):
+    yield xml(original.nodeValue)
 
-class MicroDomElementSerializer(components.Adapter):
-    __implements__ = ISerializable,
 
+def MicroDomElementSerializer(original, context):
     directiveMapping = {
         'render': 'renderer',
         'data': 'data',
@@ -46,43 +35,39 @@
         'pattern', 'slot', 'macro', 'fill-slot', 'key',
     ]
 
-    def serialize(self, context, stream):
-        element = self.original
-        attrs = dict(element.attributes) # get rid of CaseInsensitiveDict
-        specials = {}
-        attributes = self.attributeList
-        directives = self.directiveMapping
-        for k, v in attrs.items():
-            # I know, this is totally not the way to do xml namespaces but who cares right now
-            ## I'll fix it later
-            if not k.startswith('nevow:'):
-                continue
-            _, nons = k.split(':')
-            if nons in directives:
-                ## clean this up by making the names more consistent
-                specials[directives[nons]] = directive(v)
-                del attrs[k]
-            if nons in attributes:
-                specials[nons] = v
-                del attrs[k]
-
-        yield ISerializable(
-            Tag(
-                element.tagName,
-                attributes=attrs,
-                children=element.childNodes,
-                specials=specials
-            )
-        ).serialize(context, stream)
-
-
-class MicroDomDocumentSerializer(components.Adapter):
-    __implemenents__ = ISerializable,
-
-    def serialize(self, context, stream):
-        if self.original.doctype:
-            yield "<!DOCTYPE %s!>\n" % self.original.doctype
-        for n in self.original.childNodes:
-            yield ISerializable(n).serialize(context, stream)
+    element = original
+    attrs = dict(element.attributes) # get rid of CaseInsensitiveDict
+    specials = {}
+    attributes = attributeList
+    directives = directiveMapping
+    for k, v in attrs.items():
+        # I know, this is totally not the way to do xml namespaces but who cares right now
+        ## I'll fix it later
+        if not k.startswith('nevow:'):
+            continue
+        _, nons = k.split(':')
+        if nons in directives:
+            ## clean this up by making the names more consistent
+            specials[directives[nons]] = directive(v)
+            del attrs[k]
+        if nons in attributes:
+            specials[nons] = v
+            del attrs[k]
+
+    yield serialize(
+        Tag(
+            element.tagName,
+            attributes=attrs,
+            children=element.childNodes,
+            specials=specials
+        ),
+        context)
+
+
+def MicroDomDocumentSerializer(original, context):
+    if original.doctype:
+        yield "<!DOCTYPE %s!>\n" % original.doctype
+    for n in original.childNodes:
+        yield serialize(n, context)
 
 
Index: serial/flatstan.py
===================================================================
RCS file: /cvs/Quotient/nevow/serial/flatstan.py,v
retrieving revision 1.20
diff -u -r1.20 flatstan.py
--- serial/flatstan.py	16 Jan 2004 21:36:27 -0000	1.20
+++ serial/flatstan.py	16 Jan 2004 23:08:34 -0000
@@ -9,217 +9,181 @@
 import warnings
 
 from twisted.python import components, log
+from twisted.internet import defer
 from nevow.stan import Proto, Tag, xml, directive
-from nevow.iwoven import ISerializable, IRendererFactory, IData
-from nevow.renderer import flatten
+from nevow.iwoven import IRendererFactory, IData
+from nevow.renderer import flatten, serialize
 from nevow.accessors import convertToData
 
-class ProtoSerializer(components.Adapter):
-    __implements__ = ISerializable,
+def ProtoSerializer(original, context):
+    yield xml('<%s />' % original)
 
-    def serialize(self, context, stream):
-        yield xml('<%s />' % self.original)
 
-
-class TagSerializer(components.Adapter):
-    __implements__ = ISerializable,
-    
-    def serialize(self, context, stream):
-        visible = bool(self.original.tagName)
-        singleton = not self.original.renderer and not self.original.children and not self.original.data
-        special = context.precompile and self.original._specials
-        if self.original.renderer:
-            ## If we have a renderer function we want to render what it returns, not our tag
-            visible = False
-        if special:
-            context = context.with(self.original)
-            context.tag.children = flatten(ISerializable(context.tag.children).serialize(context, stream))
-            yield context
+def TagSerializer(original, context):
+    visible = bool(original.tagName)
+    singleton = not original.renderer and not original.children and not original.data
+    special = context.precompile and original._specials
+    if original.renderer:
+        ## If we have a renderer function we want to render what it returns, not our tag
+        visible = False
+    if special:
+        context = context.with(original)
+        context.tag.children = flatten(serialize(context.tag.children, context))
+        yield context
+    else:
+        if visible:
+            yield xml('<%s' % original.tagName)
+            if original.attributes:
+                for (k, v) in original.attributes.items():
+                    if v is None:
+#                            warnings.warn("An attribute value for key %r on tag %r was None; ignoring attribute" % (original.tagName, v))
+                        continue
+                    yield xml(' %s="' % k)
+                    if context.precompile:
+                        yield v
+                    else:
+                        flat = flatten(serialize(v,context))
+                        if flat:
+                            val = flat[0]
+                            if isinstance(val, StringTypes):
+                                val = val.replace('"', '&quot;')
+                            yield xml(val)
+                    yield xml('"')
+        if singleton:
+            if visible:
+                yield xml(' />')
         else:
             if visible:
-                yield xml('<%s' % self.original.tagName)
-                if self.original.attributes:
-                    for (k, v) in self.original.attributes.items():
-                        if v is None:
-                            warnings.warn("An attribute value for key %r on tag %r was None; ignoring attribute" % (self.original.tagName, v))
-                            continue
-                        yield xml(' ')
-                        yield xml('%s="' % k)
-                        if context.precompile:
-                            yield v
-                        else:
-                            flat = flatten(ISerializable(v).serialize(context, stream))
-                            if flat:
-                                val = flat[0]
-                                if isinstance(val, StringTypes):
-                                    val = val.replace('"', '&quot;')
-                                yield xml(val)
-                        yield xml('"')
-            if singleton:
-                if visible:
-                    yield xml(' />')
-            else:
-                if visible:
-                    yield xml('>')
-                # TODO: Make this less buggy.
-                try:
-                    if context.locate(IData) != self.original.data:
-                        context = context.with(self.original)
-                except KeyError:
-                    context = context.with(self.original)
-                if self.original.renderer:
-                    toBeRenderedBy = self.original.renderer
-                    self.original.renderer = None
-                    yield ISerializable(toBeRenderedBy, persist=False).serialize(context, stream)
-                    self.original.wasRenderedBy = toBeRenderedBy
-                elif self.original.children:
-                    for child in self.original.children:
-                        yield ISerializable(child).serialize(context, stream)
-                if visible:
-                    yield xml('</')
-                    yield xml(self.original.tagName)
-                    yield xml('>')
-
-
-class StringSerializer(components.Adapter):
-    __implements__ = ISerializable,
-
-    def serialize(self, context, stream):
-        from twisted.xish.domish import escapeToXml
-        ## quote it
-        yield escapeToXml(self.original)
-
-
-class NoneWarningSerializer(components.Adapter):
-    __implements__ = ISerializable,
-
-    def serialize(self, context, stream):
-        yield xml('<span style="position: relative; font-size: 100; font-weight: bold; color: red; border: thick solid red;">None</span>')
-
-
-class StringCastSerializer(components.Adapter):
-    __implements__ = ISerializable,
-
-    def serialize(self, context, stream):
-        from twisted.xish.domish import escapeToXml
-        ## quote it
-        return escapeToXml(str(self.original))
-
-
-class ListSerializer(components.Adapter):
-    __implements__ = ISerializable,
-
-    def serialize(self, context, stream):
-        for item in self.original:
-            yield ISerializable(item).serialize(context, stream)
+                yield xml('>')
+            # TODO: Make this less buggy.
+            try:
+                if context.locate(IData) != original.data:
+                    context = context.with(original)
+            except KeyError:
+                context = context.with(original)
+            except TypeError:
+                context = context.with(original)
+            if original.renderer:
+                toBeRenderedBy = original.renderer
+                original.renderer = None
+                yield serialize(toBeRenderedBy,context)
+                original.wasRenderedBy = toBeRenderedBy
+            elif original.children:
+                for child in original.children:
+                    yield serialize(child, context)
+            if visible:
+                yield xml('</%s>' % original.tagName)
 
+def StringSerializer(original, context):
+    from twisted.xish.domish import escapeToXml
+    ## quote it
+    yield escapeToXml(original)
 
-class XmlSerializer(components.Adapter):
-    __implements__ = ISerializable,
 
-    def serialize(self, context, stream):
-        return self.original
+def NoneWarningSerializer(original, context):
+    yield xml('<span style="position: relative; font-size: 100; font-weight: bold; color: red; border: thick solid red;">None</span>')
 
 
-PASS_SELF = object()
+def StringCastSerializer(original, context):
+    from twisted.xish.domish import escapeToXml
+    ## quote it
+    return escapeToXml(str(original))
 
 
-class FunctionSerializer(components.Adapter):
-    __implements__ = ISerializable,
+def ListSerializer(original, context):
+    for item in original:
+        yield serialize(item, context)
 
-    def nocontext(self):
-        code = getattr(self.original, 'func_code', None)
-        if code is None:
-            return True
-        argcount = code.co_argcount
-        if argcount == 1:
-            return True
-        if argcount == 3:
-            return PASS_SELF
-        return False
-
-    def serialize(self, context, stream):
-        if context.precompile:
-            yield self.original
-        else:
-            data = convertToData(context, context.locate(IData))
-            try:
-                nocontext = self.nocontext()
-                if nocontext is True:
-                    result = self.original(data)
+
+def XmlSerializer(original, context):
+    return original
+
+
+PASS_SELF = object()
+
+
+def FunctionSerializer_nocontext(original):
+    code = getattr(original, 'func_code', None)
+    if code is None:
+        return True
+    argcount = code.co_argcount
+    if argcount == 1:
+        return True
+    if argcount == 3:
+        return PASS_SELF
+    return False
+
+def FunctionSerializer(original, context, nocontextfun=FunctionSerializer_nocontext):
+    if context.precompile:
+        yield original
+    else:
+        data = convertToData(context, context.locate(IData))
+        try:
+            nocontext = nocontextfun(original)
+            if nocontext is True:
+                result = original(data)
+            else:
+                if nocontext is PASS_SELF:
+                    renderFactory = context.locate(IRendererFactory)
+                    result = original(renderFactory, context, data)
                 else:
-                    if nocontext is PASS_SELF:
-                        renderFactory = context.locate(IRendererFactory)
-                        result = self.original(renderFactory, context, data)
-                    else:
-                        result = self.original(context, data)
-            except StopIteration:
-                log.err()
-                raise RuntimeError, "User function %r raised StopIteration." % self.original
-            yield ISerializable(result).serialize(context, stream)
+                    result = original(context, data)
+        except StopIteration:
+            log.err()
+            raise RuntimeError, "User function %r raised StopIteration." % original
+        yield serialize(result, context)
 
 
-class DeferredSerializer(components.Adapter):
-    def serialize(self, context, stream):
-        yield self.original
+def DeferredSerializer(original, context):
+    yield original
 
 
-class MethodSerializer(FunctionSerializer):
-    def nocontext(self):
-        func = getattr(self.original, 'im_func', None)
+def MethodSerializer(original, context):
+    def nocontext(original):
+        func = getattr(original, 'im_func', None)
         code = getattr(func, 'func_code', None)
         return code is None or code.co_argcount == 2
+    return FunctionSerializer(original, context, nocontext)
 
 
-class CallableInstanceSerializer(FunctionSerializer):
-    def nocontext(self):
-        func = getattr(self.original.__call__, 'im_func', None)
+def CallableInstanceSerializer(original, context):
+    def nocontext(original):
+        func = getattr(original.__call__, 'im_func', None)
         code = getattr(func, 'func_code', None)
         return code is None or code.co_argcount == 2
+    return FunctionSerializer(original, context, nocontext)
 
-
-class DirectiveSerializer(components.Adapter):
-    __implements__ = ISerializable,
-
-    def serialize(self, context, stream):
-        rendererFactory = context.locate(IRendererFactory)
-        renderer = rendererFactory.renderer(context, self.original)
-        return ISerializable(renderer).serialize(context, stream)
-
-
-class ContextSerializer(components.Adapter):
-    __implements__ = ISerializable,
-
-    def serialize(self, context, stream):
-        originalContext = self.original.clone()
-        originalContext.precompile = context.precompile
-        originalContext.chain(context)
-        try:
-            yield flatten(ISerializable(originalContext.tag).serialize(originalContext, stream))
-        except:
-            from twisted.web import util
-            from twisted.python import failure
-            from twisted.internet import reactor, defer
-            d = defer.Deferred()
-            fail = failure.Failure()
-            reactor.callLater(0, lambda: d.callback(xml(util.formatFailure(fail))))
-            desc = str(fail.value)
-            yield ISerializable([
-                xml("""<div style="border: 1px dashed red; color: red; clear: both" onclick="this.childNodes[1].style.display = this.childNodes[1].style.display == 'none' ? 'block': 'none'">"""),
-                desc,
-                xml('<div style="display: none">'),
-                d,
-                xml('</div></div>')
-            ]).serialize(context, stream)
-
-
-class CommentSerializer(components.Adapter):
-    __implements__ = ISerializable,
-
-    def serialize(self, context, stream):
-        yield xml("<!--")
-        for x in self.original.children:
-            yield ISerializable(x).serialize(context, stream)
-        yield("-->")
-
-
+def DirectiveSerializer(original, context):
+    rendererFactory = context.locate(IRendererFactory)
+    renderer = rendererFactory.renderer(context, original)
+    return serialize(renderer, context)
+
+
+def ContextSerializer(original, context):
+    originalContext = original.clone()
+    originalContext.precompile = context and context.precompile or False
+    originalContext.chain(context)
+    try:
+        yield flatten(serialize(originalContext.tag, originalContext))
+    except:
+        from twisted.web import util
+        from twisted.python import failure
+        from twisted.internet import reactor, defer
+        d = defer.Deferred()
+        fail = failure.Failure()
+        reactor.callLater(0, lambda: d.callback(xml(util.formatFailure(fail))))
+        desc = str(fail.value)
+        yield serialize([
+            xml("""<div style="border: 1px dashed red; color: red; clear: both" onclick="this.childNodes[1].style.display = this.childNodes[1].style.display == 'none' ? 'block': 'none'">"""),
+            desc,
+            xml('<div style="display: none">'),
+            d,
+            xml('</div></div>')
+        ], context)
+
+
+def CommentSerializer(self, context):
+    yield xml("<!--")
+    for x in self.original.children:
+        yield serialize(x, context)
+    yield("-->")
Index: test/test_flatstan.py
===================================================================
RCS file: /cvs/Quotient/nevow/test/test_flatstan.py,v
retrieving revision 1.16
diff -u -r1.16 test_flatstan.py
--- test/test_flatstan.py	16 Jan 2004 21:36:28 -0000	1.16
+++ test/test_flatstan.py	16 Jan 2004 23:08:34 -0000
@@ -12,8 +12,8 @@
 from nevow import stan
 from nevow import context
 from nevow import tags
-from nevow.iwoven import ISerializable, IData, IRendererFactory, IRequest
-from nevow.renderer import flatten, render
+from nevow.iwoven import IData, IRendererFactory, IRequest
+from nevow.renderer import flatten, render, serialize
 from nevow.util import FakeRequest
 
 from twisted.trial import unittest
@@ -39,8 +39,8 @@
         ctx = self.setupContext(precompile, setupRequest)
         ctx = setupContext(ctx)
         if precompile:
-            return flatten(ISerializable(tag).serialize(ctx, None))
-        rv = render(ISerializable(tag).serialize(ctx, None))
+            return flatten(serialize(tag, ctx))
+        rv = render(serialize(tag, ctx))
         if isinstance(rv, defer.Deferred):
             print "DEFERRED RENDER"
             return unittest.deferredResult(rv)

--Apple-Mail-3--649201377--



From twisted-web@twistedmatrix.com  Sat Jan 17 05:06:33 2004
From: twisted-web@twistedmatrix.com (LUCKYDAY INTERNATIONAL)
Date: Sat, 17 Jan 2004 06:06:33 +0100
Subject: [Twisted-web] LOTTERY WINNING NOTIFICATION
Message-ID: <20040117050615.C66DC1087A@puzzling.org>

This is a multi-part message in MIME format
--1bf36f97-c97e-4dd9-a865-1947e5290fe3
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable

LUCKYDAY  INTERNATIONAL.
28030  REIMBRANDTSPLIEN, AMSTERDAM-NETHERLANDS.
FROM:THE DESK OF THE VICE  PRESIDENT.
INTERNATIONAL PROMOTIONS/PRIZE AWARD.
BACTH NO: LDNL/009842/03.
REF. NO. LDNL/107654/03
                
                     RE: AWARD NOTIFICATION
This is to inform you of the release of the GLOBAL LOTTERY INTERNATIONAL/ =
WORLD GAMING BOARD
held on the 15th December 2003. Due to the mix up of number, the results were=

released on the 15th January 2004. Your name attached to ticket
number 56739-1 with serial number 928098-0 drew the lucky numbers of
2-6-9 which consequently won the lottery in the 2nd category. You
have therefore been approved for a lump sum payout of  ?250,000.00 ( TWO
HUNDRED AND FIFTY THOUSAND EUROS) in cash credited to file with REF. NO. =
LDNL/107654/03.
CONGRATULATIONS:Due to mix up of some numbers and
names, we ask that you keep your winning information confidential until your
claims has been processed and your money Remitted to you. This is part of
our security protocol to avoid  double claiming and unwarranted abuse of
this program by some participants.
All participants were selected through a computer ballot system drawn from
only Microsoft  users from over 20,000 company, and 3,000,000 individual
email addresses and names
from all over the world. This promotional program takes place every three
years. Please be  informed that all non-resident of Holland is required to
pay between ?500-900 Euros in advance  for thier non - resident =
processing/application fee prior to the collection of their winning prize. 
The amount is subject to your country of origin.
To begin your lottery claim, please contact the processing company that have
been appointed for the processing of your wining. Please call the claiming =
agent 
Mr. Tony Myers the Foreign operation manager of the appointed company, 
LUCKYDAY  INTERNATIONAL B.V....on
Tel: 0031-615-645-130 for the processing and remittance of your winning 
prize money to a
destination of your choice.  Any claim not made before two weeks from this =
date will be 
returned to the MINISTERIAL VAN DE ECONOMIA  HOLLAND. Note that all unclaimed =

funds will be included in the
next stake.
Also in order to avoid unnecessary delays and
complications, remember to quote your reference number and
batch numbers in all your correspondence with Mr. Tony Myers and please 
follow all his instructions religiously. Furthermore, should there be any 
change of address do inform our agent as soon as possible. Congratulations =
once more 
from our members of staff and thank you for being part of our promotional 
program. Note: Anybody under the age of 18 is automatically disqualified.
Yours Sincerely,
Tina Van Borsch.
Vice President, Luckyday International  
--1bf36f97-c97e-4dd9-a865-1947e5290fe3--



From twisted-web@twistedmatrix.com  Sun Jan 18 15:08:42 2004
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Sun, 18 Jan 2004 17:08:42 +0200
Subject: [Twisted-web] getBinding missing action?
Message-ID: <20040118152327.TQJ17934.shunit@shunit>

exploring the getBinding() method in nevow/freeform.py
i can't understand the following code lines ..
 
to me its seems there is a missing assignment in the lines marked with (*) can anyone figure what the developer intention was?

def getBinding(self, context, name):
       
??? *** if self.bindingDict is None:
??? ***     self.getBindingNames(context)
???     if self.bindingDict is None:
???         self.bindingDict = {}
        binding = getattr(self, 'bind_%s' % name, getattr(self.boundTo, 'bind_%s' % name, None))
        print "-- self.boundTo --" , self.boundTo
        
        
        if binding is not None:
            binding = binding(context)
        else:
            try:
                binding = self.bindingDict[name]
            except KeyError:
                raise ImproperInputError, name
        binding.boundTo = self.boundTo
        return binding




From twisted-web@twistedmatrix.com  Mon Jan 19 19:00:08 2004
From: twisted-web@twistedmatrix.com (Kevin Howe)
Date: Mon, 19 Jan 2004 14:00:08 -0500
Subject: [Twisted-web] Woven-Like Model Stack and Relative Submodel Paths
Message-ID: <000501c3debe$75f663a0$6501a8c0@khowe>

Does nevow resolve the "data" attribute in the same way as woven does with
the "model" attribute?

http://twistedmatrix.com/documents/howto/modelindepth#auto2

- Kevin



From twisted-web@twistedmatrix.com  Mon Jan 19 19:13:31 2004
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Mon, 19 Jan 2004 14:13:31 -0500
Subject: [Twisted-web] Woven-Like Model Stack and Relative Submodel
 Paths
In-Reply-To: <000501c3debe$75f663a0$6501a8c0@khowe>
References: <000501c3debe$75f663a0$6501a8c0@khowe>
Message-ID: <20040119141331.253397b5.orbitz@ezabel.com>

As I understand it, nevow:data is synonymous with your Woven model and nevow:render is synonymous with your Woven view.  In any render_ or data_, the last thing put on the stack is what is in the data parameter.

orbitz

On Mon, 19 Jan 2004 14:00:08 -0500
"Kevin Howe" <khowe@perfnet.ca> wrote:

> http://twistedmatrix.com/documents/howto/modelindepth#auto2


From twisted-web@twistedmatrix.com  Tue Jan 20 07:00:01 2004
From: twisted-web@twistedmatrix.com (john janecek)
Date: Tue, 20 Jan 2004 07:00:01 +0000 (UTC)
Subject: [Twisted-web] Message Board Example
Message-ID: <loom.20040120T075625-425@post.gmane.org>

"""
this is the twisted message board made by John Janecek
me webpage is at http://www.jjanecek.ca.tf/ so you
can flame me and tell me what a piece of crap this code is :)
it basically was created so I can test out the leo editor
and also so I can see how nevow works

Lots of things that need to be done, like adding persistence so
messages are saved when stopping and starting server etc.

Anyway it is just a proof of concept, if anyway one finds it useful we
heya
"""
#messageboard for the twisted python server
from nevow import renderer
from nevow import tags
from nevow import formless
from nevow import freeform
from nevow.renderer import DynamicRenderer
import string
from time import gmtime, strftime

class TMessage(object) :
	def __init__(self,UserName,EMail,Subject,Message) :
		self.UserName=UserName
		self.EMail=EMail
		self.Subject=Subject
		self.Message=Message
		self.DateTime=strftime("%a, %d %b %Y %H:%M:%S", gmtime())
		self.Messages=[]
	def getMessages(self) :
		return self.Messages
		
	"""
	If index=[] message is just appended to the end
	"""
	def addMessage(self,Message,Index=[]) :
		if Index==[] :
			self.Messages.append(Message)
		else :
			Parent=self.getMessage(Index)
			Parent.addMessage(Message)
	def getMessage(self,Index) :	
		if isinstance(Index,list) :
			if(len(Index)==1) :
				return self.Messages[Index[0]]
			else :
				Current=Index.pop(0)
				return self.Messages[Current].getMessage(Index)
				
		else :
			return self.Messages[Index]
	
class TMessageBoard(object) :
	"""
	Message board which will implement the posting and recieving of messages.
	This part of the board handles the actual nuts and bolts of the Message Board
including storage of Messages
	
	Probably Could Have Inherited off TMessage
	"""
	def __init__(self) :
		self.Messages=[]
	"""
	returns all the messages on the board
	"""
	def getMessages(self) :
		return self.Messages
	"""
	If index=[] message is just appended to the end
	"""
	
	def addMessage(self,Message,Index=[]) :
		if Index==[] :
			self.Messages.append(Message)
		else :
			Parent=self.getMessage(Index)
			Parent.addMessage(Message)
	def getMessage(self,Index) :	
		if isinstance(Index,list) :
			if(len(Index)==1) :
				return self.Messages[Index[0]]
			else :
				Current=Index.pop(0)
				return self.Messages[Current].getMessage(Index)
				
		else :
			return self.Messages[Index]
class IMessageForm(formless.TypedInterface) :
	
	def MessagePost(self,UserName=formless.String(),
					EMail=formless.String(),
					Subject=formless.String(),
					Message=formless.Text(),
					) :
		pass
		
	MessagePost = formless.autocallable(MessagePost,action="Post Message")
class MessagePage(renderer.Renderer) :
	__implements__ = IMessageForm,renderer.Renderer.__implements__
	def __init__(self,MessageBoard) :
		renderer.Renderer.__init__(self)
		self.MessageBoard=MessageBoard
		self.CurrentMessageIndex=[]
		
	def beforeRender(self, request):
		#print "request ",request.args
		if request.args.has_key("messageid") :
			self.CurrentMessageIndex=string.split(request.args["messageid"][0])
			self.CurrentMessageIndex=map(int,self.CurrentMessageIndex)
		else :
			self.CurrentMessageIndex=[]
		print "Current Message ",self.CurrentMessageIndex
	"""
	Method to Serialize messages
	"""
	def SerializeMessage(self,Message) :
		Row1=tags.tr()[
				tags.td["Subject :"],
				tags.td[Message.Subject],
				tags.td[Message.DateTime]
				]
		Row2=tags.tr[
			tags.td[Message.Message]
			]
		return tags.table(border="1")[Row1,Row2]
	def currentMessage(self,context, data) :
		try :
			return
self.SerializeMessage(self.MessageBoard.getMessage(self.CurrentMessageIndex))
		except Exception,Msg:
			self.CurrentMessageIndex=[]
			print "Error ",Msg
			return ""
	def SerializeMessageHeader(self,Messages,IndexDepth=[]) :
		MessageList=[]
		
		IndexStr="".join(map(lambda x : str(x)+" ",IndexDepth))
		IndexStr="?messageid="+IndexStr+" "
		Index=len(Messages)-1
		#done to display newest messages first
		
		for Message in Messages[::-1] :
			IndexDepth.append(Index)
			if IndexDepth==self.CurrentMessageIndex :
				MessageLine=tags.li[
					tags.span(_class="selected")[
						Message.UserName,
						tags.a(href=IndexStr+str(Index))[Message.Subject],
						Message.DateTime
						]
					]
				MessageList.append(MessageLine)
			else :
				MessageLine=tags.li[
					tags.span(_class="notselected")[
						Message.UserName,
						tags.a(href=IndexStr+str(Index))[Message.Subject],
						Message.DateTime
						]
					]
				MessageList.append(MessageLine)
			
			ChildMessages=Message.getMessages()
			MessageList.append(self.SerializeMessageHeader(ChildMessages))
			IndexDepth.pop()
			Index-=1
			
		return tags.ul[MessageList]
	def showMessages(self,context,data) :
		Messages=self.MessageBoard.getMessages()
		return self.SerializeMessageHeader(Messages)
		
	document = tags.html[
			tags.head[
				tags.title["Twisted Message Board"],
				tags.link(href="/freeform_css",type="text/css", rel="stylesheet")
				],
			tags.body[
				"Message Board Post Page",
				tags.a(href="./")["Post New Thread"],
				tags.p[ showMessages ],
				tags.p[ currentMessage ],
				tags.p[ freeform.configure ]
				]
		]
	def MessagePost(self,UserName,EMail,Subject,Message) :
		Message=TMessage(UserName,EMail,Subject,Message)
		self.MessageBoard.addMessage(Message,self.CurrentMessageIndex)
	def getDynamicChild(self,name,request) :
		print "request ",request.args
		return self
	def child_freeform_css(self,request) :
		Style="""
		.selected {
		color: #FF0000;
		background-color: #003399;
		}
		.notselected{
		color: #0000FF;
		background-color: #000000;
		}
		
		.freeform-typed { clear: both; }
		.freeform-property-binding { clear: both; border: 1px solid blue; padding:
0.5em; width: auto }
		.freeform-method-binding { clear: both; border: 1px solid black; padding:
0.5em; width: auto }
		.freeform-argument-binding { clear: both; border: 1px solid blue; padding:
0.5em; width: auto }
		.freeform-binding-content { border-top: 1px dashed #bdedfe; margin-top: 0.5em;
padding-top: 0.5em }
		.freeform-label { float: left; width: 200px; }
		.freeform-input { float: left; width: 200px; }
		.freeform-error { color: red; }
		.freeform-description { clear: both; border-bottom: 1px dashed #bdedfe;
margin-bottom: 0.5em; padding-bottom: 0.5em }
		.freeform-list-item { clear: both; width: auto }
		.freeform-form-label { color: #666666 }
	
		.freeform-textarea { width: 5in; height: 3in }
	
		.freeform-success { padding: 0.5em; border: 1px dashed green; }
		.freeform-failure { padding: 0.5em; color: red; border: 1px dashed red; }
	
		.freeform-list { border: 1px dashed #cdcdcd; }
		.freeform-dictionary { border: 1px dashed #dedede; }
		.freeform-action-group { margin: 0px }
		.freeform-action { color: green }
		.freeform-action-selection { background-color: red; height: 1em; width: 1em; }
	
		.freeform-group-binding { border: 1px dashed #efabab }
		.freeform-grouped-property-binding {}
		.freeform-grouped-method-binding {}
		"""
		
		return DynamicRenderer(Style)

def CreateMessageBoard() :
	"""
	Creates a Message board so it can be run in a Server
	returns : returns a MessagePage Object
	"""
	MessageBoard=TMessageBoard()
	Page=MessagePage(MessageBoard)
	return Page

#the tap file

import sys
import os
#print "current dir ",os.getcwd()
#not really sure why i need to fix this
sys.path.append(os.getcwd())
from twisted.application import service
from twisted.application import internet
from nevow import appserver
import msg_board

application = service.Application("MessageBoard")

WebServer=internet.TCPServer(
    8080, 
    appserver.NevowSite(
        msg_board.CreateMessageBoard()
    )
)
WebServer.setServiceParent(application)

#from twisted.internet import defer

#def Stopped() :
#	d=defer.Deferred()
#	print "WebServer Stopped"

#WebServer.stopService=Stopped
#print "WebServer Deferred ",Defered








From twisted-web@twistedmatrix.com  Tue Jan 27 21:26:37 2004
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Tue, 27 Jan 2004 22:26:37 +0100
Subject: [Twisted-web] Page navigation: a cry for help
Message-ID: <20040127212637.GA38420@pasternak.w.lub.pl>

Hi,

please help me with this, I have no idea which approach will be the best.

The basic question is: if I have website, and that website's structure is
tree-like, how will be the most proper way to create navigation?

I'd like to have links to neighbour pages (pages on the same node), I'd like
to be able to get a list of pages on the "above" nodes.

As I have seen in t.w.resource.py:

    def putChild(self, path, child):
         """Register a static child.
         """
	 self.children[path] = child
         child.server = self.server

there is no chance I can get parent of a specific page, to provide navigation.

Do you have any methods or solutions for a good, easy woven page navigation
model?

-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net
::don't use MySQL::details on http://sql-info.de/mysql/gotchas.html::


From twisted-web@twistedmatrix.com  Tue Jan 27 22:39:19 2004
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Tue, 27 Jan 2004 17:39:19 -0500
Subject: [Twisted-web] Page navigation: a cry for help
In-Reply-To: <20040127212637.GA38420@pasternak.w.lub.pl>
References: <20040127212637.GA38420@pasternak.w.lub.pl>
Message-ID: <4016E897.9050508@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig7520D5ADBD6327B9E02A727B
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Michal Pasternak wrote:
> The basic question is: if I have website, and that website's structure is
> tree-like, how will be the most proper way to create navigation?

> Do you have any methods or solutions for a good, easy woven page navigation
> model?

What kind of storage are you using? If it's a filesystem that mirrors 
the URL structure, you could just look up a modified request.prepath in 
your file system and look at sibling pages.

The moral of the story is that it depends on your storage mechanism. 
Where is the canonical location of your tree of pages? It's most likely 
that your data source will somehow be "keyed" by information that's 
available in request.prepath, whether it's keyed by actual paths or just 
one of the elements in the prepath, or whatever.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig7520D5ADBD6327B9E02A727B
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFAFuiXNp279O1/OG4RAt48AJ46w+vhExzTu/h/Yu0vUX4Tnr7dZQCff5Qy
/2p+xKoAhpay7I3o46W8eLs=
=e51x
-----END PGP SIGNATURE-----

--------------enig7520D5ADBD6327B9E02A727B--


From twisted-web@twistedmatrix.com  Tue Jan 27 21:55:19 2004
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Tue, 27 Jan 2004 22:55:19 +0100
Subject: [Twisted-web] Page navigation: a cry for help
In-Reply-To: <4016E897.9050508@twistedmatrix.com>
References: <20040127212637.GA38420@pasternak.w.lub.pl> <4016E897.9050508@twistedmatrix.com>
Message-ID: <20040127215519.GA38857@pasternak.w.lub.pl>

Christopher Armstrong [Tue, Jan 27, 2004 at 05:39:19PM -0500]:
> What kind of storage are you using? If it's a filesystem that mirrors 
> the URL structure, you could just look up a modified request.prepath in 
> your file system and look at sibling pages.

I am not using any filesystem. Whole structure is made up of classess in the
code. Currently I have written a custom class, which is a basic of all
classess I create:

class SitePage(page.Page):
    def __init__(self, name = "", label = "", browseable = True):
        page.Page.__init__(self)
        
        self.name = name
        self.label = label
        self.browseable = browseable
        self.parent = None
        self.myChildren = []

    def putChild(self, p):
        page.Page.putChild(self, p.name, p)
        p.parent = self
        self.myChildren.append(p)

... and I can achieve both goals with it, but I don't know if it is the best
method available.


From twisted-web@twistedmatrix.com  Wed Jan 28 00:13:52 2004
From: twisted-web@twistedmatrix.com (James Y Knight)
Date: Tue, 27 Jan 2004 19:13:52 -0500
Subject: [Twisted-web] Page navigation: a cry for help
In-Reply-To: <20040127215519.GA38857@pasternak.w.lub.pl>
References: <20040127212637.GA38420@pasternak.w.lub.pl> <4016E897.9050508@twistedmatrix.com> <20040127215519.GA38857@pasternak.w.lub.pl>
Message-ID: <DADA5BDF-5126-11D8-961D-000A95A50FB2@fuhm.net>

On Jan 27, 2004, at 4:55 PM, Michal Pasternak wrote:
> Christopher Armstrong [Tue, Jan 27, 2004 at 05:39:19PM -0500]:
>> What kind of storage are you using? If it's a filesystem that mirrors
>> the URL structure, you could just look up a modified request.prepath 
>> in
>> your file system and look at sibling pages.
>
> I am not using any filesystem. Whole structure is made up of classess 
> in the
> code. Currently I have written a custom class, which is a basic of all
> classess I create:
>
> ... and I can achieve both goals with it, but I don't know if it is 
> the best
> method available.

If you use nevow, it does this for you. request.resources is a list 
containing all the resources called on the way down. So, in getChild, 
request.resources[-1] is your parent. In render, i believe 
request.resources[-2] will be your parent.

If you're not using nevow, perhaps you should be. :)

James



From twisted-web@twistedmatrix.com  Wed Jan 28 10:11:43 2004
From: twisted-web@twistedmatrix.com (Syver Enstad)
Date: 28 Jan 2004 11:11:43 +0100
Subject: [Twisted-web] Rendering unicode instances.
Message-ID: <uisiwtmao.fsf@inout.no>

What does one do to render Unicode objects with twisted.web (I am
using woven also). I get UnicodeError's if I try to pass a unicode
object that contains characters not in ASCII today.

It would be nice if it was as simple as calling a method on the
request setting output encoding which set the encoding in the HTTP
headers and wrapped the output stream with an encoder that
transparently encoded Unicode objects with the chosen encoding. If
such a method is not implemented (I haven't seen one) what would be a good
way to solve this problem.



From twisted-web@twistedmatrix.com  Wed Jan 28 11:12:56 2004
From: twisted-web@twistedmatrix.com (Andrew Bennetts)
Date: Wed, 28 Jan 2004 22:12:56 +1100
Subject: [Twisted-web] Rendering unicode instances.
In-Reply-To: <uisiwtmao.fsf@inout.no>
References: <uisiwtmao.fsf@inout.no>
Message-ID: <20040128111256.GE16957@frobozz>

On Wed, Jan 28, 2004 at 11:11:43AM +0100, Syver Enstad wrote:
> 
> What does one do to render Unicode objects with twisted.web (I am
> using woven also). I get UnicodeError's if I try to pass a unicode
> object that contains characters not in ASCII today.
> 
> It would be nice if it was as simple as calling a method on the
> request setting output encoding which set the encoding in the HTTP
> headers and wrapped the output stream with an encoder that
> transparently encoded Unicode objects with the chosen encoding. If
> such a method is not implemented (I haven't seen one) what would be a good
> way to solve this problem.

Well, there's no explicit unicode support in Twisted Web that I know of.

However, the workaround should be as simple as calling a method to set the
response header for your desired encoding, and making sure you encode your
unicode objects with that encoding before passing them to Twisted Web ;)

Perhaps Twisted Web should default to UTF-8, and automatically encode
unicode objects with that encoding, unless a 'setUnicodeEncoding' method is
called.  Obviously this would need to make sure the appropriate header is
set.  Patches for this sort of thing are probably welcome :)

-Andrew.



From twisted-web@twistedmatrix.com  Wed Jan 28 15:07:05 2004
From: twisted-web@twistedmatrix.com (Syver Enstad)
Date: 28 Jan 2004 16:07:05 +0100
Subject: [Twisted-web] Rendering unicode instances.
In-Reply-To: <20040128111256.GE16957@frobozz>
References: <uisiwtmao.fsf@inout.no> <20040128111256.GE16957@frobozz>
Message-ID: <uk73cru1y.fsf@inout.no>

Andrew Bennetts <andrew-twisted@puzzling.org> writes:


> Well, there's no explicit unicode support in Twisted Web that I know of.
> 
> However, the workaround should be as simple as calling a method to set the
> response header for your desired encoding, and making sure you encode your
> unicode objects with that encoding before passing them to Twisted Web ;)

I feared that that was indeed the case.

> Perhaps Twisted Web should default to UTF-8, and automatically encode
> unicode objects with that encoding, unless a 'setUnicodeEncoding' method is
> called.  Obviously this would need to make sure the appropriate header is
> set.  Patches for this sort of thing are probably welcome :)

I'll probably implement such a thing to get things going.




From twisted-web@twistedmatrix.com  Wed Jan 28 15:38:04 2004
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Wed, 28 Jan 2004 10:38:04 -0500
Subject: [Twisted-web] Rendering unicode instances.
In-Reply-To: <uisiwtmao.fsf@inout.no>
References: <uisiwtmao.fsf@inout.no>
Message-ID: <F6D045B0-51A7-11D8-9EE3-000A95864FC4@divmod.org>

On Jan 28, 2004, at 5:11 AM, Syver Enstad wrote:

>
> What does one do to render Unicode objects with twisted.web (I am
> using woven also). I get UnicodeError's if I try to pass a unicode
> object that contains characters not in ASCII today.
>
> It would be nice if it was as simple as calling a method on the
> request setting output encoding which set the encoding in the HTTP
> headers and wrapped the output stream with an encoder that
> transparently encoded Unicode objects with the chosen encoding. If
> such a method is not implemented (I haven't seen one) what would be a 
> good
> way to solve this problem.

It's simple enough to implement. Here is what quotient does:

     def render(self, request):
         request.setHeader("Content-type", 'text/html; charset=UTF-8')

         return renderer.Renderer.render(self, request)

And then, when it wants to present a unicode string, it does:

theStr.encode('utf8')

dp



From twisted-web@twistedmatrix.com  Wed Jan 28 16:39:01 2004
From: twisted-web@twistedmatrix.com (Syver Enstad)
Date: 28 Jan 2004 17:39:01 +0100
Subject: [Twisted-web] Rendering unicode instances.
In-Reply-To: <F6D045B0-51A7-11D8-9EE3-000A95864FC4@divmod.org>
References: <uisiwtmao.fsf@inout.no>
 <F6D045B0-51A7-11D8-9EE3-000A95864FC4@divmod.org>
Message-ID: <u65ewqb8a.fsf@inout.no>

Donovan Preston <dp@divmod.org> writes:

> It's simple enough to implement. Here is what quotient does:
> 
>      def render(self, request):
>          request.setHeader("Content-type", 'text/html; charset=UTF-8')
> 
>          return renderer.Renderer.render(self, request)
> 
> And then, when it wants to present a unicode string, it does:
> 
> theStr.encode('utf8')

I have a host of places that writes out string data, and which does so
via woven, so I thought that wrapping the request output stream with
an encoding wrapper would do nicely instead of having to find everywhere there could come a unicode string and then convert it explicitly.

What about input? Form data and query strings. 

 



From twisted-web@twistedmatrix.com  Wed Jan 28 17:38:10 2004
From: twisted-web@twistedmatrix.com (PATRICK TAMA)
Date: Wed, 28 Jan 2004 18:38:10 +0100
Subject: [Twisted-web] HONESTLY SOLICITING YOUR PARTNERSHIP ASSISTANCE
Message-ID: <20040128173758.2EADA104B8@puzzling.org>

This is a multi-part message in MIME format
--2c03dfb4-a92a-465f-a4b5-5c43b595b831
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable

>From Mr.Patrick Tama      ( tamapat@zwallet.com )
 
Attention Sir/Madam
I am Mr. Patrick Tama and my sister is Miss Rose Tama,
we are the children of Late Chief Paul Tama  from Sierra
Leone. 
I am writing you in absolute confidence primarily to
seek your assistance to transfer our cash of Twelve 
Million Four hundred Thousand United States Dollars 
($12,400.000.00) now in the custody of
a private Security trust firm In Europe,the money is
in trunk boxes deposited and declared as Family
valuables by my late father as a matter of fact the
company does not know the content as money, although
my father made them to understand that the boxes
belongs to his foreign partner. 
Source of the Funds: 
My late father Chief Paul Tama, a native of Mende
District in the Northern province of Sierra Leone, was
the General Manager of Sierra Leone mining
coporation (S.L.M.C.) Freetown. According to my
father, this money was the income accrued from Mining
Corporation's over draft and minor sales. 
Before the peak of the civil war between the rebels
forces of Major Paul Koroma and the combined forces of
ECOMOG peace keeping operation that almost destroyed
my country, following the forceful removal from power
of the civilian elected President Ahmed Tejan Kabbah
by the rebels. My father had already made arrangement
for his family(talking about)my mother, my little
sister and myself to be evacuated to The Netherlands 
with the CERTIFICATE OF DEPOSIT he made with a
security firm in Europe through the aid of U.N
evacuation team. 
During the war in my country, and following the
indiscriminate Looting of Public and Government
properties by the rebel forces, the Sierra Leone
mining corporation was one of the targets looted and it was
destroyed. My father including other top Government
functionaries were attacked and killed by the rebels
in November 2000 because of his relationship with the
civilian Government of Ahmed Tejan Kabbah. 
As a result of my father's death and with the news of
my uncle's Involvement in the air crash in January, it
dashed our hopes of survival. The untimely deaths
caused my mother's heart failure and other related
complications  which  later  lead to her death in the hospital
after we had spent a lot of money on her early
this year. Now my 18 year old sister and I are
alone in this country suffering without any
care or help. Without any relation, we are now like
refugees and orphans. 
Our only hope now is in you and the boxes deposited
in the Security Firm, to this effect, I humbly
solicit your assistance in the Following ways. 
1. To assist me claim this boxes from the security 
Firm as our beneficiary. 
2. To transfer this money (USD$12.4MN) in your name to
your country.
3. To make a good arrangement for a joint business
investment on our Behalf in your country and you, 
our Adviser/ Manager For your assistance, I have 
agreed with my younger sister that 20% of the total 
amount will be for your effort and another 10 % to 
cover all the expenses that may be incurred during the
business transaction, Lastly, I urge you to keep this 
transaction strictly confidential as no one knows our
where about. 
Please as you show your willingness; Forward to us
your full name, address and Tel/ Fax numbers, company
name and address (if any) to me via my private email
address as indicated below, this is for security
reasons as I will only be accessing my private email.
Earnestly awaiting your response. 
Thanks. 
May God bless you as you assist us
Mr. Patrick Tama  
--2c03dfb4-a92a-465f-a4b5-5c43b595b831--



From twisted-web@twistedmatrix.com  Wed Jan 28 22:27:41 2004
From: twisted-web@twistedmatrix.com (John C Lin)
Date: Wed, 28 Jan 2004 14:27:41 -0800 (PST)
Subject: [Twisted-web] Newbie Question? -- Running xmlrpc client and server together
In-Reply-To: <20040127212637.GA38420@pasternak.w.lub.pl>
Message-ID: <Pine.LNX.4.44.0401281418340.4542-100000@nex1.caltech.edu>

Hi,

I have run around the on-line documentation for twisted and couldn't find
the relevant docs to help my case.  If anyone has pointers on what to
read, I would gladly read those documents first.

Here is the question:  I want to run a xmlrpc server and client together.  
That is, in the same program, I want to be able to listen from other 
clients that are calling my xmlrpc methods, and from time to time, I want 
to call the other clients' xmlrpc methods as well.

>From the examples I can find, a server is run by invoking an application's 
run method, while a client is run by invoking the reactor's run method.  
How can I "register" my own event loop in addition to the application's 
already existing xmlrpc server that I have added earlier?  

For example, let's say I have two clients that implement the adder xmlrpc 
method (returns the sum of two numbers).  I want the clients to call each 
other's adder method every two seconds.  Below is the server sample code 
from Victor Ng that I am looking at (I only added some code to read 
arguments from the command line):


from twisted.internet import reactor, defer
from twisted.web import xmlrpc, server, resource
from twisted.enterprise import adbapi

import sys

if len (sys.argv) >= 5:
  player_id      = int (sys.argv[1])
  port_num       = int (sys.argv[2])
  num_players    = int (sys.argv[3])
  start_port_num = int (sys.argv[4])

print "Starting agents.py with player_id: %d, port_num: %d, num_players: 
%d, start_port_num: %d\n" % (player_id,         port_num, num_players, 
start_port_num)


class XMLRPCAdder(xmlrpc.XMLRPC):
  """
  An example object to be published
  """
  def run_add(self, d, a, b):
    d.callback(a+b)

  def marshallResult(self, data):
    return "[%s]" % str(data)

  def xmlrpc_add(self, a, b):
    d = defer.Deferred()

    # setup a callback in 2 seconds that executes the callback on the deferred
    reactor.callLater(2, self.run_add, d, a, b)

    return d.addCallback(self.marshallResult)

def main():
  from twisted.internet.app import Application
  app = Application("simpleDemoServer")
  root = resource.Resource()
  child = XMLRPCAdder()
  root.putChild('RPC2', child)
  app.listenTCP(port_num, server.Site(root))
  return app

application = main()

if __name__ == '__main__':
  application.run(save = 0)



Thanks in advance.
John Lin



From twisted-web@twistedmatrix.com  Thu Jan 29 09:52:43 2004
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Thu, 29 Jan 2004 11:52:43 +0200
Subject: [Twisted-web] Possible bug in freeform List  cont.
Message-ID: <20040129100745.QRRS1371.shunit@shunit>

Hi,

in addition to Gavrie's mail from the 01/01/2004.
I have done a little debugging myself on this issue.
It seems that when render itself implements a formless interface, rather than apply a seperate class as 'original'
which implements a formless interface(see examples).

1. Both forms are construction appears to be ok
2. when clicking on the submit button of a list item 
   formpost4-bad.tac program raise an exception. 
3. All hell breaks through when trying to configurate 
   a configurable object in postForm (freeform.py)
4. formpost4-good.tac comes back ok on second call
   with the configurable list of [Address(), Address()..
   TypedInterfaceConfigurable

   where formpost4-bad.tac returns a
   TypedInterfaceConfigurable - FormPost() insted of 
   the above.

5. Values returned bad from method locateConfigurable() 
   in freeform.py 

Help would be very much appreciated on figuring 
the matter.

I'm using Twisted 1.1.0 and the latest Quotient CVS

Gavrie's mail and the attached examples: 

I took one of Donovan's examples (at 
http://www.livejournal.com/users/fzzzy/) and modified it to work this 
way, but to no avail.

Attached are two scripts, based in the freeformpost4.tac example. The 
formpost4-good.tac uses a separate class that implements the formless 
interface, and works perfectly.

The formpost4-bad.tac script uses a Renderer subclass which also 
implements the formless interface (I need to do it this way because my 
pages include forms and also other renderers on the same page). However, 
this script renders the form fine, but blows up when submitting the form 
(traceback attached).

Any form that does not use the formless.List type does work correctly 
this way (i.e. using a Renderer subclass which implements the formless 
interface).

Help would be very much appreciated.

I'm using Twisted 1.1.0 with the latest nevow code from the Quotient CVS.

Thanks,

-- Gavrie.

--------------090003070107020805050604
Content-Type: text/plain;
 name="formpost4-bad.tac"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="formpost4-bad.tac"


from twisted.application import service, internet

from nevow import appserver
from nevow import renderer
from nevow import tags
from nevow import formless
from nevow import freeform
import nevow


class IAddress(formless.TypedInterface):
    street = formless.String()


class Address(object):
    __implements__ = IAddress

    street = "foo"

    def __str__(self):
        return "%s" % self.street


class IPerson(formless.TypedInterface):
    addresses = formless.List()


class FormPage(renderer.Renderer):

    __implements__ = IPerson, renderer.Renderer.__implements__

    name = "a person's name"
    addresses = [Address(), Address(), Address()]

    document = tags.html[
        tags.head[
            tags.link(href="/freeform_css", rel="stylesheet")
        ],
        tags.body[
            freeform.configure
        ]
    ]

    def child_freeform_css(self, request):
        from twisted.python import util
        from twisted.web import static
        return static.File(util.sibpath(nevow.__file__, 'freeform-default.css'))


application = service.Application("form")
internet.TCPServer(
    8081, 
    appserver.NevowSite(
        FormPage()#Person())
    )
).setServiceParent(application)

# vim: ft=python

--------------090003070107020805050604
Content-Type: text/plain;
 name="formpost4-good.tac"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="formpost4-good.tac"


from twisted.application import service, internet

from nevow import appserver
from nevow import renderer
from nevow import tags
from nevow import formless
from nevow import freeform
import nevow


class IAddress(formless.TypedInterface):
    street = formless.String()


class Address(object):
    __implements__ = IAddress

    street = "foo"

    def __str__(self):
        return "%s" % self.street


class IPerson(formless.TypedInterface):
    addresses = formless.List()


class Person(object):
    __implements__ = IPerson

    name = "a person's name"
    addresses = [Address(), Address(), Address()]


class FormPage(renderer.Renderer):

    document = tags.html[
        tags.head[
            tags.link(href="/freeform_css", rel="stylesheet")
        ],
        tags.body[
            freeform.configure
        ]
    ]

    def child_freeform_css(self, request):
        from twisted.python import util
        from twisted.web import static
        return static.File(util.sibpath(nevow.__file__, 'freeform-default.css'))


application = service.Application("form")
internet.TCPServer(
    8080, 
    appserver.NevowSite(
        FormPage(Person())
    )
).setServiceParent(application)

# vim: ft=python

--------------090003070107020805050604
Content-Type: text/plain;
 name="traceback"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="traceback"

2004/01/01 12:07 IST [HTTPChannel,0,127.0.0.1] Traceback (most recent call last):
          File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 950, in lineReceiv
ed
            self.allContentReceived()
          File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 991, in allContent
Received
            req.requestReceived(command, path, version)
          File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 549, in requestRec
eived
            self.process()
          File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 99, in process
            return server.Request.process(self)
        --- <exception caught here> ---
          File "/usr/lib/python2.3/site-packages/twisted/web/server.py", line 158, in process
            resrc = self.site.getResourceFor(self)
          File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 125, in getResourceFor
            res = gener.getResourceForRequest(request)
          File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 50, in getResourceForReqest
            return self.postForm(request, res, configurable, ctx, bindingName, request.args)
          File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 53, in postForm
            return configurable.postForm(ctx, bindingName, args)
          File "/usr/lib/python2.3/site-packages/nevow/freeform.py", line 750, in postForm
            binding = configurable.getBinding(ctx, seg)
          File "/usr/lib/python2.3/site-packages/nevow/freeform.py", line 735, in getBinding
            raise ImproperInputError, name
        nevow.freeform.ImproperInputError: 0




From twisted-web@twistedmatrix.com  Thu Jan 29 14:36:25 2004
From: twisted-web@twistedmatrix.com (Paul Moore)
Date: Thu, 29 Jan 2004 14:36:25 +0000 (UTC)
Subject: [Twisted-web] Authentication with twisted.web
Message-ID: <loom.20040129T152752-518@post.gmane.org>

I want to build a web application which requires users to log on. I'm happy 
building the user authentication side of things, but I'm not sure how to get 
the site to require authentication. I'm looking for what I think is "Basic" 
authentication - the one that causes the browser to pop up an "enter username 
and password" dialog box. I know that I could design my own front page form, to 
allow the user to enter a username directly, but that's not what I want here.

Is this possible? (I'm sure it is, I just can't find what I should be looking 
for in the docs!)

Thanks,
Paul.



From twisted-web@twistedmatrix.com  Thu Jan 29 15:04:44 2004
From: twisted-web@twistedmatrix.com (Uwe Schmitt)
Date: Thu, 29 Jan 2004 16:04:44 +0100
Subject: [Twisted-web] problem with minidom
Message-ID: <EEEGLAIFCOKLPKPJMAFOOEBJDOAA.schmitt@num.uni-sb.de>

Hi,

I wrote a widget for if/then/else functionality in XHTML-templates:

   from twisted.web.woven import widgets

   class IfThenElseWidget(widgets.Widget):

	def setUp(self, request, node, data):

		if data:
			nodeToRemove = self.getPattern("else")
		else:
			nodeToRemove = self.getPattern("then")

		print "node before=", node.toprettyxml()
		print "nodeToRemove=", nodeToRemove.toprettyxml()

		node.removeChild(nodeToRemove)

		print "node after=", node.toprettyxml()

And I get the following log

   [-] Log opened.
   [-] twistd 1.1.1rc1 (C:\Python23\python.exe 2.3.2) starting up
   [-] reactor class: twisted.internet.default.SelectReactor
   [-] twisted.web.server.Site starting on 8080
   [-] Starting factory <twisted.web.server.Site instance at 0x00A96080>
   [HTTPChannel,0,127.0.0.1] node before=
   [HTTPChannel,0,127.0.0.1] <p model="flag" view="if"><font color="red"
pattern="else">NEIN!</font><font color="blue" pattern="then">jAWOLL!</font>
   [HTTPChannel,0,127.0.0.1] </p>
   [HTTPChannel,0,127.0.0.1] nodeToRemove= <font color="blue">jAWOLL!</font>
   [HTTPChannel,0,127.0.0.1] node after=
   [HTTPChannel,0,127.0.0.1] <p model="flag" view="if"><font color="red"
pattern="else">NEIN!</font><font color="blue" pattern="then">jAWOLL!</font>
   [HTTPChannel,0,127.0.0.1] </p>
   [29/Jan/2004:14:57:51 +0000] "GET /index.rpy/ HTTP/1.1" 200 211 "-"
"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)"
   [-] (Port 8080 Closed)
   [-] Stopping factory <twisted.web.server.Site instance at 0x00A96080>
   [-] Saving web application to web-shutdown.tap...
   [-] Saved.
   [-] Main loop terminated.
   [-] Server Shut Down.

As one can see, "node before" and "node after" are the same, despite the
node.romveChilde() statement in setUp()...

Is this a bug ??? Did I miss something ?

Greetings, Uwe



From twisted-web@twistedmatrix.com  Thu Jan 29 15:48:31 2004
From: twisted-web@twistedmatrix.com (Alex Levy)
Date: Thu, 29 Jan 2004 10:48:31 -0500
Subject: [Twisted-web] Authentication with twisted.web
In-Reply-To: <loom.20040129T152752-518@post.gmane.org>
References: <loom.20040129T152752-518@post.gmane.org>
Message-ID: <1075391310.1367.4.camel@hyla>

--=-9Z7FoVzDlmxZoaFa+ck4
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

On Thu, 2004-01-29 at 09:36, Paul Moore wrote:
> I want to build a web application which requires users to log on. I'm hap=
py=20
> building the user authentication side of things, but I'm not sure how to =
get=20
> the site to require authentication. I'm looking for what I think is "Basi=
c"=20
> authentication - the one that causes the browser to pop up an "enter user=
name=20
> and password" dialog box.

A Google search for "site:twistedmatrix.com basic http authentication"
turns up a number of useful links, but until Pyramid's back on its feet,
you've got to go cache-hunting.

Here's a few tidbits that'll probably help:

In Resource.render():
>>> request.setHeader('WWW-authenticate', 'basic realm=3D"foo"')

Wherever else:
>>> u =3D request.getUser()
>>> p =3D request.getPassword()

Hope this helps.

--=20
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_


--=-9Z7FoVzDlmxZoaFa+ck4
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQBAGStOVM70CYlRlK4RAs4eAJ9pV/nScXCxxjoHDLQPvTi/zHE7CQCgk72i
7ek3I5dxG8XDP3ebzbOG6Rg=
=viCa
-----END PGP SIGNATURE-----

--=-9Z7FoVzDlmxZoaFa+ck4--



From twisted-web@twistedmatrix.com  Thu Jan 29 16:07:17 2004
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Thu, 29 Jan 2004 18:07:17 +0200
Subject: [Twisted-web] hello
Message-ID: <20040129160408.A8ED9104FE@puzzling.org>

This is a multi-part message in MIME format.

------=_NextPart_000_0012_23AC4CC5.A2AAC047
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit

The message cannot be represented in 7-bit ASCII encoding and has been sent as a binary attachment.


------=_NextPart_000_0012_23AC4CC5.A2AAC047
Content-Type: application/octet-stream;
	name="zhbj.zip"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename="zhbj.zip"

UEsDBAoAAAAAAOiAPTDKJx+eAFgAAABYAABSAAAAemhiai50eHQgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnBpZk1a
kAADAAAABAAAAP//AAC4AAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBFAABM
AQMAAAAAAAAAAAAAAAAA4AAPAQsBBwAAUAAAABAAAABgAABgvgAAAHAAAADAAAAAAEoAABAAAAAC
AAAEAAAAAAAAAAQAAAAAAAAAANAAAAAQAAAAAAAAAgAAAAAAEAAAEAAAAAAQAAAQAAAAAAAAEAAA
AAAAAAAAAAAA6MEAADABAAAAwAAA6AEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAVVBYMAAAAAAAYAAAABAAAAAAAAAABAAAAAAAAAAAAAAAAAAAgAAA4FVQ
WDEAAAAAAFAAAABwAAAAUAAAAAQAAAAAAAAAAAAAAAAAAEAAAOAucnNyYwAAAAAQAAAAwAAAAAQA
AABUAAAAAAAAAAAAAAAAAABAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAADEuMjQAVVBYIQwJAglIfomP1DYcgSmWAABTTgAAAIAAACYBAMXuhwKS
AFAmSgBAA/2yaZosEAT0JegBAEvOaZpu2R/IKsADuLCopmmapqCYkIiAmqZpmnhwaGBYUM1gn2lI
AEQHODA0TdN0AygkHBgQ0yy71wgjA/gp8OhN0zRN4NjQyLy0NE3TNKyknJSMzjZN04h8cGgpb1ym
6ZrBB1RMA0Q4mqZpmiwkHBQMBGmazm38KH8D9OzkpmmaptzUzMi8mqZpmrSspKCYkGebpmmMgHhw
KHto3mzTdQdcA1RMKP/7C3a2++NADzQo9ywvA5qmGfkkKEocFAwEaZrO7Jv8JwPs6OCmaZqm2NTM
yMCapmm6uCewrKigmGmapmmUjIiEfKRpmqZ0bGRcVGmaphtMA0RAODCmaZqmKCAYEAiapnObAPgm
zwPo4Nhnm85tVDRDA0A0NNuK/////51a0Nrl9AYfM05sck7YApdfksgBPXy+Q0uW5DWJ4DqX////
//dawCmVBHbrY95c3WHocv+PIrhR7Ywu03sm1A058Kpn/////yfqsHlFFOa7k25MLRH44s+/sqih
nZyeo6u2xNXpABo3/////1d6oMn1JFaLw/48fcEIUp/vQpjxTawOc9tGtCWZEIoH/////4cKkBml
paj+8sPSqPgSLEprj7bgDT1wpt8bWnzhJ1XJ/////xJgvhhl1TieF3PiVIlBvJrjP8ZQjW0Alk/L
agyxQ3qy/////3MXzohHBciKVyPyxJlxTC4L79bArZ2Qhg97enyRiZSi/////7PH3voVNVh+p8MC
NHmh3Bpbj+Ywbc0gds8rivxRuSSS/////wN37mjlZehul4ODdoyVobDC1+8KKEltlL7rG06Evfk4
/////3q/B1Kg8UVsllOzGnzlUcAypx+aGJkdpC67S950DalI/////+qPN+KQQfWsZiPjpmw1AdCi
d08qCOnNtJ6Le25kXVlY/////1pfZ3KAkaW81vMTNlyFseASR3+6+Dl9xA5bq/5UrQk9/////5p3
pwJw4VXMBsNDxlzVYWFkanN/jKC1zegGJ0tynMn5/////yxim1cWWH2wYCb+I3rUMZHkWsMvzhCF
/XT2d/uADJkp/////7xS64cmyG0VwG4fk4pE4ZTUEiHfroBVLRjmx6vyfGlZ/////05COzc4OD1F
UF5vg5q00fEUOmPPvvDlbLbkI1v3vGGo/////9A7ie5zPGP4meDFS5EXoSHeIrM/P1RIUXtvftbP
2W6V/9/+/ykDI+mUCb/m86VBEKZ8MmlrgCELLcdO0hCCbPn/////c6d33hSHBwf7UqoBYcAsm/cm
lt2XnSJgD0aezf0sQH//////k7LS8QkgWHZoY11QUlFTamR3ASzF71QwvFcRPM6dV27/////IOOt
YNrRUhXOZl+3QcAU5GWTn3j+cg2852qVe3sTdnb/////fRwNLfL29LDx0ed5+t1MZaP/J2yM3Qvb
jBupvXWHO0//////2xSCQhQJRcyCD/pitylz+xWD5x6TfrQkaSn/vSjL6k7//+3/dw46sL/3VNTs
c5gBTQad8qKvwmLz5V433wVxUv////8H+BtAflQ+p6lPLAJ9MMjnBtJUKhprTAGdBPZq+h3HBv+F
///4HZAEq5YABgYQK++Z1E7/F3gLk8b4dSGMpP////9f/8xya+tv/qX97NBByXiR2cSsJsfo4Km3
Gl1v7CkQo/////+88+31b1EhNY3WUxxIKRjjt1w/nbjN0FJV47VD6r5n4/////+goDLizkk6JC8w
Co+uhOF1QKFimLL1MErg4/+RgcEnB/////93iGePVLOFCOL+gkWrYY502rsqOK7wStQYnBeKSMK1
vP////+e+x9W5m6Q4DtHs6Aat9KqvMT3k0imAcAE/wYSi12p2P////+9lDH4H+haYz7f1grKQtUM
XmBJcvX0rvRTF/wWFfKOmv////9zcDyCseKON1tTFqInlFRYrLE1Nz6qdWWVIW7rGoSBav/////m
Chg/OpWfgYLjc6RHPQkC1i6IwqfVP4pc6p9WO189Sv/S///DeV9DCbjwq5rOHrKF2UvB1Dtez9/2
R/lK9//////Y+y20imdi/1itEYwi91vLWN+F/KzgZdrrl5TiYAjvP/////884+x/EI5gft1Nm+Sd
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
1qn//1uiQmyZyfwya6fmKG0gYE6fgyqk3f//X2jELP9u4FXNSMZHaTLcaYHsIrtX9pg9+i/0/+WQ
Pu+jWhTRPDQa41RQJf3Ytpd7Yvh/6ResKRwSCwftDRUgLj/rCoShB4T///+30F+OwPX7CKbnK3K8
Cb3MAlu3FnjdVbAeDwN6//////RxujGozUpDISoPaXACYzrS4pSpaXlFib58JYWRVQ7B+Lf+/+0e
U7VE7t9o8Ucyln+MHVvIJal81Saz//9btIDStQRigm4ciuRMot0AUbml6S7/f4vGS3CHVzwnaXto
iZWigJ3m6/OJ/9/4239tWwwL+YPoESOe3wtGhGgxUJrnN4r//w3+4DmV9Fa7I9pt4VjST89S2GHt
7fD2/wsa//8v/SxBWXSSs5koVYW47idjouQpcbwKW68GYL0d/xZf6oDmT46cEYkEuocOmCW1SN7/
////dxOyVPmhTPqrXxbQjU0Q1p9rOgzhuZRyUzceCPXl2M7/hf7/x8PCxMnR3Or7DyZAXX2gTxtK
fLHpJGKj/wL//+cueMUVaL4Xc9I0mQFs2ksAsC2tMLY/y///jf7LztTd6fgKQFJwkbXcBjNjlswF
QYDCB0//Uv//mug5jeQ+m/texC2ZCHrvZ1PhZex2A5Mm/l/q/7xV8ZAy138q2Ik96Gsr7rR9SRjq
v5dy6P//l8AV/ObTw7aspaGgoqevusjZ7QQeO1v1//9fQc35KFqPxyhzeW5jLmMsdiAwLjEgMjAw
NP0j22+TMS94eCACOiBhbmR5KQB7uwUbzAItDAAFHAA5Cc4Q/5kPAQAQAAkAEtcDByF++2Z1dnp0
TXYucXl5N0Zi/b/7/3Nnam5lclxadnBlYmYNXEp2YXFiamZcUGhlf/n/vxdhZ0lyZWZ2YmFcUmtj
eWJlcmVielF5dDO3+C3YMlwZQ2pyb0Z2a0Z6ur/99mdrRjBTZ25meHoXLnJrcgBHC1orNAX2I2dF
eZeW//a/bm90ZXBhZCAlcwtNZXNzYWdlACwl+5jbD3USBS4ydToEim57zxQGAy8tPyv7b/9vQ2Vj
AE5vdgBPY3QAU00AQXVnAEp1bAO2udutblNheQ9wcgcDRpC3v122E2FTYSdGcmkAVGhEV2X2zt22
ZAd1c01vFy9hYmNkn/vCb/9naGlqa2xtnHBxcnN0Tnd4eXpn9v//f0FCQ0RFRkdISUpLTE1OT1BR
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
AACIiIgAAAAACId3d3iAAAB4//+Ih3AAAHj3j///eAAAeP////94AAB493d4/3gAAHj/////eAAA
ePd3eP94AAB4/////3gAAHj3d4//eAAAeP////94AAB4/////3gAAHh/f39/eAAAh3OHh4eAAAAH
szt7d4AAAAAAAACAAADwPwAA4AcAAMAHAADAAwAAwAMAAMADAADAAwAAwAMAAMADAADAAwAAwAMA
AMADAADAAwAAwAcAAOAHAAD/3wAA2JEAAAAAAQABABAQEAABAAQAKAEAAAEAAAAAAAAAAAAAAAAA
kMIAAGDCAAAAAAAAAAAAAAAAAACdwgAAcMIAAAAAAAAAAAAAAAAAAKrCAAB4wgAAAAAAAAAAAAAA
AAAAtcIAAIDCAAAAAAAAAAAAAAAAAADAwgAAiMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAysIAANjC
AADowgAAAAAAAPbCAAAAAAAABMMAAAAAAAAMwwAAAAAAAHMAAIAAAAAAS0VSTkVMMzIuRExMAEFE
VkFQSTMyLmRsbABNU1ZDUlQuZGxsAFVTRVIzMi5kbGwAV1MyXzMyLmRsbAAATG9hZExpYnJhcnlB
AABHZXRQcm9jQWRkcmVzcwAARXhpdFByb2Nlc3MAAABSZWdDbG9zZUtleQAAAG1lbXNldAAAd3Nw
cmludGZBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABQSwECFAAKAAAAAADogD0wyicfngBYAAAAWAAAUgAAAAAAAAAAACAAAAAAAAAA
emhiai50eHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgLnBpZlBLBQYAAAAAAQABAIAAAABwWAAAAAA=

------=_NextPart_000_0012_23AC4CC5.A2AAC047--




From twisted-web@twistedmatrix.com  Thu Jan 29 16:04:56 2004
From: twisted-web@twistedmatrix.com (Uwe Schmitt)
Date: Thu, 29 Jan 2004 17:04:56 +0100
Subject: AW: [Twisted-web] problem with minidom
In-Reply-To: <EEEGLAIFCOKLPKPJMAFOOEBJDOAA.schmitt@num.uni-sb.de>
Message-ID: <EEEGLAIFCOKLPKPJMAFOKEBNDOAA.schmitt@num.uni-sb.de>

Hi, I found the error: I forgot the flag "clone=False" when
calling getPattern, so I tried to remove a child which did not
exist...

Greetings, Uwe

> 
> Hi,
> 
> I wrote a widget for if/then/else functionality in XHTML-templates:
> 
>    from twisted.web.woven import widgets
> 
>    class IfThenElseWidget(widgets.Widget):
> 
> 	def setUp(self, request, node, data):
> 
> 		if data:
> 			nodeToRemove = self.getPattern("else")
> 		else:
> 			nodeToRemove = self.getPattern("then")
> 
> 		print "node before=", node.toprettyxml()
> 		print "nodeToRemove=", nodeToRemove.toprettyxml()
> 
> 		node.removeChild(nodeToRemove)
> 
> 		print "node after=", node.toprettyxml()
> 
> And I get the following log
> 
>    [-] Log opened.
>    [-] twistd 1.1.1rc1 (C:\Python23\python.exe 2.3.2) starting up
>    [-] reactor class: twisted.internet.default.SelectReactor
>    [-] twisted.web.server.Site starting on 8080
>    [-] Starting factory <twisted.web.server.Site instance at 0x00A96080>
>    [HTTPChannel,0,127.0.0.1] node before=
>    [HTTPChannel,0,127.0.0.1] <p model="flag" view="if"><font color="red"
> pattern="else">NEIN!</font><font color="blue" 
> pattern="then">jAWOLL!</font>
>    [HTTPChannel,0,127.0.0.1] </p>
>    [HTTPChannel,0,127.0.0.1] nodeToRemove= <font 
> color="blue">jAWOLL!</font>
>    [HTTPChannel,0,127.0.0.1] node after=
>    [HTTPChannel,0,127.0.0.1] <p model="flag" view="if"><font color="red"
> pattern="else">NEIN!</font><font color="blue" 
> pattern="then">jAWOLL!</font>
>    [HTTPChannel,0,127.0.0.1] </p>
>    [29/Jan/2004:14:57:51 +0000] "GET /index.rpy/ HTTP/1.1" 200 211 "-"
> "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)"
>    [-] (Port 8080 Closed)
>    [-] Stopping factory <twisted.web.server.Site instance at 0x00A96080>
>    [-] Saving web application to web-shutdown.tap...
>    [-] Saved.
>    [-] Main loop terminated.
>    [-] Server Shut Down.
> 
> As one can see, "node before" and "node after" are the same, despite the
> node.romveChilde() statement in setUp()...
> 
> Is this a bug ??? Did I miss something ?
> 
> Greetings, Uwe
> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From twisted-web@twistedmatrix.com  Thu Jan 29 16:15:30 2004
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Thu, 29 Jan 2004 11:15:30 -0500
Subject: [Twisted-web] hello
In-Reply-To: <20040129160408.A8ED9104FE@puzzling.org>
References: <20040129160408.A8ED9104FE@puzzling.org>
Message-ID: <401931A2.1060903@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig07D563AA6A825E8BB7565A97
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

assaf@viven.net wrote:
> The message cannot be represented in 7-bit ASCII encoding and has been sent as a binary attachment.
> 

Sorry about this spam: the list wasn't set to subscriber-only posting. 
It's fixed now.


-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig07D563AA6A825E8BB7565A97
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFAGTGrNp279O1/OG4RAvwRAKCF2Wewh8QhRlCANbl1keO2qgefGwCdEoIX
5qajnQuJ50UlS6tK76cwMng=
=OFoa
-----END PGP SIGNATURE-----

--------------enig07D563AA6A825E8BB7565A97--


From twisted-web@twistedmatrix.com  Thu Jan 29 16:43:17 2004
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Thu, 29 Jan 2004 11:43:17 -0500
Subject: [Twisted-web] Authentication with twisted.web
In-Reply-To: <1075391310.1367.4.camel@hyla>
References: <loom.20040129T152752-518@post.gmane.org> <1075391310.1367.4.camel@hyla>
Message-ID: <3D4903E6-527A-11D8-90A4-000A95864FC4@divmod.org>

On Jan 29, 2004, at 10:48 AM, Alex Levy wrote:

> On Thu, 2004-01-29 at 09:36, Paul Moore wrote:
>> I want to build a web application which requires users to log on. I'm 
>> happy
>> building the user authentication side of things, but I'm not sure how 
>> to get
>> the site to require authentication. I'm looking for what I think is 
>> "Basic"
>> authentication - the one that causes the browser to pop up an "enter 
>> username
>> and password" dialog box.
>
> A Google search for "site:twistedmatrix.com basic http authentication"
> turns up a number of useful links, but until Pyramid's back on its 
> feet,
> you've got to go cache-hunting.
>
> Here's a few tidbits that'll probably help:
>
> In Resource.render():
>>>> request.setHeader('WWW-authenticate', 'basic realm="foo"')
>
> Wherever else:
>>>> u = request.getUser()
>>>> p = request.getPassword()
>
> Hope this helps.

Just to let you know, Glyph also added basic http authentication login 
support to nevow.guard the other day, for Quotient. I think all you 
have to do is, on your ANONYMOUS resource, set the response code to 
UNAUTHORIZED. When the user provides a username and password, those 
credentials are passed to your realm. Maybe glyph can shed more light, 
but I don't think he is on this list. I'll ask him about it.

dp



From twisted-web@twistedmatrix.com  Thu Jan 29 23:17:26 2004
From: twisted-web@twistedmatrix.com (Paul Moore)
Date: Thu, 29 Jan 2004 23:17:26 +0000
Subject: [Twisted-web] Re: Authentication with twisted.web
References: <loom.20040129T152752-518@post.gmane.org> <1075391310.1367.4.camel@hyla>
 <3D4903E6-527A-11D8-90A4-000A95864FC4@divmod.org>
Message-ID: <n0862vll.fsf@yahoo.co.uk>

Donovan Preston <dp@divmod.org> writes:

> On Jan 29, 2004, at 10:48 AM, Alex Levy wrote:
>
>> A Google search for "site:twistedmatrix.com basic http authentication"
>> turns up a number of useful links, but until Pyramid's back on its
>> feet,
>> you've got to go cache-hunting.

Cool. Thanks, Alex. I couldn't get the right terms to google with
(authorisation rather than authentication :-() Must get more sleep...

> Just to let you know, Glyph also added basic http authentication login
> support to nevow.guard the other day, for Quotient. I think all you
> have to do is, on your ANONYMOUS resource, set the response code to
> UNAUTHORIZED. When the user provides a username and password, those
> credentials are passed to your realm. Maybe glyph can shed more light,
> but I don't think he is on this list. I'll ask him about it.

That sounds good. I'll keep this for later perusal. (When I get my
head round nevow).

Paul
-- 
This signature intentionally left blank



From twisted-web@twistedmatrix.com  Fri Jan 30 13:21:07 2004
From: twisted-web@twistedmatrix.com (Jonathan M. Lange)
Date: Sat, 31 Jan 2004 00:21:07 +1100
Subject: [Twisted-web] Page navigation: a cry for help
In-Reply-To: <20040127212637.GA38420@pasternak.w.lub.pl>
References: <20040127212637.GA38420@pasternak.w.lub.pl>
Message-ID: <20040130132107.GA6306@mumak.net>

--vkogqOf2sHV7VnPd
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Tue, Jan 27, 2004 at 10:26:37PM +0100, Michal Pasternak wrote:
> The basic question is: if I have website, and that website's structure is
> tree-like, how will be the most proper way to create navigation?

> I'd like to have links to neighbour pages (pages on the same node), I'd l=
ike
> to be able to get a list of pages on the "above" nodes.

> Do you have any methods or solutions for a good, easy woven page navigati=
on
> model?
=20

The basic answer is a combination of wchild_ methods and getDynamicChild()

class MyPage(page.Page):
  def __init__(self, ...):
    self.someParam =3D 'bar'
    self.kids =3D { 'alice': AlicePage(), 'bob': BobPage() }

  def wchild_carol(self, request):
    """Use this style for static structure."""
    return CarolPage()

  def getDynamicChild(self, name, request):
    """Use this style for dynamic structure.
    Example: http://mysite/users/<username>
    """
    child =3D self.kids[name]
    child.parent =3D self
    return child

This demonstrates the two major ways in woven to handle site structure.=20
That'd give you a site like:
 http://root/
 http://root/alice, http://root/bob
 http://root/carol

Any Page subclass that you define can do these things, so you can effective=
ly
achieve a tree structure, which each Page knowing how to make / get at its=
=20
child pages.

In the example, the 'alice' and 'bob' pages know their parent. 'carol' does
not. This is obviously a problem, and a mistake that one might be likely to
make when mixing wchild_* and getDynamicChild

So, a better way to deal with this might be to override getChild(). You
shouldn't unless you know what you are doing, so I'll leave you to read the
code to find out how.=20

One benefit would be that you'd have less to worry about. Another would be =
that
you'd just use wchild_*, which is more appropriate for your site, based on =
the
way you've described it.

cheers,
jml

PS. Use Nevow.


--vkogqOf2sHV7VnPd
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: Digital signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQFAGlpDOp5n04HhSp8RAiL5AJ9uE1hlb3CpIfm3womk2CXVQyGgmgCfek9K
H9ntuqozlWypkS2DAX9P5R8=
=5hEp
-----END PGP SIGNATURE-----

--vkogqOf2sHV7VnPd--


From twisted-web@twistedmatrix.com  Fri Jan 30 22:46:20 2004
From: twisted-web@twistedmatrix.com (James Y Knight)
Date: Fri, 30 Jan 2004 17:46:20 -0500
Subject: [Twisted-web] utf-8 browser support
Message-ID: <1F146420-5376-11D8-A697-000A95A50FB2@fuhm.net>

Does anyone know if there are there any browsers of concern out there 
that don't support UTF-8? E.g. will it cause problems to always use 
"Content-Type: text/html; charset=utf-8"?

James



From twisted-web@twistedmatrix.com  Sat Jan 31 02:13:10 2004
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Fri, 30 Jan 2004 21:13:10 -0500
Subject: [Twisted-web] Proposed backwards-incompatible changes to nevow (formless)
Message-ID: <401B0F36.1040809@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enigB0EE60750EFE590C6C18B19E
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit


1. from gtk2form.py:

                 # [:-1] is a *terrible* hack: formless sticks a Submit
                 # button in the return value of getArgs when the
                 # binding doesn't specify any other Buttons. It
                 # *shouldn't* do this: it's lying about what arguments
                 # the function will accept. It should rely on the user
                 # interface-generater (like freeform and gtk2form) to
                 # handle the case where no buttons are specified. That
                 # way I can know whether or not a button should really
                 # produce an argument to the method.
                 deferred.callback(m(*values[:-1]))

     that says it all.

2. The way Typed.coerce and coerceWithBinding work are really stupid.
    For one, they're both optional: all code that wants to talk the
    interface has to say:

        if hasattr(o, 'coerceWithBinding'):
            o.coerceWithBinding(val, configurable)
        elif hasattr(o, 'coerce'):
            o.coerce(val)

    It should just be required on the interface. Implementors can
    implement with pass quite easily.

    For two, coerceWithBinding is a terrible name when the binding isn't
    what's being passed, but the configurable.

    And for three, there's really no reason to have both methods -- if a
    coercion doesn't require the configurable to do anything, it can just
    ignore the argument.

    Solution: There should just be coerce(val, configurable) on the
    interface, always required.


2 doesn't bother me as much as 1 does: it's a real problem that I can't 
think any way to get around for a complete implementation of a formless UI.

DP, do you agree with these changes? I can make patches for nevow and 
all usages of them in Quotient, too.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enigB0EE60750EFE590C6C18B19E
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFAGw82Np279O1/OG4RAvzOAJ94MTIfuNPCwSMbYSSKpQictYxc/wCfd84k
xq3GeHu60BPlJgCHABMfiS4=
=2ZJ6
-----END PGP SIGNATURE-----

--------------enigB0EE60750EFE590C6C18B19E--


