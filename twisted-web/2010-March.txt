From jml at mumak.net  Wed Mar  3 18:25:36 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 3 Mar 2010 23:25:36 +0000
Subject: [Twisted-web] Twisted 10.0.0 released
Message-ID: <d06a5cd31003031525h33ea08b4k4c4a2aff0e7c7fe8@mail.gmail.com>

On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 10.0.

Highlights include:

 * Improved documentation, including "Twisted Web in 60 seconds"

 * Faster Perspective Broker applications

 * A new Windows installer that ships without zope.interface

 * Twisted no longer supports Python 2.3

 * Over one hundred closed tickets

For more information, see the NEWS file.

It's stable, backwards compatible, well tested and in every way an
improvement. Download it now from:

 http://tmrc.mit.edu/mirror/twisted/Twisted/10.0/Twisted-10.0.0.tar.bz2 or
 http://tmrc.mit.edu/mirror/twisted/Twisted/10.0/Twisted-10.0.0.win32-py2.5.msi

Many thanks to Jean-Paul Calderone and Chris Armstrong, whose work on
release automation tools and answers to numerous questions made this
possible. Thanks also to the supporters of the Twisted Software
Foundation and to the many contributors for this release.

jml


From descentspb at gmail.com  Fri Mar  5 08:56:43 2010
From: descentspb at gmail.com (Igor Katson)
Date: Fri, 05 Mar 2010 16:56:43 +0300
Subject: [Twisted-web] Sending requests in HTTP/1.1
Message-ID: <4B910D9B.3010905@gmail.com>

Hello!

I'm trying to authorize in a specific site with twisted. However, I 
believe that the site requires the client to make requests with HTTP/1.1 
instead of twisted.web's default HTTP/1.1

What can I do just to make the request line contain HTTP/1.1 instead of 
HTTP/1.0?

I tried changing a line in HTTPClient.sendCommand (I have this file 
/usr/local/lib/python2.6/dist-packages/Twisted-10.0.0-py2.6-linux-x86_64.egg/twisted/web/http.py), 
but twisted.web does not work any more if I do that.

Thanks in advance!



From descentspb at gmail.com  Fri Mar  5 09:58:39 2010
From: descentspb at gmail.com (Igor Katson)
Date: Fri, 05 Mar 2010 17:58:39 +0300
Subject: [Twisted-web] Sending requests in HTTP/1.1
In-Reply-To: <4B910D9B.3010905@gmail.com>
References: <4B910D9B.3010905@gmail.com>
Message-ID: <4B911C1F.2000009@gmail.com>

On 03/05/2010 04:56 PM, Igor Katson wrote:
> Hello!
>
> I'm trying to authorize in a specific site with twisted. However, I 
> believe that the site requires the client to make requests with 
> HTTP/1.1 instead of twisted.web's default HTTP/1.1
>
> What can I do just to make the request line contain HTTP/1.1 instead 
> of HTTP/1.0?
>
> I tried changing a line in HTTPClient.sendCommand (I have this file 
> /usr/local/lib/python2.6/dist-packages/Twisted-10.0.0-py2.6-linux-x86_64.egg/twisted/web/http.py), 
> but twisted.web does not work any more if I do that.
>
> Thanks in advance!
>
Sorry, this was not the problem. I don't need this any more.


From matt at appirio.com  Wed Mar 17 20:54:17 2010
From: matt at appirio.com (Matt Pruden)
Date: Wed, 17 Mar 2010 17:54:17 -0700
Subject: [Twisted-web] Web client through https proxy - is it even possible?
Message-ID: <7b8169171003171754v22eb3958xe88f5796a35a96f5@mail.gmail.com>

I'm trying to post some data to a web server, but need to go through
an https proxy. ?I can't seem to find anyone that's pulled this off
with a twisted web client.   I've been sniffing traffic and have it
close, but can't quite get past creating the SSL socket. ?Anything I
attempt to write to the transport after swapping out the standard
socket for SSL.Connection fails the SSL handshake on the remote end.

Here's the code so far:
class MyProtocol(client.HTTPPageGetter):

    got_connect = False

    def connectionMade(self):
        proxy = os.environ.get('https_proxy')
        if proxy:
            self.transport.write('CONNECT %s:%s HTTP/1.0\r\n' %
(self.factory.host, self.factory.port))
            self.sendHeader('Host', self.factory.headers.get("host",
self.factory.host))
            self.sendHeader('User-Agent', self.factory.agent)
            self.transport.write('\r\n')
        else:
            self.got_connect = True

        if self.got_connect:
            client.HTTPPageGetter.connectionMade(self)

    def lineReceived(self, line):
        if not self.got_connect:
            self.got_connect == True
            ctx = ssl.ClientContextFactory()
            self.transport.stopReading()
            self.transport.stopWriting()
            self.transport.socket = SSL.Connection(ctx.getContext(),
                                                self.transport.socket)
            self.transport.fileno = self.transport.socket.fileno
            self.transport.startReading()
            client.HTTPPageGetter.connectionMade(self)
        else:
            client.HTTPPageGetter.lineReceived(self, line)


From rlnewman at ucsd.edu  Thu Mar 18 13:43:40 2010
From: rlnewman at ucsd.edu (Rob Newman)
Date: Thu, 18 Mar 2010 10:43:40 -0700
Subject: [Twisted-web] Newbie question on handling args in URL string
Message-ID: <EBCD4CE3-B020-4125-A02B-3BA3E1FAAF42@ucsd.edu>

Hi Twisted-Web devs,

I am using Twisted for a web-application. I have a resource called Data, for which variables are called in a URL string:

http://localhost:8008/data?pet=dog&breed=lab&idtag=12345

Where 'pet' is a variable name, as is 'breed' and 'idtag', etc. This all works fine, and we get a JSON object back from the query that we use in the web application. 

In terms of client ease of use we want to be able to handle URL parsing, such that:

http://localhost:8008/data?pet=dog&breed=lab&idtag=12345

can be written:

http://localhost:8008/pet/dog/lab/12345

which is a nice semantic URL.

However, we also have a bunch of static files (such as jquery javascript and images) that we serve in the application, like:

http://localhost:8008/images/layout.png

- and -

http://localhost:8008/jquery/functionality.js

We want to make sure we are handling these correctly and efficiently. From twisted.web we are using the rewrite module thus:



import sys
import os
import re

from twisted.web import server, static, rewrite
from twisted.application import service, internet

root = resource.Root()

# Another file (resource.py)  defines the resources Data() and Root()

root.putChild('data', resource.Data())
root.putChild('images', static.File(images_dir))
root.putChild('jquery', static.File(js_dir))

rewrite_root = rewrite.RewriterResource(root, pathToArgs)

site = server.Site(rewrite_root)

application = service.Application('My App Name')

internet.TCPServer(8008, site).setServiceParent(application)



pathToArgs is the critical function, and it is where we are currently determining how to handle these different URL strings:

def pathToArgs(request):

    parts = request.uri.split('/')

    if request.uri == '/':

        # Do nothing - at the root level

    elif 'jquery' in request.postpath:

        # Handle static jquery request

    elif 'images' in request.postpath:

        # Handle static image request

    elif len(request.postpath) == 1:

        # Handle only pet type

    elif len(request.postpath) == 2:

        # Handle pet type and breed

    elif len(request.postpath) == 3:

        # Handle pet type, breed and idtag

    # Imagine this up to 'n' variables.....

    elif len(request.postpath) == n

        # Handle n variables



We seem to have an awful lot of replicated code in trying to parse the URL based on the length of the requested.postpath and dealing with each segment (split by '/') of the URL string. I feel that what we are trying to do has probably already been accounted for in the Twisted architecture available to us. Does anyone have any input on what (if anything) I am missing or lacking? Is this the correct way to approach development in Twisted? I am working my way through the O'Reilly Twisted Network Programming Essentials and studying the Twisted docs online, but I have not seen any 'best practices' approaches to application development, especially where parsing arguments is concerned.

Thanks in advance,
- Rob

From maarten at treewalker.org  Thu Mar 18 14:05:39 2010
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu, 18 Mar 2010 19:05:39 +0100
Subject: [Twisted-web] Newbie question on handling args in URL string
In-Reply-To: <EBCD4CE3-B020-4125-A02B-3BA3E1FAAF42@ucsd.edu>
References: <EBCD4CE3-B020-4125-A02B-3BA3E1FAAF42@ucsd.edu>
Message-ID: <201003181905.39331.maarten@treewalker.org>

On Thursday 18 March 2010, Rob Newman wrote:

> from twisted.web import server, static, rewrite
> from twisted.application import service, internet
> 
> root = resource.Root()
> 
> # Another file (resource.py)  defines the resources Data() and Root()
> 
> root.putChild('data', resource.Data())
> root.putChild('images', static.File(images_dir))
> root.putChild('jquery', static.File(js_dir))
> 
> rewrite_root = rewrite.RewriterResource(root, pathToArgs)
> 
> site = server.Site(rewrite_root)

I think it's the rewriting that is complicating things. Why not handle both 
URL styles in the Data class?

Even if you want to rewrite, you could avoid a lot of duplication by putting 
the RewriterResource under 'data' instead of in the root.

Bye,
		Maarten


From joson.prog at gmail.com  Fri Mar 19 06:36:32 2010
From: joson.prog at gmail.com (Joson Mandaro)
Date: Fri, 19 Mar 2010 18:36:32 +0800
Subject: [Twisted-web] [twisted-web] Deferred and threads
Message-ID: <6dcfd2ac1003190336x357780ean104df7528a5db08f@mail.gmail.com>

Hi all,
I'm newbie and puzzled by some problems.
          I create five deferred instances, Then when all of them get the
responses, will they run in five threads or one by one ? I'm not sure to use
multiple threads if they'll usually run in synchrony.
          Best regards,

Joson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100319/255676d4/attachment.htm 

From matthieu.huin at wallix.com  Fri Mar 19 07:05:11 2010
From: matthieu.huin at wallix.com (Matthieu HUIN)
Date: Fri, 19 Mar 2010 12:05:11 +0100
Subject: [Twisted-web] [twisted-web] Deferred and threads
In-Reply-To: <6dcfd2ac1003190336x357780ean104df7528a5db08f@mail.gmail.com>
References: <6dcfd2ac1003190336x357780ean104df7528a5db08f@mail.gmail.com>
Message-ID: <1268996711.20467.42.camel@mhu.ifr.lan>

Hello Joson,

>From my understanding deferreds are independent from each other. Their
"progress" along their callback chain is managed by the reactor and the
way it handles and dispatches events.

There are several ways to link deferreds together if it is what you
would like to achieve :

- you can use the deferred method chainDeferred that allows you to plug
a deferred at the end of another deferred's callbacks chain;
- you can use a DeferredList instance to keep track of a list of
deferreds. It behaves as a Deferred, but you can configure it at
instanciation to either fire its callback chain as soon as one of the
deferreds in the list fires a callback, or to fire its callback chain
only after all the deferreds in the list have fired theirs (default
behavior).

If you want to know more, I advise you to check the documentation; the
source code might also help.
http://twistedmatrix.com/documents/10.0.0/api/twisted.internet.defer.DeferredList.html

I Hope this helps.

Regards

Matthieu

Le vendredi 19 mars 2010 ? 18:36 +0800, Joson Mandaro a ?crit :
> Hi all,
> I'm newbie and puzzled by some problems.
> 
>           I create five deferred instances, Then when all of them get
> the responses, will they run in five threads or one by one ? I'm not
> sure to use multiple threads if they'll usually run in synchrony.
>           Best regards,
> 
> Joson
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web




From Bruno.Harbulot at manchester.ac.uk  Fri Mar 19 13:36:54 2010
From: Bruno.Harbulot at manchester.ac.uk (Bruno Harbulot)
Date: Fri, 19 Mar 2010 17:36:54 +0000
Subject: [Twisted-web] Web client through https proxy - is it even
	possible?
In-Reply-To: <7b8169171003171754v22eb3958xe88f5796a35a96f5@mail.gmail.com>
References: <7b8169171003171754v22eb3958xe88f5796a35a96f5@mail.gmail.com>
Message-ID: <ho0cnn$uu7$1@dough.gmane.org>

Hi,

I'm not sure how this would work with the twisted web client, but I've 
managed to get it to work in this library 
http://code.google.com/p/python-httpclient/ (which can also verify 
certificates, btw).

You don't need to send the Host header with CONNECT as far as I'm aware. 
You might want to wait until you read the 200 OK status code (or some 
other code if it fails) in response to CONNECT before turning the socket 
into an SSL socket.

Best wishes,

Bruno.


Matt Pruden wrote:
> I'm trying to post some data to a web server, but need to go through
> an https proxy.  I can't seem to find anyone that's pulled this off
> with a twisted web client.   I've been sniffing traffic and have it
> close, but can't quite get past creating the SSL socket.  Anything I
> attempt to write to the transport after swapping out the standard
> socket for SSL.Connection fails the SSL handshake on the remote end.
> 
> Here's the code so far:
> class MyProtocol(client.HTTPPageGetter):
> 
>     got_connect = False
> 
>     def connectionMade(self):
>         proxy = os.environ.get('https_proxy')
>         if proxy:
>             self.transport.write('CONNECT %s:%s HTTP/1.0\r\n' %
> (self.factory.host, self.factory.port))
>             self.sendHeader('Host', self.factory.headers.get("host",
> self.factory.host))
>             self.sendHeader('User-Agent', self.factory.agent)
>             self.transport.write('\r\n')
>         else:
>             self.got_connect = True
> 
>         if self.got_connect:
>             client.HTTPPageGetter.connectionMade(self)
> 
>     def lineReceived(self, line):
>         if not self.got_connect:
>             self.got_connect == True
>             ctx = ssl.ClientContextFactory()
>             self.transport.stopReading()
>             self.transport.stopWriting()
>             self.transport.socket = SSL.Connection(ctx.getContext(),
>                                                 self.transport.socket)
>             self.transport.fileno = self.transport.socket.fileno
>             self.transport.startReading()
>             client.HTTPPageGetter.connectionMade(self)
>         else:
>             client.HTTPPageGetter.lineReceived(self, line)



From drew.smathers at gmail.com  Fri Mar 19 22:06:54 2010
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 19 Mar 2010 22:06:54 -0400
Subject: [Twisted-web] [twisted-web] Deferred and threads
In-Reply-To: <1268996711.20467.42.camel@mhu.ifr.lan>
References: <6dcfd2ac1003190336x357780ean104df7528a5db08f@mail.gmail.com>
	<1268996711.20467.42.camel@mhu.ifr.lan>
Message-ID: <368574aa1003191906i6386bb42p9bacadd7de6cd429@mail.gmail.com>

On Fri, Mar 19, 2010 at 7:05 AM, Matthieu HUIN <matthieu.huin at wallix.com> wrote:
> Hello Joson,
>
> >From my understanding deferreds are independent from each other. Their
> "progress" along their callback chain is managed by the reactor and the
> way it handles and dispatches events.

I don't think that's accurate.  The reactor knows nothing about
Deferreds.  The logic for managing the callback chain is actually in
Deferred itself.


From drew.smathers at gmail.com  Fri Mar 19 22:14:33 2010
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 19 Mar 2010 22:14:33 -0400
Subject: [Twisted-web] [twisted-web] Deferred and threads
In-Reply-To: <6dcfd2ac1003190336x357780ean104df7528a5db08f@mail.gmail.com>
References: <6dcfd2ac1003190336x357780ean104df7528a5db08f@mail.gmail.com>
Message-ID: <368574aa1003191914m313d82c1l4543f9d25e0a3789@mail.gmail.com>

On Fri, Mar 19, 2010 at 6:36 AM, Joson Mandaro <joson.prog at gmail.com> wrote:
> Hi all,
> I'm newbie and puzzled by some problems.
> ????????? I create five deferred instances, Then when all of them get the
> responses, will they run in five threads or one by one ? I'm not sure to use
> multiple threads if they'll usually run in synchrony.
> ????????? Best regards,
>

I think this question is better for twisted-python mailing list.  I'm
not sure where you're confused but Deferreds and threads don't have
anything to do with each other.  Deferred callbacks don't execute in
separate threads or anything like that.  The order of callbacks
depends on the order in which data arrives.


From joson.prog at gmail.com  Sat Mar 20 01:06:02 2010
From: joson.prog at gmail.com (Joson Mandaro)
Date: Sat, 20 Mar 2010 13:06:02 +0800
Subject: [Twisted-web] [twisted-web] Deferred and threads
In-Reply-To: <368574aa1003191914m313d82c1l4543f9d25e0a3789@mail.gmail.com>
References: <6dcfd2ac1003190336x357780ean104df7528a5db08f@mail.gmail.com>
	<368574aa1003191914m313d82c1l4543f9d25e0a3789@mail.gmail.com>
Message-ID: <6dcfd2ac1003192206s7e4d03f9l2ea48193815c11f@mail.gmail.com>

Thank both of you. Now I get it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100320/92d69ac6/attachment.htm 

From doug.gorley at gmail.com  Mon Mar 29 13:29:39 2010
From: doug.gorley at gmail.com (Doug Gorley)
Date: Mon, 29 Mar 2010 10:29:39 -0700
Subject: [Twisted-web] Authenticating with a certificate
Message-ID: <fd45ad381003291029p39532836w97b3d253a525acf@mail.gmail.com>

G'day Twisted list,

I'm brand new to Twisted, and I'm trying to wrap my head
around writing a client that authenticates with a certificate.
I have a PFX file, and a small Perl script that I can use
to download content, but I don't seem to be able to replicate
this on other machines.  I'd like to replace the whole mess
with a more robust Python solution.

My communication with the server needs to look like this:

----------------------------------------------------------------

ME: https://www.example.com/AUTHURL
              |
              +--------------------> SERVER: (Authenticated)
                                                      |
ME: https://www.example.com/FETCHCONTENT <------------+
              |
              +--------------------> SERVER: (XML content)
                                                      |
ME: https://www.example.com/ACKNOWLEDGE <-------------+
              |
              +--------------------> SERVER: (acknowledged)
                                                      |
ME: https://www.example.com/LOGOUT <------------------+
              |
              +--------------------> SERVER: (logout)

----------------------------------------------------------------

I'm working from the O'Reilly Twisted book, and trying to
reconcile that with the API and the examples on the Twisted
site, but I'm not sure I'm finding what I need.  Can anyone
give me any pointers on how to proceed?  Thanks muchly.

--
Doug Gorley | doug.gorley at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20100329/1250fcf9/attachment.htm 

From exarkun at twistedmatrix.com  Tue Mar 30 13:33:43 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 30 Mar 2010 17:33:43 -0000
Subject: [Twisted-web] Authenticating with a certificate
In-Reply-To: <fd45ad381003291029p39532836w97b3d253a525acf@mail.gmail.com>
References: <fd45ad381003291029p39532836w97b3d253a525acf@mail.gmail.com>
Message-ID: <20100330173343.2792.1252131719.divmod.xquotient.1900@localhost.localdomain>

On 29 Mar, 05:29 pm, doug.gorley at gmail.com wrote:
>G'day Twisted list,
>
>I'm brand new to Twisted, and I'm trying to wrap my head
>around writing a client that authenticates with a certificate.
>I have a PFX file, and a small Perl script that I can use
>to download content, but I don't seem to be able to replicate
>this on other machines.  I'd like to replace the whole mess
>with a more robust Python solution.
>
>My communication with the server needs to look like this:

Hi Doug,

Twisted's SSL support is based on pyOpenSSL.  Most of the complex SSL 
features are actually implemented by pyOpenSSL, and Twisted exposes them 
by requiring certain pyOpenSSL objects to be provided to it.

You can find the pyOpenSSL documentation here:

  http://packages.python.org/pyOpenSSL/

And you can find documentation about the Twisted SSL integration APIs 
here:

  http://twistedmatrix.com/documents/current/core/howto/ssl.html

One thing I know is that you'll need to convert your PFX file into a 
PEM.  Another thing is that twisted.web.client.getPage accepts a 
"contextFactory" argument which you'll probably want to specify, in 
order to define the particulars of the SSL handshake for your case.

Jean-Paul


From rlnewman at ucsd.edu  Tue Mar 30 19:52:46 2010
From: rlnewman at ucsd.edu (Rob Newman)
Date: Tue, 30 Mar 2010 16:52:46 -0700
Subject: [Twisted-web] Twisted and reverse proxies
Message-ID: <48AA356F-A7AE-4AC2-B762-A18A08C1C4D9@ucsd.edu>

Hi Twisted folks,

We have a pure Twisted application that runs on a URL akin to:

http://hostname:8080

We wish to use an Apache reverse proxy to allow our web users to transparently view the Twisted application 'within' our existing Apache served site. So that, something like:

http://www.companyname.com/tools/twisted_app

proxies to:

http://hostname:8080

As someone relatively new to Twisted, how will our static (and other) resources react to being reverse proxy served? Will they barf? Is there any online documentation I can look at for case studies?

Thanks in advance,
- Rob

From rgacote at appropriatesolutions.com  Tue Mar 30 21:50:55 2010
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Tue, 30 Mar 2010 21:50:55 -0400 (EDT)
Subject: [Twisted-web] Twisted and reverse proxies
In-Reply-To: <48AA356F-A7AE-4AC2-B762-A18A08C1C4D9@ucsd.edu>
Message-ID: <926718221.1631270000659978.JavaMail.rgacote@Raymond-Cotes-Mac-mini.local>

Hi Rob: 

We have a number of different installations running precisely that arrangement -- Twisted running behind Apache (or Nginx). Very stable and reliable.

One note, you ask how your static resources 'will react' to being reverse proxied. 
When running Twisted behind Apache, we find it most useful to serve all the static files directly from Apache and leave Twisted to serve only the dynamic content. No reason to use Twisted to serve static files when there's a perfectly good Apache server available. 

The one small issue we've had is that all the log entries in Twisted come out showing a source IP of 127.0.0.1 (i.e., the Apache server). We turned on the X-Forwarded headers in Apache and ended up hacking some library code in Twisted, but always figured we must have missed something since it seems that grabbing the X-Forwarded header should either a) be something Twisted would do; or b) have a simple setting to indicate the use of X-Forwarded. (perhaps some more knowledgeable person will point me in the right direction.)
--Ray



----- Original Message -----
From: "Rob Newman" <rlnewman at ucsd.edu>
To: twisted-web at twistedmatrix.com
Sent: Tuesday, March 30, 2010 7:52:46 PM GMT -05:00 US/Canada Eastern
Subject: [Twisted-web] Twisted and reverse proxies

Hi Twisted folks,

We have a pure Twisted application that runs on a URL akin to:

http://hostname:8080

We wish to use an Apache reverse proxy to allow our web users to transparently view the Twisted application 'within' our existing Apache served site. So that, something like:

http://www.companyname.com/tools/twisted_app

proxies to:

http://hostname:8080

As someone relatively new to Twisted, how will our static (and other) resources react to being reverse proxy served? Will they barf? Is there any online documentation I can look at for case studies?

Thanks in advance,
- Rob
_______________________________________________
Twisted-web mailing list
Twisted-web at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-- 
Ray Cote, President
Appropriate Solutions, Inc.
We Build Software
603.924.6079


From maarten at treewalker.org  Wed Mar 31 05:28:11 2010
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 31 Mar 2010 11:28:11 +0200
Subject: [Twisted-web] Twisted and reverse proxies
In-Reply-To: <48AA356F-A7AE-4AC2-B762-A18A08C1C4D9@ucsd.edu>
References: <48AA356F-A7AE-4AC2-B762-A18A08C1C4D9@ucsd.edu>
Message-ID: <201003311128.11833.maarten@treewalker.org>

On Wednesday 31 March 2010, Rob Newman wrote:

> We wish to use an Apache reverse proxy to allow our web users to
> transparently view the Twisted application 'within' our existing Apache
> served site. So that, something like:
> 
> http://www.companyname.com/tools/twisted_app
> 
> proxies to:
> 
> http://hostname:8080

This is what the Apache configuration would look like:

===

# Serve static content in Apache:
# (the ProxyPass exception must be located before the ProxyPass rule)
ProxyPass /tools/twisted_app/static !
Alias /tools/twisted_app/static /some/path/on/disk/static

# Act as a proxy for Twisted:
<Location /tools/twisted_app>
  ProxyPass http://hostname:8080 retry=1
  ProxyPassReverse http://hostname:8080
  ProxyPassReverseCookiePath / /tools/twisted_app/
</Location>

===

"ProxyPass" sets up the reverse proxy. The "retry=1" ensures that if your 
Twisted instance returns from being unavailable (for example after an 
upgrade), Apache will retry contacting it 1 second later. The default is a 
lot longer than 1 second.

"ProxyPassReverse" rewrites headers so redirections continue to work. It 
does not rewrite content.

"ProxyPassReverseCookiePath" rewrites cookies to make their path correspond 
to the URL of your web app. Without this, if you run multiple Twisted 
applications reverse proxied on the same host, their (session) cookies will 
have identical paths and start overwriting each other.

> As someone relatively new to Twisted, how will our static (and other)
> resources react to being reverse proxy served? Will they barf? Is there
> any online documentation I can look at for case studies?

As Ray wrote, in most cases it is best to let Apache serve the static 
content and use Twisted for the dynamic content.

If your app puts absolute URLs in the content it produces, such as 
registration conformation e-mails or RSS/Atom feeds, it must use the 
"/tools/twisted_app" outer URL for this, since Apache does not rewrite 
content. So the application must be aware that it is reverse proxied and 
under which URL.

One thing to remember is that Apache buffers the data it gets from Twisted 
before sending it back to the requester. So if you stream events instead of 
writing a document, the requester will not receive the events until much 
later. I worked around this by reading streaming data directly from the 
Twisted HTTP server.

Bye,
		Maarten


From maarten at treewalker.org  Wed Mar 31 05:42:36 2010
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 31 Mar 2010 11:42:36 +0200
Subject: [Twisted-web] Twisted and reverse proxies
In-Reply-To: <926718221.1631270000659978.JavaMail.rgacote@Raymond-Cotes-Mac-mini.local>
References: <926718221.1631270000659978.JavaMail.rgacote@Raymond-Cotes-Mac-mini.local>
Message-ID: <201003311142.36864.maarten@treewalker.org>

On Wednesday 31 March 2010, Ray Cote wrote:

> One note, you ask how your static resources 'will react' to being reverse
> proxied. When running Twisted behind Apache, we find it most useful to
> serve all the static files directly from Apache and leave Twisted to
> serve only the dynamic content. No reason to use Twisted to serve static
> files when there's a perfectly good Apache server available.

In most cases you are right, but there can be a reason to let Twisted serve 
the static files.

For performance it is best to set the expiery date of a static resource a 
long time (1 year) into the future. That way, the browser can load it once 
and uses its cached version ever after.

However, if you change the resoure, for example to add elements to your 
style sheet, you want the new version to be used instead of the outdated 
cached version. To force the new version to be loaded without reducing the 
expiery time dramatically or having to manually flush the browser's cache, 
you can give the new version a new URL.

You could put the release version in the URL: "app/static/1.0", 
"app/static/1.1" etc. That works well for deployed apps, but is still a pain 
for development. So what I did instead was generate a unique ID on startup 
of the app and use that ID in the URL: "app/static-HDUI89BDY3/main.css", 
"app/static-HDUI89BDY3/icon.png" etc. So after a content chance, an app 
restart ensures the browser will refetch everything.

An alternative would be to compute a hash of the static content and use that 
hash the URL. That way you would not need an application restart when static 
content changes.

Bye,
		Maarten


From maarten at treewalker.org  Wed Mar 31 05:52:51 2010
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 31 Mar 2010 11:52:51 +0200
Subject: [Twisted-web] Twisted and reverse proxies
In-Reply-To: <201003311142.36864.maarten@treewalker.org>
References: <926718221.1631270000659978.JavaMail.rgacote@Raymond-Cotes-Mac-mini.local>
	<201003311142.36864.maarten@treewalker.org>
Message-ID: <201003311152.52050.maarten@treewalker.org>

On Wednesday 31 March 2010, I wrote:

> An alternative would be to compute a hash of the static content and use
> that hash the URL. That way you would not need an application restart
> when static content changes.

I just realized that this would make it very difficult to have one static 
resource (style sheet) refer to another static resource (image). Unless you 
would rewrite the referring resource, but then it's not really static 
anymore.

The approach with an ID generated at startup does not have this problem, 
since the ID can be put in the URL as a path element and all references 
between static resources can be done as relative URLs.

Bye,
		Maarten


From rlnewman at ucsd.edu  Wed Mar 31 11:09:48 2010
From: rlnewman at ucsd.edu (Rob Newman)
Date: Wed, 31 Mar 2010 08:09:48 -0700
Subject: [Twisted-web] Twisted and reverse proxies
In-Reply-To: <201003311152.52050.maarten@treewalker.org>
References: <926718221.1631270000659978.JavaMail.rgacote@Raymond-Cotes-Mac-mini.local>
	<201003311142.36864.maarten@treewalker.org>
	<201003311152.52050.maarten@treewalker.org>
Message-ID: <AB3BFB50-BF10-408F-97DD-1E65D61ACA43@ucsd.edu>

Ray and Maarten,

Thanks for all the ideas - much appreciated!

- Rob


From exarkun at twistedmatrix.com  Wed Mar 31 18:03:01 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 31 Mar 2010 22:03:01 -0000
Subject: [Twisted-web] Twisted and reverse proxies
In-Reply-To: <926718221.1631270000659978.JavaMail.rgacote@Raymond-Cotes-Mac-mini.local>
References: <48AA356F-A7AE-4AC2-B762-A18A08C1C4D9@ucsd.edu>
	<926718221.1631270000659978.JavaMail.rgacote@Raymond-Cotes-Mac-mini.local>
Message-ID: <20100331220301.2792.2141320800.divmod.xquotient.1995@localhost.localdomain>

On 01:50 am, rgacote at appropriatesolutions.com wrote:
>
>The one small issue we've had is that all the log entries in Twisted 
>come out showing a source IP of 127.0.0.1 (i.e., the Apache server). We 
>turned on the X-Forwarded headers in Apache and ended up hacking some 
>library code in Twisted, but always figured we must have missed 
>something since it seems that grabbing the X-Forwarded header should 
>either a) be something Twisted would do; or b) have a simple setting to 
>indicate the use of X-Forwarded. (perhaps some more knowledgeable 
>person will point me in the right direction.)

This is a poor behavior of Twisted Web logging, and something I'd very 
much like to see fixed.  Since the better header handling code appeared 
in Twisted 8.2 or so, and since the Twisted Web proxy itself is again 
apparently working in Twisted 10.0, this is probably more feasible to 
actually fix.

http://twistedmatrix.com/trac/ticket/1468 is the ticket for this. 
Notice that I said I was going to work on it a while ago, but then ran 
into the various issues above, and never got anywhere.  Possibly with 
those roadblocks out of the way, the plan I described there could be 
attempted (and perhaps it will even turn out to be a good one, but no 
promises).

Jean-Paul


