From thomas.weholt at gmail.com  Wed Dec  1 05:09:59 2004
From: thomas.weholt at gmail.com (Thomas Weholt)
Date: Wed Dec  1 05:10:31 2004
Subject: [Twisted-web] Example of WebDav-server using akadav
Message-ID: <ffb7b7f804120104095fb81c35@mail.gmail.com>

Hi,

Can anybody provide a simple example on how to server files using
WebDav/akadav/Twisted ?

-- 
Mvh/Best regards,
Thomas Weholt
http://www.weholt.org

From chuckr at chuckr.org  Wed Dec  1 13:19:36 2004
From: chuckr at chuckr.org (Chuck Robey)
Date: Wed Dec  1 12:55:29 2004
Subject: [Twisted-web] FreeBSD port
Message-ID: <20041201151806.T59195@april.chuckr.org>

According to your web pages, there is a FreeBSD port of Twisted ... you
also say there is one for NetBSD.  I have done a bit of a search, can't
find it, could you please give me the port name?

----------------------------------------------------------------------------
Chuck Robey         | Interests include C & Java programming, FreeBSD,
chuckr@chuckr.org   | electronics, communications, and SF/Fantasy.

New Year's Resolution:  I will not sphroxify gullible people into looking up
fictitious words in the dictionary (on the wall at my old fraternity,
Signa Phi Nothing).
----------------------------------------------------------------------------

From db3l at fitlinxx.com  Wed Dec  1 14:08:42 2004
From: db3l at fitlinxx.com (David Bolen)
Date: Wed Dec  1 14:08:52 2004
Subject: [Twisted-web] Re: FreeBSD port
References: <20041201151806.T59195@april.chuckr.org>
Message-ID: <u7jo1vi91.fsf@fitlinxx.com>

Chuck Robey <chuckr@chuckr.org> writes:

> According to your web pages, there is a FreeBSD port of Twisted ... you
> also say there is one for NetBSD.  I have done a bit of a search, can't
> find it, could you please give me the port name?

For FreeBSD, there's /usr/ports/devel/py-twisted.  Not sure about NetBSD.

But also Twisted has a distutils setup.py, so on either system, I
expect just downloading the source and installing that way (e.g.,
python setup.py build or python setup.py install) would work fine
(that's pretty much all the FreeBSD port does anyway).

-- David


From orbitz at ezabel.com  Wed Dec  1 14:44:00 2004
From: orbitz at ezabel.com (orbitz)
Date: Wed Dec  1 14:44:14 2004
Subject: [Twisted-web] FreeBSD port
In-Reply-To: <20041201151806.T59195@april.chuckr.org>
References: <20041201151806.T59195@april.chuckr.org>
Message-ID: <41AE3B20.3000607@ezabel.com>

To search ports you can always do:
cd /usr/ports; make search key=whatever
or
cd /usr/ports; make search name=whatever

Chuck Robey wrote:

>According to your web pages, there is a FreeBSD port of Twisted ... you
>also say there is one for NetBSD.  I have done a bit of a search, can't
>find it, could you please give me the port name?
>
>----------------------------------------------------------------------------
>Chuck Robey         | Interests include C & Java programming, FreeBSD,
>chuckr@chuckr.org   | electronics, communications, and SF/Fantasy.
>
>New Year's Resolution:  I will not sphroxify gullible people into looking up
>fictitious words in the dictionary (on the wall at my old fraternity,
>Signa Phi Nothing).
>----------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-web mailing list
>Twisted-web@twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>  
>


From Mark.Williamson at bl.uk  Thu Dec  2 15:00:20 2004
From: Mark.Williamson at bl.uk (Williamson, Mark)
Date: Thu Dec  2 14:59:04 2004
Subject: [Twisted-web] Example of WebDav-server using akadav
Message-ID: <343540CF89C2774289E7F3C9EE4F5DF10553A6C3@nt-lonex1.bl.uk>

 

-----Original Message-----
From: Williamson, Mark
To: 'Discussion of twisted.web, Nevow, and Woven"
<twisted-web@twistedmatrix.com>
2002@weholt.org'; 'twisted-web@twistedmatrix.com'
Sent: 12/2/04 9:57 PM
Subject: Re: [Twisted-web] Example of WebDav-server using akadav

Here is something very simple that I've just done to test it.
Its pleasingly cool - I can connect to it with my Mac and publish
my calendar to it.

Now - the question *I* have is how do I run a webdav directory
in a twisted webserver. If it used server.Site it would just be a
a matter of putChild but can you run multiple Site's on a single
port?

cheers

mark

# -*- python -*-
from twisted.application import service, internet
from akadav import davresource,davserver




application = service.Application("mjserv")

root = davresource.WebDAV("/home/markw")
webServer = internet.TCPServer(8001, davserver.Site( root ) )
webServer.setServiceParent(application)


**************************************************************************

Experience the British Library online at www.bl.uk 

Help the British Library conserve the world's knowledge. Adopt a Book.
www.bl.uk/adoptabook 

*************************************************************************

The information contained in this e-mail is confidential and may be legally
privileged. It is intended for the addressee(s) only. If you are not the
intended recipient, please delete this e-mail and notify the
postmaster@bl.uk : The contents of this e-mail must not be disclosed or
copied without the sender's consent. 

The statements and opinions expressed in this message are those of the
author and do not necessarily reflect those of the British Library. The
British Library does not take any responsibility for the views of the
author. 

************************************************************************* 


From david at endlessremix.shacknet.nu  Fri Dec  3 13:09:03 2004
From: david at endlessremix.shacknet.nu (David Ferlier)
Date: Fri Dec  3 13:09:10 2004
Subject: [Twisted-web] FreeBSD port
In-Reply-To: <20041201151806.T59195@april.chuckr.org>
References: <20041201151806.T59195@april.chuckr.org>
Message-ID: <20041203200903.GA24544@bigboned.shacknet.nu>

No idea about FreeBSD, but it's definitely in NetBSD's WIP packages.
If you don't know about pkgsrc-wip, http://pkgsrc-wip.sf.net/.

So the port name is wip/py-nevow. Anyway, the package hasn't been
changed in the last 3 months and is still at 0.2. Though, replacing
DISTNAME to Nevow-0.3.0 will surely do the trick, there are no new
additional dependencies.

David

On Wed, Dec 01, 2004 at 03:19:36PM -0500, Chuck Robey wrote:
> According to your web pages, there is a FreeBSD port of Twisted ... you
> also say there is one for NetBSD.  I have done a bit of a search, can't
> find it, could you please give me the port name?
> 
> ----------------------------------------------------------------------------
> Chuck Robey         | Interests include C & Java programming, FreeBSD,
> chuckr@chuckr.org   | electronics, communications, and SF/Fantasy.
> 
> New Year's Resolution:  I will not sphroxify gullible people into looking up
> fictitious words in the dictionary (on the wall at my old fraternity,
> Signa Phi Nothing).
> ----------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-- 
     David Ferlier -- david@bigboned.shacknet.nu

            "Simplicity is the ultimate sophistication."
                   -- Leonardo da Vinci


From andrea at cpushare.com  Sat Dec  4 10:35:22 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat Dec  4 10:35:58 2004
Subject: [Twisted-web] maxlength input with formless
Message-ID: <20041204173522.GA13244@dualathlon.random>

How can I define a maxlength for my input fields in a form? Do I need to
modify the formless module or is there a trick?

Wouldn't be much simpler if the attributes passed as last parameter to
annotate.Typed would be rendered without any parsing inside the input block?

Or can I use the css to set the maxlength based on the id? (I tried
that, but I couldn't find a way to do it with the css yet ;)

Otherwise another way that would be fine, is if I can write some code to
edit myself the result of webform.renderForms() before returning it from
the "def render_form()".

Thanks.

From andrea at cpushare.com  Sat Dec  4 10:43:17 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat Dec  4 10:44:02 2004
Subject: [Twisted-web] page with fragment keeps failing after correcting
	error in fragment
Message-ID: <20041204174317.GB13244@dualathlon.random>

I'm using nevow/twisted/python all from latest SVN/CVS.

In short I've a rend.Fragment like this:

class fragment(rend.Fragment):
	docFactory = loaders.xmlfile('xml/somefragment.xml', ignoreDocType = True)

then I've some other page rendering the fragment inside:

class basepage_class(rend.Page):
	def render_fragment(self, ctx, data):
		return fragment()

So far so good, problem is that if I insert an xml syntax error in the
fragment, I've to restart the server, or it never notices when I
corrected it. I'm not sure if this is intentional.

If you insert </p></p> into xml/somefragment.xml and you reload, you'll
get the error. Then you delete the bogus string, and another error
remains.

From andrea at cpushare.com  Sat Dec  4 10:48:04 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat Dec  4 10:48:37 2004
Subject: [Twisted-web] how to offload to an xml page the text in formless
Message-ID: <20041204174804.GC13244@dualathlon.random>

You know formless allows passing the text for the form all inside the
annotate.TypedInterface class.

Is it possible to offload all that text in some xml page? Perhaps it's
possible only if I use the customForm thing from the example? I would
like to be able to edit the text (but only the text written inside the
annotate.TypedInterface) without having to restart the server.

I really like the concept of splitting the "text" from the "code". I
don't want having to restart the server just to correct a typo...

It's not very high prio, http is quite transient, but I may have other
more persistent services on the same tap where the web is also running.
So another solution is to split off the services and leave http alone
(and communicate data between the two servers across pipes or unix
domain sockets). That has the advantage to scale better in
multiprocessor too.

I wonder if you've any suggestion on these matters, thanks!

From andrea at cpushare.com  Sat Dec  4 21:48:54 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat Dec  4 21:49:26 2004
Subject: [Twisted-web] how to make form input description dynamic with
	formless
Message-ID: <20041205044854.GG13244@dualathlon.random>

Am I ok doing this? Is this supposed to break quickly in the future or
can it be considered sort of stable interface? Note that if it breaks
completely it's probably ok, I just don't want silent breakage with
slightly altered behaviour. I'm feeling quite safe and it seems still
cleaner than using the manual form mode.

	def render_form(self, ctx, data):
		configurable = self.locateConfigurable(ctx, '')
		binding = configurable.getBinding(ctx, 'xxx')
		ppp = filter(lambda x: x.name == 'ppp', binding.arguments)[0]
		ppp.description = '%s' % time.time()
		return webform.renderForms()

The argument name is 'ppp' and the callback (aka MethodBinding) is 'xxx'.

Thanks.

From tv at twistedmatrix.com  Sun Dec  5 01:05:43 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun Dec  5 01:06:21 2004
Subject: [Twisted-web] maxlength input with formless
In-Reply-To: <20041204173522.GA13244@dualathlon.random>
References: <20041204173522.GA13244@dualathlon.random>
Message-ID: <41B2C157.7030901@twistedmatrix.com>

Andrea Arcangeli wrote:

>How can I define a maxlength for my input fields in a form? Do I need to
>modify the formless module or is there a trick?
>  
>
from formless import annotate

class MaxLenString(annotate.String):
    maxlen = 100

    def __init__(self, *args, **kwargs):
       if 'maxlen' in kwargs:
          self.maxlen = kwargs['maxlen']
          del kwargs['maxlen']
       super(MaxLenString, self).__init__(*args, **kwargs)

    def coerce(self, val, configurable):
       r = super(MaxLenString, self).coerce(val, configurable)
       if len(r) > self.maxlen:
          raise annotate.InputError, "%r is too long, maximum is %d." % 
(val, self.maxlen)
       return r

>Or can I use the css to set the maxlength based on the id? (I tried
>that, but I couldn't find a way to do it with the css yet ;)
>  
>
I think that while you can use CSS to set the size of the input box, 
there is
no CSS way to control the maximum number of characters one can input.

You can always override the renderer. I wish there was a nice way to not 
reimplement
the whole function..

from nevow import flat
from formless import iformless

class MaxLenStringRenderer(BaseInputRenderer):
    def input(self, context, slot, data, name, value):
        if data.typedValue.getAttribute('hidden'):
            T="hidden"
        else:
            T="text"
        return slot[
            input(id=keyToXMLID(context.key), type=T, name=name, 
value=value, maxlength=self.maxlen,
                  _class='freeform-input-%s' % T)]

flat.registerFlattener(MaxLenStringRenderer, MaxLenString, 
iformless.ITypedRenderer)


From foom at fuhm.net  Mon Dec  6 11:02:01 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon Dec  6 11:02:06 2004
Subject: [Twisted-web] page with fragment keeps failing after correcting
	error in fragment
In-Reply-To: <20041204174317.GB13244@dualathlon.random>
References: <20041204174317.GB13244@dualathlon.random>
Message-ID: <EDBC603E-47B0-11D9-88DA-000A95A50FB2@fuhm.net>

On Dec 4, 2004, at 12:43 PM, Andrea Arcangeli wrote:
> In short I've a rend.Fragment like this:
>
> class fragment(rend.Fragment):
> 	docFactory = loaders.xmlfile('xml/somefragment.xml', ignoreDocType = 
> True)
>
> then I've some other page rendering the fragment inside:
>
> class basepage_class(rend.Page):
> 	def render_fragment(self, ctx, data):
> 		return fragment()
>
> So far so good, problem is that if I insert an xml syntax error in the
> fragment, I've to restart the server, or it never notices when I
> corrected it. I'm not sure if this is intentional.
>
> If you insert </p></p> into xml/somefragment.xml and you reload, you'll
> get the error. Then you delete the bogus string, and another error
> remains.

Hm, not intentional. loaders.xmlfile does cache the precompiled 
representation of the loaded XML, but it's supposed to check the mtime 
of the file and if it's modified, reload. Dunno where that's going 
wrong.

James


From foom at fuhm.net  Mon Dec  6 11:10:28 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon Dec  6 11:10:33 2004
Subject: [Twisted-web] how to offload to an xml page the text in formless
In-Reply-To: <20041204174804.GC13244@dualathlon.random>
References: <20041204174804.GC13244@dualathlon.random>
Message-ID: <1BE0F092-47B2-11D9-88DA-000A95A50FB2@fuhm.net>

On Dec 4, 2004, at 12:48 PM, Andrea Arcangeli wrote:
> I really like the concept of splitting the "text" from the "code". I
> don't want having to restart the server just to correct a typo...

Don't know about the freeform issue, but, it *is* possible to reload 
the code without restarting the server from scratch. I made a page 
which executes the python 'reload(module)' on all my page-rendering 
modules, and then resets the root object to a new instance of the top 
level page, so that the site actually uses the newly-reloaded code. 
This seems to work pretty well.

James


From michael.wilson at gmail.com  Mon Dec  6 11:53:55 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Mon Dec  6 11:53:58 2004
Subject: [Twisted-web] Accessing CSS Style sheets and the like
Message-ID: <61349050041206105319c00d80@mail.gmail.com>

Hi

I'm a nevow newbie, and I have a quick question.

Imagine I have a .xhtml like this:

<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
     xmlns:nevow="http://nevow.com/ns/nevow/0.1">
 <head>
   <title>Main page</title>
       <style type="text/css" media="screen">@import
"styles-site-nl.css";</style>
 </head>
 <body>
       <div id="banner">
....

The import for "styles-site-nl.css" goes to Twisted/Nevow, who then
looks for a styles-site-nl.css object, which exists on disk, but of
course there's no method for it anywhere.

Of course I can make this a straight http://... reference, but that
seems a little clunky.

Is there a way to tell Newvow/Twisted "All references beginning with
(say) "blatz/" should just be fetched as files?

Thanks!

Michael Wilson

http://www.tzec-maun.com

From mwh at python.net  Mon Dec  6 12:03:19 2004
From: mwh at python.net (Michael Hudson)
Date: Mon Dec  6 12:03:31 2004
Subject: [Twisted-web] Re: how to offload to an xml page the text in formless
References: <20041204174804.GC13244@dualathlon.random>
	<1BE0F092-47B2-11D9-88DA-000A95A50FB2@fuhm.net>
Message-ID: <2md5xnqmfc.fsf@starship.python.net>

James Y Knight <foom@fuhm.net> writes:

> On Dec 4, 2004, at 12:48 PM, Andrea Arcangeli wrote:
>> I really like the concept of splitting the "text" from the "code". I
>> don't want having to restart the server just to correct a typo...
>
> Don't know about the freeform issue, but, it *is* possible to reload
> the code without restarting the server from scratch. I made a page
> which executes the python 'reload(module)' on all my page-rendering
> modules, and then resets the root object to a new instance of the top
> level page, so that the site actually uses the newly-reloaded
> code. This seems to work pretty well.

Plug: http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/160164

Again, it seems to work for my nevow hackery...

Cheers,
mwh

-- 
  The bottom tier is what a certain class of wanker would call
  "business objects" ...                      -- Greg Ward, 9 Dec 1999


From andrea at cpushare.com  Mon Dec  6 12:27:45 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Mon Dec  6 12:28:17 2004
Subject: [Twisted-web] page with fragment keeps failing after correcting
	error in fragment
In-Reply-To: <EDBC603E-47B0-11D9-88DA-000A95A50FB2@fuhm.net>
References: <20041204174317.GB13244@dualathlon.random>
	<EDBC603E-47B0-11D9-88DA-000A95A50FB2@fuhm.net>
Message-ID: <20041206192745.GE5182@dualathlon.random>

On Mon, Dec 06, 2004 at 01:02:01PM -0500, James Y Knight wrote:
> Hm, not intentional. loaders.xmlfile does cache the precompiled 
> representation of the loaded XML, but it's supposed to check the mtime 
> of the file and if it's modified, reload. Dunno where that's going 
> wrong.

Ok, it's very easy to reproduce, let me know if you need any help in
reproducing it. It's not a really serious bug but it'd be nice to fix it ;).

From andrea at cpushare.com  Mon Dec  6 12:31:09 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Mon Dec  6 12:31:40 2004
Subject: [Twisted-web] how to offload to an xml page the text in formless
In-Reply-To: <1BE0F092-47B2-11D9-88DA-000A95A50FB2@fuhm.net>
References: <20041204174804.GC13244@dualathlon.random>
	<1BE0F092-47B2-11D9-88DA-000A95A50FB2@fuhm.net>
Message-ID: <20041206193109.GF5182@dualathlon.random>

On Mon, Dec 06, 2004 at 01:10:28PM -0500, James Y Knight wrote:
> Don't know about the freeform issue, but, it *is* possible to reload 
> the code without restarting the server from scratch. I made a page 
> which executes the python 'reload(module)' on all my page-rendering 
> modules, and then resets the root object to a new instance of the top 
> level page, so that the site actually uses the newly-reloaded code. 
> This seems to work pretty well.

I've read about that feature in the twisted docs, that's cool and I
might use it too.

From stephen at thorne.id.au  Mon Dec  6 17:25:20 2004
From: stephen at thorne.id.au (stephen@thorne.id.au)
Date: Mon Dec  6 17:25:23 2004
Subject: [Twisted-web] Accessing CSS Style sheets and the like
In-Reply-To: <61349050041206105319c00d80@mail.gmail.com>
Message-ID: <20041207002520.1203.1683227702.divmod.quotient.3083@ohm>

On Mon, 6 Dec 2004 10:53:55 -0800, Michael Wilson <michael.wilson@gmail.com> wrote:
> Is there a way to tell Newvow/Twisted "All references beginning with
> (say) "blatz/" should just be fetched as files?

Sure:
self.putChild('blatz', static.File('/path/to/blatz'))


Regards,
Stephen Thorne

From andrea at cpushare.com  Tue Dec  7 18:16:17 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue Dec  7 18:16:49 2004
Subject: [Twisted-web] maxlength input with formless
In-Reply-To: <41B2C157.7030901@twistedmatrix.com>
References: <20041204173522.GA13244@dualathlon.random>
	<41B2C157.7030901@twistedmatrix.com>
Message-ID: <20041208011617.GE16322@dualathlon.random>

Hello,

This was very helpful thanks! I had to modify it a little to make it
work. I inlined the code at the end. Should I modify the
annotate/webform library instead of writing my own code to get these
features? There's a bit of duplication (though some duplication would be
still required due point 1 below).

1) I believe there's a limitation in the stan module that prevents to
introduce conditionals inside the stan source. For example I would
really like to write:

	input(...,	
	if maxlenth>= 0:
		maxlength=maxlength,
	...)

I understand this is not parseable and unfixable without some major
modification (I doubt you could still use the getattr trick accessing the
hash lookup function to implement the stan protocol with 'if' support).
At least the generators works fine, I already used generators to convert
a text string into html text by replacing all '\n' with <br />. So I've
only one copy of the long text and it gets parsed and htmlized when the
server start (and rendered dynamically from an xml page).

2) I don't understand how the iformless interface stuff works
internally. Note I don't need to understad it to use it, but I like to
have full control on the thing. I understand the API, that I have to
register and that context is carrying internally various objects
accessible with a sort of casting (I find the right way to use it it in
the below code, despite the one you posted didn't work). I read in some
sparse docs this is metaclass stuff, but I don't know anything about
metaclasses and the i*.py and compy.py are quite unreadable to my eyes.
The whole thing about metaclasses and interfaces looks quite confusing.
I'm using it just fine (inevow.ISession gives me the void * that allows
me to move from a context structure to a session structure, it's like
doing context->session C, except it seems the pointer is external to the
object so any object can be linked to any other object and it gets
automatically resolved as well, without having to preallocate the
"session" pointer in the "context" structure in C terms), but I don't
understand how it works internally exactly. So while I can use the
feature just fine when implemented in the current framework, I probably
wouldn't be using it myself in new code.

I believe it's fundamental to understand how stuff works internally to
write correct code (i.e. no memleaks and no wasted ram).

3) I'm curious to know if the interface stuff and the __implements__
stuff is handled natively by python, or if it's provided by the
librarians. I tend to think it's being implemented by the librarians.
The syntax sure has nothing new.  Is there anything related to the
interface code (i.e. iformless) that requires python language support?
(this is partly a repetition of question 2 ;)

4) what is the difference between @classmethod, @staticmethod? I see
classmethod being used in url.py. And what is __new__ doing? These three
bits are sure python native and not library features. I tried reading
some doc but I'm still quite confused about these new language features.
If you've some simple introduction pointer it's welcome.

I guess question 4 is way offtopic so feel free to redirect me to some
python-newby list instead ;).

class MaxlengthString(annotate.String):
	def __init__(self, *args, **kwargs):
		if 'maxlength' in kwargs:
			self.maxlength = kwargs['maxlength']
			del kwargs['maxlength']
		else:
			self.maxlength = 10
		super(MaxlengthString, self).__init__(*args, **kwargs)

	def coerce(self, val, configurable):
		r = super(MaxlengthString, self).coerce(val, configurable)
		if len(r) > self.maxlength:
			raise annotate.InputError, "%r is too long, maximum is %d." % (val, self.maxlength)
		return r

class MaxlengthStringRenderer(webform.StringRenderer):
	def input(self, context, slot, data, name, value):
		if data.typedValue.getAttribute('hidden'):
			T='hidden'
		else:
			T='text'
		return slot[
			tags.input(id=formutils.keyToXMLID(context.key), type=T, name=name,
				   value=value, maxlength=data.typedValue.maxlength,
				   _class="freeform-input-%s" % T)]

class MaxlengthPassword(MaxlengthString):
	requiredFailMessage = 'Please enter a password.'

class MaxlengthPasswordRenderer(webform.PasswordRenderer):
	def input(self, context, slot, data, name, value):
		return [
			tags.input(id=formutils.keyToXMLID(context.key), name=name,
				   type="password", _class="freeform-input-password",
				   maxlength=data.typedValue.maxlength),
			" Again ",
			tags.input(name="%s____2" % name, type="password",
				   _class="freeform-input-password",
				   maxlength=data.typedValue.maxlength),
			]

compy.registerAdapter(MaxlengthStringRenderer, MaxlengthString, iformless.ITypedRenderer)
compy.registerAdapter(MaxlengthPasswordRenderer, MaxlengthPassword, iformless.ITypedRenderer)

I did the same trick to make a text readonly.

From mesozoic at polynode.com  Thu Dec  9 07:40:26 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Thu Dec  9 07:41:54 2004
Subject: [Twisted-web] Re: maxlength input with formless
In-Reply-To: <20041208011617.GE16322@dualathlon.random>
Message-ID: <E1CcPT0-0000EE-00@perpetual.moxn.net>


On 12/8/2004, "Andrea Arcangeli" <andrea@cpushare.com> wrote:

>1) I believe there's a limitation in the stan module that prevents to
>introduce conditionals inside the stan source. For example I would
>really like to write:
>
>	input(...,
>	if maxlenth>= 0:
>		maxlength=maxlength,
>	...)
>

That is invalid Python; it has nothing to do with the Stan module, and
everything to do with the programming language we're using.

Besides, I think most people here can agree that it's dangerous to allow
people to mesh logic and presentation the way you can in languages like
PHP or JSP; it results in badly-designed web applications, and it isn't
quite the itch that Nevow was designed to scratch.


--
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_

From andrea at cpushare.com  Fri Dec 10 12:02:29 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Fri Dec 10 12:02:58 2004
Subject: [Twisted-web] Re: maxlength input with formless
In-Reply-To: <E1CcPT0-0000EE-00@perpetual.moxn.net>
References: <20041208011617.GE16322@dualathlon.random>
	<E1CcPT0-0000EE-00@perpetual.moxn.net>
Message-ID: <20041210190229.GA16322@dualathlon.random>

On Thu, Dec 09, 2004 at 09:40:26AM -0500, Alex Levy wrote:
> Besides, I think most people here can agree that it's dangerous to allow
> people to mesh logic and presentation the way you can in languages like
> PHP or JSP; it results in badly-designed web applications, and it isn't
> quite the itch that Nevow was designed to scratch.

I didn't mean to necessairly use the syntax I shown, I agree it was
quite ugly ;). It was meant mostly to explain the problem in a clear
way. I was just wondering if there was a way to avoid this code
duplication.

	if maxlength < 0:
		.. input(...)
	else:
		.. input(... maxlength=maxlength ...)	

But I might have found how to avoid the above by __calling__ the
internal object with maxlength=maxlength conditionally to maxlength >= 0
(very similar concept of ctx.tag(something=something), it shouldn't
clear the previous contents).

From mohamed at your-site.com  Tue Dec 14 07:24:15 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Tue Dec 14 07:25:02 2004
Subject: [Twisted-web] Nevow: How to use sessions?
Message-ID: <915562750.1103016255@[192.168.1.76]>

Hello all,

Can someone give a helloworld example of how to store and retrieve objects 
specific to a session ? maybe a counter example. The objects would need to 
be destroyed automatically when the session expires.

In the examples I see things like:

def setupSession(self, ctx):
        #need to place the user, usermanager in the session
        inevow.ISession(ctx).setComponent(ICurrentUser, self.user)
        inevow.ISession(ctx).setComponent(IUserManager, self.userManager)
and

self.userManager = request.session.getComponent(IUserManager)

Can I just do that to store any object? do I have to create an interface 
for it?

When I looked for more in the source all I found was:

class ISession(compy.Interface):
    """A web session

    You can locate a Session object to represent a unique web session using
    ctx.locate(ISession). This default session implementation uses cookies 
to
    store a session identifier in the user's browser.

    TODO: Need better docs; what's a session and why and how do you use it
    """

Thanks a lot.
Mohamed~

From dp at ulaluma.com  Tue Dec 14 09:01:06 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Tue Dec 14 09:01:19 2004
Subject: [Twisted-web] Nevow: How to use sessions?
In-Reply-To: <915562750.1103016255@[192.168.1.76]>
References: <915562750.1103016255@[192.168.1.76]>
Message-ID: <5D2601E4-4DE9-11D9-956A-000A95864FC4@ulaluma.com>


On Dec 14, 2004, at 6:24 AM, Mohamed Lrhazi wrote:

> Can someone give a helloworld example of how to store and retrieve 
> objects specific to a session ? maybe a counter example. The objects 
> would need to be destroyed automatically when the session expires.

The object returned from ISession(ctx) is yours to do with as you 
please. If your application is the only application which will be 
running on the server, then you can get and set attributes on it to 
store whatever information you like:

ISession(ctx).foo = 1

then later...

getattr(ISession(ctx), 'foo', None)

Which is kind of a pain...

However, if your application might be mixed and matched with other 
people's applications (not super likely at the moment) you may want to 
set a component on the session using an interface unique to your 
application:

> In the examples I see things like:
>
> def setupSession(self, ctx):
>        #need to place the user, usermanager in the session
>        inevow.ISession(ctx).setComponent(ICurrentUser, self.user)
>        inevow.ISession(ctx).setComponent(IUserManager, 
> self.userManager)
> and
>
> self.userManager = request.session.getComponent(IUserManager)
>
> Can I just do that to store any object? do I have to create an 
> interface for it?

If you want to do that, yes, you can do that. Just subclass 
compy.Interface and use any object as the component value. Instead of 
using request.session.getComponent, I would use the spelling:

IUserManager(ISession(ctx))

This will fail if the session has not had an IUserManager component set 
on it yet, however. You can pass a default value to the IUserManager 
adaption, or you can register an IUserManager adapter for GuardSession 
so that the adapter will automatically be constructed and set as a 
component on the session if it has not already. For example:

compy.registerAdapter(UserManager, GuardSession, IUserManager)

In this way, when you say IUserManager(ISession(ctx)) without having 
previously called setComponent on the session with the IUserManager 
interface, your UserManager adapter will be constructed and set on the 
session for you automatically. Future calls to 
IUserManager(ISession(ctx)) will return the same instance.

Hope this helps,
dp


From mohamed at your-site.com  Tue Dec 14 09:08:14 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Tue Dec 14 09:08:49 2004
Subject: [Twisted-web] Nevow: How to use sessions?
In-Reply-To: <915562750.1103016255@[192.168.1.76]>
References: <915562750.1103016255@[192.168.1.76]>
Message-ID: <1415000.1103022494@[192.168.1.76]>



--On Tuesday, December 14, 2004 9:24 AM -0500 Mohamed Lrhazi 
<mohamed@your-site.com> wrote:

> Hello all,
>
> Can someone give a helloworld example of how to store and retrieve
> objects specific to a session ? maybe a counter example. The objects
> would need to be destroyed automatically when the session expires.
>

Answering myself : See simplehtml.tac in the examples dir.

Mohamed~

From mohamed at your-site.com  Tue Dec 14 09:28:48 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Tue Dec 14 09:29:22 2004
Subject: [Twisted-web] Nevow: How to use sessions?
In-Reply-To: <5D2601E4-4DE9-11D9-956A-000A95864FC4@ulaluma.com>
References: <915562750.1103016255@[192.168.1.76]>
	<5D2601E4-4DE9-11D9-956A-000A95864FC4@ulaluma.com>
Message-ID: <2648937.1103023728@[192.168.1.76]>



--On Tuesday, December 14, 2004 8:01 AM -0800 Donovan Preston 
<dp@ulaluma.com> wrote:

>
> On Dec 14, 2004, at 6:24 AM, Mohamed Lrhazi wrote:
>
>> Can someone give a helloworld example of how to store and retrieve
>> objects specific to a session ? maybe a counter example. The objects
>> would need to be destroyed automatically when the session expires.
>
> The object returned from ISession(ctx) is yours to do with as you please.
> If your application is the only application which will be running on the
> server, then you can get and set attributes on it to store whatever
> information you like:
>
> ISession(ctx).foo = 1
>
> then later...
>
> getattr(ISession(ctx), 'foo', None)
>
> Which is kind of a pain...
>

Thanks dp, that clarified it up for me.

Now, I see in the twisted api one could have a function called when the 
session is about to be destroyed. can I easily, from nevow, register a 
function to do some clean up after a session is over? say my object holds a 
connection to a database or whatever and I would need to close it and 
update it or something?

Mohamed~

From dp at ulaluma.com  Tue Dec 14 12:10:03 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Tue Dec 14 12:10:18 2004
Subject: [Twisted-web] Nevow: How to use sessions?
In-Reply-To: <2648937.1103023728@[192.168.1.76]>
References: <915562750.1103016255@[192.168.1.76]>
	<5D2601E4-4DE9-11D9-956A-000A95864FC4@ulaluma.com>
	<2648937.1103023728@[192.168.1.76]>
Message-ID: <C240B605-4E03-11D9-956A-000A95864FC4@ulaluma.com>


On Dec 14, 2004, at 8:28 AM, Mohamed Lrhazi wrote:

> Thanks dp, that clarified it up for me.
>
> Now, I see in the twisted api one could have a function called when 
> the session is about to be destroyed. can I easily, from nevow, 
> register a function to do some clean up after a session is over? say 
> my object holds a connection to a database or whatever and I would 
> need to close it and update it or something?

Nevow sessions have the same API as twisted.web sessions do. So just do 
the same thing.

dp


From mohamed at your-site.com  Tue Dec 14 13:30:51 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Tue Dec 14 13:31:27 2004
Subject: [Twisted-web] newbie: Stan syntax question
Message-ID: <17172359.1103038251@[192.168.1.76]>

Hello again,

I just spent sometime trying to figure this one out by myself... but could 
not :(

How do you build a table dynamically, or any other stan structure for that 
matter? Here is what I am trying to do:

def render_tasks(self, context, data):		
		attrs = ['task_id', 'task', 'arguments']
		mytrs=T.tr
		for row in self.tasklist:
			for attr in attrs:
				mytrs += T.td[row.get(attr)]
		header_tr=T.tr[T.th["ID"],T.th["Task"],T.th["Arguments"]]
		mytable=T.table[header_tr,(mytrs)]
		return context.tag[mytable]


This gives: exceptions.TypeError: cannot concatenate 'str' and 'Tag' objects

I tried many other different ways to no avail....

I guess my question is how do you build the document dynamically, adding, 
inserting into it?


Sorry for my newbie questions...
Mohamed~

From tv at twistedmatrix.com  Tue Dec 14 14:00:59 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue Dec 14 14:01:44 2004
Subject: [Twisted-web] newbie: Stan syntax question
In-Reply-To: <17172359.1103038251@[192.168.1.76]>
References: <17172359.1103038251@[192.168.1.76]>
Message-ID: <41BF548B.7060304@twistedmatrix.com>

Mohamed Lrhazi wrote:

> How do you build a table dynamically, or any other stan structure for 
> that matter? Here is what I am trying to do:
>
> def render_tasks(self, context, data):       
>         attrs = ['task_id', 'task', 'arguments']
>         mytrs=T.tr
>         for row in self.tasklist:
>             for attr in attrs:
>                 mytrs += T.td[row.get(attr)]
>         header_tr=T.tr[T.th["ID"],T.th["Task"],T.th["Arguments"]]
>         mytable=T.table[header_tr,(mytrs)]
>         return context.tag[mytable]

stanTag[foo] mutates the tag, adding foo as child. So something like..

def render_tasks(self, context, data):       
        attrs = ['task_id', 'task', 'arguments']
        mytable = T.table[T.tr[T.th["ID"],T.th["Task"],T.th["Arguments"]]]
        for row in self.tasklist:
            mytr = T.tr()
            mytable[mytr]
            for attr in attrs:
                mytr[T.td[row.get(attr)]]
        return context.tag[mytable]


From mohamed at your-site.com  Tue Dec 14 14:22:14 2004
From: mohamed at your-site.com (Mohamed Lrhazi)
Date: Tue Dec 14 14:22:47 2004
Subject: [Twisted-web] newbie: Stan syntax question
In-Reply-To: <41BF548B.7060304@twistedmatrix.com>
References: <17172359.1103038251@[192.168.1.76]>
	<41BF548B.7060304@twistedmatrix.com>
Message-ID: <20255218.1103041334@[192.168.1.76]>



--On Tuesday, December 14, 2004 11:00 PM +0200 Tommi Virtanen 
<tv@twistedmatrix.com> wrote:
> stanTag[foo] mutates the tag, adding foo as child. So something like..
>
> def render_tasks(self, context, data):               attrs = ['task_id',
> 'task', 'arguments']
>         mytable = T.table[T.tr[T.th["ID"],T.th["Task"],T.th["Arguments"]]]
>         for row in self.tasklist:
>             mytr = T.tr()
>             mytable[mytr]
>             for attr in attrs:
>                 mytr[T.td[row.get(attr)]]
>         return context.tag[mytable]
>
>

Not sure I understood (well, maybe)... but it sure worked!

Thanks a lot.

Mohamed~



From andrea at cpushare.com  Tue Dec 14 17:17:41 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue Dec 14 17:18:07 2004
Subject: [Twisted-web] Nevow: How to use sessions?
In-Reply-To: <2648937.1103023728@[192.168.1.76]>
References: <915562750.1103016255@[192.168.1.76]>
	<5D2601E4-4DE9-11D9-956A-000A95864FC4@ulaluma.com>
	<2648937.1103023728@[192.168.1.76]>
Message-ID: <20041215001741.GV16322@dualathlon.random>

On Tue, Dec 14, 2004 at 11:28:48AM -0500, Mohamed Lrhazi wrote:
> function to do some clean up after a session is over? say my object holds a 
> connection to a database or whatever and I would need to close it and 
> update it or something?

Sounds like session.notifyOnExpire is what you're looking for.

From michael.wilson at gmail.com  Tue Dec 14 17:54:54 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Tue Dec 14 17:54:56 2004
Subject: [Twisted-web] Rendering error messages
Message-ID: <61349050041214165439820fed@mail.gmail.com>

I have a form where the inputs various values, which I then check for
validity. If there are errors, I'd like to re-display the form, with
errors.

>From the examples, I see how to use pasting to get the error into the form:

....
            <td>School name:</td>
            <td>&nbsp;&nbsp;</td>
            <td><input type="text" name="name" /></td>
            <td><nevow:slot name="nameError">error</nevow:slot></td>
....

	def render_aPasting(self, context, data):
			context.tag.fillSlots('nameError', self.nameError)

----

That works great. The problem is, I initialize self.nameError in __init__:

self.nameError = ''

And then set it in the formless autocall if there is an error:

-----

		if self.schoolDb.exists( name ):
			self.nameError	= 'School already exists!'
			return
----

The problem is that when the page is re-rendered, __init__ is being
called again, which means the errors get cleared.

My instinct is that maybe I should use session variables, but before I
got an do that I wanted to make sure there wasn't another, more
correct way to do this.

Thanks!

From stephen at thorne.id.au  Tue Dec 14 19:23:22 2004
From: stephen at thorne.id.au (Stephen Thorne)
Date: Tue Dec 14 19:23:25 2004
Subject: [Twisted-web] newbie: Stan syntax question
In-Reply-To: <17172359.1103038251@[192.168.1.76]>
Message-ID: <20041215022322.1029.1163446221.divmod.quotient.10510@ohm>

Mohamed

I would probably do something like this:  
  
return context.tag[  
   T.table[ header_tr=T.tr[T.th["ID"],T.th["Task"],T.th["Arguments"]], [  
         T.tr[  
            [ T.td[row.get(attr)]  
              for attr in ['task_id', 'task', 'arguments']  
            ]  
         ]  
         for row in self.tasklist  
      ]  
   ]  
]  
  
That is, if I wasn't just using a template that used the nevow:render="sequence". I would actually recommend n:render="sequence" over using stan like this.  
  
Stephen.  
  

From michael.wilson at gmail.com  Wed Dec 15 02:03:51 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Wed Dec 15 02:04:05 2004
Subject: [Twisted-web] Accessing ISession from formless autocallable
Message-ID: <613490500412150103122fc386@mail.gmail.com>

An autocall gets (self, request...), but not context. If I want to set
session variables (as discussed in the previous exchange), how can I
do it without ctx?

Thanks!

From radeex at gmail.com  Wed Dec 15 02:06:10 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed Dec 15 02:06:17 2004
Subject: [Twisted-web] Accessing ISession from formless autocallable
In-Reply-To: <613490500412150103122fc386@mail.gmail.com>
References: <613490500412150103122fc386@mail.gmail.com>
Message-ID: <60ed19d404121501067c0bea2e@mail.gmail.com>

autocallables don't actually automatically get request. presumably you
have something like "request=annotate.Request()" in your autocallable
definition. Just change that to "context=annotate.Context()".


On Wed, 15 Dec 2004 01:03:51 -0800, Michael Wilson
<michael.wilson@gmail.com> wrote:
> An autocall gets (self, request...), but not context. If I want to set
> session variables (as discussed in the previous exchange), how can I
> do it without ctx?
> 
> Thanks!
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> 
> 


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash

From andrea at cpushare.com  Wed Dec 15 03:25:36 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed Dec 15 03:26:02 2004
Subject: [Twisted-web] Nevow: How to use sessions?
In-Reply-To: <5D2601E4-4DE9-11D9-956A-000A95864FC4@ulaluma.com>
References: <915562750.1103016255@[192.168.1.76]>
	<5D2601E4-4DE9-11D9-956A-000A95864FC4@ulaluma.com>
Message-ID: <20041215102536.GB16322@dualathlon.random>

On Tue, Dec 14, 2004 at 08:01:06AM -0800, Donovan Preston wrote:
> compy.registerAdapter(UserManager, GuardSession, IUserManager)
> 
> In this way, when you say IUserManager(ISession(ctx)) without having 
> previously called setComponent on the session with the IUserManager 
> interface, your UserManager adapter will be constructed and set on the 
> session for you automatically. Future calls to 
> IUserManager(ISession(ctx)) will return the same instance.
> 
> Hope this helps,

It helped a lot thanks. I assume UserManager must inherit compy.Adapter
and IIUserManager must inherit compy.Interface.

I've some more question ;)

1) Is it possible to "unregister" and free the memory for the while
UserManager adapter istance? The way I understand it, after the istance
of UserManager is created, it gets linked by compy to the session
istance. Now I could delete all members from the "UserManager" istance
to release memory, but the UserManager would be still linked (and in
turn allocated in memory) until the session expires. Of course I assume
all istances associated to an instance via compy.registerAdapter(..,
GuardSession,... ) will be automatically garbage collected when the
session expires.

2) am I right I can vary the length of a session with something like
this?

	nevow_resource = guard.SessionWrapper(portal_obj)
	nevow_resource.sessionLifetime = 300

3) what is the difference between compy.Interface and
components.Interface?

Thanks.

From andrea at cpushare.com  Wed Dec 15 04:30:48 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed Dec 15 04:31:25 2004
Subject: [Twisted-web] Accessing ISession from formless autocallable
In-Reply-To: <613490500412150103122fc386@mail.gmail.com>
References: <613490500412150103122fc386@mail.gmail.com>
Message-ID: <20041215113048.GC16322@dualathlon.random>

On Wed, Dec 15, 2004 at 01:03:51AM -0800, Michael Wilson wrote:
> An autocall gets (self, request...), but not context. If I want to set
> session variables (as discussed in the previous exchange), how can I
> do it without ctx?

add ctx = annotate.Context() as parameter, as far as I can tell request is
superflous since you can get to the request through
inevow.IRequest(context), not sure why it's possible to return a request
too and not only a context.

From dialtone at gmail.com  Wed Dec 15 04:52:27 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed Dec 15 04:52:38 2004
Subject: [Twisted-web] Accessing ISession from formless autocallable
In-Reply-To: <20041215113048.GC16322@dualathlon.random>
References: <613490500412150103122fc386@mail.gmail.com>
	<20041215113048.GC16322@dualathlon.random>
Message-ID: <c893b853041215035221a6fc23@mail.gmail.com>

On Wed, 15 Dec 2004 12:30:48 +0100, Andrea Arcangeli
<andrea@cpushare.com> wrote:
> add ctx = annotate.Context() as parameter, as far as I can tell request is
> superflous since you can get to the request through
> inevow.IRequest(context), not sure why it's possible to return a request
> too and not only a context.

Passing the request is going to be deprecated for this very reason.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.3.6
Blog: http://vvolonghi.blogspot.com
Home Page: http://xoomer.virgilio.it/dialtone/

From dialtone at gmail.com  Wed Dec 15 05:00:55 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed Dec 15 05:00:57 2004
Subject: [Twisted-web] Nevow: How to use sessions?
In-Reply-To: <20041215102536.GB16322@dualathlon.random>
References: <915562750.1103016255@192.168.1.76>
	<5D2601E4-4DE9-11D9-956A-000A95864FC4@ulaluma.com>
	<20041215102536.GB16322@dualathlon.random>
Message-ID: <c893b853041215040070e27680@mail.gmail.com>

On Wed, 15 Dec 2004 11:25:36 +0100, Andrea Arcangeli
<andrea@cpushare.com> wrote:
> It helped a lot thanks. I assume UserManager must inherit compy.Adapter
> and IIUserManager must inherit compy.Interface.

True but not necessary. I mean, UserManager can also inherit from
another class that accepts an argument 'original' in its constructor.
 
> I've some more question ;)
[snip on a question I didn't actually understood very well]

> 2) am I right I can vary the length of a session with something like
> this?
> 
>         nevow_resource = guard.SessionWrapper(portal_obj)
>         nevow_resource.sessionLifetime = 300

Yes you are right. Since sessionLifetime is a class attribute you can
also do that before instantiating it.
 
> 3) what is the difference between compy.Interface and
> components.Interface?

String registration capability. If you are using zope.interface you
should look at compyCompat which is a lot shorter than compy.
I don't know if the string registration patch from Donovan has been
merged in Twisted actually, but compy was just an hacked version of
components. Currently compyCompat.Interface and components.Interface
are the same zope.interface.Interface.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.3.6
Blog: http://vvolonghi.blogspot.com
Home Page: http://xoomer.virgilio.it/dialtone/

From dp at ulaluma.com  Wed Dec 15 07:53:12 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Wed Dec 15 07:53:23 2004
Subject: [Twisted-web] Rendering error messages
In-Reply-To: <61349050041214165439820fed@mail.gmail.com>
References: <61349050041214165439820fed@mail.gmail.com>
Message-ID: <0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>


On Dec 14, 2004, at 4:54 PM, Michael Wilson wrote:

> 		if self.schoolDb.exists( name ):
> 			self.nameError	= 'School already exists!'
> 			return

I'm pretty sure you'll have a much easier time with this problem if you 
just use the formless error-handling mechanism, which takes care of all 
the error state handling for you. Try something like this:

raise annotate.ValidateError(dict(name='School already exists!'))

Instead of everything you described in your message.

dp


From michael.wilson at gmail.com  Wed Dec 15 08:23:04 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Wed Dec 15 08:23:09 2004
Subject: [Twisted-web] Rendering error messages
In-Reply-To: <0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>
References: <61349050041214165439820fed@mail.gmail.com>
	<0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>
Message-ID: <61349050041215072334ee764f@mail.gmail.com>

Hi, 

That makes sense, but I want to emit a message _per field_, thus, if 4
things are wrong (school exists, bad address, etc, etc), each _field_
will have an error next to it. annoter.ValidateError gives me one
message on one line, correct?


On Wed, 15 Dec 2004 06:53:12 -0800, Donovan Preston <dp@ulaluma.com> wrote:
> 
> On Dec 14, 2004, at 4:54 PM, Michael Wilson wrote:
> 
> >               if self.schoolDb.exists( name ):
> >                       self.nameError  = 'School already exists!'
> >                       return
> 
> I'm pretty sure you'll have a much easier time with this problem if you
> just use the formless error-handling mechanism, which takes care of all
> the error state handling for you. Try something like this:
> 
> raise annotate.ValidateError(dict(name='School already exists!'))
> 
> Instead of everything you described in your message.
> 
> dp
> 
>

From dp at ulaluma.com  Wed Dec 15 08:42:21 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Wed Dec 15 08:42:32 2004
Subject: [Twisted-web] Rendering error messages
In-Reply-To: <61349050041215072334ee764f@mail.gmail.com>
References: <61349050041214165439820fed@mail.gmail.com>
	<0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215072334ee764f@mail.gmail.com>
Message-ID: <E8B620ED-4EAF-11D9-956A-000A95864FC4@ulaluma.com>


On Dec 15, 2004, at 7:23 AM, Michael Wilson wrote:

> Hi,
>
> That makes sense, but I want to emit a message _per field_, thus, if 4
> things are wrong (school exists, bad address, etc, etc), each _field_
> will have an error next to it. annoter.ValidateError gives me one
> message on one line, correct?

Nope. That's why the first argument is a dict. Put as many error 
messages as you want in there, corresponding with the argument binding 
names.

dp


From matt at pollenation.net  Wed Dec 15 13:34:38 2004
From: matt at pollenation.net (Matt Goodall)
Date: Wed Dec 15 13:34:45 2004
Subject: [Twisted-web] Re: [Nevow-commits] r952 - adding documentation for
	inevow.ISession
In-Reply-To: <E1CeeR7-0004Ya-7M@tesla.divmod.com>
References: <E1CeeR7-0004Ya-7M@tesla.divmod.com>
Message-ID: <1103142878.24858.23.camel@localhost.localdomain>

On Wed, 2004-12-15 at 14:03 -0500, dialtone@divmod.net wrote:
> Author: dialtone
> Date: Wed Dec 15 14:03:44 2004
> New Revision: 952
> 
> Modified:
>    trunk/nevow/inevow.py
> Log:
> adding documentation for inevow.ISession

Great stuff!

I'm just about to eat dinner so this is a bit rushed ...

I think we should differentiate between a typical session and a
guard/cred session. Most applications don't (and probably shouldn't)
care about the cred side of things except for some way to locate the
avatar.

It also looks like there's a good case for extracting a IComponentized
interface. Perhaps that's already been done for twisted 2?

So, how about a class hierarchy more like:

        class IComponentized(Interface):
            pass
        
        class ISession(IComponentized):
            pass
            
        class I(Guard|Cred)Session(ISession):
            pass

>From the (newly) current ISession class ...

setComponent, getComponent, unsetComponent, removeComponent would be
IComponentized methods, although unsetComponent looks unnecessary unless
it's the opposite of setComponent and there should also be an
addComponent.

getLoggedInRoot, resourceForPortal, setResourceForPortal, portalLogout,
are IGuardSession methods. However, getLoggedInRoot sounds strange, and
resourceForPortal and setResourceForPortal sound like guard
implementation.

setLifetime, notifyOnExpire, expire, touch, checkExpired are ISession
methods. However, IIRC checkExpired is an implementation method used as
the timed callback to automatically expire individual sessions.

Finally, of the attributes listed in the class docstring, I think only
uid and guard are part of the interface and guard should be part of
IGuardSession.

Hope that makes sense and that I didn't miss anything.

What do others think?

Cheers, Matt

> 
> Modified: trunk/nevow/inevow.py
> ==============================================================================
> --- trunk/nevow/inevow.py	(original)
> +++ trunk/nevow/inevow.py	Wed Dec 15 14:03:44 2004
> @@ -378,13 +378,94 @@
>      """A web session
>  
>      You can locate a Session object to represent a unique web session using
> -    ctx.locate(ISession). This default session implementation uses cookies to
> +    ISession(ctx). This default session implementation uses cookies to
>      store a session identifier in the user's browser. 
> -    
> +
> +    guard: SessionWrapper object
> +    uid: Session uid
> +    expireCallbacks: callbacks for expiration event
> +    checkExpiredID
> +    portals: portals in which the session is logged in
> +
>      TODO: Need better docs; what's a session and why and how do you use it
>      """
> -    
> +    def getLoggedInRoot(self):
> +        """Get the most-recently-logged-in avatar.
> +        """
> +
> +    def resourceForPortal(self, port):
> +        """Gather the resource set for the portal port
> +        """
> +
> +    def setResourceForPortal(self, rsrc, port, logout):
> +        """Set returned resource when asking for something in portal port
> +        logout is called when logged out from the resource
> +        """
> +
> +    def portalLogout(self, port):
> +        """Logout from portal port
> +        """
> +
> +    def setLifetime(self, lifetime):
> +        """Set the approximate lifetime of this session, in seconds.
> +
> +        This is highly imprecise, but it allows you to set some general
> +        parameters about when this session will expire.  A callback will be
> +        scheduled each 'lifetime' seconds, and if I have not been 'touch()'ed
> +        in half a lifetime, I will be immediately expired.
> +        
> +        If you need to change the lifetime of all the sessions change sessionsLifeTime
> +        attribute in class guard.SessionWrapper
> +        """
> +
> +    def notifyOnExpire(self, callback):
> +        """Call this callback when the session expires or logs out.
> +        """
> +
> +    def expire(self):
> +        """Expire/logout of the session.
> +        """
> +
> +    def touch(self):
> +        """Refresh the session
> +        """
> +        
> +    def checkExpired(self):
> +        """ Check expiration state for the session
> +        """
> +
> +    def setComponent(self):
> +        """
> +        Add a component to me, for all appropriate interfaces.
> +        """
> +
> +    def getComponent(self, interface, registry=None, default=None):
> +        """Create or retrieve an adapter for the given interface.
> +
> +        If such an adapter has already been created, retrieve it from the cache
> +        that this instance keeps of all its adapters.  Adapters created through
> +        this mechanism may safely store system-specific state.
> +
> +        If you want to register an adapter that will be created through
> +        getComponent, but you don't require (or don't want) your adapter to be
> +        cached and kept alive for the lifetime of this Componentized object,
> +        set the attribute 'temporaryAdapter' to True on your adapter class.
> +
> +        If you want to automatically register an adapter for all appropriate
> +        interfaces (with addComponent), set the attribute 'multiComponent' to
> +        True on your adapter class.
> +        """
> +        
> +    def unsetComponent(self, interfaceClass):
> +        """Remove my component specified by the given interface class."""
> +
> +    def removeComponent(self, component):
> +        """
> +        Remove the given component from me entirely, for all interfaces for which
> +        it has been registered.
>  
> +        @return: a list of the interfaces that were removed.
> +        """  
>  
>  class IRemainingSegments(compy.Interface):
>      """During the URL traversal process, requesting this from the context
> 
> _______________________________________________
> Nevow-commits mailing list
> Nevow-commits@divmod.org
> http://divmod.org/users/mailman.twistd/listinfo/nevow-commits


From andrea at cpushare.com  Wed Dec 15 15:45:34 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed Dec 15 15:46:18 2004
Subject: [Twisted-web] Re: [Nevow-commits] r952 - adding documentation for
	inevow.ISession
In-Reply-To: <1103142878.24858.23.camel@localhost.localdomain>
References: <E1CeeR7-0004Ya-7M@tesla.divmod.com>
	<1103142878.24858.23.camel@localhost.localdomain>
Message-ID: <20041215224534.GB28286@dualathlon.random>

On Wed, Dec 15, 2004 at 08:34:38PM +0000, Matt Goodall wrote:
>         class I(Guard|Cred)Session(ISession):
>             pass

The way I think at a session is the value of the cookie, same cookie
same session. I don't see any difference between guard/cred/whatever
session as far as the cookie remains the same and effectively the
session is the same. So I'm not convinced that it makes much sense to
split the session at the nevow layer if the session is still the same on
the wire (i.e. http cookie).

From michael.wilson at gmail.com  Wed Dec 15 19:25:12 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Wed Dec 15 19:25:19 2004
Subject: [Twisted-web] Rendering error messages
In-Reply-To: <E8B620ED-4EAF-11D9-956A-000A95864FC4@ulaluma.com>
References: <61349050041214165439820fed@mail.gmail.com>
	<0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215072334ee764f@mail.gmail.com>
	<E8B620ED-4EAF-11D9-956A-000A95864FC4@ulaluma.com>
Message-ID: <61349050041215182518f1c658@mail.gmail.com>

Wow, so I converted it over to work like examples/customform.py and it
works much better!

Two questions:

1. All forms/pages I have will have some constant headers, etc used
everywhere on the site. I'd like these to be maintainable by HTML
folks, so, if I don't want to use Stan, what's the suggested way to
create these and include them?

2. When I process a form and I want to put a message in the _forms_
error message field, how do I do that? I've tried dict keys of
"error", "form", etc, but none of them work.

Thanks for the tip! It forced me to go learn that stuff which I should
have done in the first place!


On Wed, 15 Dec 2004 07:42:21 -0800, Donovan Preston <dp@ulaluma.com> wrote:
> 
> On Dec 15, 2004, at 7:23 AM, Michael Wilson wrote:
> 
> > Hi,
> >
> > That makes sense, but I want to emit a message _per field_, thus, if 4
> > things are wrong (school exists, bad address, etc, etc), each _field_
> > will have an error next to it. annoter.ValidateError gives me one
> > message on one line, correct?
> 
> Nope. That's why the first argument is a dict. Put as many error
> messages as you want in there, corresponding with the argument binding
> names.
> 
> dp
> 
>

From dialtone at gmail.com  Wed Dec 15 19:43:02 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed Dec 15 19:43:05 2004
Subject: [Twisted-web] Re: [Nevow-commits] r952 - adding documentation for
	inevow.ISession
In-Reply-To: <20041215224534.GB28286@dualathlon.random>
References: <E1CeeR7-0004Ya-7M@tesla.divmod.com>
	<1103142878.24858.23.camel@localhost.localdomain>
	<20041215224534.GB28286@dualathlon.random>
Message-ID: <c893b85304121518431b4a1d1e@mail.gmail.com>

On Wed, 15 Dec 2004 23:45:34 +0100, Andrea Arcangeli
<andrea@cpushare.com> wrote:
> On Wed, Dec 15, 2004 at 08:34:38PM +0000, Matt Goodall wrote:
> >         class I(Guard|Cred)Session(ISession):
> >             pass
> 
> The way I think at a session is the value of the cookie, same cookie
> same session. I don't see any difference between guard/cred/whatever
> session as far as the cookie remains the same and effectively the
> session is the same. So I'm not convinced that it makes much sense to
> split the session at the nevow layer if the session is still the same on
> the wire (i.e. http cookie).

The difference is about extra cruft that we need to add because of
guard like portalLogout, or setResourceForPortal (which is not in
IGuardSession currently).

As you may agree those methods have nothing to to with 'pure' ISession
which has uid, expire, touch and such.

Logically those are the only real session methods.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.3.6
Blog: http://vvolonghi.blogspot.com
Home Page: http://xoomer.virgilio.it/dialtone/

From dp at ulaluma.com  Wed Dec 15 19:54:12 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Wed Dec 15 19:54:24 2004
Subject: [Twisted-web] Rendering error messages
In-Reply-To: <61349050041215182518f1c658@mail.gmail.com>
References: <61349050041214165439820fed@mail.gmail.com>
	<0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215072334ee764f@mail.gmail.com>
	<E8B620ED-4EAF-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215182518f1c658@mail.gmail.com>
Message-ID: <C4068D9C-4F0D-11D9-A646-000A95864FC4@ulaluma.com>


On Dec 15, 2004, at 6:25 PM, Michael Wilson wrote:

> 2. When I process a form and I want to put a message in the _forms_
> error message field, how do I do that? I've tried dict keys of
> "error", "form", etc, but none of them work.

There are additional parameters to the exception constructor. Go read 
the docstring and perhaps the implementation, all should be clear.

dp


From michael.wilson at gmail.com  Wed Dec 15 22:48:36 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Wed Dec 15 22:49:10 2004
Subject: [Twisted-web] Rendering error messages
In-Reply-To: <C4068D9C-4F0D-11D9-A646-000A95864FC4@ulaluma.com>
References: <61349050041214165439820fed@mail.gmail.com>
	<0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215072334ee764f@mail.gmail.com>
	<E8B620ED-4EAF-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215182518f1c658@mail.gmail.com>
	<C4068D9C-4F0D-11D9-A646-000A95864FC4@ulaluma.com>
Message-ID: <613490500412152148215ace8b@mail.gmail.com>

Ok, mea culpa, mea culpa. Read it, used it. 

One last question (I hope) (and this time I did visit the docs, and
the implementation and even an italian news group).

When I get a form which has errors, I am now getting nice error
messages, but the input values are cleared, so the user gets something
like "Invalid email address", but the field is now blank.

I see the "defaultsFactory", but it seems like it's for default
values, not remembering prior values.

What should I visit now? :-)


On Wed, 15 Dec 2004 18:54:12 -0800, Donovan Preston <dp@ulaluma.com> wrote:
> 
> On Dec 15, 2004, at 6:25 PM, Michael Wilson wrote:
> 
> > 2. When I process a form and I want to put a message in the _forms_
> > error message field, how do I do that? I've tried dict keys of
> > "error", "form", etc, but none of them work.
> 
> There are additional parameters to the exception constructor. Go read
> the docstring and perhaps the implementation, all should be clear.
> 
> dp
> 
>

From michael.wilson at gmail.com  Wed Dec 15 22:48:36 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Wed Dec 15 22:54:13 2004
Subject: [Twisted-web] Rendering error messages
In-Reply-To: <C4068D9C-4F0D-11D9-A646-000A95864FC4@ulaluma.com>
References: <61349050041214165439820fed@mail.gmail.com>
	<0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215072334ee764f@mail.gmail.com>
	<E8B620ED-4EAF-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215182518f1c658@mail.gmail.com>
	<C4068D9C-4F0D-11D9-A646-000A95864FC4@ulaluma.com>
Message-ID: <613490500412152148215ace8b@mail.gmail.com>

Ok, mea culpa, mea culpa. Read it, used it. 

One last question (I hope) (and this time I did visit the docs, and
the implementation and even an italian news group).

When I get a form which has errors, I am now getting nice error
messages, but the input values are cleared, so the user gets something
like "Invalid email address", but the field is now blank.

I see the "defaultsFactory", but it seems like it's for default
values, not remembering prior values.

What should I visit now? :-)


On Wed, 15 Dec 2004 18:54:12 -0800, Donovan Preston <dp@ulaluma.com> wrote:
> 
> On Dec 15, 2004, at 6:25 PM, Michael Wilson wrote:
> 
> > 2. When I process a form and I want to put a message in the _forms_
> > error message field, how do I do that? I've tried dict keys of
> > "error", "form", etc, but none of them work.
> 
> There are additional parameters to the exception constructor. Go read
> the docstring and perhaps the implementation, all should be clear.
> 
> dp
> 
>

From michael.wilson at gmail.com  Thu Dec 16 18:30:13 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Thu Dec 16 18:30:17 2004
Subject: [Twisted-web] Rendering error messages
In-Reply-To: <613490500412152148215ace8b@mail.gmail.com>
References: <61349050041214165439820fed@mail.gmail.com>
	<0B02A9FE-4EA9-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215072334ee764f@mail.gmail.com>
	<E8B620ED-4EAF-11D9-956A-000A95864FC4@ulaluma.com>
	<61349050041215182518f1c658@mail.gmail.com>
	<C4068D9C-4F0D-11D9-A646-000A95864FC4@ulaluma.com>
	<613490500412152148215ace8b@mail.gmail.com>
Message-ID: <61349050041216173067689d2c@mail.gmail.com>

Here's the answer to my own question:

      partialForm = {}
      
      args = ctx.locate(inevow.IRequest).args
      partialForm.update(args)

Then:

     raise annotate.ValidateError( errors,
          formErrorMessage="Something!",   partialForm=partialForm )





On Wed, 15 Dec 2004 21:48:36 -0800, Michael Wilson
<michael.wilson@gmail.com> wrote:
> Ok, mea culpa, mea culpa. Read it, used it.
> 
> One last question (I hope) (and this time I did visit the docs, and
> the implementation and even an italian news group).
> 
> When I get a form which has errors, I am now getting nice error
> messages, but the input values are cleared, so the user gets something
> like "Invalid email address", but the field is now blank.
> 
> I see the "defaultsFactory", but it seems like it's for default
> values, not remembering prior values.
> 
> What should I visit now? :-)
> 
> 
> On Wed, 15 Dec 2004 18:54:12 -0800, Donovan Preston <dp@ulaluma.com> wrote:
> >
> > On Dec 15, 2004, at 6:25 PM, Michael Wilson wrote:
> >
> > > 2. When I process a form and I want to put a message in the _forms_
> > > error message field, how do I do that? I've tried dict keys of
> > > "error", "form", etc, but none of them work.
> >
> > There are additional parameters to the exception constructor. Go read
> > the docstring and perhaps the implementation, all should be clear.
> >
> > dp
> >
> >
>

From jamwt-twistedlist at jamwt.com  Sat Dec 18 08:26:35 2004
From: jamwt-twistedlist at jamwt.com (J Turner)
Date: Sat Dec 18 08:28:49 2004
Subject: [Twisted-web] Twisted PostgreSQL Library
Message-ID: <20041218152635.GA72895@count.jamwt.com>

Hello list,

I've been working on and off over the last few weeks on a twisted-based
pgsql library--driven by my desire to keep threads completely out of my
apps!

It's come together at this point into something worth releasing.. you
can find it here:

http://www.jamwt.com/pgasync/

It's DB API 2.0 compliant, and it has a adbapi wrapper as well for
existing implementations.  I could rattle off all the details here, but
I've already done that like three times in the last few hours
(freshmeat, home page, README, blah blah blah).

So far, in my informal benchmarks performance and scalability look to
be very promising vs. adbapi/threads.

Anyway, feel free to check it out, and I'd love to get feedback,
suggestions (and certainly bug reports).

Thanks,

 - Jamie Turner

From djm at software.net.nz  Sun Dec 19 13:05:01 2004
From: djm at software.net.nz (David Moore)
Date: Sun Dec 19 14:06:43 2004
Subject: [Twisted-web] nevow.liveevil question (dynamically adding a link
 with its own handler)
Message-ID: <20041220090501.068d60dd.djm@software.net.nz>


I'm working on a project[1] which will require very dynamic webpages. 
I'm very excited to discover nevow.liveevil (I'd rather program in
Python than JavaScript).

But I'm having trouble dynamically adding a link which can then call
further Python code.

My code....
---------------------------------------------------------------------
#!/usr/bin/python
from nevow import rend
from nevow import loaders
from nevow import tags
from nevow import liveevil
from twisted.internet import reactor

def adder(client):
#    newLink = loaders.stan(tags.a(href="#")["Nothing"])
    newLink = loaders.stan(tags.a(href="#", 
                onclick=liveevil.handler(adder))["AddAgain"])
    client.append('content', newLink)

mycontent = loaders.stan(
tags.html[
    tags.head[liveevil.glue], 
    tags.body[ 
        tags.a(href="#", onclick=liveevil.handler(adder))["Add"],
        tags.div(id="content"),
    ]
])
mypage = rend.Page(docFactory=mycontent)
mypage.addSlash = True

mysite = liveevil.LiveSite(mypage)
reactor.listenTCP(8080, mysite)
reactor.run()
---------------------------------------------------------------------

When I click on the Add link I get
---------------------------------------------------------------------
Traceback (most recent call last):
  File "br.py", line 28, in ?
    reactor.run()
  File "/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 126, in run
    self.mainLoop()
  File "/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 134, in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 423, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/liveevil.py", line 101, in handleInput
    self.events.publish(identifier, *(self, ) + args)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/events.py", line 41, in publish
    sub(*args)
  File "br.py", line 12, in adder
    client.append('content', newLink)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/liveevil.py", line 130, in append
    client.sendScript(
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/liveevil.py", line 112, in flt
    fl = flatten(stan, ctx=ctx)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/flat/ten.py", line 146, in flatten
    list(iterflatten(stan, ctx, result.append))
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/flat/ten.py", line 104, in iterflatten
    for item in gen:
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/flat/flatstan.py", line 84, in TagSerializer
    yield serialize(toBeRenderedBy, context)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/flat/ten.py", line 91, in serialize
    return partialflatten(context, obj)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/flat/ten.py", line 82, in partialflatten
    return flattener(obj, context)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/flat/flatstan.py", line 168, in FunctionSerializer
    data = convertToData(context.locate(IData), context)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/context.py", line 100, in locate
    return self.parent.locate(interface, depth)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/context.py", line 203, in locate
    return WebContext.locate(self, interface, depth)
  File "/usr/lib/python2.3/site-packages/Nevow/nevow/context.py", line 99, in locate
    raise KeyError, "Interface %s was not remembered." % key
exceptions.KeyError: 'Interface nevow.inevow.IData was not remembered.'
---------------------------------------------------------------------
I don't get this problem if I replace the AddAnother link with the Nothing 
link (as commented out in the code.)

Is this expected-behaviour, a bug in my code, or a bug in liveevil????

Any help would be greatly appreciated.

Thanks!
David.




[1] https://eduforge.org/projects/exe E-learning XML Editor

-- 
 (o_    David Moore
 //\    LinuxSoftware - Custom software development for Linux!
 V_/_   http://www.linuxsoftware.co.nz

From michael.wilson at gmail.com  Sun Dec 19 20:46:54 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Sun Dec 19 20:46:56 2004
Subject: [Twisted-web] loaders.xmlstr versus loader.xmlfile
Message-ID: <6134905004121919467cbf1ba3@mail.gmail.com>

If I have a form definition like the one in customform.py:

FORM = loaders.xmlstr(
    """<?xml version="1.0"?>
      <div id="centerContent">
      <form xmlns:n="http://nevow.com/ns/nevow/0.1"
n:pattern="freeform-form">
      <!-- Replace/fill the form attributes -->
      <n:attr name="action"><n:slot name="form-action"/></n:attr>
....


Shouldn't I be able to put it into a file and replace
"loaders.xmlstr(...)' with "loaders.xmlfile(...)" and have it act
exactly the same?

I thought so to, but when I do that, the form now acts like a formless
-- all of the information in FORM above is ignored.

I thought it was a problem with the file name, so I tried .html, .xml,
.xhtml, and they all produced the same results.

I've looked at the docs and the code, and I can't see why it might be
doing this.

Thanks!

From dp at ulaluma.com  Sun Dec 19 23:34:13 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Sun Dec 19 23:34:26 2004
Subject: [Twisted-web] nevow.liveevil question (dynamically adding a link
	with its own handler)
In-Reply-To: <20041220090501.068d60dd.djm@software.net.nz>
References: <20041220090501.068d60dd.djm@software.net.nz>
Message-ID: <29E38A36-5251-11D9-B535-000A95864FC4@ulaluma.com>


On Dec 19, 2004, at 12:05 PM, David Moore wrote:

*snip*

> def adder(client):
> #    newLink = loaders.stan(tags.a(href="#")["Nothing"])
>     newLink = loaders.stan(tags.a(href="#",
>                 onclick=liveevil.handler(adder))["AddAgain"])
>     client.append('content', newLink)

Leave out the loaders.stan here and it should work. All the client apis 
expect stan. I think I'll consider this a bug; can you add a bug to the 
tracker at http://divmod.org/users/roundup.twistd/nevow/ ?

Thanks, and happy hacking. :-)

dp


From djm at software.net.nz  Mon Dec 20 00:45:24 2004
From: djm at software.net.nz (David Moore)
Date: Mon Dec 20 01:47:04 2004
Subject: [Twisted-web] nevow.liveevil question (dynamically adding a
	link with its own handler)
In-Reply-To: <29E38A36-5251-11D9-B535-000A95864FC4@ulaluma.com>
References: <20041220090501.068d60dd.djm@software.net.nz>
	<29E38A36-5251-11D9-B535-000A95864FC4@ulaluma.com>
Message-ID: <20041220204524.16de3773.djm@software.net.nz>

On Sun, 19 Dec 2004 22:34:13 -0800
Donovan Preston <dp@ulaluma.com> wrote:

> 
> On Dec 19, 2004, at 12:05 PM, David Moore wrote:
> 
> *snip*
> 
> > def adder(client):
> > #    newLink = loaders.stan(tags.a(href="#")["Nothing"])
> >     newLink = loaders.stan(tags.a(href="#",
> >                 onclick=liveevil.handler(adder))["AddAgain"])
> >     client.append('content', newLink)
> 
> Leave out the loaders.stan here and it should work. All the client
> apis expect stan. I think I'll consider this a bug; can you add a bug
> to the tracker at http://divmod.org/users/roundup.twistd/nevow/ ?
> 
> Thanks, and happy hacking. :-)
> 
> dp
> 

Thanks for the reply, but removing loaders.stan, doesn't make any
difference.  I still get exceptions.KeyError: 'Interface
nevow.inevow.IData was not remembered.'

issue 145 created


Thanks! David.

From tv at twistedmatrix.com  Mon Dec 20 02:40:49 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon Dec 20 02:41:24 2004
Subject: [Twisted-web] loaders.xmlstr versus loader.xmlfile
In-Reply-To: <6134905004121919467cbf1ba3@mail.gmail.com>
References: <6134905004121919467cbf1ba3@mail.gmail.com>
Message-ID: <41C69E21.2030608@twistedmatrix.com>

Michael Wilson wrote:

>Shouldn't I be able to put it into a file and replace
>"loaders.xmlstr(...)' with "loaders.xmlfile(...)" and have it act
>exactly the same?
>  
>
Yes. You need to provide more information for anyone to help you;
preferably a minimal runnable program that demonstrates the issue.


From michael.wilson at gmail.com  Mon Dec 20 09:43:34 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Mon Dec 20 09:44:40 2004
Subject: [Twisted-web] loaders.xmlstr versus loader.xmlfile
In-Reply-To: <41C69E21.2030608@twistedmatrix.com>
References: <6134905004121919467cbf1ba3@mail.gmail.com>
	<41C69E21.2030608@twistedmatrix.com>
Message-ID: <6134905004122008432c4e109c@mail.gmail.com>

Sure, below you will find the version of customform.py I used, and the
.xml file follows. Now that I know it should be the same I'll dig
around some more.

#################################################################################
# This is a version of examples/customform.py, except I've moved the template
# off to disk. 

from twisted.application import internet, service
from twisted.web import static
from nevow import inevow, rend, loaders, tags, appserver

from nevow import rend
from nevow import url
from nevow import loaders
from nevow import tags as T

from formless import annotate
from formless import iformless
from formless import webform

FORM_LAYOUT = loaders.xmlfile( 'customform.xml' )

#################################################################################
# ISomething and Page are just something to test the form rendering on.

class ISomething(annotate.TypedInterface):
    
    def doSomething(
        self,
        ctx = annotate.Context(),
        fee = annotate.String(required=True, description="Wee!"),
        fi = annotate.Integer(description="Tra-la-la"),
        fo = annotate.Text(),
        fum = annotate.String(),
        ):
        """Do Something Really Exciting

        Normally you would put a useful description of the interface here but,
        since the inteface is useless anyway, I cannot think of anything
        useful to say about it. Although ... did I mention it is useless?"""
    doSomething = annotate.autocallable(doSomething)
    

class Root(rend.Page):
    """Render a custom and normal form for an ISomething.
    """
    __implements__ = ISomething, rend.Page.__implements__
    addSlash = True
    
    child_webform_css = webform.defaultCSS
    
    def render_normalForm(self, ctx, data):
        return webform.renderForms()
    
    def render_customForm(self, ctx, data):
        return webform.renderForms()[FORM_LAYOUT]
    
    def doSomething(self, ctx, **kwargs):
        print '***** doSomething called with:', kwargs
    
    docFactory = loaders.stan(
        T.html[
            T.head[
                T.title['Example :: Custom Form Layout'],
                T.link(rel='stylesheet', type='text/css',
href=url.here.child("webform_css")),
                ],
            T.body[
                T.h1['Custom'],
                render_customForm,
                T.h1['Default'],
                render_normalForm,
                ]
            ]
        )


application = service.Application('hellostan')
webServer = internet.TCPServer(8080, appserver.NevowSite(Root()))
webServer.setServiceParent(application)

--------------- customform.xml follows --------------------

<?xml version="1.0"?>
    <form xmlns:n="http://nevow.com/ns/nevow/0.1" n:pattern="freeform-form">
    
      <!-- Replace/fill the form attributes -->
      <n:attr name="action"><n:slot name="form-action"/></n:attr>
      <n:attr name="id"><n:slot name="form-id"/></n:attr>
      <n:attr name="name"><n:slot name="form-name"/></n:attr>
      
      <!-- General form information -->
      <p><strong><n:slot name="form-label"/></strong></p>
      <p><em><n:slot name="form-description"/></em></p>
      <p><strong><em><n:slot name="form-error"/></em></strong></p>
      
      <!-- Start of the form layout table -->
      <table style="background: #eee; border: 1px solid #bbb; padding: 1em;" >
        <!-- Mark location arguments will be added -->
        <n:slot name="form-arguments"/>
        <!-- General argument layout pattern -->
        <n:invisible n:pattern="argument" n:render="remove">
          <tr>
            <th><n:slot name="label"/>:</th>
            <td><n:slot name="input"/><span
class="freeform-error"><n:slot name="error"/></span></td>
          </tr>
          <tr>
            <th></th>
            <td><n:slot name="description"/></td>
          </tr>
        </n:invisible>
        <!-- Argument layout, just for fum -->
        <n:invisible n:pattern="argument!!fo" n:render="remove">
          <tr>
            <th><n:slot name="label"/>:</th>
            <td>
              <textarea cols="40" rows="5"><n:attr name="id"><n:slot
name="id"/></n:attr><n:attr name="name"><n:slot
name="name"/></n:attr><n:slot name="value"/></textarea>
              <span class="freeform-error"><n:slot name="error"/></span></td>
          </tr>
          <tr>
            <th></th>
            <td><n:slot name="description"/></td>
          </tr>
        </n:invisible>
        <!-- Button row -->
        <tr>
          <td colspan="2">
            <n:slot name="form-button"/>
          </td>
        </tr>
      </table>
    </form>




On Mon, 20 Dec 2004 11:40:49 +0200, Tommi Virtanen <tv@twistedmatrix.com> wrote:
> Michael Wilson wrote:
> 
> >Shouldn't I be able to put it into a file and replace
> >"loaders.xmlstr(...)' with "loaders.xmlfile(...)" and have it act
> >exactly the same?
> >
> >
> Yes. You need to provide more information for anyone to help you;
> preferably a minimal runnable program that demonstrates the issue.
> 
>

From michael.wilson at gmail.com  Mon Dec 20 17:00:51 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Mon Dec 20 17:00:54 2004
Subject: [Twisted-web] loaders.xmlstr versus loader.xmlfile
In-Reply-To: <6134905004122008432c4e109c@mail.gmail.com>
References: <6134905004121919467cbf1ba3@mail.gmail.com>
	<41C69E21.2030608@twistedmatrix.com>
	<6134905004122008432c4e109c@mail.gmail.com>
Message-ID: <61349050041220160055cb9e20@mail.gmail.com>

I spent some time tracing through this, and here is some more data:

1. In the origional customform.py, which uses xmlstr, I see the getDoc
and precompile methods being invokes (as expected). I verified this by
putting breakpoints at these methods.

2. In the example below, these methods are NEVER called. __init__ is
called when twisted loads the app, but that's it. We never actually
call getDoc or precompile.

I can't figure out why, but there's some more data. 


On Mon, 20 Dec 2004 08:43:34 -0800, Michael Wilson
<michael.wilson@gmail.com> wrote:
> Sure, below you will find the version of customform.py I used, and the
> .xml file follows. Now that I know it should be the same I'll dig
> around some more.
> 
> #################################################################################
> # This is a version of examples/customform.py, except I've moved the template
> # off to disk.
> 
> from twisted.application import internet, service
> from twisted.web import static
> from nevow import inevow, rend, loaders, tags, appserver
> 
> from nevow import rend
> from nevow import url
> from nevow import loaders
> from nevow import tags as T
> 
> from formless import annotate
> from formless import iformless
> from formless import webform
> 
> FORM_LAYOUT = loaders.xmlfile( 'customform.xml' )
> 
> #################################################################################
> # ISomething and Page are just something to test the form rendering on.
> 
> class ISomething(annotate.TypedInterface):
> 
>     def doSomething(
>         self,
>         ctx = annotate.Context(),
>         fee = annotate.String(required=True, description="Wee!"),
>         fi = annotate.Integer(description="Tra-la-la"),
>         fo = annotate.Text(),
>         fum = annotate.String(),
>         ):
>         """Do Something Really Exciting
> 
>         Normally you would put a useful description of the interface here but,
>         since the inteface is useless anyway, I cannot think of anything
>         useful to say about it. Although ... did I mention it is useless?"""
>     doSomething = annotate.autocallable(doSomething)
> 
> class Root(rend.Page):
>     """Render a custom and normal form for an ISomething.
>     """
>     __implements__ = ISomething, rend.Page.__implements__
>     addSlash = True
> 
>     child_webform_css = webform.defaultCSS
> 
>     def render_normalForm(self, ctx, data):
>         return webform.renderForms()
> 
>     def render_customForm(self, ctx, data):
>         return webform.renderForms()[FORM_LAYOUT]
> 
>     def doSomething(self, ctx, **kwargs):
>         print '***** doSomething called with:', kwargs
> 
>     docFactory = loaders.stan(
>         T.html[
>             T.head[
>                 T.title['Example :: Custom Form Layout'],
>                 T.link(rel='stylesheet', type='text/css',
> href=url.here.child("webform_css")),
>                 ],
>             T.body[
>                 T.h1['Custom'],
>                 render_customForm,
>                 T.h1['Default'],
>                 render_normalForm,
>                 ]
>             ]
>         )
> 
> application = service.Application('hellostan')
> webServer = internet.TCPServer(8080, appserver.NevowSite(Root()))
> webServer.setServiceParent(application)
> 
> --------------- customform.xml follows --------------------
> 
> <?xml version="1.0"?>
>     <form xmlns:n="http://nevow.com/ns/nevow/0.1" n:pattern="freeform-form">
> 
>       <!-- Replace/fill the form attributes -->
>       <n:attr name="action"><n:slot name="form-action"/></n:attr>
>       <n:attr name="id"><n:slot name="form-id"/></n:attr>
>       <n:attr name="name"><n:slot name="form-name"/></n:attr>
> 
>       <!-- General form information -->
>       <p><strong><n:slot name="form-label"/></strong></p>
>       <p><em><n:slot name="form-description"/></em></p>
>       <p><strong><em><n:slot name="form-error"/></em></strong></p>
> 
>       <!-- Start of the form layout table -->
>       <table style="background: #eee; border: 1px solid #bbb; padding: 1em;" >
>         <!-- Mark location arguments will be added -->
>         <n:slot name="form-arguments"/>
>         <!-- General argument layout pattern -->
>         <n:invisible n:pattern="argument" n:render="remove">
>           <tr>
>             <th><n:slot name="label"/>:</th>
>             <td><n:slot name="input"/><span
> class="freeform-error"><n:slot name="error"/></span></td>
>           </tr>
>           <tr>
>             <th></th>
>             <td><n:slot name="description"/></td>
>           </tr>
>         </n:invisible>
>         <!-- Argument layout, just for fum -->
>         <n:invisible n:pattern="argument!!fo" n:render="remove">
>           <tr>
>             <th><n:slot name="label"/>:</th>
>             <td>
>               <textarea cols="40" rows="5"><n:attr name="id"><n:slot
> name="id"/></n:attr><n:attr name="name"><n:slot
> name="name"/></n:attr><n:slot name="value"/></textarea>
>               <span class="freeform-error"><n:slot name="error"/></span></td>
>           </tr>
>           <tr>
>             <th></th>
>             <td><n:slot name="description"/></td>
>           </tr>
>         </n:invisible>
>         <!-- Button row -->
>         <tr>
>           <td colspan="2">
>             <n:slot name="form-button"/>
>           </td>
>         </tr>
>       </table>
>     </form>
> 
> 
> On Mon, 20 Dec 2004 11:40:49 +0200, Tommi Virtanen <tv@twistedmatrix.com> wrote:
> > Michael Wilson wrote:
> >
> > >Shouldn't I be able to put it into a file and replace
> > >"loaders.xmlstr(...)' with "loaders.xmlfile(...)" and have it act
> > >exactly the same?
> > >
> > >
> > Yes. You need to provide more information for anyone to help you;
> > preferably a minimal runnable program that demonstrates the issue.
> >
> >
>

From dp at ulaluma.com  Mon Dec 20 18:26:09 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Mon Dec 20 18:26:34 2004
Subject: [Twisted-web] loaders.xmlstr versus loader.xmlfile
In-Reply-To: <61349050041220160055cb9e20@mail.gmail.com>
References: <6134905004121919467cbf1ba3@mail.gmail.com>
	<41C69E21.2030608@twistedmatrix.com>
	<6134905004122008432c4e109c@mail.gmail.com>
	<61349050041220160055cb9e20@mail.gmail.com>
Message-ID: <4AD97D60-52EF-11D9-8DF1-000A95864FC4@ulaluma.com>


On Dec 20, 2004, at 4:00 PM, Michael Wilson wrote:

> 1. In the origional customform.py, which uses xmlstr, I see the getDoc
> and precompile methods being invokes (as expected). I verified this by
> putting breakpoints at these methods.
>
> 2. In the example below, these methods are NEVER called. __init__ is
> called when twisted loads the app, but that's it. We never actually
> call getDoc or precompile.

I still think there is a bug here, but I think I might have a 
workaround. Try loading the docfactory yourself, like so:

     def render_customForm(self, ctx, data):
         return webform.renderForms()[FORM_LAYOUT.load()]

Let me know if that helps.

dp


From michael.wilson at gmail.com  Mon Dec 20 20:01:55 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Mon Dec 20 20:02:12 2004
Subject: [Twisted-web] loaders.xmlstr versus loader.xmlfile
In-Reply-To: <4AD97D60-52EF-11D9-8DF1-000A95864FC4@ulaluma.com>
References: <6134905004121919467cbf1ba3@mail.gmail.com>
	<41C69E21.2030608@twistedmatrix.com>
	<6134905004122008432c4e109c@mail.gmail.com>
	<61349050041220160055cb9e20@mail.gmail.com>
	<4AD97D60-52EF-11D9-8DF1-000A95864FC4@ulaluma.com>
Message-ID: <6134905004122019016858ed5e@mail.gmail.com>

Donovan,

That worked correctly, thanks!

Do you need any more documentation or information from me? 




On Mon, 20 Dec 2004 17:26:09 -0800, Donovan Preston <dp@ulaluma.com> wrote:
> 
> On Dec 20, 2004, at 4:00 PM, Michael Wilson wrote:
> 
> > 1. In the origional customform.py, which uses xmlstr, I see the getDoc
> > and precompile methods being invokes (as expected). I verified this by
> > putting breakpoints at these methods.
> >
> > 2. In the example below, these methods are NEVER called. __init__ is
> > called when twisted loads the app, but that's it. We never actually
> > call getDoc or precompile.
> 
> I still think there is a bug here, but I think I might have a
> workaround. Try loading the docfactory yourself, like so:
> 
>      def render_customForm(self, ctx, data):
>          return webform.renderForms()[FORM_LAYOUT.load()]
> 
> Let me know if that helps.
> 
> dp
> 
>

From mesozoic at polynode.com  Tue Dec 21 08:30:14 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Tue Dec 21 08:30:47 2004
Subject: [Twisted-web] Re: [Nevow-commits] r962 - One billion times better
	Choice...
In-Reply-To: <E1Cf0gr-0001bo-4O@tesla.divmod.com>
References: <E1Cf0gr-0001bo-4O@tesla.divmod.com>
Message-ID: <20041221153014.GC16825@perpetual.moxn.net>

I'm a little behind on Nevow changes, and I just came across this change to
the Choice interface. It looks cool (deferred support is a big plus), but so
far all the examples I've seen involve declaring the available choices as
part of the interface definition, e.g.:

class MyInterface(TypedInterface):
  pickOne = Choice(lambda c,d: [1,2,3,4])
  
What I do (fairly regularly) with my application involves declaring the
available choices as part of the _implementing_ class, not as part of the
interface. I typically used choicesAttribute to do this, and was working on
something along the lines of a choicesMethod, but now it seems that this
behavior has been deprecated.

So, what is the new recommended syntax for a Choice where the implementing
class can change the choices dynamically?


On Thu, Dec 16, 2004 at 01:49:29PM -0500, Donovan Preston wrote:
> MIME-Version: 1.0
> Content-Type: text/plain; charset=UTF-8
> 
> Author: dp
> Date: Thu Dec 16 13:49:28 2004
> New Revision: 962
> 
> Modified:
>    trunk/examples/formbuilder.py
>    trunk/examples/formpost2.py
>    trunk/formless/annotate.py
>    trunk/formless/webform.py
> Log:
> One billion times better Choice implementation; supports lazy choices from a function, a deferred, etc. Has valueToKey and keyToValue methods which are used to serialize/unserialize the choice instead of the index into the list.
> 
> 
> Modified: trunk/examples/formbuilder.py
> ==============================================================================
> --- trunk/examples/formbuilder.py	(original)
> +++ trunk/examples/formbuilder.py	Thu Dec 16 13:49:28 2004
> @@ -10,6 +10,9 @@
>  from formless import webform
>  from formless import configurable
>  
> +from twisted.python import reflect
> +
> +
>  class BuilderCore(configurable.Configurable):
>      def __init__(self):
>          configurable.Configurable.__init__(self, None)
> @@ -32,10 +35,11 @@
>  
>  
>  allTypes = [annotate.String, annotate.Text, annotate.Integer, annotate.Real, annotate.Password]
> +typeChoice = annotate.Choice(choices=allTypes, valueToKey=reflect.qual, keyToValue=reflect.namedAny, stringify=lambda x: x.__name__)
>  
>  
>  class IFormBuilder(annotate.TypedInterface):
> -    def addElement(self, name=annotate.String(required=True), type=annotate.Choice(choices=allTypes)):
> +    def addElement(self, name=annotate.String(required=True), type=typeChoice):
>          """Add Element
>          
>          Add an element to this form.
> 
> Modified: trunk/examples/formpost2.py
> ==============================================================================
> --- trunk/examples/formpost2.py	(original)
> +++ trunk/examples/formpost2.py	Thu Dec 16 13:49:28 2004
> @@ -3,15 +3,24 @@
>  from nevow import loaders
>  from nevow import rend
>  from nevow import tags
> +from nevow import inevow
>  
>  from formless import annotate
>  from formless import webform
>  
> +from twisted.internet import defer
> +
> +
> +oldChoicesWay = annotate.Choice(choicesAttribute='theChoices') # Doing this gives you a DeprecationWarning now
> +# If you still want to use an attribute or method of some other object, you should use a function as shown below,
> +# but look up IResource(ctx) or IConfigurable(ctx), whichever is more appropriate.
> +newChoicesWay = annotate.Choice(lambda c, d: range(30))
> +deferChoicesWay = annotate.Choice(lambda c, d: defer.succeed(['abcd', 'efgh', 'ijkl']))
>  
>  class IMyForm(annotate.TypedInterface):
>      foo = annotate.Integer()
>  
> -    def bar(self, baz=annotate.Integer()):
> +    def bar(self, baz=annotate.Integer(), bamf=oldChoicesWay, slam=newChoicesWay, ham=deferChoicesWay):
>          pass
>      bar = annotate.autocallable(bar)
>  
> @@ -21,8 +30,10 @@
>  
>      foo = 5
>  
> -    def bar(self, baz):
> -        print "baz!", baz
> +    def bar(self, baz, bamf, slam, ham):
> +        return "You called bar! %s %s %s %s" % (baz, bamf, slam, ham)
> +
> +    theChoices = [1, 2, 3]
>  
>  
>  class FormPage(rend.Page):
> @@ -31,12 +42,19 @@
>  
>      child_webform_css = webform.defaultCSS
>  
> +    def render_hand(self, ctx, data):
> +        hand = inevow.IHand(ctx, default=None)
> +        if hand is not None:
> +            return ctx.tag[hand]
> +        return ''
> +
>      docFactory = loaders.stan(
>          tags.html[
>              tags.head[
>                  tags.link(rel='stylesheet', type='text/css', href='/webform_css'),
>                  ],
>              tags.body[
> +                tags.h3(render=render_hand, style="color: red; font-size: xx-large"),
>                  "Hello! Here is a form:",
>  
>                  # We want to render forms defined by the Implementation instance.
> 
> Modified: trunk/formless/annotate.py
> ==============================================================================
> --- trunk/formless/annotate.py	(original)
> +++ trunk/formless/annotate.py	Thu Dec 16 13:49:28 2004
> @@ -10,6 +10,7 @@
>  import copy
>  import inspect
>  import types
> +import warnings
>  
>  from nevow import inevow
>  from nevow import util
> @@ -238,28 +239,29 @@
>      are configuring. The elements of the list will be rendered by calling the 
>      function passed to stringify, which is by default "str".
>      """
> -    def __init__(self, choices=None, choicesAttribute=None, stringify=str, *args, **kw):
> +    def __init__(self, choices=None, choicesAttribute=None, stringify=str, valueToKey=str, keyToValue=str, *args, **kw):
>          Typed.__init__(self, *args, **kw)
> -        if choices is None:
> -            self.choices = []
> -        else:
> -            self.choices = choices
> -        self.choicesAttribute = choicesAttribute
> +        self.choices = choices
> +        if choicesAttribute:
> +            self.choicesAttribute = choicesAttribute
> +        if getattr(self, 'choicesAttribute', None):
> +            warnings.warn(
> +                "Choice.choicesAttribute is deprecated. Please pass a function to choices instead.",
> +                DeprecationWarning,
> +                stacklevel=2)
> +            def findTheChoices(ctx, data):
> +                return getattr(iformless.IConfigurable(ctx).original, self.choicesAttribute)
> +            self.choices = findTheChoices
> +
>          self.stringify = stringify
> +        self.valueToKey=valueToKey
> +        self.keyToValue=keyToValue
>  
>      def coerce(self, val, binding):
>          """Coerce a value with the help of an object, which is the object
>          we are configuring.
>          """
> -        try:
> -            val = int(val)
> -        except ValueError:
> -            raise InputError("%r is an invalid choice." % val)
> -        if self.choicesAttribute is not None:
> -            choices = getattr(binding, self.choicesAttribute)
> -        else:
> -            choices = self.choices
> -        return choices[val]
> +        return self.keyToValue(val)
>  
>  
>  class Any(object):
> 
> Modified: trunk/formless/webform.py
> ==============================================================================
> --- trunk/formless/webform.py	(original)
> +++ trunk/formless/webform.py	Thu Dec 16 13:49:28 2004
> @@ -62,6 +62,7 @@
>      def rend(self, context, data):
>          defaults = context.locate(iformless.IFormDefaults)
>          value = defaults.getDefault(context.key, context)
> +        context.remember(data.typedValue, iformless.ITyped)
>  
>          if data.typedValue.getAttribute('immutable'):
>              inp = span(id=keyToXMLID(context.key))[value]
> @@ -145,32 +146,45 @@
>                            _class='freeform-input-file')]
>  
>  
> +class ICurrentlySelectedValue(compy.Interface):
> +    """The currently-selected-value for the ITypedRenderer being rendered.
> +    """
> +
> +
> +csv = ICurrentlySelectedValue
> +def valToKey(c, d):
> +    return iformless.ITyped(c).valueToKey(d)
> +
> +
> +def isSelected(c, d):
> +    if csv(c) == valToKey(c, d):
> +        return c.tag(selected='selected')
> +    return c.tag
> +
> +
> +default_select = select(id=slot('id'), name=slot('name'), render=directive('sequence'), foo="bar")[
> +    option(pattern="item", 
> +        value=valToKey, 
> +        render=isSelected)[
> +        lambda c, d: iformless.ITyped(c).stringify(d)]]
> +
> +
>  class ChoiceRenderer(BaseInputRenderer):
>      def input(self, context, slot, data, name, value):
>          tv = data.typedValue
> -        if tv.choicesAttribute:
> -            choices = getattr(context.locate(iformless.IConfigurable).boundTo, tv.choicesAttribute)
> -        else:
> -            choices = tv.choices
> +        choices = tv.choices
>  
> -        numChoices = len(choices)
> -        if numChoices == 0:
> -            return None
> +        if value:
> +            context.remember(self.original.valueToKey(value), csv)
> +        else:
> +            context.remember('', csv)
>  
>          try:
>              selector = context.tag.patternGenerator( 'selector' )
>          except NodeNotFound:
> -            selector = select
> -
> -        selector = selector(id=keyToXMLID(context.key), name=name)
> -        stringify = tv.stringify
> +            selector = default_select
>  
> -        for index, val in enumerate(choices):
> -            if val == value:
> -                selector[option(value=str(index), selected="selected")[stringify(val)]]
> -            else:
> -                selector[option(value=str(index))[stringify(val)]]
> -        return slot[selector]
> +        return selector(data=choices)
>  
>  
>  class ObjectRenderer(compy.Adapter):
> @@ -259,6 +273,7 @@
>  class PropertyBindingRenderer(BaseBindingRenderer):
>      def rend(self, context, data):
>          context.remember(data, iformless.IBinding)
> +        context.remember(data.typedValue, iformless.ITyped)
>          typedRenderer = iformless.ITypedRenderer(data.typedValue, defaultBindingRenderer, persist=False)
>          if typedRenderer.complexType:
>              return invisible(data=data, render=typedRenderer)
> @@ -337,11 +352,13 @@
>                      except NodeNotFound:
>                          default_content_pattern = freeformDefaultContentPattern
>                  content_pattern = default_content_pattern
> +            renderer = iformless.ITypedRenderer(
> +                argument.typedValue, defaultBindingRenderer, persist=False)
>              pat = content_pattern(
>                  key=argument.name,
>                  data=argument,
> -                render= iformless.ITypedRenderer(
> -                    argument.typedValue, defaultBindingRenderer, persist=False))
> +                render=renderer,
> +                remember={iformless.ITyped: argument.typedValue})
>              context.fillSlots( 'argument!!%s' % argument.name, pat )
>              yield pat
>  
> 
> _______________________________________________
> Nevow-commits mailing list
> Nevow-commits@divmod.org
> http://divmod.org/users/mailman.twistd/listinfo/nevow-commits

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_

From dp at ulaluma.com  Tue Dec 21 09:53:37 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Tue Dec 21 09:53:44 2004
Subject: [Twisted-web] loaders.xmlstr versus loader.xmlfile
In-Reply-To: <6134905004122019016858ed5e@mail.gmail.com>
References: <6134905004121919467cbf1ba3@mail.gmail.com>
	<41C69E21.2030608@twistedmatrix.com>
	<6134905004122008432c4e109c@mail.gmail.com>
	<61349050041220160055cb9e20@mail.gmail.com>
	<4AD97D60-52EF-11D9-8DF1-000A95864FC4@ulaluma.com>
	<6134905004122019016858ed5e@mail.gmail.com>
Message-ID: <DC1DFBDE-5370-11D9-8DF1-000A95864FC4@ulaluma.com>


On Dec 20, 2004, at 7:01 PM, Michael Wilson wrote:

> Donovan,
>
> That worked correctly, thanks!

Great, glad to hear it.

> Do you need any more documentation or information from me?

No, I know exactly what the problem is. formless.webform is using 
deprecated APIs, namely context.onePattern. It should be using 
IQ(ctx).onePattern instead, which uses adapters to handle multiple 
types being in the DOM, and thus would handle the loader being in the 
DOM (as opposed to some stan being in the dom, which is what happens 
when you call loader.load())

dp


From dp at ulaluma.com  Tue Dec 21 10:17:17 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Tue Dec 21 10:17:23 2004
Subject: [Twisted-web] Re: [Nevow-commits] r962 - One billion times better
	Choice...
In-Reply-To: <20041221153014.GC16825@perpetual.moxn.net>
References: <E1Cf0gr-0001bo-4O@tesla.divmod.com>
	<20041221153014.GC16825@perpetual.moxn.net>
Message-ID: <2A554EAC-5374-11D9-8DF1-000A95864FC4@ulaluma.com>


On Dec 21, 2004, at 7:30 AM, Alex Levy wrote:

> What I do (fairly regularly) with my application involves declaring the
> available choices as part of the _implementing_ class, not as part of 
> the
> interface. I typically used choicesAttribute to do this, and was 
> working on
> something along the lines of a choicesMethod, but now it seems that 
> this
> behavior has been deprecated.

Of course. The interface should never contain implementation code, but 
in this case the change just made using Choice so much more uniform and 
simple that it was obviously correct.

> So, what is the new recommended syntax for a Choice where the 
> implementing
> class can change the choices dynamically?

It really depends where you want to look up the method. If it's truly 
the *implementor* that you want, you can do exactly what the 
choicesAttribute backwards-compatibility code does:

Choices(lambda ctx, data: 
getattr(iformless.IConfigurable(ctx).original, 'someAttribute'))

Of course, you probably want to make using this a little nicer:

def choiceMethod(name):
     return lambda ctx, data: 
getattr(iformless.IConfigurable(ctx).original, name)

Also, perhaps you want to look for an already existing data method on 
your Page instead, to make your code more uniform:

def dataMethod(name):
     return lambda ctx, data: inevow.IContainer(ctx).child(ctx, name)

The point is instead of writing special cases in the actual Choice 
code, the programmer can plug in exactly what their case is. Oh, and it 
supports deferreds, too ;-)

dp


From ljw1001 at gmail.com  Tue Dec 21 10:32:22 2004
From: ljw1001 at gmail.com (Larry White)
Date: Tue Dec 21 10:32:54 2004
Subject: [Twisted-web] Re: [Nevow-commits] r962 - One billion times better
	Choice...
In-Reply-To: <20041221153014.GC16825@perpetual.moxn.net>
References: <E1Cf0gr-0001bo-4O@tesla.divmod.com>
	<20041221153014.GC16825@perpetual.moxn.net>
Message-ID: <d15ea14a04122109329aabb5e@mail.gmail.com>

Hi,  
I'm interested in using twisted web (based on what i've read - I can't
get it to install on my machine yet), and had a question about the
design.

It seems that the app routes requests to nodes in the resource tree. 
Is it possible to apply processing to the requests before and after
the resource is retrieved?  In particular, can I specify that I want
all the nodes on certain branches to have the same pre and post
processing?  I'm thinking of something along the lines of Java Servlet
Filters.

thanks.

From djm at software.net.nz  Tue Dec 21 11:10:13 2004
From: djm at software.net.nz (David Moore)
Date: Tue Dec 21 12:11:56 2004
Subject: [Twisted-web] nevow.liveevil question (dynamically adding a
	link with its own handler)
In-Reply-To: <20041220204524.16de3773.djm@software.net.nz>
References: <20041220090501.068d60dd.djm@software.net.nz>
	<29E38A36-5251-11D9-B535-000A95864FC4@ulaluma.com>
	<20041220204524.16de3773.djm@software.net.nz>
Message-ID: <20041222071013.03afc593.djm@software.net.nz>

On Mon, 20 Dec 2004 20:45:24 +1300
David Moore <djm@software.net.nz> wrote:

> On Sun, 19 Dec 2004 22:34:13 -0800
> Donovan Preston <dp@ulaluma.com> wrote:
> 
> > 
> > On Dec 19, 2004, at 12:05 PM, David Moore wrote:
> > 
> > *snip*
> > 
> > > def adder(client):
> > > #    newLink = loaders.stan(tags.a(href="#")["Nothing"])
> > >     newLink = loaders.stan(tags.a(href="#",
> > >                 onclick=liveevil.handler(adder))["AddAgain"])
> > >     client.append('content', newLink)
> > 
> > Leave out the loaders.stan here and it should work. All the client
> > apis expect stan. I think I'll consider this a bug; can you add a
> > bug to the tracker at http://divmod.org/users/roundup.twistd/nevow/
> > ?
> > 
> > Thanks, and happy hacking. :-)
> > 
> > dp
> > 
> 
> Thanks for the reply, but removing loaders.stan, doesn't make any
> difference.  I still get exceptions.KeyError: 'Interface
> nevow.inevow.IData was not remembered.'
> 
> issue 145 created
> 
> 
> Thanks! David.

I haven't had any luck trying to get this to work.  Does anyone else do
anything similar (dynamically created pages) with LivePage/LiveEvil?

Is there any open source code I can look at beyond Chatola?

I guess I may have to go back to forms and JavaScript?

Have a Happy Christmas!


Thanks, David.

From dp at ulaluma.com  Tue Dec 21 12:28:34 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Tue Dec 21 12:28:41 2004
Subject: [Twisted-web] Output filters
In-Reply-To: <d15ea14a04122109329aabb5e@mail.gmail.com>
References: <E1Cf0gr-0001bo-4O@tesla.divmod.com>
	<20041221153014.GC16825@perpetual.moxn.net>
	<d15ea14a04122109329aabb5e@mail.gmail.com>
Message-ID: <81A42033-5386-11D9-8DF1-000A95864FC4@ulaluma.com>


On Dec 21, 2004, at 9:32 AM, Larry White wrote:

> Hi,
> I'm interested in using twisted web (based on what i've read - I can't
> get it to install on my machine yet), and had a question about the
> design.
>
> It seems that the app routes requests to nodes in the resource tree.
> Is it possible to apply processing to the requests before and after
> the resource is retrieved?  In particular, can I specify that I want
> all the nodes on certain branches to have the same pre and post
> processing?  I'm thinking of something along the lines of Java Servlet
> Filters.

It's pretty much possible to do anything you want with twisted.web, 
since it's python and the code is there and fairly short. However, 
there is currently no support for chaining processors like you describe 
here. It wouldn't be too hard to add, but you'd probably have to do 
some monkey patching on request.write to get what you want.

I think foom has plans for piping output through multiple processors 
for web2. I'll let him talk about any relevance if he wants.

dp


From foom at fuhm.net  Tue Dec 21 14:30:02 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue Dec 21 14:30:08 2004
Subject: [Twisted-web] Re: [Nevow-commits] r962 - One billion times better
	Choice...
In-Reply-To: <d15ea14a04122109329aabb5e@mail.gmail.com>
References: <E1Cf0gr-0001bo-4O@tesla.divmod.com>
	<20041221153014.GC16825@perpetual.moxn.net>
	<d15ea14a04122109329aabb5e@mail.gmail.com>
Message-ID: <7938095A-5397-11D9-8D68-000A95A50FB2@fuhm.net>

On Dec 21, 2004, at 12:32 PM, Larry White wrote:
> Hi,
> I'm interested in using twisted web (based on what i've read - I can't
> get it to install on my machine yet), and had a question about the
> design.
>
> It seems that the app routes requests to nodes in the resource tree.
> Is it possible to apply processing to the requests before and after
> the resource is retrieved?  In particular, can I specify that I want
> all the nodes on certain branches to have the same pre and post
> processing?  I'm thinking of something along the lines of Java Servlet
> Filters.

Before is easy: just insert a resource in the hierarchy that does its 
processing and then passes the request along to the real resource.

After is pretty hard with the current architecture. I'd suggest 
treating it like it's impossible, although it may be doable with 
sufficient amounts of hackery. I'm doing some work to make this sort of 
thing easier in web2, but I'm not going to make any promises as to when 
that will be done. The particular use-case I'm working on at the moment 
is a output filter to add HTTP range support to any resource.

James


From ride at azulsystems.com  Wed Dec 22 17:34:06 2004
From: ride at azulsystems.com (Robert Ide)
Date: Wed Dec 22 17:32:36 2004
Subject: [Twisted-web] Installing on Fedora
Message-ID: <CE89F669E67F12458039DCD317EBF45601F2C164@xch001-mntnc>

This may be a rooky question but I'm having some trouble installing on
Fedora. I ran python setup.py install but that didn't seem to work and when I
look at admin/twisted.spec I'm not sure what to do with it. Should I be using
rpm with this?

Rob



From mary-twisted at puzzling.org  Wed Dec 22 17:41:38 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed Dec 22 17:41:43 2004
Subject: [Twisted-web] Installing on Fedora
In-Reply-To: <CE89F669E67F12458039DCD317EBF45601F2C164@xch001-mntnc>
References: <CE89F669E67F12458039DCD317EBF45601F2C164@xch001-mntnc>
Message-ID: <20041223004138.GB27604@home.puzzling.org>

On Wed, Dec 22, 2004, Robert Ide wrote:
> This may be a rooky question but I'm having some trouble installing on
> Fedora. I ran python setup.py install but that didn't seem to work and when I
> look at admin/twisted.spec I'm not sure what to do with it. Should I be using
> rpm with this?

A few questions:

 1. What are you trying to install exactly (twisted, Nevow...)?
 2. Where did you download it from?
 3. What tells you that "python setup.py install" didn't work (error
    messages, failure of the program to show up in the right place)?

If it's twisted you're trying to install,
twisted-python@twistedmatrix.com might be of some help...

-Mary

From ride at azulsystems.com  Wed Dec 22 18:44:17 2004
From: ride at azulsystems.com (Robert Ide)
Date: Wed Dec 22 18:42:49 2004
Subject: [Twisted-web] Installing on Fedora
Message-ID: <CE89F669E67F12458039DCD317EBF45601F2C19A@xch001-mntnc>

I am trying to install Twisted

I downloaded from the twisted site

I got errors and when I try to run twistd --version I get "not found"

Rob



-----Original Message-----
From: twisted-web-bounces@twistedmatrix.com
[mailto:twisted-web-bounces@twistedmatrix.com] On Behalf Of Mary Gardiner
Sent: Wednesday, December 22, 2004 7:42 PM
To: twisted-web@twistedmatrix.com
Subject: Re: [Twisted-web] Installing on Fedora

On Wed, Dec 22, 2004, Robert Ide wrote:
> This may be a rooky question but I'm having some trouble installing on
> Fedora. I ran python setup.py install but that didn't seem to work and when
I
> look at admin/twisted.spec I'm not sure what to do with it. Should I be
using
> rpm with this?

A few questions:

 1. What are you trying to install exactly (twisted, Nevow...)?
 2. Where did you download it from?
 3. What tells you that "python setup.py install" didn't work (error
    messages, failure of the program to show up in the right place)?

If it's twisted you're trying to install,
twisted-python@twistedmatrix.com might be of some help...

-Mary

_______________________________________________
Twisted-web mailing list
Twisted-web@twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From mary-twisted at puzzling.org  Wed Dec 22 18:50:32 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed Dec 22 18:50:48 2004
Subject: [Twisted-web] Installing on Fedora
In-Reply-To: <CE89F669E67F12458039DCD317EBF45601F2C19A@xch001-mntnc>
References: <CE89F669E67F12458039DCD317EBF45601F2C19A@xch001-mntnc>
Message-ID: <20041223015032.GD27858@home.puzzling.org>

On Wed, Dec 22, 2004, Robert Ide wrote:
> I am trying to install Twisted

Moving discussion to twisted-python

-Mary

From ride at azulsystems.com  Wed Dec 22 18:58:01 2004
From: ride at azulsystems.com (Robert Ide)
Date: Wed Dec 22 18:56:30 2004
Subject: [Twisted-web] Installing on Fedora
Message-ID: <CE89F669E67F12458039DCD317EBF45601F2C1A2@xch001-mntnc>

Here is the error from running python setup.py install

running install
Traceback (most recent call last):
  File "setup.py", line 358, in ?
    setup(**setup_args)
  File "/usr/lib/python2.2/distutils/core.py", line 138, in setup
    dist.run_commands()
  File "/usr/lib/python2.2/distutils/dist.py", line 902, in run_commands
    self.run_command(cmd)
  File "/usr/lib/python2.2/distutils/dist.py", line 921, in run_command
    cmd_obj.ensure_finalized()
  File "/usr/lib/python2.2/distutils/cmd.py", line 112, in ensure_finalized
    self.finalize_options()
  File "/usr/lib/python2.2/distutils/command/install.py", line 267, in
finalize_options
    (prefix, exec_prefix) = get_config_vars('prefix', 'exec_prefix')
  File "/usr/lib/python2.2/distutils/sysconfig.py", line 417, in
get_config_vars    func()
  File "/usr/lib/python2.2/distutils/sysconfig.py", line 322, in _init_posix
    raise DistutilsPlatformError(my_msg)
distutils.errors.DistutilsPlatformError: invalid Python installation: unable
to open /usr/lib/python2.2/config/Makefile (No such file or directory)



-----Original Message-----
From: twisted-web-bounces@twistedmatrix.com
[mailto:twisted-web-bounces@twistedmatrix.com] On Behalf Of Mary Gardiner
Sent: Wednesday, December 22, 2004 8:51 PM
To: twisted-web@twistedmatrix.com
Subject: Re: [Twisted-web] Installing on Fedora

On Wed, Dec 22, 2004, Robert Ide wrote:
> I am trying to install Twisted

Moving discussion to twisted-python

-Mary

_______________________________________________
Twisted-web mailing list
Twisted-web@twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From sridharinfinity at gmail.com  Thu Dec 23 09:11:49 2004
From: sridharinfinity at gmail.com (Sridhar R)
Date: Thu Dec 23 09:11:54 2004
Subject: [Twisted-web] Installing on Fedora
In-Reply-To: <CE89F669E67F12458039DCD317EBF45601F2C1A2@xch001-mntnc>
References: <CE89F669E67F12458039DCD317EBF45601F2C1A2@xch001-mntnc>
Message-ID: <8816fcf8041223081169f8981@mail.gmail.com>

On Wed, 22 Dec 2004 17:58:01 -0800, Robert Ide <ride@azulsystems.com> wrote:
> Here is the error from running python setup.py install
> 

Try,
python2.3 setup.py install

assuming you have python2.3 installed, as it must come with fedora


-- 
Sridhar R - http://cs.annauniv.edu/~rsridhar
Blog: http://www.livejournal.com/~sridharinfinity

From michael.wilson at gmail.com  Fri Dec 24 01:35:55 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Fri Dec 24 01:36:00 2004
Subject: [Twisted-web] How to pass invisible values with
	annotate.TypedInterface
Message-ID: <61349050041224003565c5adac@mail.gmail.com>

My forms are modeled after the examples in examples/customform.py, and
I try and use this standard form definition in multiple places.

In some cases, I would like to pass an invisible value with the form.
I know of two ways to do this:

1. By adding arguments to the form URL (
action="./freeform_post!!doSomething?myarg1=...")
2. By adding invisible fields to the form. 

What's the best way to do this? 

P.S. I've looked at the examples and the code, can't find the answer. 

Thanks!

From matt at pollenation.net  Fri Dec 24 06:35:56 2004
From: matt at pollenation.net (Matt Goodall)
Date: Fri Dec 24 06:36:07 2004
Subject: [Twisted-web] How to pass invisible values with
	annotate.TypedInterface
In-Reply-To: <61349050041224003565c5adac@mail.gmail.com>
References: <61349050041224003565c5adac@mail.gmail.com>
Message-ID: <1103895356.25071.10.camel@localhost.localdomain>

On Fri, 2004-12-24 at 00:35 -0800, Michael Wilson wrote:
> My forms are modeled after the examples in examples/customform.py, and
> I try and use this standard form definition in multiple places.
> 
> In some cases, I would like to pass an invisible value with the form.
> I know of two ways to do this:
> 
> 1. By adding arguments to the form URL (
> action="./freeform_post!!doSomething?myarg1=...")
> 2. By adding invisible fields to the form. 
> 
> What's the best way to do this? 
> 
> P.S. I've looked at the examples and the code, can't find the answer. 

The renderer annotate.String tests for a hidden attribute. You can use
that to include a hidden field, i.e. foo=annotate.String(hidden=True).
However, hidden fields are not often that useful; perhaps you could make
better use of the URL?

A common use of hidden form fields is to include some object id in the
form so that, when the form is posted, you get the id back again. If
that's why you want a hidden field then you should seriously look at
using a URL like "http://foo.com/news/1" instead of
"http://foo.com/news?id=1". Request parameters are not a good way to
identify resources, IMHO.

Of course, if you have a different use case for a hidden form field then
please post an example. Perhaps it's something that formless/webform
should support in a more obvious way.

Cheers, Matt


From foom at fuhm.net  Fri Dec 24 19:38:35 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri Dec 24 19:38:38 2004
Subject: [Twisted-web] Re: [Nevow-commits] r1003 - Don't call getInterfaces
	over and over and over again
In-Reply-To: <E1ChyCG-0007U5-21@tesla.divmod.com>
References: <E1ChyCG-0007U5-21@tesla.divmod.com>
Message-ID: <130FF76B-561E-11D9-8D68-000A95A50FB2@fuhm.net>


On Dec 24, 2004, at 5:46 PM, Donovan Preston wrote:
> Modified:
>    branches/dp/optimizations/nevow/flat/ten.py
> Log:
> Don't call getInterfaces over and over and over again

I'm pretty sure zope interfaces already caches this operation, so doing 
a double cache may actually be detrimental. But, measurements, I 
guess...

> Modified:
>    branches/dp/optimizations/nevow/flat/flatstan.py
> Log:
> Optimize out some function calls (from property accesses)

Why does it need a _specials dict anyways? What's wrong with just using 
the instance dict for those?

James


From dp at ulaluma.com  Fri Dec 24 20:06:58 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Fri Dec 24 20:07:01 2004
Subject: [Twisted-web] Re: [Nevow-commits] r1003 - Don't call
	getInterfaces over and over and over again
In-Reply-To: <130FF76B-561E-11D9-8D68-000A95A50FB2@fuhm.net>
References: <E1ChyCG-0007U5-21@tesla.divmod.com>
	<130FF76B-561E-11D9-8D68-000A95A50FB2@fuhm.net>
Message-ID: <0A8050DE-5622-11D9-84D9-000A95864FC4@ulaluma.com>


On Dec 24, 2004, at 6:38 PM, James Y Knight wrote:

>
> On Dec 24, 2004, at 5:46 PM, Donovan Preston wrote:
>> Modified:
>>    branches/dp/optimizations/nevow/flat/ten.py
>> Log:
>> Don't call getInterfaces over and over and over again
>
> I'm pretty sure zope interfaces already caches this operation, so 
> doing a double cache may actually be detrimental. But, measurements, I 
> guess...

Flatteners don't actually use the main adapter mechanism any more, 
since what you register is a two-argument callable, not a "real" 
adapter. Out of all the optimizations I performed, this one was the one 
that provided one of the biggest speedup.

>> Modified:
>>    branches/dp/optimizations/nevow/flat/flatstan.py
>> Log:
>> Optimize out some function calls (from property accesses)
>
> Why does it need a _specials dict anyways? What's wrong with just 
> using the instance dict for those?

Yeah, the instance dict should probably be used. It does make it easy 
to check if a node has specials though. I have been thinking about 
moving the slotData dict into the specials dict to make the check even 
easier. I'm going to write a bunch more tests and then have a stab at 
refactoring some of the lower level code to be cleaner.

I'm not sure why Tag doesn't have a __slots__ declaration? I think it 
used to.

dp


From michael.wilson at gmail.com  Sat Dec 25 01:09:03 2004
From: michael.wilson at gmail.com (Michael Wilson)
Date: Sat Dec 25 01:09:07 2004
Subject: [Twisted-web] How to pass invisible values with
	annotate.TypedInterface
In-Reply-To: <1103895356.25071.10.camel@localhost.localdomain>
References: <61349050041224003565c5adac@mail.gmail.com>
	<1103895356.25071.10.camel@localhost.localdomain>
Message-ID: <6134905004122500092488a41d@mail.gmail.com>

Matt,

I took your advice, but I've run into a snag:

My URLs look like this: "/admin/" is a menu of options,
"/admin/edit/2" is, as you suggest, a page to edit something with an
id of 2. The code looks something like this:

class Admin(rend.page):
...
def locateChild(self, ctx, childsegments):
  function, id = map(str, childSegments)
  if function == "edit":
    return Edit(id), []
...

Then:

class Edit(rend.page):

class IEdit(annotate.TypedInterface):
    
    def edit(
        self,
        ctx = annotate.Context(),
        name = annotate.String(required=True, label="Name",
          requiredFailMessage="Please enter the name")
        ):
        """Editl

        Please enter information. """
    edit = annotate.autocallable(edit)

class Edit(rend.Page):
    """Render a custom and normal form for an ISomething.
    """
    __implements__ = IEditSchool, rend.Page.__implements__
    addSlash = False
    
    child_webform_css = webform.defaultCSS
    
    def __init__(self,  id):
      rend.Page.__init__(self)
      self.id = int(float(id))
   
   .......
   docfactory = webform.renderForms()[aform]
   .........

The problem is this: when the child form is redered, the post URL is
"edit/freeform_post!!edit", rather than "./freeform_post!edit", as it
is when I don't use locateChild.

Second, the post is getting routed through the parent's locateChild,
and I'm not quite sure what to do with the "freeform_post".

I can provide a more complete example, but it's very puzzling. I think
what I need to do is:

1. Get the form post URL to NOT include the parent(s), and/or
2. Get the form post routed correctly to the child's code (which is
where the form came from anyway).

Any ideas? 

P.S. Merry Christmas/Happy Holidays/etc :-)

On Fri, 24 Dec 2004 13:35:56 +0000, Matt Goodall <matt@pollenation.net> wrote:
> On Fri, 2004-12-24 at 00:35 -0800, Michael Wilson wrote:
> > My forms are modeled after the examples in examples/customform.py, and
> > I try and use this standard form definition in multiple places.
> >
> > In some cases, I would like to pass an invisible value with the form.
> > I know of two ways to do this:
> >
> > 1. By adding arguments to the form URL (
> > action="./freeform_post!!doSomething?myarg1=...")
> > 2. By adding invisible fields to the form.
> >
> > What's the best way to do this?
> >
> > P.S. I've looked at the examples and the code, can't find the answer.
> 
> The renderer annotate.String tests for a hidden attribute. You can use
> that to include a hidden field, i.e. foo=annotate.String(hidden=True).
> However, hidden fields are not often that useful; perhaps you could make
> better use of the URL?
> 
> A common use of hidden form fields is to include some object id in the
> form so that, when the form is posted, you get the id back again. If
> that's why you want a hidden field then you should seriously look at
> using a URL like "http://foo.com/news/1" instead of
> "http://foo.com/news?id=1". Request parameters are not a good way to
> identify resources, IMHO.
> 
> Of course, if you have a different use case for a hidden form field then
> please post an example. Perhaps it's something that formless/webform
> should support in a more obvious way.
> 
> Cheers, Matt
> 
>

From general at eepatents.com  Tue Dec 28 03:11:48 2004
From: general at eepatents.com (Ed Suominen)
Date: Tue Dec 28 03:11:58 2004
Subject: [Twisted-web] adbapi/Nevow Question
Message-ID: <200412280211.48575.general@eepatents.com>

Using twisted.enterprise.adbapi and Nevow, I am rendering a big table of 
entries from one SQL table, each of which has table cells that can 
contain multiple entries from another SQL table. I have some stan code 
working for the top-level entries with a top-level 
render=directive("sequence"), but am wondering how to go about 
rendering the table-within-a-cell for the second-level entries. 

Can sequence directives be nested, or would I have to manually run the 
second-level SQL queries in some sort of fire-and-wait-for-the-deferred 
iteration from within the render_ method of the top-level sequence? The 
latter sounds like it would be very difficult to keep from blocking.

Thanks for any help. I am finding Nevow to be fascinating and powerful, 
but very difficult to understand and use.

-Ed Suominen

From jamwt-twistedlist at jamwt.com  Tue Dec 28 14:35:36 2004
From: jamwt-twistedlist at jamwt.com (J Turner)
Date: Tue Dec 28 14:35:18 2004
Subject: [Twisted-web] Patch to nevow for deferrable beforeRender and
	afterRender
Message-ID: <20041228213536.GA85836@count.jamwt.com>

I'm attaching a patch to the current svn trunk that allows beforeRender
and afterRender to return a Deferred.

It's been tested, and I've scanned it past dp a few times.

 - jamwt
-------------- next part --------------
Index: rend.py
===================================================================
--- rend.py	(revision 992)
+++ rend.py	(working copy)
@@ -23,6 +23,8 @@
 import warnings
 import traceback
 
+from twisted.internet.defer import maybeDeferred
+
 from nevow.context import WovenContext, NodeNotFound, PageContext, RequestContext
 from nevow import compy
 from nevow import inevow
@@ -390,11 +392,12 @@
 
     flattenFactory = flat.flattenFactory
 
-    def renderHTTP(self, ctx):
+    def renderHTTP(self, ctx, doBefore=True):
         ## XXX request is really ctx now, change the name here
         request = inevow.IRequest(ctx)
-        if self.beforeRender is not None:
-            self.beforeRender(ctx)
+        if doBefore and self.beforeRender is not None:
+            return maybeDeferred(self.beforeRender,ctx).addCallback(
+                    lambda result,ctx: self.renderHTTP(ctx,False),ctx)
         if self.addSlash and inevow.ICurrentSegments(ctx)[-1] != '':
             request.redirect(request.URLPath().child(''))
             return ''
@@ -409,20 +412,18 @@
                 del _CARRYOVER[carryover]
             self.context = None
             if self.afterRender is not None:
-                self.afterRender(ctx)
+                return maybeDeferred(self.afterRender,ctx)
 
         if self.buffered:
             io = StringIO()
             writer = io.write
             def finisher(result):
                 request.write(io.getvalue())
-                finishRequest()
-                return result
+                return maybeDeferred(finishRequest).addCallback(lambda r: result)
         else:
             writer = request.write
             def finisher(result):
-                finishRequest()
-                return result
+                return maybeDeferred(finishRequest).addCallback(lambda r: result)
 
         doc = self.docFactory.load()
         ctx =  WovenContext(ctx, tags.invisible[doc])
From orbitz at ezabel.com  Wed Dec 29 12:39:52 2004
From: orbitz at ezabel.com (orbitz)
Date: Wed Dec 29 12:40:00 2004
Subject: [Twisted-web] adbapi/Nevow Question
In-Reply-To: <200412280211.48575.general@eepatents.com>
References: <200412280211.48575.general@eepatents.com>
Message-ID: <41D30808.50603@ezabel.com>

You define a data method, and for that data you tell it to use the 
sequence renderer.  Your data method will just perform the query and 
return it as a result (nevow handles deferreds properly).  Then in your 
table for each row you simply tell that row to use the index in the data 
which you want in there. 0, 1, 2, etc. The only issue may be what 
db-api2 module you are using. pyscopg for postgresql works well, 
otherwise you'll get a cannot adapt error or something like that.
Here is an example with xmlfile:

  def data_departments(self, context, data):
    db = DatabaseConnection()
    return db.runQuery("""SELECT did, name FROM departments""")

 <p>
<select name = "department" nevow:data = "departments" nevow:render = 
"sequence">
<option nevow:pattern = "header" value = "depsel" selected 
="selected">Select Department</option>
<option nevow:pattern = "item"><nevow:attr name = "value" nevow:render = 
"string" nevow:data = "0"/>
<nevow:invisible nevow:render = "string" nevow:data = "1"/> </option>
            </select></p>

Ed Suominen wrote:

>Using twisted.enterprise.adbapi and Nevow, I am rendering a big table of 
>entries from one SQL table, each of which has table cells that can 
>contain multiple entries from another SQL table. I have some stan code 
>working for the top-level entries with a top-level 
>render=directive("sequence"), but am wondering how to go about 
>rendering the table-within-a-cell for the second-level entries. 
>
>Can sequence directives be nested, or would I have to manually run the 
>second-level SQL queries in some sort of fire-and-wait-for-the-deferred 
>iteration from within the render_ method of the top-level sequence? The 
>latter sounds like it would be very difficult to keep from blocking.
>
>Thanks for any help. I am finding Nevow to be fascinating and powerful, 
>but very difficult to understand and use.
>
>-Ed Suominen
>
>_______________________________________________
>Twisted-web mailing list
>Twisted-web@twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>  
>


From Mark.Williamson at bl.uk  Thu Dec  2 14:56:16 2004
From: Mark.Williamson at bl.uk (Williamson, Mark)
Date: Sun Apr 10 08:07:57 2005
Subject: [Twisted-web] (no subject)
Message-ID: <343540CF89C2774289E7F3C9EE4F5DF10553A6C2@nt-lonex1.bl.uk>

2002@weholt.org'"
	 <2002@weholt.org,>, "'twisted-web@twistedmatrix.com'"
	 <twisted-web@twistedmatrix.com>
Subject: Re: [Twisted-web] Example of WebDav-server using akadav
Date: Thu, 2 Dec 2004 21:57:30 -0000 
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.5.2657.72)
Content-Type: text/plain

Here is something very simple that I've just done to test it.
Its pleasingly cool - I can connect to it with my Mac and publish
my calendar to it.

Now - the question *I* have is how do I run a webdav directory
in a twisted webserver. If it used server.Site it would just be a
a matter of putChild but can you run multiple Site's on a single
port?

cheers

mark

# -*- python -*-
from twisted.application import service, internet
from akadav import davresource,davserver




application = service.Application("mjserv")

root = davresource.WebDAV("/home/markw")
webServer = internet.TCPServer(8001, davserver.Site( root ) )
webServer.setServiceParent(application)



**************************************************************************

Experience the British Library online at www.bl.uk 

Help the British Library conserve the world's knowledge. Adopt a Book.
www.bl.uk/adoptabook 

*************************************************************************

The information contained in this e-mail is confidential and may be legally
privileged. It is intended for the addressee(s) only. If you are not the
intended recipient, please delete this e-mail and notify the
postmaster@bl.uk : The contents of this e-mail must not be disclosed or
copied without the sender's consent. 

The statements and opinions expressed in this message are those of the
author and do not necessarily reflect those of the British Library. The
British Library does not take any responsibility for the views of the
author. 

************************************************************************* 


