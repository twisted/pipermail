From jack at chesspark.com  Tue Apr  7 11:46:48 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 11:47:23 2009
Subject: [Twisted-web] some questions about twisted.web
Message-ID: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>

I just wrote a simple tool to make my AJAX app development cycle
better.  It's a tiny web server that serves up the current directory
along side some reverse proxies.  You can find the current code here:

http://github.com/metajack/tape/tree/master

In writing this I ran into a number of issues with twisted.web.  I'm
pretty sure some of these are bugs, but I wanted to get some feedback
here before I filed them.

* HTTPFactory seems only able to log to files.  It takes a path name,
not a file like object.  This makes it very difficult to log to
stdout, as I have to override log() in my own class.  This in turns
means cherry picking a global out of twisted.web - fun!

* log() never gets called when a ReverseProxyResource is used.  It
appears as though request.finish() is never called, though I wasn't
able to fully track this down.  I find this behavior very odd.

* static.File, when given a directory, creates instances of itself to
handle children.  This code completely fails for me with when I
subclassed static.File.  Note that my class only has a few
construction parameters, while static.File has 5.  This is not
documented.  It would be nice if the code could detect this case and
tell me that I have to overload createSimilarFile.

* The only way to stick something in the tree at an arbitrary location
seems to be to walk the tree to that spot, creating dummy locations as
you go.  I find it extremely weird coming from several other web
frameworks.  There is nothing else but the concept of "hey you!  get
me child X". This makes it pretty hard to implement anything better
than walking the tree since state would have to be collected over the
traversal.

* Related to the above, the handling of foo vs. foo/ is pretty
confusing.  foo/ is considered the '' child of foo.  This is pretty
yuck to me.  Unfortunately, I don't have any creative suggestions
about how to do it better right now.

* ReverseProxyResource returns nothing if you don't give it a '/' at
the end.  I had to work around this by doing a redirect in the
subclass and then returning a new ReverseProxyResource when the ''
child is accessed.  It seems that if ReverseProxyResource's path is
'', it just keels over with no error.


These combined to make what should have been a few lines of code and
an hour into 3-4 hours and almost 150+ lines.  Most of the time I
spent tracing through the Twisted source trying out figure out where
the weird stuff was coming from.  And after all that logging still
doesn't work right.

jack.

From michal.dtz at gmail.com  Tue Apr  7 12:37:36 2009
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgiBQYXN0ZXJuYWs=?=)
Date: Tue Apr  7 12:38:22 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
Message-ID: <49DB8150.1080300@gmail.com>

SmFjayBNb2ZmaXR0IHBpc3plOgo+IEkganVzdCB3cm90ZSBhIHNpbXBsZSB0b29sIHRvIG1ha2Ug
bXkgQUpBWCBhcHAgZGV2ZWxvcG1lbnQgY3ljbGUKPiBiZXR0ZXIuICBJdCdzIGEgdGlueSB3ZWIg
c2VydmVyIHRoYXQgc2VydmVzIHVwIHRoZSBjdXJyZW50IGRpcmVjdG9yeQo+IGFsb25nIHNpZGUg
c29tZSByZXZlcnNlIHByb3hpZXMuICBZb3UgY2FuIGZpbmQgdGhlIGN1cnJlbnQgY29kZSBoZXJl
Ogo+Cj4gaHR0cDovL2dpdGh1Yi5jb20vbWV0YWphY2svdGFwZS90cmVlL21hc3Rlcgo+Cj4gSW4g
d3JpdGluZyB0aGlzIEkgcmFuIGludG8gYSBudW1iZXIgb2YgaXNzdWVzIHdpdGggdHdpc3RlZC53
ZWIuICBJJ20KPiBwcmV0dHkgc3VyZSBzb21lIG9mIHRoZXNlIGFyZSBidWdzLCBidXQgSSB3YW50
ZWQgdG8gZ2V0IHNvbWUgZmVlZGJhY2sKPiBoZXJlIGJlZm9yZSBJIGZpbGVkIHRoZW0uCj4KPiAq
IEhUVFBGYWN0b3J5IHNlZW1zIG9ubHkgYWJsZSB0byBsb2cgdG8gZmlsZXMuICBJdCB0YWtlcyBh
IHBhdGggbmFtZSwKPiBub3QgYSBmaWxlIGxpa2Ugb2JqZWN0LiAgVGhpcyBtYWtlcyBpdCB2ZXJ5
IGRpZmZpY3VsdCB0byBsb2cgdG8KPiBzdGRvdXQsIGFzIEkgaGF2ZSB0byBvdmVycmlkZSBsb2co
KSBpbiBteSBvd24gY2xhc3MuICBUaGlzIGluIHR1cm5zCj4gbWVhbnMgY2hlcnJ5IHBpY2tpbmcg
YSBnbG9iYWwgb3V0IG9mIHR3aXN0ZWQud2ViIC0gZnVuIQo+ICAgCgpXaGVuIHlvdSBzdGFydCB5
b3VyIGFwcGxpY2F0aW9uOgoKICAgIGZyb20gdHdpc3RlZC5weXRob24gaW1wb3J0IGxvZwogICAg
bG9nLnN0YXJ0TG9nZ2luZyhzeXMuc3Rkb3V0KQoKT3IsIGV2ZW4gYmV0dGVyLCBjcmVhdGUgYW4g
QXBwbGljYXRpb24gb2JqZWN0IGFuZCB1c2UgdHdpc3RkKDEpIHRvIHN0YXJ0IAp5b3VyIHNlcnZp
Y2UuIFVzaW5nIHR3aXN0ZCgxKSwgeW91IGhhdmUgYSBjaG9pY2UgdG8gZGFlbW9uaXplIHlvdXIg
CnByb2Nlc3Mgb3Igbm90LgoKPiAqIHN0YXRpYy5GaWxlLCB3aGVuIGdpdmVuIGEgZGlyZWN0b3J5
LCBjcmVhdGVzIGluc3RhbmNlcyBvZiBpdHNlbGYgdG8KPiBoYW5kbGUgY2hpbGRyZW4uICBUaGlz
IGNvZGUgY29tcGxldGVseSBmYWlscyBmb3IgbWUgd2l0aCB3aGVuIEkKPiBzdWJjbGFzc2VkIHN0
YXRpYy5GaWxlLiAgTm90ZSB0aGF0IG15IGNsYXNzIG9ubHkgaGFzIGEgZmV3Cj4gY29uc3RydWN0
aW9uIHBhcmFtZXRlcnMsIHdoaWxlIHN0YXRpYy5GaWxlIGhhcyA1LiAgVGhpcyBpcyBub3QKPiBk
b2N1bWVudGVkLiAgCgpodHRwOi8vZ2x5cGgudHdpc3RlZG1hdHJpeC5jb20vMjAwOS8wNC9teS10
aW1lLWF0LXB5Y29uLmh0bWwKCiIiIgpUaGVzZSBzZXNzaW9ucyBoZWxwZWQgdG8gcmVpbmZvcmNl
IGZvciBtZSB0aGUgbmVlZCB0byByZXBlYXQgdGhpcyAKZnJlcXVlbnRseSBmb3Igb3VyIHVzZXJz
OiBpZiBUd2lzdGVkIGlzIGRvaW5nIHNvbWV0aGluZyB3aGljaCBjb25mdXNlcyAKeW91IGJ1dCBz
ZWVtcyB3cm9uZywgcGxlYXNlIGdvIGFoZWFkIGFuZCBmaWxlIGEgYnVnIG9uIHR3aXN0ZWRtYXRy
aXguY29tIAo8aHR0cDovL3R3aXN0ZWRtYXRyaXguY29tLz4uICBJZiB5b3UncmUgd3JvbmcsIGFu
ZCBUd2lzdGVkIGlzIHdvcmtpbmcgCnByb3Blcmx5LCB0aGVyZSdzIHN0aWxsIGEgYnVnLCBpdCdz
IGp1c3QgYSBidWcgaW4gdGhlIGRvY3VtZW50YXRpb24uICBJZiAKdGhlIGRvY3VtZW50YXRpb24g
d2VyZSBwZXJmZWN0IHByZXN1bWFibHkgeW91IHdvdWxkIHVuZGVyc3RhbmQgd2h5IGl0J3MgCmRv
aW5nIHdoYXQgaXQncyBkb2luZy4gIEV2ZW4gaWYgd2UgdWx0aW1hdGVseSBkZWNpZGUgdGhhdCB0
aGUgCmRvY3VtZW50YXRpb24gaXMgc3VmZmljaWVudCwgYnkgYWRkaW5nIGEgYnVnIGluIGEgdHJh
Y2tlciwgeW91J3ZlIHRvbGQgCkdvb2dsZSB0aGF0IHBlb3BsZSB3aXRoIHlvdXIgcXVlc3Rpb24g
c2hvdWxkIGZpbmQgdGhlIGRvY3VtZW50IHdlIHJlZmVyIAp0byBpbiBvdXIgY29tbWVudHMsIHNv
IHRoZXJlJ3Mgc3RpbGwgdmFsdWUuCgoiIiIKCgo+ICogVGhlIG9ubHkgd2F5IHRvIHN0aWNrIHNv
bWV0aGluZyBpbiB0aGUgdHJlZSBhdCBhbiBhcmJpdHJhcnkgbG9jYXRpb24KPiBzZWVtcyB0byBi
ZSB0byB3YWxrIHRoZSB0cmVlIHRvIHRoYXQgc3BvdCwgY3JlYXRpbmcgZHVtbXkgbG9jYXRpb25z
IGFzCj4geW91IGdvLiAgCgpPdmVycmlkZSBsb2NhdGVDaGlsZAoKPiBJIGZpbmQgaXQgZXh0cmVt
ZWx5IHdlaXJkIGNvbWluZyBmcm9tIHNldmVyYWwgb3RoZXIgd2ViCj4gZnJhbWV3b3Jrcy4gIAoK
VHdpc3RlZCBpbml0aWFsbHkgc2VlbXMgdmVyeSBkaWZmZXJlbnQsIG5vIG1hdHRlciB3aGF0IGZy
YW1ld29yayB5b3UgCmNhbWUgZnJvbS4KCj4gKiBSZWxhdGVkIHRvIHRoZSBhYm92ZSwgdGhlIGhh
bmRsaW5nIG9mIGZvbyB2cy4gZm9vLyBpcyBwcmV0dHkKPiBjb25mdXNpbmcuICBmb28vIGlzIGNv
bnNpZGVyZWQgdGhlICcnIGNoaWxkIG9mIGZvby4gIFRoaXMgaXMgcHJldHR5Cj4geXVjayB0byBt
ZS4gIFVuZm9ydHVuYXRlbHksIEkgZG9uJ3QgaGF2ZSBhbnkgY3JlYXRpdmUgc3VnZ2VzdGlvbnMK
PiBhYm91dCBob3cgdG8gZG8gaXQgYmV0dGVyIHJpZ2h0IG5vdy4KPiAgIAoKYWRkU2xhc2ggPSBU
cnVlCgotLSAKbQoKLS0tLS0tLS0tLS0tLS0gbmV4dCBwYXJ0IC0tLS0tLS0tLS0tLS0tCkFuIEhU
TUwgYXR0YWNobWVudCB3YXMgc2NydWJiZWQuLi4KVVJMOiBodHRwOi8vdHdpc3RlZG1hdHJpeC5j
b20vcGlwZXJtYWlsL3R3aXN0ZWQtd2ViL2F0dGFjaG1lbnRzLzIwMDkwNDA3L2MyYTdhMmMxL2F0
dGFjaG1lbnQuaHRtCg==
From jack at chesspark.com  Tue Apr  7 12:57:37 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 12:58:10 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <49DB8150.1080300@gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
Message-ID: <9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>

> When you start your application:
>
> ??? from twisted.python import log
> ??? log.startLogging(sys.stdout)

Now I've just deluged the poor user with lots of factory start and
stops.  All I want is normal HTTP style logs.  Twisted's logging
infrastructure has its place, but it is not quite ready to produce
user friendly output for a simple utility.

> Or, even better, create an Application object and use twistd(1) to start
> your service. Using twistd(1), you have a choice to daemonize your process
> or not.

Great, now the user has to edit a tac file just to configure the
thing.  I'd rather them be able to type "tape" and not have to worry
about twistd -ny some.tac.  I use tac files a lot, but they don't make
much sense for simple utilities.  It sucks that it's either/or with
Twisted applications.

> These sessions helped to reinforce for me the need to repeat this frequently
> for our users: if Twisted is doing something which confuses you but seems
> wrong,?please?go ahead and file a bug on?twistedmatrix.com.

This mailing list should be indexed by Google as well.  I do plan to
file the bugs we find here as well.

> * The only way to stick something in the tree at an arbitrary location
> seems to be to walk the tree to that spot, creating dummy locations as
> you go.
>
> Override locateChild

What is that?   I see no such function:
Not in IResource:
http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html

Not in the server.Site:
http://twistedmatrix.com/documents/current/api/twisted.web.server.Site.html

grep -r doesn't show it in the twisted/web or any child directories.
Not even in SVN trunk.

> I find it extremely weird coming from several other web
> frameworks.
>
> Twisted initially seems very different, no matter what framework you came
> from.

I grok Twisted just fine.  This may be my first post to twisted-web,
but I've been hacking on and around Twisted for some time.  Even
Apache doesn't work this way.  I can tell apache that my proxy is at
/some/url/over/here and it will work.  It will return 404s for the
intermediate URLs.  Because Resources only have immediate children and
paths are only dealt with in single element pieces, there doesn't seem
to be a way to do this in Twisted Web.  It feels weird that the tree
must be complete.  It feels weird that paths are dealt with in tiny
sections.

> * Related to the above, the handling of foo vs. foo/ is pretty
> confusing.  foo/ is considered the '' child of foo.  This is pretty
> yuck to me.  Unfortunately, I don't have any creative suggestions
> about how to do it better right now.
>
> addSlash = True

This does not exist in Resource or in server.Site.  What am I missing?
 It's not mentioned in the docs either.

I see that static.File has an addSlash method, but this doesn't seem
to be hooked up to anything.

jack.

From p.mayers at imperial.ac.uk  Tue Apr  7 13:10:52 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue Apr  7 13:11:28 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
Message-ID: <49DB891C.9090604@imperial.ac.uk>

Jack Moffitt wrote:
>> When you start your application:
>>
>>     from twisted.python import log
>>     log.startLogging(sys.stdout)
> 
> Now I've just deluged the poor user with lots of factory start and
> stops.  All I want is normal HTTP style logs.  Twisted's logging
> infrastructure has its place, but it is not quite ready to produce
> user friendly output for a simple utility.

That's probably a bug/feature request.

> 
>> Or, even better, create an Application object and use twistd(1) to start
>> your service. Using twistd(1), you have a choice to daemonize your process
>> or not.
> 
> Great, now the user has to edit a tac file just to configure the
> thing.  I'd rather them be able to type "tape" and not have to worry
> about twistd -ny some.tac.  I use tac files a lot, but they don't make
> much sense for simple utilities.  It sucks that it's either/or with
> Twisted applications.

I'm assuming "tape" is your application?

> 
>> These sessions helped to reinforce for me the need to repeat this frequently
>> for our users: if Twisted is doing something which confuses you but seems
>> wrong, please go ahead and file a bug on twistedmatrix.com.
> 
> This mailing list should be indexed by Google as well.  I do plan to
> file the bugs we find here as well.
> 
>> * The only way to stick something in the tree at an arbitrary location
>> seems to be to walk the tree to that spot, creating dummy locations as
>> you go.
>>
>> Override locateChild
> 
> What is that?   I see no such function:
> Not in IResource:
> http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html
> 
> Not in the server.Site:
> http://twistedmatrix.com/documents/current/api/twisted.web.server.Site.html
> 
> grep -r doesn't show it in the twisted/web or any child directories.
> Not even in SVN trunk.

It's in nevow's appserver/resource sub-classes, not in t.web; not that 
this helps you of course.

Basically, you're right - the resource dispatch in t.web is, to say the 
least, difficult. Sadly, you need to change both the http server, 
channel and request code to alter it (which is what Nevow does)

> 
>> I find it extremely weird coming from several other web
>> frameworks.
>>
>> Twisted initially seems very different, no matter what framework you came
>> from.
> 
> I grok Twisted just fine.  This may be my first post to twisted-web,
> but I've been hacking on and around Twisted for some time.  Even
> Apache doesn't work this way.  I can tell apache that my proxy is at
> /some/url/over/here and it will work.  It will return 404s for the
> intermediate URLs.  Because Resources only have immediate children and
> paths are only dealt with in single element pieces, there doesn't seem
> to be a way to do this in Twisted Web.  It feels weird that the tree
> must be complete.  It feels weird that paths are dealt with in tiny
> sections.

I believe the eventual plan is to have t.web use the nevow appserver & 
resource model, with backwards compatibility stubs.

> 
>> * Related to the above, the handling of foo vs. foo/ is pretty
>> confusing.  foo/ is considered the '' child of foo.  This is pretty
>> yuck to me.  Unfortunately, I don't have any creative suggestions
>> about how to do it better right now.
>>
>> addSlash = True
> 
> This does not exist in Resource or in server.Site.  What am I missing?
>  It's not mentioned in the docs either.

Again, that's a nevow thing. This does have an equivalent in t.web - set

isLeaf = True

Basically, you want the nevow resource model. Sadly, that loses you the 
easy render_METHOD helpers, though you can easily re-add them by hooking 
renderHTTP and dispatching on a base class.

To the devs: If there are a list of tickets for bringing the nevow stuff 
into t.web, I'd probably be able to spend some time working on them.

From jack at chesspark.com  Tue Apr  7 14:57:50 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 14:58:23 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <49DB891C.9090604@imperial.ac.uk>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DB891C.9090604@imperial.ac.uk>
Message-ID: <9b58f4550904071157g129aef70p3e7dc116d82f71c4@mail.gmail.com>

>> Now I've just deluged the poor user with lots of factory start and
>> stops. ?All I want is normal HTTP style logs. ?Twisted's logging
>> infrastructure has its place, but it is not quite ready to produce
>> user friendly output for a simple utility.
>
> That's probably a bug/feature request.

I think such bugs exist, but in case they don't, I'll file it.  There
just needs to be some control on what I want to see without having to
subclass every bit of twisted to turn it off.  For the most part I've
not cared so much because we generate so much of our own logging in
the daemons we build that the extra noise is negligible  For end user
logs though, anything more than the bare minimum is quickly
overwhelming.  ejabberd (and many other Erlang apps) have this same
problem.

>> Great, now the user has to edit a tac file just to configure the
>> thing. ?I'd rather them be able to type "tape" and not have to worry
>> about twistd -ny some.tac. ?I use tac files a lot, but they don't make
>> much sense for simple utilities. ?It sucks that it's either/or with
>> Twisted applications.
>
> I'm assuming "tape" is your application?

Yes.  And by application, it's 150 lines in one file.  Command line
user oriented XMPP tools are another area where I hit this problem a
lot.  I essentially am reduced to bootstrapping all the infrastructure
myself when twistd doesn't fit the problem.  It makes simple examples
very difficult to construct or blog about.  All that dumb code gets in
the way.  Writing Twisted daemons is beautiful, and clients should be
too.

> Basically, you're right - the resource dispatch in t.web is, to say the
> least, difficult. Sadly, you need to change both the http server, channel
> and request code to alter it (which is what Nevow does)
[and later...]
> I believe the eventual plan is to have t.web use the nevow appserver &
> resource model, with backwards compatibility stubs.

So we have Woven, Nevow, web, and web2.  It's a giant mess.  It's
unclear to users which thing is the current thing, although there has
been quite a bit of everyone pointing to twisted.web lately.  They all
have their own problems, and it's not clear to me that backwards
compatibility is a great thing here.   The problem space is well
understood now, or at least better understood than several years back,
and most of these were designed beforehand.   Let legacy users add
"from twisted.legacy import web" and let's make something actually
useful in its place.

What I love about twisted.web is that for the most part, it's
extremely simple and easy to work with.  I should note that it's
awesome that I was able to write a small proxying web server in so few
lines.  It's just slightly frustrating that it is plagued by all these
little issues.

jack.

From michal.dtz at gmail.com  Tue Apr  7 15:08:56 2009
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgiBQYXN0ZXJuYWs=?=)
Date: Tue Apr  7 15:09:35 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
Message-ID: <49DBA4C8.9080508@gmail.com>

SmFjayBNb2ZmaXR0IHBpc3plOgo+PiBXaGVuIHlvdSBzdGFydCB5b3VyIGFwcGxpY2F0aW9uOgo+
Pgo+PiAgICAgZnJvbSB0d2lzdGVkLnB5dGhvbiBpbXBvcnQgbG9nCj4+ICAgICBsb2cuc3RhcnRM
b2dnaW5nKHN5cy5zdGRvdXQpCj4+ICAgICAKPgo+IE5vdyBJJ3ZlIGp1c3QgZGVsdWdlZCB0aGUg
cG9vciB1c2VyIHdpdGggbG90cyBvZiBmYWN0b3J5IHN0YXJ0IGFuZAo+IHN0b3BzLiAgQWxsIEkg
d2FudCBpcyBub3JtYWwgSFRUUCBzdHlsZSBsb2dzLiAgVHdpc3RlZCdzIGxvZ2dpbmcKPiBpbmZy
YXN0cnVjdHVyZSBoYXMgaXRzIHBsYWNlLCBidXQgaXQgaXMgbm90IHF1aXRlIHJlYWR5IHRvIHBy
b2R1Y2UKPiB1c2VyIGZyaWVuZGx5IG91dHB1dCBmb3IgYSBzaW1wbGUgdXRpbGl0eS4KPiAgIAoK
dHdpc3RkKDEpIHN0YXJ0cyBsb2dnaW5nIGF1dG9tYXRpY2FsbHksIGdpdmluZyB5b3UgYSBjb21t
YW5kIGxpbmUgb3B0aW9uIAp0byByZWRpcmVjdCB0aGUgbG9ncyB0byBhIGZpbGUuCgo+PiBPciwg
ZXZlbiBiZXR0ZXIsIGNyZWF0ZSBhbiBBcHBsaWNhdGlvbiBvYmplY3QgYW5kIHVzZSB0d2lzdGQo
MSkgdG8gc3RhcnQKPj4geW91ciBzZXJ2aWNlLiBVc2luZyB0d2lzdGQoMSksIHlvdSBoYXZlIGEg
Y2hvaWNlIHRvIGRhZW1vbml6ZSB5b3VyIHByb2Nlc3MKPj4gb3Igbm90Lgo+PiAgICAgCj4KPiBH
cmVhdCwgbm93IHRoZSB1c2VyIGhhcyB0byBlZGl0IGEgdGFjIGZpbGUganVzdCB0byBjb25maWd1
cmUgdGhlCj4gdGhpbmcuCgp0YWMgZmlsZXMgYXJlIHN0YW5kYXJkIFB5dGhvbiBmaWxlcy4gdHdp
c3RkKDEpIGlzIGFsc28gYSBzdGFuZGFyZCB3YXkgdG8gCmRlcGxveSBUd2lzdGVkIGFwcGxpY2F0
aW9ucy4gSWYgeW91IHdhbnQgdGhlIHVzZXIganVzdCB0byBydW4gYSBmaWxlIAp3aXRoIFB5dGhv
biwgeW91IHdpbGwgY29weSBhIGxvdCBvZiB0aGluZ3MgdGhhdCB0d2lzdGQoMSkgYWxyZWFkeSBk
b2VzLgoKPiAgIEknZCByYXRoZXIgdGhlbSBiZSBhYmxlIHRvIHR5cGUgInRhcGUiIGFuZCBub3Qg
aGF2ZSB0byB3b3JyeQo+IGFib3V0IHR3aXN0ZCAtbnkgc29tZS50YWMuCgokIGVjaG8gInR3aXN0
ZCAtbnkgdGFwZS50YWMiID4gdGFwZTsgY2htb2QgK3ggLi90YXBlOyBleHBvcnQgUEFUSD0uOiRQ
QVRICgo+IEkgdXNlIHRhYyBmaWxlcyBhIGxvdCwgYnV0IHRoZXkgZG9uJ3QgbWFrZQo+IG11Y2gg
c2Vuc2UgZm9yIHNpbXBsZSB1dGlsaXRpZXMuICAKCk9mIGNvdXJzZS4gVGhhdCdzIHdoeSB0d2lz
dGQoMSkgbGV0cyB5b3Ugc3RhcnQgdGhpbmdzIHJpZ2h0IG9mZiB0aGUgCmNvbW1hbmQgbGluZS4K
Cj4+ICogVGhlIG9ubHkgd2F5IHRvIHN0aWNrIHNvbWV0aGluZyBpbiB0aGUgdHJlZSBhdCBhbiBh
cmJpdHJhcnkgbG9jYXRpb24KPj4gc2VlbXMgdG8gYmUgdG8gd2FsayB0aGUgdHJlZSB0byB0aGF0
IHNwb3QsIGNyZWF0aW5nIGR1bW15IGxvY2F0aW9ucyBhcwo+PiB5b3UgZ28uCj4+Cj4+IE92ZXJy
aWRlIGxvY2F0ZUNoaWxkCj4+ICAgICAKPgo+IFdoYXQgaXMgdGhhdD8gICBJIHNlZSBubyBzdWNo
IGZ1bmN0aW9uOgo+IE5vdCBpbiBJUmVzb3VyY2U6Cj4gaHR0cDovL3R3aXN0ZWRtYXRyaXguY29t
L2RvY3VtZW50cy9jdXJyZW50L2FwaS90d2lzdGVkLndlYi5yZXNvdXJjZS5JUmVzb3VyY2UuaHRt
bAo+ICAgCgpBaGguIFlvdSdyZSB1c2luZyB0d2lzdGVkLndlYiAuIEkgdGhvdWdodCB5b3UncmUg
dXNpbmcgTmV2b3cuIE5ldm93J3MgCnJlbmQuUGFnZQpodHRwOi8vc3RhcnNoaXAucHl0aG9uLm5l
dC9jcmV3L213aC9uZXZvd2FwaS9uZXZvdy5yZW5kLlBhZ2UuaHRtbAoKPj4gKiBSZWxhdGVkIHRv
IHRoZSBhYm92ZSwgdGhlIGhhbmRsaW5nIG9mIGZvbyB2cy4gZm9vLyBpcyBwcmV0dHkKPj4gY29u
ZnVzaW5nLiAgZm9vLyBpcyBjb25zaWRlcmVkIHRoZSAnJyBjaGlsZCBvZiBmb28uICBUaGlzIGlz
IHByZXR0eQo+PiB5dWNrIHRvIG1lLiAgVW5mb3J0dW5hdGVseSwgSSBkb24ndCBoYXZlIGFueSBj
cmVhdGl2ZSBzdWdnZXN0aW9ucwo+PiBhYm91dCBob3cgdG8gZG8gaXQgYmV0dGVyIHJpZ2h0IG5v
dy4KPj4KPj4gYWRkU2xhc2ggPSBUcnVlCj4+ICAgICAKPgo+IFRoaXMgZG9lcyBub3QgZXhpc3Qg
aW4gUmVzb3VyY2Ugb3IgaW4gc2VydmVyLlNpdGUuICBXaGF0IGFtIEkgbWlzc2luZz8KPiAgSXQn
cyBub3QgbWVudGlvbmVkIGluIHRoZSBkb2NzIGVpdGhlci4KPiAgIAoKU2VlIGFib3ZlLgoKLS0g
Cm0KCi0tLS0tLS0tLS0tLS0tIG5leHQgcGFydCAtLS0tLS0tLS0tLS0tLQpBbiBIVE1MIGF0dGFj
aG1lbnQgd2FzIHNjcnViYmVkLi4uClVSTDogaHR0cDovL3R3aXN0ZWRtYXRyaXguY29tL3BpcGVy
bWFpbC90d2lzdGVkLXdlYi9hdHRhY2htZW50cy8yMDA5MDQwNy9jMWZhMGFhOC9hdHRhY2htZW50
LTAwMDEuaHRtCg==
From jack at chesspark.com  Tue Apr  7 15:19:51 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 15:20:24 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <49DBA4C8.9080508@gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
Message-ID: <9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>

> twistd(1) starts logging automatically, giving you a command line option to
> redirect the logs to a file.

Yes I know.  And it has lots of information in those logs that I care
nothing about, and no way to filter them without doing a lot of
subclassing.  I'm trying to make software users can use without
getting lots of noise in their face.

> Great, now the user has to edit a tac file just to configure the
> thing.
>
> tac files are standard Python files. twistd(1) is also a standard way to
> deploy Twisted applications. If you want the user just to run a file with
> Python, you will copy a lot of things that twistd(1) already does.

Standard python files are not good user interfaces.  Sorry.  I realize
I have to copy some stuff twistd does, but if my goal is to make
friendly software, then that's what I have to do.

>   I'd rather them be able to type "tape" and not have to worry
> about twistd -ny some.tac.
>
> $ echo "twistd -ny tape.tac" > tape; chmod +x ./tape; export PATH=.:$PATH

tac files are configuration files.  If I have to load configuration
files in the configuration file, isn't that defeating the point?  I
don't want the user to have to hand edit a tac file to change the
listening port or which urls to reverse proxy.  That's the whole
problem I'm trying to solve here in the first place.  twistd cannot
take arbitrary command line options, and the Twisted core guys have
told others that would e doing it wrong besides.

jack.

From michal.dtz at gmail.com  Tue Apr  7 15:21:28 2009
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgiBQYXN0ZXJuYWs=?=)
Date: Tue Apr  7 15:22:07 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071157g129aef70p3e7dc116d82f71c4@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>	<49DB8150.1080300@gmail.com>	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>	<49DB891C.9090604@imperial.ac.uk>
	<9b58f4550904071157g129aef70p3e7dc116d82f71c4@mail.gmail.com>
Message-ID: <49DBA7B8.4030208@gmail.com>

SmFjayBNb2ZmaXR0IHBpc3plOgoKPiBTbyB3ZSBoYXZlIFdvdmVuLCAKCkRlcHJlY2F0ZWQuCgo+
IE5ldm93LCAKCldvcmtzIGZpbmUuCgo+IHdlYiwgCgpXb3JrcyBmaW5lLgoKPiBhbmQgd2ViMi4g
IAoKTm8sIHdlIHdvbid0IGhhdmUgd2ViMi4gaHR0cDovL3R3aXN0ZWRtYXRyaXguY29tL3RyYWMv
d2lraS9Ud2lzdGVkV2ViUGxhbgoKPiBJdCdzIGEgZ2lhbnQgbWVzcy4KCkkgZG9uJ3QgdGhpbmsg
c28uCgotLSAKbQoKLS0tLS0tLS0tLS0tLS0gbmV4dCBwYXJ0IC0tLS0tLS0tLS0tLS0tCkFuIEhU
TUwgYXR0YWNobWVudCB3YXMgc2NydWJiZWQuLi4KVVJMOiBodHRwOi8vdHdpc3RlZG1hdHJpeC5j
b20vcGlwZXJtYWlsL3R3aXN0ZWQtd2ViL2F0dGFjaG1lbnRzLzIwMDkwNDA3LzY0ZmE2MWM4L2F0
dGFjaG1lbnQuaHRtCg==
From jack at chesspark.com  Tue Apr  7 15:32:19 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 15:32:51 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <49DBA7B8.4030208@gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DB891C.9090604@imperial.ac.uk>
	<9b58f4550904071157g129aef70p3e7dc116d82f71c4@mail.gmail.com>
	<49DBA7B8.4030208@gmail.com>
Message-ID: <9b58f4550904071232p23e2e3c9y712ae589b38bd648@mail.gmail.com>

>> It's a giant mess.
>
> I don't think so.

Keep smoking whatever it is that you're smoking.  It's better than my
stuff.  I bet you have unicorns for pets, too.

jack.

From michal.dtz at gmail.com  Tue Apr  7 15:34:39 2009
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgiBQYXN0ZXJuYWs=?=)
Date: Tue Apr  7 15:35:17 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>	<49DB8150.1080300@gmail.com>	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
Message-ID: <49DBAACF.2010806@gmail.com>

SmFjayBNb2ZmaXR0IHBpc3plOgo+PiB0d2lzdGQoMSkgc3RhcnRzIGxvZ2dpbmcgYXV0b21hdGlj
YWxseSwgZ2l2aW5nIHlvdSBhIGNvbW1hbmQgbGluZSBvcHRpb24gdG8KPj4gcmVkaXJlY3QgdGhl
IGxvZ3MgdG8gYSBmaWxlLgo+PiAgICAgCj4KPiBZZXMgSSBrbm93LiAgQW5kIGl0IGhhcyBsb3Rz
IG9mIGluZm9ybWF0aW9uIGluIHRob3NlIGxvZ3MgdGhhdCBJIGNhcmUKPiBub3RoaW5nIGFib3V0
LCBhbmQgbm8gd2F5IHRvIGZpbHRlciB0aGVtIHdpdGhvdXQgZG9pbmcgYSBsb3Qgb2YKPiBzdWJj
bGFzc2luZy4gCgpsb2cuYWRkT2JzZXJ2ZXIKCj4gU3RhbmRhcmQgcHl0aG9uIGZpbGVzIGFyZSBu
b3QgZ29vZCB1c2VyIGludGVyZmFjZXMuICBTb3JyeS4gIEkgcmVhbGl6ZQo+IEkgaGF2ZSB0byBj
b3B5IHNvbWUgc3R1ZmYgdHdpc3RkIGRvZXMsIGJ1dCBpZiBteSBnb2FsIGlzIHRvIG1ha2UKPiBm
cmllbmRseSBzb2Z0d2FyZSwgdGhlbiB0aGF0J3Mgd2hhdCBJIGhhdmUgdG8gZG8uCj4gICAKCldo
eSB3b24ndCB5b3Ugd3JpdGUgYW4gb3BlbnNvdXJjZSBHVUkgZm9yIHR3aXN0ZCgxKSB0aGVuPyBZ
b3UgY291bGQgCnJlbGVhc2UgYSBzaW1wbGlmaWVkIHZlcnNpb24gZm9yIHlvdXIgZW5kLXVzZXJz
IHRoZW4uCgpBdCB0aGUgbW9tZW50LCB0d2lzdGQoMSkgb24gbXkgbWFjaGluZSBhbGxvd3MgbWUg
dG8gcnVuIDE3IGRpZmZlcmVudCAKc2VydmljZXMsIGluY2x1ZGluZyBtYWlsLCB3ZWIsIGZ0cCBh
bmQgc3NoLiBJZiBpdCdzIGdvb2QgZm9yIHJ1bm5pbmcgCnRob3NlLCBJIGRvbid0IHNlZSB3aHkg
eW91ciBjb2RlIGNvdWxkbid0IGJlIG1hZGUgY29tcGF0aWJsZSB3aXRoIGl0LgoKPiB0YWMgZmls
ZXMgYXJlIGNvbmZpZ3VyYXRpb24gZmlsZXMuIElmIEkgaGF2ZSB0byBsb2FkIGNvbmZpZ3VyYXRp
b24KPiBmaWxlcyBpbiB0aGUgY29uZmlndXJhdGlvbiBmaWxlLCBpc24ndCB0aGF0IGRlZmVhdGlu
ZyB0aGUgcG9pbnQ/CgpJIGRvbid0IGtub3csIHdoYXQgcGxhdGZvcm0gYXJlIHlvdSBydW5uaW5n
PyBjaG1vZCAreCBhbmQgc2hlYmFuZyBzaG91bGQgCmRvIHRoZSB0cmljayBvbiBzb21lLCBzbyB5
b3Ugd2lsbCBoYXZlIGFuIGV4ZWN1dGFibGUgY29uZmlndXJhdGlvbiBmaWxlLCAKaG93IGFib3V0
IHRoYXQ/Cgo+IFRoYXQncyB0aGUgd2hvbGUKPiBwcm9ibGVtIEknbSB0cnlpbmcgdG8gc29sdmUg
aGVyZSBpbiB0aGUgZmlyc3QgcGxhY2UuICB0d2lzdGQgY2Fubm90Cj4gdGFrZSBhcmJpdHJhcnkg
Y29tbWFuZCBsaW5lIG9wdGlvbnMsCgp0d2lzdGQgY2FuIGRvIHRoYXQsIGp1c3QgYWRkIGEgcGx1
Z2luIGZvciBpdDoKaHR0cDovL3R3aXN0ZWRtYXRyaXguY29tL3Byb2plY3RzL2NvcmUvZG9jdW1l
bnRhdGlvbi9ob3d0by90YXAuaHRtbAoKLS0gCm0KLS0tLS0tLS0tLS0tLS0gbmV4dCBwYXJ0IC0t
LS0tLS0tLS0tLS0tCkFuIEhUTUwgYXR0YWNobWVudCB3YXMgc2NydWJiZWQuLi4KVVJMOiBodHRw
Oi8vdHdpc3RlZG1hdHJpeC5jb20vcGlwZXJtYWlsL3R3aXN0ZWQtd2ViL2F0dGFjaG1lbnRzLzIw
MDkwNDA3L2MxOTMxOGRkL2F0dGFjaG1lbnQuaHRtCg==
From bernat at luffy.cx  Tue Apr  7 15:42:04 2009
From: bernat at luffy.cx (Vincent Bernat)
Date: Tue Apr  7 15:42:11 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	(Jack Moffitt's message of "Tue, 7 Apr 2009 13:19:51 -0600")
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
Message-ID: <m3vdpgtfn7.fsf@neo.luffy.cx>

OoO  En ce d?but  de soir?e  du mardi  07 avril  2009, vers  21:19, Jack
Moffitt <jack@chesspark.com> disait?:

> tac files are configuration files.  If I have to load configuration
> files in the configuration file, isn't that defeating the point?  I
> don't want the user to have to hand edit a tac file to change the
> listening port or which urls to reverse proxy.  That's the whole
> problem I'm trying to solve here in the first place.  twistd cannot
> take arbitrary command line options, and the Twisted core guys have
> told others that would e doing it wrong besides.

You can pass arbitrary command line options by writing a plugin.
 http://twistedmatrix.com/projects/core/documentation/howto/tap.html
-- 
panic("Foooooooood fight!");
	2.2.16 /usr/src/linux/drivers/scsi/aha1542.c

From clemesha at gmail.com  Tue Apr  7 15:47:03 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Tue Apr  7 15:47:07 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071157g129aef70p3e7dc116d82f71c4@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DB891C.9090604@imperial.ac.uk>
	<9b58f4550904071157g129aef70p3e7dc116d82f71c4@mail.gmail.com>
Message-ID: <d272f0690904071247v42106a0fi98cf1a0307b4024a@mail.gmail.com>

>
> So we have Woven, Nevow, web, and web2. ?It's a giant mess.
Totally agreed, FWIW.

 ?It's
> unclear to users which thing is the current thing,
I was this user a couple years ago.  I knew that twisted had so much
more greatness that just web, but others may not.
I personally kept with it, which has paid off huge dividends.


although there has
> been quite a bit of everyone pointing to twisted.web lately. ?They all
> have their own problems, and it's not clear to me that backwards
> compatibility is a great thing here. ? The problem space is well
> understood now, or at least better understood than several years back,
> and most of these were designed beforehand. ? Let legacy users add
> "from twisted.legacy import web" and let's make something actually
> useful in its place.
Yes, please!


>
> What I love about twisted.web is that for the most part, it's
> extremely simple and easy to work with. ?I should note that it's
> awesome that I was able to write a small proxying web server in so few
> lines. ?It's just slightly frustrating that it is plagued by all these
> little issues.
Agreed++




-- 
Alex Clemesha
clemesha.org

From michal.dtz at gmail.com  Tue Apr  7 15:47:08 2009
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgiBQYXN0ZXJuYWs=?=)
Date: Tue Apr  7 15:47:46 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071232p23e2e3c9y712ae589b38bd648@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>	<49DB8150.1080300@gmail.com>	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>	<49DB891C.9090604@imperial.ac.uk>	<9b58f4550904071157g129aef70p3e7dc116d82f71c4@mail.gmail.com>	<49DBA7B8.4030208@gmail.com>
	<9b58f4550904071232p23e2e3c9y712ae589b38bd648@mail.gmail.com>
Message-ID: <49DBADBC.5060601@gmail.com>

SmFjayBNb2ZmaXR0IHBpc3plOgo+Pj4gSXQncyBhIGdpYW50IG1lc3MuCj4+PiAgICAgICAKPj4g
SSBkb24ndCB0aGluayBzby4KPj4gICAgIAo+Cj4gS2VlcCBzbW9raW5nIHdoYXRldmVyIGl0IGlz
IHRoYXQgeW91J3JlIHNtb2tpbmcuICBJdCdzIGJldHRlciB0aGFuIG15Cj4gc3R1ZmYuICBJIGJl
dCB5b3UgaGF2ZSB1bmljb3JucyBmb3IgcGV0cywgdG9vLgo+ICAgCgpJIGFtIHJlYWxseSBzb3Jy
eSBpZiB5b3UgZmVlbCBpbnN1bHRlZDsgaWYgc28gLS0gSSBkaWRuJ3QgbWVhbiBpdDsgCkVuZ2xp
c2ggaXMgbm90IG15IG5hdGl2ZSBsYW5ndWFnZSwgbWF5YmUgSSBkaWQgYSBtaXN0YWtlIHNvbWV3
aGVyZS4gSSBhbSAKdXNpbmcgVHdpc3RlZCBhbmQgRGl2bW9kIHNvZnR3YXJlIGZvciBzb21lIHRp
bWUuIEJlaW5nIGFibGUgdG8gY29tcGFyZSAKdGhvc2Ugd2l0aCBzb21lIG90aGVyIG9wZW5zb3Vy
Y2UgcHJvamVjdHMgb3V0IHRoZXJlLCBJIGRlZmluZXRsZXkgY2hvb3NlIAp0aGVtIG92ZXIgYW5v
dGhlciAtLSBhbHNvIGJlY2F1c2Ugb2YgY29uZmlndXJhYmlsaXR5IChtZW50aW9uZWQgCnR3aXN0
ZCgxKSBwcm9ncmFtIGlzIGEgd29uZGVyZnVsIGV4YW1wbGUgb2YgcGx1Z2dhYmxlIGFyY2hpdGVj
dHVyZSkgYW5kIApiYWNrd2FyZC1jb21wYXRpYmlsaXR5LiBJZiB5b3UgbmVlZCBhbnkgbW9yZSBo
ZWxwIG9uIHR3aXN0ZWQud2ViIGFuZCAKbmV2b3csIGZlZWwgZnJlZSB0byBwb3N0IHlvdXIgcXVl
c3Rpb25zIGhlcmUuCgpJIGp1c3QgZG9uJ3QgdGhpbmsgdGhhdCBkaXNzaW5nIGVmZm9ydHMgb2Yg
bWFueSBkZXZlbG9wZXJzIHRvIHdyaXRlIApiYWNrd2FyZHMtY29tcGF0aWJsZSBzb2Z0d2FyZSBi
eSBjYWxsaW5nIHRob3NlIGVmZm9ydHMgImEgZ2lhbnQgbWVzcyIgaXMgCmEgc2Vuc2libGUgdGhp
bmcuIFR3aXN0ZWQgaXMgb3BlbnNvdXJjZS4gWW91IGNhbiBmaWxlIGJ1Z3MgYW5kIHNlbmQgCnBh
dGNoZXMgYXQgaHR0cDovL3R3aXN0ZWRtYXRyaXguY29tLwoKLS0gCm0KLS0tLS0tLS0tLS0tLS0g
bmV4dCBwYXJ0IC0tLS0tLS0tLS0tLS0tCkFuIEhUTUwgYXR0YWNobWVudCB3YXMgc2NydWJiZWQu
Li4KVVJMOiBodHRwOi8vdHdpc3RlZG1hdHJpeC5jb20vcGlwZXJtYWlsL3R3aXN0ZWQtd2ViL2F0
dGFjaG1lbnRzLzIwMDkwNDA3Lzc1NjA0YTFmL2F0dGFjaG1lbnQtMDAwMS5odG0K
From jack at chesspark.com  Tue Apr  7 15:47:54 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 15:47:56 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <m3vdpgtfn7.fsf@neo.luffy.cx>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
Message-ID: <9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>

> You can pass arbitrary command line options by writing a plugin.
> ?http://twistedmatrix.com/projects/core/documentation/howto/tap.html

Which, as I recall, Glyph and others have discourged others from doing
this.  Perhaps I am mistaken, but if twistd is intended for this
purpose, why has this not become part of it all along?

This is disregarding the whole fact that none of already existing
twistd options are at all revelevant to my users, and only serve to
provide more noise.

jack.

From radeex at gmail.com  Tue Apr  7 15:58:17 2009
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue Apr  7 15:58:23 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
Message-ID: <60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>

Ugh. This thread is a mess. Can you guys quit the bullshit?


On Tue, Apr 7, 2009 at 3:47 PM, Jack Moffitt <jack@chesspark.com> wrote:
>> You can pass arbitrary command line options by writing a plugin.
>> ?http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
> Which, as I recall, Glyph and others have discourged others from doing
> this. ?Perhaps I am mistaken, but if twistd is intended for this
> purpose, why has this not become part of it all along?

I don't think anyone's discouraging twistd plugins. They're nice for
what they do. You may be thinking of mktap plugins. mktap is
deprecated.

I don't understand the grammar in "why has this not become part of it
all along". Are you suggesting use of a time machine? I would love to,
if you made one available to me.

> This is disregarding the whole fact that none of already existing
> twistd options are at all revelevant to my users, and only serve to
> provide more noise.

If this is a command line non-daemon application, then you're right.
twistd is not really geared towards those. There are some vague ideas
for helping people write tools like that in a way that makes sense,
but nothing very concrete.


As for your initial list of things, I encourage you to file them as
bugs (making sure you search for existing bugs first).  They look
pretty reasonable. Some of them are probably just documentation bugs.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/

From jack at chesspark.com  Tue Apr  7 16:12:40 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 16:13:13 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
Message-ID: <9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>

>> Which, as I recall, Glyph and others have discourged others from doing
>> this. ?Perhaps I am mistaken, but if twistd is intended for this
>> purpose, why has this not become part of it all along?
>
> I don't think anyone's discouraging twistd plugins. They're nice for
> what they do. You may be thinking of mktap plugins. mktap is
> deprecated.

I didn't mean that plugins were discouraged.  I meant that contortions
to allow twistd to take application specific command line options were
actively discouraged.  See the following threads:

http://twistedmatrix.com/pipermail/twisted-python/2006-June/013331.html
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010541.html
http://twistedmatrix.com/pipermail/twisted-python/2005-June/010857.html

These are pretty clear I think.  twistd is not intended for this use
case.  The alternative currently is to embed config file reading into
the tac (only solves part of the problem), or redo all the start up
application infrastructure that twistd makes so nice.

> I don't understand the grammar in "why has this not become part of it
> all along". Are you suggesting use of a time machine? I would love to,
> if you made one available to me.

What I meant is if writing a plugin for adding your own options to
twistd is the recommended solution, why doesn't twistd just do this
for us?  Surely someone would have done it by now. As we can see from
the threads above, it's not done because they don't want it done.   It
makes sense to me why this is so, and so I didn't attempt to do it
this way in Tape.

>> This is disregarding the whole fact that none of already existing
>> twistd options are at all revelevant to my users, and only serve to
>> provide more noise.
>
> If this is a command line non-daemon application, then you're right.
> twistd is not really geared towards those. There are some vague ideas
> for helping people write tools like that in a way that makes sense,
> but nothing very concrete.

It's a command line non-daemon app, but even if it were a temporary
helper daemon you launched now and then, it would still apply.
Twisted needs better help for this case, and that's what I've been
attempting to say here all along.

> As for your initial list of things, I encourage you to file them as
> bugs (making sure you search for existing bugs first). ?They look
> pretty reasonable. Some of them are probably just documentation bugs.

Will do.  Thanks for your feedback.

jack.

From clemesha at gmail.com  Tue Apr  7 16:16:46 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Tue Apr  7 16:16:49 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <49DBADBC.5060601@gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DB891C.9090604@imperial.ac.uk>
	<9b58f4550904071157g129aef70p3e7dc116d82f71c4@mail.gmail.com>
	<49DBA7B8.4030208@gmail.com>
	<9b58f4550904071232p23e2e3c9y712ae589b38bd648@mail.gmail.com>
	<49DBADBC.5060601@gmail.com>
Message-ID: <d272f0690904071316r4411a729paf9859a0566ef5c7@mail.gmail.com>

>
> I just don't think that dissing efforts of many developers to write
> backwards-compatible software by calling those efforts "a giant mess" is a
> sensible thing.
Quite frankly, I think "dissing" is the wrong word here.  It is a well
know fact acknowledged
by several twisted developers that the web situation is in fact "a
giant mess", but
as you probably know, there is significant effort going to remedy this.


Twisted is opensource. You can file bugs and send patches at
> http://twistedmatrix.com/
Not to come off as too much of a fanboy here, but Jack Moffitt does file
bugs and send patches.  Additionally, and just as important, he is an
excellent evangelist of Twisted.  Check out http://metajack.im/ and
see his articles on Twisted.  I for one look forward to reading them,
and they are important for the community.

I myself have not (yet!) sent patches for Twisted, but I'm a grateful
user that tries to give back in other ways.  I personally evangelize Twisted,
I have contribute a bit financially,  and I currently work at University of
California at San Diego on the Ocean Observatories Initiative (OOI [1])
project, and I have been pushing to make Twisted be a fundamental piece
in the project's cyberinfracstructure, because I absolutely think it is the
right tool for the job in many cases.

So, in summary, Twisted FTW :-)

thanks,
Alex

[1] http://www.oceanleadership.org/ocean_observing




-- 
Alex Clemesha
clemesha.org

From radix at twistedmatrix.com  Tue Apr  7 16:39:30 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue Apr  7 16:40:05 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
	<9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>
Message-ID: <60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>

On Tue, Apr 7, 2009 at 4:12 PM, Jack Moffitt <jack@chesspark.com> wrote:
>>> Which, as I recall, Glyph and others have discourged others from doing
>>> this. ?Perhaps I am mistaken, but if twistd is intended for this
>>> purpose, why has this not become part of it all along?
>>
>> I don't think anyone's discouraging twistd plugins. They're nice for
>> what they do. You may be thinking of mktap plugins. mktap is
>> deprecated.
>
> I didn't mean that plugins were discouraged. ?I meant that contortions
> to allow twistd to take application specific command line options were
> actively discouraged. ?See the following threads:
>
> http://twistedmatrix.com/pipermail/twisted-python/2006-June/013331.html
> http://twistedmatrix.com/pipermail/twisted-python/2005-May/010541.html
> http://twistedmatrix.com/pipermail/twisted-python/2005-June/010857.html
>
> These are pretty clear I think. ?twistd is not intended for this use
> case. ?The alternative currently is to embed config file reading into
> the tac (only solves part of the problem), or redo all the start up
> application infrastructure that twistd makes so nice.

I believe that all of those threads are in the context of tac files,
which are the things you use with the -y parameter to twistd. 'twistd
plugins' are a different thing, and one of the main design goals for
them was to take command line arguments. Also, those threads are very
old, and certain opinions may have changed. Anyway, I'm sure I know
about the intended usage for twistd plugins, because I implemented the
plugin system for twistd, and I did it with Jean-Paul's blessing. You
can trust me. :-)

I don't want to sound like I think twistd plugins are perfect, though.
They actually suck a lot, for various reasons. I hope you read my
words carefully and realize I'm only trying to clear up the piles upon
piles of miscommunication and bad advice in this thread by getting
some facts straight. For the record: I agree that the web with Twisted
situation is a mess, unlike Michal, and I think the TwistedWebPlan all
but admits that directly (hey, we have to be a *little* bit cheerful,
right?). A *lot* of work has gone into twisted.web-related stuff
recently, and a lot more is going to be put into it. This is mostly
thanks to people who have donated money to Twisted. If anyone wants
this work to continue, I strongly encourage you to donate (or get your
company to)!

If you want to do a personal donation, then you can use paypal or
Google Checkout by visiting

http://twistedmatrix.com/  (The donation area in on the left side,
right underneath the snakeball book).

More information about sponsorship is available at:

http://twistedmatrix.com/trac/wiki/TwistedSoftwareFoundation


>> I don't understand the grammar in "why has this not become part of it
>> all along". Are you suggesting use of a time machine? I would love to,
>> if you made one available to me.
>
> What I meant is if writing a plugin for adding your own options to
> twistd is the recommended solution, why doesn't twistd just do this
> for us? ?Surely someone would have done it by now.

I really can't understand you. The way I'm reading your first sentence
in this paragraph is so silly that I must be misreading the intention.
Maybe the problem is that you don't understand what twistd plugins
really are. If you care, I recommend reading the URL that Michal
referred to earlier:

http://twistedmatrix.com/projects/core/documentation/howto/tap.html

> As we can see from
> the threads above, it's not done because they don't want it done.   It
> makes sense to me why this is so, and so I didn't attempt to do it
> this way in Tape.

As I pointed out above, those threads are either about something else
or are no longer representative of current opinion.

>>> This is disregarding the whole fact that none of already existing
>>> twistd options are at all revelevant to my users, and only serve to
>>> provide more noise.
>>
>> If this is a command line non-daemon application, then you're right.
>> twistd is not really geared towards those. There are some vague ideas
>> for helping people write tools like that in a way that makes sense,
>> but nothing very concrete.
>
> It's a command line non-daemon app, but even if it were a temporary
> helper daemon you launched now and then, it would still apply.
> Twisted needs better help for this case, and that's what I've been
> attempting to say here all along.

I can't speak for the others in this thread, but if anyone denied that
Twisted needs help in the deployment or web areas, they're wrong. :-)

>> As for your initial list of things, I encourage you to file them as
>> bugs (making sure you search for existing bugs first). ?They look
>> pretty reasonable. Some of them are probably just documentation bugs.
>
> Will do. ?Thanks for your feedback.

You're welcome.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/

From radix at twistedmatrix.com  Tue Apr  7 16:42:21 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue Apr  7 16:42:55 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
	<9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>
	<60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>
Message-ID: <60ed19d40904071342k3b83eedr1f8bbdad5f408204@mail.gmail.com>

On Tue, Apr 7, 2009 at 4:39 PM, Christopher Armstrong
<radix@twistedmatrix.com> wrote:
> recently, and a lot more is going to be put into it. This is mostly
> thanks to people who have donated money to Twisted. If anyone wants

Sorry, I wanted to add something to this, but it got lost in revision:

This is mostly thanks to people who have donated money to Twisted
(such as Chesspark. Thank you, Jack Moffit! Do you have any more money
for us? :).

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/

From jack at chesspark.com  Tue Apr  7 17:08:50 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 17:09:24 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
	<9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>
	<60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>
Message-ID: <9b58f4550904071408p67b3f0f6p67bff4f0982d73b7@mail.gmail.com>

> I really can't understand you. The way I'm reading your first sentence
> in this paragraph is so silly that I must be misreading the intention.
> Maybe the problem is that you don't understand what twistd plugins
> really are. If you care, I recommend reading the URL that Michal
> referred to earlier:
>
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html

Thanks for the second nudge here.  The big note about how this is not
the same as tap files cleared it up for me.

So to get what I want, I'd write a plugin for Tape, then wrap that
with some user friendly python to hide the non-essential command line
options or the fact that I need twistd.

It sounds like a reasonable first step to making this better would be
to have some way to hook into twistd from the code side.  Perhaps this
is already possible?

jack.

From radix at twistedmatrix.com  Tue Apr  7 17:27:13 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue Apr  7 17:27:48 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071408p67b3f0f6p67bff4f0982d73b7@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
	<9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>
	<60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>
	<9b58f4550904071408p67b3f0f6p67bff4f0982d73b7@mail.gmail.com>
Message-ID: <60ed19d40904071427p41ea6b6cg179c4be7cf10debd@mail.gmail.com>

On Tue, Apr 7, 2009 at 5:08 PM, Jack Moffitt <jack@chesspark.com> wrote:
>> I really can't understand you. The way I'm reading your first sentence
>> in this paragraph is so silly that I must be misreading the intention.
>> Maybe the problem is that you don't understand what twistd plugins
>> really are. If you care, I recommend reading the URL that Michal
>> referred to earlier:
>>
>> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
> Thanks for the second nudge here. ?The big note about how this is not
> the same as tap files cleared it up for me.
>
> So to get what I want, I'd write a plugin for Tape, then wrap that
> with some user friendly python to hide the non-essential command line
> options or the fact that I need twistd.
>
> It sounds like a reasonable first step to making this better would be
> to have some way to hook into twistd from the code side. ?Perhaps this
> is already possible?

The twistd API is almost non-existent, unfortunately. However, you can
get a long way by doing something like this in your "main script":

from twisted.scripts.twistd import run
sys.argv[1:] = ["pluginname", "-whatever"]
run()

It's decidedly a hack, but it works and relies only on public APIs, so
it's tolerable until we get a better API.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/

From jack at chesspark.com  Tue Apr  7 18:54:40 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Tue Apr  7 18:55:13 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <60ed19d40904071427p41ea6b6cg179c4be7cf10debd@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
	<9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>
	<60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>
	<9b58f4550904071408p67b3f0f6p67bff4f0982d73b7@mail.gmail.com>
	<60ed19d40904071427p41ea6b6cg179c4be7cf10debd@mail.gmail.com>
Message-ID: <9b58f4550904071554k3e90fcfax31c5b49f1d7837c0@mail.gmail.com>

> from twisted.scripts.twistd import run
> sys.argv[1:] = ["pluginname", "-whatever"]
> run()
>
> It's decidedly a hack, but it works and relies only on public APIs, so
> it's tolerable until we get a better API.

That sounds like the best bet for now.  If I get some time perhaps
I'll do this for Tape and then write it up so others in a similar
situation can get a little guidance.  It will make for a reasonable
second plugin tutorial as well.

jack.

From phil at bubblehouse.org  Tue Apr  7 18:55:41 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue Apr  7 18:56:07 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071408p67b3f0f6p67bff4f0982d73b7@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
	<9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>
	<60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>
	<9b58f4550904071408p67b3f0f6p67bff4f0982d73b7@mail.gmail.com>
Message-ID: <60EA04AC-6B4C-4EBC-821A-78FE6BDDD20F@bubblehouse.org>

On Apr 7, 2009, at 3:58 PM, Christopher Armstrong wrote:
> If this is a command line non-daemon application, then you're right.
> twistd is not really geared towards those. There are some vague ideas
> for helping people write tools like that in a way that makes sense,
> but nothing very concrete.

On Apr 7, 2009, at 5:08 PM, Jack Moffitt wrote:
> So to get what I want, I'd write a plugin for Tape, then wrap that
> with some user friendly python to hide the non-essential command line
> options or the fact that I need twistd.
>
> It sounds like a reasonable first step to making this better would be
> to have some way to hook into twistd from the code side.  Perhaps this
> is already possible?

I was wondering if I could get clarification on the anticipated  
problems with using twistd to run non-daemonizing CLI applications.

It seems like you'd just need to return some kind of custom Service  
from makeService, which would call your app's main() from  
startService, and then call reactor.stop() when your app is finished  
doing whatever it needs to do.

Then you could still use twistd's logging and other goodies, as well  
as parsing your own command line with t.p.usage.

Add a quick one- or two-line shell script to hide the twistd part of  
the incantation, and it seems pretty good.

Maybe there's another issue I'm not thinking of, though...

-phil

From glyph at divmod.com  Tue Apr  7 22:04:27 2009
From: glyph at divmod.com (glyph@divmod.com)
Date: Tue Apr  7 21:48:12 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
Message-ID: <20090408020427.12555.213405144.divmod.xquotient.7044@weber.divmod.com>


On 7 Apr, 07:47 pm, jack@chesspark.com wrote:
>>You can pass arbitrary command line options by writing a plugin.
>>=A0http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
>Which, as I recall, Glyph and others have discourged others from doing
>this.  Perhaps I am mistaken, but if twistd is intended for this
>purpose, why has this not become part of it all along?

Chris has already basically set the record straight here, but for future =

readers I just wanted to have a direct reply to this message and clear =

up a very unfortunate choice of acronyms.  Some of this is a summary of =

other things that have already been mentioned in this thread.

I definitely do not discourage the use of twistd for this purpose :). =

In fact I strongly recommend it.  Here's the history.

".tap" ("Twisted Application Pickle") files, and the associated "mktap" =

("make twisted application pickle") command-line utility, are strongly =

discouraged.  They've been deprecated for a long time, and they'll be =

gone soon.

"TAPs" ("Twisted Application *Plugins*") were originally plugins for =

"mktap".  That's why the naming is similar.  However, *they are now =

plugins for twistd*, and have been for some time.  Developers are =

strongly encouraged to use this interface, and to read the document =

linked above.

Before "TAPs" were plugins for twistd, the suggested configuration =

mechanism for twisted applications was to write a '.tac' file and tell =

your users to edit it.  Processing twistd's commandline arguments at =

this point was impossible without gratuitous hacks, so tac files were a =

better alternative.  However, as Jack noted, editing tac files is =

inconvenient, so we added the twistd plugin interface.  We now recommend =

that adding command-line arguments to your 'twistd' plugin is the way to =

go if you want run-time configuration for your twisted server =

application.

The technique that Chris suggested elsewhere in this thread, to set up =

correct command-line arguments for your plugin and then call twistd's =

run() function, is the currently supported way to invoke twistd's =

functionality from your own scripts.  This is what we use to support =

Divmod's "axiomatic" command, which is basically a database-configured =

version of "twistd".  A more expressive API for a wider variety of use- =

cases is forthcoming, but this technique should still work even once =

such an API has been added.

The document in question would really benefit from some updating; in =

particular, it would be good to move the mention of TAP files to some =

kind of endnote rather than being mentioned before the actual relevant =

features.

From glyph at divmod.com  Tue Apr  7 22:57:16 2009
From: glyph at divmod.com (glyph@divmod.com)
Date: Tue Apr  7 22:41:04 2009
Subject: [Twisted-web] some questions about twisted.web
Message-ID: <20090408025716.12555.1379052041.divmod.xquotient.7136@weber.divmod.com>


A lot's already gone on in this thread, but I don't think the original 
questions were answered too well.  (Apologies if I've missed a message 
which did so, there were a lot of them.)

Since you asked, I'll leave the filing of the tickets to you :).

I appreciate the thorough analysis of the issues that one encounters 
when trying to write a customized web server using Twisted.  If you do 
go ahead and file these tickets and attach a keyword to them ("tape"?), 
I'll make sure that somebody has a look at them during the next Twisted 
sprint in Cambridge.

Speaking of which, we should set up another one of those.

On 7 Apr, 03:46 pm, jack@chesspark.com wrote:
>I just wrote a simple tool to make my AJAX app development cycle
>better.  It's a tiny web server that serves up the current directory
>along side some reverse proxies.  You can find the current code here:

Cool.
>http://github.com/metajack/tape/tree/master

It seems like the need for this tool could have been obviated if "twistd 
web" had better support for composing plugins of its own.  I'd encourage 
you to look at 'twistd web --help' and see if maybe some future release 
can provide all the functionality you want.

For example, we've got "twistd web --path" and "twistd web --wsgi", but 
no convenient way to combine them to say "My WSGI app is over here, 
mapped to this URL, but it's got some static content over there, mapped 
to that URL".

If what I'm describing makes sense to you, please go ahead and file an 
enhancement ticket to add this feature.  I'm tempted to dive right in 
and start describing some implementation ideas, but knowing me this 
email's going to be long enough already.
>* HTTPFactory seems only able to log to files.  It takes a path name,
>not a file like object.  This makes it very difficult to log to
>stdout, as I have to override log() in my own class.  This in turns
>means cherry picking a global out of twisted.web - fun!

This is at _least_ three bugs.

HTTPFactory should take a FilePath-like object (not a file-like object, 
since it may need to control when the log is opened and closed.

_openLogFile is specifically documented as being for overriding in 
subclasses, yet it's private.  That doesn't make much sense.  Luckily 
the interface is broken anyway, so when we switch over to using a 
FilePath we can switch.

While we're at it, twisted.python.logfile should really be updated to 
use FilePath as well, rather than direct os.path operations.

The CLF-formatting logic really ought to be separated from the code that 
decides to actually write it to a file.  Off the top of my head it 
really seems like this should be a method on Request, but a free 
function would be fine too.

In addition, there's this bug:

    http://twistedmatrix.com/trac/ticket/75

which is maybe too vague to actually be actionable, but I think the idea 
was to publish Request objects with a custom format string via 
twisted.python.log.
>* log() never gets called when a ReverseProxyResource is used.  It
>appears as though request.finish() is never called, though I wasn't
>able to fully track this down.  I find this behavior very odd.

This one's an existing bug:

    http://twistedmatrix.com/trac/ticket/2677

Please feel free to attach commentary.
>* static.File, when given a directory, creates instances of itself to
>handle children.  This code completely fails for me with when I
>subclassed static.File.  Note that my class only has a few
>construction parameters, while static.File has 5.  This is not
>documented.  It would be nice if the code could detect this case and
>tell me that I have to overload createSimilarFile.

Again multiple tickets:

  * In the long term, static.File really ought to compose in a FilePath, 
not inherit from it.  I don't know if it's possible to salvage 
static.File in its current state; I think we need a new static-content 
class that generally works the right way.

For what it's worth, in your use case, you may want to override 
createSimilarFile().  In the meanwhile, before we have a new-and- 
improved File resource,

  * The parameters to __init__ should obviously be documented.

  * createSimilarFile should be documented.
>* The only way to stick something in the tree at an arbitrary location
>seems to be to walk the tree to that spot, creating dummy locations as
>you go.  I find it extremely weird coming from several other web
>frameworks.  There is nothing else but the concept of "hey you!  get
>me child X". This makes it pretty hard to implement anything better
>than walking the tree since state would have to be collected over the
>traversal.

In Nevow and web2, locateChild allows you to consume multiple segments 
at once.  The plan has always been to port these to twisted.web, but I 
can't find a ticket for that plan.

We've discovered some problematic issues in the specifics of the way 
locateChild works; when we design a new one for twisted.web it will 
probably work subtly differently.  But we do need a ticket to discuss 
that work.  I am embarrassed to notice that none of this has been made 
public yet.

So, there's a ticket for general resource lookup improvement.  But I 
think independent of that there's also a need here for an "overlay" 
resource, which maps specific URIs to different resources, as if they 
all lived at the root.  I'm going to handwave here a bit (don't think 
too hard about the fact that the first argument below is just a string, 
or how exactly dispatch works), but for example, let's say you've got a 
site which has been through a couple of transitions and you want to keep 
all of your URLs working.

currentBlog = AwesomeTwistedBlog()
o = Overlay(default=currentBlog)
bloggerCompat = BloggerCompatibilityResource(currentBlog)
o.mapPath("/2008/*", bloggerCompat)
o.mapPath("/2007/*", bloggerCompat)
o.mapPath("*.php", WordpressCompatibilityResource(currentBlog))
o.mapPath("/static", FilePath("some-data"))

Oops, when I talked about composing plugins above I said I wasn't going 
to talk about implementation details.  I guess I lied.  This is what I 
was talking about; "Overlay()" is the resource which we'd need to 
implement 'twistd web --wsgi my.application.here --at /apps/my-app 
--path ./app/my-static-content --at /static'.

So again, if this sounds useful, go ahead and file a ticket.  Although 
the one for the command-line stuff should be separate from this 
substrate, they should link to each other.
>* Related to the above, the handling of foo vs. foo/ is pretty
>confusing.  foo/ is considered the '' child of foo.  This is pretty
>yuck to me.  Unfortunately, I don't have any creative suggestions
>about how to do it better right now.

The web sucks.  There actually *is* a pretty significant semantic 
distinction between foo and foo/ in a URI.  In particular, in order to 
generate relative links properly you _really_ need to care about that 
distinction.

Even the thing that dotz mentioned, addSlash, is a bit of a misfeature; 
it's good convenience functionality but the interface to it is magical 
and unclear.

This is the one thing I think isn't really a valid bug unless you have a 
better idea :).
>* ReverseProxyResource returns nothing if you don't give it a '/' at
>the end.  I had to work around this by doing a redirect in the
>subclass and then returning a new ReverseProxyResource when the ''
>child is accessed.  It seems that if ReverseProxyResource's path is
>'', it just keels over with no error.

This could do with a bit more detail (mostly about what "keels over" 
means), but certainly sounds like a valid bug.

From jack at chesspark.com  Wed Apr  8 00:07:54 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Wed Apr  8 00:08:28 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <20090408025716.12555.1379052041.divmod.xquotient.7136@weber.divmod.com>
References: <20090408025716.12555.1379052041.divmod.xquotient.7136@weber.divmod.com>
Message-ID: <9b58f4550904072107l682854d0mc8a046aea116eed@mail.gmail.com>

> It seems like the need for this tool could have been obviated if "twistd
> web" had better support for composing plugins of its own. ?I'd encourage you
> to look at 'twistd web --help' and see if maybe some future release can
> provide all the functionality you want.

Yes, I think that it would be able to do the same things.  The only
unknown is whether it would be easy to use.  I think if you added an
rc-file type thing for the web plugin, it would work quite nicely.
The more I think about it, the more I like it.

This turned into four bugs:

* #3752 to add the composable command line options
* #3753 to add the overlay resource infrastructure
* #3755 to add a proxy/reverse proxy option
* #3756 to add simple configuration files

If twistd web and twisted.web had those four things, it would totally
rock my world and there would not be a need for Tape.

> HTTPFactory should take a FilePath-like object (not a file-like object,
> since it may need to control when the log is opened and closed.

#3757

> _openLogFile is specifically documented as being for overriding in
> subclasses, yet it's private. ?That doesn't make much sense. ?Luckily the
> interface is broken anyway, so when we switch over to using a FilePath we
> can switch.

#3758

> While we're at it, twisted.python.logfile should really be updated to use
> FilePath as well, rather than direct os.path operations.

#3759

> The CLF-formatting logic really ought to be separated from the code that
> decides to actually write it to a file. ?Off the top of my head it really
> seems like this should be a method on Request, but a free function would be
> fine too.

#3760

> In addition, there's this bug:
>
> ? http://twistedmatrix.com/trac/ticket/75
>
> which is maybe too vague to actually be actionable, but I think the idea was
> to publish Request objects with a custom format string via
> twisted.python.log.

I updated #75 to point to the other 4 bugs.

>> * log() never gets called when a ReverseProxyResource is used. ?It
>> appears as though request.finish() is never called, though I wasn't
>> able to fully track this down. ?I find this behavior very odd.
>
> This one's an existing bug:
>
> ? http://twistedmatrix.com/trac/ticket/2677
>
> Please feel free to attach commentary.

Done.

> ?* In the long term, static.File really ought to compose in a FilePath, not
> inherit from it. ?I don't know if it's possible to salvage static.File in
> its current state; I think we need a new static-content class that generally
> works the right way.

I'm not sure I'm the best person to write this bug.  Perhaps you could
do a quick brain dump into a ticket so it doesn't get lost.

> ?* The parameters to __init__ should obviously be documented.

#3761

> ?* createSimilarFile should be documented.

#3762

> In Nevow and web2, locateChild allows you to consume multiple segments at
> once. ?The plan has always been to port these to twisted.web, but I can't
> find a ticket for that plan.

#3763

>> * ReverseProxyResource returns nothing if you don't give it a '/' at
>> the end. ?I had to work around this by doing a redirect in the
>> subclass and then returning a new ReverseProxyResource when the ''
>> child is accessed. ?It seems that if ReverseProxyResource's path is
>> '', it just keels over with no error.
>
> This could do with a bit more detail (mostly about what "keels over" means),
> but certainly sounds like a valid bug.

Fair enough.  The server literally hangs up the connection without
returning any response.

#3764

Thanks for your help; it was certainly useful to help me file better reports.

jack.

From jack at chesspark.com  Wed Apr  8 00:15:04 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Wed Apr  8 00:15:38 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904071408p67b3f0f6p67bff4f0982d73b7@mail.gmail.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<49DBA4C8.9080508@gmail.com>
	<9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com>
	<m3vdpgtfn7.fsf@neo.luffy.cx>
	<9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<60ed19d40904071258j5149d223pab8522d5c76f7b4@mail.gmail.com>
	<9b58f4550904071312n6dcee577mc28f1c568e3efd1f@mail.gmail.com>
	<60ed19d40904071339i16e55743l78c547e22f73fc07@mail.gmail.com>
	<9b58f4550904071408p67b3f0f6p67bff4f0982d73b7@mail.gmail.com>
Message-ID: <9b58f4550904072115o579fa1b9uec63661eb07901ac@mail.gmail.com>

> So to get what I want, I'd write a plugin for Tape, then wrap that
> with some user friendly python to hide the non-essential command line
> options or the fact that I need twistd.

Just to correct myself for posterity, it looks like twistd plugins
actually automatically hide the normal twistd command line options.  I
noticed this when playing around with twistd web.  This is great!

No my "wrapper" is down to just a shell script, which is what Michal
was suggesting all along I'm guessing.  I can save the fork by calling
twisted.scripts.twistd.run as Christopher suggested as well.

jack.

From glyph at divmod.com  Wed Apr  8 00:50:10 2009
From: glyph at divmod.com (glyph@divmod.com)
Date: Wed Apr  8 00:33:50 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <9b58f4550904072107l682854d0mc8a046aea116eed@mail.gmail.com>
References: <20090408025716.12555.1379052041.divmod.xquotient.7136@weber.divmod.com>
	<9b58f4550904072107l682854d0mc8a046aea116eed@mail.gmail.com>
Message-ID: <20090408045010.12555.1280272105.divmod.xquotient.7333@weber.divmod.com>


On 04:07 am, jack@chesspark.com wrote:
>>It seems like the need for this tool could have been obviated if 
>>"twistd
>>web" had better support for composing plugins of its own.

>The more I think about it, the more I like it.

Cool.
>This turned into four bugs:

(...)
>If twistd web and twisted.web had those four things, it would totally
>rock my world and there would not be a need for Tape.

Awesome.
>I'm not sure I'm the best person to write this bug.  Perhaps you could
>do a quick brain dump into a ticket so it doesn't get lost.

#3765.
>Thanks for your help; it was certainly useful to help me file better 
>reports.

Thanks for filing all those tickets.  Not only are they helpful reports, 
but it sets a great example for future users wondering if their bug is a 
bug :).

From Martin.Bright at casero.com  Wed Apr  8 11:45:16 2009
From: Martin.Bright at casero.com (Martin Bright)
Date: Wed Apr  8 11:45:21 2009
Subject: [Twisted-web] some questions about twisted.web
In-Reply-To: <20090408020427.12555.213405144.divmod.xquotient.7044@weber.divmod.com>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com><49DB8150.1080300@gmail.com><9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com><49DBA4C8.9080508@gmail.com><9b58f4550904071219r5eed1144s421f403a7461119b@mail.gmail.com><m3vdpgtfn7.fsf@neo.luffy.cx><9b58f4550904071247v2d4c90ccq967030222e54005b@mail.gmail.com>
	<20090408020427.12555.213405144.divmod.xquotient.7044@weber.divmod.com>
Message-ID: <29216E03CB2EDA448AE99071A3D9DE7205953303@mail.casero.com>

Thanks for the clarification!

-martin

-----Original Message-----
From: twisted-web-bounces@twistedmatrix.com [mailto:twisted-web-bounces@twistedmatrix.com] On Behalf Of glyph@divmod.com
Sent: Tuesday, April 07, 2009 10:04 PM
To: Twisted Web World
Subject: Re: [Twisted-web] some questions about twisted.web


On 7 Apr, 07:47 pm, jack@chesspark.com wrote:
>>You can pass arbitrary command line options by writing a plugin.
>>http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
>Which, as I recall, Glyph and others have discourged others from doing
>this.  Perhaps I am mistaken, but if twistd is intended for this
>purpose, why has this not become part of it all along?

Chris has already basically set the record straight here, but for future 
readers I just wanted to have a direct reply to this message and clear 
up a very unfortunate choice of acronyms.  Some of this is a summary of 
other things that have already been mentioned in this thread.

I definitely do not discourage the use of twistd for this purpose :). 
In fact I strongly recommend it.  Here's the history.

".tap" ("Twisted Application Pickle") files, and the associated "mktap" 
("make twisted application pickle") command-line utility, are strongly 
discouraged.  They've been deprecated for a long time, and they'll be 
gone soon.

"TAPs" ("Twisted Application *Plugins*") were originally plugins for 
"mktap".  That's why the naming is similar.  However, *they are now 
plugins for twistd*, and have been for some time.  Developers are 
strongly encouraged to use this interface, and to read the document 
linked above.

Before "TAPs" were plugins for twistd, the suggested configuration 
mechanism for twisted applications was to write a '.tac' file and tell 
your users to edit it.  Processing twistd's commandline arguments at 
this point was impossible without gratuitous hacks, so tac files were a 
better alternative.  However, as Jack noted, editing tac files is 
inconvenient, so we added the twistd plugin interface.  We now recommend 
that adding command-line arguments to your 'twistd' plugin is the way to 
go if you want run-time configuration for your twisted server 
application.

The technique that Chris suggested elsewhere in this thread, to set up 
correct command-line arguments for your plugin and then call twistd's 
run() function, is the currently supported way to invoke twistd's 
functionality from your own scripts.  This is what we use to support 
Divmod's "axiomatic" command, which is basically a database-configured 
version of "twistd".  A more expressive API for a wider variety of use- 
cases is forthcoming, but this technique should still work even once 
such an API has been added.

The document in question would really benefit from some updating; in 
particular, it would be good to move the mention of TAP files to some 
kind of endnote rather than being mentioned before the actual relevant 
features.

_______________________________________________
Twisted-web mailing list
Twisted-web@twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
From db3l.net at gmail.com  Wed Apr  8 15:05:12 2009
From: db3l.net at gmail.com (David Bolen)
Date: Wed Apr  8 15:05:59 2009
Subject: [Twisted-web] Re: some questions about twisted.web
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
Message-ID: <m2y6ubt193.fsf@valheru.db3l.homeip.net>

Jack Moffitt <jack@chesspark.com> writes:

> Now I've just deluged the poor user with lots of factory start and
> stops.  All I want is normal HTTP style logs.  Twisted's logging
> infrastructure has its place, but it is not quite ready to produce
> user friendly output for a simple utility.

I generally just use the default logging but then it's mostly for my
own use, not end users.

As an interim to any more extensive changes, perhaps you could just
use a local HTTPFactory subclass for your site, overriding with your
own log method that bypasses the twisted logging to do whatever you
want?

You could then use twisted logging (if preferred) for lower level logs
and do some higher level stuff for user logging.
If you're looking for 

> Great, now the user has to edit a tac file just to configure the
> thing.  I'd rather them be able to type "tape" and not have to worry
> about twistd -ny some.tac.  I use tac files a lot, but they don't make
> much sense for simple utilities.  It sucks that it's either/or with
> Twisted applications.

For what it's worth, I've just never seemed to get into any of the
services or applications stuff with twisted.  It's certainly not a
requirement to run a server.  You can implement your own daemon
support on a Unix platform, or run as a service under Windows or
whatever.

There's nothing stopping you from just instantiating the right factory
classes, associating them with a port and running the reactor.  That
can then be a single python module that gets run directly, or if built
into an application (such as py2exe on Windows), executed directly.

I normally have more than just the web server running in a single process,
but all you'd probably need is to instantiate your "Site" class, connect
it with reactor.listenTCP, and then sit in reactor.run().

> I grok Twisted just fine.  This may be my first post to twisted-web,
> but I've been hacking on and around Twisted for some time.  Even
> Apache doesn't work this way.  I can tell apache that my proxy is at
> /some/url/over/here and it will work.  It will return 404s for the
> intermediate URLs.  Because Resources only have immediate children and
> paths are only dealt with in single element pieces, there doesn't seem
> to be a way to do this in Twisted Web.  It feels weird that the tree
> must be complete.  It feels weird that paths are dealt with in tiny
> sections.

As another view on this point, for me, I find the "work segment by
segment" approach of twisted's to be very natural, albeit different
than an arbitrary path mapping mechanism such as apache or many web
frameworks.  I actually missed the incremental lookup mechanism when
first working with django on a project, for example. It can feel weird
compared to other mechanisms, but just because it doesn't match how
Apache works need not make it a problem.  There's more than one way to
navigate an object hierarchy within a server based on the URL in a
request.

Since it's inherently simple in terms of using the getChild* methods
(or resource.getChildForRequest helper function), it's easy to
override to make very dynamic sites, which I guess I find myself doing
more often than not.  It can be very flexible when it comes to
dynamically picking the resource to handle a request.

Yes, for a static (URL wise) portion of a site you do need to
construct a "tree" of resources, so I just generally do that at
initialization time.  At worst you can stub out any piece of the tree
with a plain old Resource object to which you can add further
children.

That's not so say supporting a more "mapper" based approach on top of
this might not be useful, if only to assist people more used to that
approach.  But I definitely wouldn't want to lose the dynamic
capabilities provided by the current system.

One way to tie into the current framework to take more control is to
define the resource at the root of your mapper-capable tree using
"isLeaf".  That resource's "render" method will then get called for
any URLs at that point or below, have access to the full URL (already
split into segments), and it can do whatever lookups/mapping to
resource objects it might like.  I've used that to strip out URL
prefixes (such as client keys unique to them) and then re-perform the
URL lookup to locate the resource, but it could just as easily do a
mapper based URL lookup at that point to yield the right resource
object to then call (instantiating it if needed) to render the
request.

-- David


From jack at chesspark.com  Wed Apr  8 16:21:48 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Wed Apr  8 16:22:23 2009
Subject: [Twisted-web] Re: some questions about twisted.web
In-Reply-To: <m2y6ubt193.fsf@valheru.db3l.homeip.net>
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<m2y6ubt193.fsf@valheru.db3l.homeip.net>
Message-ID: <9b58f4550904081321x780c7e0fv32ca0ce94b5b9248@mail.gmail.com>

> I generally just use the default logging but then it's mostly for my
> own use, not end users.

We do as well.  This app in particular is end user focused, so I
wanted something nicer.

> As an interim to any more extensive changes, perhaps you could just
> use a local HTTPFactory subclass for your site, overriding with your
> own log method that bypasses the twisted logging to do whatever you
> want?

That's essentially what I did in the code.  It's not pretty though.

> I normally have more than just the web server running in a single process,
> but all you'd probably need is to instantiate your "Site" class, connect
> it with reactor.listenTCP, and then sit in reactor.run().

Yep.  Tape currently does this, and all my command line XMPP tools do
as well.  There's a lot of bootstrap though, and since most people I
know starting out want to write command line type utilities, this
makes learning Twisted significantly harder.  At least making a tac
file is easy.  You just make some services, call setServiceParent and
you're done.  All that bootstrapping happens out of your view.

> As another view on this point, for me, I find the "work segment by
> segment" approach of twisted's to be very natural, albeit different
> than an arbitrary path mapping mechanism such as apache or many web
> frameworks. ?I actually missed the incremental lookup mechanism when
> first working with django on a project, for example. It can feel weird
> compared to other mechanisms, but just because it doesn't match how
> Apache works need not make it a problem. ?There's more than one way to
> navigate an object hierarchy within a server based on the URL in a
> request.

I think it's fine to support both approaches.  I think my original
complaint was actually worded that way.  The issue is that there may
not be a path from root to a child.  Ie, /some/path/to/proxy exists,
but /some/path doesn't.  It takes some jiggering to set that up right
now, because you have to make dummy nodes along the path.  Which
works, but is not as optimal for this use case.

> One way to tie into the current framework to take more control is to
> define the resource at the root of your mapper-capable tree using
> "isLeaf". ?That resource's "render" method will then get called for
> any URLs at that point or below, have access to the full URL (already
> split into segments), and it can do whatever lookups/mapping to
> resource objects it might like. ?I've used that to strip out URL
> prefixes (such as client keys unique to them) and then re-perform the
> URL lookup to locate the resource, but it could just as easily do a
> mapper based URL lookup at that point to yield the right resource
> object to then call (instantiating it if needed) to render the
> request.

When the first getChild is called how do I know it's the first
getChild call so that I do the special logic?  Perhaps that's what is
confusing me.

jack.

From db3l.net at gmail.com  Wed Apr  8 18:07:00 2009
From: db3l.net at gmail.com (David Bolen)
Date: Wed Apr  8 18:07:24 2009
Subject: [Twisted-web] Re: some questions about twisted.web
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<m2y6ubt193.fsf@valheru.db3l.homeip.net>
	<9b58f4550904081321x780c7e0fv32ca0ce94b5b9248@mail.gmail.com>
Message-ID: <m2tz4yu7ej.fsf@valheru.db3l.homeip.net>

Jack Moffitt <jack@chesspark.com> writes:

> When the first getChild is called how do I know it's the first
> getChild call so that I do the special logic?  Perhaps that's what is
> confusing me.

Well, "first getChild" is ambiguous to me.  If you mean the getChild
on the instance that is supposed to do non-default mapping, I'd
suggest you know simply because the Resource class that implements it
has to get instantiated and reached somehow by the normal lookup
mechanism, so once it gets control, by definition that's the right
time.

Or put another way, you only instantiate and install into the tree the
object supporting the new lookup mechanism just where you need it, so
as far as that object instance is concerned, if it's being called, it
needs the special logic.

This of course assumes that you aren't trying to implement a single class
for both lookup types, but rather have a Resource subclass designed for
use as the new lookup mechanism.

If you made such a class your Root object, then essentially your whole
site would be mapped using the new mechanism.  If you stuck it further
down (such as via a putChild on lower level resources, or by
dynamically returning it in some othera custom getChild), then the new
lookups start taking place beyond that point in the URL.

An important point mentioned in some of the other responses is how the
isLeaf Resource attribute gets used in traversal.  When Twisted is
working its way down a URL and traversing objects through getChild, if
it hits one with isLeaf=True, it will stop at that point and let that
object render the result, even if the URL hasn't been exhausted.

During rendering the Resource will have access to the prepath and
postpath attributes on the current request indicating the portion of
the URL used to reach the current Resource, and any remaining portion.

So two approaches you might follow:

* Intercept the getChild lookup mechanism itself within the instance
  of your specific Resource object - use whatever mapping approach you
  want, and return an appropriate Resource.  That Resource object,
  when initially instantiated for use by the site, might have its own
  configuration file, cache of instantiated Resource objects, or
  whatever.

  Assuming that the mapping process yields the final Resource for the
  matched URL you'll want to ensure the resource you return is used
  for the rendering, even though request.postpath at that point may
  not be empty.  One way to handle this would be to ensure that
  isLeaf=True on any returned Resource (your mapping class can even
  set this if you don't want to require authors of the Resource
  objects themselves to care) so that traversal stops at that point
  and they are directly called to render the page.

  One drawback to using isLeaf on the returned resource might be that
  the request postpath won't be accurate during rendering as it will
  still reflect the location of your mapping Resource rather than the
  rendering resource.  If that's an issue (say for computed links
  during rendering), you could alternatively leave isLeaf=False in the
  returned Resource but ensure that its getChild() always returns
  itself, which would let the normal Twisted mechanism eat through the
  URL but never leave the Resource.

  Or yet another approach - if you manipulate request.prepath/postpath
  during a getChild call, you'll control the traversal, so simply
  clearing postpath (presumably after appending it to prepath) should
  guarantee the traversal stops with the Resource object you're
  returning, while leaving prepath/postpath accurate during rendering.

* Define the mapping Resource itself with isLeaf=True, and then during
  its render() operation, do whatever dynamic lookups you need to in
  order to locate the appropriate Resource, and return the result of
  its render() operation.

  This approach also allows the mapping operation itself to be
  deferrable since its occurring during the render operation rather
  than the initial object traversal.
  
  In this case, since you are in control of calling the final Resource
  object's render(), there's no worry about further object traversal,
  but you may still want to manipulate prepath/postpath in the active
  request object to have appropriate values for use by the final
  rendering Resource.

As an example of the latter, I have a site that accepts URLs of the
form:

   http://<site>/approval/<key>/x/y/z

where <key> is a unique key handed out to clients via email to gate
their access to their data.  I need to use <key> to validate and
identify the client, but the rest of the URL is a fairly static
association of Resource objects per the normal Twisted "putChild"
setup.  However, once the client is validated, a job UUID for them is
automatically appended to the URL for use by any eventual Resource.

I'll grant that this scenario is not necessarily the greatest argument
for the Twisted traversal mechanism versus an RE-based mapper
(assuming the latter lets you save portions of the matched URL for the
use of the rendering object), but it does show a dynamic (and
deferred) processing mechanism within twisted.web.

I have an ApprovalRoot Resource subclass (with isLeaf=True), that was
tied in under my site's Root object (with putChild), as shown below.
It uses the approval key to do some database lookups and validations,
then re-uses the same getChildForRequest function Twisted itself uses
for traversal on the remainder of the path (popping off the approval
key first), via an internal Resource tree.  In this case, since the
second level lookup is processing the Request object, prepath/postpath
end up correct for the render() call without further intervention.

If you replace the lookup with your own traversal mapping object, it
could just as easily map resources in other ways.  Of course, if the
mapping mechanism had no requirement for deferrable lookups, doing the
processing during the getChild operations is probably a little more
logical.

-- David

          - - - - - - - - - - - - - - - - - - - - - - - - -

During initialization, site setup includes (among other resources):

    # Main site URL entry points
    self.root = Root(self.options)
    msg_root = ApprovalRoot(db, self.options)
    self.root.putChild('approval', msg_root)

which uses the following class:

class ApprovalRoot(Resource):
    """Act as root of the approval tree, which is accessed from URLs in
    messages, and always include the message key as the first part of
    request.postpath.  Strips off the key, validates it, and then passes
    control on to appropriate job or file based objects depending on the
    remainder of the URL.
    
    This is almost identical to normal child lookup by non-leaf objects,
    but handled at render time since the message key validation is a
    deferred operation."""

    isLeaf = True

    def __init__(self, db, options):
        Resource.__init__(self)
        self.db = db
        self.loader = options['loader']

        # Use a separate resource as the root of the remaining URL processing
        # since the isLeaf on ourselves would defeat any child search

        self.job_root = Resource()

    def putChild(self, path, child):
        """Permit simulated children, so that the overall structure of the
        web site can still be established in a higher level function"""
        self.job_root.putChild(path, child)

    def _db_retrieveJobUuid(self, key):
        sql = sa.select([schema.jobs.c.uuid, schema.messages.c.expiration],
                        sa.and_(schema.jobs.c.uuid ==
                                schema.messages.c.job_uuid,
                                schema.messages.c.key == key))

        r = sql.execute().fetchone()

        if not r:
            raise _Unavailable
        elif (r.expiration and r.expiration < datetime.utcnow()):
            raise NoResource('The email approval key has expired')
        else:
            return r.uuid

    def _cb_render(self, job_uuid, request):
        # Transfer control to the appropriate child for rendering.  In the
        # case of a top level render, modify the postpath to include the job
        # uuid as an argument.
        if request.postpath and not request.postpath[0]:
            request.postpath.append(job_uuid.hex)
        child = getChildForRequest(self.job_root, request)
        r = child.render(request)
        if r != NOT_DONE_YET:
            request.write(r)
            request.finish()

    def _cb_render_err(self, failure, request):
        if failure.check(NoResource):
            request.write(failure.value.render(request))
            request.finish()
            return
        return failure

    def _finishRequest(self, value, request):
        request.finish()
        return value

    def render(self, request):
        if len(request.postpath) < 1:
            return ErrorPage(http.NOT_FOUND,
                             'Missing approval reference', '').render(request)

        # We only render message key failures, so if the URL has no further
        # segments beyond the key, add a trailing "/" to trigger the child
        # lookup for the default handler.
        if len(request.postpath) == 1:
            request.redirect(request.prePathURL() + '/' +
                             request.postpath[0] + '/')
            request.finish()
        else:
            msg_key = request.postpath.pop(0)
            d = self.db.run(self._db_retrieveJobUuid, msg_key)
            d.addCallback(self._cb_render, request)
            d.addErrback(self._cb_render_err, request)
            d.addErrback(self._finishRequest, request)
            d.addErrback(log.err)
        return NOT_DONE_YET


From db3l.net at gmail.com  Wed Apr  8 18:13:00 2009
From: db3l.net at gmail.com (David Bolen)
Date: Wed Apr  8 18:13:20 2009
Subject: [Twisted-web] Re: some questions about twisted.web
References: <9b58f4550904070846r3e7859a6h266423309108053f@mail.gmail.com>
	<49DB8150.1080300@gmail.com>
	<9b58f4550904070957s5cd7d46ci52a94d4068ff9554@mail.gmail.com>
	<m2y6ubt193.fsf@valheru.db3l.homeip.net>
	<9b58f4550904081321x780c7e0fv32ca0ce94b5b9248@mail.gmail.com>
Message-ID: <m2prfmu74j.fsf@valheru.db3l.homeip.net>

Jack Moffitt <jack@chesspark.com> writes:

> I think it's fine to support both approaches.  I think my original
> complaint was actually worded that way.  The issue is that there may
> not be a path from root to a child.  Ie, /some/path/to/proxy exists,
> but /some/path doesn't.  It takes some jiggering to set that up right
> now, because you have to make dummy nodes along the path.  Which
> works, but is not as optimal for this use case.

Oh, one follow-on to my last response.  While I've been referring to
getChild while talking about the traversal, technically its
getChildWithDefault that is being used with standard Resource
instances.

This gives precedence to explicit child resource instances (added with
putChild), falling back to getChild if no matching static child has
been added.

So in terms of a custom mapping Resource, you could install this as
the Root of your site, implement the custom getChild mapping, and
still use putChild to install some static paths that didn't use the
new mapping.

In such a case, getChild would only be getting called if no static
children were found, so again, the fact that it was being called at
all would imply that you should fall back to your custom mapping.  The
one case you would probably have to check for would be a getChild
lookup for "", which should render the actual site root page contents,
unless you wanted to delegate that to some other resource by using
putChild with a path of "".

-- David


From twisted-web at udmvt.ru  Thu Apr  9 11:30:41 2009
From: twisted-web at udmvt.ru (twisted-web@udmvt.ru)
Date: Thu Apr  9 11:30:55 2009
Subject: [Twisted-web] Is there a way to implement a deferred sequence?
Message-ID: <20090409153041.GF9889@ruber.office.udmvt.ru>

Greetings.

I want a sequence which is Deferred with two callbacks:
   one as usual - for the whole result called at the end of the sequence,
   another - called for every element of the sequence (as they arrive).

The number of elements is not known beforehand, so it is not a defer.DeferredList,
but the idea is almost the same.
To provide some interface to send items to the sequence, fire item callback for every
item arrived and have main callback to be called at the end of the sequence.

It could be used for example in AJAX web-applications that use Athena to
simplify/automate the dynamic updates of some slowly arriving results (while in
AJAX-supporting environment) and to gracefully fallback when javascript
is not enabled/not desired.

It could be deployed as using a slightly modified "sequence"-like renderer with
"data" function returning this form of Deferred. The renderer will output
some 'live' element immediately and then will append remotely it's contents
as items arrive. Or will fallback to the usual builtin "sequence" renderer
when AJAX is not desired.

I think this approach will make it possible to hide all details into the
renderer code.

The same could be done to make items replace each other with the last being
displayed as the final result...

Or maybe it is already done in a different way?
Or have I missed something, could anyone point me, please?

Thanks for your time.

--
Alexey S.

From terry at jon.es  Thu Apr  9 15:18:39 2009
From: terry at jon.es (Terry Jones)
Date: Thu Apr  9 15:18:24 2009
Subject: [Twisted-web] Is there a way to implement a deferred sequence?
In-Reply-To: Your message at 20:30:41 on Thursday, 9 April 2009
References: <20090409153041.GF9889@ruber.office.udmvt.ru>
Message-ID: <18910.18959.317369.580302@jon.es>

>>>>> "Alexey" == twisted-web  <twisted-web@udmvt.ru> writes:

Hi Alexey

Alexey> I want a sequence which is Deferred with two callbacks: one as
Alexey> usual - for the whole result called at the end of the sequence,
Alexey> another - called for every element of the sequence (as they
Alexey> arrive).

I'm pretty sure I don't understand exactly what you want. Maybe you could
write it in pseudo-code, showing both how you'd call the thing you want and
what the code to implement it would look like, at least conceptually. I
can't promise to help, if you can be a bit more specific it might be easier
to be more helpful.

You might find something of worth in one of my Twisted mailing list
soliloquies, which starts here:

  http://www.twistedmatrix.com/pipermail/twisted-python/2008-June/017904.html

I have feeling that the code Esteve Fernandez and I came up with to tackle
that situation might be something like what you're after.

You may also like to think about whether you can use
twisted.internet.task.LoopingCall It's more flexible than it may appear at
first, and it also fits your pattern at least at a high-level description.

Terry

From twisted-web at udmvt.ru  Fri Apr 10 04:12:28 2009
From: twisted-web at udmvt.ru (Alexey S.)
Date: Fri Apr 10 04:12:36 2009
Subject: [Twisted-web] Is there a way to implement a deferred sequence?
In-Reply-To: <18910.18959.317369.580302@jon.es>
References: <20090409153041.GF9889@ruber.office.udmvt.ru>
	<18910.18959.317369.580302@jon.es>
Message-ID: <20090410081228.GG9889@ruber.office.udmvt.ru>

On Thu, Apr 09, 2009 at 09:18:39PM +0200, Terry Jones wrote:
> >>>>> "Alexey" == twisted-web  <twisted-web@udmvt.ru> writes:
> 
> Hi Alexey
> 
> Alexey> I want a sequence which is Deferred with two callbacks: one as
> Alexey> usual - for the whole result called at the end of the sequence,
> Alexey> another - called for every element of the sequence (as they
> Alexey> arrive).
> 
> I'm pretty sure I don't understand exactly what you want. Maybe you could
> write it in pseudo-code, showing both how you'd call the thing you want and
> what the code to implement it would look like, at least conceptually. I
> can't promise to help, if you can be a bit more specific it might be easier
> to be more helpful.
> 
> You might find something of worth in one of my Twisted mailing list
> soliloquies, which starts here:
> 
>   http://www.twistedmatrix.com/pipermail/twisted-python/2008-June/017904.html
> 
> I have feeling that the code Esteve Fernandez and I came up with to tackle
> that situation might be something like what you're after.
Well, that is close to my problem, but I have a feature request with somewhat more
generic requirements.

Current Deferred is used to defer a simple process, that only
have its 'start' and 'end', returning some single result object at the end.
And there is nothing between start and end, it is not allowed to look inside
that process. Once started it can only fail or finish returning a single result.

But what about deferring some more complex process, that may have zero to more
itermediate results before finishing? What if we are inside that process and have
some event, but we are not finished the process? Why can't the consumers of the
Deferred be interested in receiving that event too?
Why not augment the Deferred for that?

As an example consider running deferred the final state machine. Having only a current
Deferred it is not possible to trace the state change if the state is not changed
to the final one, since there is no callback that can be called several times for
every state change. We can only know, when the machine is entered the final state
and stopped or failed.

It is not possible to defer a process that run in stages if each stage does return some
result or if we want to trace the completion of stages, not only the whole process.
(Not possible without further complications, described in the link above.)

It would be nice if Deferred be extended to have another callback to be called for
updating the result or notifying about state change of some process.
In addition to 
  d.callback(result)
we will have something like the
  d.update_state(args)

How this may be used depends on what the process is and what are the intermediate results.
For example d.update_state may be invoked to tell the percentage of completion of the whole deferred process.
Or d.update_state may be invoked to append new item to the resulting sequence as it arrives.
Or d.update_state may be invoked to say that intermediate result should be replaced by a new one
or somehow updated in other fashion.
That could also depend on the type of the final result:
   If we are returning a list, then we may want to append items to it.
   If we are returning a tree we may want to build that tree node by node. (may we want that?)
   If we are aggregating some data series into some single result we may want to present
    current intermediate result to the observer.
   Any other process, that could be useful to observe in its dynamics, not only in its final state.

It is just the way to send/receive the events produced by some process that is deferred
in the case that events are not the 'process_finished' events.

I think that Deferred class can be extended in that way preserving full backward compatibility,
since if noone is interested in recieving intermediate events, noone will register
a callback for that and no callback will be called - noone will notice that.

> 
> You may also like to think about whether you can use
> twisted.internet.task.LoopingCall It's more flexible than it may appear at
> first, and it also fits your pattern at least at a high-level description.
Well, it can solve only a specific problem, as far as I understand.

> 
> Terry
> 

Thank for your attention and interest.

PS: Should I file a feature request? Or that feature is absolutely unnecessary to have?
PPS: Does anybody need some more detailed explanation?

-- 
Alexey S.

From glyph at divmod.com  Fri Apr 10 04:43:39 2009
From: glyph at divmod.com (glyph@divmod.com)
Date: Fri Apr 10 04:27:17 2009
Subject: [Twisted-web] Is there a way to implement a deferred sequence?
In-Reply-To: <20090410081228.GG9889@ruber.office.udmvt.ru>
References: <20090409153041.GF9889@ruber.office.udmvt.ru>
	<18910.18959.317369.580302@jon.es>
	<20090410081228.GG9889@ruber.office.udmvt.ru>
Message-ID: <20090410084339.12555.1501819595.divmod.xquotient.7752@weber.divmod.com>


On 08:12 am, twisted-web@udmvt.ru wrote:
>But what about deferring some more complex process, that may have zero 
>to more
>itermediate results before finishing? What if we are inside that 
>process and have
>some event, but we are not finished the process? Why can't the 
>consumers of the
>Deferred be interested in receiving that event too?
>Why not augment the Deferred for that?

Because Deferreds are intended to be an asynchronous mechanism for 
control flow.  They are the way to return a value which is not yet 
present.  In other words they are an asynchronous version of exit 
semantics; "return" and "raise".

They are very explicitly *not* designed to simultaneously implement 
asynchronous versions of every other potential control flow - looping, 
for example, which seems to be what you want.

There are other mechanisms for doing those things.  For example, if you 
want to get a stream of data and handle it incrementally, you want to 
implement an IProtocol or ITransport.  Trying to cram all of IProtocol 
into Deferred is a mistake.

If you want some abstraction to support an incremental stream of results 
with a size known in advance, for example to support drawing a progress 
bar on an upload or download, then please feel free to propose that as a 
*separate* mechanism from Deferred, and we can debate its merits and 
usefulness on its own.  But I doubt very much that Deferred should do 
such a thing itself.

From twisted-web at udmvt.ru  Fri Apr 10 05:41:28 2009
From: twisted-web at udmvt.ru (Alexey S.)
Date: Fri Apr 10 05:41:38 2009
Subject: [Twisted-web] Is there a way to implement a deferred sequence?
In-Reply-To: <20090410084339.12555.1501819595.divmod.xquotient.7752@weber.divmod.com>
References: <20090409153041.GF9889@ruber.office.udmvt.ru>
	<18910.18959.317369.580302@jon.es>
	<20090410081228.GG9889@ruber.office.udmvt.ru>
	<20090410084339.12555.1501819595.divmod.xquotient.7752@weber.divmod.com>
Message-ID: <20090410094128.GJ9889@ruber.office.udmvt.ru>

On Fri, Apr 10, 2009 at 08:43:39AM -0000, glyph@divmod.com wrote:
>
> Because Deferreds are intended to be an asynchronous mechanism for  
> control flow.  They are the way to return a value which is not yet  
> present.  In other words they are an asynchronous version of exit  
> semantics; "return" and "raise".
>
> They are very explicitly *not* designed to simultaneously implement  
> asynchronous versions of every other potential control flow - looping,  
> for example, which seems to be what you want.

Yes, but there is no synchronous version of what I want, I can't name any.
Asynchronousness adds some more capabilities to be introduced into flow control.
>From my perception Deferred is a point where two entities exchange events
(one send, other receive)
And if we think about Deferred as an event router, then my question was
"why there is only two types of events possible and both of them are 'final' events?"
I just asked about subclassing that event router to include capability
to route some other events in addition to two existing.
It is worth noting, that such improvement does not forbid Deferred from being
"the way to return a value which is not yet present". It just make the term
"value" more complex, allows it to be dispersed in time, not only concentrated
at a single moment. I think there is no natural analogy for synchronous flow
control and can't be - results are not synchronous.
Perhaps the thing I am talking about should not be called "Deferred", since
it is only asynchronous version of syncronous flow control. But for me
extending Deferred looks natural, that is why I am asking.

>
> There are other mechanisms for doing those things.  For example, if you  
> want to get a stream of data and handle it incrementally, you want to  
> implement an IProtocol or ITransport.  Trying to cram all of IProtocol  
> into Deferred is a mistake.
IProtocol and ITransport looks like being a byte-oriented interfaces, not
an arbitrary-object-oriented.

>
> If you want some abstraction to support an incremental stream of results  
> with a size known in advance, for example to support drawing a progress  
              ^^^^^ - did you mean unknown?
> bar on an upload or download, then please feel free to propose that as a  
> *separate* mechanism from Deferred, and we can debate its merits and  
> usefulness on its own.  But I doubt very much that Deferred should do  
> such a thing itself.
I am asking for an half-duplex Event-pipe which can be closed from the sending end.
Just as variant it can be used to deliver cumulative results, but not fixed to that.
I said "Deferred" because the implementation of such thing will be identical to
Deferred's. It will be a Deferred with additional callback(s) which is(are) not
restricted to be invoked only once. 

Thank for your time.

-- 
Alexey S.

From dmitrikozhevin at gmail.com  Fri Apr 10 06:27:42 2009
From: dmitrikozhevin at gmail.com (Dmitry Kozhevin)
Date: Fri Apr 10 06:28:17 2009
Subject: [Twisted-web] Is there a way to implement a deferred sequence?
In-Reply-To: <20090409153041.GF9889@ruber.office.udmvt.ru>
References: <20090409153041.GF9889@ruber.office.udmvt.ru>
Message-ID: <765bf0040904100327y95bf648h3f3ab8913b5c02c@mail.gmail.com>

Alexey, I thought you could use Trellis.

On Thu, Apr 9, 2009 at 6:30 PM,  <twisted-web@udmvt.ru> wrote:
> Greetings.
>
> I want a sequence which is Deferred with two callbacks:
> ? one as usual - for the whole result called at the end of the sequence,
> ? another - called for every element of the sequence (as they arrive).
>
> The number of elements is not known beforehand, so it is not a defer.DeferredList,
> but the idea is almost the same.
> To provide some interface to send items to the sequence, fire item callback for every
> item arrived and have main callback to be called at the end of the sequence.
>
> It could be used for example in AJAX web-applications that use Athena to
> simplify/automate the dynamic updates of some slowly arriving results (while in
> AJAX-supporting environment) and to gracefully fallback when javascript
> is not enabled/not desired.
>
> It could be deployed as using a slightly modified "sequence"-like renderer with
> "data" function returning this form of Deferred. The renderer will output
> some 'live' element immediately and then will append remotely it's contents
> as items arrive. Or will fallback to the usual builtin "sequence" renderer
> when AJAX is not desired.
>
> I think this approach will make it possible to hide all details into the
> renderer code.
>
> The same could be done to make items replace each other with the last being
> displayed as the final result...
>
> Or maybe it is already done in a different way?
> Or have I missed something, could anyone point me, please?
>
> Thanks for your time.
>
> --
> Alexey S.
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>

From andrew at bemusement.org  Fri Apr 10 09:28:00 2009
From: andrew at bemusement.org (Andrew Bennetts)
Date: Fri Apr 10 09:28:07 2009
Subject: [Twisted-web] Is there a way to implement a deferred sequence?
In-Reply-To: <20090410094128.GJ9889@ruber.office.udmvt.ru>
References: <20090409153041.GF9889@ruber.office.udmvt.ru>
	<18910.18959.317369.580302@jon.es>
	<20090410081228.GG9889@ruber.office.udmvt.ru>
	<20090410084339.12555.1501819595.divmod.xquotient.7752@weber.divmod.com>
	<20090410094128.GJ9889@ruber.office.udmvt.ru>
Message-ID: <20090410132800.GB6548@steerpike.home.puzzling.org>

Alexey S. wrote:
> On Fri, Apr 10, 2009 at 08:43:39AM -0000, glyph@divmod.com wrote:
> >
> > Because Deferreds are intended to be an asynchronous mechanism for  
> > control flow.  They are the way to return a value which is not yet  
> > present.  In other words they are an asynchronous version of exit  
> > semantics; "return" and "raise".
> >
> > They are very explicitly *not* designed to simultaneously implement  
> > asynchronous versions of every other potential control flow - looping,  
> > for example, which seems to be what you want.
> 
> Yes, but there is no synchronous version of what I want, I can't name any.
> Asynchronousness adds some more capabilities to be introduced into flow control.
> >From my perception Deferred is a point where two entities exchange events
> (one send, other receive)

A Deferred's purpose is to provide a mechanism for one entity to communicate a
single result to another.  You're asking for it to do something else, therefore
(by definition, basically) you're asking for something other than a Deferred.

What Deferred provides is pretty similar to just passing in a callback to an
async function, except it's much more convenient.  And like passing callbacks
directly it's a building block for richer control flow, not an all-in-one answer
to every problem.

> And if we think about Deferred as an event router, then my question was
> "why there is only two types of events possible and both of them are 'final' events?"

If you need more events, you can make multiple Deferreds.  in your case you
wanted an event to fire when a set of work has completed ? ok, that's one
Deferred right there, with a simple object to track the outstanding work and
fire that Deferred when the amount of remaining work is zero.  Each of those
individual items of work may also have a corresponding Deferred to report their
individual results.

Or as Glyph says, you may simply want to have an object that is called directly
every time some event happens.  Or some combination of the above.

> I just asked about subclassing that event router to include capability
> to route some other events in addition to two existing.
> It is worth noting, that such improvement does not forbid Deferred from being
> "the way to return a value which is not yet present". It just make the term
> "value" more complex, allows it to be dispersed in time, not only concentrated
> at a single moment. I think there is no natural analogy for synchronous flow
> control and can't be - results are not synchronous.
> Perhaps the thing I am talking about should not be called "Deferred", since
> it is only asynchronous version of syncronous flow control. But for me
> extending Deferred looks natural, that is why I am asking.

No, Deferred is very definitely not about multiple events (which is what
multiple values over time are, unless you only want to deal with a final,
single, aggregated value).  Deferred may be a useful building block for a the
thing you are talking about, but it is definitely not a natural extension of it.

> > There are other mechanisms for doing those things.  For example, if you  
> > want to get a stream of data and handle it incrementally, you want to  
> > implement an IProtocol or ITransport.  Trying to cram all of IProtocol  
> > into Deferred is a mistake.
> IProtocol and ITransport looks like being a byte-oriented interfaces, not
> an arbitrary-object-oriented.

They were just an example.  It's not hard to imagine examples using richer
objects than bytes, e.g. with methods like ?recordReceived?, ?accountCreated? or
?buttonPressed? or ?cpuOnFire? rather than ?bytesReceived?.  The interesting
part of e.g. IProtocol is that ?bytesReceived? can be (and usually is) called
many times rather than once.

By the way, I can imagine a similar transformation to passing in an IProtocol
class, analagous to the transformation of replacing passing in a callback
function with making that function return a Deferred which you then add the
callback to.  So instead of e.g.:

    clientCreator = ClientCreator(reactor, MyProtocolClass)
    d = clientCreator.connectTCP(host, port)
    d.addCallback(doSomethingWithProtocolInstance)

I suppose you could avoid passing the protocol up front:

    clientCreator = HypotheticalDeferringClientCreator(reactor)
    d = clientCreator.connectTCP(host, port)
    def connectionMade(transport):
        protocolInstance = MyProtocolClass()
        protocolInstance.makeConnection(transport)
        return protocolInstance
    d.addCallback(connectionMade)
    d.addCallback(doSomethingWithProtocolInstance)

But really that's just reinventing twisted.internet.protocol.Factory in a less
convenient form...

My point here is basically just that there isn't a single API or design pattern
that is best in every situation.

[...]
> I am asking for an half-duplex Event-pipe which can be closed from the sending end.
> Just as variant it can be used to deliver cumulative results, but not fixed to that.
> I said "Deferred" because the implementation of such thing will be identical to
> Deferred's. It will be a Deferred with additional callback(s) which is(are) not
> restricted to be invoked only once. 

So, ?identical? except for some fundamental bits that are radically different? :)

Seriously, the extra complexity of the semantics you want is way beyond the
scope of what's reasonable for Deferred.  Handling multiple events is vastly
more complicated in the general case than handling a single result (consider for
instance the various options on DeferredList, and still that API can't even
handle common situations like a dynamically sized list of results, as you've
noticed).  That's not to say that what you want is unreasonable, just that what
you want isn't called ?Deferred?.  Deferred does one thing, and does it very
well.

-Andrew.


From terry at jon.es  Fri Apr 10 12:10:35 2009
From: terry at jon.es (Terry Jones)
Date: Fri Apr 10 12:16:52 2009
Subject: [Twisted-web] Is there a way to implement a deferred sequence?
In-Reply-To: Your message at 14:41:28 on Friday, 10 April 2009
References: <20090409153041.GF9889@ruber.office.udmvt.ru>
	<18910.18959.317369.580302@jon.es>
	<20090410081228.GG9889@ruber.office.udmvt.ru>
	<20090410084339.12555.1501819595.divmod.xquotient.7752@weber.divmod.com>
	<20090410094128.GJ9889@ruber.office.udmvt.ru>
Message-ID: <18911.28539.185286.910339@jon.es>

Hi again Alexey

I guess it's clear from all the other comments that we should call what
you're after something other than a Deferred. I agree with all the others
that Deferreds are great as they are, and especially with the comment that
you can/should use them as building blocks in the class you actually want.

As for what it is that you actually want, it still sounds like something in
the middle of the various things provided for you by DeferredList, the
reactor itself, the code I pointed you to, LoopingCall, etc. I know it's
not any of those things exactly, but it's some mixture of them.

The other thing that comes to mind is defer.inlineCallbacks. You can use it
to simply implement complex logic, state machines, multiple unpredictable
needs and events, etc., and the caller of an inlineCallbacks decorated
function gets a normal deferred back which will deliver the final
result(s), if any. Using inlineCallbacks you can write fairly "natural"
(i.e., synchronous-looking) code that's calling functions that return
deferreds, yielding them, getting their results, and continuing as though
nothing had happened.  You can write state machines, you can yield
DeferredLists, etc. You can do many many things, and the code you write
doesn't have to look bizarre. defer._inlineCallbacks (note the underscore)
takes care of interacting with your deferred yielding code and getting the
results of the intermediate deferreds back to you.


Note that the functionality of inlineCallbacks (and DeferredList and
LoopingCall) is built upon the humble Deferred. That's pretty strong
evidence that the class you'll end up writing can also offer great
flexibility and generality and also be based just on Deferreds.

Understanding inlineCallbacks might be another piece of the puzzle in
seeing how to do what it is you need.  (Apologies if you already do
understand inlineCallbacks - I mention it because no-one else has and I
think it's probably relevant).

Terry

From jeff at taupro.com  Sun Apr 19 05:40:06 2009
From: jeff at taupro.com (Jeff Rush)
Date: Sun Apr 19 05:40:24 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
Message-ID: <49EAF176.5000702@taupro.com>

Hi, I'm working with Twisted Web/Nevow and have questions about my options for
                         user authentication.  I've read all the docs on
portal/realm/cred and have a
simple website working using those (and guard.SessionWrapper) that prompts for
                         login.  However I'm not sure of the correct design
approach to using that
technique for a site with mixed access controls.



>From reading the sources, it appears that the portal/realm/cred system only
                          checks the user identity at the -start- of an HTTP
request, prior to URL
traversal or page delivery.  Once the realm has returned an appropriate avatar
                         representing a specific tree of pages/resources,
there appear to be no further                          security controls for
finer control.


I see two problems with that approach:



1) It is rather monolithic; you can't grant access to this page or that one
                          selectively, or perhaps add a security check into
the URL traversal steps to                            control access to a
hierarchy of sub-pages.  Viewing the portal as the
      frontdoor of a site requiring authentication, it makes it tricky to have
some                           non-authenticating pages for visitors to
register or have their forgotten                               password mailed
to them.  To do those tasks, it seems necessary to create
          multiple portals for a single site, one for the
sign-up/password-reminder set                           of pages, and another
portal for the members-only pages.


2) Alternatively, one could dynamically generate a custom tree of
                        pages/resources within the realm object, returning a
different tree depending                           upon the
identity/permissions of the user.  This would seem to make it
                 complicated to (a) guarantee that all visitors see the exact
same URL                                   structure and, (b) consume more
time/memory with constructing duplicate page/resource trees when thousands of
users may be visiting the site, with a mix of permissions.



I'm thinking I'll have to write something like decorators for page resources
that front-end the locateChild method (for access control over traversal),

and perhaps the renderHTTP method (for access control over page delivery) with
                         permissions checking logic.



Maybe I've misread the Twisted/Nevow sources and there is already a mechanism
                          for, it seems to me, this common use case for a
membership-type of website.                             Considering the
complexity of the cred system that gives us such great
          flexiblity in authentication, I don't really want to have to bypass
it and                             write my own mechanism.  Surely others have
been here before me.


Any advice is appreciated,



-Jeff




From foom at fuhm.net  Sun Apr 19 15:57:21 2009
From: foom at fuhm.net (James Y Knight)
Date: Sun Apr 19 15:57:25 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <49EAF176.5000702@taupro.com>
References: <49EAF176.5000702@taupro.com>
Message-ID: <C546445C-AF71-49C0-BA1A-5067027BB2B3@fuhm.net>

On Apr 19, 2009, at 5:40 AM, Jeff Rush wrote:
> 1) It is rather monolithic; you can't grant access to this page or  
> that one selectively, or perhaps add a security check into the URL  
> traversal steps to control access to a hierarchy of sub-pages.   
> Viewing the portal as the frontdoor of a site requiring  
> authentication, it makes it tricky to have some non-authenticating  
> pages for visitors to register or have their forgotten password  
> mailed to them.  [...]
>
> 2) Alternatively, one could dynamically generate a custom tree of  
> pages/resources within the realm object, returning a different tree  
> depending                           upon the identity/permissions of  
> the user.  [...]

I haven't done any development like this for a number of years, but  
when I was, I also found cred/portal/guard rather cumbersome.

Unfortunately I don't have anything actually useful to add to the  
discussion, but I feel your pain. :)

James

From michal.dtz at gmail.com  Sun Apr 19 20:32:16 2009
From: michal.dtz at gmail.com (Michal Pasternak)
Date: Sun Apr 19 20:32:49 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted 
	Web/Nevow?
In-Reply-To: <49EAF176.5000702@taupro.com>
References: <49EAF176.5000702@taupro.com>
Message-ID: <10c877d90904191732i43f7a15ejfac05325ebd9e3e1@mail.gmail.com>

2009/4/19 Jeff Rush <jeff@taupro.com>:
[...]
> 2) Alternatively, one could dynamically generate a custom tree of
> ? ? ? ? ? ? ? ? ? ? ? ?pages/resources within the realm object, returning a
> different tree depending ? ? ? ? ? ? ? ? ? ? ? ? ? upon the
> identity/permissions of the user.

I think this is the preferred approach ATM.

> ?This would seem to make it
> ? ? ? ? ? ? ? ? complicated to (a) guarantee that all visitors see the exact
> same URL ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? structure and,

You can share the same URL mapper between all users of you site.

> (b) consume more
> time/memory with constructing duplicate page/resource trees when thousands of
> users may be visiting the site, with a mix of permissions.

You don't have to duplicate page resources; you can create a single
resource and return it for as many users as you want.

> I'm thinking I'll have to write something like decorators for page resources
> that front-end the locateChild method (for access control over traversal),
> and perhaps the renderHTTP method (for access control over page delivery) with
> ? ? ? ? ? ? ? ? ? ? ? ? permissions checking logic.

What is your permission model exactly? What kind of limitations of
current guard implementation would you like to solve?

I think I like the current approach... Once you learn how to use it
and how to set it up properly (this is a key phrase here), it will
take a few things off your head. Even if setting it up is cumbersome,
the idea of web resource wrapping an avatar object is pretty cool, as
you don't have to put access control logic into web resource objects
-- you just enable these and these resources for that level of
privleges, which in fact gives you fine-grained security model. If you
look for a tool, that handles setting up such things for you and lets
you just concentrate on the code, there's Divmod Mantissa;
unfortunatley, it is not a very well documented piece of software.

-- 
m

From drewp at bigasterisk.com  Mon Apr 20 00:44:49 2009
From: drewp at bigasterisk.com (Drew Perttula)
Date: Mon Apr 20 00:44:56 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <49EAF176.5000702@taupro.com>
References: <49EAF176.5000702@taupro.com>
Message-ID: <49EBFDC1.6050809@bigasterisk.com>

Jeff Rush wrote:
> I'm thinking I'll have to write something like decorators for page resources
> that front-end the locateChild method (for access control over traversal),
> 
> and perhaps the renderHTTP method (for access control over page delivery) with
>                          permissions checking logic.


I did openid logins as a mixin class that replaces locateChild:

http://bigasterisk.com/darcs/?r=exchangeMeeting;a=headblob;f=/nevowopenid.py

Usage is like this:

     class Main(WithOpenid, rend.Page):
         docFactory = loaders.xmlfile("main.html")
         ..replace verify() and use self.identity..

From glyph at divmod.com  Mon Apr 20 04:15:04 2009
From: glyph at divmod.com (glyph@divmod.com)
Date: Mon Apr 20 03:57:40 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <10c877d90904191732i43f7a15ejfac05325ebd9e3e1@mail.gmail.com>
References: <49EAF176.5000702@taupro.com>
	<10c877d90904191732i43f7a15ejfac05325ebd9e3e1@mail.gmail.com>
Message-ID: <20090420081504.12555.743492597.divmod.xquotient.8720@weber.divmod.com>

On 12:32 am, michal.dtz@gmail.com wrote:
>2009/4/19 Jeff Rush <jeff@taupro.com>:

>I think I like the current approach... Once you learn how to use it
>and how to set it up properly (this is a key phrase here), it will
>take a few things off your head. Even if setting it up is cumbersome,
>the idea of web resource wrapping an avatar object is pretty cool, as
>you don't have to put access control logic into web resource objects
>-- you just enable these and these resources for that level of
>privleges, which in fact gives you fine-grained security model.

I agree with you that the way guard/cred work is kind of neat, but it's 
kind of neat as a cooperative low-level primitive for building more 
full-featured systems on top of.  I can see the OP's point here: for a 
lot of use-cases, it's incomplete and you need to do a lot of extra 
work.  Work which isn't particularly well documented.

It would be really nice if we had more examples of *how* to build things 
on top of it.  If anyone reading this thread has some code to link to, I 
encourage you to share it.  Mantissa's sharing system is a good example, 
but it does a lot more than just wrap resources in a few simple 
permissions.  Also, as you say:
>unfortunatley, it is not a very well documented piece of software.

I look forward to your doc patches ;-).

From jeff at taupro.com  Mon Apr 20 06:08:56 2009
From: jeff at taupro.com (Jeff Rush)
Date: Mon Apr 20 06:09:14 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <10c877d90904191732i43f7a15ejfac05325ebd9e3e1@mail.gmail.com>
References: <49EAF176.5000702@taupro.com>
	<10c877d90904191732i43f7a15ejfac05325ebd9e3e1@mail.gmail.com>
Message-ID: <49EC49B8.8020708@taupro.com>

Michal Pasternak wrote:
> 2009/4/19 Jeff Rush <jeff@taupro.com>:
> [...]
>> 2) Alternatively, one could dynamically generate a custom tree of
>>                        pages/resources within the realm object, returning a
>> different tree depending                           upon the
>> identity/permissions of the user.
> 
> I think this is the preferred approach ATM.
> 
>>  This would seem to make it
>>                 complicated to (a) guarantee that all visitors see the exact
>> same URL                                   structure and,
> 
> You can share the same URL mapper between all users of you site.

Hmmm, I'm not aware of a centralized URL mapper in the Twisted framework as
there is in other Python frameworks that use regular expression mappers.
AFAIK, in Twisted, the URL tree is constructed piece by piece using a series
of .putChild('segment', resource) calls (or child_XXX class attributes) which
if you construct a complex tree with lots of conditionals based on the access
rights of the user, can be messy.



>> (b) consume more
>> time/memory with constructing duplicate page/resource trees when thousands of
>> users may be visiting the site, with a mix of permissions.
> 
> You don't have to duplicate page resources; you can create a single
> resource and return it for as many users as you want.

WHile users with identical roles can share resource trees, it seems you'd need
a unique tree for each 'kind' of user.


>> I'm thinking I'll have to write something like decorators for page resources
>> that front-end the locateChild method (for access control over traversal),
>> and perhaps the renderHTTP method (for access control over page delivery) with
>>                         permissions checking logic.
> 
> What is your permission model exactly? What kind of limitations of
> current guard implementation would you like to solve?

It is role-based, where a user can possess a mix of multiple roles, such as
user A is (member, ), user B is (member, instructor), user C is (admin, ).
For that scenario I'd need three resource trees that include/exclude different
things.  I could pre-build trees for all possible combinations of roles, or
build on demand and cache the last N trees keyed by role combination.  Not
very elegant though.

Instead I'm looking for something more like:

  @access('instructor')
  class StudentRosterPage(rend.Page):
     ...

where after traversal ends, a page's renderHTTP() method does:

  if request.user.session.role in self.page_roles:
     ...return content


> I think I like the current approach... Once you learn how to use it
> and how to set it up properly (this is a key phrase here), it will
> take a few things off your head. Even if setting it up is cumbersome,
> the idea of web resource wrapping an avatar object is pretty cool,

It is pretty cool - and that is why I'm asking because Twisted has always
introduced me to new ideas and ways of doing things.  Perhaps there is
significant security leverage already in there I'm not understanding, or maybe
most people using Twisted roll their own web security mechanisms.  The avatar
approach certainly is a perfect fit for guarding SSH, IMAP, POP3 and such
services.  It just seems a bit awkward for fine-grained websites with a mix of
access.


> as
> you don't have to put access control logic into web resource objects
> -- you just enable these and these resources for that level of
> privleges, which in fact gives you fine-grained security model. If you
> look for a tool, that handles setting up such things for you and lets
> you just concentrate on the code, there's Divmod Mantissa;
> unfortunatley, it is not a very well documented piece of software.

I can see both sides of the issue of whether to place your access control
logic into resources or centralize it into the part that builds up your
website (realm/avatar) ie. a .tac file.  Centralization permits tighter
control over customization of use, but makes it harder to write pluggable
subsystems reusable across different applications.

My experiments so far are something along the lines of:

  class SiteSession(guard.SessionWrapper, membership.SessionMixin):

    # mixin adds new access-testing methods for current user

  # construct resource tree
  root = FrontDoor()
  membership.add_ResourcePages(root)
  return appserver.NevowSite(resource=root)



In my case, after many years with other web frameworks like Zope I'm playing
with Twisted to see how hard it is to write such a subsystem for membership
management.  Basically a drop-in for user registration, forgotten-password
emails, generic user profile editing, login/logout panel to place into any
page, and have it as easy to use as adding an entry to a buildout.cfg and a
couple of lines to a .tac to choose your cred checkers and user info
persistence stores, and poof, a membership-based website.  I can see how to
write it but I'd rather learn from others in the Twisted community if it has
already been done.

Besides security, I'm looking for examples of smart ways to build up a complex
website from parts developed and packaged by others, without a lot of messy
wiring logic.

-Jeff

From michal.dtz at gmail.com  Mon Apr 20 06:47:01 2009
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgiBQYXN0ZXJuYWs=?=)
Date: Mon Apr 20 06:47:41 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <49EC49B8.8020708@taupro.com>
References: <49EAF176.5000702@taupro.com>	<10c877d90904191732i43f7a15ejfac05325ebd9e3e1@mail.gmail.com>
	<49EC49B8.8020708@taupro.com>
Message-ID: <49EC52A5.7000009@gmail.com>

SmVmZiBSdXNoIHBpc3plOgo+IE1pY2hhbCBQYXN0ZXJuYWsgd3JvdGU6Cj4gICAKPj4gMjAwOS80
LzE5IEplZmYgUnVzaCA8amVmZkB0YXVwcm8uY29tPjoKPj4gWy4uLl0KPj4gICAgIAo+Pj4gMikg
QWx0ZXJuYXRpdmVseSwgb25lIGNvdWxkIGR5bmFtaWNhbGx5IGdlbmVyYXRlIGEgY3VzdG9tIHRy
ZWUgb2YKPj4+ICAgICAgICAgICAgICAgICAgICAgICAgcGFnZXMvcmVzb3VyY2VzIHdpdGhpbiB0
aGUgcmVhbG0gb2JqZWN0LCByZXR1cm5pbmcgYQo+Pj4gZGlmZmVyZW50IHRyZWUgZGVwZW5kaW5n
ICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBvbiB0aGUKPj4+IGlkZW50aXR5L3Blcm1pc3Np
b25zIG9mIHRoZSB1c2VyLgo+Pj4gICAgICAgCj4+IEkgdGhpbmsgdGhpcyBpcyB0aGUgcHJlZmVy
cmVkIGFwcHJvYWNoIEFUTS4KPj4KPj4gICAgIAo+Pj4gIFRoaXMgd291bGQgc2VlbSB0byBtYWtl
IGl0Cj4+PiAgICAgICAgICAgICAgICAgY29tcGxpY2F0ZWQgdG8gKGEpIGd1YXJhbnRlZSB0aGF0
IGFsbCB2aXNpdG9ycyBzZWUgdGhlIGV4YWN0Cj4+PiBzYW1lIFVSTCAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgc3RydWN0dXJlIGFuZCwKPj4+ICAgICAgIAo+PiBZb3UgY2FuIHNo
YXJlIHRoZSBzYW1lIFVSTCBtYXBwZXIgYmV0d2VlbiBhbGwgdXNlcnMgb2YgeW91IHNpdGUuCj4+
ICAgICAKPgo+IEhtbW0sIEknbSBub3QgYXdhcmUgb2YgYSBjZW50cmFsaXplZCBVUkwgbWFwcGVy
IGluIHRoZSBUd2lzdGVkIGZyYW1ld29yayBhcwo+IHRoZXJlIGlzIGluIG90aGVyIFB5dGhvbiBm
cmFtZXdvcmtzIHRoYXQgdXNlIHJlZ3VsYXIgZXhwcmVzc2lvbiBtYXBwZXJzLgo+ICAgCgpJIHRo
aW5rIHlvdSBjYW4gd3JpdGUgb25lIGVhc2lseS4gVGhlIHF1ZXN0aW9uIGlzLCBkbyB5b3UgcmVh
bGx5IG5lZWQgCm9uZT8gOi0pCgo+IEFGQUlLLCBpbiBUd2lzdGVkLCB0aGUgVVJMIHRyZWUgaXMg
Y29uc3RydWN0ZWQgcGllY2UgYnkgcGllY2UgdXNpbmcgYSBzZXJpZXMKPiBvZiAucHV0Q2hpbGQo
J3NlZ21lbnQnLCByZXNvdXJjZSkgY2FsbHMgKG9yIGNoaWxkX1hYWCBjbGFzcyBhdHRyaWJ1dGVz
KSB3aGljaAo+IGlmIHlvdSBjb25zdHJ1Y3QgYSBjb21wbGV4IHRyZWUgd2l0aCBsb3RzIG9mIGNv
bmRpdGlvbmFscyBiYXNlZCBvbiB0aGUgYWNjZXNzCj4gcmlnaHRzIG9mIHRoZSB1c2VyLCBjYW4g
YmUgbWVzc3kuCj4gICAKCk9yLCB5b3UgY2FuIG92ZXJyaWRlIGxvY2F0ZUNoaWxkKCkuCgpDb25k
aXRpb25hbHMgbWFrZSB0aGUgY29kZSBtZXNzeS4gVGhhdCdzIHdoeSBJIGxpa2UgdGhlIGlkZWEg
b2YgCnJldHVybmluZyB0cmVlcyBvZiByZXNvdXJjZXMsIHRoYXQgd3JhcCB0aGUgYXZhdGFyIG9i
amVjdCBhbmQga25vdyAKbm90aGluZyBhYm91dCBhY2Nlc3MgY29udHJvbC4KCj4+PiAoYikgY29u
c3VtZSBtb3JlCj4+PiB0aW1lL21lbW9yeSB3aXRoIGNvbnN0cnVjdGluZyBkdXBsaWNhdGUgcGFn
ZS9yZXNvdXJjZSB0cmVlcyB3aGVuIHRob3VzYW5kcyBvZgo+Pj4gdXNlcnMgbWF5IGJlIHZpc2l0
aW5nIHRoZSBzaXRlLCB3aXRoIGEgbWl4IG9mIHBlcm1pc3Npb25zLgo+Pj4gICAgICAgCj4+IFlv
dSBkb24ndCBoYXZlIHRvIGR1cGxpY2F0ZSBwYWdlIHJlc291cmNlczsgeW91IGNhbiBjcmVhdGUg
YSBzaW5nbGUKPj4gcmVzb3VyY2UgYW5kIHJldHVybiBpdCBmb3IgYXMgbWFueSB1c2VycyBhcyB5
b3Ugd2FudC4KPj4gICAgIAo+Cj4gV0hpbGUgdXNlcnMgd2l0aCBpZGVudGljYWwgcm9sZXMgY2Fu
IHNoYXJlIHJlc291cmNlIHRyZWVzLCBpdCBzZWVtcyB5b3UnZCBuZWVkCj4gYSB1bmlxdWUgdHJl
ZSBmb3IgZWFjaCAna2luZCcgb2YgdXNlci4KPiAgIAoKSWYgeW91IGxpa2UsIHlvdSBjYW4gYWxz
byByZW1lbWJlciB0aGUgYXZhdGFyIG9iamVjdCBvbiB0aGUgcmVxdWVzdCAKb2JqZWN0LCBhbmQg
dGhlbiBtYWtlIHlvdXIgcmVzb3VyY2VzICh3aGljaCBtYXkgYmUgYSBzaW5nbGV0b24gCmluc3Rh
bmNlcykgZ2V0IHRoZSBhdmF0YXIgZnJvbSB0aGUgcmVxdWVzdC4KCkkgdGhpbmsgdGhhdCB5b3Ug
d2lsbCBzcGFyZSBhIGZldyBraWxvYnl0ZXMgb2YgUkFNIGF0IHRoZSBjb3N0IG9mIG1ha2luZyAK
eW91ciBjb2RlIGEgbGl0dGxlIGJpdCBtb3JlIGNvbXBsaWNhdGVkLgoKPj4+IEknbSB0aGlua2lu
ZyBJJ2xsIGhhdmUgdG8gd3JpdGUgc29tZXRoaW5nIGxpa2UgZGVjb3JhdG9ycyBmb3IgcGFnZSBy
ZXNvdXJjZXMKPj4+IHRoYXQgZnJvbnQtZW5kIHRoZSBsb2NhdGVDaGlsZCBtZXRob2QgKGZvciBh
Y2Nlc3MgY29udHJvbCBvdmVyIHRyYXZlcnNhbCksCj4+PiBhbmQgcGVyaGFwcyB0aGUgcmVuZGVy
SFRUUCBtZXRob2QgKGZvciBhY2Nlc3MgY29udHJvbCBvdmVyIHBhZ2UgZGVsaXZlcnkpIHdpdGgK
Pj4+ICAgICAgICAgICAgICAgICAgICAgICAgIHBlcm1pc3Npb25zIGNoZWNraW5nIGxvZ2ljLgo+
Pj4gICAgICAgCj4+IFdoYXQgaXMgeW91ciBwZXJtaXNzaW9uIG1vZGVsIGV4YWN0bHk/IFdoYXQg
a2luZCBvZiBsaW1pdGF0aW9ucyBvZgo+PiBjdXJyZW50IGd1YXJkIGltcGxlbWVudGF0aW9uIHdv
dWxkIHlvdSBsaWtlIHRvIHNvbHZlPwo+PiAgICAgCj4KPiBJdCBpcyByb2xlLWJhc2VkLCB3aGVy
ZSBhIHVzZXIgY2FuIHBvc3Nlc3MgYSBtaXggb2YgbXVsdGlwbGUgcm9sZXMsIHN1Y2ggYXMKPiB1
c2VyIEEgaXMgKG1lbWJlciwgKSwgdXNlciBCIGlzIChtZW1iZXIsIGluc3RydWN0b3IpLCB1c2Vy
IEMgaXMgKGFkbWluLCApLgo+IEZvciB0aGF0IHNjZW5hcmlvIEknZCBuZWVkIHRocmVlIHJlc291
cmNlIHRyZWVzIHRoYXQgaW5jbHVkZS9leGNsdWRlIGRpZmZlcmVudAo+IHRoaW5ncy4gIEkgY291
bGQgcHJlLWJ1aWxkIHRyZWVzIGZvciBhbGwgcG9zc2libGUgY29tYmluYXRpb25zIG9mIHJvbGVz
LCBvcgo+IGJ1aWxkIG9uIGRlbWFuZCBhbmQgY2FjaGUgdGhlIGxhc3QgTiB0cmVlcyBrZXllZCBi
eSByb2xlIGNvbWJpbmF0aW9uLiAgTm90Cj4gdmVyeSBlbGVnYW50IHRob3VnaC4KPgo+IEluc3Rl
YWQgSSdtIGxvb2tpbmcgZm9yIHNvbWV0aGluZyBtb3JlIGxpa2U6Cj4KPiAgIEBhY2Nlc3MoJ2lu
c3RydWN0b3InKQo+ICAgY2xhc3MgU3R1ZGVudFJvc3RlclBhZ2UocmVuZC5QYWdlKToKPiAgICAg
IC4uLgo+Cj4gd2hlcmUgYWZ0ZXIgdHJhdmVyc2FsIGVuZHMsIGEgcGFnZSdzIHJlbmRlckhUVFAo
KSBtZXRob2QgZG9lczoKPgo+ICAgaWYgcmVxdWVzdC51c2VyLnNlc3Npb24ucm9sZSBpbiBzZWxm
LnBhZ2Vfcm9sZXM6Cj4gICAgICAuLi5yZXR1cm4gY29udGVudAo+ICAgCgpIb3cgYWJvdXQgdGhp
czoKCiAgICAqIGNyZWF0ZSBhIGNlbnRyYWwgbWFwcGluZyBvZiB7IHByaXZsZWdlIDogW3Jlc291
cmNlQ2xhc3MsCiAgICAgIG9ySW5zdGFuY2VzXSB9CiAgICAqIG1ha2UgeW91ciBkZWNvcmF0b3Jz
IHB1dCBjbGFzc2VzcyBpbnRvIHRoYXQgbWFwcGluZwogICAgKiBzaG93IHlvdXIgcmVzb3VyY2Vz
IHdoZXJlIHRoZXkgYmVsb25nIChzZWxmLnVybCwgZm9yIGV4YW1wbGUpCiAgICAqIGluIHlvdXIg
SVJlYWxtIGltcGxlbWVudGF0aW9uLCByZXR1cm4gdHJlZXMgb2YgcmVzb3VyY2VzIGZvciBhCiAg
ICAgIGdpdmVuIHByaXZsZWdlOyB5b3UgY2FuIHJldHVybiB0cmVlcyBvZiBjbGFzc2VzcyBhbmQg
Y3JlYXRlCiAgICAgIGluc3RhbmNlcyBvbi1mbHksIHlvdSBjYW4gY3JlYXRlIGFsbCB0aGUgaW5z
dGFuY2VzIHRoYXQgeW91IHNoYXJlCiAgICAgIGJldHdlZW4gdXNlcnMgYXMgc2luZ2xldG9ucyBh
bmQgcHV0IHRoZW0gaW4gdGhvc2UgdHJlZXMgdG9vLi4uCgoKSSB0aGluayBpdCB3aWxsIHdvcmsg
d2l0aCBndWFyZDsgaXQgd2lsbCBhbHNvIGFsbG93IHlvdSB0byB3cml0ZSBBUEkgeW91IApkZXNj
cmliZWQuIERvIHlvdSBzZWUgYW55IHBvdGVudGlhbCBwcm9ibGVtcyB3aXRoIHRoaXMgYXBwcm9h
Y2g/Cgo+IEl0IGlzIHByZXR0eSBjb29sIC0gYW5kIHRoYXQgaXMgd2h5IEknbSBhc2tpbmcgYmVj
YXVzZSBUd2lzdGVkIGhhcyBhbHdheXMKPiBpbnRyb2R1Y2VkIG1lIHRvIG5ldyBpZGVhcyBhbmQg
d2F5cyBvZiBkb2luZyB0aGluZ3MuICBQZXJoYXBzIHRoZXJlIGlzCj4gc2lnbmlmaWNhbnQgc2Vj
dXJpdHkgbGV2ZXJhZ2UgYWxyZWFkeSBpbiB0aGVyZSBJJ20gbm90IHVuZGVyc3RhbmRpbmcsIG9y
IG1heWJlCj4gbW9zdCBwZW9wbGUgdXNpbmcgVHdpc3RlZCByb2xsIHRoZWlyIG93biB3ZWIgc2Vj
dXJpdHkgbWVjaGFuaXNtcy4gIApbLi4uXQo+IEJlc2lkZXMgc2VjdXJpdHksIEknbSBsb29raW5n
IGZvciBleGFtcGxlcyBvZiBzbWFydCB3YXlzIHRvIGJ1aWxkIHVwIGEgY29tcGxleAo+IHdlYnNp
dGUgZnJvbSBwYXJ0cyBkZXZlbG9wZWQgYW5kIHBhY2thZ2VkIGJ5IG90aGVycywgd2l0aG91dCBh
IGxvdCBvZiBtZXNzeQo+IHdpcmluZyBsb2dpYy4KPiAgIAoKTG9va3MgbGlrZSB5b3UgbmVlZCBE
aXZtb2QgTWFudGlzc2EuIApodHRwOi8vd3d3LmRpdm1vZC5vcmcvdHJhYy93aWtpL0Rpdm1vZE1h
bnRpc3NhIAo8aHR0cDovL3d3dy5kaXZtb2Qub3JnL3RyYWMvd2lraS9EaXZtb2RNYW50aXNzYT5o
dHRwOi8vd3d3LmRpdm1vZC5vcmcvdHJhYy93aWtpL0Rpdm1vZE1hbnRpc3NhL1NoYXJpbmcKCkJU
VywgbGlzdDogaXQgd291bGQgYmUgdWJlcmNvb2wgdG8gaGF2ZSBhIGRvd25sb2FkYWJsZSByZXBv
c2l0b3J5IG9mIApwYWNrYWdlZCBMaXZlRnJhZ21lbnRzIChvciBNYW50aXNzYSBwbHVnaW5zKS4g
QWxsIHRoZSBoYXJkIHBhcnRzIChjb2RlICYgCnRlc3RzKSBpcyBhbHJlYWR5IGRvbmUuLi4KCi0t
IAptCgotLS0tLS0tLS0tLS0tLSBuZXh0IHBhcnQgLS0tLS0tLS0tLS0tLS0KQW4gSFRNTCBhdHRh
Y2htZW50IHdhcyBzY3J1YmJlZC4uLgpVUkw6IGh0dHA6Ly90d2lzdGVkbWF0cml4LmNvbS9waXBl
cm1haWwvdHdpc3RlZC13ZWIvYXR0YWNobWVudHMvMjAwOTA0MjAvNWY1NDBkZjcvYXR0YWNobWVu
dC0wMDAxLmh0bQo=
From jeff at taupro.com  Mon Apr 20 07:05:48 2009
From: jeff at taupro.com (Jeff Rush)
Date: Mon Apr 20 07:05:52 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <49EBFDC1.6050809@bigasterisk.com>
References: <49EAF176.5000702@taupro.com> <49EBFDC1.6050809@bigasterisk.com>
Message-ID: <49EC570C.4010204@taupro.com>

Drew Perttula wrote:
> Jeff Rush wrote:
> 
> I did openid logins as a mixin class that replaces locateChild:
> 
> http://bigasterisk.com/darcs/?r=exchangeMeeting;a=headblob;f=/nevowopenid.py

Draw (and Glyph with his suggestion of Mantissa's approach), thanks for the
mentions of source I can study to better understand how I might wrap the web
delivery mechanism.

-Jeff

From glyph at divmod.com  Mon Apr 20 13:39:16 2009
From: glyph at divmod.com (glyph@divmod.com)
Date: Mon Apr 20 13:21:51 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <49EC52A5.7000009@gmail.com>
References: <49EAF176.5000702@taupro.com>
	<10c877d90904191732i43f7a15ejfac05325ebd9e3e1@mail.gmail.com>
	<49EC49B8.8020708@taupro.com> <49EC52A5.7000009@gmail.com>
Message-ID: <20090420173916.12555.1694358469.divmod.xquotient.8731@weber.divmod.com>


On 10:47 am, michal.dtz@gmail.com wrote:
>Jeff Rush pisze:
>>Michal Pasternak wrote:

>I think you can write one easily. The question is, do you really need 
>one? :-)
>>AFAIK, in Twisted, the URL tree is constructed piece by piece using a 
>>series
>>of .putChild('segment', resource) calls (or child_XXX class 
>>attributes) which
>>if you construct a complex tree with lots of conditionals based on the 
>>access
>>rights of the user, can be messy.

>Or, you can override locateChild().

I would definitely do this reactively, in locateChild, rather than try 
to build up the whole hierarchy beforehand.
>Conditionals make the code messy. That's why I like the idea of 
>returning trees of resources, that wrap the avatar object and know 
>nothing about access control.

They're not just messy.  If you need to put the knowledge of your 
security model into your application logic, there's a chance you screw 
up, and when you screw up, you have a security hole.  If the security 
logic always lives somewhere else, then you can apply security to 
application logic without changing what the application code does, and 
you only have to look at your security code for security bugs, not every 
line of code you've ever written in any application.

From dialtone at gmail.com  Mon Apr 20 15:17:31 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Mon Apr 20 15:17:09 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <49EC570C.4010204@taupro.com>
References: <49EAF176.5000702@taupro.com> <49EBFDC1.6050809@bigasterisk.com>
	<49EC570C.4010204@taupro.com>
Message-ID: <F99F3E23-FB6C-45E2-AC8B-0E571E93F0A9@gmail.com>


On Apr 20, 2009, at 4:05 AM, Jeff Rush wrote:

> Drew Perttula wrote:
>> Jeff Rush wrote:
>>
>> I did openid logins as a mixin class that replaces locateChild:
>>
>> http://bigasterisk.com/darcs/?r=exchangeMeeting;a=headblob;f=/nevowopenid.py
>
> Draw (and Glyph with his suggestion of Mantissa's approach), thanks  
> for the
> mentions of source I can study to better understand how I might wrap  
> the web
> delivery mechanism.


http://files.twisted.it/stiq_at_europython07.pdf

This is a presentation I gave at europython 07 about some of the  
practices, that
I consider best, in developing with Nevow.

Basically I define a function that touches the database for some  
reason, then
I append that function to a role (or a set of roles) using a decorator:

@forRoles('admin')
def deleteUser(avatar, email):
     @transact
     def _(email):
         return users.delete(users.c.email==email).execute()
     return _(email)

@forRoles('anonymous', 'user', 'admin')
def ?ndUser(avatar, email):
     @transact
     def _(email):
         return users.select(sq.and_(users.c.email==email,
users.c.enabled==True)).execute().fetchone()
     return _(email)

This is one example of such a thing. The avatar object is exactly  
what's returned
by cred/guard and it's defined in the following way:

import zope.interface as z

class Avatar(object):
     z.implements(IAvatar)
     def __init__(self, behavior, *args, **kw):
         self.username = None
         self.email = None
         self.role = None
         self.password = None
         self.conf = None
         super(Avatar, self).__init__(*args, **kw)
         self._actions = dict(((f.__name__, f) for f in behavior))

     def __getattr__(self, name):
         try:
             fun = self._actions[name]
         except KeyError:
             raise NoPermission(name)
         return lambda *args, **kwargs: fun(self, *args, **kwargs)


So that it takes a set of methods that it knows and allows you to call  
them,
if a method is not present you probably don't have enough permissions
(or you made a mistake in writing it).

This is paired with some clever use of patterns:

  <nevow:invisible nevow:render="optional">
              <nevow:invisible nevow:pattern="None">
                Login to upload images.
              </nevow:invisible>

              <nevow:invisible nevow:pattern="default">
                <nevow:invisible nevow:render="form upload" />
              </nevow:invisible>
</nevow:invisible>

The optional (bad name I know) checks for the role of the current  
avatar,
if it's None it means that the user is not logged in, otherwise you  
can use
a specific role or default for 'all the others':

This is how it's implemented:

def render_optional(self, ctx, data):
     iq = inevow.IQ(ctx)
     try:
         t = iq.onePattern(str(self.avatar.role))
     except stan.NodeNotFound:
         try:
             t = iq.onePattern('default')
         except stan.NodeNotFound:
             t = ''
     return ctx.tag[t]

I'm not sure it's still usable though with newer nevow versions,  
although
it might still be.

The other part (navigating in the tree) should be solvable by using
another decorator that could look like this:

def requiresRole(role, loginPage=LoginPage):
     def _f(fun):
         def __f(avatar, *args, **kwargs):
             if role not in avatar.roles:
                  return loginPage(avatar)
             return fun(avatar, *args, **kwargs)
        return __f
     return _f

Or something similar (this is not tested).

It's been a while since I last used this code but it's concept is  
still good.

--
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20090420/bc5ad838/PGP.pgp
From michal.dtz at gmail.com  Tue Apr 21 08:30:55 2009
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgiBQYXN0ZXJuYWs=?=)
Date: Tue Apr 21 08:31:03 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <F99F3E23-FB6C-45E2-AC8B-0E571E93F0A9@gmail.com>
References: <49EAF176.5000702@taupro.com>
	<49EBFDC1.6050809@bigasterisk.com>	<49EC570C.4010204@taupro.com>
	<F99F3E23-FB6C-45E2-AC8B-0E571E93F0A9@gmail.com>
Message-ID: <49EDBC7F.4070609@gmail.com>

Valentino Volonghi pisze:
> http://files.twisted.it/stiq_at_europython07.pdf
>
> This is a presentation I gave at europython 07 about some of the 
> practices, that
> I consider best, in developing with Nevow.

Thank you very much for sharing those ideas & code samples!

-- 
m


From vitaly at synapticvision.com  Tue Apr 21 13:47:06 2009
From: vitaly at synapticvision.com (vitaly@synapticvision.com)
Date: Tue Apr 21 13:47:58 2009
Subject: [Twisted-web] reactor.listenSSL() question
Message-ID: <20090421134706.13916qrh7exg5msk@216.129.205.5>

Hi,
I'm trying to make work the following client/server, but the
server always return: HTTP/1.1 400 Bad Request.
The example server from Twisted.com(echoserv_ssl.py) working fine
but it uses:
factory = Factory()
factory.protocol = echoserv.Echo

Appreciate any help!!!

---------
server.py
---------
from twisted.internet import reactor, defer, ssl
from twisted.web import server, static, resource
from OpenSSL import SSL
from pyamf.remoting.gateway.twisted import TwistedGateway
from pyamf.remoting.gateway import expose_request

class FlexInterface():
      ...

class ServerContextFactory:

      # server.key and server.crt files existing and are real  
certificate files.
      def getContext(self):

          ctx = SSL.Context(SSL.SSLv23_METHOD)
          ctx.use_certificate_file('server.crt')
          ctx.use_privatekey_file('server.key')
          return ctx


if __name__ == "__main__":

      gateway = TwistedGateway({ "controller": FlexInterface() },
expose_request=False)

      root = resource.Resource()
      root.putChild('', gateway)

      reactor.listenSSL(8050, server.Site(root), ServerContextFactory())
      reactor.run()


---------
client.py
---------
#!/usr/bin/python
# Copyright (c) 2001-2004 Twisted Matrix Laboratories.
# See LICENSE for details.


from OpenSSL import SSL
import sys

from twisted.internet.protocol import ClientFactory
from twisted.internet import protocol
from twisted.protocols.basic import LineReceiver
from twisted.internet import ssl, reactor


class EchoClient(LineReceiver):
      end="Bye-bye!"
      def connectionMade(self):
          self.sendLine("Hello, world!")
          self.sendLine("What a fine day it is.")
          self.sendLine(self.end)

      def connectionLost(self, reason):
          print 'connection lost (protocol)'

      def lineReceived(self, line):
          print "receive:", line
          if line==self.end:
              self.transport.loseConnection()
              print "Connection closed"

class EchoClientFactory(ClientFactory):
      protocol = EchoClient

      def clientConnectionFailed(self, connector, reason):
          print 'connection failed:', reason.getErrorMessage()
          reactor.stop()

      def clientConnectionLost(self, connector, reason):
          print 'connection lost:', reason.getErrorMessage()
          reactor.stop()

def main():
      factory = EchoClientFactory()

      reactor.connectSSL('localhost', 8050, factory,
ssl.ClientContextFactory(), timeout=3)
      reactor.run()

if __name__ == '__main__':
      main()


----- End forwarded message -----


From exarkun at divmod.com  Tue Apr 21 14:13:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Apr 21 14:13:11 2009
Subject: [Twisted-web] reactor.listenSSL() question
In-Reply-To: <20090421134706.13916qrh7exg5msk@216.129.205.5>
Message-ID: <20090421181300.24697.1482333809.divmod.quotient.10230@henry.divmod.com>

On Tue, 21 Apr 2009 13:47:06 -0400, vitaly@synapticvision.com wrote:
>Hi,
>I'm trying to make work the following client/server, but the
>server always return: HTTP/1.1 400 Bad Request.

You seem to be connecting something which is not an HTTP client to an
HTTP server.  So the HTTP server complains because what is being sent
to it is not an HTTP request.

> [snip - setup]
>      reactor.listenSSL(8050, server.Site(root), ServerContextFactory())
>      reactor.run()
>

There's your HTTP server.

> [snip - imports]
>class EchoClient(LineReceiver):
>      end="Bye-bye!"
>      def connectionMade(self):
>          self.sendLine("Hello, world!")
>          self.sendLine("What a fine day it is.")
>          self.sendLine(self.end)
> [snip - more stuff]
>      factory = EchoClientFactory()
>
>      reactor.connectSSL('localhost', 8050, factory,
>ssl.ClientContextFactory(), timeout=3)
>      reactor.run()

And there's your client - something which isn't going to send HTTP
requests to the server it connects to.

So a 400 response is precisely what you should expect here. :)

Jean-Paul

From vitaly at synapticvision.com  Tue Apr 21 14:54:03 2009
From: vitaly at synapticvision.com (vitaly@synapticvision.com)
Date: Tue Apr 21 14:54:54 2009
Subject: [Twisted-web] reactor.listenSSL() question
In-Reply-To: <20090421181300.24697.1482333809.divmod.quotient.10230@henry.divmod.com>
References: <20090421181300.24697.1482333809.divmod.quotient.10230@henry.divmod.com>
Message-ID: <20090421145403.130636912f89o7rg@216.129.205.5>

Examples of both, client and server, were taken from  
http://twistedmatrix.com/projects/core/documentation/examples/#auto2

Now, what I've change on server side is instead of <A> to use <B>:

<A>:
factory = Factory()
factory.protocol = Echo

<B>:
from pyamf.remoting.gateway.twisted import TwistedGateway
from pyamf.remoting.gateway import expose_request

gateway = TwistedGateway({ "controller": FlexInterface() },  
expose_request=False, authenticator=None)
root = resource.Resource()
root.putChild('', gateway)

The client side(echoclient_ssl.py) is working fine with <A>, but for  
<B> always return 400.


:-))



Quoting "Jean-Paul Calderone" <exarkun@divmod.com>:

> On Tue, 21 Apr 2009 13:47:06 -0400, vitaly@synapticvision.com wrote:
>> Hi,
>> I'm trying to make work the following client/server, but the
>> server always return: HTTP/1.1 400 Bad Request.
>
> You seem to be connecting something which is not an HTTP client to an
> HTTP server.  So the HTTP server complains because what is being sent
> to it is not an HTTP request.
>
>> [snip - setup]
>>     reactor.listenSSL(8050, server.Site(root), ServerContextFactory())
>>     reactor.run()
>>
>
> There's your HTTP server.
>
>> [snip - imports]
>> class EchoClient(LineReceiver):
>>     end="Bye-bye!"
>>     def connectionMade(self):
>>         self.sendLine("Hello, world!")
>>         self.sendLine("What a fine day it is.")
>>         self.sendLine(self.end)
>> [snip - more stuff]
>>     factory = EchoClientFactory()
>>
>>     reactor.connectSSL('localhost', 8050, factory,
>> ssl.ClientContextFactory(), timeout=3)
>>     reactor.run()
>
> And there's your client - something which isn't going to send HTTP
> requests to the server it connects to.
>
> So a 400 response is precisely what you should expect here. :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



From exarkun at divmod.com  Tue Apr 21 14:58:18 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Apr 21 14:58:29 2009
Subject: [Twisted-web] reactor.listenSSL() question
In-Reply-To: <20090421145403.130636912f89o7rg@216.129.205.5>
Message-ID: <20090421185818.24697.2000973493.divmod.quotient.10246@henry.divmod.com>

On Tue, 21 Apr 2009 14:54:03 -0400, vitaly@synapticvision.com wrote:
>Examples of both, client and server, were taken from 
>http://twistedmatrix.com/projects/core/documentation/examples/#auto2

Okay.  That doesn't mean they'll work together.  There are a lot of
examples on that page - though no HTTP server examples that I can see.

>
>Now, what I've change on server side is instead of <A> to use <B>:
>
><A>:
>factory = Factory()
>factory.protocol = Echo
>
><B>:
>from pyamf.remoting.gateway.twisted import TwistedGateway
>from pyamf.remoting.gateway import expose_request
>
>gateway = TwistedGateway({ "controller": FlexInterface() }, 
>expose_request=False, authenticator=None)
>root = resource.Resource()
>root.putChild('', gateway)
>
>The client side(echoclient_ssl.py) is working fine with <A>, but for  <B> 
>always return 400.
>

Okay.  <B> is still an HTTP server, so you still need an HTTP client.

Jean-Paul

From exarkun at divmod.com  Tue Apr 21 15:06:04 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Apr 21 15:06:16 2009
Subject: pyAMF server rejecting HTTP requests (was Re: [Twisted-web]
	reactor.listenSSL() question)
In-Reply-To: <20090421150407.66962ep0ubqlrpus@216.129.205.5>
Message-ID: <20090421190604.24697.1067744090.divmod.quotient.10250@henry.divmod.com>

On Tue, 21 Apr 2009 15:04:07 -0400, vitaly@synapticvision.com wrote:
>Those are working fine with each other on SSL together:
>echoserv_ssl.py - simple SSL server
>echoclient.py - simple TCP client
>
>but instead of twisted protocol I'd like to use pyAMF.twisted.gateway.
>And the last one denies ALL the HTTP requests as 400 ...
>

That sounds like a question about pyAMF (not about reactor.listenSSL).  I
haven't ever used pyAMF, but maybe someone else on the list knows something
about it, or maybe there's a pyAMF list you can ask.

Jean-Paul

From maillists at ivsn.com  Tue Apr 21 16:57:17 2009
From: maillists at ivsn.com (Paul Reznicek)
Date: Tue Apr 21 16:58:00 2009
Subject: [Twisted-web] Athena LiveElement: how to putChild under unique
	session URL?
In-Reply-To: <20090210013639.12853.421780875.divmod.quotient.8088@henry.divmod.com>
References: <20090210013639.12853.421780875.divmod.quotient.8088@henry.divmod.com>
Message-ID: <49EE332D.2070009@ivsn.com>

Hello All,

LiveElement is fantastic, but I'm too stupid to find out,
how to put temporary page under sessiop URL...
This work for js modules at start like:
    http://localhost:8080/user/<HASH clientID>/jsmodule/athena_test

I'd like to add temporary during run time something like:
    http://localhost:8080/user/<HASH clientID>/your_data
page or staticFile, which should exists only few minutes.

How can I add a child to the livepage session path?

Best regards,
Paul

From jeff at taupro.com  Wed Apr 22 00:49:34 2009
From: jeff at taupro.com (Jeff Rush)
Date: Wed Apr 22 00:49:48 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <F99F3E23-FB6C-45E2-AC8B-0E571E93F0A9@gmail.com>
References: <49EAF176.5000702@taupro.com>
	<49EBFDC1.6050809@bigasterisk.com>	<49EC570C.4010204@taupro.com>
	<F99F3E23-FB6C-45E2-AC8B-0E571E93F0A9@gmail.com>
Message-ID: <49EEA1DE.1000301@taupro.com>

Valentino Volonghi wrote:
> 
> On Apr 20, 2009, at 4:05 AM, Jeff Rush wrote:
> 
> http://files.twisted.it/stiq_at_europython07.pdf
> 
> This is a presentation I gave at europython 07 about some of the
> practices, that I consider best, in developing with Nevow.

<snip>

Valentino, thanks very much for that long email outlining how you use Nevow.
It definitely helps me with ideas I've not seen anywhere else.

-Jeff

From tv at twistedmatrix.com  Wed Apr 22 05:04:15 2009
From: tv at twistedmatrix.com (Hope Rios)
Date: Wed Apr 22 04:04:39 2009
Subject: [Twisted-web] One of a kind Gucci reps
Message-ID: <3343gsz160106XIUItv@twistedmatrix.com>

So you thought owning a brand name watch was out of your reach? Think again!
http://www.wofovaxuc.cn

Diam0nd Reps has it all: Rolex, Cartier, Tag Heuer, Breitling, and many more, for a fraction of the price of an original watch. And don't forget: when you order two watches, you get an extra 15 percent discount over our already low prices!
http://www.wofovaxuc.cn

With so many watches that look and work like the real thing, I guarantee you'll have a delicious time finding yours at our store!






From glyph at divmod.com  Wed Apr 22 06:55:23 2009
From: glyph at divmod.com (glyph@divmod.com)
Date: Wed Apr 22 06:37:49 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <49EEA1DE.1000301@taupro.com>
References: <49EAF176.5000702@taupro.com> <49EBFDC1.6050809@bigasterisk.com>
	<49EC570C.4010204@taupro.com>
	<F99F3E23-FB6C-45E2-AC8B-0E571E93F0A9@gmail.com>
	<49EEA1DE.1000301@taupro.com>
Message-ID: <20090422105523.12555.530944045.divmod.xquotient.8789@weber.divmod.com>


On 04:49 am, jeff@taupro.com wrote:
>Valentino Volonghi wrote:
>>
>>On Apr 20, 2009, at 4:05 AM, Jeff Rush wrote:
>>
>>http://files.twisted.it/stiq_at_europython07.pdf
>>
>>This is a presentation I gave at europython 07 about some of the
>>practices, that I consider best, in developing with Nevow.
>
><snip>
>
>Valentino, thanks very much for that long email outlining how you use 
>Nevow.
>It definitely helps me with ideas I've not seen anywhere else.

Jeff, I'd appreciate it if you could collate some of these ideas and 
experiences into some write-up of your own - there isn't a lot of folk 
knowledge about there about how to get the most out of Nevow or 
Twisted.Web.  It would be nice if google had more to find on this 
subject than bugs in our ticket trackers :).

From glyph at divmod.com  Wed Apr 22 07:47:58 2009
From: glyph at divmod.com (glyph@divmod.com)
Date: Wed Apr 22 07:30:23 2009
Subject: [Twisted-web] Athena LiveElement: how to putChild under unique
	session URL?
In-Reply-To: <49EE332D.2070009@ivsn.com>
References: <20090210013639.12853.421780875.divmod.quotient.8088@henry.divmod.com>
	<49EE332D.2070009@ivsn.com>
Message-ID: <20090422114758.12555.1153349173.divmod.xquotient.8879@weber.divmod.com>


On 21 Apr, 08:57 pm, maillists@ivsn.com wrote:
>Hello All,
>
>LiveElement is fantastic, but I'm too stupid to find out,
>how to put temporary page under sessiop URL...
>This work for js modules at start like:
>    http://localhost:8080/user/<HASH clientID>/jsmodule/athena_test
>
>I'd like to add temporary during run time something like:
>    http://localhost:8080/user/<HASH clientID>/your_data
>page or staticFile, which should exists only few minutes.
>
>How can I add a child to the livepage session path?

The magical hash URL you're referring to is just an alias for your page 
instance.  So all you need to do is, in your LiveElement:

    self.page.putChild("your_data", YourDataResource())

That YourDataResource() object (and its attendant URL) will then live as 
long as your LivePage connection does.

This is an interesting use-case, and it should work fine - but be aware 
that you're relying on a pretty weird little corner of implementation 
details here.  It certainly never occurred to *me* that somebody would 
want to do this :).

Particularly, there's no public API for generating this URL; you'll have 
to rely on the fact that url.here.child(self.clientID) keeps working.

From listsin at integrateddevcorp.com  Wed Apr 22 09:21:24 2009
From: listsin at integrateddevcorp.com (s s)
Date: Wed Apr 22 09:21:59 2009
Subject: [Twisted-web] Finer-Grained Security System for Twisted Web/Nevow?
In-Reply-To: <20090422105523.12555.530944045.divmod.xquotient.8789@weber.divmod.com>
References: <49EAF176.5000702@taupro.com> <49EBFDC1.6050809@bigasterisk.com>
	<49EC570C.4010204@taupro.com>
	<F99F3E23-FB6C-45E2-AC8B-0E571E93F0A9@gmail.com>
	<49EEA1DE.1000301@taupro.com>
	<20090422105523.12555.530944045.divmod.xquotient.8789@weber.divmod.com>
Message-ID: <4A411E9C-E011-4B9D-8BE2-365E1BE1D0BF@integrateddevcorp.com>


On Apr 22, 2009, at 6:55 AM, glyph@divmod.com wrote:

>
> On 04:49 am, jeff@taupro.com wrote:
>> Valentino Volonghi wrote:
>>>
>>> On Apr 20, 2009, at 4:05 AM, Jeff Rush wrote:
>>>
>>> http://files.twisted.it/stiq_at_europython07.pdf
>>>
>>> This is a presentation I gave at europython 07 about some of the
>>> practices, that I consider best, in developing with Nevow.
>>
>> <snip>
>>
>> Valentino, thanks very much for that long email outlining how you  
>> use Nevow.
>> It definitely helps me with ideas I've not seen anywhere else.
>
> Jeff, I'd appreciate it if you could collate some of these ideas and  
> experiences into some write-up of your own - there isn't a lot of  
> folk knowledge about there about how to get the most out of Nevow or  
> Twisted.Web.  It would be nice if google had more to find on this  
> subject than bugs in our ticket trackers :).

I'd be happy to review it since I gave up in frustration after, as you  
said, finding not much beyond bug reports filed against them by people  
who already knew how to use them.

I really need Twisted for some of my app but ended up having to use  
django, running behind CherryPy's WSGI with Twisted mixed in to do the  
real work.

The Twisted WSGI server gave me fits with missing CSS files and other  
oddities I don't know enough to track down myself or I would have used  
that.

Obviously, that's a different discussion but I wasted so much time  
trying to get Nevow to do  _anything_ that I can't pursue it right now.

S


From maillists at ivsn.com  Wed Apr 22 09:32:24 2009
From: maillists at ivsn.com (Paul Reznicek)
Date: Wed Apr 22 09:33:07 2009
Subject: [Twisted-web] Athena LiveElement: how to putChild under unique
	session URL?
In-Reply-To: <20090422114758.12555.1153349173.divmod.xquotient.8879@weber.divmod.com>
References: <20090210013639.12853.421780875.divmod.quotient.8088@henry.divmod.com>	<49EE332D.2070009@ivsn.com>
	<20090422114758.12555.1153349173.divmod.xquotient.8879@weber.divmod.com>
Message-ID: <49EF1C68.5080503@ivsn.com>

glyph@divmod.com wrote:
> On 21 Apr, 08:57 pm, maillists@ivsn.com wrote:
>> Hello All,
>>
>> LiveElement is fantastic, but I'm too stupid to find out,
>> how to put temporary page under sessiop URL...
>> This work for js modules at start like:
>>    http://localhost:8080/user/<HASH clientID>/jsmodule/athena_test
>>
>> I'd like to add temporary during run time something like:
>>    http://localhost:8080/user/<HASH clientID>/your_data
>> page or staticFile, which should exists only few minutes.
>>
>> How can I add a child to the livepage session path?
> 
> The magical hash URL you're referring to is just an alias for your page 
> instance.  So all you need to do is, in your LiveElement:
> 
>    self.page.putChild("your_data", YourDataResource())
> 
> That YourDataResource() object (and its attendant URL) will then live as 
> long as your LivePage connection does.
> 
> This is an interesting use-case, and it should work fine - but be aware 
> that you're relying on a pretty weird little corner of implementation 
> details here.  It certainly never occurred to *me* that somebody would 
> want to do this :).
> 
> Particularly, there's no public API for generating this URL; you'll have 
> to rely on the fact that url.here.child(self.clientID) keeps working.
> 
Thank you for that fast answer, I've tried before and now again, but this
work only when one instance is running. If you try on i.e. chatterbox,
after 2nd user join it is no more reliable, few times it works, but mostly
not.

I solved the problem by overriding locateChild in the top site instance of
WidgetPluginRoot by checking segments[0] against all instances of
elementFactory comparing their clientID and on match passing the request
to own method added to LiveElement derived class.
It is complicated, but seems to work... If there is an easier solution,
I'll be happy.

Caveat is, that instances of gone clients are keeping in memory. Is there
a way to find out, that a client is gone (closed browser or switched to
other site)?

Thanks & regards,
Paul

From wthie at thiengineering.ch  Wed Apr 22 10:44:17 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed Apr 22 10:45:00 2009
Subject: [Twisted-web] Athena LiveElement: how to putChild under unique
	session URL?
In-Reply-To: <49EF1C68.5080503@ivsn.com>
References: <20090210013639.12853.421780875.divmod.quotient.8088@henry.divmod.com>	<49EE332D.2070009@ivsn.com>	<20090422114758.12555.1153349173.divmod.xquotient.8879@weber.divmod.com>
	<49EF1C68.5080503@ivsn.com>
Message-ID: <49EF2D41.5090708@thiengineering.ch>

Paul Reznicek wrote:
> glyph@divmod.com wrote:
>> On 21 Apr, 08:57 pm, maillists@ivsn.com wrote:
>>> Hello All,
>>>
>>> LiveElement is fantastic, but I'm too stupid to find out,
>>> how to put temporary page under sessiop URL...
>>> This work for js modules at start like:
>>>    http://localhost:8080/user/<HASH clientID>/jsmodule/athena_test
>>>
>>> I'd like to add temporary during run time something like:
>>>    http://localhost:8080/user/<HASH clientID>/your_data
>>> page or staticFile, which should exists only few minutes.
> Caveat is, that instances of gone clients are keeping in memory. Is there
> a way to find out, that a client is gone (closed browser or switched to
> other site)?
Welcome to the land of garbage collecting languages... What was the 
losing memory of the C++ ages is now the not releasing memory because of 
noncollectable garbage and server processes eating all the memory the 
machine has. I had to learn it the hard way but NEVER ever store a 
reference to something like sessions, mind or the the hierarchy of your 
LiveElements unless you're prepared to handle the breakup of the 
reference at cleanup time. Also keep in mind that the object hierarchy 
of client and server must be in sync or you're risking that the detach 
functionality does not work as advertised. Please see the 
detach/detached functionality in athena.py

class thePage(athena.LivePage):

   def beforeRender(self, ctx):
            :
     d = self.notifyOnDisconnect()
     d.addErrback(self.disconn)

   def disconn(self, reason):
     """
     we will be called back when the client disconnects, just iterate
     over all children and call a disconnected func if available
     """
     for child in self.liveFragmentChildren:
       if hasattr(child, 'disconnected'):
         child.disconnected(reason);

Werner

From maillists at ivsn.com  Wed Apr 22 10:47:32 2009
From: maillists at ivsn.com (Paul Reznicek)
Date: Wed Apr 22 10:48:12 2009
Subject: [Twisted-web] Athena LiveElement: how to putChild under unique
	session URL?
In-Reply-To: <20090422114758.12555.1153349173.divmod.xquotient.8879@weber.divmod.com>
References: <20090210013639.12853.421780875.divmod.quotient.8088@henry.divmod.com>	<49EE332D.2070009@ivsn.com>
	<20090422114758.12555.1153349173.divmod.xquotient.8879@weber.divmod.com>
Message-ID: <49EF2E04.1050705@ivsn.com>

CORRECTED PREVIOUS ANSWER
glyph@divmod.com wrote:
> On 21 Apr, 08:57 pm, maillists@ivsn.com wrote:
>> Hello All,
>>
>> LiveElement is fantastic, but I'm too stupid to find out,
>> how to put temporary page under sessiop URL...
>> This work for js modules at start like:
>>    http://localhost:8080/user/<HASH clientID>/jsmodule/athena_test
>>
>> I'd like to add temporary during run time something like:
>>    http://localhost:8080/user/<HASH clientID>/your_data
>> page or staticFile, which should exists only few minutes.
>>
>> How can I add a child to the livepage session path?
> 
> The magical hash URL you're referring to is just an alias for your page 
> instance.  So all you need to do is, in your LiveElement:
> 
>    self.page.putChild("your_data", YourDataResource())
> 
> That YourDataResource() object (and its attendant URL) will then live as 
> long as your LivePage connection does.
> 
> This is an interesting use-case, and it should work fine - but be aware 
> that you're relying on a pretty weird little corner of implementation 
> details here.  It certainly never occurred to *me* that somebody would 
> want to do this :).
> 
> Particularly, there's no public API for generating this URL; you'll have 
> to rely on the fact that url.here.child(self.clientID) keeps working.
> 
Sorry for confusing - your solution WORK FINE, even better than my,
I used wrong testing method.

Open question is, how to find out, that client is gone. To stay with
chatterbox example:
   ChatRoom().chatters  is a list of registered clients
How can I check, who of them is still connected and who is invalid,
so I can delete them from the list?

Thanks again,
Paul

From maillists at ivsn.com  Wed Apr 22 13:29:23 2009
From: maillists at ivsn.com (Paul Reznicek)
Date: Wed Apr 22 13:30:06 2009
Subject: [Twisted-web] Athena LiveElement: how to putChild under unique
	session URL?
In-Reply-To: <49EF2D41.5090708@thiengineering.ch>
References: <20090210013639.12853.421780875.divmod.quotient.8088@henry.divmod.com>	<49EE332D.2070009@ivsn.com>	<20090422114758.12555.1153349173.divmod.xquotient.8879@weber.divmod.com>	<49EF1C68.5080503@ivsn.com>
	<49EF2D41.5090708@thiengineering.ch>
Message-ID: <49EF53F3.8080400@ivsn.com>

Werner Thie wrote:
> Paul Reznicek wrote:
>> glyph@divmod.com wrote:
>>> On 21 Apr, 08:57 pm, maillists@ivsn.com wrote:
>>>> Hello All,
>>>>
>>>> LiveElement is fantastic, but I'm too stupid to find out,
>>>> how to put temporary page under sessiop URL...
>>>> This work for js modules at start like:
>>>>    http://localhost:8080/user/<HASH clientID>/jsmodule/athena_test
>>>>
>>>> I'd like to add temporary during run time something like:
>>>>    http://localhost:8080/user/<HASH clientID>/your_data
>>>> page or staticFile, which should exists only few minutes.
>> Caveat is, that instances of gone clients are keeping in memory. Is there
>> a way to find out, that a client is gone (closed browser or switched to
>> other site)?
> Welcome to the land of garbage collecting languages... What was the 
> losing memory of the C++ ages is now the not releasing memory because of 
> noncollectable garbage and server processes eating all the memory the 
> machine has. I had to learn it the hard way but NEVER ever store a 
> reference to something like sessions, mind or the the hierarchy of your 
> LiveElements unless you're prepared to handle the breakup of the 
> reference at cleanup time. Also keep in mind that the object hierarchy 
> of client and server must be in sync or you're risking that the detach 
> functionality does not work as advertised. Please see the 
> detach/detached functionality in athena.py
> 
> class thePage(athena.LivePage):
> 
>   def beforeRender(self, ctx):
>            :
>     d = self.notifyOnDisconnect()
>     d.addErrback(self.disconn)
> 
>   def disconn(self, reason):
>     """
>     we will be called back when the client disconnects, just iterate
>     over all children and call a disconnected func if available
>     """
>     for child in self.liveFragmentChildren:
>       if hasattr(child, 'disconnected'):
>         child.disconnected(reason);
> 
> Werner

Great! Exactly what I needed to remove cleanly user with loosed connection.
Together with Glyph's "_self.page.putChild('your_data', YourDataResource())_"
all my problems are solved.

BTW: How to use *detach* and *detached* in LiveElement? I didn't find out...

Many thanks, Paul

From vitaly at synapticvision.com  Wed Apr 22 14:07:24 2009
From: vitaly at synapticvision.com (vitaly@synapticvision.com)
Date: Wed Apr 22 14:08:17 2009
Subject: [Twisted-web] Session manager and twisted
Message-ID: <20090422140724.21111uq1eutyclb4@216.129.205.5>

Hi,
is there any example of session manager that plays with Twisted and  
usage of such manager?
Appreciate any help.



From bnkuhn at gmail.com  Fri Apr 24 14:55:20 2009
From: bnkuhn at gmail.com (Brian Kuhn)
Date: Fri Apr 24 14:55:23 2009
Subject: [Twisted-web] proxy http 204
Message-ID: <335a812d0904241155p30827ed1g945609d347a9558d@mail.gmail.com>

I've written an http proxy using twisted.  It works fine, except when
proxying an HTTP 204 response.
The handleStatus, handleHeader and handleEndHeaders all get called.  Then
the process just hangs for 10+ seconds (presumably timing out).  Then
handleResponseEnd gets called (never calling handleResponsePart).

All of this is expected, except for the hanging part.  Anyone have any ideas
what's going on here?
Thanks,
    Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20090424/89=
308838/attachment.htm
From exarkun at divmod.com  Fri Apr 24 15:01:53 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri Apr 24 15:02:08 2009
Subject: [Twisted-web] proxy http 204
In-Reply-To: <335a812d0904241155p30827ed1g945609d347a9558d@mail.gmail.com>
Message-ID: <20090424190153.24697.1830717712.divmod.quotient.11290@henry.divmod.com>

On Fri, 24 Apr 2009 11:55:20 -0700, Brian Kuhn <bnkuhn@gmail.com> wrote:
>I've written an http proxy using twisted.  It works fine, except when
>proxying an HTTP 204 response.
>The handleStatus, handleHeader and handleEndHeaders all get called.  Then
>the process just hangs for 10+ seconds (presumably timing out).  Then
>handleResponseEnd gets called (never calling handleResponsePart).
>
>All of this is expected, except for the hanging part.  Anyone have any ideas
>what's going on here?

204 is "No Content".  Quoting the RFC:

   The 204 response MUST NOT include a message-body, and thus is always
   terminated by the first empty line after the header fields.

This, despite the fact that a 204 response may include a content-length
header with a non-zero value.  Make sure you're handling this properly.

Jean-Paul

From bnkuhn at gmail.com  Fri Apr 24 15:40:33 2009
From: bnkuhn at gmail.com (Brian Kuhn)
Date: Fri Apr 24 15:48:24 2009
Subject: [Twisted-web] proxy http 204
In-Reply-To: <20090424190153.24697.1830717712.divmod.quotient.11290@henry.divmod.com>
References: <335a812d0904241155p30827ed1g945609d347a9558d@mail.gmail.com>
	<20090424190153.24697.1830717712.divmod.quotient.11290@henry.divmod.com>
Message-ID: <335a812d0904241240g42aff6ecs5ceca4610335bfc9@mail.gmail.com>

I understand what a 204 is.  It appears though that the framework is hanging
on them...not my code.
Twisted calls my handleEndHeaders method, then hangs for awhile, then calls
my handleResponseEnd method.

Perhaps there is something I need to do in the handleStatus method to
preempt this behavior.  Any idea how I can tell Twisted to not timeout
waiting for content that will never come?

-Brian




On Fri, Apr 24, 2009 at 12:01 PM, Jean-Paul Calderone <exarkun@divmod.com>w=
rote:

> On Fri, 24 Apr 2009 11:55:20 -0700, Brian Kuhn <bnkuhn@gmail.com> wrote:
>
>> I've written an http proxy using twisted.  It works fine, except when
>> proxying an HTTP 204 response.
>> The handleStatus, handleHeader and handleEndHeaders all get called.  Then
>> the process just hangs for 10+ seconds (presumably timing out).  Then
>> handleResponseEnd gets called (never calling handleResponsePart).
>>
>> All of this is expected, except for the hanging part.  Anyone have any
>> ideas
>> what's going on here?
>>
>
> 204 is "No Content".  Quoting the RFC:
>
>  The 204 response MUST NOT include a message-body, and thus is always
>  terminated by the first empty line after the header fields.
>
> This, despite the fact that a 204 response may include a content-length
> header with a non-zero value.  Make sure you're handling this properly.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20090424/8c=
3db563/attachment.htm
From exarkun at divmod.com  Fri Apr 24 16:01:40 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri Apr 24 16:01:52 2009
Subject: [Twisted-web] proxy http 204
In-Reply-To: <335a812d0904241240g42aff6ecs5ceca4610335bfc9@mail.gmail.com>
Message-ID: <20090424200140.24697.893291244.divmod.quotient.11299@henry.divmod.com>

On Fri, 24 Apr 2009 12:40:33 -0700, Brian Kuhn <bnkuhn@gmail.com> wrote:
>I understand what a 204 is.  It appears though that the framework is hanging
>on them...not my code.
>Twisted calls my handleEndHeaders method, then hangs for awhile, then calls
>my handleResponseEnd method.
>
>Perhaps there is something I need to do in the handleStatus method to
>preempt this behavior.  Any idea how I can tell Twisted to not timeout
>waiting for content that will never come?
>

I dunno, maybe.  It's hard to know without being able to see your code.
I suppose you have an HTTPClient subclass?  Or maybe a ProxyClient sub-
class?  Likely you should be getting a `handleResponseEnd` when the
connection is closed.  If the server never closes the connection, then
perhaps you'll never get `handleResponseEnd`, I'm not sure.

Jean-Paul

From bnkuhn at gmail.com  Fri Apr 24 17:01:34 2009
From: bnkuhn at gmail.com (Brian Kuhn)
Date: Fri Apr 24 17:01:37 2009
Subject: [Twisted-web] proxy http 204
In-Reply-To: <20090424200140.24697.893291244.divmod.quotient.11299@henry.divmod.com>
References: <335a812d0904241240g42aff6ecs5ceca4610335bfc9@mail.gmail.com>
	<20090424200140.24697.893291244.divmod.quotient.11299@henry.divmod.com>
Message-ID: <335a812d0904241401x2893fc9fn38e3e9be9cfd2c4f@mail.gmail.com>

Now that you mention it, this probably does have something to do with the
server keeping the connection alive since the client is sending keep-alive
headers...

Keep-Alive : 300
Proxy-Connection: keep-alive

I'm going to investigate this a little further before I post my code.  I'll
let you know what I find out.

Thanks,
    Brian





On Fri, Apr 24, 2009 at 1:01 PM, Jean-Paul Calderone <exarkun@divmod.com>wr=
ote:

> On Fri, 24 Apr 2009 12:40:33 -0700, Brian Kuhn <bnkuhn@gmail.com> wrote:
>
>> I understand what a 204 is.  It appears though that the framework is
>> hanging
>> on them...not my code.
>> Twisted calls my handleEndHeaders method, then hangs for awhile, then
>> calls
>> my handleResponseEnd method.
>>
>> Perhaps there is something I need to do in the handleStatus method to
>> preempt this behavior.  Any idea how I can tell Twisted to not timeout
>> waiting for content that will never come?
>>
>>
> I dunno, maybe.  It's hard to know without being able to see your code.
> I suppose you have an HTTPClient subclass?  Or maybe a ProxyClient sub-
> class?  Likely you should be getting a `handleResponseEnd` when the
> connection is closed.  If the server never closes the connection, then
> perhaps you'll never get `handleResponseEnd`, I'm not sure.
>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20090424/0f=
760a02/attachment.htm
From bnkuhn at gmail.com  Fri Apr 24 18:27:14 2009
From: bnkuhn at gmail.com (Brian Kuhn)
Date: Fri Apr 24 18:27:17 2009
Subject: [Twisted-web] proxy http 204
In-Reply-To: <335a812d0904241401x2893fc9fn38e3e9be9cfd2c4f@mail.gmail.com>
References: <335a812d0904241240g42aff6ecs5ceca4610335bfc9@mail.gmail.com>
	<20090424200140.24697.893291244.divmod.quotient.11299@henry.divmod.com>
	<335a812d0904241401x2893fc9fn38e3e9be9cfd2c4f@mail.gmail.com>
Message-ID: <335a812d0904241527s38600da7l8f358ceb46c2447e@mail.gmail.com>

I got it to work by stripping the keep-alive headers and manually calling my
handleResponseEnd when handleEndHeaders is called for requests having
Content-Length: 0.
I'd still like to keep connections alive if possible, so I may do something
more sophisticated in the future, but this will do for now.  Thanks for the
help Jean-Paul.

-Brian




On Fri, Apr 24, 2009 at 2:01 PM, Brian Kuhn <bnkuhn@gmail.com> wrote:

> Now that you mention it, this probably does have something to do with the
> server keeping the connection alive since the client is sending keep-alive
> headers...
>
> Keep-Alive : 300
> Proxy-Connection: keep-alive
>
> I'm going to investigate this a little further before I post my code.  I'=
ll
> let you know what I find out.
>
> Thanks,
>     Brian
>
>
>
>
>
> On Fri, Apr 24, 2009 at 1:01 PM, Jean-Paul Calderone <exarkun@divmod.com>=
wrote:
>
>> On Fri, 24 Apr 2009 12:40:33 -0700, Brian Kuhn <bnkuhn@gmail.com> wrote:
>>
>>> I understand what a 204 is.  It appears though that the framework is
>>> hanging
>>> on them...not my code.
>>> Twisted calls my handleEndHeaders method, then hangs for awhile, then
>>> calls
>>> my handleResponseEnd method.
>>>
>>> Perhaps there is something I need to do in the handleStatus method to
>>> preempt this behavior.  Any idea how I can tell Twisted to not timeout
>>> waiting for content that will never come?
>>>
>>>
>> I dunno, maybe.  It's hard to know without being able to see your code.
>> I suppose you have an HTTPClient subclass?  Or maybe a ProxyClient sub-
>> class?  Likely you should be getting a `handleResponseEnd` when the
>> connection is closed.  If the server never closes the connection, then
>> perhaps you'll never get `handleResponseEnd`, I'm not sure.
>>
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web@twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20090424/b1=
c3c778/attachment.htm
From michal.dtz at gmail.com  Sun Apr 26 02:03:51 2009
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgiBQYXN0ZXJuYWs=?=)
Date: Sun, 26 Apr 2009 08:03:51 +0200
Subject: [Twisted-web] Athena LiveElement: how to putChild under unique
 session URL?
In-Reply-To: <49EF2D41.5090708@thiengineering.ch>
References: <20090210013639.12853.421780875.divmod.quotient.8088@henry.divmod.com>	<49EE332D.2070009@ivsn.com>	<20090422114758.12555.1153349173.divmod.xquotient.8879@weber.divmod.com>	<49EF1C68.5080503@ivsn.com>
	<49EF2D41.5090708@thiengineering.ch>
Message-ID: <49F3F947.7030201@gmail.com>

Werner Thie pisze:
> Please see the detach/detached functionality in athena.py

Saved that code snipped to the wiki here, thanks!

    http://divmod.org/trac/wiki/DivmodNevow/Athena/NotifyOnDisconnect

-- 
m



From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.14.1259785296.23371.twisted-web@twistedmatrix.com>

Twisted is an event-driven networking engine written in Python and
licensed under the MIT license.

See the FAQ for commonly asked questions about Twisted.

    http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions

If you want to get started with Twisted, the first thing you should do
is read the Twisted Core Documentation.

    http://twistedmatrix.com/projects/core/documentation/howto/index.html

Twisted projects variously support TCP, UDP, SSL/TLS, multicast, Unix
sockets, a large number of protocols (including HTTP, NNTP, IMAP, SSH,
IRC, FTP, and others), and much more.

Enjoy!

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


