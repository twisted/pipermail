From federicotom at yahoo.it  Mon Feb  4 13:05:07 2008
From: federicotom at yahoo.it (Federico Tomassini)
Date: Mon Feb  4 13:05:27 2008
Subject: [Twisted-web] rendering patterns with different data types
Message-ID: <47A753D3.3010107@yahoo.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

I have to understand how renderers, slots and patterns work.
I try to read examples and tutorials, but doubts remain: above all I'm
a newbye.

Suppose I have an item such that (values to be rendered are uppercased):

  <li>
   <input type="text" value="INPUT_VALUE"/>

   <select name="foo">
    ...
    <option>OPTION_VALUES</option>
    ...
   </select>

   <textarea name="bar">TEXT_VALUE</textarea>
  </li>

Now, this item has to be repeated N times. To do that, I have a python
list, each element such that:

 {
  'INPUT_VALUE: 'foo',
  'OPTION_VALUES': ['a', 'list', 'of', 'strings'],
  'TEXT_VALUE': "bar"
 }

ie a list of dicts.

It would be nice to use nevow:data="my_list", nevow:render="mapping"
and nevow:slots.
Maybe this is the wrong way, because I cannot find how. The questions:

 1- If with

     <textarea nome="bar">
      <nevow:slot name="TEXT_VALUE"/>
     </textarea>

    I can correctly fill the textarea, how can I correctly fill
    the INPUT_VALUE? It is inside the input tag options, not inside
    the input tag contents.

 2- What about the OPTION_VALUES? Is it possible to "subpattern" a
    pattern? If yes, how?


Finally, I'm wondering if this is the correct way to render such item or
if a better, more elegant, solution, exists.

thanks
br

- --
efphe
Today is Setting Orange, the 35th day of Chaos in the YOLD 3174
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQFHp1PTi7obm7aBjHcRArv2AJ992+SkWwfKCmAVrQQQFTjJiOrYfwCfdSQG
i0ih5b89cMcQYHzxx4KvGeI=
=4tvV
-----END PGP SIGNATURE-----

From edugnani at gmail.com  Fri Feb  8 14:37:25 2008
From: edugnani at gmail.com (Evandro Dugnani)
Date: Fri Feb  8 14:38:01 2008
Subject: [Twisted-web] HTTPS in Twisted
Message-ID: <d5263cd00802081137q6669e315x136c8880a9eb11db@mail.gmail.com>

Hi there,

  I've implemented a simple HTTP server using Twisted just to change
data between browser and this server.
  My class is declared:

from twisted.web import http

class MyRequestHandler(http.Request):

    def process(self):
        ... my processing code

class MyHttp(http.HTTPChannel):

    requestFactory = MyRequestHandler

class MyHttpFactory(http.HTTPFactory):

    protocol = MyHttp

  Everything works fine.
  But know, I want to transform that in HTTPS. I just want to respond
browser requests if it access by "https://"
  And I don't know how to do that. I didn't find any previous post
concerning this subject.
  Anyone can help me?

  Thanks in advance.

  Regards,

Evandro

From karnaugh at karnaugh.za.net  Fri Feb  8 18:10:23 2008
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Fri Feb  8 18:10:41 2008
Subject: [Twisted-web] HTTPS in Twisted
In-Reply-To: <d5263cd00802081137q6669e315x136c8880a9eb11db@mail.gmail.com>
References: <d5263cd00802081137q6669e315x136c8880a9eb11db@mail.gmail.com>
Message-ID: <47ACE15F.4010203@karnaugh.za.net>

On 08/02/2008 21:37 Evandro Dugnani wrote:
>   But know, I want to transform that in HTTPS. I just want to respond
> browser requests if it access by "https://"
>   And I don't know how to do that. I didn't find any previous post
> concerning this subject.

Change TCPServer to SSLServer. Will also help to read the API docs.

From edugnani at gmail.com  Tue Feb 12 08:32:24 2008
From: edugnani at gmail.com (Evandro Dugnani)
Date: Tue Feb 12 08:32:29 2008
Subject: [Twisted-web] HTTPS in Twisted
In-Reply-To: <47ACE15F.4010203@karnaugh.za.net>
References: <d5263cd00802081137q6669e315x136c8880a9eb11db@mail.gmail.com>
	<47ACE15F.4010203@karnaugh.za.net>
Message-ID: <d5263cd00802120532p5aede572x7788d2f03da38a15@mail.gmail.com>

On Feb 8, 2008 9:10 PM, Colin Alston <karnaugh@karnaugh.za.net> wrote:
>
> Change TCPServer to SSLServer. Will also help to read the API docs.
>

Hi Colin,

  Thanks for the tip.
  Using that, I discovered that I had to generate a private key file,
and then generate a self-signed SSL certificate..
  After that, I just created a ssl context with the private key and
the certificate and changed my call "reactor.listenTCP()" to
"reactor.listenSSL()", passing the ssl context as parameter.

  Here is the code if anyone wants:

from twisted.web import http

class MyRequestHandler(http.Request):

   def process(self):
       ... my processing code

class MyHttp(http.HTTPChannel):

   requestFactory = MyRequestHandler

class MyHttpFactory(http.HTTPFactory):

   protocol = MyHttp

if __name__ == "__main__":

    from twisted.internet import reactor, ssl

    sslContext = ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')
    reactor.listenSSL(TCP_PORT, MyHttpFactory( ), contextFactory = sslContext)

    reactor.run( )


  Link for reference:
  - http://blog.vrplumber.com/356

  Regards,

Evandro

From karnaugh at karnaugh.za.net  Tue Feb 12 09:30:20 2008
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Tue Feb 12 09:30:34 2008
Subject: [Twisted-web] HTTPS in Twisted
In-Reply-To: <d5263cd00802120532p5aede572x7788d2f03da38a15@mail.gmail.com>
References: <d5263cd00802081137q6669e315x136c8880a9eb11db@mail.gmail.com>	<47ACE15F.4010203@karnaugh.za.net>
	<d5263cd00802120532p5aede572x7788d2f03da38a15@mail.gmail.com>
Message-ID: <47B1AD7C.1050100@karnaugh.za.net>

On 12/02/2008 15:32 Evandro Dugnani wrote:
> On Feb 8, 2008 9:10 PM, Colin Alston <karnaugh@karnaugh.za.net> wrote:
>> Change TCPServer to SSLServer. Will also help to read the API docs.
>>
> 
> Hi Colin,
> 
>   Thanks for the tip.
>   Using that, I discovered that I had to generate a private key file,
> and then generate a self-signed SSL certificate..
>   After that, I just created a ssl context with the private key and
> the certificate and changed my call "reactor.listenTCP()" to
> "reactor.listenSSL()", passing the ssl context as parameter.

Oh I forgot about the context factory you need. Still, the keys is 
basically swapping TCPServer or listenTCP for SSLServer or listenSSL :P

-- 
Colin Alston ~ http://www.karnaugh.za.net/
"To the world you may be one person, to one person you may be the 
world" ~ Rachel Ann Nunes.

From camrdale at gmail.com  Wed Feb 20 00:50:13 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Wed Feb 20 00:50:16 2008
Subject: [Twisted-web] bandwidth throttling a web2 server
Message-ID: <f4438a6a0802192150i3e992f97l6173c2595d12377c@mail.gmail.com>

Hi,

I'm attempting to limit the bandwidth of a Twisted Web2 server.

I've tried using the twisted htb (token bucket) to limit it, which
didn't work at all (limits it to 0, then no more packets).

Now I'm trying to use the ThrottlingFactory, which I don't think works
for web (one), but I think might work for web2 since it is streaming.
So far I have had some success (it does throttle correctly sometimes),
but I do get the occasional errors from the ThrottlingFactory:

'NoneType' object has no attribute 'resumeProducing' in unthrottleWrites
'NoneType' object has no attribute 'pauseProducing' in throttleWrites
Tried to cancel an already-called event in unregisterProtocol

After the last one, my server was broken and had to be restarted,
though the first 2 errors seemed to have very little effect. Is it not
possible to use the ThrottlingFactory with the web2 server?

Maybe I've missed something obvious, but is there a better way to
limit the bandwidth of a web2 server?

Thanks,
Cameron

From bca at contact.de  Wed Feb 20 06:08:14 2008
From: bca at contact.de (Brian Carmalt)
Date: Wed Feb 20 06:08:21 2008
Subject: [Twisted-web] Example http client in web2
Message-ID: <47BC0A1E.9000802@contact.de>

Hello all,

I'm trying to write a http client which supports GET,POST,HEAD and 
DELETE using
twisted.web2. I have a searched, for most of a morning and can find no 
documentation or
examples, at least that is current. I did find something from dreid, but 
it dates from 2006 and the
web2.client.HTTPClient he uses no longer exists in web2 version 0.2. Can 
anyone please point me in the right direction?

Thanks,

Brian

From dreid at dreid.org  Wed Feb 20 14:19:17 2008
From: dreid at dreid.org (David Reid)
Date: Wed Feb 20 14:19:50 2008
Subject: [Twisted-web] Example http client in web2
In-Reply-To: <47BC0A1E.9000802@contact.de>
References: <47BC0A1E.9000802@contact.de>
Message-ID: <8CFBBBC6-DD32-48AF-A0F9-2E7F4C3967C6@dreid.org>

Hello good sir,

On Feb 20, 2008, at 3:08 AM, Brian Carmalt wrote:

> Hello all,
>
> I'm trying to write a http client which supports GET,POST,HEAD and  
> DELETE using
> twisted.web2.

A noble goal.

> I have a searched, for most of a morning and can find no  
> documentation or
> examples, at least that is current.

There has never existed any serious documentation or examples of using  
twisted.web2.client.

> I did find something from dreid, but it dates from 2006 and the
> web2.client.HTTPClient he uses no longer exists in web2 version 0.2.
The twisted.web2.client.HTTPClient you're referring to never existed  
outside of a branch.  It was based heavily on zanshin and had several  
fatal flaws including not reusing any existing HTTP parsing code.

> Can anyone please point me in the right direction?

You're looking for twisted.web2.clienth.http.  However there is  
unfortunately no documentation and no examples and only a vague  
hypothesis about how to actually use it.

I'd be glad to help you either here or on irc (freenode.net  
#twisted.web)

Cleaning this up is something I do plan to do in the near future  
however it's possible I'll be hit by a car and die before I get the  
chance.

I hope this was somewhat helpful.

-David

From edugnani at gmail.com  Wed Feb 20 14:22:03 2008
From: edugnani at gmail.com (Evandro Dugnani)
Date: Wed Feb 20 14:22:16 2008
Subject: [Twisted-web] Sending file
Message-ID: <d5263cd00802201122m13716c23qbfafdcfaed87640b@mail.gmail.com>

Hi there,

  I've built a HTTP server using Twisted (class derived from "http.Request"=
),
and it works ok.
  Client sends a variable as a GET argument and server reads and interpret
this variable contents (it's like a "fake protocol"). Client send text and
server read and reply text too.
  Now I want to do this: listen HTTP requests in one TCP port and send a
link to client informing a URI to a file (no changes until here). But this
file will be provided for this same server. So, client will ask for this
file in another TCP port listened by my server.
  Anyone can give me a tip to implement it using Twisted?

  Thanks in advance.
  Regards,

Evandro
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080220/28=
a05f96/attachment.htm
From camrdale at gmail.com  Wed Feb 20 14:32:29 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Wed Feb 20 14:32:37 2008
Subject: [Twisted-web] Example http client in web2
In-Reply-To: <8CFBBBC6-DD32-48AF-A0F9-2E7F4C3967C6@dreid.org>
References: <47BC0A1E.9000802@contact.de>
	<8CFBBBC6-DD32-48AF-A0F9-2E7F4C3967C6@dreid.org>
Message-ID: <f4438a6a0802201132l11f792et4c41b78d31bb2f01@mail.gmail.com>

On 2/20/08, David Reid <dreid@dreid.org> wrote:
>  On Feb 20, 2008, at 3:08 AM, Brian Carmalt wrote:
>  > I have a searched, for most of a morning and can find no
>  > documentation or
>  > examples, at least that is current.
>
> There has never existed any serious documentation or examples of using
>  twisted.web2.client.

I'm using the web2 client, so you can look at my code if you're
interested in seeing how it can work:

http://git.camrdale.org/?p=apt-dht.git;a=blob_plain;f=apt_dht/HTTPDownloader.py;hb=HEAD

It's probably not a great example, but it does work. :) It's based on
the dummy HTTPClientManager in the twisted code. After initializing it
with the host and port, you use it by calling the get() or getRange()
functions. All the other functions are for internal use.

Cameron

From federicotom at yahoo.it  Sun Feb 24 07:40:05 2008
From: federicotom at yahoo.it (Federico Tomassini)
Date: Sun Feb 24 07:40:29 2008
Subject: [Twisted-web] redirecting root resource
Message-ID: <47C165A5.8040703@yahoo.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi alls,

how can I redirect systematically the root url "/" ?

Each time "/" is requested, I want to redirect to "/foo/bar", but this
does not have to compromise other urls such "/baz/zoo", which have to be
handled normally with RootResource.childFactory().

The only idea I have is to define the same docFactory and renderers for
RootResource and BazZoo rend.Page, without doing a redirect: but this is
very sad and, in fact, that's not what I want.

any idea?

br

- --
efphe
Today is Setting Orange, the 55th day of Chaos in the YOLD 3174
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQFHwWWli7obm7aBjHcRAleQAJ492N2rguiUaobXgx1k1OFw9I6V6QCfcS1C
pdORD0GZ97NRdvs67I+Q5Sg=
=NWY2
-----END PGP SIGNATURE-----

From maarten at treewalker.org  Sun Feb 24 09:20:57 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun Feb 24 09:17:30 2008
Subject: [Twisted-web] redirecting root resource
In-Reply-To: <47C165A5.8040703@yahoo.it>
References: <47C165A5.8040703@yahoo.it>
Message-ID: <200802241521.09414.maarten@treewalker.org>

On Sunday 24 February 2008, Federico Tomassini wrote:

> how can I redirect systematically the root url "/" ?

(assuming you're using twisted.web, not web2 or nevow)

On the root resource, add a child resource with the empty string as its 
name. That child resource will only be rendered for "/", not for anything 
deeper in the hierarchy. In the child resource's render() method, issue a 
redirect.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080224/38d8d3d9/attachment.pgp
From federicotom at yahoo.it  Sun Feb 24 10:59:27 2008
From: federicotom at yahoo.it (Federico Tomassini)
Date: Sun Feb 24 10:59:43 2008
Subject: [Twisted-web] handling rendering exceptions: patterns strategy?
Message-ID: <47C1945F.5070102@yahoo.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

I'm trying to create a machinery to handle renderer exceptions.

Considere the following template:

 <span nevow:render="main_page">

   <span nevow:pattern="main_pattern">
    ...
   </span>

   <span nevow:pattern="safe_pattern">
    <span nevow:render="handle_err">Oops, there was an exception</span>
   </span>

 </span>


The idea is to define a base class so that, for each page based on such
template, on renderer exceptions, the main pattern is deleted and the
failsafe pattern is filled with a human readable error.

For example:

class basePage(rend.Page):

  def render_main_page(self, ctx, d):
    try:
     render_the_main_pattern(...)

    except Exception, err:
     self.strexception= str(err)
     render_the_safe_pattern(...)


  def render_handle_err(self, ctx, d):
    if hasattr(self, 'strexception'):
     return self.strexception
    return 'UfoError'

class OtherPage(basePage):
  ...


It would be very nice to have such machinery: how can I choose to render
the safe_pattern if and only if the main pattern rendering fails?

Otherwise, is there in your opinion a better strategy?

- --
efphe
Today is Setting Orange, the 55th day of Chaos in the YOLD 3174
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQFHwZRfi7obm7aBjHcRAhpvAJ9eSijml+0OgAgmsMW4PVCPUeuiLQCghSs6
lwaZFMx3tKi/W887lsh9MTY=
=BUEA
-----END PGP SIGNATURE-----

From coder_gus at lavabit.com  Sun Feb 24 12:30:22 2008
From: coder_gus at lavabit.com (coder_gus)
Date: Sun Feb 24 12:30:31 2008
Subject: [Twisted-web] Sending file
In-Reply-To: <d5263cd00802201122m13716c23qbfafdcfaed87640b@mail.gmail.com>
References: <d5263cd00802201122m13716c23qbfafdcfaed87640b@mail.gmail.com>
Message-ID: <47C1A9AE.8040400@lavabit.com>

You could use twisted.protocols.basic.FileReceiver ?
Just a thought.

Evandro Dugnani wrote:
> Hi there,
>
>   I've built a HTTP server using Twisted (class derived from 
> "http.Request"), and it works ok.
>   Client sends a variable as a GET argument and server reads and 
> interpret this variable contents (it's like a "fake protocol"). Client 
> send text and server read and reply text too.
>   Now I want to do this: listen HTTP requests in one TCP port and send 
> a link to client informing a URI to a file (no changes until here). 
> But this file will be provided for this same server. So, client will 
> ask for this file in another TCP port listened by my server.
>   Anyone can give me a tip to implement it using Twisted?
>
>   Thanks in advance.
>   Regards,
>
> Evandro
> Click to learn how you can earn extra cash in day trading.
> http://ads.lavabit.com/fc/Ioyw6kddGzKRwQxCza7jIZ7clbGSO2ODPvaTlf5zPWiABHlU6awGkF/ 
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>   


From ssmiley483 at yahoo.com  Mon Feb 25 17:23:34 2008
From: ssmiley483 at yahoo.com (Shawn Smiley)
Date: Mon Feb 25 17:24:07 2008
Subject: [Twisted-web] Twisted.Web or Twisted.Web2?
Message-ID: <193883.7345.qm@web31108.mail.mud.yahoo.com>

I previously asked this on the main twisted mailing list and was directed to the twisted-web mailing list. 


What is the groups opinion on which web library to use as the basis of my system?

I've started the work using Twisted.Web, but would like a sanity check before I go too far down this path.

I have read the Web Development with Twisted article on the site which is part of the reason I'm looking for a sanity check. :-)  

I've also looked at Nevow, but that didn't seem to be what I'm looking for.  I have no UI/Templating needs.


The piece of a larger system that I'm working on is basically a generic communication bridge application that will allow various external systems to talk to our system.  The initial release of this system is implementing a simple HTTP GET Server that allows the external systems to use a URL to either send small amounts of data to or request data from our system.

Here is an example scenario:

Our bridge application would be installed on an interactive kiosk.  The kiosk presentation would be able to report usage data by calling a URL such as http://localhost:8000/ReportUsage?ScreenID=1234.  The bridge application would receive this request, write it to a local data cache for later batch uploading to a central server.  The local HTTP Server would return a simple text, XML, or JSON response to the calling application to indicate success/failure of the request.

Eventually we want to have a variety of interfaces that are tailored to specific types of applications.  But for right now we're looking at implementing the lowest common denominator which is exchanging information via simple HTTP calls.

Traffic wise, all connections to this HTTP Server are via localhost.  There will be no external connections to.  The expected rate of requests is perhaps 1-2 requests every few seconds.


So getting back to my original question, is Twisted.Web or Twisted.Web2 the better framework to use in this case or is there another framework than Twisted that may work better?


NOTE: I'm working in Python 2.5 and Twisted 2.5 if that makes any difference. Primary development is being done on Linux but with the goal of being able to run on Linux, Windows, or Mac.

Thanks in advance for your suggestions and comments.

-Shawn






      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs

From maarten at treewalker.org  Mon Feb 25 17:48:03 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Mon Feb 25 17:44:17 2008
Subject: [Twisted-web] Twisted.Web or Twisted.Web2?
In-Reply-To: <193883.7345.qm@web31108.mail.mud.yahoo.com>
References: <193883.7345.qm@web31108.mail.mud.yahoo.com>
Message-ID: <200802252348.09367.maarten@treewalker.org>

On Monday 25 February 2008, Shawn Smiley wrote:

> What is the groups opinion on which web library to use as the basis of my
> system?
>
> I've started the work using Twisted.Web, but would like a sanity check
> before I go too far down this path.

Our webapp has been running on Twisted.Web for about 2.5 years now and I've 
had very little problems with it. The code is robust and the API is stable, 
so there are no unpleasant surprises.

I'm not sure whether it's the best choice, since I don't have a lot of 
experience with Web2, but Web(1) is certainly a sane choice.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080225/0f42435d/attachment.pgp
From bca at contact.de  Thu Feb 28 09:45:12 2008
From: bca at contact.de (Brian Carmalt)
Date: Thu Feb 28 09:45:21 2008
Subject: [Twisted-web] Example http client in web2
In-Reply-To: <8CFBBBC6-DD32-48AF-A0F9-2E7F4C3967C6@dreid.org>
References: <47BC0A1E.9000802@contact.de>
	<8CFBBBC6-DD32-48AF-A0F9-2E7F4C3967C6@dreid.org>
Message-ID: <47C6C8F8.1090507@contact.de>

Hello David,

thanks for your answer and your offer to help. I've already got a server 
running with web2. It supports
streaming reads and writes and digest authentication. I would like to 
have the same on the the client side.
The streaming however is not files from disk, but on the fly data 
received from a client of my client.
This means I need to open a connection, pump data into it as it arrives 
or read data from it as requested,
and then close it when I am done. Is this possible with the 
twisted.web2.client.http? I think I need to wrap
the incoming data stream in a producer which implements IProducer and 
pass the producer to a POST connection,
which should act as a consumer and send the data on its way as it 
arrives. And Conversely for a GET connection.

Does that sound OK, or am I shooting in the dark?

Thanks, Brian

PS. Thanks to Cameron for his Client code. Unfortunately it doesn't deal 
with the streaming problem.
  

