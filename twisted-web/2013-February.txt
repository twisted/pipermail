From peter.westlake at pobox.com  Tue Feb 26 13:05:45 2013
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 26 Feb 2013 18:05:45 +0000
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
	<1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>
	<1346683843.31263.140661123041661.574E334C@webmail.messagingengine.com>
	<29C14868-41E5-4C39-8336-B467208C6B9D@twistedmatrix.com>
	<1351005031.8415.140661144406353.08239F58@webmail.messagingengine.com>
	<20121024125924.4595.1178557312.divmod.xquotient.2@localhost6.localdomain6>
	<1351084544.6435.140661144837881.57112D47@webmail.messagingengine.com>
	<1357324247.31399.140661173476561.11F56E5E@webmail.messagingengine.com>
	<20130104195813.4649.1661214274.divmod.xquotient.20@localhost6.localdomain6>
	<1357433293.21505.140661173901005.4677B3D4@webmail.messagingengine.com>
	<20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
Message-ID: <1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>

On Sun, Jan 6, 2013, at 20:22, exarkun at twistedmatrix.com wrote:
> On 12:48 am, peter.westlake at pobox.com wrote:
> >On Fri, Jan 4, 2013, at 19:58, exarkun at twistedmatrix.com wrote:
...
> Codespeed cannot handle more than one result per benchmark.
> >>The `timeit` module is probably not suitable to use to collect the data
.....
> >What method would you prefer?
> 
> Something simple and accurate. :)  You may need to do some investigation 
> to determine the best approach.

1. This is simple:

    def do_benchmark(content):
         t1 = time.time()
         d = flatten(request, content, lambda _: None)
         t2 = time.time()
         assert d.called
         return t2 - t1

Do you think it's acceptably accurate? After a few million iterations,
the relative error should be pretty small.

2. For the choice of test data, I had a quick search for benchmarks from
other web frameworks. All I found was "hello world" benchmarks, that
test the overhead of the framework itself by rendering an empty page.
I'll include that, of course.

3. Regarding option parsing, is there any reason to prefer
twisted.python.usage.Options over argparse? Or optparse if Python 2.7 is
too new. The docs imply that Options was written long before any decent
argument parsing was available.

Peter.


From glyph at twistedmatrix.com  Tue Feb 26 19:39:44 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 26 Feb 2013 16:39:44 -0800
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
	<1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>
	<1346683843.31263.140661123041661.574E334C@webmail.messagingengine.com>
	<29C14868-41E5-4C39-8336-B467208C6B9D@twistedmatrix.com>
	<1351005031.8415.140661144406353.08239F58@webmail.messagingengine.com>
	<20121024125924.4595.1178557312.divmod.xquotient.2@localhost6.localdomain6>
	<1351084544.6435.140661144837881.57112D47@webmail.messagingengine.com>
	<1357324247.31399.140661173476561.11F56E5E@webmail.messagingengine.com>
	<20130104195813.4649.1661214274.divmod.xquotient.20@localhost6.localdomain6>
	<1357433293.21505.140661173901005.4677B3D4@webmail.messagingengine.com>
	<20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
	<1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>
Message-ID: <B4FD5ED3-74A3-4EF7-85AA-7E43D20026BF@twistedmatrix.com>


On Feb 26, 2013, at 10:05 AM, Peter Westlake <peter.westlake at pobox.com> wrote:

> On Sun, Jan 6, 2013, at 20:22, exarkun at twistedmatrix.com wrote:
>> On 12:48 am, peter.westlake at pobox.com wrote:
>>> On Fri, Jan 4, 2013, at 19:58, exarkun at twistedmatrix.com wrote:
> ...
>> Codespeed cannot handle more than one result per benchmark.
>>>> The `timeit` module is probably not suitable to use to collect the data
> .....
>>> What method would you prefer?
>> 
>> Something simple and accurate. :)  You may need to do some investigation 
>> to determine the best approach.
> 
> 1. This is simple:
> 
>    def do_benchmark(content):
>         t1 = time.time()
>         d = flatten(request, content, lambda _: None)
>         t2 = time.time()
>         assert d.called
>         return t2 - t1
> 
> Do you think it's acceptably accurate? After a few million iterations,
> the relative error should be pretty small.

Well it rather depends on the contents of 'content', doesn't it? :)

I think we have gotten lost in the weeds here.  We talked about using benchlib.py initially, and then you noticed a bug, and it was mentioned that benchlib.py was mostly written for testing asynchronous things and didn't have good support for testing the simple case here, which is synchronous rendering of a simple document.  However, one of twisted.web.template's major features - arguably its reason for existing in a world that is practically overrun by HTML templating systems - is that it supports Deferreds.  So we'll want that anyway.

The right thing to do here would be to update benchlib itself with a few simple tools for doing timing of synchronous tasks, and possibly also to just fix the unbounded-recursion bug that you noticed, not to start building a new, parallel set of testing tools which use different infrastructure.  That probably means implementing a small subset of timeit.

> 2. For the choice of test data, I had a quick search for benchmarks from
> other web frameworks. All I found was "hello world" benchmarks, that
> test the overhead of the framework itself by rendering an empty page.
> I'll include that, of course.

"hello world" benchmarks have problems because start-up overhead tends to dominate.  A realistic web page with some slots and renderers sprinkled throughout would be a lot better.  Although even better would be a couple of cases - let's say small, large-sync, and large-async - so we can see if optimizations for one case hurt another.

As Jean-Paul already mentioned in this thread, you can't have more than one result per benchmark, so you'll need to choose a fixed number of configurations and create one benchmark for each.

> 3. Regarding option parsing, is there any reason to prefer twisted.python.usage.Options over [...]

The reason to prefer usage.Options is consistency.  That's what we use on Twisted, and there is no compelling reason to use something else.  In any case, if there were a compelling reason to use something else, this wouldn't be the place to start; you could start a separate discussion about option parsing.  (Warning; a discussion about option parsing would inevitably be a waste of everyone's time and you should under no circumstances do this.)

All the options that you might need to parse (well, all the options that you _can_ parse, as far as codespeed is concerned) are already implemented by benchlib.py in http://launchpad.net/twisted-benchmarks, so there's no point in writing any option-parsing code for this task anyway.  The thing to implement would be a different driver() function that makes a few simple synchronous calls without running the reactor.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130226/ce168475/attachment.htm 

From peter.westlake at pobox.com  Wed Feb 27 06:55:19 2013
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 27 Feb 2013 11:55:19 +0000
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <B4FD5ED3-74A3-4EF7-85AA-7E43D20026BF@twistedmatrix.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
	<1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>
	<1346683843.31263.140661123041661.574E334C@webmail.messagingengine.com>
	<29C14868-41E5-4C39-8336-B467208C6B9D@twistedmatrix.com>
	<1351005031.8415.140661144406353.08239F58@webmail.messagingengine.com>
	<20121024125924.4595.1178557312.divmod.xquotient.2@localhost6.localdomain6>
	<1351084544.6435.140661144837881.57112D47@webmail.messagingengine.com>
	<1357324247.31399.140661173476561.11F56E5E@webmail.messagingengine.com>
	<20130104195813.4649.1661214274.divmod.xquotient.20@localhost6.localdomain6>
	<1357433293.21505.140661173901005.4677B3D4@webmail.messagingengine.com>
	<20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
	<1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>
	<B4FD5ED3-74A3-4EF7-85AA-7E43D20026BF@twistedmatrix.com>
Message-ID: <1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>

On Wed, Feb 27, 2013, at 0:39, Glyph wrote:
> 
> On Feb 26, 2013, at 10:05 AM, Peter Westlake <peter.westlake at pobox.com>
> wrote:
> 
> > On Sun, Jan 6, 2013, at 20:22, exarkun at twistedmatrix.com wrote:
> >> On 12:48 am, peter.westlake at pobox.com wrote:
> >>> On Fri, Jan 4, 2013, at 19:58, exarkun at twistedmatrix.com wrote:
> > ...
> >> Codespeed cannot handle more than one result per benchmark.
> >>>> The `timeit` module is probably not suitable to use to collect the data
> > .....
> >>> What method would you prefer?
> >> 
> >> Something simple and accurate. :)  You may need to do some investigation 
> >> to determine the best approach.
> > 
> > 1. This is simple:
> > 
> >    def do_benchmark(content):
> >         t1 = time.time()
> >         d = flatten(request, content, lambda _: None)
> >         t2 = time.time()
> >         assert d.called
> >         return t2 - t1
> > 
> > Do you think it's acceptably accurate? After a few million iterations,
> > the relative error should be pretty small.
> 
> Well it rather depends on the contents of 'content', doesn't it? :)

Yes, sorry, the loop is meant to be around the flatten call!
Corrected version below.

> I think we have gotten lost in the weeds here. We talked
> about using benchlib.py initially, and then you noticed a
> bug, and it was mentioned that benchlib.py was mostly
> written for testing asynchronous things and didn't have
> good support for testing the simple case here, which is
> synchronous rendering of a simple document. However, one
> of twisted.web.template's major features - arguably its
> reason for existing in a world that is practically overrun
> by HTML templating systems - is that it supports
> Deferreds. So we'll want that anyway.

That's true, and I'll include some Deferreds in the content
to be flattened. But if the Deferreds actually do any
lengthy processing, it makes a nonsense of the benchmark. It
only makes sense to use ones that have already fired, i.e.
defer.succeed(...). The other benchmarks are testing
asynchronous operations, as names like "ssl_throughput"
suggest. Flattening doesn't do any of that, and I'm only
trying to measure the speed of flattening.

> The right thing to do here would be to update benchlib
> itself with a few simple tools for doing timing of
> synchronous tasks, and possibly also to just fix the
> unbounded-recursion bug that you noticed, not to start
> building a new, parallel set of testing tools which use
> different infrastructure. That probably means implementing
> a small subset of timeit.

I'm not convinced that the unbounded recursion is actually a
bug. A callback on a fired Deferred will be executed
immediately, and that's correct behaviour. There's no chance
to return control to the reactor, and even if there was,
anything that happened in that time would only skew the
results. The real problem is that recursion-by-Deferred
doesn't have the optimisation for tail recursion found in
most functional languages, because that would be very
difficult and it's not how Deferreds are usually used.

> > 2. For the choice of test data, I had a quick search for
> > benchmarks from other web frameworks. All I found was
> > "hello world" benchmarks, that test the overhead of the
> > framework itself by rendering an empty page. I'll
> > include that, of course.
> 
> "hello world" benchmarks have problems because start-up
> overhead tends to dominate. A realistic web page with some
> slots and renderers sprinkled throughout would be a lot
> better. Although even better would be a couple of cases -
> let's say small, large-sync, and large-async - so we can
> see if optimizations for one case hurt another.

Yes, I'm just making my excuses for not copying benchmarks
from an existing framework.

> As Jean-Paul already mentioned in this thread, you can't
> have more than one result per benchmark, so you'll need to
> choose a fixed number of configurations and create one
> benchmark for each.
> 
> > 3. Regarding option parsing, is there any reason to
> >    prefer twisted.python.usage.Options over [...]
> 
> The reason to prefer usage.Options is consistency. ...

OK

>  The thing to implement would be a different driver() function that makes
> a few simple synchronous calls without running the
> reactor.

If you don't mind the overhead of an extra function call,
that could be as simple as:

def sync_benchmark(iterations, name, func, *args):
    t1 = time.time()
    for _ in range(iterations):
        func(*args)
    t2 = time.time()
    benchlib.benchmark_report(iterations, t2 - t1, name)

I'm not sure if options['iterations'] would be the right
thing to use here, because it gives the number of times to
repeat the whole benchmark, not the number of times round
the inner loop. The async code uses options['duration'],
but there would be more overhead to run synchronous code
for a given duration.

Peter.


From glyph at twistedmatrix.com  Wed Feb 27 13:24:16 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 27 Feb 2013 10:24:16 -0800
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
	<1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>
	<1346683843.31263.140661123041661.574E334C@webmail.messagingengine.com>
	<29C14868-41E5-4C39-8336-B467208C6B9D@twistedmatrix.com>
	<1351005031.8415.140661144406353.08239F58@webmail.messagingengine.com>
	<20121024125924.4595.1178557312.divmod.xquotient.2@localhost6.localdomain6>
	<1351084544.6435.140661144837881.57112D47@webmail.messagingengine.com>
	<1357324247.31399.140661173476561.11F56E5E@webmail.messagingengine.com>
	<20130104195813.4649.1661214274.divmod.xquotient.20@localhost6.localdomain6>
	<1357433293.21505.140661173901005.4677B3D4@webmail.messagingengine.com>
	<20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
	<1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>
	<B4FD5ED3-74A3-4EF7-85AA-7E43D20026BF@twistedmatrix.com>
	<1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>
Message-ID: <36B3A605-40E3-4792-A957-EF668616F34F@twistedmatrix.com>


On Feb 27, 2013, at 3:55 AM, Peter Westlake <peter.westlake at pobox.com> wrote:

> The real problem is that recursion-by-Deferred
> doesn't have the optimisation for tail recursion found in
> most functional languages, because that would be very
> difficult and it's not how Deferreds are usually used.

Actually it *is* supposed to have this sort of optimization.  You can see the work on this on my favorite (now long-since closed) Twisted ticket: <http://twistedmatrix.com/trac/ticket/411>.

So it might be interesting to investigate why that doesn't help in this case, and if it could be made to.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130227/ec7a92fe/attachment.htm 

From glyph at twistedmatrix.com  Wed Feb 27 13:26:51 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 27 Feb 2013 10:26:51 -0800
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
	<1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>
	<1346683843.31263.140661123041661.574E334C@webmail.messagingengine.com>
	<29C14868-41E5-4C39-8336-B467208C6B9D@twistedmatrix.com>
	<1351005031.8415.140661144406353.08239F58@webmail.messagingengine.com>
	<20121024125924.4595.1178557312.divmod.xquotient.2@localhost6.localdomain6>
	<1351084544.6435.140661144837881.57112D47@webmail.messagingengine.com>
	<1357324247.31399.140661173476561.11F56E5E@webmail.messagingengine.com>
	<20130104195813.4649.1661214274.divmod.xquotient.20@localhost6.localdomain6>
	<1357433293.21505.140661173901005.4677B3D4@webmail.messagingengine.com>
	<20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
	<1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>
	<B4FD5ED3-74A3-4EF7-85AA-7E43D20026BF@twistedmatrix.com>
	<1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>
Message-ID: <68654666-940F-41F8-8327-A8A31FC250A3@twistedmatrix.com>


On Feb 27, 2013, at 3:55 AM, Peter Westlake <peter.westlake at pobox.com> wrote:

> It only makes sense to use ones that have already fired, i.e. defer.succeed(...). 

The problem with only testing synchronously-fired Deferreds is that there are implementation shortcuts possible there, which would allow us to cheat the benchmark.  Granted, it doesn't make sense to do much more work than returning to the reactor - or perhaps not even the reactor, perhaps just a tight outer control loop that does nothing but immediately fire all the Deferreds it knows about when it's returned to - but a not-fired-at-the-time-of-rendering Deferred is a potentially important code path.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130227/ea5fe4ce/attachment.htm 

From glyph at twistedmatrix.com  Wed Feb 27 13:27:23 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 27 Feb 2013 10:27:23 -0800
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
	<1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>
	<1346683843.31263.140661123041661.574E334C@webmail.messagingengine.com>
	<29C14868-41E5-4C39-8336-B467208C6B9D@twistedmatrix.com>
	<1351005031.8415.140661144406353.08239F58@webmail.messagingengine.com>
	<20121024125924.4595.1178557312.divmod.xquotient.2@localhost6.localdomain6>
	<1351084544.6435.140661144837881.57112D47@webmail.messagingengine.com>
	<1357324247.31399.140661173476561.11F56E5E@webmail.messagingengine.com>
	<20130104195813.4649.1661214274.divmod.xquotient.20@localhost6.localdomain6>
	<1357433293.21505.140661173901005.4677B3D4@webmail.messagingengine.com>
	<20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
	<1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>
	<B4FD5ED3-74A3-4EF7-85AA-7E43D20026BF@twistedmatrix.com>
	<1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>
Message-ID: <78155A81-B34E-4FA7-8443-4D0B3379FE5B@twistedmatrix.com>


On Feb 27, 2013, at 3:55 AM, Peter Westlake <peter.westlake at pobox.com> wrote:

> If you don't mind the overhead of an extra function call,
> that could be as simple as:

Sounds good to me.  Although this should now be expressed as a pull request against twisted-benchmarks on launchpad, and not a snippet in an email :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20130227/c4a96264/attachment.htm 

From peter.westlake at pobox.com  Thu Feb 28 07:33:04 2013
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 28 Feb 2013 12:33:04 +0000
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <68654666-940F-41F8-8327-A8A31FC250A3@twistedmatrix.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
	<1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>
	<1346683843.31263.140661123041661.574E334C@webmail.messagingengine.com>
	<29C14868-41E5-4C39-8336-B467208C6B9D@twistedmatrix.com>
	<1351005031.8415.140661144406353.08239F58@webmail.messagingengine.com>
	<20121024125924.4595.1178557312.divmod.xquotient.2@localhost6.localdomain6>
	<1351084544.6435.140661144837881.57112D47@webmail.messagingengine.com>
	<1357324247.31399.140661173476561.11F56E5E@webmail.messagingengine.com>
	<20130104195813.4649.1661214274.divmod.xquotient.20@localhost6.localdomain6>
	<1357433293.21505.140661173901005.4677B3D4@webmail.messagingengine.com>
	<20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
	<1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>
	<B4FD5ED3-74A3-4EF7-85AA-7E43D20026BF@twistedmatrix.com>
	<1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>
	<68654666-940F-41F8-8327-A8A31FC250A3@twistedmatrix.com>
Message-ID: <1362054784.5828.140661198146913.6A44668E@webmail.messagingengine.com>

On Wed, Feb 27, 2013, at 18:26, Glyph wrote:
> 
> On Feb 27, 2013, at 3:55 AM, Peter Westlake <peter.westlake at pobox.com>
> wrote:
> 
> > It only makes sense to use ones that have already fired, i.e. defer.succeed(...). 
> 
> The problem with only testing synchronously-fired Deferreds is that there
> are implementation shortcuts possible there, which would allow us to
> cheat the benchmark.  Granted, it doesn't make sense to do much more work
> than returning to the reactor - or perhaps not even the reactor, perhaps
> just a tight outer control loop that does nothing but immediately fire
> all the Deferreds it knows about when it's returned to - but a
> not-fired-at-the-time-of-rendering Deferred is a potentially important
> code path.

Fair enough - I'll see what I can do.

Peter.


From peter.westlake at pobox.com  Thu Feb 28 07:42:12 2013
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 28 Feb 2013 12:42:12 +0000
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <78155A81-B34E-4FA7-8443-4D0B3379FE5B@twistedmatrix.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
	<1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>
	<1346683843.31263.140661123041661.574E334C@webmail.messagingengine.com>
	<29C14868-41E5-4C39-8336-B467208C6B9D@twistedmatrix.com>
	<1351005031.8415.140661144406353.08239F58@webmail.messagingengine.com>
	<20121024125924.4595.1178557312.divmod.xquotient.2@localhost6.localdomain6>
	<1351084544.6435.140661144837881.57112D47@webmail.messagingengine.com>
	<1357324247.31399.140661173476561.11F56E5E@webmail.messagingengine.com>
	<20130104195813.4649.1661214274.divmod.xquotient.20@localhost6.localdomain6>
	<1357433293.21505.140661173901005.4677B3D4@webmail.messagingengine.com>
	<20130106202209.4649.2128100837.divmod.xquotient.138@localhost6.localdomain6>
	<1361901945.16566.140661197208393.389AC635@webmail.messagingengine.com>
	<B4FD5ED3-74A3-4EF7-85AA-7E43D20026BF@twistedmatrix.com>
	<1361966119.19279.140661197585341.0000D44C@webmail.messagingengine.com>
	<78155A81-B34E-4FA7-8443-4D0B3379FE5B@twistedmatrix.com>
Message-ID: <1362055332.8257.140661198147253.12FCB96B@webmail.messagingengine.com>

On Wed, Feb 27, 2013, at 18:27, Glyph wrote:
> 
> On Feb 27, 2013, at 3:55 AM, Peter Westlake <peter.westlake at pobox.com>
> wrote:
> 
> > If you don't mind the overhead of an extra function call,
> > that could be as simple as:
> 
> Sounds good to me.  Although this should now be expressed as a pull
> request against twisted-benchmarks on launchpad, and not a snippet in an
> email :).

Thanks - I'll go and read the docs.

Peter.




