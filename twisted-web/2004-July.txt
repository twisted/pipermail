From dominic.fox at gmail.com  Thu Jul  1 09:43:06 2004
From: dominic.fox at gmail.com (Dominic Fox)
Date: Thu Jul  1 09:45:02 2004
Subject: [Twisted-web] Mingling client and server code
Message-ID: <f278b21304070108437bab98ed@mail.gmail.com>

I have a server application that needs to send and receive email,
whilst serving web pages. Although it's fairly straightforward just to
use poplib and smtplib and perform mailing operations in a background
thread, I'd rather make use of the mail libraries in Twisted and
perform these tasks asynchronously. My question is, assuming an
application that's set up like this:

site = server.Site(root)
application = service.Application('web')
sc = service.IServiceCollection(application)
i = internet.TCPServer(8001, site)
t = internet.TimerService(10, checkInbox)
i.setServiceParent(sc)

how do I write the Twisted client code inside checkInbox()? Presumably
it needs to create a client object, get the application's reactor to
attempt a connection, and get the object to handle callbacks from
reactor. But how do we get a reference to the application's reactor to
begin with?

Dominic

From andreas at kostyrka.org  Thu Jul  1 11:45:09 2004
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Thu Jul  1 11:46:53 2004
Subject: [Twisted-web] Mingling client and server code
In-Reply-To: <f278b21304070108437bab98ed@mail.gmail.com>
References: <f278b21304070108437bab98ed@mail.gmail.com>
Message-ID: <1088703909.1476.3.camel@andi-lap>

On Thu, 2004-07-01 at 17:43, Dominic Fox wrote:
> I have a server application that needs to send and receive email,
> whilst serving web pages. Although it's fairly straightforward just to
> use poplib and smtplib and perform mailing operations in a background
> thread, I'd rather make use of the mail libraries in Twisted and
> perform these tasks asynchronously. My question is, assuming an
> application that's set up like this:
> 
> site = server.Site(root)
> application = service.Application('web')
> sc = service.IServiceCollection(application)
> i = internet.TCPServer(8001, site)
> t = internet.TimerService(10, checkInbox)
> i.setServiceParent(sc)
> 
> how do I write the Twisted client code inside checkInbox()? Presumably
> it needs to create a client object, get the application's reactor to
> attempt a connection, and get the object to handle callbacks from
> reactor. But how do we get a reference to the application's reactor to
> begin with?
from twisted.internet import reactor

Andreas

From dominic.fox at gmail.com  Thu Jul  1 13:06:42 2004
From: dominic.fox at gmail.com (Dominic Fox)
Date: Thu Jul  1 13:07:03 2004
Subject: [Twisted-web] Mingling client and server code
In-Reply-To: <1088703909.1476.3.camel@andi-lap>
References: <f278b21304070108437bab98ed@mail.gmail.com>
	<1088703909.1476.3.camel@andi-lap>
Message-ID: <f278b21304070112064e81bbc@mail.gmail.com>

Just like that? Cool.

Twisted has been pretty fun so far.

thanks,
Dominic

On Thu, 01 Jul 2004 19:45:09 +0200, Andreas Kostyrka
<andreas@kostyrka.org> wrote:
> 
> 
> On Thu, 2004-07-01 at 17:43, Dominic Fox wrote:
> > I have a server application that needs to send and receive email,
> > whilst serving web pages. Although it's fairly straightforward just to
> > use poplib and smtplib and perform mailing operations in a background
> > thread, I'd rather make use of the mail libraries in Twisted and
> > perform these tasks asynchronously. My question is, assuming an
> > application that's set up like this:
> >
> > site = server.Site(root)
> > application = service.Application('web')
> > sc = service.IServiceCollection(application)
> > i = internet.TCPServer(8001, site)
> > t = internet.TimerService(10, checkInbox)
> > i.setServiceParent(sc)
> >
> > how do I write the Twisted client code inside checkInbox()? Presumably
> > it needs to create a client object, get the application's reactor to
> > attempt a connection, and get the object to handle callbacks from
> > reactor. But how do we get a reference to the application's reactor to
> > begin with?
> from twisted.internet import reactor
> 
> Andreas
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> 




-- 
// Dream in black and white -
// model cities, shooting up in the air

From jason at mobarak.name  Fri Jul  2 13:48:11 2004
From: jason at mobarak.name (Jason Mobarak)
Date: Fri Jul  2 13:48:28 2004
Subject: [Twisted-web] Re: Trouble with templates
In-Reply-To: <b194c91904063021307004e8f2@mail.gmail.com>
References: <b194c91904063021307004e8f2@mail.gmail.com>
Message-ID: <cc4e5s$5lo$1@sea.gmane.org>

"""
This is the solution fzZzy provided.
"""


from twisted.application import service
from twisted.application import internet

from nevow import appserver, loaders, rend, tags, inevow
from formless import annotate, webform, iformless

xml0 = loaders.xmlstr("""<?xml version="1.0"?>
<html xmlns:n="http://nevow.com/ns/nevow/0.1">
     <body>
         <div n:render="sequence" n:data="foo">
             <p n:render="sequence" n:pattern="item">
                 <span n:pattern="item" n:render="string" />
                 <span n:pattern="item" n:render="string" />
                 <div n:pattern="footer" n:render="bar">
                     <n:slot name="bar" />
                 </div>
             </p>
         </div>
     </body>
</html>
""")

xml1 = loaders.xmlstr("""<?xml version="1.0"?>
<p xmlns:n="http://nevow.com/ns/nevow/0.1" n:data="baz" n:render="string" />
""")


class FooFragment(rend.Fragment):
     docFactory = xml1

     def data_baz(self, ctx, d):
         return "baz"


class FooPage (rend.Page):

     docFactory = xml0

     def data_foo (self, ctx, d):

         return [['foo ', ' bar'], ['oof ', ' rab']]

     def render_bar (self, ctx, d):

         ctx.fillSlots('bar', FooFragment())
         return ctx.tag


application = service.Application("MinimalExample")
server = internet.TCPServer(8080, appserver.NevowSite(FooPage()))
server.setServiceParent(application)


Jason Mobarak wrote:
> """
> I'm having trouble with templates and slots... this example code is
> producing a traceback, am I doing something wrong?
> """
> 
> from twisted.application import service
> from twisted.application import internet
> 
> from nevow import appserver, loaders, rend, tags, inevow
> from formless import annotate, webform, iformless
> 
> xml0 = loaders.xmlstr("""<?xml version="1.0"?>
> <html xmlns:n="http://nevow.com/ns/nevow/0.1">
> <body>
> <div n:render="sequence" n:data="foo">
> <p n:render="sequence" n:pattern="item">
> <span n:pattern="item" n:render="string" />
> <span n:pattern="item" n:render="string" />
> <div n:pattern="footer" n:render="bar">
> <n:slot name="bar" />
> </div>
> </p>
> </div>
> </body>
> </html>
> """)
> 
> xml1 = loaders.xmlstr("""<?xml version="1.0"?>
> <p xmlns:n="http://nevow.com/ns/nevow/0.1" n:data="baz" n:render="string" />
> """)
> 
> 
> class FooPage (rend.Page):
> 
>     docFactory = xml0
> 
>     def data_foo (self, ctx, d):
> 
>         return [['foo ', ' bar'], ['oof ', ' rab']]
> 
>     def render_bar (self, ctx, d):
> 
>         ctx.fillSlots('bar', xml1)
>         return ctx.tag
> 
>     def data_baz (self, ctx, d):
> 
>         return "baz"
>         
> 
> application = service.Application("MinimalExample")
> server = internet.TCPServer(8080, appserver.NevowSite(FooPage()))
> server.setServiceParent(application)
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-------------- next part --------------
# -*- python -*-


from twisted.application import service
from twisted.application import internet

from nevow import appserver, loaders, rend, tags, inevow
from formless import annotate, webform, iformless

xml0 = loaders.xmlstr("""<?xml version="1.0"?>
<html xmlns:n="http://nevow.com/ns/nevow/0.1">
    <body>
        <div n:render="sequence" n:data="foo">
            <p n:render="sequence" n:pattern="item">
                <span n:pattern="item" n:render="string" />
                <span n:pattern="item" n:render="string" />
                <div n:pattern="footer" n:render="bar">
                    <n:slot name="bar" />
                </div>
            </p>
        </div>
    </body>
</html>
""")

xml1 = loaders.xmlstr("""<?xml version="1.0"?>
<p xmlns:n="http://nevow.com/ns/nevow/0.1" n:data="baz" n:render="string" />
""")


class FooFragment(rend.Fragment):
    docFactory = xml1

    def data_baz(self, ctx, d):
        return "baz"


class FooPage (rend.Page):

    docFactory = xml0

    def data_foo (self, ctx, d):

        return [['foo ', ' bar'], ['oof ', ' rab']]

    def render_bar (self, ctx, d):

        ctx.fillSlots('bar', FooFragment())
        return ctx.tag
        

application = service.Application("MinimalExample")
server = internet.TCPServer(8080, appserver.NevowSite(FooPage()))
server.setServiceParent(application)
From dialtone at gmail.com  Sat Jul  3 07:25:18 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sat Jul  3 07:25:38 2004
Subject: [Twisted-web] 3 failing tests for Nevow
Message-ID: <c893b853040703062577322370@mail.gmail.com>

I've noticed that Nevow does 3 things wrong when using xmlfile (not
sure if it is also xmlstr though).

It removes the _not_ optional DOCTYPE, the prolog and the _not_
optional xmlns tag about xhtml namespace.

Now I've written 3 failing tests about those 3 problems.

Index: nevow/test/test_loaders.py
===================================================================
--- nevow/test/test_loaders.py  (revision 375)
+++ nevow/test/test_loaders.py  (working copy)
@@ -227,3 +227,42 @@
         result = loaders.xmlstr(doc).load()
         # There should be a space between the two slots
         self.assertEquals(result[2], ' ')
+
+    def test_missingDOCTYPE(self):
+        doc = '''<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0
Strict//EN" "DTD/xhtml1-strict.dtd"><html><body></body></html>'''
+        result = '''<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0
Strict//EN" "DTD/xhtml1-strict.dtd"><html><body></body></html>'''
+        temp = self.mktemp()
+        f = file(temp, 'w')
+        f.write(doc)
+        f.close()
+        df = loaders.xmlfile(temp)
+        r1 = df.load()
+        self.assertEquals(r1[0], result)
+
+
+    def test_missingxhtmlxmlns(self):
+        doc = '''<html xmlns="http://www.w3.org/1999/xhtml"
xml:lang="en" lang="en"
xmlns:nevow="http://nevow.com/ns/nevow/0.1"><body></body></html>'''
+        result = '''<html xmlns="http://www.w3.org/1999/xhtml"
xml:lang="en" lang="en"><body></body></html>'''
+        temp = self.mktemp()
+        f = file(temp, 'w')
+        f.write(doc)
+        f.close()
+        df = loaders.xmlfile(temp)
+        r1 = df.load()
+        self.assertEquals(r1[0], result)
+
+    def test_missingprolog(self):
+        """ This is not a real error, because the <? xml... ?> prolog is
+            optional, but it is no good that we have a removed tag from the
+            xhtml right? Also this will make IE6 work in IE5 mode, no good, but
+            we should not hide the magic.
+        """
+        doc = '''<?xml version="1.0"
encoding="UTF-8"?><html><body></body></html>'''
+        result = '''<?xml version="1.0"
encoding="UTF-8"?><html><body></body></html>'''
+        temp = self.mktemp()
+        f = file(temp, 'w')
+        f.write(doc)
+        f.close()
+        df = loaders.xmlfile(temp)
+        r1 = df.load()
+        self.assertEquals(r1[0], result)

From missive at hotmail.com  Sat Jul  3 12:42:34 2004
From: missive at hotmail.com (Lee Harr)
Date: Sat Jul  3 12:44:13 2004
Subject: [Twisted-web] best way to find my place in the tree
Message-ID: <BAY2-F25ArqqYa2zAsm0007c186@hotmail.com>

Playing around with examples/tree.tac, I came up with this:


Index: tree.tac
===================================================================
--- tree.tac    (revision 375)
+++ tree.tac    (working copy)
@@ -38,7 +38,7 @@
<span nevow:render="childDel"/>
</li>
</ol>
-<a href="..">Up</a>
+<a nevow:render="notRoot" href="..">Up</a>
</body>
</html>
     """)
@@ -65,10 +65,17 @@
                T.input(type="hidden", name="name", value=name),
                T.input(type="submit", value="Delete")]
         return ret
-
+    def render_notRoot(self, context, data):
+        request = context.locate(inevow.IRequest)
+        if request.path.find('subtree_') > 0:
+            return T.a(href='..')['Up']
+        else:
+            return 'Root of tree'
+
+
compy.registerAdapter(TreeRenderer, Tree, inevow.IResource)

t = Tree('base', 'base')
application = service.Application("tree")
s = strports.service('8080', appserver.NevowSite(t))


====
which works as long as the subnodes are called 'subtree_*'

Is this the way you would do this?  Something more general?
(maybe count '/' or something better) Something completely
different ...?

Thanks for your time.

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus


From tv at tv.debian.net  Mon Jul  5 06:02:08 2004
From: tv at tv.debian.net (Tommi Virtanen)
Date: Mon Jul  5 06:08:08 2004
Subject: [Twisted-web] Multiple choices
In-Reply-To: <94a776e704051708156149a04b@mail.gmail.com>
References: <000a01c43c14$98d5d6e0$847ba8c0@Stagiaire>	<11B9E077-A80C-11D8-AAA1-000A95864FC4@ulaluma.com>
	<94a776e704051708156149a04b@mail.gmail.com>
Message-ID: <40E94340.9080900@tv.debian.net>

Justin Johnson wrote:
> Here's an example of what I did to get a multiple choice select box. 
> It's been a while since I did this so it could probably use some
> cleanup.  But it is working for me.

Here's a cleaned up and modernized version, with an example.

Please explicitly say you are cool with this getting included
in nevow -- I'd be happy to file the issue.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: multichoice.py
Type: text/x-python
Size: 3141 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040705/91f35e1b/multichoice.py
-------------- next part --------------
# -*- python -*-
from twisted.application import service, internet
from nevow import compy, rend, inevow, appserver
from formless import webform, annotate, iformless
import multichoice

ANIMALS = ['dogs', 'cats', 'snakes']

class IAnimals(annotate.TypedInterface):
    def remember(self,
                 like=multichoice.MultipleChoice(choices=ANIMALS),
                 hate=multichoice.MultipleChoice(choices=ANIMALS)):
        pass
    remember = annotate.autocallable(remember)

class Animals(object):
    __implements__ = IAnimals
    like = None
    hate = None

    def remember(self, like, hate):
        self.like = like
        self.hate = hate
        print 'REMEMBER', self
        return self

    def __repr__(self):
        return '<%s like=%r hate=%r>' % (
            self.__class__.__name__,
            self.like,
            self.hate,
            )

class MyResource(rend.Page):
    docFactory = rend.htmlstr(
        """\
<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
 xmlns:xi="http://nevow.com/ns/nevow/0.1">
  <head>
    <title>Thingies</title>
    <link href="/form_css" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <nevow:invisible nevow:render="input"/>
  </body>
</html>
""")
    child_form_css = webform.defaultCSS

    def configurable_(self, context):
        try:
            return context.locate(inevow.IHand)
        except KeyError:
            return Animals()

    def render_input(self, context, data):
        formDefaults = context.locate(iformless.IFormDefaults)
        methodDefaults = formDefaults.getAllDefaults('remember')
        conf = self.locateConfigurable(context, '')
        methodDefaults['like'] = conf.original.like
        methodDefaults['hate'] = conf.original.hate
        print 'RENDER', conf.original
        return webform.renderForms()

site = appserver.NevowSite(MyResource())
application = service.Application("multichoice-example")
webServer = internet.TCPServer(8080, site)
webServer.setServiceParent(application)
From dominic.fox at gmail.com  Mon Jul  5 07:07:21 2004
From: dominic.fox at gmail.com (Dominic Fox)
Date: Mon Jul  5 07:07:59 2004
Subject: [Twisted-web] Twisted TDD
Message-ID: <f278b21304070506075a3684eb@mail.gmail.com>

Can anyone suggest a good approach for writing unit tests for Twisted
client code?

To give an example, I have my pop3 client code written, and it largely
consists of handle_XXX methods that call other methods in the base
class (pop3.POP3Client), which in turn write data out to the network
transport.

One way to test this code would be to implement a transport stub and
have the client connected to that, so we could look at what was
written out when we called handle_XXX. But I think that may be too
low-level. What I really want to know is that when handle_XXX is
called, it calls the appropriate methods on the base class with
appropriate parameters (let the base class implementer worry about
what should then be written out to the network transport).

What's worked for other developers working with Twisted?

Dominic

-- 
// Dream in black and white -
// model cities, shooting up in the air

From andrew-twisted at puzzling.org  Mon Jul  5 07:24:39 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon Jul  5 07:25:04 2004
Subject: [Twisted-web] Twisted TDD
In-Reply-To: <f278b21304070506075a3684eb@mail.gmail.com>
References: <f278b21304070506075a3684eb@mail.gmail.com>
Message-ID: <20040705132439.GA26887@frobozz>

On Mon, Jul 05, 2004 at 02:07:21PM +0100, Dominic Fox wrote:
> Can anyone suggest a good approach for writing unit tests for Twisted
> client code?
[...]

You probably want to post this to twisted-python@, rather than twisted-web@.

-Andrew.


From vlupien at drummonddesigns.com  Mon Jul  5 12:40:51 2004
From: vlupien at drummonddesigns.com (vicky)
Date: Mon Jul  5 12:42:00 2004
Subject: [Twisted-web] data in a form
Message-ID: <000001c462bf$992f8380$697ba8c0@Stagiaire>

Hi,

    I have a little problem.  I want to use a nevow:data="test2" in a form
but I got this error:

nevow.accessors.NoAccessor: <MethodBinding doSomething=Method at 0xc4cd30>
does not implement IContainer, and there is no registered adapter.

Here's my code:

############disktemplates.tac

class ISomething(annotate.TypedInterface):

    def doSomething(
        self,
        ctx = annotate.Context(),
        fee = annotate.String(required=True, description="Wee!"),
        ):
        """"""
    doSomething = annotate.autocallable(doSomething)

class Mine(rend.Page):
    __implements__ = ISomething, rend.Page.__implements__

    docFactory = loaders.htmlfile('disktemplates.html')

    def data_test(self, context, data):
        return "coucou"

    def render_test(self, context, data):
        return T.span()[data]

    def data_test2(self, context, data):
        return "test2!"

    def render_test2(self, context, data):
        return T.span()[data]

    def doSomething(self, ctx, **kwargs):
        print '***** doSomething called with:', kwargs

    def render_customForm(self, ctx, data):
        return webform.renderForms()[self.FORM_LAYOUT]

    FORM_LAYOUT = loaders.xmlstr("""<form
xmlns:n="http://nevow.com/ns/nevow/0.1" n:pattern="freeform-form">

          <n:attr name="action"><n:slot name="form-action"/></n:attr>
          <n:attr name="id"><n:slot name="form-id"/></n:attr>
          <n:attr name="name"><n:slot name="form-name"/></n:attr>

          <span n:data="test2" n:render="test2" />
          <table style="background: #eee; border: 1px solid #bbb; padding:
1em;" >
            <n:slot name="form-arguments"/>
            <n:invisible n:pattern="argument" n:render="remove">
              <tr>
                <th><n:slot name="label"/>:</th>
                <td><n:slot name="input"/><span
class="freeform-error"><n:slot name="error"/></span></td>
              </tr>
              <tr>
                <th></th>
                <td><n:slot name="description"/></td>
              </tr>
            </n:invisible>
            <tr>
              <td colspan="2">
                <n:slot name="form-button"/>
              </td>
            </tr>
          </table>
        </form>""").load()

application = service.Application("disktemplates")
internet.TCPServer(8080,
appserver.NevowSite(Mine())).setServiceParent(application)


#########disktemplates.html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>This is title</title>
	</head>
	<body>
		<span nevow:data="test" nevow:render="test" />
		<span nevow:render="customForm" />
	</body>
</html>

---------------------------------------
The nevow:data in disktemplates.html is ok but the one in FORM_LAYOUT is not
working.  I really need to have an nevow:data="??" in my form.  Maybe I'm
doing something wrong.

Vicky



From serj_trejo at hotmail.com  Mon Jul  5 22:49:57 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon Jul  5 22:50:30 2004
Subject: [Twisted-web] Persistent URL repository based on Twisted.web?
Message-ID: <BAY12-F4VE6TkouI5Br00009699@hotmail.com>

Hi, I'm brand new to Twisted and Twiested.Web -- and my head is spinning 
after seeing all of the cool projects based on Twisted thanks to the great 
developers beyhind Twisted and PYthon.

I am curious if there are there any projects using twisted.web that provide 
a Persistent URL repository akin to http://www.purl.org/ ?  OCLC provides 
mod_purl for Apache but there doesn't seem to be much support or interest in 
extending it (its really quiet on the purl.org mailing list, not much of a 
community). It seems that twisted.web would be way cool for providing a 
foundation for provision of PURLs. And it seems that the Python and Twisted 
communities have the right development spirit to get such a beast kick 
started (if it hasn't already been created before).

The concept of a persistent URL is really quite important in digital library 
science. For example, think of all of the broken links out there (and what a 
pain it is to land on a broken link -- plus broken links look unprofessional 
and are a turn off for human beings who are typically not persistent 
themselves and thus live in a world of instant gratification).

Any thoughts / brain storms / ideas? Thanks for any feedback.

Sergio

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail


From aleaxit at yahoo.com  Wed Jul  7 01:58:10 2004
From: aleaxit at yahoo.com (Alex Martelli)
Date: Wed Jul  7 01:58:20 2004
Subject: [Twisted-web] twisted & nevow recipes for the Python Cookbook's 2nd
	edition?
Message-ID: <63FB1989-CFEB-11D8-A462-000A95EFAE9E@yahoo.com>

Hi there, fellow twisters!  I'm in the recipe-selection phase for a 
second edition of O'Reilly's "Python Cookbook" and I have noticed that 
almost no recipe has been submitted to ActiveState's online cookbook 
that shows how to use Twisted (and Nevow).  With Twisted having matured 
into (IMHO) the premier Python networking package since the CB's 1st 
edition, and Nevow coming on strong, I'd really like to have a few such 
recipes in book's 2nd edition... if anybody's interested they're 
welcome to submit recipes to the online cookbook and/or, if they 
prefer, mail me directly (sorry, I'm not currently subscribing to this 
mailing list -- indeed I've currently shut off all mailing lists since 
preparing the cookbook's 2nd edition is a very time-consuming task).  
As you know if you've seen the 1st edition, my bias is strongly in 
favour of "short and sweet" recipes -- in particular, those recipes 
that rely on 3rd party packages, as twisted and nevow ones would be, 
play more of a role of "raising interest" in the 3rd party package than 
of "covering" its use in any depth.  The compensation for authors of 
recipes that are selected for publication is essentially "symbolic" -- 
a free copy of the printed book when it comes out and the listing among 
the book's contributors; all royalties that would normally go to 
contributors go to the non-profit Python Software Foundation instead 
(the PSF uses all of its funds to promote Python in many ways).


Thanks,

Alex


From jason.mobarak at gmail.com  Wed Jul  7 14:33:17 2004
From: jason.mobarak at gmail.com (Jason Mobarak)
Date: Wed Jul  7 14:33:37 2004
Subject: [Twisted-web] twisted & nevow recipes for the Python Cookbook's
	2nd edition?
In-Reply-To: <63FB1989-CFEB-11D8-A462-000A95EFAE9E@yahoo.com>
References: <63FB1989-CFEB-11D8-A462-000A95EFAE9E@yahoo.com>
Message-ID: <b194c9190407071333197afd35@mail.gmail.com>

Hello --

There's a Nevow wiki with example and recipies.

http://divmod.org/users/wiki.twistd/nevow/moin.cgi/FrontPage

...however Nevow is a pretty fast moving target as far as Python
libraries go, some of the example on the Nevow wiki are already bit
rotting.

On Wed, 7 Jul 2004 09:58:10 +0200, Alex Martelli <aleaxit@yahoo.com> wrote:
> Hi there, fellow twisters!  I'm in the recipe-selection phase for a
> second edition of O'Reilly's "Python Cookbook" and I have noticed that
> almost no recipe has been submitted to ActiveState's online cookbook
> that shows how to use Twisted (and Nevow).  With Twisted having matured
> into (IMHO) the premier Python networking package since the CB's 1st
> edition, and Nevow coming on strong, I'd really like to have a few such
> recipes in book's 2nd edition... if anybody's interested they're
> welcome to submit recipes to the online cookbook and/or, if they
> prefer, mail me directly (sorry, I'm not currently subscribing to this
> mailing list -- indeed I've currently shut off all mailing lists since
> preparing the cookbook's 2nd edition is a very time-consuming task).
> As you know if you've seen the 1st edition, my bias is strongly in
> favour of "short and sweet" recipes -- in particular, those recipes
> that rely on 3rd party packages, as twisted and nevow ones would be,
> play more of a role of "raising interest" in the 3rd party package than
> of "covering" its use in any depth.  The compensation for authors of
> recipes that are selected for publication is essentially "symbolic" --
> a free copy of the printed book when it comes out and the listing among
> the book's contributors; all royalties that would normally go to
> contributors go to the non-profit Python Software Foundation instead
> (the PSF uses all of its funds to promote Python in many ways).
> 
> Thanks,
> 
> Alex
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> 


-- 
Jason

From serj_trejo at hotmail.com  Wed Jul  7 23:14:44 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed Jul  7 23:15:18 2004
Subject: [Twisted-web] twisted & nevow recipes for the Python
	Cookbook's2nd edition?
Message-ID: <BAY12-F11rFFfWcmU9J00002cbd@hotmail.com>

Would it be possible to use a combination of a twisted.web server, nevow and 
the PB to send and receive XML fragments between a twisted.web server and an 
SVG-capable browser (such as Mozilla), in order to morph the document's DOM 
and Javascript to change what is rendered by the SVG document inside the 
document? Its been a while since I last looked, but I think Mozila has 
support for SOAP but am wondering if there might be an alternative way to 
update a browser with new data for visual display as in SVG? Disclaimer: I 
haven't had a chance yet to play with nevow so this question may be a bit 
far out there.

Sergio

>From: Jason Mobarak <jason.mobarak@gmail.com>
>Reply-To: jason@mobarak.name, "Discussion of twisted.web, Nevow,and Woven" 
><twisted-web@twistedmatrix.com>
>To: "Discussion of twisted.web, Nevow,and Woven" 
><twisted-web@twistedmatrix.com>
>Subject: Re: [Twisted-web] twisted & nevow recipes for the Python 
>Cookbook's2nd edition?
>Date: Wed, 7 Jul 2004 14:33:17 -0600
>
>Hello --
>
>There's a Nevow wiki with example and recipies.
>
>http://divmod.org/users/wiki.twistd/nevow/moin.cgi/FrontPage
>
>...however Nevow is a pretty fast moving target as far as Python
>libraries go, some of the example on the Nevow wiki are already bit
>rotting.
>
>On Wed, 7 Jul 2004 09:58:10 +0200, Alex Martelli <aleaxit@yahoo.com> wrote:
> > Hi there, fellow twisters!  I'm in the recipe-selection phase for a
> > second edition of O'Reilly's "Python Cookbook" and I have noticed that
> > almost no recipe has been submitted to ActiveState's online cookbook
> > that shows how to use Twisted (and Nevow).  With Twisted having matured
> > into (IMHO) the premier Python networking package since the CB's 1st
> > edition, and Nevow coming on strong, I'd really like to have a few such
> > recipes in book's 2nd edition... if anybody's interested they're
> > welcome to submit recipes to the online cookbook and/or, if they
> > prefer, mail me directly (sorry, I'm not currently subscribing to this
> > mailing list -- indeed I've currently shut off all mailing lists since
> > preparing the cookbook's 2nd edition is a very time-consuming task).
> > As you know if you've seen the 1st edition, my bias is strongly in
> > favour of "short and sweet" recipes -- in particular, those recipes
> > that rely on 3rd party packages, as twisted and nevow ones would be,
> > play more of a role of "raising interest" in the 3rd party package than
> > of "covering" its use in any depth.  The compensation for authors of
> > recipes that are selected for publication is essentially "symbolic" --
> > a free copy of the printed book when it comes out and the listing among
> > the book's contributors; all royalties that would normally go to
> > contributors go to the non-profit Python Software Foundation instead
> > (the PSF uses all of its funds to promote Python in many ways).
> >
> > Thanks,
> >
> > Alex
> >
> > _______________________________________________
> > Twisted-web mailing list
> > Twisted-web@twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> >
>
>
>--
>Jason
>
>_______________________________________________
>Twisted-web mailing list
>Twisted-web@twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail


From dialtone at gmail.com  Thu Jul  8 06:33:57 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Thu Jul  8 06:34:42 2004
Subject: [Twisted-web] twisted & nevow recipes for the Python Cookbook's
	2nd edition?
In-Reply-To: <63FB1989-CFEB-11D8-A462-000A95EFAE9E@yahoo.com>
References: <63FB1989-CFEB-11D8-A462-000A95EFAE9E@yahoo.com>
Message-ID: <c893b853040708053374756c2c@mail.gmail.com>

On Wed, 7 Jul 2004 09:58:10 +0200, Alex Martelli <aleaxit@yahoo.com> wrote:
[snip]

Just wrote a very little and easy example of how to render a list of
dictionaries with nevow.

The example is available here:
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/286210

HTH

From njp at njp.us  Thu Jul  8 06:43:46 2004
From: njp at njp.us (Norm Petterson)
Date: Thu Jul  8 06:46:00 2004
Subject: [Twisted-web] twisted & nevow recipes for the PythonCookbook's2nd
	edition?
References: <BAY12-F11rFFfWcmU9J00002cbd@hotmail.com>
Message-ID: <006a01c464e9$36a29a00$6401a8c0@njpdesk>

Sergio,

While not directly related to twisted, here is a reference I am following to
update browser-based SVG documents based on changes to server data...

http://jibbering.com/2002/5/dynamic-update-svg.html

HTH,

Norm

----- Original Message ----- 
From: "Sergio Trejo" <serj_trejo@hotmail.com>
To: <twisted-web@twistedmatrix.com>
Sent: Thursday, July 08, 2004 1:14 AM
Subject: Re: [Twisted-web] twisted & nevow recipes for the
PythonCookbook's2nd edition?


> Would it be possible to use a combination of a twisted.web server, nevow
and
> the PB to send and receive XML fragments between a twisted.web server and
an
> SVG-capable browser (such as Mozilla), in order to morph the document's
DOM
> and Javascript to change what is rendered by the SVG document inside the
> document? Its been a while since I last looked, but I think Mozila has
> support for SOAP but am wondering if there might be an alternative way to
> update a browser with new data for visual display as in SVG? Disclaimer: I
> haven't had a chance yet to play with nevow so this question may be a bit
> far out there.
>
> Sergio
>
> >From: Jason Mobarak <jason.mobarak@gmail.com>
> >Reply-To: jason@mobarak.name, "Discussion of twisted.web, Nevow,and
Woven"
> ><twisted-web@twistedmatrix.com>
> >To: "Discussion of twisted.web, Nevow,and Woven"
> ><twisted-web@twistedmatrix.com>
> >Subject: Re: [Twisted-web] twisted & nevow recipes for the Python
> >Cookbook's2nd edition?
> >Date: Wed, 7 Jul 2004 14:33:17 -0600
> >
> >Hello --
> >
> >There's a Nevow wiki with example and recipies.
> >
> >http://divmod.org/users/wiki.twistd/nevow/moin.cgi/FrontPage
> >
> >...however Nevow is a pretty fast moving target as far as Python
> >libraries go, some of the example on the Nevow wiki are already bit
> >rotting.
> >
> >On Wed, 7 Jul 2004 09:58:10 +0200, Alex Martelli <aleaxit@yahoo.com>
wrote:
> > > Hi there, fellow twisters!  I'm in the recipe-selection phase for a
> > > second edition of O'Reilly's "Python Cookbook" and I have noticed that
> > > almost no recipe has been submitted to ActiveState's online cookbook
> > > that shows how to use Twisted (and Nevow).  With Twisted having
matured
> > > into (IMHO) the premier Python networking package since the CB's 1st
> > > edition, and Nevow coming on strong, I'd really like to have a few
such
> > > recipes in book's 2nd edition... if anybody's interested they're
> > > welcome to submit recipes to the online cookbook and/or, if they
> > > prefer, mail me directly (sorry, I'm not currently subscribing to this
> > > mailing list -- indeed I've currently shut off all mailing lists since
> > > preparing the cookbook's 2nd edition is a very time-consuming task).
> > > As you know if you've seen the 1st edition, my bias is strongly in
> > > favour of "short and sweet" recipes -- in particular, those recipes
> > > that rely on 3rd party packages, as twisted and nevow ones would be,
> > > play more of a role of "raising interest" in the 3rd party package
than
> > > of "covering" its use in any depth.  The compensation for authors of
> > > recipes that are selected for publication is essentially "symbolic" --
> > > a free copy of the printed book when it comes out and the listing
among
> > > the book's contributors; all royalties that would normally go to
> > > contributors go to the non-profit Python Software Foundation instead
> > > (the PSF uses all of its funds to promote Python in many ways).
> > >
> > > Thanks,
> > >
> > > Alex
> > >
> > > _______________________________________________
> > > Twisted-web mailing list
> > > Twisted-web@twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> > >
> >
> >
> >--
> >Jason
> >
> >_______________________________________________
> >Twisted-web mailing list
> >Twisted-web@twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
> _________________________________________________________________
> STOP MORE SPAM with the new MSN 8 and get 2 months FREE*
> http://join.msn.com/?page=features/junkmail
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From jlb at houseofdistraction.com  Thu Jul  8 17:12:24 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Thu Jul  8 17:13:05 2004
Subject: [Twisted-web] nevow substitute into html attributes?
Message-ID: <40EDD4D8.1060702@houseofdistraction.com>

Nevow slots seem to be limited to replacing whole elements.  Is there 
any way to have a slot which is an attribute or a value of an attribute?

For one example, I want to render a list of mappings that looks like this:

    list_of_links = [
        { 'linkTitle': 'Big Fun Site', 'linkURL':
    'http://bigfunsite.com/funfunfun/index.html'},
        { 'linkTitle': 'Not Quite As Much Fun Site', 'linkURL':
    'http://mediocre.com/its_ok.html'},
        ]


So I need an html template:

        <ul nevow:data="list_of_links" nevow:render="sequence">
            <li nevow:pattern="item" nevow:render="mapping">
                <a href="???"><nevow:slot name="linkTitle">Link
    Title</nevow:slot></a>
            </li>
        </ul>


So the link title is taken care of but what do I put instead of '???' to 
get the href to contain the value of linkURL for the item?


From jason.mobarak at gmail.com  Thu Jul  8 17:44:52 2004
From: jason.mobarak at gmail.com (Jason Mobarak)
Date: Thu Jul  8 17:45:05 2004
Subject: [Twisted-web] nevow substitute into html attributes?
In-Reply-To: <40EDD4D8.1060702@houseofdistraction.com>
References: <40EDD4D8.1060702@houseofdistraction.com>
Message-ID: <b194c91904070816447e852171@mail.gmail.com>

In Nevow's SVN take a look at Nevow/sandbox/mg/attr.tac

On Thu, 08 Jul 2004 16:12:24 -0700, Jeff Bowden
<jlb@houseofdistraction.com> wrote:
> Nevow slots seem to be limited to replacing whole elements.  Is there
> any way to have a slot which is an attribute or a value of an attribute?
> 
> For one example, I want to render a list of mappings that looks like this:
> 
>     list_of_links = [
>         { 'linkTitle': 'Big Fun Site', 'linkURL':
>     'http://bigfunsite.com/funfunfun/index.html'},
>         { 'linkTitle': 'Not Quite As Much Fun Site', 'linkURL':
>     'http://mediocre.com/its_ok.html'},
>         ]
> 
> So I need an html template:
> 
>         <ul nevow:data="list_of_links" nevow:render="sequence">
>             <li nevow:pattern="item" nevow:render="mapping">
>                 <a href="???"><nevow:slot name="linkTitle">Link
>     Title</nevow:slot></a>
>             </li>
>         </ul>
> 
> So the link title is taken care of but what do I put instead of '???' to
> get the href to contain the value of linkURL for the item?
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
> 


-- 
Jason

From matt at pollenation.net  Thu Jul  8 18:25:49 2004
From: matt at pollenation.net (Matt Goodall)
Date: Thu Jul  8 18:26:07 2004
Subject: [Twisted-web] nevow substitute into html attributes?
In-Reply-To: <b194c91904070816447e852171@mail.gmail.com>
References: <40EDD4D8.1060702@houseofdistraction.com>
	<b194c91904070816447e852171@mail.gmail.com>
Message-ID: <1089332749.25320.14.camel@debian>

On Thu, 2004-07-08 at 17:44 -0600, Jason Mobarak wrote:
> In Nevow's SVN take a look at Nevow/sandbox/mg/attr.tac

Although ... the "official" way is as follows (leaving out anything not
directly related to the <a>):

<a href="???"><nevow:attr name="href"><nevow:slot name="linkURL"/></
nevow:attr><nevow:slot name="linkTitle">Link Title</nevow:slot></a>

The mapping renderer on your <li> will fill the 'linkURL' (and
'linkTitle') slot. The <nevow:attr> will then alter the href attribute
of the <a>.

But I prefer the attr.tac way, it's not so ugly ;-).

Cheers, Matt

> 
> On Thu, 08 Jul 2004 16:12:24 -0700, Jeff Bowden
> <jlb@houseofdistraction.com> wrote:
> > Nevow slots seem to be limited to replacing whole elements.  Is there
> > any way to have a slot which is an attribute or a value of an attribute?
> > 
> > For one example, I want to render a list of mappings that looks like this:
> > 
> >     list_of_links = [
> >         { 'linkTitle': 'Big Fun Site', 'linkURL':
> >     'http://bigfunsite.com/funfunfun/index.html'},
> >         { 'linkTitle': 'Not Quite As Much Fun Site', 'linkURL':
> >     'http://mediocre.com/its_ok.html'},
> >         ]
> > 
> > So I need an html template:
> > 
> >         <ul nevow:data="list_of_links" nevow:render="sequence">
> >             <li nevow:pattern="item" nevow:render="mapping">
> >                 <a href="???"><nevow:slot name="linkTitle">Link
> >     Title</nevow:slot></a>
> >             </li>
> >         </ul>
> > 
> > So the link title is taken care of but what do I put instead of '???' to
> > get the href to contain the value of linkURL for the item?
-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From ed at orangebits.cx  Fri Jul  9 05:14:00 2004
From: ed at orangebits.cx (Ed Lea)
Date: Fri Jul  9 05:14:07 2004
Subject: [Twisted-web] Sorting an option list
Message-ID: <20040709111400.GB23263@manque.net>

This may not be solvable with nevow/stan but I'm hoping it may be...

I'm doing

return t.select(name="establishment")[
        [
            t.option(value=e['_oid'])[e['establishment_desc']]
            for e in data
        ]
    ]

to create a select list from data, where data is in the form

[{'_oid': '1', 'establishment_desc': 'foo'},
 {'_oid': '2', 'establishment_desc': 'bar'},
 ... ]

The drop down that is created really needs to be sorted alphabetically
by the establishment_desc.

I realise I can probably write a function to sort the data myself and
pass it to data.sort(), but I was wondering if there was a way to do it
with stan or nevow after the DOM has been created.

-- 
Ed.

Fertility is hereditary.  If your parents didn't have any children,
neither will you.

From justinjohnson at gmail.com  Fri Jul  9 07:28:23 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Fri Jul  9 07:29:25 2004
Subject: [Twisted-web] Multiple choices
In-Reply-To: <40E94340.9080900@tv.debian.net>
References: <000a01c43c14$98d5d6e0$847ba8c0@Stagiaire>	<11B9E077-A80C-11D8-AAA1-000A95864FC4@ulaluma.com>
	<94a776e704051708156149a04b@mail.gmail.com>
	<40E94340.9080900@tv.debian.net>
Message-ID: <94a776e704070906286a5818d2@mail.gmail.com>

Yes, I am fine with this code going into Nevow.  Sorry for the delay..
I just got back from vacation.

On Mon, 05 Jul 2004 15:02:08 +0300, Tommi Virtanen <tv@tv.debian.net> wrote:
> Justin Johnson wrote:
> > Here's an example of what I did to get a multiple choice select box.
> > It's been a while since I did this so it could probably use some
> > cleanup.  But it is working for me.
> 
> Here's a cleaned up and modernized version, with an example.
> 
> Please explicitly say you are cool with this getting included
> in nevow -- I'd be happy to file the issue.
> 
> 
>

From jlb at houseofdistraction.com  Fri Jul  9 08:15:12 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Fri Jul  9 08:15:18 2004
Subject: [Twisted-web] nevow substitute into html attributes?
In-Reply-To: <1089332749.25320.14.camel@debian>
References: <40EDD4D8.1060702@houseofdistraction.com>	<b194c91904070816447e852171@mail.gmail.com>
	<1089332749.25320.14.camel@debian>
Message-ID: <40EEA870.1080503@houseofdistraction.com>

Matt Goodall wrote:

>On Thu, 2004-07-08 at 17:44 -0600, Jason Mobarak wrote:
>  
>
>>In Nevow's SVN take a look at Nevow/sandbox/mg/attr.tac
>>    
>>
>
>Although ... the "official" way is as follows (leaving out anything not
>directly related to the <a>):
>  
>

Interesting.  What makes this "official"?  Is it documented somewhere?

><a href="???"><nevow:attr name="href"><nevow:slot name="linkURL"/></
>nevow:attr><nevow:slot name="linkTitle">Link Title</nevow:slot></a>
>
>The mapping renderer on your <li> will fill the 'linkURL' (and
>'linkTitle') slot. The <nevow:attr> will then alter the href attribute
>of the <a>.
>
>But I prefer the attr.tac way, it's not so ugly ;-).
>
>Cheers, Matt
>
>  
>
>>On Thu, 08 Jul 2004 16:12:24 -0700, Jeff Bowden
>><jlb@houseofdistraction.com> wrote:
>>    
>>
>>>Nevow slots seem to be limited to replacing whole elements.  Is there
>>>any way to have a slot which is an attribute or a value of an attribute?
>>>
>>>For one example, I want to render a list of mappings that looks like this:
>>>
>>>    list_of_links = [
>>>        { 'linkTitle': 'Big Fun Site', 'linkURL':
>>>    'http://bigfunsite.com/funfunfun/index.html'},
>>>        { 'linkTitle': 'Not Quite As Much Fun Site', 'linkURL':
>>>    'http://mediocre.com/its_ok.html'},
>>>        ]
>>>
>>>So I need an html template:
>>>
>>>        <ul nevow:data="list_of_links" nevow:render="sequence">
>>>            <li nevow:pattern="item" nevow:render="mapping">
>>>                <a href="???"><nevow:slot name="linkTitle">Link
>>>    Title</nevow:slot></a>
>>>            </li>
>>>        </ul>
>>>
>>>So the link title is taken care of but what do I put instead of '???' to
>>>get the href to contain the value of linkURL for the item?
>>>      
>>>


From sam at SpinwardStars.com  Fri Jul  9 08:30:20 2004
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Fri Jul  9 08:31:09 2004
Subject: [Twisted-web] nevow substitute into html attributes?
In-Reply-To: <40EDD4D8.1060702@houseofdistraction.com>
References: <40EDD4D8.1060702@houseofdistraction.com>
Message-ID: <6.0.1.1.0.20040709082340.0284bcf0@pop.mindspring.com>

At 2004-07-08 04:12 PM -0700, you wrote:
>Nevow slots seem to be limited to replacing whole elements.  Is there any 
>way to have a slot which is an attribute or a value of an attribute?
>
>For one example, I want to render a list of mappings that looks like this:
>
>    list_of_links = [
>        { 'linkTitle': 'Big Fun Site', 'linkURL':
>    'http://bigfunsite.com/funfunfun/index.html'},
>        { 'linkTitle': 'Not Quite As Much Fun Site', 'linkURL':
>    'http://mediocre.com/its_ok.html'},
>        ]
>
>
>So I need an html template:
>
>        <ul nevow:data="list_of_links" nevow:render="sequence">
>            <li nevow:pattern="item" nevow:render="mapping">
>                <a href="???"><nevow:slot name="linkTitle">Link
>    Title</nevow:slot></a>
>            </li>
>        </ul>
>
>
>So the link title is taken care of but what do I put instead of '???' to 
>get the href to contain the value of linkURL for the item?

This works for me, and no attr or slots required:

<a nevow:pattern="item" nevow:render='link' />

def render_link(self, context, data):
     # Assume data is a list or tuple of (url,label)
     tag = context.tag.clear()
     tag.attributes['href'] = data[0]
     tag[ data[1] ]
     return tag

And make list_of_links return a list of (url,label) tuples.
Maybe not quite "the nevow way," but it works, and the
template is much cleaner (IMO).

- Sam

__________________________________________________________
Spinward Stars, LLC                        Samuel Reynolds
Software Consulting and Development           303-805-1446
http://SpinwardStars.com/            sam@SpinwardStars.com 



From matt at pollenation.net  Fri Jul  9 08:31:50 2004
From: matt at pollenation.net (Matt Goodall)
Date: Fri Jul  9 08:32:22 2004
Subject: [Twisted-web] nevow substitute into html attributes?
In-Reply-To: <40EEA870.1080503@houseofdistraction.com>
References: <40EDD4D8.1060702@houseofdistraction.com>
	<b194c91904070816447e852171@mail.gmail.com>
	<1089332749.25320.14.camel@debian>
	<40EEA870.1080503@houseofdistraction.com>
Message-ID: <1089383510.2540.8.camel@harold>

On Fri, 2004-07-09 at 15:15, Jeff Bowden wrote:
> Matt Goodall wrote:
> 
> >On Thu, 2004-07-08 at 17:44 -0600, Jason Mobarak wrote:
> >  
> >
> >>In Nevow's SVN take a look at Nevow/sandbox/mg/attr.tac
> >>    
> >>
> >
> >Although ... the "official" way is as follows (leaving out anything not
> >directly related to the <a>):
> >  
> >
> 
> Interesting.  What makes this "official"?  Is it documented somewhere?

By "official", I merely meant that <nevow:attr> works out of the box -
it uses the facilities provided by the nevow package and no more.

attr.tac is just one example of how a custom renderer often makes code
simpler and therefor more readable.

Cheers, Matt


> ><a href="???"><nevow:attr name="href"><nevow:slot name="linkURL"/></
> >nevow:attr><nevow:slot name="linkTitle">Link Title</nevow:slot></a>
> >
> >The mapping renderer on your <li> will fill the 'linkURL' (and
> >'linkTitle') slot. The <nevow:attr> will then alter the href attribute
> >of the <a>.
> >
> >But I prefer the attr.tac way, it's not so ugly ;-).
> >
> >Cheers, Matt
> >
> >  
> >
> >>On Thu, 08 Jul 2004 16:12:24 -0700, Jeff Bowden
> >><jlb@houseofdistraction.com> wrote:
> >>    
> >>
> >>>Nevow slots seem to be limited to replacing whole elements.  Is there
> >>>any way to have a slot which is an attribute or a value of an attribute?
> >>>
> >>>For one example, I want to render a list of mappings that looks like this:
> >>>
> >>>    list_of_links = [
> >>>        { 'linkTitle': 'Big Fun Site', 'linkURL':
> >>>    'http://bigfunsite.com/funfunfun/index.html'},
> >>>        { 'linkTitle': 'Not Quite As Much Fun Site', 'linkURL':
> >>>    'http://mediocre.com/its_ok.html'},
> >>>        ]
> >>>
> >>>So I need an html template:
> >>>
> >>>        <ul nevow:data="list_of_links" nevow:render="sequence">
> >>>            <li nevow:pattern="item" nevow:render="mapping">
> >>>                <a href="???"><nevow:slot name="linkTitle">Link
> >>>    Title</nevow:slot></a>
> >>>            </li>
> >>>        </ul>
> >>>
> >>>So the link title is taken care of but what do I put instead of '???' to
> >>>get the href to contain the value of linkURL for the item?
> >>>      
> >>>
> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From sam at SpinwardStars.com  Fri Jul  9 10:50:10 2004
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Fri Jul  9 10:50:26 2004
Subject: [Twisted-web] Sorting an option list
In-Reply-To: <20040709111400.GB23263@manque.net>
References: <20040709111400.GB23263@manque.net>
Message-ID: <6.0.1.1.0.20040709104218.02559d80@pop.mindspring.com>

At 2004-07-09 12:14 PM +0100, you wrote:
>This may not be solvable with nevow/stan but I'm hoping it may be...
>
>I'm doing
>
>return t.select(name="establishment")[
>         [
>             t.option(value=e['_oid'])[e['establishment_desc']]
>             for e in data
>         ]
>     ]
>
>to create a select list from data, where data is in the form
>
>[{'_oid': '1', 'establishment_desc': 'foo'},
>  {'_oid': '2', 'establishment_desc': 'bar'},
>  ... ]
>
>The drop down that is created really needs to be sorted alphabetically
>by the establishment_desc.
>
>I realise I can probably write a function to sort the data myself and
>pass it to data.sort(), but I was wondering if there was a way to do it
>with stan or nevow after the DOM has been created.
>
>--
>Ed.

Another "maybe not 'the nevow way,' but it works"....
I created this in about December out of frustration with
not begin able to get a select where value != label.
(May be possible now, I don't know.)
Also, this was before I (more or less) got the hang of stan.
But, as I said, it works.

In one application, all my pages derive from PageBase,
which defines render_myselect:

     def render_myselect(self, context, data):
         """
         Populate options in a select wgt.

         data is a list of dictionaries.
         Each dictionary has (at least) 'value' and 'label' fields.

         Usage: <select name='...' nevow:data='...' nevow:render='myselect' />
         """
         # Order by label for UI
         ordered = [(item['label'],item['value']) for item in data]
         ordered.sort()

         # Generate options
         tag = context.tag.clear()
         tag.children = []
         for item in ordered:
             tag.children.append( tags.option(value=item[1])[ item[0] ] )
         tag.renderer = None
         return tag

An example data_xx method:

     def data_testselect( self, context, data ):
         return [
                 {'value':1, 'label':'Alice'},
                 {'value':2, 'label':'Victor'},
                 {'value':3, 'label':'Clancy'},
                 {'value':4, 'label':'Nancy'},
             ]

... And in template (again, just an example):

<div>
     <b>Test Select</b>&nbsp;
     <select name='person' nevow:data='testselect' nevow:render='myselect' />
     <br />Selections should appear in the order
     Alice/Clancy/Nancy/Victor
</div>



__________________________________________________________
Spinward Stars, LLC                        Samuel Reynolds
Software Consulting and Development           303-805-1446
http://SpinwardStars.com/            sam@SpinwardStars.com 



From jlb at houseofdistraction.com  Fri Jul  9 16:23:51 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Fri Jul  9 16:24:03 2004
Subject: [Twisted-web] nevow substitute into html attributes?
In-Reply-To: <1089383510.2540.8.camel@harold>
References: <40EDD4D8.1060702@houseofdistraction.com>	<b194c91904070816447e852171@mail.gmail.com>	<1089332749.25320.14.camel@debian>	<40EEA870.1080503@houseofdistraction.com>
	<1089383510.2540.8.camel@harold>
Message-ID: <40EF1AF7.90903@houseofdistraction.com>

Matt Goodall wrote:

>By "official", I merely meant that <nevow:attr> works out of the box -
>it uses the facilities provided by the nevow package and no more.
>
>attr.tac is just one example of how a custom renderer often makes code
>simpler and therefor more readable.
>  
>

I see.  Thanks, I think I can figure something out now.

It's too bad the out-of-the-box solution is so ugly that everyone feels 
it necessary to develop their own idiosyncratic alternative to such a 
commonly needed feature.


From missive at hotmail.com  Sat Jul 10 15:20:08 2004
From: missive at hotmail.com (Lee Harr)
Date: Sat Jul 10 15:20:41 2004
Subject: [Twisted-web] [PATCH] doc/Nevow2004Tutorial.html
Message-ID: <BAY2-F2YPks2UPOIwbQ000235a3@hotmail.com>

The tutorial mentions a (non-existent as far as I can see)
render_currentMonth method. This patch corrects it.
(sorry if there is wrapping trouble ...)


>diff -u Nevow2004Tutorial.html.orig Nevow2004Tutorial.html
--- Nevow2004Tutorial.html.orig Sat Jul 10 17:06:47 2004
+++ Nevow2004Tutorial.html      Sat Jul 10 17:11:16 2004
@@ -69,8 +69,8 @@
     ...
</pre>
<p>In this case, we have a dummy &lt;span&gt; node around the interesting 
portion of the template. This span node will not affect the presentation of 
the document, and is merely a carrier for some directives which will affect 
some nodes inside of the span. On this node, we see two directives: 
nevow:data=&quot;currentMonth&quot; and nevow:render=&quot;month&quot;. When 
nevow begins to render this span node, it will first invoke a method named 
data_currentMonth, and pass the resulting data to a method named 
render_month. The return value of the render_month method will replace the 
entire span in the rendering DOM and further processing will take place on 
it.</p>
-<p>Inside of the span node, there are two slots: <em>&lt;nevow:slot 
name=&quot;label&quot;&gt;</em> and <em>&lt;nevow:slot 
name=&quot;calendarBody&quot; /&gt;</em>. render_currentMonth will be sure 
to provide values to fill these slots before returning.</p>
-<p>Finally, inside of the span node there are two patterns: 
<em>nevow:pattern=&quot;calendarWeek&quot;</em> and 
<em>nevow:pattern=&quot;calendarDay&quot;</em>. The render_currentMonth 
method will make clones of these pattern nodes as it renders the 
calendar.</p>
+<p>Inside of the span node, there are two slots: <em>&lt;nevow:slot 
name=&quot;label&quot;&gt;</em> and <em>&lt;nevow:slot 
name=&quot;calendarBody&quot; /&gt;</em>. render_month will be sure to 
provide values to fill these slots before returning.</p>
+<p>Finally, inside of the span node there are two patterns: 
<em>nevow:pattern=&quot;calendarWeek&quot;</em> and 
<em>nevow:pattern=&quot;calendarDay&quot;</em>. The render_month method will 
make clones of these pattern nodes as it renders the calendar.</p>
<p>One last note: The &lt;tr 
<em>nevow:pattern=&quot;calendarWeek&quot;</em>&gt; pattern node has a 
nevow:render=&quot;remove&quot; directive. Nevow does not currently 
automatically remove pattern nodes from the template, so to prevent the 
dummy data from ending up in the output we use the render_remove method. 
render_remove is defined on the Page class, and simply returns ''.</p>
</div>
<div class="section" id="data-render-methods">



Looks like Nevow2004Tutorial.txt is probably generated from the same
source ...

_________________________________________________________________
Add photos to your messages with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail


From alex at alexnewby.com  Sun Jul 11 12:00:02 2004
From: alex at alexnewby.com (Alex Newby)
Date: Sun Jul 11 12:00:08 2004
Subject: [Twisted-web] Setting the twcgi header?
Message-ID: <1089568802.11494.200140944@webmail.messagingengine.com>

class PythonCGI(twcgi.FilteredScript):
        filter = '/usr/local/bin/python'

I wish to set the following header for my PythonCGI:

print "Content-type: application/x-shockwave-flash\n\n"

But, instead the script renders:

Connection: close
Content-type: text/html
Server: TwistedWeb/1.3.0rc1

How do I change the header?
---------------------------------
Sincerely,

Alex Newby 
E-mail: alex@alexnewby.com
Website: http://www.alexnewby.com


From matt at pollenation.net  Sun Jul 11 21:01:24 2004
From: matt at pollenation.net (Matt Goodall)
Date: Sun Jul 11 21:01:34 2004
Subject: [Twisted-web] Nevow and distrib
Message-ID: <1089601284.6118.14.camel@debian>

Hi all,

Attached is a distrib module and a patch to nevow/appserver.py that
allows Nevow to work behind a distrib server. Yippee! I claim no credit
for the distrib module, I ripped it from new-web. The change to
appserver.py is almost certainly not robust enough but ti works for a
simple distrib server. Patches will be most welcome as you fix the
bugs ;-).

You don't need a Publisher with this as it's all proxy based. I imagine
the proxy will work over a UNIX socket but I only tested over TCP. Below
is the server I used to test:

from twisted.application import service
from twisted.application import internet
from nevow import appserver, distrib

application = service.Application('distribtest')
internet.TCPServer(
    8000,
    appserver.NevowSite(
        distrib.ResourceSubscription('localhost', 8001)
    )
).setServiceParent(application)

Also, I imagine it's relatively easy to use the same technique to hide a
Nevow app behind Apache. It's just a matter of adding a 'x-forwarded-
from' header to the request before proxying it to the twistd server (see
distrib.py). mod_proxy + mod_headers should help, maybe mod_rewrite too.

Hope this is of interest.

Cheers, Matt


-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: distrib.py
Type: application/x-python
Size: 1134 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040712/ca54cc7c/distrib.bin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: distrib-appserver.patch
Type: text/x-patch
Size: 610 bytes
Desc: not available
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040712/ca54cc7c/distrib-appserver.bin
From dreid at dreid.org  Sun Jul 11 23:21:11 2004
From: dreid at dreid.org (David Reid)
Date: Sun Jul 11 23:20:16 2004
Subject: [Twisted-web] Nevow and distrib
In-Reply-To: <1089601284.6118.14.camel@debian>
References: <1089601284.6118.14.camel@debian>
Message-ID: <1089609671.14113.1.camel@localhost>

Much more interesting, is the new-web/twisted/web/proxy.py which moshez
rewrote to allow support of both TCP and Unix sockets.
In a much cleaner way than my distrib.py hackery.

-David

On Sun, 2004-07-11 at 20:01, Matt Goodall wrote:
> Hi all,
> 
> Attached is a distrib module and a patch to nevow/appserver.py that
> allows Nevow to work behind a distrib server. Yippee! I claim no credit
> for the distrib module, I ripped it from new-web. The change to
> appserver.py is almost certainly not robust enough but ti works for a
> simple distrib server. Patches will be most welcome as you fix the
> bugs ;-).
> 
> You don't need a Publisher with this as it's all proxy based. I imagine
> the proxy will work over a UNIX socket but I only tested over TCP. Below
> is the server I used to test:
> 
> from twisted.application import service
> from twisted.application import internet
> from nevow import appserver, distrib
> 
> application = service.Application('distribtest')
> internet.TCPServer(
>     8000,
>     appserver.NevowSite(
>         distrib.ResourceSubscription('localhost', 8001)
>     )
> ).setServiceParent(application)
> 
> Also, I imagine it's relatively easy to use the same technique to hide a
> Nevow app behind Apache. It's just a matter of adding a 'x-forwarded-
> from' header to the request before proxying it to the twistd server (see
> distrib.py). mod_proxy + mod_headers should help, maybe mod_rewrite too.
> 
> Hope this is of interest.
> 
> Cheers, Matt
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040711/b4b280d5/attachment.bin
From serj_trejo at hotmail.com  Mon Jul 12 02:12:10 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon Jul 12 02:12:45 2004
Subject: [Twisted-web] Setting the twcgi header?
Message-ID: <BAY12-F2vIruDS3Tqr30000a8d4@hotmail.com>


I'm quite new to Twisted and Twisted.web but have been playing around with 
it the past several days and enjoying my new learning experience. Please 
someone correct me if I'm wrong, but can't you just write out the 
Content-Type, etc. to a Resource instance by overriding its render_GET() 
method (e.g., request.write())?

from twisted.web.resource import Resource

class myResource(Resource):
   isLeaf = True
   def render_GET(self, request):

    # see API documentation for:
    #  write(self,  data)
    #  Write some data as a result of an HTTP request.

??

Sergio

>From: "Alex Newby" <alex@alexnewby.com>
>Reply-To: "Discussion of twisted.web, Nevow,and Woven" 
><twisted-web@twistedmatrix.com>
>To: "Twisted-Web" <twisted-web@twistedmatrix.com>
>Subject: [Twisted-web] Setting the twcgi header?
>Date: Sun, 11 Jul 2004 11:00:02 -0700
>
>class PythonCGI(twcgi.FilteredScript):
>         filter = '/usr/local/bin/python'
>
>I wish to set the following header for my PythonCGI:
>
>print "Content-type: application/x-shockwave-flash\n\n"
>
>But, instead the script renders:
>
>Connection: close
>Content-type: text/html
>Server: TwistedWeb/1.3.0rc1
>
>How do I change the header?
>---------------------------------
>Sincerely,
>
>Alex Newby
>E-mail: alex@alexnewby.com
>Website: http://www.alexnewby.com
>
>
>_______________________________________________
>Twisted-web mailing list
>Twisted-web@twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

_________________________________________________________________
Protect your PC - get McAfee.com VirusScan Online 
http://clinic.mcafee.com/clinic/ibuy/campaign.asp?cid=3963


From matt at pollenation.net  Mon Jul 12 03:51:18 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon Jul 12 03:52:02 2004
Subject: [Twisted-web] Nevow and distrib
In-Reply-To: <1089609671.14113.1.camel@localhost>
References: <1089601284.6118.14.camel@debian>
	<1089609671.14113.1.camel@localhost>
Message-ID: <1089625878.3310.8.camel@harold>

On Mon, 2004-07-12 at 06:21, David Reid wrote:
> Much more interesting, is the new-web/twisted/web/proxy.py which moshez
> rewrote to allow support of both TCP and Unix sockets.
> In a much cleaner way than my distrib.py hackery.

Yes, that does look good. However, there's nothing which tells the Nevow
app what URL it is actually working behind which means generated URLs
are incorrect. Now, if proxy also set the 'x-forwarded-from' header then
the Nevow app would work just the same. Hmm, it records 'host' in the
request headers ... perhaps that's supposed to include the port too?

Anyway, thanks for mentioning this.

Cheers, Matt

> 
> -David
> 
> On Sun, 2004-07-11 at 20:01, Matt Goodall wrote:
> > Hi all,
> > 
> > Attached is a distrib module and a patch to nevow/appserver.py that
> > allows Nevow to work behind a distrib server. Yippee! I claim no credit
> > for the distrib module, I ripped it from new-web. The change to
> > appserver.py is almost certainly not robust enough but ti works for a
> > simple distrib server. Patches will be most welcome as you fix the
> > bugs ;-).
> > 
> > You don't need a Publisher with this as it's all proxy based. I imagine
> > the proxy will work over a UNIX socket but I only tested over TCP. Below
> > is the server I used to test:
> > 
> > from twisted.application import service
> > from twisted.application import internet
> > from nevow import appserver, distrib
> > 
> > application = service.Application('distribtest')
> > internet.TCPServer(
> >     8000,
> >     appserver.NevowSite(
> >         distrib.ResourceSubscription('localhost', 8001)
> >     )
> > ).setServiceParent(application)
> > 
> > Also, I imagine it's relatively easy to use the same technique to hide a
> > Nevow app behind Apache. It's just a matter of adding a 'x-forwarded-
> > from' header to the request before proxying it to the twistd server (see
> > distrib.py). mod_proxy + mod_headers should help, maybe mod_rewrite too.
> > 
> > Hope this is of interest.
> > 
> > Cheers, Matt
> > 
> 
> ______________________________________________________________________
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt@pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.


From dreid at dreid.org  Mon Jul 12 05:46:03 2004
From: dreid at dreid.org (David Reid)
Date: Mon Jul 12 05:45:05 2004
Subject: [Twisted-web] Nevow and distrib
In-Reply-To: <1089625878.3310.8.camel@harold>
References: <1089601284.6118.14.camel@debian>
	<1089609671.14113.1.camel@localhost> <1089625878.3310.8.camel@harold>
Message-ID: <1089632763.26126.2.camel@localhost>

Upon closer inspection proxy.py would need a little work to get it to
work with Nevow and/or new-web.  It returns server.NOT_DONE_YET which
isn't supported by either that I recall.  It also depends on
http.HTTPClient which isn't present in new-web.  

I don't suggest people actually use new-web yet so that's not a big
deal.  But proxy.py should almost definitely add the port (if
present/not '80') to the host header.

--David

On Mon, 2004-07-12 at 02:51, Matt Goodall wrote:
> On Mon, 2004-07-12 at 06:21, David Reid wrote:
> > Much more interesting, is the new-web/twisted/web/proxy.py which moshez
> > rewrote to allow support of both TCP and Unix sockets.
> > In a much cleaner way than my distrib.py hackery.
> 
> Yes, that does look good. However, there's nothing which tells the Nevow
> app what URL it is actually working behind which means generated URLs
> are incorrect. Now, if proxy also set the 'x-forwarded-from' header then
> the Nevow app would work just the same. Hmm, it records 'host' in the
> request headers ... perhaps that's supposed to include the port too?
> 
> Anyway, thanks for mentioning this.
> 
> Cheers, Matt
> 
> > 
> > -David
> > 
> > On Sun, 2004-07-11 at 20:01, Matt Goodall wrote:
> > > Hi all,
> > > 
> > > Attached is a distrib module and a patch to nevow/appserver.py that
> > > allows Nevow to work behind a distrib server. Yippee! I claim no credit
> > > for the distrib module, I ripped it from new-web. The change to
> > > appserver.py is almost certainly not robust enough but ti works for a
> > > simple distrib server. Patches will be most welcome as you fix the
> > > bugs ;-).
> > > 
> > > You don't need a Publisher with this as it's all proxy based. I imagine
> > > the proxy will work over a UNIX socket but I only tested over TCP. Below
> > > is the server I used to test:
> > > 
> > > from twisted.application import service
> > > from twisted.application import internet
> > > from nevow import appserver, distrib
> > > 
> > > application = service.Application('distribtest')
> > > internet.TCPServer(
> > >     8000,
> > >     appserver.NevowSite(
> > >         distrib.ResourceSubscription('localhost', 8001)
> > >     )
> > > ).setServiceParent(application)
> > > 
> > > Also, I imagine it's relatively easy to use the same technique to hide a
> > > Nevow app behind Apache. It's just a matter of adding a 'x-forwarded-
> > > from' header to the request before proxying it to the twistd server (see
> > > distrib.py). mod_proxy + mod_headers should help, maybe mod_rewrite too.
> > > 
> > > Hope this is of interest.
> > > 
> > > Cheers, Matt
> > > 
> > 
> > ______________________________________________________________________
> > _______________________________________________
> > Twisted-web mailing list
> > Twisted-web@twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040712/f5c6f5fc/attachment.bin
From dp at ulaluma.com  Mon Jul 12 08:15:27 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Mon Jul 12 08:15:37 2004
Subject: [Twisted-web] Setting the twcgi header?
In-Reply-To: <BAY12-F2vIruDS3Tqr30000a8d4@hotmail.com>
References: <BAY12-F2vIruDS3Tqr30000a8d4@hotmail.com>
Message-ID: <EC74669B-D40D-11D8-808E-000A95864FC4@ulaluma.com>


On Jul 12, 2004, at 4:12 AM, Sergio Trejo wrote:

>
> I'm quite new to Twisted and Twisted.web but have been playing around 
> with it the past several days and enjoying my new learning experience. 
> Please someone correct me if I'm wrong, but can't you just write out 
> the Content-Type, etc. to a Resource instance by overriding its 
> render_GET() method (e.g., request.write())?
>
> from twisted.web.resource import Resource
>
> class myResource(Resource):
>   isLeaf = True
>   def render_GET(self, request):
>
>    # see API documentation for:
>    #  write(self,  data)
>    #  Write some data as a result of an HTTP request.

request.write is for writing the body of the request, not the headers. 
To affect the headers, see below.

>> class PythonCGI(twcgi.FilteredScript):
>>         filter = '/usr/local/bin/python'
>>
>> I wish to set the following header for my PythonCGI:
>>
>> print "Content-type: application/x-shockwave-flash\n\n"
>>
>> But, instead the script renders:
>>
>> Connection: close
>> Content-type: text/html
>> Server: TwistedWeb/1.3.0rc1
>>
>> How do I change the header?

Override render_GET, and then call setHeader('content-type', 
'application/x-shockwave-flash'). There may also be some sort of 
attribute you can set which will cause FilteredScript to do this for 
you, I'm not sure. Examine the source code.

dp


From syver at inout.no  Tue Jul 13 07:00:34 2004
From: syver at inout.no (Syver Enstad)
Date: Tue Jul 13 07:01:09 2004
Subject: [Twisted-web] Redirecting
Message-ID: <u7jt82hal.fsf@inout.no>


After reading up on the HTTP spec I found that one had to present a
complete URL for the location header, although the browsers I use to
test with (IE and Firefox) seems to accept just the path without
protocol and hostname, there are tools (httpsession) that I am
thinking of using for automated testing that doesn't.

I thought of using request.prePathURL() but this seems to loose the
session cookie if the hostname of the initial client request is
something else than what prePathURL() returns. Example: an request for
http://localhost/something/ will make request.prePathURL() answer
http://myhostname/something/ and following the redirect loses the
cookie.

Is it generally accepted these days to not include hostname and
protocol in location headers, if not how do I get the hostname from
the request?


From syver at inout.no  Tue Jul 13 08:03:08 2004
From: syver at inout.no (Syver Enstad)
Date: Tue Jul 13 08:03:17 2004
Subject: [Twisted-web] Redirecting
In-Reply-To: <u7jt82hal.fsf@inout.no>
References: <u7jt82hal.fsf@inout.no>
Message-ID: <u3c3w2eeb.fsf@inout.no>

Syver Enstad <syver@inout.no> writes:

> After reading up on the HTTP spec I found that one had to present a
> complete URL for the location header, although the browsers I use to
> test with (IE and Firefox) seems to accept just the path without
> protocol and hostname, there are tools (httpsession) that I am
> thinking of using for automated testing that doesn't.
> 
> I thought of using request.prePathURL() but this seems to loose the
> session cookie if the hostname of the initial client request is
> something else than what prePathURL() returns. Example: an request for
> http://localhost/something/ will make request.prePathURL() answer
> http://myhostname/something/ and following the redirect loses the
> cookie.
> 
> Is it generally accepted these days to not include hostname and
> protocol in location headers, if not how do I get the hostname from
> the request?

The reason I didn't get the hostname is that httpsession doesn't send
the host header. So prePathURL works as good as it can. I am still
curious as to whether it is common practice to send relative URL's in
the location header (it seems more elegant to me anyway).



From alex at alexnewby.com  Tue Jul 13 19:52:10 2004
From: alex at alexnewby.com (Alex Newby)
Date: Tue Jul 13 19:52:16 2004
Subject: [Twisted-web] Setting the twcgi header?
In-Reply-To: <E1Bk565-0006GA-02@pyramid.twistedmatrix.com>
References: <E1Bk565-0006GA-02@pyramid.twistedmatrix.com>
Message-ID: <1089769930.6164.200310642@webmail.messagingengine.com>

Date: Mon, 12 Jul 2004 10:15:27 -0400
From: Donovan Preston <dp@ulaluma.com>
Subject: Re: [Twisted-web] Setting the twcgi header?
To: "Discussion of twisted.web, Nevow,  and Woven"
	<twisted-web@twistedmatrix.com>
>>
>> class PythonCGI(twcgi.FilteredScript):
>>         filter = '/usr/local/bin/python'
>>
>> I wish to set the following header for my PythonCGI:
>>
>> print "Content-type: application/x-shockwave-flash\n\n"
>>
>> But, instead the script renders:
>>
>> Connection: close
>> Content-type: text/html
>> Server: TwistedWeb/1.3.0rc1
>>
>> How do I change the header?

Override render_GET, and then call setHeader('content-type',
application/x-shockwave-flash'). There may also be some sort of
attribute you can set which will cause FilteredScript to do this for
you, I'm not sure. Examine the source code.

dp
-----
Thanks Donovan,

This is an uncommon case. I'm trying to use Ming's output method in a
pythonCGI. Having traced the method of choice within twisted
'protocols.http.Request.setHeader', until I finally thought to peek at
the source code for 'newow.appserver.NevowRequest' (NevowSite is
powering my site) 

class NevowRequest:
    def process(self):
        #I think it may be defaulting here 
        self.setHeader('content-type', "text/html") 
    
Not sure though. 
---------------------------------
Sincerely,

Alex Newby 
E-mail: alex@alexnewby.com
Website: http://www.alexnewby.com


From serj_trejo at hotmail.com  Fri Jul 16 08:21:00 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Fri Jul 16 08:21:38 2004
Subject: [Twisted-web] ignoreExt value archived inside a web.tap?
Message-ID: <BAY12-F18QUKU5mxz9N00042a73@hotmail.com>

Is it possible to store the ignoreExt value in a web tap file using mktap? 
The example documentation shows how its possible to hide implementation in a 
python script that runs the reactor for an application of type web , such 
as:

------------------------------------------------------------------------------
root = static.File(pathToSiteRoot)
root.ignoreExt(".rpy")
application = service.Application("web")
sc = service.IServiceCollection(application)
site = server.Site(root)
reactor.listenTCP(port, site)
reactor.run()
------------------------------------------------------------------------------

I prefer to daemonize my web server by using twistd to read a web.tap file, 
and I'd also like the benefits of the ignoreExt method. Maybe I'm asking for 
my cake and wanting to eat it too?

Serg

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail


From mesozoic at polynode.com  Fri Jul 16 10:22:20 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Fri Jul 16 10:22:57 2004
Subject: [Twisted-web] Re: ignoreExt value archived inside a web.tap?
In-Reply-To: <BAY12-F18QUKU5mxz9N00042a73@hotmail.com>
Message-ID: <E1BlVTY-0002PS-00@perpetual.moxn.net>


You can use "twistd -y filename.py" to load a Python script and
daemonize the application it describes. Run "twistd --help" for more
options; you might take a look at the "--no_save" and the
"--nodaemon" options, for future reference.

It bears mentioning that in your example, the application object isn't
really doing _anything_, because you're bypassing it when you start the
reactor directly. This application object is what "twistd -y" uses to
start.

Below is what you'd need to change in your script to make this work.

root = static.File(pathToSiteRoot)
root.ignoreExt(".rpy")
application = service.Application("web")
sc = service.IServiceCollection(application)
site = server.Site(root)
# --- snip ---
webserver = internet.TCPServer(port, site)
webserver.setServiceParent(sc)


Let us know if this is what you're looking for.


--
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_

From alex at alexnewby.com  Fri Jul 16 14:12:37 2004
From: alex at alexnewby.com (Alex Newby)
Date: Fri Jul 16 14:12:44 2004
Subject: [Twisted-web] Re: internet.TCPServer vs application.listenTCP
In-Reply-To: <E1BlX0u-00010k-01@pyramid.twistedmatrix.com>
References: <E1BlX0u-00010k-01@pyramid.twistedmatrix.com>
Message-ID: <1090008757.18118.200520862@webmail.messagingengine.com>

Is there any particular reason why Nevow, generally, uses the following
syntax: 

application = service.Application("web")                                 
sc = service.IServiceCollection(application)                             
site = appserver.NevowSite(root, logPath="web.log")                      
i = internet.TCPServer(port, site)                                    
i.setServiceParent(sc)     


Instead of say:

application = app.Application("web", uid=uid, gid=gid)
site = appserver.NevowSite(root)
application.listenTCP(port, site, 'ip_address')


I needed to bind to a particular ip, and so am using the second and
haven't really noticed a difference. Forgive me if this is obvious.
Clearly listening to TCP, just going by the function names is not the
same as a TCP server.  
    
----------
It bears mentioning that in your example, the application object isn't
really doing _anything_, because you're bypassing it when you start the
reactor directly. This application object is what "twistd -y" uses to
start.

Below is what you'd need to change in your script to make this work.

root = static.File(pathToSiteRoot)
root.ignoreExt(".rpy")
application = service.Application("web")
sc = service.IServiceCollection(application)
site = server.Site(root)
# --- snip ---
webserver = internet.TCPServer(port, site)
webserver.setServiceParent(sc)


Let us know if this is what you're looking for.


--
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_

From dhale at speakeasy.net  Fri Jul 16 23:15:55 2004
From: dhale at speakeasy.net (Donnie Hale)
Date: Fri Jul 16 23:16:03 2004
Subject: [Twisted-web] Writing a resource like PythonScript
Message-ID: <E1BlhYF-0005Vq-00@pyramid.twistedmatrix.com>

I'm trying to write a resource class like the
twisted.web.script.PythonScript class. As an example, I've got this in a
file named TestResource.py:

from twisted.web.resource import Resource

class TestScript(resource.Resource):
    isLeaf = 1

    def __init__(self, filename, registry):
        self.filename = filename
        self.registry = registry

    def render(self, request):
        request.setHeader("x-powered-by","Twisted/%s" % copyright.version)
        request.write("We've arrived in TestScript.render")
        request.finish()
        return server.NOT_DONE_YET

However, when I go to create a .tap file using the command:

mktap web --path=webroot --processor=".cht=TestResource.TestScript"
--port=8880

I get the error:

NameError: name 'resource' is not defined

Now I've seen that almost all (if not all) the examples of deriving from
Resource have a line like "resource = MyResource()", the PythonScript class
is conspicuous in that it doesn't have such a line, and in fact is in the
middle of a file with other Resource classes where trying to assign some
class instance to a variable named "resource" would be ambiguous. And in
fact I've grepped the source of the twisted.web directory structure and
can't find anyplace a PythonScript is explicitly instantiated. But I know it
works, as I've created a .epy file which does what I'd expect in a basic
web.tap application.

So my question is, how can I create a class like the PythonScript class,
which doesn't explicitly declare a "resource" variable, can get associated
with a file extension via the "mktap --processor" command, and then behaves
intuitively at runtime?

Many thanks,

Donnie

P.S. Somewhere in the docs there should be a comment that if you use the
--processor flag for mktap on windows, you need to surround the
"ext=processor" part of the parameters with double-quotes (see above). If
you don't do that, mktap will complain about the options not having the
right number of values to unpack. That took a while to figure out.


From nico at tekNico.net  Sat Jul 17 00:19:17 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Sat Jul 17 00:31:21 2004
Subject: [Twisted-web] Re: Writing a resource like PythonScript
References: <E1BlhYF-0005Vq-00@pyramid.twistedmatrix.com>
Message-ID: <cdagd8$rdg$1@sea.gmane.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> from twisted.web.resource import Resource
> 
> class TestScript(resource.Resource):
> ...
> I get the error:
> 
> NameError: name 'resource' is not defined

That won't fly. Either you do:

from twisted.web.resource import Resource
class TestScript(Resource):

or you do:

from twisted.web import resource
class TestScript(resource.Resource):

I prefer the latter.


- -- 
Nicola Larosa - nico@tekNico.net

"When a student asks why case matters, simply ask why it shouldn't matter.
If they think it would be easier to use Python if they can be inconsistent
in their use of case, then they have the answer. Python helps teach that
consistency matters." -- Michael McLay, April 2004


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFA+MTnXv0hgDImBm4RAkA3AKC2erojphiRF2IZkD3uDC/HlH2urwCgk0k4
f/SPpAw+ukk/xZGoVrpY/XE=
=rbXc
-----END PGP SIGNATURE-----


From serj_trejo at hotmail.com  Sat Jul 17 00:32:32 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sat Jul 17 00:33:06 2004
Subject: [Twisted-web] Re: ignoreExt value archived inside a web.tap?
Message-ID: <BAY12-F371YcEBdyFj900047b2b@hotmail.com>

Alex,

Much thanks for your suggestion and pointing a newbie in the right 
direction. Your suggestion with the snips worked just fine.

The number of options available via the Twisted framework is really amazing. 
I prefer the word "amazing" instead of "daunting" because immersing oneself 
into Twisted is  like being a kid who parachuted into the Willy Wonka 
chocolate factory for the first time in his/her life. Twisted truly is 
network programming "for the rest of us" (or as Steve Jobs would say, 
network programming for "mere mortals"!).

The passion and dedication that the Twisted developers bring to the table is 
awe inspiring. The Internet is still such a newbie itself relative to the 
history of humankind, and I have a strong feeling that frameworks like 
Twisted are going to play an important role in the growth of Internet 
services (with Twisted we can now think of the 'net itself as a global OS 
with objects that intercommunicate with each other from all corners of the 
planet).

I used to dabble in Java but then it seems to get too bloated (how many 
Addison Wesley books on Java can fit on one's bookshelf anyway?). Has there 
been much discussion about Twisted compared to any of the Java packages? Is 
it even fair to try and compare (e.g., would it be like comparing apples 
with oranges)?

I have another question -- with regard to twisted.web and the related pieces 
of the framework such as twisted.enterprise and nevow, is it fair to compare 
this Twisted/Nevow framework with Apple's WebObjects (WebObjects of course 
getting its birth at NeXT in the 1990s)? WebObjects apparently runs on OS X, 
Solaris and Win32 (and possibly Linux), and is based on Java. But I do 
wonder if perhaps Twisted has leap frogged over WebObjects (which was state 
of the art at one time and to be fair is still a fairly darned good system 
as Apple built their entire iTunes Music Store using WebObjects).

Again, hats off to Twisted -- I feel that this is only just the beginning. 
I've been talking to my IT friends about Twisted non-stop the past several 
days!

Serg

>From: "Alex Levy" <mesozoic@polynode.com>
>Reply-To: "Discussion of twisted.web, Nevow,and Woven" 
><twisted-web@twistedmatrix.com>
>To: twisted-web@twistedmatrix.com
>Subject: [Twisted-web] Re: ignoreExt value archived inside a web.tap?
>Date: Fri, 16 Jul 2004 12:22:20 -0400
>
>
>You can use "twistd -y filename.py" to load a Python script and
>daemonize the application it describes. Run "twistd --help" for more
>options; you might take a look at the "--no_save" and the
>"--nodaemon" options, for future reference.
>
>It bears mentioning that in your example, the application object isn't
>really doing _anything_, because you're bypassing it when you start the
>reactor directly. This application object is what "twistd -y" uses to
>start.
>
>Below is what you'd need to change in your script to make this work.
>
>root = static.File(pathToSiteRoot)
>root.ignoreExt(".rpy")
>application = service.Application("web")
>sc = service.IServiceCollection(application)
>site = server.Site(root)
># --- snip ---
>webserver = internet.TCPServer(port, site)
>webserver.setServiceParent(sc)
>
>
>Let us know if this is what you're looking for.
>
>
>--
>Alex Levy
>WWW: http://mesozoic.geecs.org
>
>"Never let your sense of morals prevent you from doing what is right."
>  -- Salvor Hardin, Isaac Asimov's _Foundation_
>
>_______________________________________________
>Twisted-web mailing list
>Twisted-web@twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail


From dhale at speakeasy.net  Sat Jul 17 07:50:04 2004
From: dhale at speakeasy.net (Donnie Hale)
Date: Sat Jul 17 07:50:53 2004
Subject: [Twisted-web] Re: Writing a resource like PythonScript
In-Reply-To: <cdagd8$rdg$1@sea.gmane.org>
Message-ID: <E1BlpZl-0000Yz-00@pyramid.twistedmatrix.com>

Thanks for the response - sorry about the user error. I have it doing pretty
much what I want at this point.

Donnie


-----Original Message-----
From: twisted-web-bounces@twistedmatrix.com
[mailto:twisted-web-bounces@twistedmatrix.com] On Behalf Of Nicola Larosa
Sent: Saturday, July 17, 2004 2:19 AM
To: twisted-web@twistedmatrix.com
Subject: [Twisted-web] Re: Writing a resource like PythonScript

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> from twisted.web.resource import Resource
> 
> class TestScript(resource.Resource):
> ...
> I get the error:
> 
> NameError: name 'resource' is not defined

That won't fly. Either you do:

from twisted.web.resource import Resource class TestScript(Resource):

or you do:

from twisted.web import resource
class TestScript(resource.Resource):

I prefer the latter.


- --
Nicola Larosa - nico@tekNico.net

"When a student asks why case matters, simply ask why it shouldn't matter.
If they think it would be easier to use Python if they can be inconsistent
in their use of case, then they have the answer. Python helps teach that
consistency matters." -- Michael McLay, April 2004


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFA+MTnXv0hgDImBm4RAkA3AKC2erojphiRF2IZkD3uDC/HlH2urwCgk0k4
f/SPpAw+ukk/xZGoVrpY/XE=
=rbXc
-----END PGP SIGNATURE-----


_______________________________________________
Twisted-web mailing list
Twisted-web@twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web



From dhale at speakeasy.net  Sun Jul 18 15:01:17 2004
From: dhale at speakeasy.net (Donnie Hale)
Date: Sun Jul 18 15:01:23 2004
Subject: [Twisted-web] Integrating Twisted Matrix with Cheetah
Message-ID: <E1BmImc-0006P7-00@pyramid.twistedmatrix.com>

I really love Twisted Matrix' approach to network programming, etc. As a
long-time developer of network apps using C, C++, Java, etc., it is a breath
of fresh air for a large class of network apps. One thing I'm not too wild
about is its sort of "native" web frameworks (woven, or now nevow). I like
very simple templating approaches, and as a fan of Velocity in the Java
world am drawn to Cheetah (www.cheetahtemplate.org). So my task was to see
if the two could be integrated without compromising the core elements of
either. Note that I searched around the web quite a bit trying to see if had
been done, but couldn't find anything.

As it turns out, it was fairly easy to get the basics going. This file has a
template base class for the Cheetah templates and a Twisted Matrix resource
to invoke the templates:

======== CheetahMapper.py =========
from twisted.web import resource, server from Cheetah.Template import
Template

class TwistedCheetahTemplate(Template):
    twrequest = None

class CheetahResource(resource.Resource):
    isLeaf = 1

    def __init__(self, filename, registry):
        self.filename = filename
        self.registry = registry

    def render(self, request):
        tmplt = TwistedCheetahTemplate(file=self.filename)
        tmplt.twrequest = request
        request.write(tmplt.respond())
        request.finish()
        return server.NOT_DONE_YET
===================================

As the template below will show, the "twrequest" member in the
TwistedCheetahTemplate class holds the Twisted Matrix request object.
Twisted Matrix is kind enough to pass the full absolute path to the
referenced template file in CheetahResource's constructor.

To create and execute the web application, in typical Twisted Matrix
fashion, use these commands (from the directory in which the above file
resides):

> mktap web --path=.\webroot 
> --processor=".cht=CheetahMapper.CheetahResource" --port=8880 twistd 
> --file=web.tap

This simple template will be executed and its results returned by pointing
your browser at http://127.0.0.1:8880/test.cht:

============ test.cht =============
## A dummy template
<HTML>
<HEAD>
<TITLE>Test Cheetah Within Twisted</TITLE> </HEAD> <BODY> <B>We've arrived
in a Cheetah template!</B> <br>$twrequest.method <br>$twrequest.path
<br>$twrequest.args <br>$twrequest.received_headers </BODY> </HTML>
===================================

I have no idea if this will help anyone out or not, but I thought I ought to
at least post it. My next task is to add the capability for Python code to
be executed to fulfill a request and the results be available when a
template is executed. I'm sure this is anathema to some, but I frankly quite
like asp.net's code-behind model and think I can make a much-simplified
flavor of that work within this general approach.

FWIW...

Donnie


From general at eepatents.com  Tue Jul 20 13:47:02 2004
From: general at eepatents.com (Ed Suominen)
Date: Tue Jul 20 13:46:57 2004
Subject: [Twisted-web] cgi-bin from twisted.web
Message-ID: <cdjsr7$dj5$1@sea.gmane.org>

I would like to run mailman from my twisted.web server. How do I execute
mailman's cgi-bin binaries, given that twcgi seems to support only scripts?
If twistedmatrix.com is running mailman with a twisted web server, it would
seem that the answer has been figured out by someone already.

-- 
Ed Suominen
Registered Patent Agent 
Open Source Developer (Yes, both...)
Web Site: http://www.eepatents.com



From mesozoic at polynode.com  Tue Jul 20 14:43:49 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Tue Jul 20 14:44:26 2004
Subject: [Twisted-web] Re: cgi-bin from twisted.web
In-Reply-To: <cdjsr7$dj5$1@sea.gmane.org>
Message-ID: <E1Bn1Sn-0004Uv-00@perpetual.moxn.net>


On 7/20/2004, "Ed Suominen" <general@eepatents.com> wrote:

>I would like to run mailman from my twisted.web server. How do I execute
>mailman's cgi-bin binaries, given that twcgi seems to support only scripts?
>If twistedmatrix.com is running mailman with a twisted web server, it would
>seem that the answer has been figured out by someone already.

Moshe's twisted-web package for Debian supports a cgi-bin directory, or
so I thought last time I looked. Have you checked that out yet?

I use twisted-web to serve all my Twisted stuff, and while it may not
support certain things (like logging vhost domain names, nudge nudge
new-web people), it's definitely flexible enough to let you serve
mailman.



--
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_

From radix at twistedmatrix.com  Tue Jul 20 14:46:28 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue Jul 20 14:46:29 2004
Subject: [Twisted-web] cgi-bin from twisted.web
In-Reply-To: <cdjsr7$dj5$1@sea.gmane.org>
References: <cdjsr7$dj5$1@sea.gmane.org>
Message-ID: <40FD84A4.7030102@twistedmatrix.com>

Ed Suominen wrote:
> I would like to run mailman from my twisted.web server. How do I execute
> mailman's cgi-bin binaries, given that twcgi seems to support only scripts?
> If twistedmatrix.com is running mailman with a twisted web server, it would
> seem that the answer has been figured out by someone already.
> 

I already helped Ed on IRC, but for the sake of convenience to 
archive-readers and other interested parties, here's the way I deployed 
mailman on divmod.org.

== /home/mailman/twisted.run/mailman.tac ==


import sys

from twisted.internet import app
from twisted.web import server, distrib, twcgi, static
from twisted.spread import pb

application = app.Application('mailman-web')

r = twcgi.CGIDirectory('/home/mailman/run/cgi-bin')
r.putChild('pipermail', static.File('/home/mailman/run/archives/public'))

site = server.Site(r)
application.listenUNIX('/home/mailman/.twistd-web-pb', 
pb.BrokerFactory(distrib.ResourcePublisher(site)))




-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://pyramid.twistedmatrix.com/pipermail/twisted-web/attachments/20040720/1b1d8ff6/signature.bin
From serj_trejo at hotmail.com  Wed Jul 21 03:09:00 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed Jul 21 03:09:34 2004
Subject: [Twisted-web] cgi-bin from twisted.web
Message-ID: <BAY12-F7TBMDfpem7qU00063fb7@hotmail.com>

What's a patent agent gonna do with Twisted and mailman? Inquiring minds 
want to know cause software patents amount to weapons of mass destruction 
IMHO.

Serg

>From: Ed Suominen <general@eepatents.com>
>Reply-To: "Discussion of twisted.web, Nevow,and Woven" 
><twisted-web@twistedmatrix.com>
>To: twisted-web@twistedmatrix.com
>Subject: [Twisted-web] cgi-bin from twisted.web
>Date: Tue, 20 Jul 2004 12:47:02 -0700
>
>I would like to run mailman from my twisted.web server. How do I execute
>mailman's cgi-bin binaries, given that twcgi seems to support only scripts?
>If twistedmatrix.com is running mailman with a twisted web server, it would
>seem that the answer has been figured out by someone already.
>
>--
>Ed Suominen
>Registered Patent Agent
>Open Source Developer (Yes, both...)
>Web Site: http://www.eepatents.com
>
>
>
>_______________________________________________
>Twisted-web mailing list
>Twisted-web@twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail


From serj_trejo at hotmail.com  Sat Jul 24 12:57:32 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sat Jul 24 12:58:26 2004
Subject: [Twisted-web] Capturing args to the Registry
Message-ID: <BAY12-F32xvzSoBJHsx0000b5f5@hotmail.com>

I am capturing cgi args to the registry (in a .rpy script) inside a 
resource's render_GET() method courtesy of registry.setComponent(). Once the 
resource has returned its html to the HTTP client, I want to parse out some 
of the cgi args and send them over the wire to a remote PB server.

Is there any way to extract the cgi args from the registry before my .rpy 
script dies? I've only been able to reclaim the stored args from the 
registry after a subsequent browser hit (I.e., using registry.getComponent() 
the next HTTP request that invokes render_GET() works). I'm hoping this will 
be simple, as I would prefer not to write to storage and would prefer to use 
the registry per every instance that the .rpy is loaded by the Twisted web 
server.

Here's an example of what I've got:

class Poof:
	def __init__(self, a):
		self.arr = a
	def setArgs(self, a):
		self.arr = a
	def getArgs(self):
		return self.arr

class leResource(Resource):
	isLeaf = True

	def render_GET(self, request):
		p= Poof(request.args)
		registry.setComponent(Poof, p)
		return "<html>Thanks for your visit.</html>"

resource = leResource()

# get cgi args, send them over the wire to the PB server

Thanks much for any suggestions.

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus


From serj_trejo at hotmail.com  Wed Jul 28 08:33:44 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed Jul 28 08:34:16 2004
Subject: [Twisted-web] Error Reporting Color Schema in the browser
Message-ID: <BAY12-F18Jb7DpKGqJY0002708a@hotmail.com>

I really like the way the Twisted Web server displays errors from the Python 
interpreter in a browser (such as when I call a .rpy script that has an 
error in it). This is really well done in my opinion and it helps train the 
eye of the developer to rapidly look for errors in certain places based on 
the colors such as:

  div.function {
      background: orange;
      font-weight: bold;
      float: left;
    }

I searched in the soruce and installation trees for a standalone css 
document but I couldn't find one (appears to be generated dynamically from 
what I can discern from the HTML source). I was wondering if the authors of 
Twisted-Web chose their color schemas for displaying run-time errors based 
on a particular logic, or if the color were chosen arbitrarily? It might be 
fun to play with the css colors to tweak them or come up with some really 
funky "skins".

Serg

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail


From jonas at stickybit.se  Fri Jul 30 03:07:52 2004
From: jonas at stickybit.se (Jonas =?ISO-8859-1?Q?=C5berg?=)
Date: Fri Jul 30 03:10:21 2004
Subject: [Twisted-web] Re: Mingling client and server code
Message-ID: <20040730110752.13e0a925@dijkstra.stickybit.local>


Hi,

I'm having the same problem as Dominic, but I did not really get
Andreas answer.
Could anyone please give me a couple of example lines? 

Thanks!

Jonas

From serj_trejo at hotmail.com  Sat Jul 31 09:13:23 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sat Jul 31 09:13:58 2004
Subject: [Twisted-web] Capturing a web-server shutdown signal?
Message-ID: <BAY12-F397NV8tUsLkZ0002200c@hotmail.com>

When a Twisted web server is killed, I'd like to somehow get a signal from 
the server that its going down and clean up some objects (I.e., a PB Client 
instance -- need to log it out of the PB Server on shutdown) that I've 
persisted in the web server's registry. Has anyone done this before? Any 
suggestions besides perhaps usng the shutdown script to instantiate an HTTP 
client which fires a URL to the server which acts as a trigger to handle the 
registry cleanup?

Thanks,

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus


From foom at fuhm.net  Sat Jul 31 14:48:49 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat Jul 31 14:48:58 2004
Subject: [Twisted-web] Capturing a web-server shutdown signal?
In-Reply-To: <BAY12-F397NV8tUsLkZ0002200c@hotmail.com>
References: <BAY12-F397NV8tUsLkZ0002200c@hotmail.com>
Message-ID: <060B34F8-E333-11D8-80A0-000A95A50FB2@fuhm.net>

On Jul 31, 2004, at 11:13 AM, Sergio Trejo wrote:
> When a Twisted web server is killed, I'd like to somehow get a signal 
> from the server that its going down and clean up some objects (I.e., a 
> PB Client instance -- need to log it out of the PB Server on shutdown) 
> that I've persisted in the web server's registry. Has anyone done this 
> before? Any suggestions besides perhaps usng the shutdown script to 
> instantiate an HTTP client which fires a URL to the server which acts 
> as a trigger to handle the registry cleanup?

reactor.addSystemEventTrigger('before', 'shutdown', yourfunction)


