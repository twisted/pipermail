From cheako+twistedmatrix at mikemestnik.net  Fri Aug  4 08:01:36 2017
From: cheako+twistedmatrix at mikemestnik.net (Mike Mestnik)
Date: Fri, 4 Aug 2017 09:01:36 -0500
Subject: [Twisted-web] Support for websockets.
Message-ID: <CAF8px57Z1oLC1tS3ri5Tao4_HNMv9R7X6kw2cQBmy163BmN41g@mail.gmail.com>

I was working on Tor2web, a client of twisted web.  I discover that to
move forward I'd need
[iResponce](https://github.com/racker/python-twisted-web/blob/master/twisted/web/iweb.py#L497)
to expose the socket or something to read/write on.  Once it's
necessary to edit twisted-web I might as well go all out and at least
partially implement Websockets.

Here is what I did for [Tor2web](https://pastebin.com/MbHVvwNz) It's
incomplete, I was reading twisted-web and discovered the masked
interface.  Here is a [good reference for
Websockets](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers)
at a protocol level, it does say server but if you'r not working in
Javascript this is the document u need to read.

Here is what I'd envision for an interface, knowing only a little
Python and almost no twisted.

1. Upon receiving the response headers indicating a change of
protocol(connection: upgrade).  Remove the socket from any connection
pool, as it can't ever be used for http.  The connection will be
upgraded until it's closed.

2. Expose a socket interface in the iResponse class, it could be the
class itself or an attribute.  This could be a copy of the twisted
socket interface or even that interface itself.  With at least.
a. onRead callback.
b. Write.
c. Close.
d. onClose callback.
e. onError, ect.

The api does not NEED a method to determine if the connection was
upgraded, since the headers indicate as much.  However to prevent
attempts to access the Websocket API when it's not available a
python(ish) method for detecting as much I'll leave to your
discretion.

Thank you.


From cheako+twistedmatrix at mikemestnik.net  Fri Aug  4 08:04:45 2017
From: cheako+twistedmatrix at mikemestnik.net (Mike Mestnik)
Date: Fri, 4 Aug 2017 09:04:45 -0500
Subject: [Twisted-web] Looks like a whitespace bug.
Message-ID: <CAF8px56LffQQs6L8Yj9Hg3x19A5LmjErD8TuCE=nJPKyDQy9Vw@mail.gmail.com>

See:
https://github.com/racker/python-twisted-web/commit/c58ea9b3f192106c3e3d1c11b290b55c128bed30#diff-477bf6af9f412b5a20b42bdddca60a82R1256


From exarkun at twistedmatrix.com  Fri Aug  4 08:11:26 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 4 Aug 2017 10:11:26 -0400
Subject: [Twisted-web] Support for websockets.
In-Reply-To: <CAF8px57Z1oLC1tS3ri5Tao4_HNMv9R7X6kw2cQBmy163BmN41g@mail.gmail.com>
References: <CAF8px57Z1oLC1tS3ri5Tao4_HNMv9R7X6kw2cQBmy163BmN41g@mail.gmail.com>
Message-ID: <CAEeXt4OhRod=YvgcAbeUGuY9O+qXqekojZ-8XqH6P7C=89b4=w@mail.gmail.com>

On Fri, Aug 4, 2017 at 10:01 AM, Mike Mestnik <
cheako+twistedmatrix at mikemestnik.net> wrote:

> I was working on Tor2web, a client of twisted web.  I discover that to
>

What are you trying to do?  The subject of your message suggests you're
interested in some kind of WebSocket support but I have trouble following
the rest.

If you want Twisted and WebSockets, take a look at this:
https://github.com/crossbario/autobahn-python

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170804/59fb33b1/attachment.html>

From exarkun at twistedmatrix.com  Fri Aug  4 08:12:55 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 4 Aug 2017 10:12:55 -0400
Subject: [Twisted-web] Looks like a whitespace bug.
In-Reply-To: <CAF8px56LffQQs6L8Yj9Hg3x19A5LmjErD8TuCE=nJPKyDQy9Vw@mail.gmail.com>
References: <CAF8px56LffQQs6L8Yj9Hg3x19A5LmjErD8TuCE=nJPKyDQy9Vw@mail.gmail.com>
Message-ID: <CAEeXt4M0bcr7=Sx14dN9Fza4H4bn5UwpQ=QAQp=yF=E6gHPLyQ@mail.gmail.com>

On Fri, Aug 4, 2017 at 10:04 AM, Mike Mestnik <
cheako+twistedmatrix at mikemestnik.net> wrote:

> See:
> https://github.com/racker/python-twisted-web/commit/
> c58ea9b3f192106c3e3d1c11b290b55c128bed30#diff-
> 477bf6af9f412b5a20b42bdddca60a82R1256
>
>
Thanks for your interest.  If you'd like to report a bug in Twisted, first
make sure you're actually looking at Twisted
<https://github.com/twisted/twisted> (the above link is to a third-party
vendor commit that seems to include Twisted) and then head on over to
https://twistedmatrix.com/trac and file an issue.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170804/1272156a/attachment.html>

From cheako+twistedmatrix at mikemestnik.net  Fri Aug  4 09:29:50 2017
From: cheako+twistedmatrix at mikemestnik.net (Mike Mestnik)
Date: Fri, 4 Aug 2017 10:29:50 -0500
Subject: [Twisted-web] Support for websockets.
In-Reply-To: <CAEeXt4OhRod=YvgcAbeUGuY9O+qXqekojZ-8XqH6P7C=89b4=w@mail.gmail.com>
References: <CAF8px57Z1oLC1tS3ri5Tao4_HNMv9R7X6kw2cQBmy163BmN41g@mail.gmail.com>
 <CAEeXt4OhRod=YvgcAbeUGuY9O+qXqekojZ-8XqH6P7C=89b4=w@mail.gmail.com>
Message-ID: <CAF8px54SoZJnEVQEAeghOj5SUNNZPcF2fVykrmEBBHDcwLU8rw@mail.gmail.com>

On Fri, Aug 4, 2017 at 9:11 AM, Jean-Paul Calderone
<exarkun at twistedmatrix.com> wrote:
> On Fri, Aug 4, 2017 at 10:01 AM, Mike Mestnik
> <cheako+twistedmatrix at mikemestnik.net> wrote:
>>
>> I was working on Tor2web, a client of twisted web.  I discover that to
>
>
> What are you trying to do?  The subject of your message suggests you're
> interested in some kind of WebSocket support but I have trouble following
> the rest.
>
> If you want Twisted and WebSockets, take a look at this:
> https://github.com/crossbario/autobahn-python
>
I want twisted.web.client.Agent that will see the connection being
upgraded and release the socket FOR websocket.  Currently if you tried
to use  twisted.web.client.Agent with autobahn-python bad things would
happen.

> Jean-Paul
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>


From cheako+twistedmatrix at mikemestnik.net  Fri Aug  4 09:47:27 2017
From: cheako+twistedmatrix at mikemestnik.net (Mike Mestnik)
Date: Fri, 4 Aug 2017 10:47:27 -0500
Subject: [Twisted-web] Support for websockets.
In-Reply-To: <CAF8px54SoZJnEVQEAeghOj5SUNNZPcF2fVykrmEBBHDcwLU8rw@mail.gmail.com>
References: <CAF8px57Z1oLC1tS3ri5Tao4_HNMv9R7X6kw2cQBmy163BmN41g@mail.gmail.com>
 <CAEeXt4OhRod=YvgcAbeUGuY9O+qXqekojZ-8XqH6P7C=89b4=w@mail.gmail.com>
 <CAF8px54SoZJnEVQEAeghOj5SUNNZPcF2fVykrmEBBHDcwLU8rw@mail.gmail.com>
Message-ID: <CAF8px55tZKJepi1eRsQ00brzcnwtAMO6QsazH6Vu-vykAq6ktA@mail.gmail.com>

As the name suggests Tor2web is a proxy, it does not need to know
anything about the Websocket protocol, it just needs to know the HTTP
protocol and support it's Websocket aspect identified by the
"connection: upgrade" header.

Here is a patch I wrote that adds this support:
https://pastebin.com/MbHVvwNz

Notice the TODO, this is where changes to the twisted.web.client.Agent
are needed... or to just do the HTTP without this helper library.


From exarkun at twistedmatrix.com  Fri Aug  4 09:53:52 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 4 Aug 2017 11:53:52 -0400
Subject: [Twisted-web] Support for websockets.
In-Reply-To: <CAF8px54SoZJnEVQEAeghOj5SUNNZPcF2fVykrmEBBHDcwLU8rw@mail.gmail.com>
References: <CAF8px57Z1oLC1tS3ri5Tao4_HNMv9R7X6kw2cQBmy163BmN41g@mail.gmail.com>
 <CAEeXt4OhRod=YvgcAbeUGuY9O+qXqekojZ-8XqH6P7C=89b4=w@mail.gmail.com>
 <CAF8px54SoZJnEVQEAeghOj5SUNNZPcF2fVykrmEBBHDcwLU8rw@mail.gmail.com>
Message-ID: <CAEeXt4MsB4FhD4qnzW52oH7Qq+6rCn7fJe50=8SVL4-fjtPnTw@mail.gmail.com>

On Fri, Aug 4, 2017 at 11:29 AM, Mike Mestnik <
cheako+twistedmatrix at mikemestnik.net> wrote:

> On Fri, Aug 4, 2017 at 9:11 AM, Jean-Paul Calderone
> <exarkun at twistedmatrix.com> wrote:
> > On Fri, Aug 4, 2017 at 10:01 AM, Mike Mestnik
> > <cheako+twistedmatrix at mikemestnik.net> wrote:
> >>
> >> I was working on Tor2web, a client of twisted web.  I discover that to
> >
> >
> > What are you trying to do?  The subject of your message suggests you're
> > interested in some kind of WebSocket support but I have trouble following
> > the rest.
> >
> > If you want Twisted and WebSockets, take a look at this:
> > https://github.com/crossbario/autobahn-python
> >
> I want twisted.web.client.Agent that will see the connection being
> upgraded and release the socket FOR websocket.  Currently if you tried
> to use  twisted.web.client.Agent with autobahn-python bad things would
> happen.
>
>
Autobahn also has support for building WebSocket clients:

http://autobahn.readthedocs.io/en/stable/websocket/programming.html#creating-clients

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170804/949758ca/attachment.html>

From cheako+twistedmatrix at mikemestnik.net  Fri Aug  4 09:57:24 2017
From: cheako+twistedmatrix at mikemestnik.net (Mike Mestnik)
Date: Fri, 4 Aug 2017 10:57:24 -0500
Subject: [Twisted-web] Support for websockets.
In-Reply-To: <CAEeXt4MsB4FhD4qnzW52oH7Qq+6rCn7fJe50=8SVL4-fjtPnTw@mail.gmail.com>
References: <CAF8px57Z1oLC1tS3ri5Tao4_HNMv9R7X6kw2cQBmy163BmN41g@mail.gmail.com>
 <CAEeXt4OhRod=YvgcAbeUGuY9O+qXqekojZ-8XqH6P7C=89b4=w@mail.gmail.com>
 <CAF8px54SoZJnEVQEAeghOj5SUNNZPcF2fVykrmEBBHDcwLU8rw@mail.gmail.com>
 <CAEeXt4MsB4FhD4qnzW52oH7Qq+6rCn7fJe50=8SVL4-fjtPnTw@mail.gmail.com>
Message-ID: <CAF8px55TOzPr+5rt1frp1eVKDVpWe52JLAKTAStbSjiMyiF+qw@mail.gmail.com>

Not what's needed here.

On Fri, Aug 4, 2017 at 10:53 AM, Jean-Paul Calderone
<exarkun at twistedmatrix.com> wrote:
> On Fri, Aug 4, 2017 at 11:29 AM, Mike Mestnik
> <cheako+twistedmatrix at mikemestnik.net> wrote:
>>
>> On Fri, Aug 4, 2017 at 9:11 AM, Jean-Paul Calderone
>> <exarkun at twistedmatrix.com> wrote:
>> > On Fri, Aug 4, 2017 at 10:01 AM, Mike Mestnik
>> > <cheako+twistedmatrix at mikemestnik.net> wrote:
>> >>
>> >> I was working on Tor2web, a client of twisted web.  I discover that to
>> >
>> >
>> > What are you trying to do?  The subject of your message suggests you're
>> > interested in some kind of WebSocket support but I have trouble
>> > following
>> > the rest.
>> >
>> > If you want Twisted and WebSockets, take a look at this:
>> > https://github.com/crossbario/autobahn-python
>> >
>> I want twisted.web.client.Agent that will see the connection being
>> upgraded and release the socket FOR websocket.  Currently if you tried
>> to use  twisted.web.client.Agent with autobahn-python bad things would
>> happen.
>>
>
> Autobahn also has support for building WebSocket clients:
>
> http://autobahn.readthedocs.io/en/stable/websocket/programming.html#creating-clients
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>


From cheako+twistedmatrix at mikemestnik.net  Fri Aug  4 12:16:35 2017
From: cheako+twistedmatrix at mikemestnik.net (Mike Mestnik)
Date: Fri, 4 Aug 2017 13:16:35 -0500
Subject: [Twisted-web] Status for me implementing connection upgrade for the
	twisted.web.client.Agent.
Message-ID: <CAF8px57H-rNu1Yg64NN5rYksnZn5iTvJcmCEsdLyegs2jmcmjA@mail.gmail.com>

I've started working with twisted git, not the old twisted-web.

Current patch
https://github.com/cheako/twisted/commit/969ea0bced7048a922efd4999fde951e6bdcdac0

I'm lost trying to find where Response is created so I can remove the
connection from the pool.


From exarkun at twistedmatrix.com  Fri Aug  4 12:28:08 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 4 Aug 2017 14:28:08 -0400
Subject: [Twisted-web] Status for me implementing connection upgrade for
 the twisted.web.client.Agent.
In-Reply-To: <CAF8px57H-rNu1Yg64NN5rYksnZn5iTvJcmCEsdLyegs2jmcmjA@mail.gmail.com>
References: <CAF8px57H-rNu1Yg64NN5rYksnZn5iTvJcmCEsdLyegs2jmcmjA@mail.gmail.com>
Message-ID: <CAEeXt4M_U5ECVb5HdkuLDtg3anfbRg6mpBzVNxD7Ft0j_-o63g@mail.gmail.com>

On Fri, Aug 4, 2017 at 2:16 PM, Mike Mestnik <
cheako+twistedmatrix at mikemestnik.net> wrote:

> I've started working with twisted git, not the old twisted-web.
>
> Current patch
> https://github.com/cheako/twisted/commit/969ea0bced7048a922efd4999fde95
> 1e6bdcdac0
>
> I'm lost trying to find where Response is created so I can remove the
> connection from the pool.
>
>
You might want to try to more clearly articulate what you're trying to
accomplish first.  This might help you avoid doing a lot of implementation
work only to produce a change that's not actually acceptable for inclusion
in Twisted.

Jean-Paul



> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170804/ded08604/attachment.html>

From mithrandi at mithrandi.net  Sat Aug 19 11:53:09 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 19 Aug 2017 17:53:09 +0000
Subject: [Twisted-web] Nevow 0.14.3rc1 released
In-Reply-To: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>
References: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>
Message-ID: <CAMcKhMSpbj+UEwo+=2_yR0-QPW3gsZO4rVMqZSg-HAF1xRvknA@mail.gmail.com>

On Wed, 26 Jul 2017 at 20:46 Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> I've uploaded a prerelease of Nevow 0.14.3 to PyPI[1]. This contains a fix
> for some Athena client-side timeout behaviour (or more specifically, the
> lack of one) and removes use of FilePath.getmtime.
>

I've uploaded the final release of Nevow 0.14.3[1]; the only changes since
the prerelease relate to some issues around versioning and the __version__
attribute.

[1] https://pypi.python.org/pypi/Nevow/0.14.3

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170819/f9b8e977/attachment.html>

From deve at speedprint.com  Sun Aug 27 10:10:15 2017
From: deve at speedprint.com (Deve Krehbiel)
Date: Sun, 27 Aug 2017 11:10:15 -0500
Subject: [Twisted-web] Python and Cors
Message-ID: <CADfFrhQjt4F6LVWYU-c7NVQ=H-UK+FcH7UCm9vQREN8Y0eTcsA@mail.gmail.com>

First post so forgive me if I am not explaining this right.

I am trying to make a baby cam and then heavily document it for everyone to
have access to. I am using a Raspberry Pi with Rasbian. I am using
mjpg-streamer for the streaming with no problems.

The problem is I am also using two servos for pan and tilt. To accomplish
this I am using an Arduino Uno. This is so I can add IR lighting for night
vision, etc later. I am not a programmer so this is getting frustrating
after a few weeks of failure.

How is it failing you might ask..well, its working perfectly with only ONE
exception:
Every time I push the button for left/right/up/down I get this:

XMLHttpRequest cannot load http://192.168.1.122:81/servos.rpy?value=100P.
No 'Access-Control-Allow-Origin' header is present on the requested
resource. Origin 'http://192.168.1.122:9000' is therefore not allowed
access.

On the local area network, it still works, but taking it to the internet it
does not.

Here are the two programs that make this happen. One is servos.rpy and the
other is the supporting HTML/Get script;
****
servos.rpy
-----------------------------------
# Import necessary files
import serial
from twisted.web.resource import Resource
# Setup Arduino at correct speed
try:
        arduino = serial.Serial('/dev/ttyACM0', 9600)
except:
        arduino = serial.Serial('/dev/ttyACM1', 9600)

class MoveServo(Resource):
        isLeaf = True
        def render_GET(self,request):
                try:
                # Send value over serial to the Arduino
                        arduino.write(request.args['value'][0])
                        return 'Success'
                except:
                        return 'Failure'

resource = MoveServo()
***

Now for the HTML/Get script:

**
<!doctype html>
<html>
<head>
<title>Make Use Of DIY Security Camera</title>
<style type="text/css">
#container {
/* center the content */
margin: 0 auto;
text-align: center;
}
</style>
</head>
<body>
<div id="container">
<img src="/?action=stream" /><br>
<script src="
https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script><br
/>
<button onclick="servos.move('P', 10)">Left</button>
<button onclick="servos.move('P', -10)">Right</button>
<button onclick="servos.move('T', -10)">Down</button>
<button onclick="servos.move('T', 10)">Up</button>
</div>
</body>
<script>
var servos;
$( document ).ready(function() {
servos = moveServos();
});
function moveServos() {
// Store some settings, adjust to suit
var panPos = 70,
tiltPos = 90,
tiltMax = 170,
tiltMin = 45,
panMax = 170,
panMin = 20;
return {
move:function(servo, adjustment) {
var value;
if(servo == 'P') {
if(!((panPos >= panMax && adjustment > 0) || (panPos <= panMin &&
adjustment < 0))) {
// Still within allowed range, "schedule" the movement
panPos += adjustment;
}
value = panPos + 'P';
}
else if(servo == 'T') {
if(!((tiltPos >= tiltMax && adjustment > 0) || (tiltPos <= tiltMin &&
adjustment < 0))) {
// Still within allowed range, "schedule" the movement
tiltPos += adjustment;
}
value = tiltPos + 'T';
}
// Use AJAX to actually move the servo
$.get('http://192.168.1.122:81/servos.rpy?value=' + value);
},
}
}
</script>
</html>

*****
Twisted is started:  sudo twistd -n web -p 81 --path /usr/local/www/

I would be forever grateful if someone could take a serious look at this
and tell me where I am going wrong. Once this is fixed, I can start
documenting the entire system for everyone. Thank you!

Deve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170827/047f0986/attachment.html>

From donal.mcmullan at gmail.com  Sun Aug 27 11:03:03 2017
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sun, 27 Aug 2017 18:03:03 +0100
Subject: [Twisted-web] Python and Cors
In-Reply-To: <CADfFrhQjt4F6LVWYU-c7NVQ=H-UK+FcH7UCm9vQREN8Y0eTcsA@mail.gmail.com>
References: <CADfFrhQjt4F6LVWYU-c7NVQ=H-UK+FcH7UCm9vQREN8Y0eTcsA@mail.gmail.com>
Message-ID: <CADf-aJFbt40k9oAEonW-wL1rHg=EFQcwguGo-Z7sBWRHZfq4bw@mail.gmail.com>

Perhaps you just need to set the 'Access-Control-Allow-Origin' header?
Something like this might work:


# Import necessary files

import serial

from twisted.web.resource import Resource

# Setup Arduino at correct speed

try:

    arduino = serial.Serial('/dev/ttyACM0', 9600)

except:

    arduino = serial.Serial('/dev/ttyACM1', 9600)



class MoveServo(Resource):

    isLeaf = True

    permitted_origins = ('http://192.168.1.122:9000',)



    def render_GET(self,request):

        if origin in (self.permitted_origins):

            request.setHeader('Access-Control-Allow-Origin', origin)

        try:

            # Send value over serial to the Arduino

            arduino.write(request.args['value'][0])

            return 'Success'

        except:

            return 'Failure'



resource = MoveServo()

On 27 August 2017 at 17:10, Deve Krehbiel <deve at speedprint.com> wrote:

> First post so forgive me if I am not explaining this right.
>
> I am trying to make a baby cam and then heavily document it for everyone
> to have access to. I am using a Raspberry Pi with Rasbian. I am using
> mjpg-streamer for the streaming with no problems.
>
> The problem is I am also using two servos for pan and tilt. To accomplish
> this I am using an Arduino Uno. This is so I can add IR lighting for night
> vision, etc later. I am not a programmer so this is getting frustrating
> after a few weeks of failure.
>
> How is it failing you might ask..well, its working perfectly with only ONE
> exception:
> Every time I push the button for left/right/up/down I get this:
>
> XMLHttpRequest cannot load http://192.168.1.122:81/servos.rpy?value=100P.
> No 'Access-Control-Allow-Origin' header is present on the requested
> resource. Origin 'http://192.168.1.122:9000' is therefore not allowed
> access.
>
> On the local area network, it still works, but taking it to the internet
> it does not.
>
> Here are the two programs that make this happen. One is servos.rpy and the
> other is the supporting HTML/Get script;
> ****
> servos.rpy
> -----------------------------------
> # Import necessary files
> import serial
> from twisted.web.resource import Resource
> # Setup Arduino at correct speed
> try:
>         arduino = serial.Serial('/dev/ttyACM0', 9600)
> except:
>         arduino = serial.Serial('/dev/ttyACM1', 9600)
>
> class MoveServo(Resource):
>         isLeaf = True
>         def render_GET(self,request):
>                 try:
>                 # Send value over serial to the Arduino
>                         arduino.write(request.args['value'][0])
>                         return 'Success'
>                 except:
>                         return 'Failure'
>
> resource = MoveServo()
> ***
>
> Now for the HTML/Get script:
>
> **
> <!doctype html>
> <html>
> <head>
> <title>Make Use Of DIY Security Camera</title>
> <style type="text/css">
> #container {
> /* center the content */
> margin: 0 auto;
> text-align: center;
> }
> </style>
> </head>
> <body>
> <div id="container">
> <img src="/?action=stream" /><br>
> <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/
> jquery.min.js"></script><br />
> <button onclick="servos.move('P', 10)">Left</button>
> <button onclick="servos.move('P', -10)">Right</button>
> <button onclick="servos.move('T', -10)">Down</button>
> <button onclick="servos.move('T', 10)">Up</button>
> </div>
> </body>
> <script>
> var servos;
> $( document ).ready(function() {
> servos = moveServos();
> });
> function moveServos() {
> // Store some settings, adjust to suit
> var panPos = 70,
> tiltPos = 90,
> tiltMax = 170,
> tiltMin = 45,
> panMax = 170,
> panMin = 20;
> return {
> move:function(servo, adjustment) {
> var value;
> if(servo == 'P') {
> if(!((panPos >= panMax && adjustment > 0) || (panPos <= panMin &&
> adjustment < 0))) {
> // Still within allowed range, "schedule" the movement
> panPos += adjustment;
> }
> value = panPos + 'P';
> }
> else if(servo == 'T') {
> if(!((tiltPos >= tiltMax && adjustment > 0) || (tiltPos <= tiltMin &&
> adjustment < 0))) {
> // Still within allowed range, "schedule" the movement
> tiltPos += adjustment;
> }
> value = tiltPos + 'T';
> }
> // Use AJAX to actually move the servo
> $.get('http://192.168.1.122:81/servos.rpy?value=' + value);
> },
> }
> }
> </script>
> </html>
>
> *****
> Twisted is started:  sudo twistd -n web -p 81 --path /usr/local/www/
>
> I would be forever grateful if someone could take a serious look at this
> and tell me where I am going wrong. Once this is fixed, I can start
> documenting the entire system for everyone. Thank you!
>
> Deve
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170827/dba5d35b/attachment-0001.html>

From deve at speedprint.com  Sun Aug 27 11:48:32 2017
From: deve at speedprint.com (Deve Krehbiel)
Date: Sun, 27 Aug 2017 12:48:32 -0500
Subject: [Twisted-web] Python and Cors
In-Reply-To: <CADf-aJFbt40k9oAEonW-wL1rHg=EFQcwguGo-Z7sBWRHZfq4bw@mail.gmail.com>
References: <CADfFrhQjt4F6LVWYU-c7NVQ=H-UK+FcH7UCm9vQREN8Y0eTcsA@mail.gmail.com>
 <CADf-aJFbt40k9oAEonW-wL1rHg=EFQcwguGo-Z7sBWRHZfq4bw@mail.gmail.com>
Message-ID: <CADfFrhSrU7EW60CpBQsg9AOAdvc_ko0NUpUHeJ2K+f+-0i7eaA@mail.gmail.com>

Thank you for the response. In trying that code, it made it so the LAN
cannot move the buttons either. Here is the error list I got:

*web.Server Traceback (most recent call last):*
exceptions.NameError: global name 'origin' is not defined
/usr/lib/python2.7/dist-packages/twisted/web/server.py:189 in process
188                    self._encoder = encoder
189            self.render(resrc)
190        except:
/usr/lib/python2.7/dist-packages/twisted/web/server.py:238 in render
237        try:
238            body = resrc.render(self)
239        except UnsupportedMethod as e:
/usr/lib/python2.7/dist-packages/twisted/web/resource.py:250 in render
249            raise UnsupportedMethod(allowedMethods)
250        return m(request)
251
/usr/local/www/servos.rpy:15 in render_GET
14    def render_GET(self,request):
15        if origin in (self.permitted_origins):
16            request.setHeader('Access-Control-Allow-Origin', origin)
exceptions.NameError: global name 'origin' is not defined

Deve

On Sun, Aug 27, 2017 at 12:03 PM, Donal McMullan <donal.mcmullan at gmail.com>
wrote:

> Perhaps you just need to set the 'Access-Control-Allow-Origin' header?
> Something like this might work:
>
>
> # Import necessary files
>
> import serial
>
> from twisted.web.resource import Resource
>
> # Setup Arduino at correct speed
>
> try:
>
>     arduino = serial.Serial('/dev/ttyACM0', 9600)
>
> except:
>
>     arduino = serial.Serial('/dev/ttyACM1', 9600)
>
>
>
> class MoveServo(Resource):
>
>     isLeaf = True
>
>     permitted_origins = ('http://192.168.1.122:9000',)
>
>
>
>     def render_GET(self,request):
>
>         if origin in (self.permitted_origins):
>
>             request.setHeader('Access-Control-Allow-Origin', origin)
>
>         try:
>
>             # Send value over serial to the Arduino
>
>             arduino.write(request.args['value'][0])
>
>             return 'Success'
>
>         except:
>
>             return 'Failure'
>
>
>
> resource = MoveServo()
>
> On 27 August 2017 at 17:10, Deve Krehbiel <deve at speedprint.com> wrote:
>
>> First post so forgive me if I am not explaining this right.
>>
>> I am trying to make a baby cam and then heavily document it for everyone
>> to have access to. I am using a Raspberry Pi with Rasbian. I am using
>> mjpg-streamer for the streaming with no problems.
>>
>> The problem is I am also using two servos for pan and tilt. To accomplish
>> this I am using an Arduino Uno. This is so I can add IR lighting for night
>> vision, etc later. I am not a programmer so this is getting frustrating
>> after a few weeks of failure.
>>
>> How is it failing you might ask..well, its working perfectly with only
>> ONE exception:
>> Every time I push the button for left/right/up/down I get this:
>>
>> XMLHttpRequest cannot load http://192.168.1.122:81/servos.rpy?value=100P.
>> No 'Access-Control-Allow-Origin' header is present on the requested
>> resource. Origin 'http://192.168.1.122:9000' is therefore not allowed
>> access.
>>
>> On the local area network, it still works, but taking it to the internet
>> it does not.
>>
>> Here are the two programs that make this happen. One is servos.rpy and
>> the other is the supporting HTML/Get script;
>> ****
>> servos.rpy
>> -----------------------------------
>> # Import necessary files
>> import serial
>> from twisted.web.resource import Resource
>> # Setup Arduino at correct speed
>> try:
>>         arduino = serial.Serial('/dev/ttyACM0', 9600)
>> except:
>>         arduino = serial.Serial('/dev/ttyACM1', 9600)
>>
>> class MoveServo(Resource):
>>         isLeaf = True
>>         def render_GET(self,request):
>>                 try:
>>                 # Send value over serial to the Arduino
>>                         arduino.write(request.args['value'][0])
>>                         return 'Success'
>>                 except:
>>                         return 'Failure'
>>
>> resource = MoveServo()
>> ***
>>
>> Now for the HTML/Get script:
>>
>> **
>> <!doctype html>
>> <html>
>> <head>
>> <title>Make Use Of DIY Security Camera</title>
>> <style type="text/css">
>> #container {
>> /* center the content */
>> margin: 0 auto;
>> text-align: center;
>> }
>> </style>
>> </head>
>> <body>
>> <div id="container">
>> <img src="/?action=stream" /><br>
>> <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jque
>> ry.min.js"></script><br />
>> <button onclick="servos.move('P', 10)">Left</button>
>> <button onclick="servos.move('P', -10)">Right</button>
>> <button onclick="servos.move('T', -10)">Down</button>
>> <button onclick="servos.move('T', 10)">Up</button>
>> </div>
>> </body>
>> <script>
>> var servos;
>> $( document ).ready(function() {
>> servos = moveServos();
>> });
>> function moveServos() {
>> // Store some settings, adjust to suit
>> var panPos = 70,
>> tiltPos = 90,
>> tiltMax = 170,
>> tiltMin = 45,
>> panMax = 170,
>> panMin = 20;
>> return {
>> move:function(servo, adjustment) {
>> var value;
>> if(servo == 'P') {
>> if(!((panPos >= panMax && adjustment > 0) || (panPos <= panMin &&
>> adjustment < 0))) {
>> // Still within allowed range, "schedule" the movement
>> panPos += adjustment;
>> }
>> value = panPos + 'P';
>> }
>> else if(servo == 'T') {
>> if(!((tiltPos >= tiltMax && adjustment > 0) || (tiltPos <= tiltMin &&
>> adjustment < 0))) {
>> // Still within allowed range, "schedule" the movement
>> tiltPos += adjustment;
>> }
>> value = tiltPos + 'T';
>> }
>> // Use AJAX to actually move the servo
>> $.get('http://192.168.1.122:81/servos.rpy?value=' + value);
>> },
>> }
>> }
>> </script>
>> </html>
>>
>> *****
>> Twisted is started:  sudo twistd -n web -p 81 --path /usr/local/www/
>>
>> I would be forever grateful if someone could take a serious look at this
>> and tell me where I am going wrong. Once this is fixed, I can start
>> documenting the entire system for everyone. Thank you!
>>
>> Deve
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170827/616b95cf/attachment-0001.html>

From deve at speedprint.com  Sun Aug 27 12:01:55 2017
From: deve at speedprint.com (Deve Krehbiel)
Date: Sun, 27 Aug 2017 13:01:55 -0500
Subject: [Twisted-web] Python and Cors
In-Reply-To: <CADfFrhSrU7EW60CpBQsg9AOAdvc_ko0NUpUHeJ2K+f+-0i7eaA@mail.gmail.com>
References: <CADfFrhQjt4F6LVWYU-c7NVQ=H-UK+FcH7UCm9vQREN8Y0eTcsA@mail.gmail.com>
 <CADf-aJFbt40k9oAEonW-wL1rHg=EFQcwguGo-Z7sBWRHZfq4bw@mail.gmail.com>
 <CADfFrhSrU7EW60CpBQsg9AOAdvc_ko0NUpUHeJ2K+f+-0i7eaA@mail.gmail.com>
Message-ID: <CADfFrhS=gj7oULcsF+t8X6UWhM4QxN-uQxn3BJPM7LcQO40Abw@mail.gmail.com>

This is what I get without your code:
index1.html:1 XMLHttpRequest cannot load
http://192.168.1.122:81/servos.rpy?value=70P. No
'Access-Control-Allow-Origin' header is present on the requested resource.
Origin 'http://192.168.1.122:9000' is therefore not allowed access.
jquery.min.js:4 XHR failed loading: GET "
http://192.168.1.122:81/servos.rpy?value=70P".

This is what I get with it:
jquery.min.js:4 GET http://192.168.1.122:81/servos.rpy?value=100P
send @ jquery.min.js:4
ajax @ jquery.min.js:4
r.(anonymous function) @ jquery.min.js:4
move @ index1.html:54
onclick @ index1.html:17
index1.html:1 XMLHttpRequest cannot load
http://192.168.1.122:81/servos.rpy?value=100P. No
'Access-Control-Allow-Origin' header is present on the requested resource.
Origin 'http://192.168.1.122:9000' is therefore not allowed access. *The
response had HTTP status code 500.*
jquery.min.js:4 XHR failed loading: GET "
http://192.168.1.122:81/servos.rpy?value=100P".

I appreciate your efforts and if you have any other ideas... Thank You!

Deve

On Sun, Aug 27, 2017 at 12:48 PM, Deve Krehbiel <deve at speedprint.com> wrote:

> Thank you for the response. In trying that code, it made it so the LAN
> cannot move the buttons either. Here is the error list I got:
>
> *web.Server Traceback (most recent call last):*
> exceptions.NameError: global name 'origin' is not defined
> /usr/lib/python2.7/dist-packages/twisted/web/server.py:189 in process
> 188                    self._encoder = encoder
> 189            self.render(resrc)
> 190        except:
> /usr/lib/python2.7/dist-packages/twisted/web/server.py:238 in render
> 237        try:
> 238            body = resrc.render(self)
> 239        except UnsupportedMethod as e:
> /usr/lib/python2.7/dist-packages/twisted/web/resource.py:250 in render
> 249            raise UnsupportedMethod(allowedMethods)
> 250        return m(request)
> 251
> /usr/local/www/servos.rpy:15 in render_GET
> 14    def render_GET(self,request):
> 15        if origin in (self.permitted_origins):
> 16            request.setHeader('Access-Control-Allow-Origin', origin)
> exceptions.NameError: global name 'origin' is not defined
>
> Deve
>
> On Sun, Aug 27, 2017 at 12:03 PM, Donal McMullan <donal.mcmullan at gmail.com
> > wrote:
>
>> Perhaps you just need to set the 'Access-Control-Allow-Origin' header?
>> Something like this might work:
>>
>>
>> # Import necessary files
>>
>> import serial
>>
>> from twisted.web.resource import Resource
>>
>> # Setup Arduino at correct speed
>>
>> try:
>>
>>     arduino = serial.Serial('/dev/ttyACM0', 9600)
>>
>> except:
>>
>>     arduino = serial.Serial('/dev/ttyACM1', 9600)
>>
>>
>>
>> class MoveServo(Resource):
>>
>>     isLeaf = True
>>
>>     permitted_origins = ('http://192.168.1.122:9000',)
>>
>>
>>
>>     def render_GET(self,request):
>>
>>         if origin in (self.permitted_origins):
>>
>>             request.setHeader('Access-Control-Allow-Origin', origin)
>>
>>         try:
>>
>>             # Send value over serial to the Arduino
>>
>>             arduino.write(request.args['value'][0])
>>
>>             return 'Success'
>>
>>         except:
>>
>>             return 'Failure'
>>
>>
>>
>> resource = MoveServo()
>>
>> On 27 August 2017 at 17:10, Deve Krehbiel <deve at speedprint.com> wrote:
>>
>>> First post so forgive me if I am not explaining this right.
>>>
>>> I am trying to make a baby cam and then heavily document it for everyone
>>> to have access to. I am using a Raspberry Pi with Rasbian. I am using
>>> mjpg-streamer for the streaming with no problems.
>>>
>>> The problem is I am also using two servos for pan and tilt. To
>>> accomplish this I am using an Arduino Uno. This is so I can add IR lighting
>>> for night vision, etc later. I am not a programmer so this is getting
>>> frustrating after a few weeks of failure.
>>>
>>> How is it failing you might ask..well, its working perfectly with only
>>> ONE exception:
>>> Every time I push the button for left/right/up/down I get this:
>>>
>>> XMLHttpRequest cannot load http://192.168.1.122:81/servos.rpy?value=100P.
>>> No 'Access-Control-Allow-Origin' header is present on the requested
>>> resource. Origin 'http://192.168.1.122:9000' is therefore not allowed
>>> access.
>>>
>>> On the local area network, it still works, but taking it to the internet
>>> it does not.
>>>
>>> Here are the two programs that make this happen. One is servos.rpy and
>>> the other is the supporting HTML/Get script;
>>> ****
>>> servos.rpy
>>> -----------------------------------
>>> # Import necessary files
>>> import serial
>>> from twisted.web.resource import Resource
>>> # Setup Arduino at correct speed
>>> try:
>>>         arduino = serial.Serial('/dev/ttyACM0', 9600)
>>> except:
>>>         arduino = serial.Serial('/dev/ttyACM1', 9600)
>>>
>>> class MoveServo(Resource):
>>>         isLeaf = True
>>>         def render_GET(self,request):
>>>                 try:
>>>                 # Send value over serial to the Arduino
>>>                         arduino.write(request.args['value'][0])
>>>                         return 'Success'
>>>                 except:
>>>                         return 'Failure'
>>>
>>> resource = MoveServo()
>>> ***
>>>
>>> Now for the HTML/Get script:
>>>
>>> **
>>> <!doctype html>
>>> <html>
>>> <head>
>>> <title>Make Use Of DIY Security Camera</title>
>>> <style type="text/css">
>>> #container {
>>> /* center the content */
>>> margin: 0 auto;
>>> text-align: center;
>>> }
>>> </style>
>>> </head>
>>> <body>
>>> <div id="container">
>>> <img src="/?action=stream" /><br>
>>> <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jque
>>> ry.min.js"></script><br />
>>> <button onclick="servos.move('P', 10)">Left</button>
>>> <button onclick="servos.move('P', -10)">Right</button>
>>> <button onclick="servos.move('T', -10)">Down</button>
>>> <button onclick="servos.move('T', 10)">Up</button>
>>> </div>
>>> </body>
>>> <script>
>>> var servos;
>>> $( document ).ready(function() {
>>> servos = moveServos();
>>> });
>>> function moveServos() {
>>> // Store some settings, adjust to suit
>>> var panPos = 70,
>>> tiltPos = 90,
>>> tiltMax = 170,
>>> tiltMin = 45,
>>> panMax = 170,
>>> panMin = 20;
>>> return {
>>> move:function(servo, adjustment) {
>>> var value;
>>> if(servo == 'P') {
>>> if(!((panPos >= panMax && adjustment > 0) || (panPos <= panMin &&
>>> adjustment < 0))) {
>>> // Still within allowed range, "schedule" the movement
>>> panPos += adjustment;
>>> }
>>> value = panPos + 'P';
>>> }
>>> else if(servo == 'T') {
>>> if(!((tiltPos >= tiltMax && adjustment > 0) || (tiltPos <= tiltMin &&
>>> adjustment < 0))) {
>>> // Still within allowed range, "schedule" the movement
>>> tiltPos += adjustment;
>>> }
>>> value = tiltPos + 'T';
>>> }
>>> // Use AJAX to actually move the servo
>>> $.get('http://192.168.1.122:81/servos.rpy?value=' + value);
>>> },
>>> }
>>> }
>>> </script>
>>> </html>
>>>
>>> *****
>>> Twisted is started:  sudo twistd -n web -p 81 --path /usr/local/www/
>>>
>>> I would be forever grateful if someone could take a serious look at this
>>> and tell me where I am going wrong. Once this is fixed, I can start
>>> documenting the entire system for everyone. Thank you!
>>>
>>> Deve
>>>
>>> _______________________________________________
>>> Twisted-web mailing list
>>> Twisted-web at twistedmatrix.com
>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>>
>>>
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170827/94cf9a15/attachment-0001.html>

From donal.mcmullan at gmail.com  Sun Aug 27 13:43:51 2017
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sun, 27 Aug 2017 20:43:51 +0100
Subject: [Twisted-web] Python and Cors
In-Reply-To: <CADfFrhS=gj7oULcsF+t8X6UWhM4QxN-uQxn3BJPM7LcQO40Abw@mail.gmail.com>
References: <CADfFrhQjt4F6LVWYU-c7NVQ=H-UK+FcH7UCm9vQREN8Y0eTcsA@mail.gmail.com>
 <CADf-aJFbt40k9oAEonW-wL1rHg=EFQcwguGo-Z7sBWRHZfq4bw@mail.gmail.com>
 <CADfFrhSrU7EW60CpBQsg9AOAdvc_ko0NUpUHeJ2K+f+-0i7eaA@mail.gmail.com>
 <CADfFrhS=gj7oULcsF+t8X6UWhM4QxN-uQxn3BJPM7LcQO40Abw@mail.gmail.com>
Message-ID: <CADf-aJEyVdZG5J9+A1bMiXoBCauUtTGRTob5VTXb_QUr=P8eVg@mail.gmail.com>

Ah sorry Deve -  I failed to paste the first like of the render_GET method.

# Import necessary files

import serial

from twisted.web.resource import Resource

# Setup Arduino at correct speed

try:

    arduino = serial.Serial('/dev/ttyACM0', 9600)

except:

    arduino = serial.Serial('/dev/ttyACM1', 9600)



class MoveServo(Resource):

    isLeaf = True

    permitted_origins = ('http://192.168.1.122:9000',)



    def render_GET(self,request):
        origin = request.getHeader('Origin')

        if origin in (self.permitted_origins):

            request.setHeader('Access-Control-Allow-Origin', origin)

        try:

            # Send value over serial to the Arduino

            arduino.write(request.args['value'][0])

            return 'Success'

        except:

            return 'Failure'



resource = MoveServo()

On 27 August 2017 at 19:01, Deve Krehbiel <deve at speedprint.com> wrote:

> This is what I get without your code:
> index1.html:1 XMLHttpRequest cannot load http://192.168.1.122:81/
> servos.rpy?value=70P. No 'Access-Control-Allow-Origin' header is present
> on the requested resource. Origin 'http://192.168.1.122:9000' is
> therefore not allowed access.
> jquery.min.js:4 XHR failed loading: GET "http://192.168.1.122:81/
> servos.rpy?value=70P".
>
> This is what I get with it:
> jquery.min.js:4 GET http://192.168.1.122:81/servos.rpy?value=100P
> send @ jquery.min.js:4
> ajax @ jquery.min.js:4
> r.(anonymous function) @ jquery.min.js:4
> move @ index1.html:54
> onclick @ index1.html:17
> index1.html:1 XMLHttpRequest cannot load http://192.168.1.122:81/
> servos.rpy?value=100P. No 'Access-Control-Allow-Origin' header is present
> on the requested resource. Origin 'http://192.168.1.122:9000' is
> therefore not allowed access. *The response had HTTP status code 500.*
> jquery.min.js:4 XHR failed loading: GET "http://192.168.1.122:81/
> servos.rpy?value=100P".
>
> I appreciate your efforts and if you have any other ideas... Thank You!
>
> Deve
>
> On Sun, Aug 27, 2017 at 12:48 PM, Deve Krehbiel <deve at speedprint.com>
> wrote:
>
>> Thank you for the response. In trying that code, it made it so the LAN
>> cannot move the buttons either. Here is the error list I got:
>>
>> *web.Server Traceback (most recent call last):*
>> exceptions.NameError: global name 'origin' is not defined
>> /usr/lib/python2.7/dist-packages/twisted/web/server.py:189 in process
>> 188                    self._encoder = encoder
>> 189            self.render(resrc)
>> 190        except:
>> /usr/lib/python2.7/dist-packages/twisted/web/server.py:238 in render
>> 237        try:
>> 238            body = resrc.render(self)
>> 239        except UnsupportedMethod as e:
>> /usr/lib/python2.7/dist-packages/twisted/web/resource.py:250 in render
>> 249            raise UnsupportedMethod(allowedMethods)
>> 250        return m(request)
>> 251
>> /usr/local/www/servos.rpy:15 in render_GET
>> 14    def render_GET(self,request):
>> 15        if origin in (self.permitted_origins):
>> 16            request.setHeader('Access-Control-Allow-Origin', origin)
>> exceptions.NameError: global name 'origin' is not defined
>>
>> Deve
>>
>> On Sun, Aug 27, 2017 at 12:03 PM, Donal McMullan <
>> donal.mcmullan at gmail.com> wrote:
>>
>>> Perhaps you just need to set the 'Access-Control-Allow-Origin' header?
>>> Something like this might work:
>>>
>>>
>>> # Import necessary files
>>>
>>> import serial
>>>
>>> from twisted.web.resource import Resource
>>>
>>> # Setup Arduino at correct speed
>>>
>>> try:
>>>
>>>     arduino = serial.Serial('/dev/ttyACM0', 9600)
>>>
>>> except:
>>>
>>>     arduino = serial.Serial('/dev/ttyACM1', 9600)
>>>
>>>
>>>
>>> class MoveServo(Resource):
>>>
>>>     isLeaf = True
>>>
>>>     permitted_origins = ('http://192.168.1.122:9000',)
>>>
>>>
>>>
>>>     def render_GET(self,request):
>>>
>>>         if origin in (self.permitted_origins):
>>>
>>>             request.setHeader('Access-Control-Allow-Origin', origin)
>>>
>>>         try:
>>>
>>>             # Send value over serial to the Arduino
>>>
>>>             arduino.write(request.args['value'][0])
>>>
>>>             return 'Success'
>>>
>>>         except:
>>>
>>>             return 'Failure'
>>>
>>>
>>>
>>> resource = MoveServo()
>>>
>>> On 27 August 2017 at 17:10, Deve Krehbiel <deve at speedprint.com> wrote:
>>>
>>>> First post so forgive me if I am not explaining this right.
>>>>
>>>> I am trying to make a baby cam and then heavily document it for
>>>> everyone to have access to. I am using a Raspberry Pi with Rasbian. I am
>>>> using mjpg-streamer for the streaming with no problems.
>>>>
>>>> The problem is I am also using two servos for pan and tilt. To
>>>> accomplish this I am using an Arduino Uno. This is so I can add IR lighting
>>>> for night vision, etc later. I am not a programmer so this is getting
>>>> frustrating after a few weeks of failure.
>>>>
>>>> How is it failing you might ask..well, its working perfectly with only
>>>> ONE exception:
>>>> Every time I push the button for left/right/up/down I get this:
>>>>
>>>> XMLHttpRequest cannot load http://192.168.1.122:81/servos
>>>> .rpy?value=100P. No 'Access-Control-Allow-Origin' header is present on
>>>> the requested resource. Origin 'http://192.168.1.122:9000' is
>>>> therefore not allowed access.
>>>>
>>>> On the local area network, it still works, but taking it to the
>>>> internet it does not.
>>>>
>>>> Here are the two programs that make this happen. One is servos.rpy and
>>>> the other is the supporting HTML/Get script;
>>>> ****
>>>> servos.rpy
>>>> -----------------------------------
>>>> # Import necessary files
>>>> import serial
>>>> from twisted.web.resource import Resource
>>>> # Setup Arduino at correct speed
>>>> try:
>>>>         arduino = serial.Serial('/dev/ttyACM0', 9600)
>>>> except:
>>>>         arduino = serial.Serial('/dev/ttyACM1', 9600)
>>>>
>>>> class MoveServo(Resource):
>>>>         isLeaf = True
>>>>         def render_GET(self,request):
>>>>                 try:
>>>>                 # Send value over serial to the Arduino
>>>>                         arduino.write(request.args['value'][0])
>>>>                         return 'Success'
>>>>                 except:
>>>>                         return 'Failure'
>>>>
>>>> resource = MoveServo()
>>>> ***
>>>>
>>>> Now for the HTML/Get script:
>>>>
>>>> **
>>>> <!doctype html>
>>>> <html>
>>>> <head>
>>>> <title>Make Use Of DIY Security Camera</title>
>>>> <style type="text/css">
>>>> #container {
>>>> /* center the content */
>>>> margin: 0 auto;
>>>> text-align: center;
>>>> }
>>>> </style>
>>>> </head>
>>>> <body>
>>>> <div id="container">
>>>> <img src="/?action=stream" /><br>
>>>> <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jque
>>>> ry.min.js"></script><br />
>>>> <button onclick="servos.move('P', 10)">Left</button>
>>>> <button onclick="servos.move('P', -10)">Right</button>
>>>> <button onclick="servos.move('T', -10)">Down</button>
>>>> <button onclick="servos.move('T', 10)">Up</button>
>>>> </div>
>>>> </body>
>>>> <script>
>>>> var servos;
>>>> $( document ).ready(function() {
>>>> servos = moveServos();
>>>> });
>>>> function moveServos() {
>>>> // Store some settings, adjust to suit
>>>> var panPos = 70,
>>>> tiltPos = 90,
>>>> tiltMax = 170,
>>>> tiltMin = 45,
>>>> panMax = 170,
>>>> panMin = 20;
>>>> return {
>>>> move:function(servo, adjustment) {
>>>> var value;
>>>> if(servo == 'P') {
>>>> if(!((panPos >= panMax && adjustment > 0) || (panPos <= panMin &&
>>>> adjustment < 0))) {
>>>> // Still within allowed range, "schedule" the movement
>>>> panPos += adjustment;
>>>> }
>>>> value = panPos + 'P';
>>>> }
>>>> else if(servo == 'T') {
>>>> if(!((tiltPos >= tiltMax && adjustment > 0) || (tiltPos <= tiltMin &&
>>>> adjustment < 0))) {
>>>> // Still within allowed range, "schedule" the movement
>>>> tiltPos += adjustment;
>>>> }
>>>> value = tiltPos + 'T';
>>>> }
>>>> // Use AJAX to actually move the servo
>>>> $.get('http://192.168.1.122:81/servos.rpy?value=' + value);
>>>> },
>>>> }
>>>> }
>>>> </script>
>>>> </html>
>>>>
>>>> *****
>>>> Twisted is started:  sudo twistd -n web -p 81 --path /usr/local/www/
>>>>
>>>> I would be forever grateful if someone could take a serious look at
>>>> this and tell me where I am going wrong. Once this is fixed, I can start
>>>> documenting the entire system for everyone. Thank you!
>>>>
>>>> Deve
>>>>
>>>> _______________________________________________
>>>> Twisted-web mailing list
>>>> Twisted-web at twistedmatrix.com
>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Twisted-web mailing list
>>> Twisted-web at twistedmatrix.com
>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>>
>>>
>>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170827/811355f6/attachment-0001.html>

From deve at speedprint.com  Sun Aug 27 14:11:51 2017
From: deve at speedprint.com (Deve Krehbiel)
Date: Sun, 27 Aug 2017 15:11:51 -0500
Subject: [Twisted-web] Python and Cors
In-Reply-To: <CADf-aJEyVdZG5J9+A1bMiXoBCauUtTGRTob5VTXb_QUr=P8eVg@mail.gmail.com>
References: <CADfFrhQjt4F6LVWYU-c7NVQ=H-UK+FcH7UCm9vQREN8Y0eTcsA@mail.gmail.com>
 <CADf-aJFbt40k9oAEonW-wL1rHg=EFQcwguGo-Z7sBWRHZfq4bw@mail.gmail.com>
 <CADfFrhSrU7EW60CpBQsg9AOAdvc_ko0NUpUHeJ2K+f+-0i7eaA@mail.gmail.com>
 <CADfFrhS=gj7oULcsF+t8X6UWhM4QxN-uQxn3BJPM7LcQO40Abw@mail.gmail.com>
 <CADf-aJEyVdZG5J9+A1bMiXoBCauUtTGRTob5VTXb_QUr=P8eVg@mail.gmail.com>
Message-ID: <CADfFrhS=yOwmm7pjbwP+vhFLcOtMuuUkE6qyxhfGEvTUXsC4VQ@mail.gmail.com>

WOW! That did it. I am amazed! Thank you so much! My next chore is to
figure out how to make sliders for this so that I can move the servos in 1
degree increments. On to that task! I am so appreciative! Thank you Donal!

Deve

On Sun, Aug 27, 2017 at 2:43 PM, Donal McMullan <donal.mcmullan at gmail.com>
wrote:

> Ah sorry Deve -  I failed to paste the first like of the render_GET method.
>
> # Import necessary files
>
> import serial
>
> from twisted.web.resource import Resource
>
> # Setup Arduino at correct speed
>
> try:
>
>     arduino = serial.Serial('/dev/ttyACM0', 9600)
>
> except:
>
>     arduino = serial.Serial('/dev/ttyACM1', 9600)
>
>
>
> class MoveServo(Resource):
>
>     isLeaf = True
>
>     permitted_origins = ('http://192.168.1.122:9000',)
>
>
>
>     def render_GET(self,request):
>         origin = request.getHeader('Origin')
>
>         if origin in (self.permitted_origins):
>
>             request.setHeader('Access-Control-Allow-Origin', origin)
>
>         try:
>
>             # Send value over serial to the Arduino
>
>             arduino.write(request.args['value'][0])
>
>             return 'Success'
>
>         except:
>
>             return 'Failure'
>
>
>
> resource = MoveServo()
>
> On 27 August 2017 at 19:01, Deve Krehbiel <deve at speedprint.com> wrote:
>
>> This is what I get without your code:
>> index1.html:1 XMLHttpRequest cannot load http://192.168.1.122:81/servos
>> .rpy?value=70P. No 'Access-Control-Allow-Origin' header is present on
>> the requested resource. Origin 'http://192.168.1.122:9000' is therefore
>> not allowed access.
>> jquery.min.js:4 XHR failed loading: GET "http://192.168.1.122:81/servo
>> s.rpy?value=70P".
>>
>> This is what I get with it:
>> jquery.min.js:4 GET http://192.168.1.122:81/servos.rpy?value=100P
>> send @ jquery.min.js:4
>> ajax @ jquery.min.js:4
>> r.(anonymous function) @ jquery.min.js:4
>> move @ index1.html:54
>> onclick @ index1.html:17
>> index1.html:1 XMLHttpRequest cannot load http://192.168.1.122:81/servos
>> .rpy?value=100P. No 'Access-Control-Allow-Origin' header is present on
>> the requested resource. Origin 'http://192.168.1.122:9000' is therefore
>> not allowed access. *The response had HTTP status code 500.*
>> jquery.min.js:4 XHR failed loading: GET "http://192.168.1.122:81/servo
>> s.rpy?value=100P".
>>
>> I appreciate your efforts and if you have any other ideas... Thank You!
>>
>> Deve
>>
>> On Sun, Aug 27, 2017 at 12:48 PM, Deve Krehbiel <deve at speedprint.com>
>> wrote:
>>
>>> Thank you for the response. In trying that code, it made it so the LAN
>>> cannot move the buttons either. Here is the error list I got:
>>>
>>> *web.Server Traceback (most recent call last):*
>>> exceptions.NameError: global name 'origin' is not defined
>>> /usr/lib/python2.7/dist-packages/twisted/web/server.py:189 in process
>>> 188                    self._encoder = encoder
>>> 189            self.render(resrc)
>>> 190        except:
>>> /usr/lib/python2.7/dist-packages/twisted/web/server.py:238 in render
>>> 237        try:
>>> 238            body = resrc.render(self)
>>> 239        except UnsupportedMethod as e:
>>> /usr/lib/python2.7/dist-packages/twisted/web/resource.py:250 in render
>>> 249            raise UnsupportedMethod(allowedMethods)
>>> 250        return m(request)
>>> 251
>>> /usr/local/www/servos.rpy:15 in render_GET
>>> 14    def render_GET(self,request):
>>> 15        if origin in (self.permitted_origins):
>>> 16            request.setHeader('Access-Control-Allow-Origin', origin)
>>> exceptions.NameError: global name 'origin' is not defined
>>>
>>> Deve
>>>
>>> On Sun, Aug 27, 2017 at 12:03 PM, Donal McMullan <
>>> donal.mcmullan at gmail.com> wrote:
>>>
>>>> Perhaps you just need to set the 'Access-Control-Allow-Origin' header?
>>>> Something like this might work:
>>>>
>>>>
>>>> # Import necessary files
>>>>
>>>> import serial
>>>>
>>>> from twisted.web.resource import Resource
>>>>
>>>> # Setup Arduino at correct speed
>>>>
>>>> try:
>>>>
>>>>     arduino = serial.Serial('/dev/ttyACM0', 9600)
>>>>
>>>> except:
>>>>
>>>>     arduino = serial.Serial('/dev/ttyACM1', 9600)
>>>>
>>>>
>>>>
>>>> class MoveServo(Resource):
>>>>
>>>>     isLeaf = True
>>>>
>>>>     permitted_origins = ('http://192.168.1.122:9000',)
>>>>
>>>>
>>>>
>>>>     def render_GET(self,request):
>>>>
>>>>         if origin in (self.permitted_origins):
>>>>
>>>>             request.setHeader('Access-Control-Allow-Origin', origin)
>>>>
>>>>         try:
>>>>
>>>>             # Send value over serial to the Arduino
>>>>
>>>>             arduino.write(request.args['value'][0])
>>>>
>>>>             return 'Success'
>>>>
>>>>         except:
>>>>
>>>>             return 'Failure'
>>>>
>>>>
>>>>
>>>> resource = MoveServo()
>>>>
>>>> On 27 August 2017 at 17:10, Deve Krehbiel <deve at speedprint.com> wrote:
>>>>
>>>>> First post so forgive me if I am not explaining this right.
>>>>>
>>>>> I am trying to make a baby cam and then heavily document it for
>>>>> everyone to have access to. I am using a Raspberry Pi with Rasbian. I am
>>>>> using mjpg-streamer for the streaming with no problems.
>>>>>
>>>>> The problem is I am also using two servos for pan and tilt. To
>>>>> accomplish this I am using an Arduino Uno. This is so I can add IR lighting
>>>>> for night vision, etc later. I am not a programmer so this is getting
>>>>> frustrating after a few weeks of failure.
>>>>>
>>>>> How is it failing you might ask..well, its working perfectly with only
>>>>> ONE exception:
>>>>> Every time I push the button for left/right/up/down I get this:
>>>>>
>>>>> XMLHttpRequest cannot load http://192.168.1.122:81/servos
>>>>> .rpy?value=100P. No 'Access-Control-Allow-Origin' header is present
>>>>> on the requested resource. Origin 'http://192.168.1.122:9000' is
>>>>> therefore not allowed access.
>>>>>
>>>>> On the local area network, it still works, but taking it to the
>>>>> internet it does not.
>>>>>
>>>>> Here are the two programs that make this happen. One is servos.rpy and
>>>>> the other is the supporting HTML/Get script;
>>>>> ****
>>>>> servos.rpy
>>>>> -----------------------------------
>>>>> # Import necessary files
>>>>> import serial
>>>>> from twisted.web.resource import Resource
>>>>> # Setup Arduino at correct speed
>>>>> try:
>>>>>         arduino = serial.Serial('/dev/ttyACM0', 9600)
>>>>> except:
>>>>>         arduino = serial.Serial('/dev/ttyACM1', 9600)
>>>>>
>>>>> class MoveServo(Resource):
>>>>>         isLeaf = True
>>>>>         def render_GET(self,request):
>>>>>                 try:
>>>>>                 # Send value over serial to the Arduino
>>>>>                         arduino.write(request.args['value'][0])
>>>>>                         return 'Success'
>>>>>                 except:
>>>>>                         return 'Failure'
>>>>>
>>>>> resource = MoveServo()
>>>>> ***
>>>>>
>>>>> Now for the HTML/Get script:
>>>>>
>>>>> **
>>>>> <!doctype html>
>>>>> <html>
>>>>> <head>
>>>>> <title>Make Use Of DIY Security Camera</title>
>>>>> <style type="text/css">
>>>>> #container {
>>>>> /* center the content */
>>>>> margin: 0 auto;
>>>>> text-align: center;
>>>>> }
>>>>> </style>
>>>>> </head>
>>>>> <body>
>>>>> <div id="container">
>>>>> <img src="/?action=stream" /><br>
>>>>> <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jque
>>>>> ry.min.js"></script><br />
>>>>> <button onclick="servos.move('P', 10)">Left</button>
>>>>> <button onclick="servos.move('P', -10)">Right</button>
>>>>> <button onclick="servos.move('T', -10)">Down</button>
>>>>> <button onclick="servos.move('T', 10)">Up</button>
>>>>> </div>
>>>>> </body>
>>>>> <script>
>>>>> var servos;
>>>>> $( document ).ready(function() {
>>>>> servos = moveServos();
>>>>> });
>>>>> function moveServos() {
>>>>> // Store some settings, adjust to suit
>>>>> var panPos = 70,
>>>>> tiltPos = 90,
>>>>> tiltMax = 170,
>>>>> tiltMin = 45,
>>>>> panMax = 170,
>>>>> panMin = 20;
>>>>> return {
>>>>> move:function(servo, adjustment) {
>>>>> var value;
>>>>> if(servo == 'P') {
>>>>> if(!((panPos >= panMax && adjustment > 0) || (panPos <= panMin &&
>>>>> adjustment < 0))) {
>>>>> // Still within allowed range, "schedule" the movement
>>>>> panPos += adjustment;
>>>>> }
>>>>> value = panPos + 'P';
>>>>> }
>>>>> else if(servo == 'T') {
>>>>> if(!((tiltPos >= tiltMax && adjustment > 0) || (tiltPos <= tiltMin &&
>>>>> adjustment < 0))) {
>>>>> // Still within allowed range, "schedule" the movement
>>>>> tiltPos += adjustment;
>>>>> }
>>>>> value = tiltPos + 'T';
>>>>> }
>>>>> // Use AJAX to actually move the servo
>>>>> $.get('http://192.168.1.122:81/servos.rpy?value=' + value);
>>>>> },
>>>>> }
>>>>> }
>>>>> </script>
>>>>> </html>
>>>>>
>>>>> *****
>>>>> Twisted is started:  sudo twistd -n web -p 81 --path /usr/local/www/
>>>>>
>>>>> I would be forever grateful if someone could take a serious look at
>>>>> this and tell me where I am going wrong. Once this is fixed, I can start
>>>>> documenting the entire system for everyone. Thank you!
>>>>>
>>>>> Deve
>>>>>
>>>>> _______________________________________________
>>>>> Twisted-web mailing list
>>>>> Twisted-web at twistedmatrix.com
>>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-web mailing list
>>>> Twisted-web at twistedmatrix.com
>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>>>
>>>>
>>>
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170827/9de31cbf/attachment-0001.html>

From donal.mcmullan at gmail.com  Sun Aug 27 15:01:51 2017
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sun, 27 Aug 2017 22:01:51 +0100
Subject: [Twisted-web] Python and Cors
In-Reply-To: <CADfFrhS=yOwmm7pjbwP+vhFLcOtMuuUkE6qyxhfGEvTUXsC4VQ@mail.gmail.com>
References: <CADfFrhQjt4F6LVWYU-c7NVQ=H-UK+FcH7UCm9vQREN8Y0eTcsA@mail.gmail.com>
 <CADf-aJFbt40k9oAEonW-wL1rHg=EFQcwguGo-Z7sBWRHZfq4bw@mail.gmail.com>
 <CADfFrhSrU7EW60CpBQsg9AOAdvc_ko0NUpUHeJ2K+f+-0i7eaA@mail.gmail.com>
 <CADfFrhS=gj7oULcsF+t8X6UWhM4QxN-uQxn3BJPM7LcQO40Abw@mail.gmail.com>
 <CADf-aJEyVdZG5J9+A1bMiXoBCauUtTGRTob5VTXb_QUr=P8eVg@mail.gmail.com>
 <CADfFrhS=yOwmm7pjbwP+vhFLcOtMuuUkE6qyxhfGEvTUXsC4VQ@mail.gmail.com>
Message-ID: <CADf-aJFTt0mrFnBpecfqrO4iv_i0HGqKkzCXq261XUG2zLgdwQ@mail.gmail.com>

No worries - glad I could help.

On 27 August 2017 at 21:11, Deve Krehbiel <deve at speedprint.com> wrote:

> WOW! That did it. I am amazed! Thank you so much! My next chore is to
> figure out how to make sliders for this so that I can move the servos in 1
> degree increments. On to that task! I am so appreciative! Thank you Donal!
>
> Deve
>
> On Sun, Aug 27, 2017 at 2:43 PM, Donal McMullan <donal.mcmullan at gmail.com>
> wrote:
>
>> Ah sorry Deve -  I failed to paste the first like of the render_GET
>> method.
>>
>> # Import necessary files
>>
>> import serial
>>
>> from twisted.web.resource import Resource
>>
>> # Setup Arduino at correct speed
>>
>> try:
>>
>>     arduino = serial.Serial('/dev/ttyACM0', 9600)
>>
>> except:
>>
>>     arduino = serial.Serial('/dev/ttyACM1', 9600)
>>
>>
>>
>> class MoveServo(Resource):
>>
>>     isLeaf = True
>>
>>     permitted_origins = ('http://192.168.1.122:9000',)
>>
>>
>>
>>     def render_GET(self,request):
>>         origin = request.getHeader('Origin')
>>
>>         if origin in (self.permitted_origins):
>>
>>             request.setHeader('Access-Control-Allow-Origin', origin)
>>
>>         try:
>>
>>             # Send value over serial to the Arduino
>>
>>             arduino.write(request.args['value'][0])
>>
>>             return 'Success'
>>
>>         except:
>>
>>             return 'Failure'
>>
>>
>>
>> resource = MoveServo()
>>
>> On 27 August 2017 at 19:01, Deve Krehbiel <deve at speedprint.com> wrote:
>>
>>> This is what I get without your code:
>>> index1.html:1 XMLHttpRequest cannot load http://192.168.1.122:81/servos
>>> .rpy?value=70P. No 'Access-Control-Allow-Origin' header is present on
>>> the requested resource. Origin 'http://192.168.1.122:9000' is therefore
>>> not allowed access.
>>> jquery.min.js:4 XHR failed loading: GET "http://192.168.1.122:81/servo
>>> s.rpy?value=70P".
>>>
>>> This is what I get with it:
>>> jquery.min.js:4 GET http://192.168.1.122:81/servos.rpy?value=100P
>>> send @ jquery.min.js:4
>>> ajax @ jquery.min.js:4
>>> r.(anonymous function) @ jquery.min.js:4
>>> move @ index1.html:54
>>> onclick @ index1.html:17
>>> index1.html:1 XMLHttpRequest cannot load http://192.168.1.122:81/servos
>>> .rpy?value=100P. No 'Access-Control-Allow-Origin' header is present on
>>> the requested resource. Origin 'http://192.168.1.122:9000' is therefore
>>> not allowed access. *The response had HTTP status code 500.*
>>> jquery.min.js:4 XHR failed loading: GET "http://192.168.1.122:81/servo
>>> s.rpy?value=100P".
>>>
>>> I appreciate your efforts and if you have any other ideas... Thank You!
>>>
>>> Deve
>>>
>>> On Sun, Aug 27, 2017 at 12:48 PM, Deve Krehbiel <deve at speedprint.com>
>>> wrote:
>>>
>>>> Thank you for the response. In trying that code, it made it so the LAN
>>>> cannot move the buttons either. Here is the error list I got:
>>>>
>>>> *web.Server Traceback (most recent call last):*
>>>> exceptions.NameError: global name 'origin' is not defined
>>>> /usr/lib/python2.7/dist-packages/twisted/web/server.py:189 in process
>>>> 188                    self._encoder = encoder
>>>> 189            self.render(resrc)
>>>> 190        except:
>>>> /usr/lib/python2.7/dist-packages/twisted/web/server.py:238 in render
>>>> 237        try:
>>>> 238            body = resrc.render(self)
>>>> 239        except UnsupportedMethod as e:
>>>> /usr/lib/python2.7/dist-packages/twisted/web/resource.py:250 in render
>>>> 249            raise UnsupportedMethod(allowedMethods)
>>>> 250        return m(request)
>>>> 251
>>>> /usr/local/www/servos.rpy:15 in render_GET
>>>> 14    def render_GET(self,request):
>>>> 15        if origin in (self.permitted_origins):
>>>> 16            request.setHeader('Access-Control-Allow-Origin', origin)
>>>> exceptions.NameError: global name 'origin' is not defined
>>>>
>>>> Deve
>>>>
>>>> On Sun, Aug 27, 2017 at 12:03 PM, Donal McMullan <
>>>> donal.mcmullan at gmail.com> wrote:
>>>>
>>>>> Perhaps you just need to set the 'Access-Control-Allow-Origin' header?
>>>>> Something like this might work:
>>>>>
>>>>>
>>>>> # Import necessary files
>>>>>
>>>>> import serial
>>>>>
>>>>> from twisted.web.resource import Resource
>>>>>
>>>>> # Setup Arduino at correct speed
>>>>>
>>>>> try:
>>>>>
>>>>>     arduino = serial.Serial('/dev/ttyACM0', 9600)
>>>>>
>>>>> except:
>>>>>
>>>>>     arduino = serial.Serial('/dev/ttyACM1', 9600)
>>>>>
>>>>>
>>>>>
>>>>> class MoveServo(Resource):
>>>>>
>>>>>     isLeaf = True
>>>>>
>>>>>     permitted_origins = ('http://192.168.1.122:9000',)
>>>>>
>>>>>
>>>>>
>>>>>     def render_GET(self,request):
>>>>>
>>>>>         if origin in (self.permitted_origins):
>>>>>
>>>>>             request.setHeader('Access-Control-Allow-Origin', origin)
>>>>>
>>>>>         try:
>>>>>
>>>>>             # Send value over serial to the Arduino
>>>>>
>>>>>             arduino.write(request.args['value'][0])
>>>>>
>>>>>             return 'Success'
>>>>>
>>>>>         except:
>>>>>
>>>>>             return 'Failure'
>>>>>
>>>>>
>>>>>
>>>>> resource = MoveServo()
>>>>>
>>>>> On 27 August 2017 at 17:10, Deve Krehbiel <deve at speedprint.com> wrote:
>>>>>
>>>>>> First post so forgive me if I am not explaining this right.
>>>>>>
>>>>>> I am trying to make a baby cam and then heavily document it for
>>>>>> everyone to have access to. I am using a Raspberry Pi with Rasbian. I am
>>>>>> using mjpg-streamer for the streaming with no problems.
>>>>>>
>>>>>> The problem is I am also using two servos for pan and tilt. To
>>>>>> accomplish this I am using an Arduino Uno. This is so I can add IR lighting
>>>>>> for night vision, etc later. I am not a programmer so this is getting
>>>>>> frustrating after a few weeks of failure.
>>>>>>
>>>>>> How is it failing you might ask..well, its working perfectly with
>>>>>> only ONE exception:
>>>>>> Every time I push the button for left/right/up/down I get this:
>>>>>>
>>>>>> XMLHttpRequest cannot load http://192.168.1.122:81/servos
>>>>>> .rpy?value=100P. No 'Access-Control-Allow-Origin' header is present
>>>>>> on the requested resource. Origin 'http://192.168.1.122:9000' is
>>>>>> therefore not allowed access.
>>>>>>
>>>>>> On the local area network, it still works, but taking it to the
>>>>>> internet it does not.
>>>>>>
>>>>>> Here are the two programs that make this happen. One is servos.rpy
>>>>>> and the other is the supporting HTML/Get script;
>>>>>> ****
>>>>>> servos.rpy
>>>>>> -----------------------------------
>>>>>> # Import necessary files
>>>>>> import serial
>>>>>> from twisted.web.resource import Resource
>>>>>> # Setup Arduino at correct speed
>>>>>> try:
>>>>>>         arduino = serial.Serial('/dev/ttyACM0', 9600)
>>>>>> except:
>>>>>>         arduino = serial.Serial('/dev/ttyACM1', 9600)
>>>>>>
>>>>>> class MoveServo(Resource):
>>>>>>         isLeaf = True
>>>>>>         def render_GET(self,request):
>>>>>>                 try:
>>>>>>                 # Send value over serial to the Arduino
>>>>>>                         arduino.write(request.args['value'][0])
>>>>>>                         return 'Success'
>>>>>>                 except:
>>>>>>                         return 'Failure'
>>>>>>
>>>>>> resource = MoveServo()
>>>>>> ***
>>>>>>
>>>>>> Now for the HTML/Get script:
>>>>>>
>>>>>> **
>>>>>> <!doctype html>
>>>>>> <html>
>>>>>> <head>
>>>>>> <title>Make Use Of DIY Security Camera</title>
>>>>>> <style type="text/css">
>>>>>> #container {
>>>>>> /* center the content */
>>>>>> margin: 0 auto;
>>>>>> text-align: center;
>>>>>> }
>>>>>> </style>
>>>>>> </head>
>>>>>> <body>
>>>>>> <div id="container">
>>>>>> <img src="/?action=stream" /><br>
>>>>>> <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jque
>>>>>> ry.min.js"></script><br />
>>>>>> <button onclick="servos.move('P', 10)">Left</button>
>>>>>> <button onclick="servos.move('P', -10)">Right</button>
>>>>>> <button onclick="servos.move('T', -10)">Down</button>
>>>>>> <button onclick="servos.move('T', 10)">Up</button>
>>>>>> </div>
>>>>>> </body>
>>>>>> <script>
>>>>>> var servos;
>>>>>> $( document ).ready(function() {
>>>>>> servos = moveServos();
>>>>>> });
>>>>>> function moveServos() {
>>>>>> // Store some settings, adjust to suit
>>>>>> var panPos = 70,
>>>>>> tiltPos = 90,
>>>>>> tiltMax = 170,
>>>>>> tiltMin = 45,
>>>>>> panMax = 170,
>>>>>> panMin = 20;
>>>>>> return {
>>>>>> move:function(servo, adjustment) {
>>>>>> var value;
>>>>>> if(servo == 'P') {
>>>>>> if(!((panPos >= panMax && adjustment > 0) || (panPos <= panMin &&
>>>>>> adjustment < 0))) {
>>>>>> // Still within allowed range, "schedule" the movement
>>>>>> panPos += adjustment;
>>>>>> }
>>>>>> value = panPos + 'P';
>>>>>> }
>>>>>> else if(servo == 'T') {
>>>>>> if(!((tiltPos >= tiltMax && adjustment > 0) || (tiltPos <= tiltMin &&
>>>>>> adjustment < 0))) {
>>>>>> // Still within allowed range, "schedule" the movement
>>>>>> tiltPos += adjustment;
>>>>>> }
>>>>>> value = tiltPos + 'T';
>>>>>> }
>>>>>> // Use AJAX to actually move the servo
>>>>>> $.get('http://192.168.1.122:81/servos.rpy?value=' + value);
>>>>>> },
>>>>>> }
>>>>>> }
>>>>>> </script>
>>>>>> </html>
>>>>>>
>>>>>> *****
>>>>>> Twisted is started:  sudo twistd -n web -p 81 --path /usr/local/www/
>>>>>>
>>>>>> I would be forever grateful if someone could take a serious look at
>>>>>> this and tell me where I am going wrong. Once this is fixed, I can start
>>>>>> documenting the entire system for everyone. Thank you!
>>>>>>
>>>>>> Deve
>>>>>>
>>>>>> _______________________________________________
>>>>>> Twisted-web mailing list
>>>>>> Twisted-web at twistedmatrix.com
>>>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Twisted-web mailing list
>>>>> Twisted-web at twistedmatrix.com
>>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>>>>
>>>>>
>>>>
>>>
>>> _______________________________________________
>>> Twisted-web mailing list
>>> Twisted-web at twistedmatrix.com
>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>>
>>>
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-web/attachments/20170827/ec392057/attachment-0001.html>

