From therve at free.fr  Sat Feb 11 08:35:15 2012
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Sat, 11 Feb 2012 14:35:15 +0100
Subject: [Twisted-web] Twisted 12.0.0 released
Message-ID: <4F366E93.80804@free.fr>

On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 12.0.

47 tickets are closed by this release, among them:

  * A fix to the GTK2 reactor preventing unnecessary wake-ups

  * Preliminary support of IPV6 on the server side

  * Several fixes to the new protocol-based TLS implementation

  * Improved core documentation's main page

Twisted no longer supports Python 2.4, the latest supported version is 2.5.

For more information, see the NEWS file here:

  http://twistedmatrix.com/Releases/Twisted/12.0/NEWS.txt

Download it now from:

  http://pypi.python.org/packages/source/T/Twisted/Twisted-12.0.0.tar.bz2 or
 
http://pypi.python.org/packages/2.5/T/Twisted/Twisted-12.0.0.win32-py2.5.msi 
or
 
http://pypi.python.org/packages/2.6/T/Twisted/Twisted-12.0.0.win32-py2.6.msi 
or
 
http://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.0.0.win32-py2.7.msi

Thanks to the supporters of the Twisted Software Foundation and to the 
many contributors for this release.

-- 
Thomas



From joaoricardo000 at gmail.com  Thu Feb 16 07:26:07 2012
From: joaoricardo000 at gmail.com (=?ISO-8859-1?Q?Jo=E3o_Ricardo_Mattos_e_Silva?=)
Date: Thu, 16 Feb 2012 10:26:07 -0200
Subject: [Twisted-web] Assync method on render_POST(self,request)
Message-ID: <CAGitN6+TVvrUNF6RaUFnnq8HX_XeGuO1o5BRpA9UQg3oaF-ksA@mail.gmail.com>

My code looks like this:

... # class Site(Resource)
def render_POST(self,request)

   otherclass.doAssync(request.args)

   print '1'

   return "done" #that returns the HTTP response, always the same.

...
def doAssync(self,msg):

    d = defer.Deferred()

    reactor.callLater(0,self.doStuff,d,msg)

    d.addCallback(self.sucess)

def doStuff(self,d,msg):

    # do some stuff

    time.sleep(2)  #just for example

    d.callback('ok')

def sucess(msg):

    print msg

The output:

 1

ok

So far, so good, but, the HTTP response (return 'done'), only happens after
the delay (time.sleep(2)). I can tell this, because the browser keeps
'loading' for 2 seconds.

What am I doing wrong?

Found some answer saying that wsgi twisted does not suport assync, and
maybe Tornado could do this. ... is that true?

Thanks anyway!

Att,

-- 
*Jo?o Ricardo Mattos e Silva*

Graduando em Ci?ncia da Computa??o na Universidade Federal de Santa Catarina

*Cel: *+55 (48) 96190063  |  *Skype:* jricardomsilva  | * Msn: *
joaoricardo at globalite.com.br
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120216/6f852dc1/attachment-0001.htm 

From exarkun at twistedmatrix.com  Thu Feb 16 07:54:38 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 16 Feb 2012 12:54:38 -0000
Subject: [Twisted-web] Assync method on render_POST(self,request)
In-Reply-To: <CAGitN6+TVvrUNF6RaUFnnq8HX_XeGuO1o5BRpA9UQg3oaF-ksA@mail.gmail.com>
References: <CAGitN6+TVvrUNF6RaUFnnq8HX_XeGuO1o5BRpA9UQg3oaF-ksA@mail.gmail.com>
Message-ID: <20120216125438.3550.2092541251.divmod.xquotient.3@localhost6.localdomain6>

On 12:26 pm, joaoricardo000 at gmail.com wrote:
>[snip]
>
>def doStuff(self,d,msg):
>    # do some stuff
>    time.sleep(2)  #just for example
>    d.callback('ok')
>
>[snip]
>So far, so good, but, the HTTP response (return 'done'), only happens 
>after
>the delay (time.sleep(2)). I can tell this, because the browser keeps
>'loading' for 2 seconds.
>
>What am I doing wrong?

Answered on Stack Overflow:

http://stackoverflow.com/questions/9310350/twisted-non-blocking-method- 
how-to
>Found some answer saying that wsgi twisted does not suport assync, and
>maybe Tornado could do this. ... is that true?

By definition, WSGI applications are not asynchronous.  However, your 
code is not a WSGI application, so the nature of WSGI applications is 
irrelevant.

Tornado doesn't change these facts.  WSGI for Tornado is the same as 
WSGI for anything else.

Jean-Paul


From joaoricardo000 at gmail.com  Fri Feb 17 16:30:42 2012
From: joaoricardo000 at gmail.com (=?ISO-8859-1?Q?Jo=E3o_Ricardo_Mattos_e_Silva?=)
Date: Fri, 17 Feb 2012 19:30:42 -0200
Subject: [Twisted-web] Assync method on render_POST(self,request)
In-Reply-To: <20120216125438.3550.2092541251.divmod.xquotient.3@localhost6.localdomain6>
References: <CAGitN6+TVvrUNF6RaUFnnq8HX_XeGuO1o5BRpA9UQg3oaF-ksA@mail.gmail.com>
	<20120216125438.3550.2092541251.divmod.xquotient.3@localhost6.localdomain6>
Message-ID: <CAGitN6L=mnCZkfGrbfWJHKtmgW=vgrGkc0fLYFAVrjNo4xFA-g@mail.gmail.com>

Thanks for the answer, really helped, but I'm stuck again in other case.
http://stackoverflow.com/questions/9335509/using-wsgi-on-twisted
I'm using mod_wsgi now, and I'm really lost about how to use twisted
methods.

Thanks again!




2012/2/16 <exarkun at twistedmatrix.com>

> On 12:26 pm, joaoricardo000 at gmail.com wrote:
> >[snip]
> >
> >def doStuff(self,d,msg):
> >    # do some stuff
> >    time.sleep(2)  #just for example
> >    d.callback('ok')
> >
> >[snip]
> >So far, so good, but, the HTTP response (return 'done'), only happens
> >after
> >the delay (time.sleep(2)). I can tell this, because the browser keeps
> >'loading' for 2 seconds.
> >
> >What am I doing wrong?
>
> Answered on Stack Overflow:
>
> http://stackoverflow.com/questions/9310350/twisted-non-blocking-method-
> how-to
> >Found some answer saying that wsgi twisted does not suport assync, and
> >maybe Tornado could do this. ... is that true?
>
> By definition, WSGI applications are not asynchronous.  However, your
> code is not a WSGI application, so the nature of WSGI applications is
> irrelevant.
>
> Tornado doesn't change these facts.  WSGI for Tornado is the same as
> WSGI for anything else.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



-- 
*Jo?o Ricardo Mattos e Silva*

Graduando em Ci?ncia da Computa??o na Universidade Federal de Santa Catarina

*Cel: *+55 (48) 96190063  |  *Skype:* jricardomsilva  | * Msn: *
joaoricardo at globalite.com.br
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120217/80922167/attachment.htm 

From jacek99 at gmail.com  Wed Feb 22 11:02:58 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 22 Feb 2012 11:02:58 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
Message-ID: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>

I am trying to understand how Twisted Web security works, based on a few
links:

http://jcalderone.livejournal.com/53074.html
http://twistedmatrix.com/documents/current/web/howto/web-in-60/http-auth.html

They all explain how to set up a web app with let's say HTTP auth.

But there are no examples on how a Resource method (let;s say render_GET)
could get access to the current Avatar object?
And does the Avatar object need to implement some specific interface?

What I want to do in CorePost is to allow fine grained privilege-based
security *per method* (similar in style to Spring Security, for those who
know it), e.g.:

    @route("/user",Http.GET)
    @secured("BROWSE_USER")
    def getUser(self,request,**kwargs):
        return ...some user info...


    @route("/user",Http.POST)
    @secured("UPDATE_USER")
    def updateUser(self,request,userId,**kwargs):
        ...create new user, etc...

If the Avatar does not have the required privileges (e.g. "BROWSE_USER" or
"UPDATE_USER" in the example above), I want to throw a 403 Access Denied
automatically.

Thanks for any pointers

Jacek
https://github.com/jacek99/corepost
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120222/16860d59/attachment.htm 

From glyph at twistedmatrix.com  Wed Feb 22 11:59:02 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 22 Feb 2012 11:59:02 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
Message-ID: <F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>


On Feb 22, 2012, at 11:02 AM, Jacek Furmankiewicz wrote:

> But there are no examples on how a Resource method (let;s say render_GET) could get access to the current Avatar object?

The avatar is a resource, and therefore it can pass itself (or any relevant authentication or authorization information) to its children as they are created.

twisted.web doesn't implement role-based authorization or anything like it.  If it did, it would use a specific object that implemented that role-based auth, not the avatar (which is an implementation of a protocol interface).

> And does the Avatar object need to implement some specific interface?

Yes, the Avatar object must provide IResource.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120222/d7e4fdf6/attachment.htm 

From jacek99 at gmail.com  Wed Feb 22 12:46:40 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 22 Feb 2012 12:46:40 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
Message-ID: <CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>

I am a bit more confused after this than before :-)

How can Avatar be a resource? It represents the actual user, correct?
Isnt' there a concept of a Principal / User that has nothing to do with
actual URL responses / routing / etc.

Sorry if I am asking basic questions, but sometimes it is hard to figure
out from the high-level docs how all the pieces fit together...

Thank you in advance
Jacek

On Wed, Feb 22, 2012 at 11:59 AM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Feb 22, 2012, at 11:02 AM, Jacek Furmankiewicz wrote:
>
> But there are no examples on how a Resource method (let;s say render_GET)
> could get access to the current Avatar object?
>
>
> The avatar is a resource, and therefore it can pass itself (or any
> relevant authentication or authorization information) to its children as
> they are created.
>
> twisted.web doesn't implement role-based authorization or anything like
> it.  If it did, it would use a specific object that implemented that
> role-based auth, not the avatar (which is an implementation of a protocol
> interface).
>
> And does the Avatar object need to implement some specific interface?
>
>
> Yes, the Avatar object must provide IResource.
>
> -glyph
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120222/ce078b80/attachment.htm 

From jacek99 at gmail.com  Wed Feb 22 12:48:48 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 22 Feb 2012 12:48:48 -0500
Subject: [Twisted-web] CorePost 0.0.11 is out
Message-ID: <CAGDztiFvcWYmQ7ovUgKU04j_ZfrDmzh0VzHRGXSgZ+Ux6DRV1w@mail.gmail.com>

CorePost is a REST microframework built on top of the core twisted.web APIs
for a more Flask/Sinatra style experience.

Version 0.0.11 has a minor enhancement to add request/response filters.
http://pypi.python.org/pypi/CorePost
https://github.com/jacek99/corepost   (scroll down to "Filters" for samples
of the new functionality)

Cheers
Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120222/9090fe00/attachment.htm 

From glyph at twistedmatrix.com  Thu Feb 23 01:37:40 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 23 Feb 2012 01:37:40 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
Message-ID: <7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>

On Feb 22, 2012, at 12:46 PM, Jacek Furmankiewicz wrote:

> I am a bit more confused after this than before :-)
> 
> How can Avatar be a resource? It represents the actual user, correct?

An avatar is a resource because that's the way that cred works: the avatar is the entity that implements protocol-specific logic for a user.  For IMAP, the avatar is an IAccount; for POP it's an IMailbox, for IRC (and hopefully, one day, other chat protocols) it's an IUser.

> Isnt' there a concept of a Principal / User that has nothing to do with actual URL responses / routing / etc.

No.  Twisted does not have a concept of a user, because it doesn't need one in order to implement cross-protocol authentication.

Twisted may one day get some concept of a user so that we can integrate more cleanly with directory services, but that sort of integration is highly complex, since everybody has a slightly different schema for what they expect a "user" to be and you end up having to accommodate them all.  Plus, many people mistakenly want to have attributes of users deeply intermingled with the authentication or authorization process, when cred demonstrates that this is unnecessary and overcomplex :-).

I also want to make sure that if we do incorporate such a model, it's sufficiently well fleshed out that it meets a decent set of use-cases and can interoperate with existing relevant standards.  If you want to see what happens if you codify too simple a schema too early in your development, talk to anyone who has used Django about how much they love django.contrib.auth.

> Sorry if I am asking basic questions, but sometimes it is hard to figure out from the high-level docs how all the pieces fit together... 

It's no problem.  cred is one of the most nuanced parts of twisted, and it is unfortunately difficult to explain and to understand.  Feel free to keep hammering away with questions :).

-glyph



From jacek99 at gmail.com  Thu Feb 23 09:33:27 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 23 Feb 2012 09:33:27 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
Message-ID: <CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>

Well, in my Java day job we use Spring Security, which I have to say works
very well and is very flexible.
So I was trying to go with a similar approach and trying to figure out the
best way to integrate it with the current twisted.web approach for CorePost:

a) a common security filter that intercepts incoming requests. Can be
configured per URL pattern (e.g. "/services/rest","/services/operations"
requires security, but "/services/public" does not)

b) a separate config for the security filter that defines required
privileges (per sub root, e.g. "/services/rest" may require "ADMIN_USER",
but "/services/rest" may require "OPERATIONS_USER")

c) additional optional feature where every REST method can be annotated
with additional privileges (so a GET on a REST resource may need different
privileges vs a POST, PUT or DELETE, etc.)

d) every incoming request creates a Principal (which is a user overriden
type if necessary) that holds info about the current user making the REST
request (e.g. name, roles, privileges, etc.)

I tried looking through twisted.web docs to see if there is a concept of a
generic filter (that can be applied across multiple resources) but didn't
really find anything.
Hence I implemented it manually myself in CorePost 0.0.11.

I will dig further to see how the Spring Security approach (which I like
and it works very well on a huge complex SaaS platform we have) could maybe
be applied on top of the current twisted.web APIs as part of CorePost.

Any suggestions, comments or pointers would be welcome.

Cheers
Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120223/b6d06d10/attachment.htm 

From jacek99 at gmail.com  Thu Feb 23 11:28:56 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 23 Feb 2012 11:28:56 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
Message-ID: <CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>

I am trying to understand how it works in the context of twisted.web and
Resources, but I always get an exception on the portal object
Here is the core code:

    passwords = {"admin":"password"}
    users = {"admin":"Administrator"}

    realm = TestRealm(users)

    p = portal.Portal(TestRealm(users),(PasswordDictChecker(passwords),))
    credentialFactory = BasicCredentialFactory("CorePost")
    resource = HTTPAuthSessionWrapper(portal, [credentialFactory])

    print "Running..."

    factory = Site(resource)
    reactor.listenTCP(8084, factory)
    reactor.run()

Error:

Unhandled Error
Traceback (most recent call last):
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/protocols/basic.py",
line 564, in dataReceived
    why = self.lineReceived(line)
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/http.py",
line 1551, in lineReceived
    self.allContentReceived()
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/http.py",
line 1618, in allContentReceived
    req.requestReceived(command, path, version)
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/http.py",
line 773, in requestReceived
    self.process()
--- <exception caught here> ---
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/server.py",
line 131, in process
    resrc = self.site.getResourceFor(self)
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/server.py",
line 562, in getResourceFor
    return resource.getChildForRequest(self.resource, request)
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/resource.py",
line 65, in getChildForRequest
    resource = resource.getChildWithDefault(pathElement, request)
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/_auth/wrapper.py",
line 142, in getChildWithDefault
    return self._authorizedResource(request)
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/_auth/wrapper.py",
line 106, in _authorizedResource
    return util.DeferredResource(self._login(Anonymous()))
  File
"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux-x86_64.egg/twisted/web/_auth/wrapper.py",
line 152, in _login
    d = self._portal.login(credentials, None, IResource)
*exceptions.AttributeError: 'module' object has no attribute 'login'*
*
*
Attached the full file.

Not sure I understand what I am doing right here. The app starts up fine,
but throws the error on any request.
Also, how do I hook up actual Resources?
Do I do it do the HttpAuthSessionWrapper? It is an IResources, but
complains that it does not have a putChild() on it?
Should my TestRealm extend a Resource and I add my child Resource there?

Sorry for all the questions, but the docs don't really cover the A-Z
scenario of getting a running twisted.web app with Http auth... :-(

Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120223/d86735de/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: security_resource.py
Type: text/x-python
Size: 2317 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20120223/d86735de/attachment-0001.py 

From exarkun at twistedmatrix.com  Thu Feb 23 12:28:06 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Feb 2012 17:28:06 -0000
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
Message-ID: <20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>

On 04:28 pm, jacek99 at gmail.com wrote:
>I am trying to understand how it works in the context of twisted.web 
>and
>Resources, but I always get an exception on the portal object
>Here is the core code:
>
>    passwords = {"admin":"password"}
>    users = {"admin":"Administrator"}
>
>    realm = TestRealm(users)
>
>    p = 
>portal.Portal(TestRealm(users),(PasswordDictChecker(passwords),))

Your Portal instance is named `p`
>    credentialFactory = BasicCredentialFactory("CorePost")
>    resource = HTTPAuthSessionWrapper(portal, [credentialFactory])

But you pass in the `portal` module instead.

Jean-Paul
>    print "Running..."
>
>    factory = Site(resource)
>    reactor.listenTCP(8084, factory)
>    reactor.run()
>
>Error:
>
>Unhandled Error
>Traceback (most recent call last):
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/protocols/basic.py",
>line 564, in dataReceived
>    why = self.lineReceived(line)
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/http.py",
>line 1551, in lineReceived
>    self.allContentReceived()
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/http.py",
>line 1618, in allContentReceived
>    req.requestReceived(command, path, version)
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/http.py",
>line 773, in requestReceived
>    self.process()
>--- <exception caught here> ---
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/server.py",
>line 131, in process
>    resrc = self.site.getResourceFor(self)
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/server.py",
>line 562, in getResourceFor
>    return resource.getChildForRequest(self.resource, request)
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/resource.py",
>line 65, in getChildForRequest
>    resource = resource.getChildWithDefault(pathElement, request)
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/_auth/wrapper.py",
>line 142, in getChildWithDefault
>    return self._authorizedResource(request)
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/_auth/wrapper.py",
>line 106, in _authorizedResource
>    return util.DeferredResource(self._login(Anonymous()))
>  File
>"/usr/local/lib/python2.7/dist-packages/Twisted-12.0.0-py2.7-linux- 
>x86_64.egg/twisted/web/_auth/wrapper.py",
>line 152, in _login
>    d = self._portal.login(credentials, None, IResource)
>*exceptions.AttributeError: 'module' object has no attribute 'login'*
>*
>*
>Attached the full file.
>
>Not sure I understand what I am doing right here. The app starts up 
>fine,
>but throws the error on any request.
>Also, how do I hook up actual Resources?
>Do I do it do the HttpAuthSessionWrapper? It is an IResources, but
>complains that it does not have a putChild() on it?
>Should my TestRealm extend a Resource and I add my child Resource 
>there?
>
>Sorry for all the questions, but the docs don't really cover the A-Z
>scenario of getting a running twisted.web app with Http auth... :-(
>
>Jacek


From jacek99 at gmail.com  Thu Feb 23 12:37:14 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 23 Feb 2012 12:37:14 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
Message-ID: <CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>

D'oh!
That's what happens when you copy code from the web, sorry :-(

So just a follow up to my other question: how do I add my child resources?
Does my TestRealm need to extend Resource? Is that the recommended approach?

Thank you
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120223/10ad4177/attachment.htm 

From exarkun at twistedmatrix.com  Thu Feb 23 13:29:51 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Feb 2012 18:29:51 -0000
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
Message-ID: <20120223182951.28567.69057253.divmod.xquotient.34@localhost6.localdomain6>

On 05:37 pm, jacek99 at gmail.com wrote:
>D'oh!
>That's what happens when you copy code from the web, sorry :-(
>
>So just a follow up to my other question: how do I add my child 
>resources?
>Does my TestRealm need to extend Resource? Is that the recommended 
>approach?

Your TestRealm is responsible for giving out avatars, in this case 
IResource implementations.  If you want to add child resources, they 
need to be added to the IResource implementation that TestRealm is going 
to give out.  I don't remember if you gave the implementation of 
TestRealm anywhere in this thread already, but take this simple 
imaginary version:

    class User(Resource):
        def __init__(self):
            Resource.__init__(self)
            self.addChild("innocuous", InnocuousResource())


    class Administrator(User):
        def __init__(self):
            User.__init__(self)            self.addChild("sensitive", 
SensitiveResource())


    class TestRealmobject):
        ...
        def requestAvatar(self, avatarId, mind, *interfaces):
            ...
            if self.isAdministrator(avatarId):
                avatar = Administrator()
            else:
                avatar = User()

            return IResource, avatar, logout


Put another way, the resources given out by TestRealm are just 
resources.  Treat them as you would treat any other resources.

Jean-Paul


From glyph at twistedmatrix.com  Thu Feb 23 13:33:16 2012
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2012 13:33:16 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
Message-ID: <13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>


On Feb 23, 2012, at 12:37 PM, Jacek Furmankiewicz wrote:

> D'oh!
> That's what happens when you copy code from the web, sorry :-(
> 
> So just a follow up to my other question: how do I add my child resources?

However you like!  I'm not sure what you're asking here; TestRealm returns a resource object, to which you may add child resources in any manner you see fit.  Usually this is done simply by having methods on that object (getChild) which can synthesize appropriate child resources when asked for them, but I wouldn't call that a "best practice" or anything; it's just something that makes sense a lot of the time.

> Does my TestRealm need to extend Resource? Is that the recommended approach?

No.  TestRealm should *return* IResource providers (when asked for them - that's what the 'interfaces' argument is for).  It itself should just provide IRealm, and it definitely shouldn't inherit from anything else.

-glyph

From jerry at westrick.com  Thu Feb 23 14:09:18 2012
From: jerry at westrick.com (Jerry Westrick)
Date: Thu, 23 Feb 2012 14:09:18 -0500 (EST)
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
Message-ID: <1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>

Okay, No one asked me, so I have the right to show off my ignorance :-)


But it sounds to me like you should build something called "secureRealm",
which
which does security checks before requesting a resource from the IRealm?

Jerry




On February 23, 2012 at 1:33 PM Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 23, 2012, at 12:37 PM, Jacek Furmankiewicz wrote:
>
> > D'oh!
> > That's what happens when you copy code from the web, sorry :-(
> >
> > So just a follow up to my other question: how do I add my child
resources?
>
> However you like!  I'm not sure what you're asking here; TestRealm
returns a resource object, to which you may add child resources in any
manner you see fit.  Usually this is done simply by having methods on that
object (getChild) which can synthesize appropriate child resources when
asked for them, but I wouldn't call that a "best practice" or anything;
it's just something that makes sense a lot of the time.
>
> > Does my TestRealm need to extend Resource? Is that the recommended
approach?
>
> No.  TestRealm should *return* IResource providers (when asked for them -
that's what the 'interfaces' argument is for).  It itself should just
provide IRealm, and it definitely shouldn't inherit from anything else.
>
> -glyph
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120223/76407263/attachment.htm 

From jacek99 at gmail.com  Thu Feb 23 16:09:51 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 23 Feb 2012 16:09:51 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
	<1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
Message-ID: <CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>

Ah, I think I get it.

So Avatar = root resource that this user can access, correct?

That is quite flexible actually. It's like you can serve a totally
different application (i.e. resource) to the user depending on their
credentials/roles/etc.

I will wrap my head around it a bit more in the coming weeks and see how I
can add the functionality I want (able to add fine grained security per
REST method on a resource)
while working in spirit with the twisted.web.guard approach.

Thanks to everyone for your help

Jacek

On Thu, Feb 23, 2012 at 2:09 PM, Jerry Westrick <jerry at westrick.com> wrote:

> **
>
> Okay, No one asked me, so I have the right to show off my ignorance :-)
>
>
>
>    But it sounds to me like you should build something called
> "secureRealm", which
>
>  which does security checks before requesting a resource from the IRealm?
>
>
>    Jerry
>
>
>
> On February 23, 2012 at 1:33 PM Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
> >
> > On Feb 23, 2012, at 12:37 PM, Jacek Furmankiewicz wrote:
> >
> > > D'oh!
> > > That's what happens when you copy code from the web, sorry :-(
> > >
> > > So just a follow up to my other question: how do I add my child
> resources?
> >
> > However you like!  I'm not sure what you're asking here; TestRealm
> returns a resource object, to which you may add child resources in any
> manner you see fit.  Usually this is done simply by having methods on that
> object (getChild) which can synthesize appropriate child resources when
> asked for them, but I wouldn't call that a "best practice" or anything;
> it's just something that makes sense a lot of the time.
> >
> > > Does my TestRealm need to extend Resource? Is that the recommended
> approach?
> >
> > No.  TestRealm should *return* IResource providers (when asked for them
> - that's what the 'interfaces' argument is for).  It itself should just
> provide IRealm, and it definitely shouldn't inherit from anything else.
> >
> > -glyph
> > _______________________________________________
> > Twisted-web mailing list
> > Twisted-web at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120223/4f1117b2/attachment-0001.htm 

From duncan.mcgreggor at gmail.com  Thu Feb 23 16:44:39 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu, 23 Feb 2012 16:44:39 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
	<1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
	<CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
Message-ID: <CAFJQhU5cxY6LYqPuxGYm7rzZxtqa5iuVrCWsw607hegXoSvARA@mail.gmail.com>

Just to throw some two-cents in:

What JP described is essentially what I did when I consulted for
IncrediblePear back in 2008. I built an async REST API service with
Twisted (and cred powering a fairly elaborate permissions system). The
customer was PBS.org. It's what underlies their TV scheduling on their
main site and all the affiliate stations that make use of the main
site's scheduling API. (lots of memcached... they are a HUGE site in
reqs/s).

Twisted is a good choice :-) Best of luck!

d

On Thu, Feb 23, 2012 at 4:09 PM, Jacek Furmankiewicz <jacek99 at gmail.com> wrote:
> Ah, I think I get it.
>
> So Avatar = root resource that this user can access, correct?
>
> That is quite flexible actually. It's like you can serve a totally different
> application (i.e. resource) to the user depending on their
> credentials/roles/etc.
>
> I will wrap my head around it a bit more in the coming weeks and see how I
> can add the functionality I want (able to add fine grained security per REST
> method on a resource)
> while working in spirit with the twisted.web.guard approach.
>
> Thanks to everyone for your help
>
> Jacek
>
> On Thu, Feb 23, 2012 at 2:09 PM, Jerry Westrick <jerry at westrick.com> wrote:
>>
>> Okay, No one asked me, so I have the right to show off my ignorance :-)
>>
>>
>>
>> But it sounds to me like you should build something called "secureRealm",
>> which
>>
>> which does security checks before requesting a resource from the IRealm?
>>
>>
>> Jerry
>>
>>
>>
>>
>> On February 23, 2012 at 1:33 PM Glyph Lefkowitz <glyph at twistedmatrix.com>
>> wrote:
>>
>> >
>> > On Feb 23, 2012, at 12:37 PM, Jacek Furmankiewicz wrote:
>> >
>> > > D'oh!
>> > > That's what happens when you copy code from the web, sorry :-(
>> > >
>> > > So just a follow up to my other question: how do I add my child
>> > > resources?
>> >
>> > However you like!? I'm not sure what you're asking here; TestRealm
>> > returns a resource object, to which you may add child resources in any
>> > manner you see fit.? Usually this is done simply by having methods on that
>> > object (getChild) which can synthesize appropriate child resources when
>> > asked for them, but I wouldn't call that a "best practice" or anything; it's
>> > just something that makes sense a lot of the time.
>> >
>> > > Does my TestRealm need to extend Resource? Is that the recommended
>> > > approach?
>> >
>> > No.? TestRealm should *return* IResource providers (when asked for them
>> > - that's what the 'interfaces' argument is for).? It itself should just
>> > provide IRealm, and it definitely shouldn't inherit from anything else.
>> >
>> > -glyph
>> > _______________________________________________
>> > Twisted-web mailing list
>> > Twisted-web at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>


From glyph at twistedmatrix.com  Thu Feb 23 16:53:02 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 23 Feb 2012 16:53:02 -0500
Subject: [Twisted-web] Get access to Avatar from Resource object?
In-Reply-To: <CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
References: <CAGDztiE-Qye=KwKA-asgDkQbCEXP81GQWCL=Hz_PecWwjD7ZqQ@mail.gmail.com>
	<F8EA5CDB-EF0B-4786-82FF-2ADA285438F7@twistedmatrix.com>
	<CAGDztiHKLoZgFeq-=Ls9bNnS40HsH88gXh=9t=mqOMdc-6LHyQ@mail.gmail.com>
	<7B6F02FD-9A9E-439D-8320-4878FDD48FE4@twistedmatrix.com>
	<CAGDztiEAqvZhVjo7zQ=3vUdd0uZUqc3AG+cLjPuHWUmjU4X0gA@mail.gmail.com>
	<CAGDztiF+wRuyinkPRDP2tjvVbcn6bJNTcah0LaoYOgdOORG16Q@mail.gmail.com>
	<20120223172806.28567.1322791924.divmod.xquotient.23@localhost6.localdomain6>
	<CAGDztiF3Lv1Ppmzm673u=fGfDodDuCnWN0rH9FRiG927_dS-Ng@mail.gmail.com>
	<13ADCBC0-7DAE-4715-AF68-6F60A0104B62@twistedmatrix.com>
	<1000814270.195524.1330024158435.JavaMail.open-xchange@email.1and1.com>
	<CAGDztiGuWtYF0d6GZ5qDf6kYjAzD6536U4No1ET_k77pLhuh2w@mail.gmail.com>
Message-ID: <5E29968F-F820-4E8D-A0D6-6CA941A06A14@twistedmatrix.com>


On Feb 23, 2012, at 4:09 PM, Jacek Furmankiewicz wrote:

> Ah, I think I get it.

Hooray!

> So Avatar = root resource that this user can access, correct?

Yes, that is exactly correct!

(More generally: root protocol-specific thing that a user can access, since this applies to other authenticated protocols as well, and ideally, eventually, all protocols within Twisted.)

> That is quite flexible actually. It's like you can serve a totally different application (i.e. resource) to the user depending on their credentials/roles/etc.

Yup.  And you can write wrappers in whatever way you see fit.  The idea is that instead of inserting "self.makeSureItIsSecure()" checks in (or decorators on) every single method, users without the proper authentication can't even access the objects whose methods they want to call; there's no security error, just a 404.  This means that it's much harder to make the mistake where you grant too much authority to anonymous users.

> I will wrap my head around it a bit more in the coming weeks and see how I can add the functionality I want (able to add fine grained security per REST method on a resource)
> while working in spirit with the twisted.web.guard approach.

Great.  I'm really enthusiastic to see what you come up with.  Feel free to continue discussing ideas on this list as you're thinking through them - this is an area of Twisted that could stand to be talked about a lot more :).

> Thanks to everyone for your help

Always happy to help someone through to the point of actual understanding!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120223/256afd9b/attachment.htm 

From jacek99 at gmail.com  Wed Feb 29 12:05:58 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 29 Feb 2012 12:05:58 -0500
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
Message-ID: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>



From exarkun at twistedmatrix.com  Wed Feb 29 12:27:05 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Feb 2012 17:27:05 -0000
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
Message-ID: <20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>

On 05:05 pm, jacek99 at gmail.com wrote:
>> From what I understand, once a Resource isLeaf = True, it cannot have 
>>child
>Resources of its own (no requests seem to get routed to them).
>
>This is not really a realistic scenario in a typical REST application 
>where
>nested REST services are common, e.g.

Sorry, perhaps it would be obvious if I looked at the CorePost 
implementation or read its documentation, but I don't understand what 
problem you're having or what question you're asking.

If setting `isLeaf` to `True` isn't appropriate for CorePost's purposes, 
then don't set it to `True`?

Jean-Paul
>Customer REST service:
>
>*GET /services/customer*
>*POST /services/customer*
>*PUT /services/customer/<customerId>*
>*DELETE /services/customer/<customerId>*
>
>Customer Address REST service:
>
>*GET /services/customer/<customerId>/address*
>*POST /services/customer/<customerId>/address*
>*PUT /services/customer/<customerId>/address/<addressId>*
>*DELETE /services/customer/<customerId>/address/<addressId>*
>
>and so on and so forth....
>
>The only way I can support this in CorePost is to separate the concept 
>of a
>Twisted.Web Resource from a standalone REST service for a particular 
>entity.
>
>So let's say I would have a root CorePost Resource hooked up to 
>'services'
>and it would have a child collection of REST service classes and manage
>routing the requests
>to the appropriate one. Each of the REST services for an entity 
>underneath
>that core Resource would NOT be a twisted.web Resource but just a 
>regular
>class.
>
>Does this sound correct?
>Or am I missing some way of using twisted.web Resource objects that 
>would
>allow me to accomplish the same thing without moving away from Resource
>as the ancestor of all my REST service classes?
>
>Thanks
>Jacek


From jacek99 at gmail.com  Wed Feb 29 13:09:13 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 29 Feb 2012 13:09:13 -0500
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
Message-ID: <CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>

Sorry, let me be more clear:

I have a Resource let's say CustomerRestService which is a leaf and handles
everything related to '/customer'
Then I want a CustomerAddressRestService Resource, which is also a leaf and
should handle everything related to '/customer/<customerId>/address'.

So I need a leaf Resource (i.e. it actually intercepts GET/POST/PUT/DELETE
requests to the root '/customer' URL)
with a child leaf Resource (which intercepts the GET/POST/PUT/DELETE
requests to its root '/customer/<customerId>/address' URL).

Twisted does not really allow for nested leaf resources, but REST is all
about nested URL schemes, e.g.

Customer -> Customer Address
Customer -> Customer Phone
Customer -> Customer Invoice -> Customer Payment

etc.

Taking CorePost out of the picture and just going back to raw twisted.web,
how would you recommend that be done?

Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120229/be9527f5/attachment.htm 

From exarkun at twistedmatrix.com  Wed Feb 29 14:45:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Feb 2012 19:45:39 -0000
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
Message-ID: <20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>

On 06:09 pm, jacek99 at gmail.com wrote:
>Sorry, let me be more clear:
>
>I have a Resource let's say CustomerRestService which is a leaf and 
>handles
>everything related to '/customer'
>Then I want a CustomerAddressRestService Resource, which is also a leaf 
>and
>should handle everything related to '/customer/<customerId>/address'.

Well.... my first reaction is that this doesn't make sense.  Leaves 
don't have leaves.  That's what makes them leaves.

Your CustomerRestService is not a leaf resource.

Why do you think it should be one?
>So I need a leaf Resource (i.e. it actually intercepts 
>GET/POST/PUT/DELETE
>requests to the root '/customer' URL)
>with a child leaf Resource (which intercepts the GET/POST/PUT/DELETE
>requests to its root '/customer/<customerId>/address' URL).
>
>Twisted does not really allow for nested leaf resources, but REST is 
>all
>about nested URL schemes, e.g.

Right.  Because "nested leaf resource" is self contradictory.
>Customer -> Customer Address
>Customer -> Customer Phone
>Customer -> Customer Invoice -> Customer Payment
>
>etc.
>
>Taking CorePost out of the picture and just going back to raw 
>twisted.web,
>how would you recommend that be done?

Apart from what I said above, and still not really understanding why you 
want this, the implementation of the traversal mechanism is exposed as 
`twisted.web.resource.getChildForRequest`.  After you stop traversal 
with your first "leaf" resource, you can finish it by calling 
`getChildForRequest` manually, and then manually rendering the resulting 
resource.

Jean-Paul


From jacek99 at gmail.com  Wed Feb 29 14:53:41 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 29 Feb 2012 14:53:41 -0500
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
Message-ID: <CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>

See comments below

On Wed, Feb 29, 2012 at 2:45 PM, <exarkun at twistedmatrix.com> wrote:

> On 06:09 pm, jacek99 at gmail.com wrote:
>
> Well.... my first reaction is that this doesn't make sense.  Leaves
> don't have leaves.  That's what makes them leaves.
>
> Your CustomerRestService is not a leaf resource.
>
>
it handles GET/POST/PUT/DELETE requests for the Customer entity. If I am
coding in raw twisted.web, that means
I would need to handle the render_GET, render_POST, etc. in this class.

Isn't that what classifies it as a leaf resource (i.e. one that actually
handles HTTP requests instead of just passing them down to a child)?


> >about nested URL schemes, e.g.
>
> Right.  Because "nested leaf resource" is self contradictory.
>

Well, not in REST...nested resources under another other is the norm in
defining URL schemes in REST apps.
Or does the concept of a REST service for an entity simply not map at all
to what Twisted Web defines as a Resource?

Apart from what I said above, and still not really understanding why you
> want this, the implementation of the traversal mechanism is exposed as
> `twisted.web.resource.getChildForRequest`.  After you stop traversal
> with your first "leaf" resource, you can finish it by calling
> `getChildForRequest` manually, and then manually rendering the resulting
> resource.
>
>
Let me look at that. But it seems counter-intuitive for a typical REST app
structure....

Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120229/30d40f72/attachment.htm 

From exarkun at twistedmatrix.com  Wed Feb 29 15:32:03 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Feb 2012 20:32:03 -0000
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
	<CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
Message-ID: <20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>

On 07:53 pm, jacek99 at gmail.com wrote:
>See comments below
>
>On Wed, Feb 29, 2012 at 2:45 PM, <exarkun at twistedmatrix.com> wrote:
>>On 06:09 pm, jacek99 at gmail.com wrote:
>>
>>Well.... my first reaction is that this doesn't make sense.  Leaves
>>don't have leaves.  That's what makes them leaves.
>>
>>Your CustomerRestService is not a leaf resource.
>it handles GET/POST/PUT/DELETE requests for the Customer entity. If I 
>am
>coding in raw twisted.web, that means
>I would need to handle the render_GET, render_POST, etc. in this class.
>
>Isn't that what classifies it as a leaf resource (i.e. one that 
>actually
>handles HTTP requests instead of just passing them down to a child)?

If CustomerRestService is the resource for requests like:

    GET /services
    POST /services
    PUT /services
    DELETE /services

That does not make it a leaf resource.  That just makes it a resource.

If CustomerRestService is the resource for requests like:

    GET/POST/PUT/DELETE /services
    GET/POST/PUT/DELETE /services/something/else

That makes it a leaf resource.

>
>> >about nested URL schemes, e.g.
>>
>>Right.  Because "nested leaf resource" is self contradictory.
>
>Well, not in REST...nested resources under another other is the norm in
>defining URL schemes in REST apps.

I don't think REST has anything to say about "leaf resources", because 
they're an API convenience invented by Twisted Web.

Jean-Paul
>
>Or does the concept of a REST service for an entity simply not map at 
>all
>to what Twisted Web defines as a Resource?
>
>Apart from what I said above, and still not really understanding why 
>you
>>want this, the implementation of the traversal mechanism is exposed as
>>`twisted.web.resource.getChildForRequest`.  After you stop traversal
>>with your first "leaf" resource, you can finish it by calling
>>`getChildForRequest` manually, and then manually rendering the 
>>resulting
>>resource.
>Let me look at that. But it seems counter-intuitive for a typical REST 
>app
>structure....
>
>Jacek


From jacek99 at gmail.com  Wed Feb 29 16:00:57 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 29 Feb 2012 16:00:57 -0500
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
	<CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
	<20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>
Message-ID: <CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>

OK, so the issue I have is that I cannot create two separate REST Resources
with nested URLs  e.g.

class CustomerRestService(Resource):
     """Handles REST operations for Customer /customer"""
     pass

class CustomerAddressRestService(Resource):
     """Handles REST operations for Customer Address
/customer/<customerId>/address"""
     pass

Instead I would need to have one common Resource that handles everything
under '/customer',
including the customer entity and customer address entity in one (and any
other entity whose root is '/customer').

That isn't a very good design...especially if you maybe have 50 different
entities hooked up  under '/customer' (like in our app).
It seems in order to enable having nice cohesive classes that provide a
REST service for just one entity I would need to manually
route the request from the root Resource into each of them myself.

That is what i was trying to avoid, but it looks like there is no other
choice.

Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120229/7e95c776/attachment-0001.htm 

From exarkun at twistedmatrix.com  Wed Feb 29 16:12:43 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Feb 2012 21:12:43 -0000
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
	<CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
	<20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>
	<CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>
Message-ID: <20120229211243.4576.125225416.divmod.xquotient.82@localhost6.localdomain6>

On 09:00 pm, jacek99 at gmail.com wrote:
>OK, so the issue I have is that I cannot create two separate REST 
>Resources
>with nested URLs  e.g.
>
>class CustomerRestService(Resource):
>     """Handles REST operations for Customer /customer"""
>
>class CustomerAddressRestService(Resource):
>     """Handles REST operations for Customer Address
>/customer/<customerId>/address"""
>     pass
>
>Instead I would need to have one common Resource that handles 
>everything
>under '/customer',
>including the customer entity and customer address entity in one (and 
>any
>other entity whose root is '/customer').

I don't understand what this means.  It sounds like you're saying you 
have to have CustomerRestService be a leaf resource.  You don't have to. 
If you don't want it to be a leaf resource, don't make it a leaf 
resource.  The way you not making it a leaf resource is by not setting 
`isLeaf = True` on it.
>That isn't a very good design...especially if you maybe have 50 
>different
>entities hooked up  under '/customer' (like in our app).
>It seems in order to enable having nice cohesive classes that provide a
>REST service for just one entity I would need to manually
>route the request from the root Resource into each of them myself.
>
>That is what i was trying to avoid, but it looks like there is no other
>choice.

I still don't understand the problem you're having.  As I said, 
regarding the "solution" I gave in my previous email, it's just how you 
would achieve the behavior I thought maybe you were trying to describe 
wanting, but I don't really understand what you're trying to accomplish 
or why.

Jean-Paul


From jacek99 at gmail.com  Wed Feb 29 21:27:01 2012
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 29 Feb 2012 21:27:01 -0500
Subject: [Twisted-web] Leaf Resources with child Leaf Resources
In-Reply-To: <20120229211243.4576.125225416.divmod.xquotient.82@localhost6.localdomain6>
References: <CAGDztiH6zyLvzgb89vFQT-a6HuxE_T73H_kYNV-z1MoyQjgY9g@mail.gmail.com>
	<20120229172705.4576.193292052.divmod.xquotient.50@localhost6.localdomain6>
	<CAGDztiGs3WXTK1LFjk4rBaL6iiFdH9CFSa0gYvdXUktZ_pvkog@mail.gmail.com>
	<20120229194539.4576.884574076.divmod.xquotient.68@localhost6.localdomain6>
	<CAGDztiFkVQ61JRS+2=9w4TDt63+f+Xbv+ecyCBG2=zk1g=9ARQ@mail.gmail.com>
	<20120229203203.4576.1292601871.divmod.xquotient.73@localhost6.localdomain6>
	<CAGDztiFxWpsrjiqQrLttBfVR_87hApeRa_N95RJHt4VrOznBBQ@mail.gmail.com>
	<20120229211243.4576.125225416.divmod.xquotient.82@localhost6.localdomain6>
Message-ID: <CAGDztiGziyqJmBe6yiPyW86tshX1ZDnPbNT6BHzpPtXWHyxFFA@mail.gmail.com>

OK, then I am missing something utterly about how Leaf vs non-Leaf
resources work.

Would you code the response to a render_GET in a Leaf resource only?

Or can you do it a non-Leaf resource as well?

If yes, how do you handle responding in certain scenarios (depending on URL
path) in a non-Leaf Resource
vs sending down the request to one of its child Leaf resources?

Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120229/1d40d609/attachment.htm 

