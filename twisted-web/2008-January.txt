From mithrandi at mithrandi.za.net  Mon Jan  7 17:40:35 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Mon Jan  7 17:40:43 2008
Subject: [Twisted-web] Divmod Nevow 0.9.29
Message-ID: <20080107224035.GA11422@mithrandi.za.net>

SGkgYWxsLAoKSSdtIHBsZWFzZWQgdG8gYW5ub3VuY2UgdGhlIHJlbGVhc2Ugb2YgTmV2b3cgMC45
LjI5LCBhdmFpbGFibGUgaGVyZToKCmh0dHA6Ly9kaXZtb2Qub3JnL3RyYWMvYXR0YWNobWVudC93
aWtpL1NvZnR3YXJlUmVsZWFzZXMvTmV2b3ctMC45LjI5LnRhci5nej9mb3JtYXQ9cmF3CgpDaGFu
Z2VzIHNpbmNlIDAuOS4yNiAodGhlIGxhc3QgYW5ub3VuY2VkIHJlbGVhc2UpIGFyZSBsaXN0ZWQg
YmVsb3cuCgoKMC45LjI5ICgyMDA4LTAxLTAyKToKICAtIFByZXZlbnQgTmV2b3dTaXRlLmhhbmRs
ZVNlZ21lbnQgZnJvbSByYWlzaW5nIEluZGV4RXJyb3IgaW4gY2VydGFpbgogICAgc2l0dWF0aW9u
cy4KICAtIERlcHJlY2F0ZWQgd3NnaSBhbmQgem9tbmUgbW9kdWxlcy4KCjAuOS4yOCAoMjAwNy0x
Mi0xMCk6CiAgLSBBZGRlZCB0d28gQVBJcyB0byBBdGhlbmEsIG9uZSBmb3IgY3JlYXRpbmcgdGhl
IHN0cmluZyB1c2VkIGFzIHRoZSBpZAogICAgYXR0cmlidXRlIG9mIHRoZSB0b3Agbm9kZSBvZiBh
IHdpZGdldCBhbmQgb25lIGZvciBjcmVhdGluZyB0aGUgc3RyaW5nCiAgICB1c2VkIGFzIHRoZSBp
ZCBhdHRyaWJ1dGUgb2YgYSBub2RlIHdoaWNoIGhhZCBhbiBpZCBhdHRyaWJ1dGUgaW4gdGhlCiAg
ICB3aWRnZXQncyB0ZW1wbGF0ZSBkb2N1bWVudC4KCjAuOS4yNyAoMjAwNy0xMS0yNyk6CiAgLSBV
bmljb2RlIFVSTHMgbm93IHN1cHBvcnRlZC4KCi0tLS0tLS0tLS0tLS0tIG5leHQgcGFydCAtLS0t
LS0tLS0tLS0tLQpBIG5vbi10ZXh0IGF0dGFjaG1lbnQgd2FzIHNjcnViYmVkLi4uCk5hbWU6IG5v
dCBhdmFpbGFibGUKVHlwZTogYXBwbGljYXRpb24vcGdwLXNpZ25hdHVyZQpTaXplOiAxOTcgYnl0
ZXMKRGVzYzogRGlnaXRhbCBzaWduYXR1cmUKVXJsIDogaHR0cDovL3R3aXN0ZWRtYXRyaXguY29t
L3BpcGVybWFpbC90d2lzdGVkLXdlYi9hdHRhY2htZW50cy8yMDA4MDEwOC81YjkzNjZlYy9hdHRh
Y2htZW50LnBncAo=
From ashish.jha at gmail.com  Tue Jan  8 02:45:45 2008
From: ashish.jha at gmail.com (Ashish Jha)
Date: Tue Jan  8 02:45:50 2008
Subject: [Twisted-web] Socket timeout in web2 (lost socket)
Message-ID: <8a9a67ee0801072345l46d07696te4f30edb20317e4a@mail.gmail.com>

I have a HTTP connection where the client has died, and twisted.web2
is getting stuck waiting for data. Can anyone tell me how to
timeout this case?

Details:

- client connects to server to perform a POST (XMLRPC in this case)
- twisted accepts connection, hands off to twisted.web2
- twisted.web2 wsgi handler runs wsgi app in a thread
- wsgi app tries to read the full body, based on Content-Length
- client dies before sending all the data
    (crashes or disconnects without TCP connection being closed)
- wsgi app thread is stuck forever in read()

Traceback:
  .......
  File "D:\LabManager-Jan-07-2\src\wsgi\XMLRPCServer.py", line 98, in
__call__
    data =3D environ['wsgi.input'].read(length)
  File "D:\LabManager-Jan-07-2\src\twisted\web2\wsgi.py", line 66, in read
    return callInReactor(self.stream.readExactly, size)
  File "D:\LabManager-Jan-07-2\src\twisted\web2\wsgi.py", line 48, in
callInReactor
    result =3D queue.get()
  File "D:\LabManager-Jan-07-2\python24\lib\Queue.py", line 119, in get
    self.not_empty.wait()
  File "D:\LabManager-Jan-07-2\Python24\lib\threading.py", line 203, in wait
    waiter.acquire()

The function self.stream.readExactly is BufferedStream.readExactly
(wsgi.py, line 987).

However, it's not clear how to fix this up, since there seems to be
another class in the middle i.e. _NotifyingProducerStream (and
it's base class ProducerStream)

Does anyone have any example code for this, or can you give me a rough
guide on how to implement this?

(I am using Python 2.4.3, Twisted 2.4.0, and Twisted.Web2 0.2.0)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080108/b0=
799561/attachment.htm
From bernat at luffy.cx  Tue Jan  8 04:49:34 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Tue Jan  8 04:49:42 2008
Subject: [Twisted-web] HTTP basic auth
Message-ID: <eb94dabd8ad0fb111f38fe5555a38d22@imap.luffy.cx>


Hi !

I would like to implement some authentication mechanism on top of an
existing nevow site using HTTP basic auth for a web services. I have looked
at guard.py from nevow but is seems to be far more complex and I don't
quite understand if it uses HTTP basic auth. I am not interested in setting
up sessions or other stateful mechanisms. Since authorization may be
required for POST or something like that, I would like to stick to simple
HTTP auth basic since simple clients may not handle correctly redirection
on POST.

twisted.web2 authentication seems to be a good start, but I am using Nevow.
Has someone already done a HTTP basic auth with nevow? In fact, my case is
very similar to the one here:
 http://twistedmatrix.com/pipermail/twisted-web/2007-January/003270.html

But, as I said, Nevow's guard.py seems best suited for web app
authentication, not for web services. Can anyone confirm/infirm? Should I
look into twisted.web2 and hack authentication from it to Nevow?

Thanks.


From karnaugh at karnaugh.za.net  Tue Jan  8 05:09:43 2008
From: karnaugh at karnaugh.za.net (Colin Alston)
Date: Tue Jan  8 05:10:02 2008
Subject: [Twisted-web] HTTP basic auth
In-Reply-To: <eb94dabd8ad0fb111f38fe5555a38d22@imap.luffy.cx>
References: <eb94dabd8ad0fb111f38fe5555a38d22@imap.luffy.cx>
Message-ID: <47834BE7.4020504@karnaugh.za.net>

On 08/01/2008 11:49 Vincent Bernat wrote:
> twisted.web2 authentication seems to be a good start, but I am using Nevow.
> Has someone already done a HTTP basic auth with nevow? In fact, my case is
> very similar to the one here:
>  http://twistedmatrix.com/pipermail/twisted-web/2007-January/003270.html
> 
> But, as I said, Nevow's guard.py seems best suited for web app
> authentication, not for web services. Can anyone confirm/infirm?

Guard is for web based applications authentication, yes. If you're 
doing something other than this, you probably do want HTTP auth.

Doing HTTP authentication yourself for a web service should be as 
simple as returning a 403 error until you get a positive 
authentication. There may be some implementations around for doing 
this as a resource using t.cred.

Digging through some of my older work with t.w turned up the following 
(obviously extinct and horrific code, but shows what you're looking for)

class Page(object):
     def authenticateUser(self, request, passinfo):
         user, password = request.getUser(), 
md5.md5(request.getPassword()).digest()
         if user==passinfo['username'] and password==passinfo['password']:
             return True
         return False

     def render(self,request, realm, passinfo):
         if self.authenticateUser(request, passinfo):
             return self.documentRender(self, request)
         else:
             request.setResponseCode(http.UNAUTHORIZED)
             request.setHeader('WWW-authenticate', 'basic realm="%s"' 
% realm)
         return BaseResources.ErrorAuth().render()


-- 
Colin Alston ~ http://www.karnaugh.za.net/
"To the world you may be one person, to one person you may be the 
world" ~ Rachel Ann Nunes.

From drewp at bigasterisk.com  Wed Jan  9 00:19:19 2008
From: drewp at bigasterisk.com (Drew Perttula)
Date: Wed Jan  9 00:19:55 2008
Subject: [Twisted-web] HTTP basic auth
In-Reply-To: <47834BE7.4020504@karnaugh.za.net>
References: <eb94dabd8ad0fb111f38fe5555a38d22@imap.luffy.cx>
	<47834BE7.4020504@karnaugh.za.net>
Message-ID: <47845957.6090409@bigasterisk.com>

Colin Alston wrote:
> class Page(object):
>     def authenticateUser(self, request, passinfo):
>         user, password = request.getUser(), 
> md5.md5(request.getPassword()).digest()

FWIW, the nevow version is about the same:

class MyPage(athena.LivePage or rend.Page):
     def renderHTTP(self, ctx):
         request = inevow.IRequest(ctx)

         username, password = request.getUser(), request.getPassword()
         if self.useAuth and (username, password) == (x, y):
             secure.info("rendering page because http auth is set")
             return rend.Page.renderHTTP(self, ctx)
         else:
             request.setHeader('WWW-Authenticate', 'Basic 
realm="topsecret"')
             request.setResponseCode(http.UNAUTHORIZED)
             return "Authentication required."


From manlio_perillo at libero.it  Tue Jan 15 09:24:25 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue Jan 15 09:25:06 2008
Subject: [Twisted-web] return the full (absolute) request URI
Message-ID: <478CC219.5020202@libero.it>

Hi.

I need to do a redirect to the same URI the client requested, however it 
seems that Twisted Web has no support for this.

request.prePathURL() is an absolute URI, but is not good and request.uri 
is not an absolute URI
(an absolute URI is required in the Location header 
http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)


Do I need to write a fullPathURL function by myself?



Thanks   Manlio Perillo

From radix at twistedmatrix.com  Tue Jan 15 09:31:27 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue Jan 15 09:31:33 2008
Subject: [Twisted-web] return the full (absolute) request URI
In-Reply-To: <478CC219.5020202@libero.it>
References: <478CC219.5020202@libero.it>
Message-ID: <60ed19d40801150631o5ba7dd5fn4963cf3fcb80fe83@mail.gmail.com>

On Jan 15, 2008 9:24 AM, Manlio Perillo <manlio_perillo@libero.it> wrote:
> Hi.
>
> I need to do a redirect to the same URI the client requested, however it
> seems that Twisted Web has no support for this.
>
> request.prePathURL() is an absolute URI, but is not good and request.uri
> is not an absolute URI
> (an absolute URI is required in the Location header
> http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)

Just to clarify:

The URI that the client requested is only the path; they do not give a
full absolute URI on the "GET" (or "POST", or whatever method) line.
Therefore the "same URI the client requested" is really request.uri.

> Do I need to write a fullPathURL function by myself?

If you need an absolute URI, you'll have to construct it, perhaps
using the "Host" header sent by the client, or perhaps using a
pre-configured hostname setting in your application.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From manlio_perillo at libero.it  Tue Jan 15 09:44:02 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue Jan 15 09:45:01 2008
Subject: [Twisted-web] return the full (absolute) request URI
In-Reply-To: <60ed19d40801150631o5ba7dd5fn4963cf3fcb80fe83@mail.gmail.com>
References: <478CC219.5020202@libero.it>
	<60ed19d40801150631o5ba7dd5fn4963cf3fcb80fe83@mail.gmail.com>
Message-ID: <478CC6B2.3080806@libero.it>

Christopher Armstrong ha scritto:
> On Jan 15, 2008 9:24 AM, Manlio Perillo <manlio_perillo@libero.it> wrote:
>> Hi.
>>
>> I need to do a redirect to the same URI the client requested, however it
>> seems that Twisted Web has no support for this.
>>
>> request.prePathURL() is an absolute URI, but is not good and request.uri
>> is not an absolute URI
>> (an absolute URI is required in the Location header
>> http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)
> 
> Just to clarify:
> 
> The URI that the client requested is only the path; they do not give a
> full absolute URI on the "GET" (or "POST", or whatever method) line.

Well, according to the HTTP protocol specification, a client *can* send 
an absolute URI:
Request-URI    = "*" | absoluteURI | abs_path | authority


> Therefore the "same URI the client requested" is really request.uri.
> 
>> Do I need to write a fullPathURL function by myself?
> 
> If you need an absolute URI, you'll have to construct it, perhaps
> using the "Host" header sent by the client, or perhaps using a
> pre-configured hostname setting in your application.
> 

Ok, thanks.




Manlio Perillo

From dreid at dreid.org  Tue Jan 15 15:33:47 2008
From: dreid at dreid.org (David Reid)
Date: Tue Jan 15 15:33:54 2008
Subject: [Twisted-web] return the full (absolute) request URI
In-Reply-To: <478CC6B2.3080806@libero.it>
References: <478CC219.5020202@libero.it>
	<60ed19d40801150631o5ba7dd5fn4963cf3fcb80fe83@mail.gmail.com>
	<478CC6B2.3080806@libero.it>
Message-ID: <03CC1441-287A-4C94-AA79-31725C39F8CB@dreid.org>


On Jan 15, 2008, at 6:44 AM, Manlio Perillo wrote:

> Christopher Armstrong ha scritto:
>> On Jan 15, 2008 9:24 AM, Manlio Perillo <manlio_perillo@libero.it>  
>> wrote:
>>> Hi.
>>>
>>> I need to do a redirect to the same URI the client requested,  
>>> however it
>>> seems that Twisted Web has no support for this.
>>>
>>> request.prePathURL() is an absolute URI, but is not good and  
>>> request.uri
>>> is not an absolute URI
>>> (an absolute URI is required in the Location header
>>> http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)
>> Just to clarify:
>> The URI that the client requested is only the path; they do not  
>> give a
>> full absolute URI on the "GET" (or "POST", or whatever method) line.
>
> Well, according to the HTTP protocol specification, a client *can*  
> send an absolute URI:
> Request-URI    = "*" | absoluteURI | abs_path | authority

This is only for proxies.

-David


From exarkun at divmod.com  Tue Jan 15 16:15:49 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue Jan 15 16:15:53 2008
Subject: [Twisted-web] return the full (absolute) request URI
In-Reply-To: <03CC1441-287A-4C94-AA79-31725C39F8CB@dreid.org>
Message-ID: <20080115211549.31425.1890648127.divmod.quotient.5128@ohm>

On Tue, 15 Jan 2008 12:33:47 -0800, David Reid <dreid@dreid.org> wrote:
>
>On Jan 15, 2008, at 6:44 AM, Manlio Perillo wrote:
>>Christopher Armstrong ha scritto:
>>>On Jan 15, 2008 9:24 AM, Manlio Perillo <manlio_perillo@libero.it>  wrote:
>>>>Hi.
>>>>
>>>>I need to do a redirect to the same URI the client requested,  however it
>>>>seems that Twisted Web has no support for this.
>>>>
>>>>request.prePathURL() is an absolute URI, but is not good and  request.uri
>>>>is not an absolute URI
>>>>(an absolute URI is required in the Location header
>>>>http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)
>>>Just to clarify:
>>>The URI that the client requested is only the path; they do not  give a
>>>full absolute URI on the "GET" (or "POST", or whatever method) line.
>>
>>Well, according to the HTTP protocol specification, a client *can*  send an 
>>absolute URI:
>>Request-URI    = "*" | absoluteURI | abs_path | authority
>
>This is only for proxies.

I think the RFC states that servers, even non-proxy servers, SHOULD accept
absoluteURIs for Request-URI, even though no client will send them in the
non-proxy case.  In anticipation of HTTP/1.2 or something.  Dunno if this
has any practical consequences, probably not.

Jean-Paul

From Tjerk.Kusters at imtech.nl  Wed Jan 16 06:50:01 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters@imtech.nl)
Date: Wed Jan 16 06:50:51 2008
Subject: [Twisted-web] connection pool
Message-ID: <OF2D3000D2.019BFE99-ONC12573D2.00410152-C12573D2.0041015A@imtechrelay.nl>


Hello,

I have build a webserver with Twisted 2.4 with imports of the following:

  from twisted.web import resource, static, server, twcgi
  from twisted.internet import reactor

I'm adding several mods as child to the root with:

  root = static.File(settings.getSetting("html_directory"))
  root.putChild(mods.getPath(), mods

The mods are classes like

  class module(resource.Resource):
    def render_GET(self, request):
       # do something

The reactor is started as:
  reactor.listenTCP(_port, server.Site(root))
  reactor.run( )

Some of the GET request in the mods can take some time to complete. In the
current situation other request to the server have to wait on this request.

Is it possible to make soms kind of a thread/connection pool so that more
then one request can be handled at the same time?

Regards,
Tjerk


From phil at bubblehouse.org  Wed Jan 16 12:10:01 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed Jan 16 12:10:11 2008
Subject: [Twisted-web] ssl problems
Message-ID: <F4FB9AAE-008B-4FE7-9A61-E6975BF2CCCF@bubblehouse.org>

Hello all,

I'm trying to configure an SSL-enabled twisted.web service, and I'm  
having a problem getting it to work with my certificate chain file.

I'm trying to replace a similar configuration on an Apache server, so  
I know my certificates/keys are valid and current, and they work fine  
under mod_ssl.

The issue seems to be with the chain file. If I just include the  
primary cert and key, the connection works properly, but of course  
displays an 'unknown root certificate' warning.

This is the ContextFactory I'm using:

     class ContextFactory:
         isClient = 0

         def getContext(self):
             ctx = SSL.Context(SSL.SSLv23_METHOD)
             ctx.use_certificate_file('/usr/local/dram/certs/shib.crt')
             ctx.use_privatekey_file('/usr/local/dram/certs/www.key')
             ctx.use_certificate_chain_file('/usr/local/dram/certs/ 
intermediate.crt')
             return ctx

I've attached a minimal test case, but there's really nothing of  
consequence besides the class above.

Using s_client, I got the following debug output:

     optimus:dram2 phil$ openssl s_client -connect shib.dramonline.org: 
443 -debug -state -nbio 2>&1
     CONNECTED(00000003)
     turning on non blocking io
     SSL_connect:before/connect initialization
     write to 0020BE30 [00127000] (118 bytes => 118 (0x76))
     0000 - 80 74 01 03 01 00 4b 00-00 00 20 00 00 39 00  
00   .t....K... ..9..
     0010 - 38 00 00 35 00 00 16 00-00 13 00 00 0a 07 00 c0    
8..5............
     0020 - 00 00 33 00 00 32 00 00-2f 03 00 80 00 00 05 00   .. 
3..2../.......
     0030 - 00 04 01 00 80 00 00 15-00 00 12 00 00 09 06  
00   ................
     0040 - 40 00 00 14 00 00 11 00-00 08 00 00 06 04 00 80    
@...............
     0050 - 00 00 03 02 00 80 ec 36-f1 ee 1c 4e 29 1e 5d 3c   ....... 
6...N).]<
     0060 - 82 c8 19 76 7d b8 85 94-a0 59 62 67 da 5a 69  
7f   ...v}....Ybg.Zi.
     0070 - 2b 62 68 b3 c7 5e                                 +bh..^
     SSL_connect:SSLv2/v3 write client hello A
     read from 0020BE30 [0012D000] (7 bytes => -1 (0xFFFFFFFF))
     SSL_connect:error in SSLv2/v3 read server hello A
     write R BLOCK
     read from 0020BE30 [0012D000] (7 bytes => 7 (0x7))
     0000 - 15 03 01 00 02 02 28                              ......(
     SSL3 alert read:fatal:handshake failure
     SSL_connect:error in SSLv2/v3 read server hello A
     5765:error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3  
alert handshake failure:s23_clnt.c:596:

As I said before, I find this strange because I have a working SSL  
config already in Apache, and it's relatively simple:

     <VirtualHost 69.60.xxx.xxx:443>
         ServerName shib.dramonline.org

         DocumentRoot /var/www/html

         SSLEngine on
         SSLProtocol all -TLSv1

         SSLCertificateFile      /usr/local/dram/certs/shib.crt
         SSLCertificateKeyFile   /usr/local/dram/certs/www.key
         SSLCACertificateFile    /usr/local/dram/certs/intermediate.crt

         SetEnvIf User-Agent ".*MSIE.*" nokeepalive \
             ssl-unclean-shutdown downgrade-1.0 force-response-1.0
     </VirtualHost>

This may be something I need to take to the py/OpenSSL folks, but I  
wanted to check here first to make sure I wasn't missing something  
obvious. I've tried disabling various SSL protocols (using  
context.set_options()) and sometimes it seems like it gets a little  
farther in the process, but

Thanks in advance for any help,

-phil

-------------- next part --------------
A non-text attachment was scrubbed...
Name: ssl_test.py
Type: text/x-python-script
Size: 1323 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-web/attachments/20080116/f18996fc/ssl_test.bin
-------------- next part --------------

From drewp at bigasterisk.com  Fri Jan 18 01:06:16 2008
From: drewp at bigasterisk.com (Drew Perttula)
Date: Fri Jan 18 01:07:26 2008
Subject: [Twisted-web] connection pool
In-Reply-To: <OF2D3000D2.019BFE99-ONC12573D2.00410152-C12573D2.0041015A@imtechrelay.nl>
References: <OF2D3000D2.019BFE99-ONC12573D2.00410152-C12573D2.0041015A@imtechrelay.nl>
Message-ID: <479041D8.1050405@bigasterisk.com>

Tjerk.Kusters@imtech.nl wrote:
> The mods are classes like
> 
>   class module(resource.Resource):
>     def render_GET(self, request):
>        # do something
> 
> The reactor is started as:
>   reactor.listenTCP(_port, server.Site(root))
>   reactor.run( )
> 
> Some of the GET request in the mods can take some time to complete. In the
> current situation other request to the server have to wait on this request.
> 
> Is it possible to make soms kind of a thread/connection pool so that more
> then one request can be handled at the same time?
> 

That wouldn't be very twisted :). Ideally your "# do something" code 
could quickly return a deferred which would fire when the result is 
ready. (I think it's a bit more complicated than just 'return 
my_deferred', but not much.)

If the requests are spending time waiting for database requests, for 
example, you could use a non-blocking deferred API to the database. 
Worst case, if the delay is due to something that you really need to 
multi-thread, you could use t.i.threads.deferToThread on just that 
section. Then twisted would use a thread pool for the parts that need it 
and connect the rest of your code into the deferred event style.

From ironpythonster at gmail.com  Wed Jan 23 03:46:50 2008
From: ironpythonster at gmail.com (Cheney Lee)
Date: Wed Jan 23 03:47:24 2008
Subject: [Twisted-web] How to use the HTTPClientFactory connect one time and
	get more than 1000 page?
Message-ID: <8c8dcbe30801230046l42ec1b51nc45796a48e95428d@mail.gmail.com>

Hi,
it is my first time use twisted .
i want to use the a function pass a url then get the web page
the code as :
// *some code call getPage*

*while id <= 10000000:
         getPage("**http://www.mywebsite.com/News.aspx?ID="+str(id*<http://www.mywebsite.com/News.aspx?ID="+str(id>
*))
         id += 1
*//******************************************

*the getPage is definition in twisted.web.client*

*def getPage(url, contextFactory=None, *args, **kwargs):
    """Download a web page as a string.*

*    Download a page. Return a deferred, which will callback with a
    page (as a string) or errback with a description of the error.*

*    See HTTPClientFactory to see what extra args can be passed.
    """
    scheme, host, port, path = _parse(url)
    factory = HTTPClientFactory(url, *args, **kwargs)
    if scheme == 'https':
        from twisted.internet import ssl
        if contextFactory is None:
            contextFactory = ssl.ClientContextFactory()
        reactor.connectSSL(host, port, factory, contextFactory)
    else:
        reactor.connectTCP(host, port, factory)
    return factory.deferred*
--------------------------------------------------------------------------------

*Question:
*for the  getPage function,if  use it to get 10000 page ,it would open/close
connection 10000 times,it is a very large cost?
So ,any body can give me some advice?creat a class inherit from
HTTPPageGetter(as a protocol class)
or HTTPClientFactory?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20080123/c356ce29/attachment.htm
