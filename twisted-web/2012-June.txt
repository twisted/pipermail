From therve at free.fr  Tue Jun  5 06:26:05 2012
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Tue, 05 Jun 2012 12:26:05 +0200
Subject: [Twisted-web] Twisted 12.1.0 released
Message-ID: <4FCDDEBD.2070503@free.fr>

On behalf of Twisted Matrix Laboratories, I am pleased to announce the
release of Twisted 12.1.

107 tickets are closed by this release, with the following highlights:

 * The revival of the kqueue reactor for BSD platforms.

 * epoll is now the default reactor under Linux after a fix to handle
files on stdin/stdout.

 * New reactors supporting GTK3 and GObject-Introspection.

 * Several enhancements regarding file descriptors passing: systemd
support for servers, ability to send and receive file descriptors for
IReactorUNIX and an AMP argument using that feature.

 * Support for IPv6 literals in connectTCP.

 * Persistent connections support for the new HTTP client.

This is the last Twisted release supporting Python 2.5.

For more information, see the NEWS file here:

 http://twistedmatrix.com/Releases/Twisted/12.1/NEWS.txt


Download it now from:

 http://pypi.python.org/packages/source/T/Twisted/Twisted-12.1.0.tar.bz2 or

http://pypi.python.org/packages/2.5/T/Twisted/Twisted-12.1.0.win32-py2.5.msi
or

http://pypi.python.org/packages/2.6/T/Twisted/Twisted-12.1.0.win32-py2.6.msi
or

http://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.1.0.win32-py2.7.msi


Thanks to the supporters of Twisted via the Software Freedom Conservancy
and to the many contributors for this release.

-- 
Thomas


From glyph at twistedmatrix.com  Fri Jun 22 18:27:05 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 22 Jun 2012 15:27:05 -0700
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
Message-ID: <163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>


On Jun 22, 2012, at 2:52 PM, Peter Westlake <peter.westlake at pobox.com> wrote:

> On Thu, Jun 21, 2012, at 10:16, Glyph wrote:
>> 
>> Le Jun 21, 2012 ? 6:52 AM, Peter Westlake <peter.westlake at pobox.com> a
>> ?crit :
>> 
>>> How fast is rendering in nevow? I have a page which is mostly a large
>>> table with a couple of hundred rows, each containing a form. The
>>> generated HTML is about 500 KB. Leaving aside the question of whether
>>> this is a good design or not, how long would you expect it to take? I'm
>>> interested specifically in what happens between the end of beforeRender
>>> and the request being completed. It takes about a minute and a quarter.
>>> Is that normal, or is there a delay in my code that I haven't found yet?
>>> 
>>> Thanks,
>>> 
>>> Peter.
>> 
>> What does your profiler tell you?
> 
> There's a profiler? There's a profiler! There it is,
> right up there at the top of the man page! Thank you!

Not only is there a profiler, there's benchmarks!

	<http://speed.twistedmatrix.com/timeline/>

Maybe you could add one for twisted.web.template rendering speed?

> Peter.
> 
> P.S. sorry, this was really meant to go to the twisted-web list.
> I suspect a last-minute substitution by my email client.


Thanks for the thought, at least.  Cross-posted.

-glyph



From peter.westlake at pobox.com  Sun Jun 24 15:14:31 2012
From: peter.westlake at pobox.com (Peter Westlake)
Date: Sun, 24 Jun 2012 20:14:31 +0100
Subject: [Twisted-web] [Twisted-Python] Speed of rendering?
In-Reply-To: <163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
References: <1340286731.21022.140661092192609.7FC851D7@webmail.messagingengine.com>
	<278A6852-053C-4125-882E-26D478255497@twistedmatrix.com>
	<1340401929.23556.140661092828441.30BFC47D@webmail.messagingengine.com>
	<163A532D-64BC-43E7-95C6-77F7294E5EC8@twistedmatrix.com>
Message-ID: <1340565271.29668.140661093394541.28B0F791@webmail.messagingengine.com>

On Fri, Jun 22, 2012, at 15:27, Glyph wrote:
> 
> On Jun 22, 2012, at 2:52 PM, Peter Westlake <peter.westlake at pobox.com>
> wrote:
> 
> > On Thu, Jun 21, 2012, at 10:16, Glyph wrote:
> >> 
> >> Le Jun 21, 2012 ? 6:52 AM, Peter Westlake <peter.westlake at pobox.com> a
> >> ?crit :
> >> 
> >>> How fast is rendering in nevow? I have a page which is mostly a large
> >>> table with a couple of hundred rows, each containing a form. The
> >>> generated HTML is about 500 KB. Leaving aside the question of whether
> >>> this is a good design or not, how long would you expect it to take? I'm
> >>> interested specifically in what happens between the end of beforeRender
> >>> and the request being completed. It takes about a minute and a quarter.
> >>> Is that normal, or is there a delay in my code that I haven't found yet?
> >>> 
> >>> Thanks,
> >>> 
> >>> Peter.
> >> 
> >> What does your profiler tell you?
> > 
> > There's a profiler? There's a profiler! There it is,
> > right up there at the top of the man page! Thank you!
> 
> Not only is there a profiler, there's benchmarks!
> 
> 	<http://speed.twistedmatrix.com/timeline/>
> 
> Maybe you could add one for twisted.web.template rendering speed?

I'll see what I can do. Right now the server just shuts down when
given the "--profile <outputfile>" option. No errors, just a nice
clean shutdown. More on that when I'm back at work tomorrow.

> > Peter.
> > 
> > P.S. sorry, this was really meant to go to the twisted-web list.
> > I suspect a last-minute substitution by my email client.
> 
> 
> Thanks for the thought, at least.  Cross-posted.

Thanks.

Peter.


From vk.86.811 at gmail.com  Fri Jun 29 05:02:35 2012
From: vk.86.811 at gmail.com (vinod kumar)
Date: Fri, 29 Jun 2012 11:02:35 +0200
Subject: [Twisted-web] Writing onto txWS
Message-ID: <CAEUxhZ0tBdho1GX63T49-qaavLbyEcpT7dOOd-3jMykUKnoT0Q@mail.gmail.com>

Hi All,

   I have run and edited the example provided for txWS. The writing part
from server to client browser is shown only as self.transport.write()
inside dataReceived function in websockets.py. how do I write on to the
socket i.e. on to the browser, from a different function inside server
code. The bold point below  is where I want to write on to socket. How can
we do that?
-------------------------------------------------------
import time

from twisted.internet import reactor
from twisted.application import internet
from twisted.application.service import Application, Service
import xmlrpclib
from txws import WebSocketFactory

from src.protocols.websockets import WebSocketServerFactory
from constants import *

class WebSocketService(Service):
    """
    A simple service that listens on port 8077 for WebSockets traffic.
    """
    def __init__(self):
        self.start_time = time.time()

    def start_service(self, application):
        """
        Gets the show on the road. Fires up a factory, binds the port.
        """
        echofactory = WebSocketServerFactory(self)
        factory = WebSocketFactory(echofactory)
        ws_server = internet.TCPServer(8077, factory)
        ws_server.setName('ws-tcp')
        ws_server.setServiceParent(application)
        ws_server.writeSomeData(self,'abrakadabra..lol')

    def shutdown(self):
        """
        Gracefully shuts down the service.
        """
        reactor.callLater(0, reactor.stop)

def listDevices(id):
print "listDevice: %(id)s" % {"id": str(id)}
return None

def event(id, address, key, value):
        #websocket.send("ufffffffffuuuuuu")
*        #I need to write the below print statement on to browser *
        print "event: %(id)s: %(address)s: %(key)s = %(value)s" % {"id":
str(id),
"address": str(address), "key": str(key), "value": str(value)}

def aSillyBlockingMethod(x):
    import time
    import xmlrpclib
    time.sleep(2)
    from SimpleXMLRPCServer import SimpleXMLRPCServer
    from SimpleXMLRPCServer import SimpleXMLRPCRequestHandler
    from constants import *
    server = SimpleXMLRPCServer((SERVER_IP, SERVER_PORT), logRequests=True,
allow_none=True)
    server.register_introspection_functions()
    server.register_multicall_functions()
    print "server started at %s" % str(SERVER_URL)
    server.register_function(listDevices)
    server.register_function(event)
    print 'function also got registered'
    server.serve_forever()
    .............................continues

Thanks,
Vinodh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20120629/89b5bbcd/attachment.htm 

