Index: nevow/test/test_json.py
===================================================================
--- nevow/test/test_json.py	(revision 1762)
+++ nevow/test/test_json.py	(working copy)
@@ -4,35 +4,50 @@
 from twisted.trial import unittest
 
 from nevow import json
+raw = json.raw
 
 TEST_OBJECTS = [
-    0,
-    None,
-    True,
-    False,
-    u'string',
-    [],
-    [0],
-    [0, 1, 2],
-    [None, 1, 2],
-    [None, u'one', 2],
-    [True, False, u'string', 10],
-    [[1, 2], [3, 4]],
-    [0, [1, 2], [u'hello'], [u'world'], [True, None, False]],
-    {},
-    {'foo': u'bar'},
-    {'foo': None},
-    {'bar': True},
-    {'baz': [1, 2, 3]},
-    {'quux': {'bar': u'foo'}}]
+    (0,                            '0'),
+    (None,                         'null'),
+    (True,                         'true'),
+    (False,                        'false'),
+    (u'string',                    '"string"'),
+    
+    ('foo',                        '"foo"'),
+    ('"bar"',                      '"\\"bar\\""'),
+    ('foo\\bar',                   '"foo\\\\bar"'),
+    
+    ([],                           '[]'),
+    ([0],                          '[0]'),
+    ([0, 1, 2],                    '[0,1,2]'),
+    ([None, 1, 2],                 '[null,1,2]'),
+    ([None, u'one', 2],            '[null,"one",2]'),
+    ([True, False, u'string', 10], '[true,false,"string",10]'),
+    ([[1, 2], [3, 4]],             '[[1,2],[3,4]]'),
+    ([0, [1, 2], [u'hello'], [u'world'], [True, None, False]],
+                                   '[0,[1,2],["hello"],["world"],[true,null,false]]'),
+    ({},                           '{}'),
+    ({'foo': u'bar'},              '{foo:"bar"}'),
+    ({'foo': None},                '{foo:null}'),
+    ({'bar': True},                '{bar:true}'),
+    ({'baz': [1, 2, 3]},           '{baz:[1,2,3]}'),
+    ({'quux': {'bar': u'foo'}},    '{quux:{bar:"foo"}}'),
+    
+    (raw('bla'),                   'bla'),
+    (raw('foo = "bar"'),           'foo = "bar"'),
+    ]
 
-
 class JavascriptObjectNotationTestCase(unittest.TestCase):
 
     def testSerialize(self):
-        for struct in TEST_OBJECTS:
-            json.serialize(struct)
-
+        for struct, expected in TEST_OBJECTS:
+            result = json.serialize(struct)
+            self.assertEquals(
+                result,
+                expected,
+                "Fail to serialize %r: %r (expected %r)" % (
+                  struct, result, expected))
+            
     def testRoundtrip(self):
         for struct in TEST_OBJECTS:
             bytes = json.serialize(struct)
Index: nevow/json.py
===================================================================
--- nevow/json.py	(revision 1762)
+++ nevow/json.py	(working copy)
@@ -173,6 +173,9 @@
 class CycleError(Exception):
     pass
 
+class raw(str):
+    pass
+
 def _serialize(obj, w, seen):
     if isinstance(obj, types.BooleanType):
         if obj:
@@ -181,10 +184,16 @@
             w('false')
     elif isinstance(obj, (int, long)):
         w(str(obj))
+    elif isinstance(obj, raw):
+        w(obj)
     elif isinstance(obj, unicode):
         w('"')
         w(obj.replace('\\', '\\\\').replace('"', '\\"').encode('unicode-escape'))
         w('"')
+    elif isinstance(obj, str):
+        w('"')
+        w(obj.replace('\\', '\\\\').replace('"', '\\"'))
+        w('"')
     elif isinstance(obj, types.NoneType):
         w('null')
     elif id(obj) in seen: