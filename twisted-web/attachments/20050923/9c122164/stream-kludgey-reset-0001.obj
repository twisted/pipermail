Index: twisted/web2/stream.py
===================================================================
--- twisted/web2/stream.py	(revision 14535)
+++ twisted/web2/stream.py	(working copy)
@@ -9,7 +9,8 @@
 
 The IStream interface is very simple. It consists of two methods:
 read, and close. The read method should either return some data, None
-if there is no data left to read, or a Deferred. Close frees up any
+if there is no data left to read, or a Deferred. The reset method will
+make subsequent reads start over from the beginning. Close frees up any
 underlying resources and causes read to return None forevermore.
 
 IByteStream adds a bit more to the API:
@@ -61,6 +62,10 @@
         Errors may be indicated by exception or by a Deferred of a Failure.
         """
         
+
+    def reset():
+        """Resets the stream."""
+
     def close():
         """Prematurely close. Should also cause further reads to
         return None."""
@@ -249,16 +254,19 @@
             if len(mem) < length:
                 raise ValueError("len(mem) < start + length")
             self.length = length
+        self.written = True
 
+    def reset(self):
+        self.written = False
+
     def read(self):
-        if self.mem is None:
+        if self.mem is None or self.written:
             return None
+        self.written = True
         if self.length == 0:
             result = None
         else:
             result = buffer(self.mem, self.start, self.length)
-        self.mem = None
-        self.length = 0
         return result
 
     def close(self):
Index: twisted/web2/client/http.py
===================================================================
--- twisted/web2/client/http.py	(revision 14535)
+++ twisted/web2/client/http.py	(working copy)
@@ -698,6 +698,8 @@
         if authHeader and self.authHandlers:
             creds = self.authHandlers[authHeader[0].lower()].getCredentials(authHeader[1], request)
             if creds:
+                if request.stream is not None:
+                    request.stream.reset()
                 req = Request(request.method, request.uri, request.args,
                               request.headers, request.stream)
                 
