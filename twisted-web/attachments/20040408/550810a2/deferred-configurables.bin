Index: nevow/rend.py
===================================================================
--- nevow/rend.py	(revision 138)
+++ nevow/rend.py	(working copy)
@@ -69,12 +69,24 @@
             ctx.remember(request, inevow.IRequest)
             from nevow import freeform
             cf = inevow.IConfigurableFactory(self)
-            c = cf.locateConfigurable(ctx, configurableName)
-            print "locatedConfigurable"
-            return self.webFormPost(request, self, c, ctx, bindingName, request.args)
+
+            # Support deferred configurables
+            def _cbGotConfigurable(cfgable):
+                return self.webFormPost(
+                    request, self, cfgable, ctx, bindingName, request.args)
+            def _ebNoConfigurable(failure):
+                raise failure
+            
+            d = defer.maybeDeferred(
+                cf.locateConfigurable, ctx, configurableName)
+            d.addCallback(_cbGotConfigurable)
+            d.addErrback(_ebNoConfigurable)
+            return d
+        
         return FourOhFour(), ()
+        
+            
 
-
 class ConfigurableFactory:
     """Locates configurables by looking for methods that start with
     configurable_ and end with the name of the configurable. The method
Index: nevow/dirlist.py
===================================================================
--- nevow/dirlist.py	(revision 138)
+++ nevow/dirlist.py	(working copy)
@@ -65,7 +65,7 @@
                     'type': '[%s]' % mimetype,
                     'encoding': (encoding and '[%s]' % encoding or '')})
 
-        return files + dirs
+        return dirs + files
 
     def data_header(self, context, data):
         request = context.locate(inevow.IRequest)
