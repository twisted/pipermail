from nevow import vhost, static, appserver, inevow, rend, url, loaders
from nevow import tags as T
from nevow.stan import directive
from zope.interface import implements
# Standard Application Setup

from twisted.application import service, strports
class LinkForgingVulnResource(rend.Page):
    docFactory = loaders.stan(T.html[T.head[T.title["I'm vulnerable"]],
				     T.body[T.img(render=directive('generateImgLink'))]])

    def render_generateImgLink(self, ctx, data):
	u = url.hereaccessor(ctx)
	img = u.child('intl').child('en').child('images').child('logo.gif')
	return ctx.tag(src=img)

root = LinkForgingVulnResource()
vhost = vhost.VHostMonsterResource()
root.putChild('vhost', vhost)

application = service.Application("LinkForging")
s = strports.service('tcp:8080', appserver.NevowSite(root))
s.setServiceParent(application)

