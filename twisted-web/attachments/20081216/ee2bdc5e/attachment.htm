<tt>
I&nbsp;have&nbsp;a&nbsp;HTTP&nbsp;Proxy&nbsp;made&nbsp;with&nbsp;twisted.web&nbsp;and&nbsp;want&nbsp;to&nbsp;change&nbsp;the&nbsp;request&nbsp;that&nbsp;the&nbsp;browser&nbsp;sends&nbsp;to&nbsp;the&nbsp;Proxy&nbsp;such&nbsp;that&nbsp;I&nbsp;erase&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;&amp;#39;accept-encoding&amp;#39;&nbsp;key&nbsp;from&nbsp;&amp;#39;gzip,deflate&amp;#39;&nbsp;to&nbsp;&amp;#39;&nbsp;&amp;#39;.&lt;br&gt;&lt;br&gt;<br>
I&nbsp;use&nbsp;the&nbsp;example&nbsp;from&nbsp;the&nbsp;Tisted&nbsp;Book:&lt;br&gt;&lt;br&gt;By&nbsp;adding&nbsp;the&nbsp;overriden&nbsp;process&nbsp;method&nbsp;in&nbsp;WordCountProxyRequest&nbsp;I&nbsp;can&nbsp;get&nbsp;the&nbsp;request&nbsp;header&nbsp;but&nbsp;have&nbsp;found&nbsp;no&nbsp;way&nbsp;to&nbsp;set&nbsp;a&nbsp;key,&nbsp;value&nbsp;pair.&lt;br&gt;I&nbsp;want&nbsp;make&nbsp;the&nbsp;server&nbsp;think&nbsp;that&nbsp;the&nbsp;browser&nbsp;does&nbsp;not&nbsp;support&nbsp;gzip&nbsp;because&nbsp;twisted&nbsp;seems&nbsp;to&nbsp;not&nbsp;support&nbsp;gzip&nbsp;as&nbsp;the&nbsp;response&nbsp;from&nbsp;&lt;a&nbsp;href=&quot;http://www.google.com&quot;&gt;www.google.com&lt;/a&gt;&nbsp;and&nbsp;many&nbsp;(but&nbsp;not&nbsp;all)&nbsp;sites&nbsp;appears&nbsp;still&nbsp;encoded.&nbsp;&lt;a&nbsp;href=&quot;http://www.dpreview.com&quot;&gt;www.dpreview.com&lt;/a&gt;&nbsp;seems&nbsp;not&nbsp;to&nbsp;gzip&nbsp;the&nbsp;response,&nbsp;and&nbsp;so&nbsp;the&nbsp;resonse&nbsp;is&nbsp;processed&nbsp;correctly.&lt;br&gt;<br>
&lt;br&gt;What&nbsp;can&nbsp;I&nbsp;do&nbsp;to&nbsp;either&nbsp;correctly&nbsp;decode&nbsp;gzip&nbsp;responses&nbsp;or&nbsp;modify&nbsp;the&nbsp;&amp;#39;accept-encoding&amp;#39;&nbsp;value&nbsp;to&nbsp;nothing&nbsp;so&nbsp;the&nbsp;server&nbsp;does&nbsp;not&nbsp;compress&nbsp;the&nbsp;response?&lt;br&gt;&lt;br&gt;Thank&nbsp;you!&lt;br&gt;&lt;h5&nbsp;style=&quot;font-weight:&nbsp;normal;&quot;&nbsp;class=&quot;docExampleTitle&quot;&gt;<br>
&lt;u&gt;Example&nbsp;4-8.&nbsp;wordcountproxy.py&lt;/u&gt;&lt;/h5&gt;<br>
<br>
&lt;pre&gt;import&nbsp;sgmllib,&nbsp;re&lt;br&gt;from&nbsp;twisted.web&nbsp;import&nbsp;proxy,&nbsp;http&lt;br&gt;import&nbsp;sys&lt;br&gt;from&nbsp;twisted.python&nbsp;import&nbsp;log&lt;br&gt;log.startLogging(sys.stdout)&lt;br&gt;&lt;br&gt;WEB_PORT&nbsp;=&nbsp;8000&lt;br&gt;PROXY_PORT&nbsp;=&nbsp;8001&lt;br&gt;&lt;br&gt;class&nbsp;WordParser(sgmllib.SGMLParser):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sgmllib.SGMLParser.__init__(self)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.chardata&nbsp;=&nbsp;[]&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.inBody&nbsp;=&nbsp;False&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;start_body(self,&nbsp;attrs):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.inBody&nbsp;=&nbsp;True&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;end_body(self):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.inBody&nbsp;=&nbsp;False&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;handle_data(self,&nbsp;data):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;self.inBody:&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.chardata.append(data)&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getWords(self):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;extract&nbsp;words&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wordFinder&nbsp;=&nbsp;re.compile(r&amp;#39;\w*&amp;#39;)&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;words&nbsp;=&nbsp;wordFinder.findall(&amp;quot;&amp;quot;.join(self.chardata))&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;words&nbsp;=&nbsp;filter(lambda&nbsp;word:&nbsp;word.strip(&nbsp;),&nbsp;words)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;&amp;quot;WORDS&nbsp;ARE&amp;quot;,&nbsp;words&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;words&lt;br&gt;&lt;br&gt;class&nbsp;WordCounter(object):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;ignoredWords&nbsp;=&nbsp;&amp;quot;the&nbsp;a&nbsp;of&nbsp;in&nbsp;from&nbsp;to&nbsp;this&nbsp;that&nbsp;and&nbsp;or&nbsp;but&nbsp;is&nbsp;was&nbsp;be&nbsp;can&nbsp;could&nbsp;i&nbsp;you&nbsp;they&nbsp;we&nbsp;at&amp;quot;.split(&nbsp;)&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.words&nbsp;=&nbsp;{}&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;addWords(self,&nbsp;words):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;word&nbsp;in&nbsp;words:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;word&nbsp;=&nbsp;word.lower(&nbsp;)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;word&nbsp;in&nbsp;self.ignoredWords:&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentCount&nbsp;=&nbsp;self.words.get(word,&nbsp;0)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.words[word]&nbsp;=&nbsp;currentCount&nbsp;+&nbsp;1&lt;br&gt;&lt;br&gt;class&nbsp;WordCountProxyClient(proxy.ProxyClient):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;handleHeader(self,&nbsp;key,&nbsp;value):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy.ProxyClient.handleHeader(self,&nbsp;key,&nbsp;value)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;key.lower(&nbsp;)&nbsp;==&nbsp;&amp;quot;content-type&amp;quot;:&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;value.split(&amp;#39;;&amp;#39;)[0]&nbsp;==&nbsp;&amp;#39;text/html&amp;#39;:&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.parser&nbsp;=&nbsp;WordParser(&nbsp;)&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;handleResponsePart(self,&nbsp;data):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy.ProxyClient.handleResponsePart(self,&nbsp;data)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hasattr(self,&nbsp;&amp;#39;parser&amp;#39;):&nbsp;self.parser.feed(data)&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;handleResponseEnd(self):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy.ProxyClient.handleResponseEnd(self)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hasattr(self,&nbsp;&amp;#39;parser&amp;#39;):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.parser.close(&nbsp;)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.father.wordCounter.addWords(self.parser.getWords(&nbsp;))&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del(self.parser)&lt;br&gt;&lt;br&gt;class&nbsp;WordCountProxyClientFactory(proxy.ProxyClientFactory):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;buildProtocol(self,&nbsp;addr):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client&nbsp;=&nbsp;proxy.ProxyClientFactory.buildProtocol(self,&nbsp;addr)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;upgrade&nbsp;proxy.proxyClient&nbsp;object&nbsp;to&nbsp;WordCountProxyClient&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;client.__class__&nbsp;=&nbsp;WordCountProxyClient&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;client&lt;br&gt;&lt;br&gt;class&nbsp;WordCountProxyRequest(proxy.ProxyRequest):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;protocols&nbsp;=&nbsp;{&amp;#39;http&amp;#39;:&nbsp;WordCountProxyClientFactory}&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;wordCounter,&nbsp;*args):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.wordCounter&nbsp;=&nbsp;wordCounter&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy.ProxyRequest.__init__(self,&nbsp;*args)&lt;br&gt;&lt;br&gt;&lt;b&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;process(self):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy.ProxyRequest.process(self)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;&amp;quot;received_headers&amp;quot;,&nbsp;proxy.ProxyRequest.getAllHeaders(self)&lt;/b&gt;&lt;br&gt;<br>
&lt;br&gt;class&nbsp;WordCountProxy(proxy.Proxy):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;wordCounter):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.wordCounter&nbsp;=&nbsp;wordCounter&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy.Proxy.__init__(self)&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;requestFactory(self,&nbsp;*args):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;WordCountProxyRequest(self.wordCounter,&nbsp;*args)&lt;br&gt;<br>
&lt;br&gt;class&nbsp;WordCountProxyFactory(http.HTTPFactory):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;wordCounter):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.wordCounter&nbsp;=&nbsp;wordCounter&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http.HTTPFactory.__init__(self)&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;buildProtocol(self,&nbsp;addr):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protocol&nbsp;=&nbsp;WordCountProxy(self.wordCounter)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;protocol&lt;br&gt;&lt;br&gt;#&nbsp;classes&nbsp;for&nbsp;web&nbsp;reporting&nbsp;interface&lt;br&gt;class&nbsp;WebReportRequest(http.Request):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;wordCounter,&nbsp;*args):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.wordCounter&nbsp;=&nbsp;wordCounter&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http.Request.__init__(self,&nbsp;*args)&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;process(self):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.setHeader(&amp;quot;Content-Type&amp;quot;,&nbsp;&amp;quot;text/html&amp;quot;)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;words&nbsp;=&nbsp;self.wordCounter.words.items(&nbsp;)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;words.sort(lambda&nbsp;(w1,&nbsp;c1),&nbsp;(w2,&nbsp;c2):&nbsp;cmp(c2,&nbsp;c1))&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;word,&nbsp;count&nbsp;in&nbsp;words:&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.write(&amp;quot;&amp;lt;li&amp;gt;%s&nbsp;%s&amp;lt;/li&amp;gt;&amp;quot;&nbsp;%&nbsp;(word,&nbsp;count))&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.finish(&nbsp;)&lt;br&gt;&lt;br&gt;class&nbsp;WebReportChannel(http.HTTPChannel):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;wordCounter):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.wordCounter&nbsp;=&nbsp;wordCounter&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http.HTTPChannel.__init__(self)&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;requestFactory(self,&nbsp;*args):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;WebReportRequest(self.wordCounter,&nbsp;*args)&lt;br&gt;&lt;br&gt;class&nbsp;WebReportFactory(http.HTTPFactory):&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;wordCounter):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.wordCounter&nbsp;=&nbsp;wordCounter&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http.HTTPFactory.__init__(self)&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;buildProtocol(self,&nbsp;addr):&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;WebReportChannel(self.wordCounter)&lt;br&gt;&lt;br&gt;<br>
if&nbsp;__name__&nbsp;==&nbsp;&amp;quot;__main__&amp;quot;:&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;counter&nbsp;=&nbsp;WordCounter(&nbsp;)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;prox&nbsp;=&nbsp;WordCountProxyFactory(counter)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;reactor.listenTCP(PROXY_PORT,&nbsp;prox)&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;reactor.listenTCP(WEB_PORT,&nbsp;WebReportFactory(counter))&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;reactor.run(&nbsp;)&lt;/pre&gt;&lt;br&gt;&lt;br&gt;--&nbsp;&lt;br&gt;Radu&lt;br&gt;<br>

</tt>
