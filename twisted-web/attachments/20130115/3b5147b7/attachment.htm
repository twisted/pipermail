<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;i&nbsp;want&nbsp;to&nbsp;interrupt&nbsp;the&nbsp;file&nbsp;sending.&nbsp;but&nbsp;i&nbsp;can&amp;#39;t&nbsp;change&nbsp;the&nbsp;client.&nbsp;so&nbsp;i&nbsp;need&nbsp;change&nbsp;the&nbsp;server.&lt;div&nbsp;style&gt;All&nbsp;things&nbsp;go&nbsp;well,&nbsp;but&nbsp;the&nbsp;message&nbsp;i&nbsp;wanna&nbsp;response&nbsp;seem&nbsp;not&nbsp;work.&lt;/div&gt;&lt;div&nbsp;style&gt;is&nbsp;the&nbsp;self.transport.loseConnection()&nbsp;(the&nbsp;last&nbsp;line)&nbsp;blocking&nbsp;the&nbsp;messages?&lt;/div&gt;<br>
&lt;div&nbsp;style&gt;in&nbsp;fact,&nbsp;i&nbsp;work&nbsp;on&nbsp;Cumulus(nimbus&nbsp;project)&nbsp;which&nbsp;based&nbsp;on&nbsp;twisted.&nbsp;And&nbsp;i&nbsp;use&nbsp;s3cmd&nbsp;as&nbsp;the&nbsp;client.&lt;/div&gt;&lt;div&nbsp;style&gt;&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;style&gt;here&nbsp;is&nbsp;the&nbsp;my&nbsp;code:&lt;/div&gt;&lt;div&nbsp;style&gt;&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;style&gt; &nbsp;   &nbsp; &nbsp;def&nbsp;headerReceived(self,line):&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;pycb.log(logging.INFO,&nbsp;&amp;quot;=====&nbsp;def&nbsp;headerReceived&nbsp;of&nbsp;cumulus.py&amp;quot;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;http.HTTPChannel.headerReceived(self,line)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;pycb.log(logging.INFO,&nbsp;&amp;quot;=====&nbsp;self.length&nbsp;is&nbsp;%s&amp;quot;%self.length)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;header,&nbsp;data&nbsp;=&nbsp;line.split(&amp;#39;:&amp;#39;,&nbsp;1)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;header&nbsp;=&nbsp;header.lower()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;data&nbsp;=&nbsp;data.strip()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;header==&amp;#39;authorization&amp;#39;:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.authorization=data&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;self.length&nbsp;and&nbsp;self.authorization:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;user_id&nbsp;=&nbsp;self.authorization.split(&amp;#39;:&amp;#39;)[0].split()[1].strip()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;user&nbsp;=&nbsp;pycb.config.auth.get_user(user_id)&lt;/div&gt;<br>
&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pycb.log(logging.INFO,&nbsp;&amp;quot;=====&nbsp;user&nbsp;who&nbsp;put&nbsp;this&nbsp;object&nbsp;is&nbsp;%s&amp;quot;%user)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;remaining_quota&nbsp;=&nbsp;user.get_remaining_quota()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pycb.log(logging.INFO,&nbsp;&amp;quot;=====&nbsp;remaining_quota&nbsp;is&nbsp;%s&amp;quot;%remaining_quota)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;quota_check=self.length-remaining_quota&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pycb.log(logging.INFO,&nbsp;&amp;quot;=====&nbsp;quota_check=self.length-remaining_quota&nbsp;of&nbsp;cumulus.py&amp;quot;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;quota_check&amp;gt;0:&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;requestId&nbsp;=&nbsp;str(uuid.uuid1()).replace(&amp;quot;-&amp;quot;,&nbsp;&amp;quot;&amp;quot;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ex=cbException(&amp;#39;AccountProblem&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;m_msg&nbsp;=&nbsp;&amp;quot;HTTP/1.1&nbsp;%s&nbsp;%s\r\n&amp;quot;&nbsp;%&nbsp;(ex.httpCode,&nbsp;ex.httpDesc)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.transport.write(m_msg)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;m_msg&nbsp;=&nbsp;&amp;quot;%s:&nbsp;%s\r\n&amp;quot;&nbsp;%&nbsp;((&amp;#39;x-amz-request-id&amp;#39;,&nbsp;requestId))&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.transport.write(m_msg)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#req.setHeader(&amp;#39;x-amz-request-id&amp;#39;,&nbsp;requestId)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;m_msg&nbsp;=&nbsp;&amp;quot;%s:&nbsp;%s\r\n&amp;quot;&nbsp;%&nbsp;((&amp;#39;x-amz-id-2&amp;#39;,&nbsp;str(uuid.uuid1())))&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.transport.write(m_msg)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e_msg&nbsp;=&nbsp;ex.make_xml_string(self._path,&nbsp;str(uuid.uuid1()))&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pycb.log(logging.INFO,&nbsp;&amp;quot;=====&nbsp;e_msg&nbsp;is&nbsp;%s&amp;quot;%e_msg)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#self.transport.write(&amp;quot;\r\n&amp;quot;)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.transport.write(e_msg)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pycb.log(logging.INFO,&nbsp;&amp;quot;=====&nbsp;self.transport.write(e_msg)&amp;quot;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.transport.loseConnection()&lt;/div&gt;<br>
&lt;/div&gt;<br>

</tt>
