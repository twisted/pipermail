from nevow import rend, vhost, appserver, loaders, tags as T, inevow
from nevow.stan import directive

# Standard Application Setup

class PrintingPage(rend.Page):
      addSlash = True
      def locateChild(self, ctx, segments):
          print id(self)
      	  print segments
	  return rend.Page.locateChild(self, ctx, segments)

      def render_hostPort(self, ctx, data):
          return ctx.tag[str(inevow.IRequest(ctx).host)]


class GoodPage(PrintingPage):
      docFactory = loaders.stan(
      T.html[
        T.head[
          T.title["I'm a happy nice resource"]
        ],
	T.body[
	  "Yay!",
          T.div(render=directive('hostPort'))
        ]
      ])

class EvilPage(PrintingPage):
      docFactory = loaders.stan(
      T.html[
        T.head[
	  T.title["I've hijacked the resource tree"]
        ],
        T.body["Oh no!",
               T.div(render=directive('hostPort'))]
      ])

class DefaultPage(PrintingPage):
      addSlash = True

      child_vhost = vhost.VHostMonsterResource()


evil = EvilPage()
print 'Evil:', id(evil)

good = GoodPage()
print 'Good:', id(good)

good.putChild('vhost', vhost.VHostMonsterResource())

default = DefaultPage()
print 'Default:', id(default)

root = vhost.NameVirtualHost()
root.default = default

root.addHost('goody.com', good)
root.addHost('evil.net', evil)

from twisted.application import service, strports

application = service.Application("Application Name")
s = strports.service('tcp:8080', appserver.NevowSite(root))
s.setServiceParent(application)

