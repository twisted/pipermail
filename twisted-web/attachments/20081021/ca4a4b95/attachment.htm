<tt>
I&nbsp;want&nbsp;to&nbsp;get&nbsp;the&nbsp;contents&nbsp;of&nbsp;a&nbsp;list&nbsp;of&nbsp;URLs,&nbsp;and&nbsp;if&nbsp;the&nbsp;getPage&nbsp;is&nbsp;successful&nbsp;then&nbsp;I&nbsp;want&nbsp;to&nbsp;write&nbsp;it&nbsp;to&nbsp;a&nbsp;file.&nbsp;&nbsp;If&nbsp;it&nbsp;fails,&nbsp;I&nbsp;want&nbsp;to&nbsp;log&nbsp;a&nbsp;message.&nbsp;&nbsp;In&nbsp;addition,&nbsp;I&nbsp;would&nbsp;like&nbsp;to&nbsp;have&nbsp;this&nbsp;process&nbsp;run&nbsp;every&nbsp;five&nbsp;minutes.&nbsp;&nbsp;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;The&nbsp;problem&nbsp;is&nbsp;how&nbsp;to&nbsp;specify&nbsp;a&nbsp;yes/no&nbsp;scenario&nbsp;when&nbsp;the&nbsp;callbacks&nbsp;take&nbsp;arguments.&nbsp;&nbsp;Also,&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to&nbsp;loop&nbsp;to&nbsp;just&nbsp;put&nbsp;FeederProtocol.start()&nbsp;in&nbsp;a&nbsp;loop?&nbsp;&nbsp;any&nbsp;ehlp&nbsp;would&nbsp;be&nbsp;greatly&nbsp;appreciated.&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;while&nbsp;true:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;get&nbsp;page&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;if&nbsp;error:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log&lt;br&nbsp;/&gt;&nbsp;&nbsp;else:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;write&nbsp;to&nbsp;file&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;sleep&nbsp;5&nbsp;minutes&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;class&nbsp;FeederProtocol(object):&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;get_page_error(self,&nbsp;_failure,&nbsp;log,&nbsp;feed_name):&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;quot;&amp;quot;&amp;quot;&nbsp;Failure&nbsp;while&nbsp;getting&nbsp;page.&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&amp;#39;While&nbsp;getting&nbsp;%s:&nbsp;%s&amp;#39;&nbsp;%&nbsp;(feed_name,&nbsp;_failure.getTraceback())&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log.error(msg)&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_failure.trap(RuntimeError)&nbsp;#&nbsp;Caused&nbsp;chain&nbsp;to&nbsp;stop&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raise(RuntimeError)&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;get_page(url):&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;client.getPage(url,&nbsp;timeout=30)&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;page_to_file(self,&nbsp;feed,&nbsp;name):&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fnout&nbsp;=&nbsp;os.path.join(app_conf[&amp;#39;download_dir&amp;#39;],&nbsp;name)&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fout&nbsp;=&nbsp;open(fnout,&nbsp;&amp;#39;w&amp;#39;)&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;IOError,&nbsp;e:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log.error(&amp;#39;Opening&nbsp;%s:&nbsp;%s&amp;#39;&nbsp;%&nbsp;(fnout,&nbsp;e))&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fout.write(feed)&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;IOError,&nbsp;e:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log.error(&amp;#39;Wrting&nbsp;to&nbsp;%s:&nbsp;%s&amp;#39;&nbsp;%&nbsp;(fnout,&nbsp;e))&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;finally:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fout.close()&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;start(self,&nbsp;urls):&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;url&nbsp;in&nbsp;urls:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d&nbsp;=&nbsp;defer.succeed(self.printStatus())&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.addCallback(self.get_page,&nbsp;feed,&nbsp;log,&nbsp;app_conf)&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.addCallbacks((self.page_to_file,&nbsp;log,&nbsp;app_conf),&nbsp;(self.get_page_error,&nbsp;log,&nbsp;feed[0]))&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;class&nbsp;FeederFactory(protocol.ClientFactory):&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;protocol&nbsp;=&nbsp;FeederProtocol()&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;url_list):&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urls&nbsp;=&nbsp;url_list&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.start(self.urls)&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;def&nbsp;start(self,&nbsp;urls):&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protocol.start(urls)&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;if&nbsp;__name__==&amp;quot;__main__&amp;quot;:&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;&amp;#39;mytest&amp;#39;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;urls&nbsp;=&nbsp;[&amp;#39;www.example.com&amp;#39;,&nbsp;&amp;#39;www.example2.com&amp;#39;]&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;FeederFactory(urls)&lt;br&nbsp;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;reactor.run()
</tt>
