Index: twisted/web2/test/test_client.py
===================================================================
--- twisted/web2/test/test_client.py	(revision 14502)
+++ twisted/web2/test/test_client.py	(working copy)
@@ -30,7 +30,7 @@
 # from twisted.internet.base import DelayedCall
 # DelayedCall.debug = True
 
-from twisted.web2.client import HTTPClientFactory, Request
+from twisted.web2.client import HTTPClientFactory, Request, auth
 from twisted.web2.client.http import ProtocolError
 from twisted.web2 import stream
 
@@ -483,3 +483,14 @@
 
         return d
 
+class BasicAuthTestCase(unittest.TestCase):
+    def setUp(self):
+        self.basic = auth.HTTPBasicAuthHandler({'myrealm': ('foo', 'bar')})
+
+    def testHaveRealm(self):
+        result = self.basic.getCredentials({'realm': 'myrealm'})
+        self.assertEquals(['Basic', 'Zm9vOmJhcg=='], result)
+
+    def testDontHaveRealm(self):
+        self.assertRaises(auth.HTTPAuthError,
+            self.basic.getCredentials, {'realm': 'otherrealm'})
Index: twisted/web2/client/auth.py
===================================================================
--- twisted/web2/client/auth.py	(revision 14502)
+++ twisted/web2/client/auth.py	(working copy)
@@ -54,7 +54,7 @@
     scheme = 'Basic'
     
     def encodeCredentials(self, creds, challenge, request=None):
-        return base64.encodestring(':'.join(creds).strip(''))
+        return base64.encodestring(':'.join(creds)).strip()
 
 
 class HTTPDigestAuthHandler(BaseHTTPAuthHandler):
