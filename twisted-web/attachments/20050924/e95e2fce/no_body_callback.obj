Index: twisted/web2/test/test_client.py
===================================================================
--- twisted/web2/test/test_client.py	(revision 14551)
+++ twisted/web2/test/test_client.py	(working copy)
@@ -221,26 +221,26 @@
                 resp.stream.length is None))
         return d
 
-#     def test_204_response(self):
-#         self.serverFactory.statusLine = "HTTP/1.1 204 Nothing to see here"
-#         d = self.clientFactory.addRequest(Request("GET", "/", {}, None))
+    def test_204_response(self):
+        self.serverFactory.statusLine = "HTTP/1.1 204 Nothing to see here"
+        d = self.clientFactory.addRequest(Request("GET", "/", {}, None))
         
-#         d.addCallback(lambda resp:
-#             self.failUnless(
-#                 resp.code == 204))
+        d.addCallback(lambda resp:
+            self.failUnless(
+                resp.code == 204))
         
-#         return d
+        return d
 
-#     def test_304_response(self):
-#         self.serverFactory.statusLine = "HTTP/1.1 304 But I have not changed!"
-#         self.serverFactory.keepAlive = True
-#         d = self.clientFactory.addRequest(Request("GET", "/", {}, None))
+    def test_304_response(self):
+        self.serverFactory.statusLine = "HTTP/1.1 304 But I have not changed!"
+        self.serverFactory.keepAlive = True
+        d = self.clientFactory.addRequest(Request("GET", "/", {}, None))
         
-#         d.addCallback(lambda resp:
-#             self.failUnless(
-#                 resp.code == 304 and 
-#                 resp.stream is None))
-#         return d
+        d.addCallback(lambda resp:
+            self.failUnless(
+                resp.code == 304 and 
+                resp.stream is None))
+        return d
 
 class HeadersTestCase(HTTPTestCase):
 
Index: twisted/web2/client/http.py
===================================================================
--- twisted/web2/client/http.py	(revision 14551)
+++ twisted/web2/client/http.py	(working copy)
@@ -427,6 +427,10 @@
                self.request.method == 'HEAD':
                
                 self._decoder = None
+
+                if self.request.deferred is not None:
+                    self.request.deferred.callback(self.response)
+
                 # We will fall through to the self._decoder is None
                 # case below
                 
