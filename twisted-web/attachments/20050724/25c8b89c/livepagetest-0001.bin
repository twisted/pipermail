from nevow import livepage, tags, loaders
from nevow.appserver import NevowSite

from twisted.python.components import Adapter
from twisted.application.service import Application
from twisted.application.strports import service

class MyPage(livepage.LivePage,
             Adapter,
             ):
    def __init__(self, orig):
        Adapter.__init__(self, orig)
        livepage.LivePage.__init__(self)
    
    docFactory = loaders.stan(
        tags.html[
         tags.head[
          livepage.glue,
          tags.title["test"],
          ],
         tags.body[
          tags.p["This is only a test."],
          ],
         ]
        )

application = Application("test")

# This causes infinite recursion when trying to flatten (?) livepage.glue
#root = application.addAdapter(MyPage, True)
#service("8080", NevowSite(root)).setServiceParent(application)

# Or

#service("8080", NevowSite(application)).setServiceParent(application)

# This works as expected
root = MyPage(application)
service("8080", NevowSite(root)).setServiceParent(application)
