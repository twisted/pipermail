Index: /home/richard/workspace/Nevow/examples/customform.py
===================================================================
--- /home/richard/workspace/Nevow/examples/customform.py	(revision 1658)
+++ /home/richard/workspace/Nevow/examples/customform.py	(working copy)
@@ -35,6 +35,7 @@
 #     form-description  -- description, also extracted from the docstring
 #     form-error        -- "global" error
 #     form-arguments    -- insertion point for the arguments' HTML
+#     argument!!fo     -- insertion point for individual arguments
 #   argument:
 #     label             -- label
 #     input             -- the form element (input, textarea, etc)
@@ -63,22 +64,39 @@
       <p><strong><em><n:slot name="form-error"/></em></strong></p>
       
       <!-- Start of the form layout table -->
-      <table style="background: #eee; border: 1px solid #bbb; padding: 1em;" >
-        <!-- Mark location arguments will be added -->
-        <n:slot name="form-arguments"/>
+      <!-- Mark location arguments will be added -->
+      <fieldset>
+        <n:slot name="argument!!fee"/>
+        <n:slot name="argument!!fi"/>
+      </fieldset>
+      <fieldset>
+        <n:slot name="argument!!fo"/>
+        <n:slot name="argument!!fum"/>
+      </fieldset>
+      
         <!-- General argument layout pattern -->
         <n:invisible n:pattern="argument" n:render="remove">
-          <tr>
-            <th><n:slot name="label"/>:</th>
-            <td><n:slot name="input"/><span class="freeform-error"><n:slot name="error"/></span></td>
-          </tr>
-          <tr>
-            <th></th>
-            <td><n:slot name="description"/></td>
-          </tr>
+          <dl>
+            <n:attr name="title"><n:slot name="description"/></n:attr>
+            <dt>
+                <label>
+                    <n:attr name="for"><n:slot name="id"/></n:attr>
+                    <n:slot name="label"/>:
+                </label>
+            </dt>
+            <dd><n:slot name="input"/></dd>
+            <dd class="freeform-error">
+                <label>
+                    <n:attr name="for"><n:slot name="id"/></n:attr>
+                    <n:slot name="error"/>
+                </label>
+            </dd>
+          </dl>
         </n:invisible>
+        
         <!-- Argument layout, just for fum -->
         <n:invisible n:pattern="argument!!fo" n:render="remove">
+          <table border="1" cellpadding="1" cellspacing="0">
           <tr>
             <th><n:slot name="label"/>:</th>
             <td>
@@ -89,43 +107,19 @@
             <th></th>
             <td><n:slot name="description"/></td>
           </tr>
+          </table>
         </n:invisible>
-        <!-- Button row -->
-        <tr>
-          <td colspan="2">
-            <n:slot name="form-button"/>
-          </td>
-        </tr>
-      </table>
+        
+        <!-- Buttons -->
+        <ul>
+            <li><n:slot name="form-button"/></li>
+        </ul>
     </form>
     """).load()
 
-
-#################################################################################
-# ISomething and Page are just something to test the form rendering on.
-
-class ISomething(annotate.TypedInterface):
-    
-    def doSomething(
-        self,
-        ctx = annotate.Context(),
-        fee = annotate.String(required=True, description="Wee!"),
-        fi = annotate.Integer(description="Tra-la-la"),
-        fo = annotate.Text(),
-        fum = annotate.String(),
-        ):
-        """Do Something Really Exciting
-
-        Normally you would put a useful description of the interface here but,
-        since the inteface is useless anyway, I cannot think of anything
-        useful to say about it. Although ... did I mention it is useless?"""
-    doSomething = annotate.autocallable(doSomething)
-    
-
 class Root(rend.Page):
     """Render a custom and normal form for an ISomething.
     """
-    implements(ISomething)
     addSlash = True
     
     child_webform_css = webform.defaultCSS
@@ -139,6 +133,13 @@
     def doSomething(self, ctx, **kwargs):
         print '***** doSomething called with:', kwargs
     
+    def bind_doSomething(self, ctx):
+        return [
+            ( 'ctx', annotate.Context() ),
+            ( 'fee', annotate.String(required=True, description="Wee!") ),
+            ( 'fi', annotate.Integer(description="Tra-la-la") ),
+            ( 'fo', annotate.Text() ),
+            ( 'fum', annotate.String() )]
     docFactory = loaders.stan(
         T.html[
             T.head[
