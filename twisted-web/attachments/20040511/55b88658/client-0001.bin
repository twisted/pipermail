--- /usr/lib/python2.3/site-packages/twisted/web/client.py	2004-05-05 09:50:49.000000000 -0400
+++ client.py	2004-02-27 10:30:50.000000000 -0500
@@ -22,7 +22,7 @@
 API Stability: unstable
 """

-import urlparse, os, types
+import urlparse, os, types, base64

 from twisted.protocols import http
 from twisted.internet import defer, protocol, reactor
@@ -199,7 +194,7 @@

     def __init__(self, url, method='GET', postdata=None, headers=None,
                  agent="Twisted PageGetter", timeout=0, cookies=None,
-                 followRedirect=1):
+                 followRedirect=1, user=None, password=None, delimiter='\r\n'):
         self.protocol.followRedirect = followRedirect
         self.timeout = timeout
         self.agent = agent
@@ -207,10 +202,17 @@
         if cookies is None:
             cookies = {}
         self.cookies = cookies
+
         if headers is not None:
             self.headers = InsensitiveDict(headers)
         else:
             self.headers = InsensitiveDict()
+
+        if user and password:
+            cred = '%s:%s' % (user, password)
+            auth = "Basic " + base64.encodestring(cred).replace('\012','')
+            self.headers.setdefault('Authorization', auth)
+
         if postdata is not None:
             self.headers.setdefault('Content-Length', len(postdata))
         self.postdata = postdata
@@ -222,6 +224,8 @@
         self.deferred = defer.Deferred()
         self.response_headers = None

+        self.delimiter = delimiter
+
     def __repr__(self):
         return "<%s: %s>" % (self.__class__.__name__, self.url)

@@ -236,6 +240,7 @@

     def buildProtocol(self, addr):
         p = protocol.ClientFactory.buildProtocol(self, addr)
+        p.delimiter = self.delimiter
         if self.timeout:
             reactor.callLater(self.timeout, p.timeout)
         return p
