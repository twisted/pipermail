from nevow.tags import *
from nevow import loaders
from formless import iformless
from formless.webform import valToKey, isSelected

# this is the most generic form layout (for MethodBinding style) that I
# could come up with.  It is meant to be a starting point for more
# involved markups.

formSkin = loaders.stan(
             div(_class='freeform-form')[
               form(action=slot('form-action'), enctype='multipart/form-data',
                    method='post', id=slot('form-id'),
                    pattern='freeform-form', **{'accept-charset': 'utf-8'})[
                 fieldset[
                   input(type='hidden', name='_charset_'),
                   legend(_class='freeform-form-label')[slot('form-label')],
                   div(_class='freeform-form-description')[
                     slot('form-description')],
                   div(_class='freeform-form-error')[slot('form-error')],
                   # this is where all the form elements will be placed
                   slot('form-arguments'),
                   # this the general pattern corresponding to
                   # arguments in your method
                   invisible(pattern="argument")[
                     label(_class="freeform-label", _for=slot('id'))[
                       slot('label')
                     ],
                     span(_class="freeform-input")[
                       slot('input')
                     ],
                     div(_class="freeform-error")[ slot('error') ],
                     div(_class="freeform-description")[
                       label(_for=slot('id'))[ slot('description') ]
                     ],
                     # pattern for <select> elements.  You don't need to
                     # include this if you don't want to modify the select
                     invisible(pattern="selector")[
                       select(id=slot('id'), name=slot('name'),
                              render=directive('sequence'))[
                         option(pattern="item", 
                                value=valToKey, 
                                render=isSelected)[
                           lambda c, d: iformless.ITyped(c).stringify(d)]
                       ]
                     ],

                   ],
                   # pattern for the submit button
                   invisible(pattern="form-button")[
                     div(_class='freeform-button')[slot('input')]
                   ],
                   # OK, here's the reason for all this mess.  I get
                   # to stick the extra buttons where I want them.
                   # You would check for button clicks with code like
                   #   if 'Clone' in request.args['action']: ...
                   div(_class='freeform-button')[input(type="submit",
                                                       name="action",
                                                       value="Clone")],
                   div(_class='freeform-button')[input(type="submit",
                                                       name="action",
                                                       value="Search")],
                   div(_class='freeform-button')[input(type="submit",
                                                       name="action",
                                                       value="Cancel")],
                   div(_class='freeform-delete-button')[input(type="submit",
                                                              name="action",
                                                              value="Delete")]
                                                              
                 ]
               ]
             ]
           ).load()