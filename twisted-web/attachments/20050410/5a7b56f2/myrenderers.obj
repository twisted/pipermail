from nevow import compy
from nevow import inevow
from nevow.context import NodeNotFound
from nevow.tags import *
from formless import annotate
from formless import iformless
from formless.formutils import keyToXMLID

class MyButton(annotate.Button):
    pass

class MyButtonRenderer(compy.Adapter):
    __implements__ = inevow.IRenderer,

    default_button = div(_class='formless-button')[
                      input(type='submit', value=slot('label'),
                            name=slot('name'), id=slot('id'))]

    def rend(self, context, data):
        try:
            button = context.tag.patternGenerator( 'button' )
        except NodeNotFound:
            button = self.default_button
        context.tag.clear()
        context.tag[button()]
        context.fillSlots( 'label', data.label )
        context.fillSlots( 'name', data.name )
        context.fillSlots( 'id', keyToXMLID(context.key) )
        return context.tag

compy.registerAdapter(MyButtonRenderer, MyButton, iformless.ITypedRenderer)

