Index: nevow/canvas.py
===================================================================
--- nevow/canvas.py	(revision 1242)
+++ nevow/canvas.py	(working copy)
@@ -7,7 +7,6 @@
 from twisted.python import log
 
 from nevow import inevow, rend, loaders, static, url, tags
-from nevow.flat import flatten
 from nevow.stan import Proto, Tag
 
 from itertools import count
@@ -109,9 +108,8 @@
         will be converted to strings. You should probably use the other higher-level
         apis instead.
         """
-        flatcall = flatten(
-            m(n=method, t=self.groupName)[[
-                squish(x) for x in args if x is not None]])
+        flatcall = "^".join([method, self.groupName] +[
+                str(x) for x in args if x is not None])
         self.socket.write(flatcall + '\0')
 
     groupx = 0
Index: nevow/canvas.as
===================================================================
--- nevow/canvas.as	(revision 1242)
+++ nevow/canvas.as	(working copy)
@@ -103,7 +103,7 @@
     var ra = extractList(ratios);
     var ma = extractDict(matrix);
     canvas.beginGradientFill(
-        type, cl, al, ra, ma) }
+        type, cl, al, ra, ma); }
 
 function curve(canvas, controlX, controlY, anchorX, anchorY) {
     canvas.curveTo(
@@ -126,7 +126,7 @@
 
 function pen(canvas, w, c, a) {
     if (a) {
-        canvas.lineStyle(Number(w), Number(c), Number(a)) }
+        canvas.lineStyle(Number(w), Number(c), Number(a)); }
     else if (c) {
         canvas.lineStyle(Number(w), Number(c)); } 
     else if (w) {
@@ -239,25 +239,13 @@
 
 // SERVER GLUE
 
-server.onXML = function(xml) {
-	xml = xml.firstChild;
-	var funcName = xml.attributes['n'];
-	var func = eval(funcName);
-	var parms = [];
+server.onData = function(data) {
+  data = data.split("^");
+  var func = _root[data.shift()];
+  data[0] = extractGroup(data[0]);
+  func.apply(groupTarget, data);
+}
 
-    parms.push(
-        extractGroup(xml.attributes['t']));
-
-	for(i=0; i<xml.childNodes.length; i++) {
-        if (xml.childNodes[i].attributes['v']){
-            parms.push(
-                xml.childNodes[i].attributes['v']); }
-        else {
-            parms.push(
-                xml.childNodes[i].childNodes[0].childNodes); } }
-
-	func.apply(groupTarget, parms); }
-
 server.onConnect = function(success) {
 	if (success) {
 		server.send(
Index: nevow/Canvas.rvml
===================================================================
--- nevow/Canvas.rvml	(revision 0)
+++ nevow/Canvas.rvml	(revision 0)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
+<!--
+
+This file can be used to generate Canvas.swf without need 
+of the Canvas.fla file nor of the Flash IDE.
+
+In order to do so you need Java 1.4.x and KineticFusion, 
+a free Java SWF compiler, download and installation 
+instructions can be found here:
+
+http://www.kinesissoftware.com/download/index.php
+
+The KineticFusion Free Edition is enough (the commercial
+versions will also work).
+
+After you installed KineticFusion into some folder (eg. 
+/opt/KineticFusion ) you can build the Canvas.swf file
+by changing directory to where this Canvas.rvml and the 
+canvas.as are and by issuing the following command:
+
+java -Dkinesis.actionscript.includePath=. \
+     -jar /opt/KineticFusion/KineticFusion.jar \
+		 processFile toSWF Canvas.rvml Canvas.swf
+		 
+You may need to adjust the above path to match the actual 
+path of the KineticFusion jar file on your system.
+
+-->
+<Movie version='7' width='1' height='1' rate='30' backgroundColor='white' compressed='Yes' xmlns='http://www.kineticfusion.org/RVML/1.0'>
+	<Timeline frameCount='1'>
+		<Frame frameNo='1'>
+			<FrameActions><![CDATA[
+#include "canvas.as"
+]]></FrameActions>
+		</Frame>
+	</Timeline>
+</Movie>
