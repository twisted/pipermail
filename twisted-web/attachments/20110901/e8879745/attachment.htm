<tt>
Hi&nbsp;Stephan,&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;&lt;br&gt;<br>
from&nbsp;what&nbsp;I&nbsp;understand&nbsp; @defer.inlineCallbacks&nbsp;is&nbsp;used&nbsp;to&nbsp;defer&nbsp;a&lt;br&gt;<br>
async&nbsp;callback&nbsp;function&nbsp;like&nbsp;how&nbsp;i&amp;#39;m&nbsp;using&nbsp;CallLater&nbsp;below,&nbsp;but&nbsp;where&lt;br&gt;<br>
is&nbsp;the&nbsp;yield&nbsp;supposed&nbsp;to&nbsp;be?&nbsp;and&nbsp;how&nbsp;should&nbsp;the&nbsp;below&nbsp;code&nbsp;change?&lt;br&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;advantage&nbsp;defer.inlineCallbacks&nbsp;offers&nbsp;is&nbsp;allowing&nbsp;one&nbsp;to&nbsp;wait&nbsp;on&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;deferred&nbsp;inline,&nbsp;without&nbsp;having&nbsp;nested&nbsp;blocks&nbsp;and&nbsp;closures.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;a&nbsp;generic&nbsp;example&nbsp;could&nbsp;be:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Without&nbsp;inlinecallbacks:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;def&nbsp;my_func():&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;d&nbsp;=&nbsp;func_returnning_deferred()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;handle_result(r):&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#&nbsp;do&nbsp;something&nbsp;with&nbsp;r&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;..&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;d.addCallback(handle_result)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;return&nbsp;d&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;With&nbsp;inlineCallbacks:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;@defer.inlineCallbacks&lt;/div&gt;<br>
&lt;div&gt;def&nbsp;my_func():&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; r&nbsp;=&nbsp;yield&nbsp;func_returning_deferred()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; #&nbsp;do&nbsp;stuff&nbsp;with&nbsp;r&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You&nbsp;can&nbsp;see&nbsp;that&nbsp;we&nbsp;don&amp;#39;t&nbsp;have&nbsp;to&nbsp;have&nbsp;a&nbsp;nested&nbsp;block&nbsp;with&nbsp;an&nbsp;addCallback.&nbsp;Here&nbsp;the&nbsp;yield&nbsp;returns&nbsp;the&nbsp;result&nbsp;that&nbsp;we&amp;#39;d&nbsp;get&nbsp;in&nbsp;our&nbsp;callback&nbsp;function&nbsp;(an&nbsp;likewise&nbsp;if&nbsp;the&nbsp;errBack&nbsp;fired&nbsp;we&amp;#39;ve&nbsp;have&nbsp;to&nbsp;wrap&nbsp;that&nbsp;line&nbsp;in&nbsp;a&nbsp;try/except&nbsp;to&nbsp;handle&nbsp;it).&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Keep&nbsp;in&nbsp;mind&nbsp;however&nbsp;that&nbsp;@defer.inlineCallbacks&nbsp;can&nbsp;only&nbsp;wrap&nbsp;generators&nbsp;(functions&nbsp;with&nbsp;a&nbsp;yield&nbsp;statement&nbsp;in&nbsp;it)&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
&nbsp; &nbsp; def&nbsp;connectionMade(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; logging.debug(&amp;quot;connection&nbsp;made&nbsp;timeout&nbsp;=&nbsp;%d&amp;quot;,&nbsp;self.timeout)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; @defer.inlineCallbacks&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; def&nbsp;onTimer():&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; logging.debug(&amp;quot;timeout&nbsp;triggered&amp;quot;)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.firefoxProcess.handleProcessTimedOut()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.killProcessIfAlive()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;reactor.callLater(self.timeout,&nbsp;onTimer)&lt;/blockquote&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;You&nbsp;can&nbsp;see&nbsp;here&nbsp;that&nbsp;onTimer&nbsp;is&nbsp;not&nbsp;a&nbsp;generator&nbsp;(there&amp;#39;s&nbsp;no&nbsp;yield)&nbsp;so&nbsp;defer.inlineCallbacks&nbsp;cannot&nbsp;be&nbsp;applied&nbsp;to&nbsp;it.&nbsp;Also,&nbsp;based&nbsp;on&nbsp;what&nbsp;you&amp;#39;re&nbsp;doing&nbsp;you&nbsp;don&amp;#39;t&nbsp;need&nbsp;it&nbsp;(i.e.&nbsp;you&nbsp;can&nbsp;just&nbsp;remove&nbsp;it).&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Keep&nbsp;in&nbsp;mind&nbsp;that&nbsp;callLater&nbsp;doesn&amp;#39;t&nbsp;return&nbsp;a&nbsp;deferred&nbsp;-&nbsp;it&nbsp;just&nbsp;schedules&nbsp;onTimer&nbsp;to&nbsp;be&nbsp;called&nbsp;at&nbsp;a&nbsp;later&nbsp;time,&nbsp;which&nbsp;makes&nbsp;sense&nbsp;for&nbsp;what&nbsp;you&nbsp;are&nbsp;doing.&nbsp;If&nbsp;for&nbsp;some&nbsp;reason&nbsp;you&nbsp;want&nbsp;a&nbsp;deferred,&nbsp;I&amp;#39;d&nbsp;take&nbsp;a&nbsp;look&nbsp;at&nbsp;twisted.internet.task.deferLater.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Hope&nbsp;that&nbsp;helps,&lt;/div&gt;&lt;div&gt;Reza&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;--&nbsp;&lt;br&gt;Reza&nbsp;Lotun&lt;br&gt;mobile:&nbsp;+44&nbsp;(0)7521&nbsp;310&nbsp;763&lt;br&gt;email: &nbsp;&lt;a&nbsp;href=&quot;mailto:rlotun@gmail.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rlotun@gmail.com&lt;/a&gt;&lt;br&gt;work:  &nbsp;&lt;a&nbsp;href=&quot;mailto:rlotun@twitter.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rlotun@twitter.com&lt;/a&gt;&lt;br&gt;<br>
@rlotun&lt;br&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;<br>

</tt>
