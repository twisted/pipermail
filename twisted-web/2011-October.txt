From jaroslaw.fedewicz at gmail.com  Sat Oct  1 10:22:12 2011
From: jaroslaw.fedewicz at gmail.com (=?utf-8?Q?Jaros=C5=82aw_Fedewicz?=)
Date: Sat, 1 Oct 2011 17:22:12 +0300
Subject: [Twisted-web] CorePost 0.0.7 - all about content types
In-Reply-To: <CAGDztiFAVz5LfrXcKNuofzudPNh_41T9viGFHdDGTE0gJZ772g@mail.gmail.com>
References: <CAGDztiHiRKVjmA=-UQ=-3TXLAbev0dXzTZS9ORTmda0jW__Sig@mail.gmail.com>
	<D84D3FF0-04D1-408A-94D4-BE468F21D770@twistedmatrix.com>
	<CAGDztiFAVz5LfrXcKNuofzudPNh_41T9viGFHdDGTE0gJZ772g@mail.gmail.com>
Message-ID: <726477D3-705B-43CA-93D5-D69D0805F7F8@gmail.com>


On Sep 30, 2011, at 16:08 , Jacek Furmankiewicz wrote:

> Once I am done with all of this I will have a serious look at AMPoule to get that out-of-the-box multi-core support.
> 
> So the next release 0.0.8 should finish all the content type stuff and then for 0.0.9 should start looking at AMPoule.

Can I request that looking at AMPoule doesn't result in it being a required dependency?

AMPoule is just one implementation of multiprocessing + IPC, would be a pity to have to patch it heavily so that it works with other multiprocessing schemes (including homebrew ones) or with none at all.

From jacek99 at gmail.com  Sat Oct  1 14:51:23 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Sat, 1 Oct 2011 14:51:23 -0400
Subject: [Twisted-web] CorePost 0.0.7 - all about content types
In-Reply-To: <726477D3-705B-43CA-93D5-D69D0805F7F8@gmail.com>
References: <CAGDztiHiRKVjmA=-UQ=-3TXLAbev0dXzTZS9ORTmda0jW__Sig@mail.gmail.com>
	<D84D3FF0-04D1-408A-94D4-BE468F21D770@twistedmatrix.com>
	<CAGDztiFAVz5LfrXcKNuofzudPNh_41T9viGFHdDGTE0gJZ772g@mail.gmail.com>
	<726477D3-705B-43CA-93D5-D69D0805F7F8@gmail.com>
Message-ID: <CAGDztiE6PQDzschYnjy=Ep1Rz7FSvATcnt+xsX4AEfJwrOyDzg@mail.gmail.com>

Well, I plan to look at out-of-the-box support for:

a) simple HTTP proxy/load balancer (instead of nginx)

A simple runner that starts up "root" CorePost process and then starts up
the real app on multiple local ports. Does simple load balancing between
them. Not the most efficient (extra HTTP call), but simple to set up and
*maybe* good enough for many apps

b) Ampoule

Mostly because the devs here recommended that approach. It seems a bit
verbose (from the little docs I've seen), requires custom command classes,
etc.). Not sure what the impact will be on ease-of-use and the API. It looks
a bit daunting in terms of coding overhead.

c) ZeroMQ (basically the Mongrel2 model)

Single CorePost app posting messages to ZeroMQ, single receiver on each
process picking them up and distributing to the appropriate router
functions. Could be very fast, but requires external dependency (ZeroMQ).

These are some of the idea I had for multicore support...any comments or
suggestions for better approaches are welcome.

Jacek

2011/10/1 Jaros?aw Fedewicz <jaroslaw.fedewicz at gmail.com>

>
> On Sep 30, 2011, at 16:08 , Jacek Furmankiewicz wrote:
>
> > Once I am done with all of this I will have a serious look at AMPoule to
> get that out-of-the-box multi-core support.
> >
> > So the next release 0.0.8 should finish all the content type stuff and
> then for 0.0.9 should start looking at AMPoule.
>
> Can I request that looking at AMPoule doesn't result in it being a required
> dependency?
>
> AMPoule is just one implementation of multiprocessing + IPC, would be a
> pity to have to patch it heavily so that it works with other multiprocessing
> schemes (including homebrew ones) or with none at all.
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111001/e162277c/attachment.htm 

From jaroslaw.fedewicz at gmail.com  Sat Oct  1 15:48:29 2011
From: jaroslaw.fedewicz at gmail.com (=?utf-8?Q?Jaros=C5=82aw_Fedewicz?=)
Date: Sat, 1 Oct 2011 22:48:29 +0300
Subject: [Twisted-web] CorePost 0.0.7 - all about content types
In-Reply-To: <CAGDztiE6PQDzschYnjy=Ep1Rz7FSvATcnt+xsX4AEfJwrOyDzg@mail.gmail.com>
References: <CAGDztiHiRKVjmA=-UQ=-3TXLAbev0dXzTZS9ORTmda0jW__Sig@mail.gmail.com>
	<D84D3FF0-04D1-408A-94D4-BE468F21D770@twistedmatrix.com>
	<CAGDztiFAVz5LfrXcKNuofzudPNh_41T9viGFHdDGTE0gJZ772g@mail.gmail.com>
	<726477D3-705B-43CA-93D5-D69D0805F7F8@gmail.com>
	<CAGDztiE6PQDzschYnjy=Ep1Rz7FSvATcnt+xsX4AEfJwrOyDzg@mail.gmail.com>
Message-ID: <88172B36-5109-4842-8C9D-9A20AAC1E217@gmail.com>


On Oct 1, 2011, at 21:51 , Jacek Furmankiewicz wrote:

> Well, I plan to look at out-of-the-box support for:
> 
> [snip]
> Jacek
Again, there is such thing as concern separation. I would welcome all those as separate packages, but if CorePost made me do extra work to keep irrelevant bits out, it would be useless. It would be far more simple then for me to roll my own library which would just serve web requests and do no more than that.

Let me stress. A separate package that does web serving. A separate one for load balancing proxy. A separate one to work with AMPoule. A separate one to work with ZeroMQ. Not all-in-one blob which has all the shiny bits included there just in case which I'll never ever need.

If I were you, I would even separate data formats support (XML/JSON/YAML/whatever else is there). Just provide an interface every data format adapter must implement. There might be people who would want ASN.1, like it or not...

The reason is simple, your users might have their own libraries and solutions, there might be even actual reasons for them to have them, and it just doesn't work in the enterprise environment like ?Hey, let's add a bunchload of these cool 3rd party libraries just in case?. They might have a load-balancing infrastructure of their own in place, Twisted or not. They might actually *prefer* nginx for some reason. They might have other libraries to do data formats handling (there's a big reason behind Jython's existence, namely, have all those funky Java libraries here and now). What they face would be supporting two different process management infrastuctures instead of one, or support two libraries which basically do one thing, instead of one library. This is going to be at least as twice as expensive, if not even more expensive if you ever try to glue those things together and get them to play nicely with one another.



From jacek99 at gmail.com  Sun Oct  2 07:08:01 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Sun, 2 Oct 2011 07:08:01 -0400
Subject: [Twisted-web] CorePost 0.0.7 - all about content types
In-Reply-To: <88172B36-5109-4842-8C9D-9A20AAC1E217@gmail.com>
References: <CAGDztiHiRKVjmA=-UQ=-3TXLAbev0dXzTZS9ORTmda0jW__Sig@mail.gmail.com>
	<D84D3FF0-04D1-408A-94D4-BE468F21D770@twistedmatrix.com>
	<CAGDztiFAVz5LfrXcKNuofzudPNh_41T9viGFHdDGTE0gJZ772g@mail.gmail.com>
	<726477D3-705B-43CA-93D5-D69D0805F7F8@gmail.com>
	<CAGDztiE6PQDzschYnjy=Ep1Rz7FSvATcnt+xsX4AEfJwrOyDzg@mail.gmail.com>
	<88172B36-5109-4842-8C9D-9A20AAC1E217@gmail.com>
Message-ID: <CAGDztiFv9ouwhVmQcF8rbM4-chWObgaGzMwz6LP7mDg=+bGkeg@mail.gmail.com>

Well, I see your point, but do not necessarily agree.

As a mostly Java guy (that's what I do at work 90% of the time), I deal
daily with the complexity of these dozens of tiny little libs that you can
assemble...as a result my Maven pom.xml file is hundreds of lines long.

There is something to be said about an "all batteries included" approach
that handles 80% of the most common use cases out of the box. Handling the
other 20% often entails so much more additional complexity, that maybe it's
just better to leave it to a hand-rolled solution anyway.

Django rolls a lot of things into one complete package...and that is the
reason we are slowly moving all of our Java / .Net code to it (for web
development). There is value to this level of integration, even if it
doesn't do everything for everybody.

Jacek

2011/10/1 Jaros?aw Fedewicz <jaroslaw.fedewicz at gmail.com>

>
> On Oct 1, 2011, at 21:51 , Jacek Furmankiewicz wrote:
>
> > Well, I plan to look at out-of-the-box support for:
> >
> > [snip]
> > Jacek
> Again, there is such thing as concern separation. I would welcome all those
> as separate packages, but if CorePost made me do extra work to keep
> irrelevant bits out, it would be useless. It would be far more simple then
> for me to roll my own library which would just serve web requests and do no
> more than that.
>
> Let me stress. A separate package that does web serving. A separate one for
> load balancing proxy. A separate one to work with AMPoule. A separate one to
> work with ZeroMQ. Not all-in-one blob which has all the shiny bits included
> there just in case which I'll never ever need.
>
> If I were you, I would even separate data formats support
> (XML/JSON/YAML/whatever else is there). Just provide an interface every data
> format adapter must implement. There might be people who would want ASN.1,
> like it or not...
>
> The reason is simple, your users might have their own libraries and
> solutions, there might be even actual reasons for them to have them, and it
> just doesn't work in the enterprise environment like "Hey, let's add a
> bunchload of these cool 3rd party libraries just in case". They might have a
> load-balancing infrastructure of their own in place, Twisted or not. They
> might actually *prefer* nginx for some reason. They might have other
> libraries to do data formats handling (there's a big reason behind Jython's
> existence, namely, have all those funky Java libraries here and now). What
> they face would be supporting two different process management
> infrastuctures instead of one, or support two libraries which basically do
> one thing, instead of one library. This is going to be at least as twice as
> expensive, if not even more expensive if you ever try to glue those things
> together and get them to play nicely with one another.
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111002/4659cacb/attachment.htm 

From twistedwebmailinglist at ominian.net  Sun Oct  2 16:49:36 2011
From: twistedwebmailinglist at ominian.net (David J W)
Date: Sun, 2 Oct 2011 14:49:36 -0600
Subject: [Twisted-web] Hello introductions to me and one of my pet projects
Message-ID: <CAPKNibjcKPpp88O=MqkbZF_S+BFoAu01ZA=muFkyRposOn+V=Q@mail.gmail.com>

Hello,
    I've been using Twisted on and off now for about four years, mostly for
personal projects and some R&D work for a few startups.  I've been a
semi-professional Python programmer for four years as well, unfortunately it
only makes up about 15-20% of my annual income.  That said for Python web
development I was rather fond of Pylons and then moved from it to CherryPy.
 With those two frameworks influencing me, I wanted a similar interface for
Twisted.Web and after a lot of trial and error I've got an alpha version
proof of concept that is simply called txWeb.
https://github.com/devdave/txWeb

Very briefly using an example from JCalderone's wonderful collection of
tutorial/examples:
http://jcalderone.livejournal.com/49707.html

Instead of doing

from twisted.web.server import Site
from twisted.web.resource import Resource
from twisted.internet import reactor

class FormPage(Resource):
       def render_GET(self, request)
            return '<html><body><form method="POST"><input name="the-field"
type="text" /></form></body></html>'

       def render_POST(self, request):
             return '<html><body>You submitted: %s</body></html>' %
(cgi.escape(request.args["the-field"][0]),)


root = Resource()
root.putChild("form", FormPage() )
factory = Site(root)
reactor.listenTCP(8880, factory)
reactor.run()


the alternative would be:

from txweb.core import Site
#from twisted.web.resource import Resource
from twisted.internet import reactor
import cgi

class Root(object):



    def form(self, request):
        return '<html><body><form action="/process" method="POST"><input
name="the-field" type="text" /></form></body></html>'
    form.exposed = True

    index = form

    def process(self, request):
        return '<html><body>You submitted: %s</body></html>' %
(cgi.escape(request.args["the-field"][0]),)
    process.exposed = True

reactor.listenTCP(8880, Site(Root()))
reactor.run()


A cleaner version of the example above is available @
https://gist.github.com/1257921

My goals with txWeb isn't to replace the twisted.web Resource mechanism but
instead provide an alternative that friendlier towards those with experience
with Pylons/CherryPy/Django while avoiding duplicating anything that
twisted.web provides ( ex. File resources can be class attributes )


That all said, any critique's or constructive input is very much welcome.
So far I know the unit-tests need to be cleaned up, inside the routing
routeRequest method the wrapper OneTimeResource is created, used, and thrown
away which is somewhat wasteful as its a mostly stateless object.  But I'm
not sure if I'm missing something big that could make txWeb unviable for
production use without some sort of major refactoring.


Thanks,
    David W.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111002/4a12c692/attachment.htm 

From jacek99 at gmail.com  Sun Oct  2 18:53:56 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Sun, 2 Oct 2011 18:53:56 -0400
Subject: [Twisted-web] Hello introductions to me and one of my pet
	projects
In-Reply-To: <CAPKNibjcKPpp88O=MqkbZF_S+BFoAu01ZA=muFkyRposOn+V=Q@mail.gmail.com>
References: <CAPKNibjcKPpp88O=MqkbZF_S+BFoAu01ZA=muFkyRposOn+V=Q@mail.gmail.com>
Message-ID: <CAGDztiFfcLFYh5GQNOSqE-r_+q01J+x4AzQGV6sw8-vd1jLmFQ@mail.gmail.com>

Hi David, I've been trying to the same thing :-)
although keeping the Resource part, which I like (especially because it
automatically handles routing to children),
amongst many things.

Hope you'll like it too:
https://github.com/jacek99/corepost

Cheers,
Jacek

On Sun, Oct 2, 2011 at 4:49 PM, David J W <twistedwebmailinglist at ominian.net
> wrote:

> Hello,
>     I've been using Twisted on and off now for about four years, mostly for
> personal projects and some R&D work for a few startups.  I've been a
> semi-professional Python programmer for four years as well, unfortunately it
> only makes up about 15-20% of my annual income.  That said for Python web
> development I was rather fond of Pylons and then moved from it to CherryPy.
>  With those two frameworks influencing me, I wanted a similar interface for
> Twisted.Web and after a lot of trial and error I've got an alpha version
> proof of concept that is simply called txWeb.
> https://github.com/devdave/txWeb
>
> Very briefly using an example from JCalderone's wonderful collection of
> tutorial/examples:
> http://jcalderone.livejournal.com/49707.html
>
> Instead of doing
>
> from twisted.web.server import Site
> from twisted.web.resource import Resource
> from twisted.internet import reactor
>
> class FormPage(Resource):
>        def render_GET(self, request)
>             return '<html><body><form method="POST"><input name="the-field"
> type="text" /></form></body></html>'
>
>        def render_POST(self, request):
>              return '<html><body>You submitted: %s</body></html>' %
> (cgi.escape(request.args["the-field"][0]),)
>
>
> root = Resource()
> root.putChild("form", FormPage() )
> factory = Site(root)
> reactor.listenTCP(8880, factory)
> reactor.run()
>
>
> the alternative would be:
>
> from txweb.core import Site
> #from twisted.web.resource import Resource
> from twisted.internet import reactor
> import cgi
>
> class Root(object):
>
>
>
>     def form(self, request):
>         return '<html><body><form action="/process" method="POST"><input
> name="the-field" type="text" /></form></body></html>'
>     form.exposed = True
>
>     index = form
>
>     def process(self, request):
>         return '<html><body>You submitted: %s</body></html>' %
> (cgi.escape(request.args["the-field"][0]),)
>     process.exposed = True
>
> reactor.listenTCP(8880, Site(Root()))
> reactor.run()
>
>
> A cleaner version of the example above is available @
> https://gist.github.com/1257921
>
> My goals with txWeb isn't to replace the twisted.web Resource mechanism but
> instead provide an alternative that friendlier towards those with experience
> with Pylons/CherryPy/Django while avoiding duplicating anything that
> twisted.web provides ( ex. File resources can be class attributes )
>
>
> That all said, any critique's or constructive input is very much welcome.
> So far I know the unit-tests need to be cleaned up, inside the routing
> routeRequest method the wrapper OneTimeResource is created, used, and thrown
> away which is somewhat wasteful as its a mostly stateless object.  But I'm
> not sure if I'm missing something big that could make txWeb unviable for
> production use without some sort of major refactoring.
>
>
> Thanks,
>     David W.
>
>
>
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111002/46b06a63/attachment.htm 

From kmcintyre at greenchargenet.com  Wed Oct  5 12:39:35 2011
From: kmcintyre at greenchargenet.com (Kevin McIntyre)
Date: Wed, 5 Oct 2011 09:39:35 -0700
Subject: [Twisted-web] ssl verify callback called multiple times for each
	request
Message-ID: <CAFvbmcnOwQnrtFMk1GGn5UPTHo=Js6LCw1z6TQqjTKc8r=+UwQ@mail.gmail.com>

Hello, I'm wondering why the verify callback is called multiple times for
each request.  I get 2 invalid callbacks and 1 valid callback.  The 2
invalids are errnum 18, then 26...then a valid callback.

I used https://help.ubuntu.com/community/OpenSSL for ca, and signed server
and client certificates.

-- 

Kevin McIntyre | Software Engineer | *Green Charge Networks*

Cell 718-249-5058 | kmcintyre at greenchargenet.com | www.greenchargenet.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111005/eb173c51/attachment.htm 

From exarkun at twistedmatrix.com  Wed Oct  5 19:41:59 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 05 Oct 2011 23:41:59 -0000
Subject: [Twisted-web] ssl verify callback called multiple times for
	each	request
In-Reply-To: <CAFvbmcnOwQnrtFMk1GGn5UPTHo=Js6LCw1z6TQqjTKc8r=+UwQ@mail.gmail.com>
References: <CAFvbmcnOwQnrtFMk1GGn5UPTHo=Js6LCw1z6TQqjTKc8r=+UwQ@mail.gmail.com>
Message-ID: <20111005234159.23178.1138968082.divmod.xquotient.0@localhost.localdomain>

On 04:39 pm, kmcintyre at greenchargenet.com wrote:
>Hello, I'm wondering why the verify callback is called multiple times 
>for
>each request.  I get 2 invalid callbacks and 1 valid callback.  The 2
>invalids are errnum 18, then 26...then a valid callback.
>
>I used https://help.ubuntu.com/community/OpenSSL for ca, and signed 
>server
>and client certificates.

It's called back once for each certificate in the certificate chain 
presented by the peer.

Jean-Paul


From jacek99 at gmail.com  Wed Oct 12 17:43:24 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 12 Oct 2011 17:43:24 -0400
Subject: [Twisted-web] Twisted web templates: do they support loops?
Message-ID: <CAGDztiH0xsabgsF+=_onb4Q2rOj6nwPcTAoJFhJz47cNvEW34w@mail.gmail.com>

Looking at the (somewhat sparse) docs for twisted web templates:
http://twistedmatrix.com/documents/current/web/howto/twisted-templates.html

I see no mention of loops, like in Jinja2:

{% for item in items %}
<sometag>{{item.someproperty}}</sometag>
{% endfor %}

Is something like this supported?

thx
Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111012/a2b4c174/attachment.htm 

From exarkun at twistedmatrix.com  Wed Oct 12 17:48:47 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 12 Oct 2011 21:48:47 -0000
Subject: [Twisted-web] Twisted web templates: do they support loops?
In-Reply-To: <CAGDztiH0xsabgsF+=_onb4Q2rOj6nwPcTAoJFhJz47cNvEW34w@mail.gmail.com>
References: <CAGDztiH0xsabgsF+=_onb4Q2rOj6nwPcTAoJFhJz47cNvEW34w@mail.gmail.com>
Message-ID: <20111012214847.23178.1929438070.divmod.xquotient.403@localhost.localdomain>

On 09:43 pm, jacek99 at gmail.com wrote:
>Looking at the (somewhat sparse) docs for twisted web templates:
>http://twistedmatrix.com/documents/current/web/howto/twisted- 
>templates.html
>
>I see no mention of loops, like in Jinja2:
>
>{% for item in items %}
><sometag>{{item.someproperty}}</sometag>
>{% endfor %}
>
>Is something like this supported?

See the recently added documentation on just this topic:

http://twistedmatrix.com/trac/changeset/32754

Jean-Paul


From jacek99 at gmail.com  Wed Oct 12 17:58:22 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Wed, 12 Oct 2011 17:58:22 -0400
Subject: [Twisted-web] Twisted web templates: do they support loops?
In-Reply-To: <20111012214847.23178.1929438070.divmod.xquotient.403@localhost.localdomain>
References: <CAGDztiH0xsabgsF+=_onb4Q2rOj6nwPcTAoJFhJz47cNvEW34w@mail.gmail.com>
	<20111012214847.23178.1929438070.divmod.xquotient.403@localhost.localdomain>
Message-ID: <CAGDztiGyzXOyYHCSSDAG3vfc+BizG1XZmx+WUcndpFUkEfpimA@mail.gmail.com>

Could you show a simple with both the XML and the render function?
It's not perfectly clear from the new docs how do you define the loop
start/end in the template....

Cheers,
Jacek

On Wed, Oct 12, 2011 at 5:48 PM, <exarkun at twistedmatrix.com> wrote:

> On 09:43 pm, jacek99 at gmail.com wrote:
> >Looking at the (somewhat sparse) docs for twisted web templates:
> >http://twistedmatrix.com/documents/current/web/howto/twisted-
> >templates.html
> >
> >I see no mention of loops, like in Jinja2:
> >
> >{% for item in items %}
> ><sometag>{{item.someproperty}}</sometag>
> >{% endfor %}
> >
> >Is something like this supported?
>
> See the recently added documentation on just this topic:
>
> http://twistedmatrix.com/trac/changeset/32754
>
> Jean-Paul
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111012/63c32fb8/attachment.htm 

From exarkun at twistedmatrix.com  Wed Oct 12 18:10:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 12 Oct 2011 22:10:25 -0000
Subject: [Twisted-web] Twisted web templates: do they support loops?
In-Reply-To: <CAGDztiGyzXOyYHCSSDAG3vfc+BizG1XZmx+WUcndpFUkEfpimA@mail.gmail.com>
References: <CAGDztiH0xsabgsF+=_onb4Q2rOj6nwPcTAoJFhJz47cNvEW34w@mail.gmail.com>
	<20111012214847.23178.1929438070.divmod.xquotient.403@localhost.localdomain>
	<CAGDztiGyzXOyYHCSSDAG3vfc+BizG1XZmx+WUcndpFUkEfpimA@mail.gmail.com>
Message-ID: <20111012221025.23178.1099467046.divmod.xquotient.405@localhost.localdomain>

On 09:58 pm, jacek99 at gmail.com wrote:
>Could you show a simple with both the XML and the render function?
>It's not perfectly clear from the new docs how do you define the loop
>start/end in the template....

You cannot define the loop in the template.  The template can only use a 
render function with a loop inside it.

Jean-Paul
>Cheers,
>Jacek
>
>On Wed, Oct 12, 2011 at 5:48 PM, <exarkun at twistedmatrix.com> wrote:
>>On 09:43 pm, jacek99 at gmail.com wrote:
>> >Looking at the (somewhat sparse) docs for twisted web templates:
>> >http://twistedmatrix.com/documents/current/web/howto/twisted-
>> >templates.html
>> >
>> >I see no mention of loops, like in Jinja2:
>> >
>> >{% for item in items %}
>> ><sometag>{{item.someproperty}}</sometag>
>> >{% endfor %}
>> >
>> >Is something like this supported?
>>
>>See the recently added documentation on just this topic:
>>
>>http://twistedmatrix.com/trac/changeset/32754
>>
>>Jean-Paul
>>
>>_______________________________________________
>>Twisted-web mailing list
>>Twisted-web at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>


From jacek99 at gmail.com  Thu Oct 13 11:41:05 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 13 Oct 2011 11:41:05 -0400
Subject: [Twisted-web] Ampoule vs PerspectiveBroker
Message-ID: <CAGDztiEjdJJQckXtoMSnRqsPSZ1DrxL0ja9SO_NOYz=W-Veu-g@mail.gmail.com>

Which is the recommended way for interprocess communication these days?

Is it the existing PerspectiveBroker or Ampoule (which uses AMP as the
underlying RPC protocol)?
Are there drawbacks/benefits to either of them?

Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111013/478d4879/attachment.htm 

From glyph at twistedmatrix.com  Thu Oct 13 13:01:51 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 13 Oct 2011 13:01:51 -0400
Subject: [Twisted-web] Ampoule vs PerspectiveBroker
In-Reply-To: <CAGDztiEjdJJQckXtoMSnRqsPSZ1DrxL0ja9SO_NOYz=W-Veu-g@mail.gmail.com>
References: <CAGDztiEjdJJQckXtoMSnRqsPSZ1DrxL0ja9SO_NOYz=W-Veu-g@mail.gmail.com>
Message-ID: <0A13BABD-C12B-4197-BEFC-B4B70B4DA2C8@twistedmatrix.com>


On Oct 13, 2011, at 11:41 AM, Jacek Furmankiewicz wrote:

> Which is the recommended way for interprocess communication these days?
> 
> Is it the existing PerspectiveBroker or Ampoule (which uses AMP as the underlying RPC protocol)?
> Are there drawbacks/benefits to either of them?

Somebody should probably write an AMP vs. PB wiki page or something, this does come up every so often.

Briefly: PB's strength is that it allows you to serialize and synchronize large, complex object graphs with relatively little effort, but more safely and explicitly than (for example) Pickle would allow you to do.  Doing this with AMP would require specifying a large protocol with lots of object IDs, and you'd have to manage their mappings yourself.

AMP's strength is that it's simple and visualizing the wire format is easy.  Most importantly you can visualize the wire format by looking at static declarations of commands and their responses, without ever examining any code.  This allows you to easily provide AMP interfaces between multiple languages (for example, C#: <http://amp-protocol.net/AmpSharp>).  This also means that AMP is a bit more performant (on current trunk, on CPython, ~2300 AMP/sec as opposed to ~1300 PB/sec).

A bit more effort has been going into AMP lately because many core Twisted developers now believe that AMP covers more and more common use-cases, and that should generally be the default choice for most new protocol work.

Bottom line: you should try AMP first, and if you find it's too tedious, maybe give PB a shot and see if it simplifies your protocol code.

From radix at twistedmatrix.com  Thu Oct 13 13:08:27 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 13 Oct 2011 13:08:27 -0400
Subject: [Twisted-web] Ampoule vs PerspectiveBroker
In-Reply-To: <CAGDztiEjdJJQckXtoMSnRqsPSZ1DrxL0ja9SO_NOYz=W-Veu-g@mail.gmail.com>
References: <CAGDztiEjdJJQckXtoMSnRqsPSZ1DrxL0ja9SO_NOYz=W-Veu-g@mail.gmail.com>
Message-ID: <CAPkRfUS=JKY6Jo8J+9D+sWejz3kpEcSLH2Pi-V8mJQnoO_RvXA@mail.gmail.com>

On Thu, Oct 13, 2011 at 11:41 AM, Jacek Furmankiewicz <jacek99 at gmail.com>wrote:

> Which is the recommended way for interprocess communication these days?
>
> Is it the existing PerspectiveBroker or Ampoule (which uses AMP as the
> underlying RPC protocol)?
> Are there drawbacks/benefits to either of them?
>
>
Glyph's response is good, but I wanted to clarify something:

You shouldn't be comparing PB to Ampoule, you should be comparing PB to AMP.
Ampoule is a different kind of thing entirely, it just happens to use AMP
for communication between processes.



-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111013/3af0576c/attachment.htm 

From jacek99 at gmail.com  Thu Oct 13 13:12:30 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Thu, 13 Oct 2011 13:12:30 -0400
Subject: [Twisted-web] Ampoule vs PerspectiveBroker
In-Reply-To: <0A13BABD-C12B-4197-BEFC-B4B70B4DA2C8@twistedmatrix.com>
References: <CAGDztiEjdJJQckXtoMSnRqsPSZ1DrxL0ja9SO_NOYz=W-Veu-g@mail.gmail.com>
	<0A13BABD-C12B-4197-BEFC-B4B70B4DA2C8@twistedmatrix.com>
Message-ID: <CAGDztiFW-ydRb+=-Rb3QyLLiKHJMOEAeZqWiqRbuF17BERLpNQ@mail.gmail.com>

OK, I will look at Ampoule and deferToAMPProcess while looking into the
CorePost multicore support.

Thanks Glyph,
Jacek

On Thu, Oct 13, 2011 at 1:01 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 13, 2011, at 11:41 AM, Jacek Furmankiewicz wrote:
>
> > Which is the recommended way for interprocess communication these days?
> >
> > Is it the existing PerspectiveBroker or Ampoule (which uses AMP as the
> underlying RPC protocol)?
> > Are there drawbacks/benefits to either of them?
>
> Somebody should probably write an AMP vs. PB wiki page or something, this
> does come up every so often.
>
> Briefly: PB's strength is that it allows you to serialize and synchronize
> large, complex object graphs with relatively little effort, but more safely
> and explicitly than (for example) Pickle would allow you to do.  Doing this
> with AMP would require specifying a large protocol with lots of object IDs,
> and you'd have to manage their mappings yourself.
>
> AMP's strength is that it's simple and visualizing the wire format is easy.
>  Most importantly you can visualize the wire format by looking at static
> declarations of commands and their responses, without ever examining any
> code.  This allows you to easily provide AMP interfaces between multiple
> languages (for example, C#: <http://amp-protocol.net/AmpSharp>).  This
> also means that AMP is a bit more performant (on current trunk, on CPython,
> ~2300 AMP/sec as opposed to ~1300 PB/sec).
>
> A bit more effort has been going into AMP lately because many core Twisted
> developers now believe that AMP covers more and more common use-cases, and
> that should generally be the default choice for most new protocol work.
>
> Bottom line: you should try AMP first, and if you find it's too tedious,
> maybe give PB a shot and see if it simplifies your protocol code.
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111013/b8270c90/attachment.htm 

From jacek99 at gmail.com  Fri Oct 14 17:41:29 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Fri, 14 Oct 2011 17:41:29 -0400
Subject: [Twisted-web] Ampoule deferToAMPProcess confusion
Message-ID: <CAGDztiHuSOT2N4smQ5ixWedCg828QQ57QJeOCpz1C0h-fwPwtQ@mail.gmail.com>

Can someone point me to some good docs on Ampoule deferToAMPProcess?
I am trying in vain to get the simplest possible example working, with no
success.

from ampoule import deferToAMPProcess, util
from twisted.internet import reactor, defer

def test():
    return "TEST"

@util.mainpoint
def main(args):

    @defer.inlineCallbacks
    def _run():
        val = yield deferToAMPProcess(test)
        print val
        reactor.stop()

    reactor.callLater(1, _run)
    reactor.run()

Gives:

exceptions.AttributeError: 'str' object has no attribute '_doCommand'

I've tried different combinations, returnd Deferreds from the test()
function, inline callbacks with defer.returnValue().
Can't get it to work.

Looks like I am not the only one:

https://answers.launchpad.net/ampoule/+question/75143

Thanks in advance
Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111014/eafe43cd/attachment.htm 

From exarkun at twistedmatrix.com  Fri Oct 14 20:49:02 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 15 Oct 2011 00:49:02 -0000
Subject: [Twisted-web] Ampoule deferToAMPProcess confusion
In-Reply-To: <CAGDztiHuSOT2N4smQ5ixWedCg828QQ57QJeOCpz1C0h-fwPwtQ@mail.gmail.com>
References: <CAGDztiHuSOT2N4smQ5ixWedCg828QQ57QJeOCpz1C0h-fwPwtQ@mail.gmail.com>
Message-ID: <20111015004902.23178.1028039699.divmod.xquotient.437@localhost.localdomain>

On 14 Oct, 09:41 pm, jacek99 at gmail.com wrote:
>Can someone point me to some good docs on Ampoule deferToAMPProcess?
>I am trying in vain to get the simplest possible example working, with 
>no
>success.
>
>from ampoule import deferToAMPProcess, util
>from twisted.internet import reactor, defer
>
>def test():
>    return "TEST"
>
>@util.mainpoint
>def main(args):
>
>    @defer.inlineCallbacks
>    def _run():
>        val = yield deferToAMPProcess(test)
>        print val
>        reactor.stop()
>
>    reactor.callLater(1, _run)
>    reactor.run()
>
>Gives:
>
>exceptions.AttributeError: 'str' object has no attribute '_doCommand'
>
>I've tried different combinations, returnd Deferreds from the test()
>function, inline callbacks with defer.returnValue().
>Can't get it to work.
>
>Looks like I am not the only one:
>
>https://answers.launchpad.net/ampoule/+question/75143

The test suite exercises this API:

http://bazaar.launchpad.net/~dialtone/ampoule/main/view/head:/ampoule/test/test_process.py#L498

Note in particular that it takes a Command, not a function.

Jean-Paul


From johan.rydberg at edgeware.tv  Sat Oct 15 12:36:46 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Sat, 15 Oct 2011 18:36:46 +0200
Subject: [Twisted-web] Ampoule vs PerspectiveBroker
In-Reply-To: <0A13BABD-C12B-4197-BEFC-B4B70B4DA2C8@twistedmatrix.com>
References: <CAGDztiEjdJJQckXtoMSnRqsPSZ1DrxL0ja9SO_NOYz=W-Veu-g@mail.gmail.com>
	<0A13BABD-C12B-4197-BEFC-B4B70B4DA2C8@twistedmatrix.com>
Message-ID: <4E99B69E.3050908@edgeware.tv>

On 10/13/11 7:01 PM, Glyph wrote:
> On Oct 13, 2011, at 11:41 AM, Jacek Furmankiewicz wrote:
>
>    
>> Which is the recommended way for interprocess communication these days?
>>
>> Is it the existing PerspectiveBroker or Ampoule (which uses AMP as the underlying RPC protocol)?
>> Are there drawbacks/benefits to either of them?
>>      
> Bottom line: you should try AMP first, and if you find it's too tedious, maybe give PB a shot and see if it simplifies your protocol code.
>    
I also recomment that you look at JSON-RPC:

    https://github.com/bbqsrc/txjsonrpc

We've had a lot of success with jsonrpc, and prefer it to AMP.

-Johan



From behzad.eslami at gmail.com  Sun Oct 16 10:34:07 2011
From: behzad.eslami at gmail.com (AmirBehzad Eslami)
Date: Sun, 16 Oct 2011 18:04:07 +0330
Subject: [Twisted-web] Using Twisted to process a pool of messages
Message-ID: <CAB=ZGGChvFDeoKS1i790vVtGQEoN4Eg8shxHAvFp=QCfjmzOZg@mail.gmail.com>

Dear List,
e-Greetings,

i'm a PHP developer, and I'm very new to the world of Python and Twisted.
When it comes to use Twisted, my mind is unable to go beyond the
Top-To-Down Code execution model of PHP... Help!

i've been asked to write a service to process a list of SMS-messages, and send
each person a response. The messages are located on a PostgreSQL database
at a remote server.

Inside an infitie loop in Python, I call a single URL every 5 seconds, which
gives me an array of messages in JSON format. This URL has a special
format, which a parameter, named "last_sms_id".

URL: /give_me_messages.php?last_sms_id=XXX

In the Python script, I set a value to this paramter to tell the Remote Script
to only give me new messages, and ignore the old ones which I have
already recieved. It means that I must update last_sms_id after
processing each message.

The URL finally returns an array of messages.
i'm responsbile to process this array, and based on contents of each
message, call
a new URL, which doesn't matter for now.

Now I'm asked to use Twisted to make my python script asynchronous.
Well, I was  PHP Programmer. I'm wondering how this application could
become asynchronous.

Let me explain.
If the first call to the above URL fails to recieve content for some reason,
what will happen? Does asynchronous mean that Python will invoke
a new URL to the same URL again? or It will make a new URL call?
How can I handle "last_sms_id" during these asynchronous calls?

Thank you in advance,
-behzad


From p.mayers at imperial.ac.uk  Sun Oct 16 11:08:26 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 16 Oct 2011 16:08:26 +0100
Subject: [Twisted-web] Using Twisted to process a pool of messages
In-Reply-To: <CAB=ZGGChvFDeoKS1i790vVtGQEoN4Eg8shxHAvFp=QCfjmzOZg@mail.gmail.com>
References: <CAB=ZGGChvFDeoKS1i790vVtGQEoN4Eg8shxHAvFp=QCfjmzOZg@mail.gmail.com>
Message-ID: <4E9AF36A.4030204@imperial.ac.uk>

On 10/16/2011 03:34 PM, AmirBehzad Eslami wrote:

> Now I'm asked to use Twisted to make my python script asynchronous.
> Well, I was  PHP Programmer. I'm wondering how this application could
> become asynchronous.
>
> Let me explain.
> If the first call to the above URL fails to recieve content for some reason,
> what will happen? Does asynchronous mean that Python will invoke
> a new URL to the same URL again? or It will make a new URL call?

None of the above.

Asynchronous code is not magical. It won't do things you don't tell it to.

In Twisted terms, normally you will call some API which will return a 
"deferred", which is just a placeholder for the result. You would attach 
a callback, which is called on success, and an errback, which is called 
on failure.

If the URL fetch fails, your errback will be invoked. On the other hand, 
if the URL fetch succeeds but returns no data, your callback will be 
called with an empty result.

Either way - the code you write decides what happens next.

> How can I handle "last_sms_id" during these asynchronous calls?

It sounds to me like you need to work your way through the Twisted 
tutorial. It's absolutely essential to understand a) how the reactor 
model that Twisted uses schedules your code and b) how Deferreds are 
used to give you results "asynchronously".

Very briefly, your code might look like something this:

from twisted.python import log
from twisted.internet import task
from twisted.web import client
from twisted.internet import reactor

class Worker:
   def __init__(self):
     self.last_sms_id = None
     self.host = 'http://your.server'

   def start(self):
     self.tsk = task.LoopingCall(self.fetch)
     self.tsk.start(5)

   def fetch(self):
     # We are called every 5 seconds
     # Fetch our URL and return a deferred
     # Attach success/failure callbacks

     if self.last_sms_id is None:
       # first time we've run?
       url = '%s/script' % (self.host,)
     else:
       url = '%s/script?last_sms_id=%s' % (self.host, self.last_sms_id,)

     d = self.client.getPage(url)

     d.addCallback(self.success)

     # because we attach the errback *after* the callback,
     # any errors/exceptions in the callback will go through
     # to the errback, where we can log them...
     d.addErrback(self.failure)

     # If we return a "deferred" from a LoopingCall task
     # the next call won't happen until the deferred has
     # completed; this is probably good
     return d

   def success(self, data):
     # N.B. any errors in this function will result in our errback
     # being called, so we can ignore them here if we want...

     messages = simplejson.loads(data)
     for msg in messages:
         # NOTE: this function should NOT block
         # or you'll block the reactor...
         do_something(msg)
         self.last_sms_id = msg.sms_id

   def failure(self, f):
     # called if either the page fetch failed, or the
     # callback had an error (invalid/empty data)
     # Just log it, and return a "null" reply
     log.msg("url fetch failed")
     log.err(f)

def setup():
   w = Worker()
   w.start()

def main():
   log.startLogging(sys.stderr)
   reactor.callWhenRunning(setup)
   reactor.run()

if __name__=='__main__':
   main()


...obviously your "do_something" call will need to handle the messages; 
it might for example use "getPage" to issue an HTTP POST to an 
SMS-sending service, or put them into a queue which another 
task.LoopingCall empties at a pre-defined rate.

Hope this helps clear things up a bit.


From p.mayers at imperial.ac.uk  Sun Oct 16 11:11:32 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 16 Oct 2011 16:11:32 +0100
Subject: [Twisted-web] Using Twisted to process a pool of messages
In-Reply-To: <4E9AF36A.4030204@imperial.ac.uk>
References: <CAB=ZGGChvFDeoKS1i790vVtGQEoN4Eg8shxHAvFp=QCfjmzOZg@mail.gmail.com>
	<4E9AF36A.4030204@imperial.ac.uk>
Message-ID: <4E9AF424.80405@imperial.ac.uk>

On 10/16/2011 04:08 PM, Phil Mayers wrote:

> d = self.client.getPage(url)

Drat. That should be:

   d = client.getPage(url)

i.e. you're calling twisted.web.client.getPage


From jacek99 at gmail.com  Sun Oct 16 11:28:46 2011
From: jacek99 at gmail.com (Jacek Furmankiewicz)
Date: Sun, 16 Oct 2011 11:28:46 -0400
Subject: [Twisted-web] Using Twisted to process a pool of messages
In-Reply-To: <4E9AF424.80405@imperial.ac.uk>
References: <CAB=ZGGChvFDeoKS1i790vVtGQEoN4Eg8shxHAvFp=QCfjmzOZg@mail.gmail.com>
	<4E9AF36A.4030204@imperial.ac.uk> <4E9AF424.80405@imperial.ac.uk>
Message-ID: <CAGDztiG9Fvhw7B1pMeZNMbjYAk9C1WY-6yGaS1OHAe=7_CXeTg@mail.gmail.com>

I really recommend this tutorial:
http://krondo.com/?page_id=1327

Direct PDF link:
http://krondo.com/?page_id=1327

It really helped me understand Twisted, coming from a synchronous Java
background.

Once you get to the @defer.inlineCallbacks chapter, things will become much
more clear.
Twisted inline callbacks allows you to write async code with the clarity of
sync code.

As Phil mentioned, Deferred is the work horse of Twisted and crucial to
using it effectively.

Cheers,
Jacek

On Sun, Oct 16, 2011 at 11:11 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> On 10/16/2011 04:08 PM, Phil Mayers wrote:
>
> > d = self.client.getPage(url)
>
> Drat. That should be:
>
>   d = client.getPage(url)
>
> i.e. you're calling twisted.web.client.getPage
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111016/202e2332/attachment.htm 

From behzad.eslami at gmail.com  Mon Oct 17 03:28:27 2011
From: behzad.eslami at gmail.com (AmirBehzad Eslami)
Date: Mon, 17 Oct 2011 10:58:27 +0330
Subject: [Twisted-web] Using Twisted to process a pool of messages
In-Reply-To: <CAGDztiG9Fvhw7B1pMeZNMbjYAk9C1WY-6yGaS1OHAe=7_CXeTg@mail.gmail.com>
References: <CAB=ZGGChvFDeoKS1i790vVtGQEoN4Eg8shxHAvFp=QCfjmzOZg@mail.gmail.com>
	<4E9AF36A.4030204@imperial.ac.uk> <4E9AF424.80405@imperial.ac.uk>
	<CAGDztiG9Fvhw7B1pMeZNMbjYAk9C1WY-6yGaS1OHAe=7_CXeTg@mail.gmail.com>
Message-ID: <CAB=ZGGDvRUM+jGz6sg_w454iP9GUe2UHMuQmLknL7hc+C56ZGw@mail.gmail.com>

Wow, Thanks a ton, for the code and for the tutorial.
Thanks for your prompt replies.
I'll back soon with good results. Optimistic.

On 10/16/11, Jacek Furmankiewicz <jacek99 at gmail.com> wrote:
> I really recommend this tutorial:
> http://krondo.com/?page_id=1327
>
> Direct PDF link:
> http://krondo.com/?page_id=1327
>
> It really helped me understand Twisted, coming from a synchronous Java
> background.
>
> Once you get to the @defer.inlineCallbacks chapter, things will become much
> more clear.
> Twisted inline callbacks allows you to write async code with the clarity of
> sync code.
>
> As Phil mentioned, Deferred is the work horse of Twisted and crucial to
> using it effectively.
>
> Cheers,
> Jacek
>
> On Sun, Oct 16, 2011 at 11:11 AM, Phil Mayers
> <p.mayers at imperial.ac.uk>wrote:
>
>> On 10/16/2011 04:08 PM, Phil Mayers wrote:
>>
>> > d = self.client.getPage(url)
>>
>> Drat. That should be:
>>
>>   d = client.getPage(url)
>>
>> i.e. you're calling twisted.web.client.getPage
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>


-- 
Kind regards,
-behzad


From tom.sheffler at gmail.com  Mon Oct 31 13:20:29 2011
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Mon, 31 Oct 2011 10:20:29 -0700
Subject: [Twisted-web] FTP: DTPFactory timeout - does an unhandled exception
	imply a problem?
Message-ID: <CAMBtMcsNAnkyvQ3seqA3WBL-_7UCGgQgUBa6BNFPy43ExAoZGQ@mail.gmail.com>

I'm experimenting with the FTP protocol and noticed the following during
certain timeout conditions.

My first question is: when an unhandled exception occurs, do things get
cleaned up properly, or is this an indication that we're losing memory or
resources?

Thanks.

Here is an excerpt:

2011-10-31 10:14:04-0700 [-] timed out waiting for DTP connection
2011-10-31 10:14:04-0700 [-] Unexpected FTP error
2011-10-31 10:14:04-0700 [-] Unhandled Error
Traceback (most recent call last):
Failure: twisted.protocols.ftp.PortConnectionError: DTPFactory timeout
2011-10-31 10:14:14-0700 [ProtocolWrapper,0,127.0.0.1] cleanupDTP
2011-10-31 10:14:14-0700 [ProtocolWrapper,0,127.0.0.1] <<class
'twisted.internet.tcp.Port'> of twisted.protocols.ftp.DTPFactory on xxx>
2011-10-31 10:14:14-0700 [ProtocolWrapper,0,127.0.0.1]
dtpFactory.stopFactory

-Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-web/attachments/20111031/53a7aa34/attachment.htm 

From bogus@does.not.exist.com  Fri Oct 28 10:01:47 2011
From: bogus@does.not.exist.com ()
Date: Fri, 28 Oct 2011 14:01:47 -0000
Subject: No subject
Message-ID: <mailman.3.1330535166.5287.twisted-web@twistedmatrix.com>

Resources of its own (no requests seem to get routed to them).

This is not really a realistic scenario in a typical REST application where
nested REST services are common, e.g.

Customer REST service:

*GET /services/customer*
*POST /services/customer*
*PUT /services/customer/<customerId>*
*DELETE /services/customer/<customerId>*

Customer Address REST service:

*GET /services/customer/<customerId>/address*
*POST /services/customer/<customerId>/address*
*PUT /services/customer/<customerId>/address/<addressId>*
*DELETE /services/customer/<customerId>/address/<addressId>*

and so on and so forth....

The only way I can support this in CorePost is to separate the concept of a
Twisted.Web Resource from a standalone REST service for a particular entity.

So let's say I would have a root CorePost Resource hooked up to 'services'
and it would have a child collection of REST service classes and manage
routing the requests
to the appropriate one. Each of the REST services for an entity underneath
that core Resource would NOT be a twisted.web Resource but just a regular
class.

Does this sound correct?
Or am I missing some way of using twisted.web Resource objects that would
allow me to accomplish the same thing without moving away from Resource
as the ancestor of all my REST service classes?

Thanks
Jacek

--bcaec554db9e79c1e104ba1d5bd8
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable


From bogus@does.not.exist.com  Fri Oct 28 10:01:47 2011
From: bogus@does.not.exist.com ()
Date: Fri, 28 Oct 2011 14:01:47 -0000
Subject: No subject
Message-ID: <mailman.4.1330535167.5287.twisted-web@twistedmatrix.com>

ld Resources of its own (no requests seem to get routed to them).<div><br><=
/div><div>This is not really a realistic scenario in a typical REST applica=
tion where nested REST services are common, e.g.</div>
<div><br></div><div>Customer REST service:</div><div><br></div><div><i>GET =
/services/customer</i></div><div><i>POST /services/customer</i></div><div><=
i>PUT /services/customer/&lt;customerId&gt;</i></div><div><i>DELETE /servic=
es/customer/&lt;customerId&gt;</i></div>
<div><br></div><div>Customer Address REST service:</div><div><br></div><div=
><div><i>GET /services/customer/&lt;customerId&gt;/address</i></div><div><i=
>POST /services/customer/&lt;customerId&gt;/address</i></div><div><i>PUT /s=
ervices/customer/&lt;customerId&gt;/address/&lt;addressId&gt;</i></div>
<div><i>DELETE /services/customer/&lt;customerId&gt;/address/&lt;addressId&=
gt;</i></div></div><div><br></div><div>and so on and so forth....</div><div=
><br></div><div>The only way I can support this in CorePost is to separate =
the concept of a Twisted.Web Resource from a standalone REST service for a =
particular entity.</div>
<div><br></div><div>So let&#39;s say I would have a root CorePost Resource =
hooked up to &#39;services&#39; and it would have a child collection of RES=
T service classes and manage routing the requests<br>to the appropriate one=
. Each of the REST services for an entity underneath that core Resource wou=
ld NOT be a twisted.web Resource but just a regular class.</div>
<div><br></div><div>Does this sound correct?</div><div>Or am I missing some=
 way of using twisted.web Resource objects that would allow me to accomplis=
h the same thing without moving away from Resource</div><div>as the ancesto=
r of all my REST service classes?</div>
<div><br></div><div>Thanks</div><div>Jacek</div><div><br></div>

--bcaec554db9e79c1e104ba1d5bd8--


From bogus@does.not.exist.com  Fri Oct 28 10:01:47 2011
From: bogus@does.not.exist.com ()
Date: Fri, 28 Oct 2011 14:01:47 -0000
Subject: No subject
Message-ID: <mailman.5.1330959519.5287.twisted-web@twistedmatrix.com>

is fine for simpler admin vs read-only authentication schemes), but in some
cases you need really fine-grained APIs
(where a decorator per each REST method may be the only option), so it
would be good for every request to be linked with the Principal that
represents the user making the request.

Thanks for any suggestions
Jacek

On Thu, Feb 23, 2012 at 4:53 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Feb 23, 2012, at 4:09 PM, Jacek Furmankiewicz wrote:
>
> Ah, I think I get it.
>
>
> Hooray!
>
> So Avatar = root resource that this user can access, correct?
>
>
> Yes, that is exactly correct!
>
> (More generally: root protocol-specific thing that a user can access,
> since this applies to other authenticated protocols as well, and ideally,
> eventually, all protocols within Twisted.)
>
> That is quite flexible actually. It's like you can serve a totally
> different application (i.e. resource) to the user depending on their
> credentials/roles/etc.
>
>
> Yup.  And you can write wrappers in whatever way you see fit.  The idea is
> that instead of inserting "self.makeSureItIsSecure()" checks in (or
> decorators on) every single method, users without the proper authentication
> can't even *access the objects* whose methods they want to call; there's
> no security error, just a 404.  This means that it's much harder to make
> the mistake where you grant too much authority to anonymous users.
>
> I will wrap my head around it a bit more in the coming weeks and see how I
> can add the functionality I want (able to add fine grained security per
> REST method on a resource)
> while working in spirit with the twisted.web.guard approach.
>
>
> Great.  I'm really enthusiastic to see what you come up with.  Feel free
> to continue discussing ideas on this list as you're thinking through them -
> this is an area of Twisted that could stand to be talked about a lot more
> :).
>
> Thanks to everyone for your help
>
>
> Always happy to help someone through to the point of actual understanding!
>
> -glyph
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
>

--f46d0401fcedc88c2e04ba802826
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Hi, I have an extra question going back to our original discussion on secur=
ity.<div><br></div><div>If I serve a Resource Avatar from a Realm, is there=
 any built-in way to attach something to the request as it is being interce=
pted by the Realm?</div>
<div><br></div><div>For example, for every request I would like to create a=
 Principal object (username,first name,last name, list of privileges, etc.)=
 and attach it to every request that has been authenticated.</div><div>
<br></div><div>From the API I see, it seems you can serve a customized Reso=
urce (and that is fine for simpler admin vs read-only authentication scheme=
s), but in some cases you need really fine-grained APIs</div><div>(where a =
decorator per each REST method may be the only option), so it would be good=
 for every request to be linked with the Principal that represents the user=
 making the request.</div>
<div><br></div><div>Thanks for any suggestions</div><div>Jacek<br><br><div =
class=3D"gmail_quote">On Thu, Feb 23, 2012 at 4:53 PM, Glyph <span dir=3D"l=
tr">&lt;<a href=3D"mailto:glyph at twistedmatrix.com">glyph at twistedmatrix.com<=
/a>&gt;</span> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div style=3D"word-wrap:break-word"><br><div=
><div class=3D"im"><div>On Feb 23, 2012, at 4:09 PM, Jacek Furmankiewicz wr=
ote:</div>
<br><blockquote type=3D"cite"><span style=3D"border-collapse:separate;font-=
family:Menlo;font-style:normal;font-variant:normal;font-weight:normal;lette=
r-spacing:normal;line-height:normal;text-align:-webkit-auto;text-indent:0px=
;text-transform:none;white-space:normal;word-spacing:0px;font-size:medium">=
Ah, I think I get it.</span></blockquote>
<div><br></div></div><div>Hooray!</div><div class=3D"im"><br><blockquote ty=
pe=3D"cite"><span style=3D"border-collapse:separate;font-family:Menlo;font-=
style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;l=
ine-height:normal;text-align:-webkit-auto;text-indent:0px;text-transform:no=
ne;white-space:normal;word-spacing:0px;font-size:medium"><div>
So Avatar =3D root resource that this user can access, correct?</div></span=
></blockquote><div><br></div></div>Yes, that is exactly correct!</div><div>=
<br></div><div>(More generally: root protocol-specific thing that a user ca=
n access, since this applies to other authenticated protocols as well, and =
ideally, eventually, all protocols within Twisted.)</div>
<div><div class=3D"im"><br><blockquote type=3D"cite"><span style=3D"border-=
collapse:separate;font-family:Menlo;font-style:normal;font-variant:normal;f=
ont-weight:normal;letter-spacing:normal;line-height:normal;text-align:-webk=
it-auto;text-indent:0px;text-transform:none;white-space:normal;word-spacing=
:0px;font-size:medium"><div>
That is quite flexible actually. It&#39;s like you can serve a totally diff=
erent application (i.e. resource) to the user depending on their credential=
s/roles/etc.</div></span></blockquote><div><br></div></div><div>Yup. =A0And=
 you can write wrappers in whatever way you see fit. =A0The idea is that in=
stead of inserting &quot;self.makeSureItIsSecure()&quot; checks in (or deco=
rators on) every single method, users without the proper authentication can=
&#39;t even <i>access the objects</i>=A0whose methods they want to call; th=
ere&#39;s no security error, just a 404. =A0This means that it&#39;s much h=
arder to make the mistake where you grant too much authority to anonymous u=
sers.</div>
<div class=3D"im"><br><blockquote type=3D"cite"><span style=3D"border-colla=
pse:separate;font-family:Menlo;font-style:normal;font-variant:normal;font-w=
eight:normal;letter-spacing:normal;line-height:normal;text-align:-webkit-au=
to;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;=
font-size:medium"><div>
I will wrap my head around it a bit more in the coming weeks and see how I =
can add the functionality I want (able to add fine grained security per RES=
T method on a resource)</div><div>while working in spirit with the twisted.=
web.guard approach.</div>
</span></blockquote><div><br></div></div><div>Great. =A0I&#39;m really enth=
usiastic to see what you come up with. =A0Feel free to continue discussing =
ideas on this list as you&#39;re thinking through them - this is an area of=
 Twisted that could stand to be talked about a lot more :).</div>
<div class=3D"im"><br><blockquote type=3D"cite"><span style=3D"border-colla=
pse:separate;font-family:Menlo;font-style:normal;font-variant:normal;font-w=
eight:normal;letter-spacing:normal;line-height:normal;text-align:-webkit-au=
to;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;=
font-size:medium"><div>
Thanks to everyone for your help</div></span></blockquote></div></div><br><=
div>Always happy to help someone through to the point of actual understandi=
ng!</div><span class=3D"HOEnZb"><font color=3D"#888888"><div><br></div><div=
>
-glyph<br><br></div></font></span></div><br>_______________________________=
________________<br>
Twisted-web mailing list<br>
<a href=3D"mailto:Twisted-web at twistedmatrix.com">Twisted-web at twistedmatrix.=
com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web" t=
arget=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-=
web</a><br>
<br></blockquote></div><br></div>

--f46d0401fcedc88c2e04ba802826--


