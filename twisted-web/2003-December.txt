From twisted-web@twistedmatrix.com  Thu Dec 11 05:57:05 2003
From: twisted-web@twistedmatrix.com (Travis B. Hartwell)
Date: Wed, 10 Dec 2003 22:57:05 -0700
Subject: [Twisted-web] First Post?
Message-ID: <871xrbdhhq.fsf@lutya.travishartwell.net>

My co-located box is almost ready.  I just have to install Python 2.3 
and get DNS updated and I'm ready to run Twisted Web.  I suppose I
should try out Nevow and see if it is really worth all the hype.

Let me explain what I want to do for my personal website, and perhaps
I can get some suggestions on the proper way to go about it.  I'm
going to use the file system as poor man's content management system.
To explain what I mean, first some ascii art explaining my idea,
though the layout really doesn't matter:

------------------------------------------------------------      
| Travis B. Hartwell's Website                             | <- header
|                                                          |
|  Home  About  Blog  Words  *Projects*  Links             | <- main menu
|                                                          |
------------------------------------------------------------
|               | <-- sub-menu                             |
|    Informant  |                                          |
|        *About*|   Informant is a Gnome notification      |
|        Screen-|     area application....                 |
|          shots|                                          |
|        Down-  |                                          |
|         loads |                                          |
|               |                                          |
|    Checkmail  |                                          |
|    Beyond     |                                          |
|    Twisted    |                                          |
|               |      body                                |
|               |                                          |
|               |                                          |
|               |                                          |
------------------------------------------------------------


Does this make sense?  The layout will basically consist of 3 parts.
The header, at the bottom of which will be the main menu.  Each entry
in the main menu will correspond to a directory under the top level
site directory.  In this case, we are on the Projects page, which is
highlighted in some fashion.  The 2nd part is the sub-menu on the
left.  The 4 main menu entries (Informant, Checkmail, ...) are each
themselves directories underneath the Projects directory.  The menu
entries indented under "Informant" are each then files in that
directory.  The 3rd part is the body.  The stuff that is in the body
is stuff that is actually in an XHTML file, whether it be index.html
or About.html in the above example.  Each one of these parts is in a
<div> tag, and then is formatted with a CSS file.

Does this make sense?  Is this a better way of doing this sort of
thing?  If this is reasonable, what is the best way to do this with
Nevow?  Thanks for the help!

Travis


From twisted-web@twistedmatrix.com  Thu Dec 11 07:35:08 2003
From: twisted-web@twistedmatrix.com (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Thu, 11 Dec 2003 08:35:08 +0100
Subject: [Twisted-web] Test
Message-ID: <200312110835.08964.lafou@wanadoo.fr>

Hi all

just a test



From twisted-web@twistedmatrix.com  Thu Dec 11 07:39:03 2003
From: twisted-web@twistedmatrix.com (Alex Levy)
Date: Thu, 11 Dec 2003 02:39:03 -0500
Subject: [Twisted-web] Test
In-Reply-To: <200312110835.08964.lafou@wanadoo.fr>
References: <200312110835.08964.lafou@wanadoo.fr>
Message-ID: <1071128343.25059.179.camel@hyla>

--=-xNGbG/uhauATaAYUxwfR
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable

On Thu, 2003-12-11 at 02:35, Philippe Lafoucri=E8re wrote:
> Hi all
>=20
> just a test

philippe.callback(True)

--=20
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_


--=-xNGbG/uhauATaAYUxwfR
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD4DBQA/2B8XVM70CYlRlK4RAkD7AJ47TEExiCPlG9Gxb6aCVPYYoPG/IQCYy+SL
7odoV3qmk7lC4FATFdL1VA==
=5hjF
-----END PGP SIGNATURE-----

--=-xNGbG/uhauATaAYUxwfR--



From twisted-web@twistedmatrix.com  Thu Dec 11 11:58:35 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Dec 2003 06:58:35 -0500
Subject: [Twisted-web] data="../foo", or, how to prevent adding IData to centxt
Message-ID: <3FD85BEB.6060002@twistedmatrix.com>

I have a renderer:

     def render_select(self, ctx, data):
         try:
             return ctx.keyed(data)
         except context.NodeNotFound:
             return ctx.keyed('else')

Which works nicely for things like:

   <div nevow:data="usertype" nevow:render="select">
     <span nevow:key="Writer">
       <a href="edit">Edit this page</a>
     </span>
     <span nevow:key="else">HI</span>
   </div>

However, I want to use data within those keyed nodes:

   <div nevow:data="usertype" nevow:render="select">
     <span nevow:key="Writer">
       <form nevow:data="addPageForm" nevow:render="string" 
action="addPage" />
       <a href="edit">Edit this page</a>
     </span>
     <span nevow:key="else">HI</span>
   </div>


This is causing nevow to try to do IContainer(directive('usertype')) so 
it can get the 'addPageForm' child. addPageForm isn't a child of 
usertype, though, so the most obvious thing to me (coming from a Woven) 
background would be to use "../addPageForm" instead of "addPageForm" -- 
but nevow doesn't support that.

OTOH, I didn't need this with my old Woven implementation -- my 'select' 
widget used to be implemented with patterns, and for whatever reason it 
didn't try to look up inner models on the model used for doing the 
select. I think I would like select to keep those semantics. Is there 
anything I can do in render_select to prevent usertype from being placed 
on the context as IData?

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/


From twisted-web@twistedmatrix.com  Thu Dec 11 12:12:40 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Dec 2003 07:12:40 -0500
Subject: [Twisted-web] First Post?
In-Reply-To: <871xrbdhhq.fsf@lutya.travishartwell.net>
References: <871xrbdhhq.fsf@lutya.travishartwell.net>
Message-ID: <3FD85F38.6080804@twistedmatrix.com>

Travis B. Hartwell wrote:
> Does this make sense?  Is this a better way of doing this sort of
> thing?  If this is reasonable, what is the best way to do this with
> Nevow?  Thanks for the help!

This is almost exactly what Plonk_ does. It uses the filesystem for 
storage, allows through-the-web editing (especially useful if you have 
Mozex), and allows you to use ReST or HTML.  The only thing it doesn't 
support is (automatic handling of) submenus. You can have arbitrarily 
deep pages nested within each other, though, and each page lists its 
children (if you support that in your template, anyway). I'm in the 
process of rewriting Plonk to use Nevow, and I might try to implement 
your submenu thing. I'm also working on some features for saph_ to use 
in her upcoming website_, like better blog features and image gallery stuff.

.. _Plonk: http://radix.twistedmatrix.com/Code/Plonk/
.. _saph: http://saph.deviantart.com/
.. _website: http://saph.twistedmatrix.com/

disclaimer: I don't really think Plonk is the best at what it does. I 
made it because I'm too stubborn to use anything but Twisted, and to 
help my non-technical friends do what they want. In that regard, its 
sole purpose is featuritis.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/


From twisted-web@twistedmatrix.com  Thu Dec 11 15:35:48 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Thu, 11 Dec 2003 09:35:48 -0600
Subject: [Twisted-web] Menu flattening
Message-ID: <20031211153548.D574843060@server1.messagingengine.com>

Hi,

I'm trying to write a method that creates a menu given the following
information.

menu_items = {
    "A": [ "a", "b", "c" ],
    "B": [ "d", "e", "f" ],
    "C": [ "g", "h", {"i": ["x", "y", "z"]} ],
}

This dict contains the hierarchy of menus.  Eventually I'll add another
list as input that indicates what is currently selected so the menus will
expand and collapse as appropriate.

selected_menu_items = ["C","i"]

I wrote the following method which displays s simple unordered list from
the dictionary.

def flatten_menu(menu_items_dict):
    html_menu = "<ul>"
    for k in menu_items_dict.keys():
        html_menu += "<li>%s</li>" % k
        html_menu += "<ul>"
        for i in menu_items_dict[k]:
            if isinstance(i, dict):
                html_menu += flatten_menu(i)
            else:
                html_menu += "<li>%s</li>" % i
        html_menu += "</ul>"
    html_menu += "</ul>"
    return html_menu

Now I'm trying to implement it as a stan tree.  But since I can't
separate the starting and ending tags in stan I'm not sure how to
implement this.  This seems a bit too complex for list comprehension.

Any ideas?

Thanks.
-Justin


From twisted-web@twistedmatrix.com  Thu Dec 11 15:57:56 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Thu, 11 Dec 2003 10:57:56 -0500
Subject: [Twisted-web] data="../foo", or, how to prevent adding IData to centxt
In-Reply-To: <3FD85BEB.6060002@twistedmatrix.com>
References: <3FD85BEB.6060002@twistedmatrix.com>
Message-ID: <C8F64C33-2BF2-11D8-80D3-000A95864FC4@divmod.org>

--Apple-Mail-1-509279288
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=US-ASCII;
	format=flowed


On Dec 11, 2003, at 6:58 AM, Christopher Armstrong wrote:

> I have a renderer:
>
>     def render_select(self, ctx, data):
>         try:
>             return ctx.keyed(data)
>         except context.NodeNotFound:
>             return ctx.keyed('else')

*snip*

> This is causing nevow to try to do IContainer(directive('usertype')) 
> so it can get the 'addPageForm' child. addPageForm isn't a child of 
> usertype, though, so the most obvious thing to me (coming from a 
> Woven) background would be to use "../addPageForm" instead of 
> "addPageForm" -- but nevow doesn't support that.

In woven, the only way to put some data onto the stack was to use a 
directive (a string indicating how to find some data). In nevow, stan 
tags can hold references to other objects using "specials" -- special 
attribute names which aren't used in rendering HTML directly, but are 
used to *inform* the rendering process. Data is one of those specials. 
So if you are returning a node and you don't like the data which it 
will naturally get due to it's position in the context hierarchy, you 
can tell it what data to use explicitly.

def render_select(self, ctx, data):
     try:
         rv = ctx.keyed(data)
     except context.NodeNotFound:
         rv = ctx.keyed('else')
     return rv(data=ctx.locate(IData, depth=2))

In this case, we locate a stan node using the ctx.keyed method, which 
finds a node with the given key; we then "call" it and pass the data we 
want that node to use. (Calling stan nodes is the method used to set 
attributes/specials.)

The "depth" parameter to the locate method call is the moral equivalent 
of Woven's "." and ".." and "../.." directives. Calling locate with 
depth=1 will locate the current data, or ".", and calling locate with 
depth=2 will locate the parent data, or "..", etc.

nevow was specifically designed to allow this, as it gives your python 
code far more control over what is really going on in the rendering 
process.

dp

--Apple-Mail-1-509279288
Content-Transfer-Encoding: 7bit
Content-Type: text/enriched;
	charset=US-ASCII



On Dec 11, 2003, at 6:58 AM, Christopher Armstrong wrote:


<excerpt>I have a renderer:


    def render_select(self, ctx, data):

        try:

            return ctx.keyed(data)

        except context.NodeNotFound:

            return ctx.keyed('else')

</excerpt>

*snip*


<excerpt>This is causing nevow to try to do
IContainer(directive('usertype')) so it can get the 'addPageForm'
child. addPageForm isn't a child of usertype, though, so the most
obvious thing to me (coming from a Woven) background would be to use
"../addPageForm" instead of "addPageForm" -- but nevow doesn't support
that.

</excerpt>

In woven, the only way to put some data onto the stack was to use a
directive (a string indicating how to find some data). In nevow, stan
tags can hold references to other objects using "specials" -- special
attribute names which aren't used in rendering HTML directly, but are
used to *inform* the rendering process. Data is one of those specials.
So if you are returning a node and you don't like the data which it
will naturally get due to it's position in the context hierarchy, you
can tell it what data to use explicitly.


<fontfamily><param>Verdana</param>def render_select(self, ctx, data):

    try:

        rv = ctx.keyed(data)

    except context.NodeNotFound:

        rv = ctx.keyed('else')

    return rv(data=ctx.locate(IData, depth=2))

</fontfamily>

In this case, we locate a stan node using the ctx.keyed method, which
finds a node with the given key; we then "call" it and pass the data
we want that node to use. (Calling stan nodes is the method used to
set attributes/specials.)


The "depth" parameter to the locate method call is the moral
equivalent of Woven's "." and ".." and "../.." directives. Calling
locate with depth=1 will locate the current data, or ".", and calling
locate with depth=2 will locate the parent data, or "..", etc.


nevow was specifically designed to allow this, as it gives your python
code far more control over what is really going on in the rendering
process.


dp


--Apple-Mail-1-509279288--



From twisted-web@twistedmatrix.com  Thu Dec 11 16:01:11 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Thu, 11 Dec 2003 10:01:11 -0600
Subject: [Twisted-web] Menu flattening
In-Reply-To: <20031211153548.D574843060@server1.messagingengine.com>
References: <20031211153548.D574843060@server1.messagingengine.com>
Message-ID: <20031211160111.DE78940A60@server1.messagingengine.com>

This seems to do what I want.  I should probably rethink this though,
since dict's aren't ordered.

def flatten_menu(menu_items):
    if isinstance(menu_items, dict):
        html_menu = ul[
            [ (li[k], [flatten_menu(i) for i in menu_items[k]]) \
                for k in menu_items.keys() if k]
        ]
    else:
        html_menu = ul[ li[menu_items] ]
    return html_menu




On Thu, 11 Dec 2003 09:35:48 -0600, "Justin Johnson"
<justinjohnson@fastmail.fm> said:
> Hi,
> 
> I'm trying to write a method that creates a menu given the following
> information.
> 
> menu_items = {
>     "A": [ "a", "b", "c" ],
>     "B": [ "d", "e", "f" ],
>     "C": [ "g", "h", {"i": ["x", "y", "z"]} ],
> }
> 
> This dict contains the hierarchy of menus.  Eventually I'll add another
> list as input that indicates what is currently selected so the menus will
> expand and collapse as appropriate.
> 
> selected_menu_items = ["C","i"]
> 
> I wrote the following method which displays s simple unordered list from
> the dictionary.
> 
> def flatten_menu(menu_items_dict):
>     html_menu = "<ul>"
>     for k in menu_items_dict.keys():
>         html_menu += "<li>%s</li>" % k
>         html_menu += "<ul>"
>         for i in menu_items_dict[k]:
>             if isinstance(i, dict):
>                 html_menu += flatten_menu(i)
>             else:
>                 html_menu += "<li>%s</li>" % i
>         html_menu += "</ul>"
>     html_menu += "</ul>"
>     return html_menu
> 
> Now I'm trying to implement it as a stan tree.  But since I can't
> separate the starting and ending tags in stan I'm not sure how to
> implement this.  This seems a bit too complex for list comprehension.
> 
> Any ideas?
> 
> Thanks.
> -Justin
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From twisted-web@twistedmatrix.com  Thu Dec 11 16:53:38 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Thu, 11 Dec 2003 11:53:38 -0500
Subject: [Twisted-web] Menu flattening
In-Reply-To: <20031211153548.D574843060@server1.messagingengine.com>
References: <20031211153548.D574843060@server1.messagingengine.com>
Message-ID: <90F1FABA-2BFA-11D8-80D3-000A95864FC4@divmod.org>

--Apple-Mail-3-512621281
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=US-ASCII;
	format=flowed


On Dec 11, 2003, at 10:35 AM, Justin Johnson wrote:

> Hi,
>
> I'm trying to write a method that creates a menu given the following
> information.
>
> menu_items = {
>     "A": [ "a", "b", "c" ],
>     "B": [ "d", "e", "f" ],
>     "C": [ "g", "h", {"i": ["x", "y", "z"]} ],
> }
>
> This dict contains the hierarchy of menus.

First, let me start by saying that nevow is all about flexibility. You 
have an implementation of a function which does exactly what you want, 
except it uses string concatenation instead of stan to generate some 
HTML. If it is going to be easier for you to debug and understand this 
code, then by all means use it. I have shown an example of using your 
string-concatenation code as a nevow renderer, by calling your code and 
wrapping the output in an xml object, before returning it.

Second, stan doesn't have to be about huge python expressions. It's 
just as easy to use in a standard procedural way, creating objects and 
then appending them to lists. I have constructed an example of 
rendering your menu structure using stan with clarity and readability 
in mind.

dp


--Apple-Mail-3-512621281
Content-Transfer-Encoding: 7bit
Content-Type: application/octet-stream;
	x-unix-mode=0644;
	name="nestedmenus.tac"
Content-Disposition: attachment;
	filename=nestedmenus.tac



import random

from twisted.application import service, internet
from twisted.web import server

from nevow import renderer
from nevow import tags


def flatten_menu(data):
    html_menu = "<ul>"
    for k, v in data.items():
        html_menu += "<li>%s</li>" % k
        html_menu += "<ul>"
        for i in v:
            if isinstance(i, dict):
                html_menu += flatten_menu(i)
            else:
                html_menu += "<li>%s</li>" % i
        html_menu += "</ul>"
    html_menu += "</ul>"
    return html_menu


class Menus(renderer.Renderer):
    document = tags.html[
    tags.head[tags.title["Hello"]],
    tags.body[
        tags.div(style="border: 1px dotted black; margin: 1em")[
            tags.ul(renderer=tags.directive("menu"))
        ],
        tags.div(style="border: 1px dotted black; margin: 1em")[
            tags.ul(renderer=tags.directive("stan_menu"))
        ]
    ]
]
    def render_menu(self, context, data):
        return tags.xml(flatten_menu(data))

    def render_stan_menu(self, context, data):
        """Render a dictionary of string keys and list of string/dict values."""
        menu = context.tag
        for k, v in data.items():
            # Add a list item with our key as the label
            menu.children.append(tags.li[k])
            # Add an ul tag to this menu for the submenu
            submenu = tags.ul()
            menu.children.append(submenu)

            # For every element of the value list
            for i in v:
                # if it's a dict, cause render_stan_menu to be called on it, and the output placed in the submenu tag
                if isinstance(i, dict):
                    submenu.children.append(tags.ul(data=i, renderer=self.render_stan_menu))
                # if it's a string, just add a list item with the string to the menu
                else:
                    submenu.children.append(tags.li[ i ])
        return menu


menu_items = {
    "A": ["a", "b", "c"],
    "B": ["d", "e", "f"],
    "C": ["g", "h", {"i":
        ["x", "y", "z"]
    }]
}


application = service.Application("nestedmenus")
internet.TCPServer(
    8080, 
    server.Site(
        Menus(
            menu_items
        )
    )
).setServiceParent(application)

--Apple-Mail-3-512621281--



From twisted-web@twistedmatrix.com  Thu Dec 11 16:56:24 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Thu, 11 Dec 2003 11:56:24 -0500
Subject: [Twisted-web] Menu flattening
In-Reply-To: <20031211160111.DE78940A60@server1.messagingengine.com>
References: <20031211153548.D574843060@server1.messagingengine.com> <20031211160111.DE78940A60@server1.messagingengine.com>
Message-ID: <F3D4631C-2BFA-11D8-80D3-000A95864FC4@divmod.org>

On Dec 11, 2003, at 11:01 AM, Justin Johnson wrote:

> This seems to do what I want.  I should probably rethink this though,
> since dict's aren't ordered.
>
> def flatten_menu(menu_items):
>     if isinstance(menu_items, dict):
>         html_menu = ul[
>             [ (li[k], [flatten_menu(i) for i in menu_items[k]]) \
>                 for k in menu_items.keys() if k]
>         ]
>     else:
>         html_menu = ul[ li[menu_items] ]
>     return html_menu

Yes, this works too, and really shows off how stan expressions can 
shorten complex HTML generation code. By the way, you don't need the \ 
character to continue the line there, because python will allow you to 
have linebreaks while there is an outstanding brace that hasn't been 
closed. (), {}, and []

dp



From twisted-web@twistedmatrix.com  Thu Dec 11 17:13:27 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Dec 2003 12:13:27 -0500
Subject: [Twisted-web] data="../foo", or, how to prevent adding IData
 to centxt
In-Reply-To: <C8F64C33-2BF2-11D8-80D3-000A95864FC4@divmod.org>
References: <3FD85BEB.6060002@twistedmatrix.com> <C8F64C33-2BF2-11D8-80D3-000A95864FC4@divmod.org>
Message-ID: <3FD8A5B7.8040104@twistedmatrix.com>

Donovan Preston wrote:

(btw, I think you composed in HTML mode or something, and your code 
snippet lost its indentation)

> def render_select(self, ctx, data):
>     try:
>         rv = ctx.keyed(data)
>     except context.NodeNotFound:
>         rv = ctx.keyed('else')
>     return rv(data=ctx.locate(IData, depth=2))

So others know, this isn't working. DP and I are working on fixing it...

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/


From twisted-web@twistedmatrix.com  Thu Dec 11 18:30:27 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Thu, 11 Dec 2003 13:30:27 -0500
Subject: [Twisted-web] data="../foo", or, how to prevent adding IData to centxt
In-Reply-To: <3FD8A5B7.8040104@twistedmatrix.com>
References: <3FD85BEB.6060002@twistedmatrix.com> <C8F64C33-2BF2-11D8-80D3-000A95864FC4@divmod.org> <3FD8A5B7.8040104@twistedmatrix.com>
Message-ID: <1793E392-2C08-11D8-80D3-000A95864FC4@divmod.org>

On Dec 11, 2003, at 12:13 PM, Christopher Armstrong wrote:

> Donovan Preston wrote:
>
> (btw, I think you composed in HTML mode or something, and your code 
> snippet lost its indentation)
>
>> def render_select(self, ctx, data):
>>     try:
>>         rv = ctx.keyed(data)
>>     except context.NodeNotFound:
>>         rv = ctx.keyed('else')
>>     return rv(data=ctx.locate(IData, depth=2))
>
> So others know, this isn't working. DP and I are working on fixing 
> it...

The bug which was preventing this from working has been fixed in cvs.

dp



From twisted-web@twistedmatrix.com  Fri Dec 12 04:24:18 2003
From: twisted-web@twistedmatrix.com (Kevin Howe)
Date: Thu, 11 Dec 2003 23:24:18 -0500
Subject: [Twisted-web] nevow CannotAdapt error
Message-ID: <000501c3c067$cfd28270$6501a8c0@khowe>

I'm trying to run a simple nevow test:

from nevow.renderer import Renderer
class MyRenderer(Renderer):
    document = """<xml>test</xml>"""
m = MyRenderer()

But get the following traceback?

Traceback (most recent call last):
  File "c:\data\htdocs\test.py", line 9, in ?
    m = MyRenderer()
  File "C:\PYTHON23\Lib\site-packages\nevow\renderer.py", line 152, in
__init__
    self.doc = self.precompile()
  File "C:\PYTHON23\Lib\site-packages\nevow\renderer.py", line 162, in
precompile
    _documents[klsnm] = rv =
flatten(ISerializable(self.document).serialize(context, None))
  File "C:\PYTHON23\Lib\site-packages\twisted\python\components.py", line
77, in __call__
    raise CannotAdapt("%s cannot be adapted to %s." %
CannotAdapt: <xml>test</xml> cannot be adapted to <class
'nevow.iwoven.ISerializable'>.



From twisted-web@twistedmatrix.com  Fri Dec 12 04:43:31 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Thu, 11 Dec 2003 23:43:31 -0500
Subject: [Twisted-web] nevow CannotAdapt error
In-Reply-To: <000501c3c067$cfd28270$6501a8c0@khowe>
References: <000501c3c067$cfd28270$6501a8c0@khowe>
Message-ID: <BCBAEC5E-2C5D-11D8-8853-000A95864FC4@divmod.org>

On Dec 11, 2003, at 11:24 PM, Kevin Howe wrote:

> I'm trying to run a simple nevow test:
>
> from nevow.renderer import Renderer
> class MyRenderer(Renderer):
>     document = """<xml>test</xml>"""
> m = MyRenderer()
>
> But get the following traceback?

<snip cannot adapt>

Are you using cvs? If you use CVS HEAD, you might find that this 
problem goes away. Otherwise, you'll need to import atop.regadapt and 
call justDoIt to register the adapters.

Also, note that your document is a simple python string, but has xml in 
it. Nevow quotes normal python strings, so if you want it to go through 
as straight xml, you should wrap it in a stan.xml object first.

dp



From twisted-web@twistedmatrix.com  Fri Dec 12 08:53:42 2003
From: twisted-web@twistedmatrix.com (Travis B. Hartwell)
Date: Fri, 12 Dec 2003 01:53:42 -0700
Subject: [Twisted-web] First Post?
In-Reply-To: <3FD85F38.6080804@twistedmatrix.com> (Christopher Armstrong's
 message of "Thu, 11 Dec 2003 07:12:40 -0500")
References: <871xrbdhhq.fsf@lutya.travishartwell.net>
 <3FD85F38.6080804@twistedmatrix.com>
Message-ID: <877k12bend.fsf@lutya.travishartwell.net>

Christopher Armstrong <radix@twistedmatrix.com> writes:
<snip>
> This is almost exactly what Plonk_ does. It uses the filesystem for
> storage, allows through-the-web editing (especially useful if you have
> Mozex), and allows you to use ReST or HTML.  The only thing it doesn't
> support is (automatic handling of) submenus. You can have arbitrarily
> deep pages nested within each other, though, and each page lists its
> children (if you support that in your template, anyway). I'm in the
> process of rewriting Plonk to use Nevow, and I might try to implement
> your submenu thing. I'm also working on some features for saph_ to use
> in her upcoming website_, like better blog features and image gallery
> stuff.

This is all well and good, and perhaps Plonk is what I want.  But, for
the benefit of my understanding, and of those perhaps trying similar
things, what is the general way of attacking this in Nevow?  I'm
assuming that there would be three different "fragments" -- as Donovan
called them -- involved here.  One fragment would be the main
navigation bar in the header.  The other fragment be this
sub-navigation menu that I had on the left in my example.  The last
fragment would be the body.

A click in the main navigation bar would change the menu on the left,
, the body, and the currently selected "section title" would be
hilighted.  When an item is selected from the sub-navigation menu, a
couple of things might happen.  If that link leads to a leaf node,
just the body is updated.  If it has sub-nodes, it will expand those
out and display the main page for that sub-section in the body.  With
both of these options, the appropriate current location is hilighted.

I can see those interactions, but I don't know anything of where to
start.  I'm still not completely sold on wanting to use Plonk, and I
think I would learn easier if I did this instead of having to grok the
code for Plonk.  Plus, isn't that what Twisted and Nevow are about?
No...not the NIH syndrome...it's doing exactly what you want.  Right?

Travis


From twisted-web@twistedmatrix.com  Fri Dec 12 13:36:02 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Fri, 12 Dec 2003 07:36:02 -0600
Subject: [Twisted-web] nevow CannotAdapt error
In-Reply-To: <BCBAEC5E-2C5D-11D8-8853-000A95864FC4@divmod.org>
References: <000501c3c067$cfd28270$6501a8c0@khowe> <BCBAEC5E-2C5D-11D8-8853-000A95864FC4@divmod.org>
Message-ID: <20031212133602.8DFED43F21@server1.messagingengine.com>

Some of the confusion is probably because I had it incorrect in the doc. 
I updated it yesterday to say something like:

    document = xml("some html")

instead of:

    document = "<xml>some html</xml>"


On Thu, 11 Dec 2003 23:43:31 -0500, "Donovan Preston" <dp@divmod.org>
said:
> 
> On Dec 11, 2003, at 11:24 PM, Kevin Howe wrote:
> 
> > I'm trying to run a simple nevow test:
> >
> > from nevow.renderer import Renderer
> > class MyRenderer(Renderer):
> >     document = """<xml>test</xml>"""
> > m = MyRenderer()
> >
> > But get the following traceback?
> 
> <snip cannot adapt>
> 
> Are you using cvs? If you use CVS HEAD, you might find that this 
> problem goes away. Otherwise, you'll need to import atop.regadapt and 
> call justDoIt to register the adapters.
> 
> Also, note that your document is a simple python string, but has xml in 
> it. Nevow quotes normal python strings, so if you want it to go through 
> as straight xml, you should wrap it in a stan.xml object first.
> 
> dp
> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From twisted-web@twistedmatrix.com  Sat Dec 13 05:29:33 2003
From: twisted-web@twistedmatrix.com (Alex Levy)
Date: Sat, 13 Dec 2003 00:29:33 -0500
Subject: [Twisted-web] Patch for HTMLRenderer
Message-ID: <1071293373.26195.625.camel@hyla>

--=-yUvw4faX2h8yELxEpJgA
Content-Type: multipart/mixed; boundary="=-4dHAeKoebccxtX6KFODq"


--=-4dHAeKoebccxtX6KFODq
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

This patch just makes it easier to use HTMLRenderer with a string
instead of a file. Not essential, but certainly convenient.

--=20
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_


--=-4dHAeKoebccxtX6KFODq
Content-Disposition: attachment; filename=renderer-with-template.diff
Content-Type: text/x-patch; name=renderer-with-template.diff; charset=iso-8859-1
Content-Transfer-Encoding: base64

PyByZW5kZXJlci13aXRoLXRlbXBsYXRlLmRpZmYNCkluZGV4OiByZW5kZXJlci5weQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnMvUXVvdGllbnQvbmV2b3cvcmVuZGVyZXIucHksdg0KcmV0cmll
dmluZyByZXZpc2lvbiAxLjI3DQpkaWZmIC11IC1yMS4yNyByZW5kZXJlci5weQ0KLS0tIHJlbmRl
cmVyLnB5CTExIERlYyAyMDAzIDAwOjQ4OjI0IC0wMDAwCTEuMjcNCisrKyByZW5kZXJlci5weQkx
MyBEZWMgMjAwMyAwNToxODowMCAtMDAwMA0KQEAgLTIyNCwxNyArMjI0LDIzIEBADQogICAgICIi
Ig0KICAgICB0ZW1wbGF0ZURpcmVjdG9yeSA9ICcnDQogICAgIHRlbXBsYXRlRmlsZSA9ICcnDQot
ICAgIGRlZiBfX2luaXRfXyhzZWxmLCBvcmlnaW5hbD1Ob25lLCB0ZW1wbGF0ZURpcmVjdG9yeT1O
b25lLCB0ZW1wbGF0ZUZpbGU9Tm9uZSk6DQorICAgIHRlbXBsYXRlID0gJycNCisgICAgZGVmIF9f
aW5pdF9fKHNlbGYsIG9yaWdpbmFsPU5vbmUsIHRlbXBsYXRlRGlyZWN0b3J5PU5vbmUsIHRlbXBs
YXRlRmlsZT1Ob25lLCB0ZW1wbGF0ZT1Ob25lKToNCiAgICAgICAgIGlmIHRlbXBsYXRlRGlyZWN0
b3J5IGlzIG5vdCBOb25lOg0KICAgICAgICAgICAgIHNlbGYudGVtcGxhdGVEaXJlY3RvcnkgPSB0
ZW1wbGF0ZURpcmVjdG9yeQ0KICAgICAgICAgaWYgdGVtcGxhdGVGaWxlIGlzIG5vdCBOb25lOg0K
ICAgICAgICAgICAgIHNlbGYudGVtcGxhdGVGaWxlID0gdGVtcGxhdGVGaWxlDQorICAgICAgICBp
ZiB0ZW1wbGF0ZSBpcyBub3QgTm9uZToNCisgICAgICAgICAgICBzZWxmLnRlbXBsYXRlID0gdGVt
cGxhdGUNCiAgICAgICAgIHNlbGYucHJlY29tcGlsZVRpbWUgPSBOb25lDQogICAgICAgICBSZW5k
ZXJlci5fX2luaXRfXyhzZWxmLCBvcmlnaW5hbCkNCiANCiAgICAgZGVmIHByZWNvbXBpbGUoc2Vs
Zik6DQogICAgICAgICBjb250ZXh0ID0gV292ZW5Db250ZXh0KHByZWNvbXBpbGU9VHJ1ZSkucmVt
ZW1iZXIoc2VsZiwgcmVzb3VyY2UuSVJlc291cmNlKQ0KLSAgICAgICAgZG9tID0gbWljcm9kb20u
cGFyc2Uob3MucGF0aC5qb2luKHNlbGYudGVtcGxhdGVEaXJlY3RvcnksIHNlbGYudGVtcGxhdGVG
aWxlKSkNCisgICAgICAgIGlmIHNlbGYudGVtcGxhdGUgaXMgbm90IE5vbmU6DQorICAgICAgICAg
ICAgZG9tID0gbWljcm9kb20ucGFyc2VTdHJpbmcoc2VsZi50ZW1wbGF0ZSkNCisgICAgICAgIGVs
c2U6DQorICAgICAgICAgICAgZG9tID0gbWljcm9kb20ucGFyc2Uob3MucGF0aC5qb2luKHNlbGYu
dGVtcGxhdGVEaXJlY3RvcnksIHNlbGYudGVtcGxhdGVGaWxlKSkNCiAgICAgICAgIGRvYyA9IGZs
YXR0ZW4oSVNlcmlhbGl6YWJsZShkb20uY2hpbGROb2Rlc1swXSkuc2VyaWFsaXplKGNvbnRleHQs
IE5vbmUpKQ0KICAgICAgICAgIyBQcmVjb21waWxlZC4gUmVjb3JkIHRoZSB0aW1lIHNvIHdlIGtu
b3cgd2hlbiB0byByZWxvYWQgdGhlIHRlbXBsYXRlLg0KICAgICAgICAgc2VsZi5wcmVjb21waWxl
VGltZSA9IHRpbWUudGltZSgpDQpAQCAtMjQyLDggKzI0OCw5IEBADQogDQogICAgIGRlZiByZW5k
ZXIoc2VsZiwgcmVxdWVzdCk6DQogICAgICAgICAjIFByZWNvbXBpbGUgKGFnYWluKSBpZiB0aGUg
dGVtcGxhdGUgZmlsZSBoYXMgYmVlbiBjaGFuZ2VkDQorICAgICAgICAjIChvciBpZiB3ZSdyZSB1
c2luZyBhIHRlbXBsYXRlIHN0cmluZykNCiAgICAgICAgIGZ1bGxwYXRoID0gb3MucGF0aC5qb2lu
KHNlbGYudGVtcGxhdGVEaXJlY3RvcnksIHNlbGYudGVtcGxhdGVGaWxlKQ0KLSAgICAgICAgaWYg
c2VsZi5wcmVjb21waWxlVGltZSBpcyBOb25lIG9yIFwNCisgICAgICAgIGlmIHNlbGYucHJlY29t
cGlsZVRpbWUgaXMgTm9uZSBvciBzZWxmLnRlbXBsYXRlIGlzIG5vdCBOb25lIG9yIFwNCiAgICAg
ICAgICAgICAgICBvcy5zdGF0KGZ1bGxwYXRoKVtzdGF0LlNUX0NUSU1FXSA+IHNlbGYucHJlY29t
cGlsZVRpbWU6DQogICAgICAgICAgICAgc2VsZi5kb2MgPSBzZWxmLnByZWNvbXBpbGUoKQ0KICAg
ICAgICAgcmV0dXJuIFJlbmRlcmVyLnJlbmRlcihzZWxmLHJlcXVlc3QpDQo=

--=-4dHAeKoebccxtX6KFODq--

--=-yUvw4faX2h8yELxEpJgA
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQA/2qO8VM70CYlRlK4RAl8xAKCn59gjfldIrujjzT6aBEaFfX7+lQCeLs8G
lOGVG7DEQb9p3Nb5wybQsqI=
=2+tZ
-----END PGP SIGNATURE-----

--=-yUvw4faX2h8yELxEpJgA--



From twisted-web@twistedmatrix.com  Sun Dec 14 02:09:46 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Sat, 13 Dec 2003 21:09:46 -0500
Subject: [Twisted-web] Patch for HTMLRenderer
In-Reply-To: <1071293373.26195.625.camel@hyla>
References: <1071293373.26195.625.camel@hyla>
Message-ID: <3FDBC66A.1040507@twistedmatrix.com>

Alex Levy wrote:
> This patch just makes it easier to use HTMLRenderer with a string
> instead of a file. Not essential, but certainly convenient.

If nobody's gotten around to this patch yet, you should submit it to the 
Quotient bug tracker:

   http://divmod.org/users/roundup.twistd/quotient/

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/


From twisted-web@twistedmatrix.com  Mon Dec 15 13:06:40 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Mon, 15 Dec 2003 15:06:40 +0200
Subject: [Twisted-web] (no subject)
Message-ID: <20031215132033.IMXE26787.shunit@shunit>

775067



From twisted-web@twistedmatrix.com  Mon Dec 15 13:14:52 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Mon, 15 Dec 2003 15:14:52 +0200
Subject: [Twisted-web] Woven Input Problem  cont.
Message-ID: <20031215132845.IOGJ26787.shunit@shunit>

sorry,

rest of scenario:
<span model="foo" view ="Widget">
  <span  model="0" view ="Text"></span>
</span>

where foo returns an instance of "0" and "0" has a getData() method, which returns data from remote http server (returning a Deffered)

all this leads to inf. loop of the getData()
how do i get out of it??????????




From twisted-web@twistedmatrix.com  Mon Dec 15 15:22:09 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Mon, 15 Dec 2003 09:22:09 -0600
Subject: [Twisted-web] TypedInterface implementation returned in a render_ method
Message-ID: <20031215152209.DCCA9436BD@server1.messagingengine.com>

I have the following render_main method which returns the current tag,
but specifies an implementation of a TypedInterface as 'data', and
freeform.configure as a child node.

    def render_main(self, context, data):
        if "mkvob" in self.selected_menu_items:
            return context.tag(data=forms.MkvobForm())[
            freeform.configure ]
        else:
            return Base.render_main(self, context, data)


The TypedInterface is defined as follows:


class IMkvobForm(formless.TypedInterface):
    def do_mkvob(self,
                 request=formless.Request(),
                 tag=typed.VobTags(),
                 site=typed.Sites(),
                 other_sites=typed.Sites()):
        """Make a VOB

        Make a ClearCase VOB.
        """
    do_mkvob = formless.autocallable(do_mkvob)

class MkvobForm(object):
    __implements__ = IMkvobForm,

    def do_mkvob(self, request, tag, site, other_sites):
        vobs = tag.split(",")
        other_sites = other_sites.split(",")
        print "DEBUG: locals() = " + str(locals())
        Redirect("/")


Eventually this will do something useful.  This code succeeds in
displaying the form when I select the mkvob menu item.  However, when I
click submit, I get the following error before the Type coerce methods
are called.


2003/12/15 09:16 Central Standard Time [HTTPChannel,1,127.0.0.1]
Traceback (most
 recent call last):
          File "C:\Python23\Lib\site-packages\twisted\protocols\http.py",
          line 1
000, in rawDataReceived
            self.allContentReceived()
          File "C:\Python23\Lib\site-packages\twisted\protocols\http.py",
          line 9
91, in allContentReceived
            req.requestReceived(command, path, version)
          File "C:\Python23\Lib\site-packages\twisted\protocols\http.py",
          line 5
49, in requestReceived
            self.process()
          File "C:\svn\Quotient\nevow\appserver.py", line 99, in process
            return server.Request.process(self)
        --- <exception caught here> ---
          File "C:\Python23\Lib\site-packages\twisted\web\server.py",
          line 158,
in process
            resrc = self.site.getResourceFor(self)
          File "C:\svn\Quotient\nevow\appserver.py", line 125, in
          getResourceFor

            res = gener.getResourceForRequest(request)
          File "C:\svn\Quotient\nevow\appserver.py", line 50, in
          getResourceForR
equest
            return self.postForm(request, res, configurable, ctx,
            bindingName, r
equest.args)
          File "C:\svn\Quotient\nevow\appserver.py", line 53, in postForm
            return configurable.postForm(ctx, bindingName, args)
          File "C:\svn\Quotient\nevow\freeform.py", line 731, in postForm
            binding = configurable.getBinding(ctx, seg)
          File "C:\svn\Quotient\nevow\freeform.py", line 796, in
          getBinding
            raise ImproperInputError, self.original
        nevow.freeform.ImproperInputError: An unconfigurable object
        (None)



Does anyone know what I'm doing wrong here?
Thanks.
-Justin


From twisted-web@twistedmatrix.com  Mon Dec 15 16:00:37 2003
From: twisted-web@twistedmatrix.com (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Mon, 15 Dec 2003 17:00:37 +0100
Subject: [Twisted-web] Woven Input Problem  cont.
In-Reply-To: <20031215132845.IOGJ26787.shunit@shunit>
References: <20031215132845.IOGJ26787.shunit@shunit>
Message-ID: <200312151700.37170.lafou@wanadoo.fr>

woven is really buggy with deferred, try using nevow from quotient 
(divmod.org) instead.

On Monday 15 December 2003 14:14, orya@bgumail.bgu.ac.il wrote:
> sorry,
>
> rest of scenario:
> <span model="foo" view ="Widget">
>   <span  model="0" view ="Text"></span>
> </span>
>
> where foo returns an instance of "0" and "0" has a getData() method, which
> returns data from remote http server (returning a Deffered)
>
> all this leads to inf. loop of the getData()
> how do i get out of it??????????
>
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web



From twisted-web@twistedmatrix.com  Mon Dec 15 16:09:06 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Mon, 15 Dec 2003 11:09:06 -0500
Subject: [Twisted-web] Woven Input Problem  cont.
In-Reply-To: <200312151700.37170.lafou@wanadoo.fr>
References: <20031215132845.IOGJ26787.shunit@shunit> <200312151700.37170.lafou@wanadoo.fr>
Message-ID: <3FDDDCA2.7070807@twistedmatrix.com>

Philippe Lafoucriere wrote:
> woven is really buggy with deferred, try using nevow from quotient 
> (divmod.org) instead.

Actually, nevow doesn't even support deferred data ("models") yet, but 
hopefully that will be remedied shortly ;)

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/


From twisted-web@twistedmatrix.com  Mon Dec 15 16:14:23 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Mon, 15 Dec 2003 11:14:23 -0500
Subject: [Twisted-web] Woven Input Problem  cont.
In-Reply-To: <3FDDDCA2.7070807@twistedmatrix.com>
References: <20031215132845.IOGJ26787.shunit@shunit> <200312151700.37170.lafou@wanadoo.fr> <3FDDDCA2.7070807@twistedmatrix.com>
Message-ID: <BF191F9D-2F19-11D8-A9FB-000A95864FC4@divmod.org>

On Dec 15, 2003, at 11:09 AM, Christopher Armstrong wrote:

> Philippe Lafoucriere wrote:
>> woven is really buggy with deferred, try using nevow from quotient 
>> (divmod.org) instead.
>
> Actually, nevow doesn't even support deferred data ("models") yet, but 
> hopefully that will be remedied shortly ;)

It supports deferred renderers, though.

dp



From twisted-web@twistedmatrix.com  Mon Dec 15 17:03:15 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Mon, 15 Dec 2003 19:03:15 +0200
Subject: [Twisted-web] new to Guard
Message-ID: <20031215171710.JSTH26787.shunit@shunit>


> Hello there my Twisted fellow mates,
> 
> I have used Twisted to build an http web interface.
> i want to add an authentication form before logging into the site
> i'm a bit confused from the cred/guard documentation...
> 
> How do i attach a guard to my existing web server??
> And how do i redirect to the main page after logged in??
> I'll appriciate it if someone can guide me through the initial steps.
> 
> here is an little example of the main class code:
> *************************************************
> import os
> 
> from twisted.web import server, static
> from twisted.application import service, internet
> 
> from main import MainPage
> 
> ##########################
> 
> # Create Web server
> root = MainPage() # inherits from page.Page
> root.putChild("css", static.File("css"))    # css subdir
> site = server.Site(root)
> 
> # Create Application
> application = service.Application("webserver")
> 
> # Create Web service
> port = 8080
> web = internet.TCPServer(port, site)
> web.setServiceParent(application)
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From twisted-web@twistedmatrix.com  Mon Dec 15 18:12:00 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Mon, 15 Dec 2003 20:12:00 +0200
Subject: [Twisted-web] Rendering forms from HTML templates using freeform
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C1A742@santarosa.dsnt.disksites.com>

SGksDQoNCklzIGl0IHBvc3NpYmxlIHRvIHJlbmRlciBmcmVlZm9ybSBmb3JtcyB1c2luZyBIVE1M
IHRlbXBsYXRlcyBpbnN0ZWFkIG9mIHJlbHlpbmcgb24gdGhlIGRlZmF1bHQgZnJlZWZvcm0gYmVo
YXZpb3I/DQoNCkkgbmVlZCBwcmVjaXNlIGNvbnRyb2wgb2YgdGhlIGxheW91dCBvZiB0aGUgZm9y
bXMgLS0gdXNpbmcgdGhlIGRlZmF1bHQgbGlzdCBvZiBib3hlcyBpcyBub3Qgc3VmZmljaWVudC4g
T2YgY291cnNlIEkgY2FuIG1vZGlmeSB0aGUgc3R5bGVzaGVldCwgYnV0IEknbSByZWFsbHkgbG9v
a2luZyBmb3IgYSB3YXkgdG8gZGVzaWduIHRoZSBmb3JtJ3MgbGF5b3V0IHRvdGFsbHkgc2VwYXJh
dGVseSBmcm9tIHRoZSBjb2RlLg0KDQpUaGFua3MsDQoNCi0tIEdhdnJpZS4gDQo=


From twisted-web@twistedmatrix.com  Mon Dec 15 18:33:17 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Mon, 15 Dec 2003 12:33:17 -0600
Subject: [Twisted-web] new to Guard
In-Reply-To: <20031215171710.JSTH26787.shunit@shunit>
References: <20031215171710.JSTH26787.shunit@shunit>
Message-ID: <20031215183317.2DF7542C62@server1.messagingengine.com>

This is a multi-part message in MIME format.

--_----------=_1071513197164060
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset="ISO-8859-1"

Attached is a TAC file showing how to do this in nevow.  You can use
either woven or nevow though.  If you use woven, just define Pages
instead of Renderers, and use site.Site instead of appserver.NevowSite.

-Justin

On Mon, 15 Dec 2003 19:03:15 +0200, orya@bgumail.bgu.ac.il said:
> 
> 
> > Hello there my Twisted fellow mates,
> > 
> > I have used Twisted to build an http web interface.
> > i want to add an authentication form before logging into the site
> > i'm a bit confused from the cred/guard documentation...
> > 
> > How do i attach a guard to my existing web server??
> > And how do i redirect to the main page after logged in??
> > I'll appriciate it if someone can guide me through the initial steps.
> > 
> > here is an little example of the main class code:
> > *************************************************
> > import os
> > 
> > from twisted.web import server, static
> > from twisted.application import service, internet
> > 
> > from main import MainPage
> > 
> > ##########################
> > 
> > # Create Web server
> > root = MainPage() # inherits from page.Page
> > root.putChild("css", static.File("css"))    # css subdir
> > site = server.Site(root)
> > 
> > # Create Application
> > application = service.Application("webserver")
> > 
> > # Create Web service
> > port = 8080
> > web = internet.TCPServer(port, site)
> > web.setServiceParent(application)
> > 
> > 
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python@twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > 
> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

--_----------=_1071513197164060
Content-Disposition: attachment; filename="guarded.tac"
Content-Transfer-Encoding: base64
Content-Type: application/unknown; name="guarded.tac"

ZnJvbSB0d2lzdGVkLndlYi53b3ZlbiBpbXBvcnQgZ3VhcmQKZnJvbSB0d2lz
dGVkLmFwcGxpY2F0aW9uIGltcG9ydCBzZXJ2aWNlLCBpbnRlcm5ldApmcm9t
IHR3aXN0ZWQuY3JlZCBpbXBvcnQgcG9ydGFsLCBjaGVja2Vycwpmcm9tIHR3
aXN0ZWQud2ViIGltcG9ydCByZXNvdXJjZSwgc2VydmVyLCB1dGlsCmZyb20g
dHdpc3RlZC5jcmVkLnBvcnRhbCBpbXBvcnQgUG9ydGFsCmZyb20gdHdpc3Rl
ZC5jcmVkLmNoZWNrZXJzIGltcG9ydCBBbGxvd0Fub255bW91c0FjY2Vzcywg
SW5NZW1vcnlVc2VybmFtZVBhc3N3b3JkRGF0YWJhc2VEb250VXNlCmZyb20g
dHdpc3RlZC53ZWIud292ZW4uZ3VhcmQgaW1wb3J0IFVzZXJuYW1lUGFzc3dv
cmRXcmFwcGVyLCBTZXNzaW9uV3JhcHBlcgpmcm9tIHR3aXN0ZWQuY3JlZC5j
cmVkZW50aWFscyBpbXBvcnQgSUFub255bW91cwoKZnJvbSBuZXZvdyBpbXBv
cnQgcmVuZGVyZXIsIHRhZ3MsIGFwcHNlcnZlcgoKCiMjIyBSZW5kZXJlcnMK
CmNsYXNzIE5vdExvZ2dlZEluKHJlbmRlcmVyLlJlbmRlcmVyKToKICAgICIi
IlRoZSByZXNvdXJjZSB0aGF0IGlzIHJldHVybmVkIHdoZW4geW91IGFyZSBu
b3QgbG9nZ2VkIGluIiIiCiAgICBkb2N1bWVudCA9IHRhZ3MuaHRtbFsKICAg
ICAgICB0YWdzLmhlYWRbdGFncy50aXRsZVsiTm90IExvZ2dlZCBJbiJdXSwK
ICAgICAgICB0YWdzLmJvZHlbCiAgICAgICAgICAgIHRhZ3MuZm9ybShhY3Rp
b249Z3VhcmQuSU5JVF9QRVJTUEVDVElWRSlbCiAgICAgICAgICAgICAgICB0
YWdzLnRhYmxlWwogICAgICAgICAgICAgICAgICAgIHRhZ3MudHJbCiAgICAg
ICAgICAgICAgICAgICAgICAgIHRhZ3MudGRbICJVc2VybmFtZToiIF0sCiAg
ICAgICAgICAgICAgICAgICAgICAgIHRhZ3MudGRbIHRhZ3MuaW5wdXQodHlw
ZT0ndGV4dCcsbmFtZT0ndXNlcm5hbWUnKSBdLAogICAgICAgICAgICAgICAg
ICAgIF0sCiAgICAgICAgICAgICAgICAgICAgdGFncy50clsKICAgICAgICAg
ICAgICAgICAgICAgICAgdGFncy50ZFsgIlBhc3N3b3JkOiIgXSwKICAgICAg
ICAgICAgICAgICAgICAgICAgdGFncy50ZFsgdGFncy5pbnB1dCh0eXBlPSdw
YXNzd29yZCcsbmFtZT0ncGFzc3dvcmQnKSBdLAogICAgICAgICAgICAgICAg
ICAgIF0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICB0YWdz
LmlucHV0KHR5cGU9J3N1Ym1pdCcpLAogICAgICAgICAgICAgICAgdGFncy5w
LAogICAgICAgICAgICBdCiAgICAgICAgXQogICAgXQoKY2xhc3MgTG9nZ2Vk
SW4ocmVuZGVyZXIuUmVuZGVyZXIpOgogICAgIiIiVGhlIHJlc291cmNlIHRo
YXQgaXMgcmV0dXJuZWQgd2hlbiB5b3UgbG9naW4iIiIKICAgIGRvY3VtZW50
ID0gdGFncy5odG1sWwogICAgICAgIHRhZ3MuaGVhZFt0YWdzLnRpdGxlWyJM
b2dnZWQgSW4iXV0sCiAgICAgICAgdGFncy5ib2R5WwogICAgICAgICAgICB0
YWdzLmgzKHJlbmRlcmVyPXRhZ3MuZGlyZWN0aXZlKCJ3ZWxjb21lIikpLAog
ICAgICAgICAgICB0YWdzLmEoaHJlZj1ndWFyZC5ERVNUUk9ZX1BFUlNQRUNU
SVZFKVsiTG9nb3V0Il0KICAgICAgICBdCiAgICBdCgogICAgZGVmIF9faW5p
dF9fKHNlbGYsIHVzZXJuYW1lLCAqYXJncywgKiprdyk6CiAgICAgICAgc2Vs
Zi51c2VybmFtZSA9IHVzZXJuYW1lCiAgICAgICAgcmVuZGVyZXIuUmVuZGVy
ZXIuX19pbml0X18oc2VsZiwgKmFyZ3MsICoqa3cpCgogICAgZGVmIHJlbmRl
cl93ZWxjb21lKHNlbGYsIGNvbnRleHQsIGRhdGEpOgogICAgICAgIHJldHVy
biBjb250ZXh0LnRhZ1sgIkhlbGxvLCAlcyEiICUgc2VsZi51c2VybmFtZV0K
CiAgICBkZWYgbG9nb3V0KHNlbGYpOgogICAgICAgIHByaW50ICIlcyBsb2dn
ZWQgb3V0ISIgJSBzZWxmLnVzZXJuYW1lCgoKIyMjIEF1dGhlbnRpY2F0aW9u
CgpkZWYgbm9Mb2dvdXQoKToKICAgIHJldHVybiBOb25lCgpkZWYgbG9naW5D
YWxsYmFjayhpZ25vcmVkKToKICAgIHJldHVybiB1dGlsLlJlZGlyZWN0KCIu
IikKCmNsYXNzIE15UmVhbG06CiAgICAiIiJBIHNpbXBsZSBpbXBsZW1lbnRv
ciBvZiBjcmVkJ3MgSVJlYWxtLgogICAgICAgRm9yIHdlYiwgdGhpcyBnaXZl
cyB1cyB0aGUgTG9nZ2VkSW4gcGFnZS4KICAgICIiIgogICAgX19pbXBsZW1l
bnRzX18gPSBwb3J0YWwuSVJlYWxtCgogICAgZGVmIHJlcXVlc3RBdmF0YXIo
c2VsZiwgYXZhdGFySWQsIG1pbmQsICppbnRlcmZhY2VzKToKICAgICAgICBm
b3IgaWZhY2UgaW4gaW50ZXJmYWNlczoKICAgICAgICAgICAgaWYgaWZhY2Ug
aXMgcmVzb3VyY2UuSVJlc291cmNlOgogICAgICAgICAgICAgICAgIyBkbyB3
ZWIgc3R1ZmYKICAgICAgICAgICAgICAgIGlmIGF2YXRhcklkIGlzIGNoZWNr
ZXJzLkFOT05ZTU9VUzoKICAgICAgICAgICAgICAgICAgICByZXNjID0gTm90
TG9nZ2VkSW4oKQogICAgICAgICAgICAgICAgICAgIHJlc2MucmVhbG0gPSBz
ZWxmCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChyZXNvdXJjZS5JUmVz
b3VyY2UsIHJlc2MsIG5vTG9nb3V0KQogICAgICAgICAgICAgICAgZWxzZToK
ICAgICAgICAgICAgICAgICAgICByZXNjID0gTG9nZ2VkSW4oYXZhdGFySWQp
CiAgICAgICAgICAgICAgICAgICAgcmVzYy5yZWFsbSA9IHNlbGYKICAgICAg
ICAgICAgICAgICAgICByZXR1cm4gKHJlc291cmNlLklSZXNvdXJjZSwgcmVz
YywgcmVzYy5sb2dvdXQpCgogICAgICAgIHJhaXNlIE5vdEltcGxlbWVudGVk
RXJyb3IoIkNhbid0IHN1cHBvcnQgdGhhdCBpbnRlcmZhY2UuIikKCgpyZWFs
bSA9IE15UmVhbG0oKQpwb3J0YWwgPSBQb3J0YWwocmVhbG0pCm15Q2hlY2tl
ciA9IEluTWVtb3J5VXNlcm5hbWVQYXNzd29yZERhdGFiYXNlRG9udFVzZSgp
Cm15Q2hlY2tlci5hZGRVc2VyKCJ1c2VyIiwicGFzc3dvcmQiKQojIEFsbG93
IGFub255bW91cyBhY2Nlc3MuICBOZWVkZWQgZm9yIGFjY2VzcyB0byBOb3RM
b2dnZWRJbgpwb3J0YWwucmVnaXN0ZXJDaGVja2VyKEFsbG93QW5vbnltb3Vz
QWNjZXNzKCksIElBbm9ueW1vdXMpCiMgQWxsb3cgdXNlcnMgcmVnaXN0ZXJl
ZCBpbiB0aGUgcGFzc3dvcmQgZmlsZS4KcG9ydGFsLnJlZ2lzdGVyQ2hlY2tl
cihteUNoZWNrZXIpCgpzaXRlID0gYXBwc2VydmVyLk5ldm93U2l0ZSgKICAg
IHJlc291cmNlPWd1YXJkLlNlc3Npb25XcmFwcGVyKAogICAgICAgIGd1YXJk
LlVzZXJuYW1lUGFzc3dvcmRXcmFwcGVyKHBvcnRhbCwgY2FsbGJhY2s9bG9n
aW5DYWxsYmFjaykKICAgICksCikKCmFwcGxpY2F0aW9uID0gc2VydmljZS5B
cHBsaWNhdGlvbigiZ3VhcmRlZCIpCmludGVybmV0LlRDUFNlcnZlcig4MDgw
LCBzaXRlKS5zZXRTZXJ2aWNlUGFyZW50KGFwcGxpY2F0aW9uKQo=

--_----------=_1071513197164060--



From twisted-web@twistedmatrix.com  Mon Dec 15 19:02:30 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Mon, 15 Dec 2003 14:02:30 -0500
Subject: [Twisted-web] Rendering forms from HTML templates using freeform
In-Reply-To: <7B4DD91F9C5D474898E5F4E43B9213F5C1A742@santarosa.dsnt.disksites.com>
References: <7B4DD91F9C5D474898E5F4E43B9213F5C1A742@santarosa.dsnt.disksites.com>
Message-ID: <3B7B38D5-2F31-11D8-A9FB-000A95864FC4@divmod.org>

On Dec 15, 2003, at 1:12 PM, Gavrie Philipson wrote:

> Hi,
>
> Is it possible to render freeform forms using HTML templates instead 
> of relying on the default freeform behavior?
>
> I need precise control of the layout of the forms -- using the default 
> list of boxes is not sufficient. Of course I can modify the 
> stylesheet, but I'm really looking for a way to design the form's 
> layout totally separately from the code.

Freeform will eventually use patterns, slots and keys declared in the 
template to assist it with the form layout/rendering process. Until 
then, there is nothing stopping you from producing your own forms. The 
freeform post location scheme is fairly simple to figure out, and the 
method argument names make a straight translation to input element 
names for the most part.

If you have a configurable object (an instance of a class which 
implements IConfigurable or declares it implements one or more 
subclasses of TypedInterface) which lives at the URL:

/foo/bar

You can call methods on bar by posting to:

/foo/bar/freeform_post:methodName

The input names are the same names as the parameter names to the method 
methodName. So if methodName looked like this:

def methodName(self, foo=formless.String(), bar=formless.Integer()): 
pass

We could pass arguments to this method by producing a form which looked 
like this:

<form action="/foo/bar/freeform_post:methodName">
	<input type="text" name="foo" />
	<input type="text" name="bar" />
</form>

It's also useful to have freeform render a form for you, copy the 
source into your favorite HTML editor, format it, and rearrange it from 
there.

However, in anticipation of freeform's coming ability to allow you to 
control the layout more precisely while still auto-creating the form, I 
would like to gather use cases. Can you please give me a few methods 
which you will be exposing to the web, and the precisely laid out forms 
which you would like to invoke those methods? If you give me real life 
use cases, I will be able to keep them in mind as I do the refactoring 
to support them, and probably write tests that ensure your use cases 
are covered properly in the future.

dp



From twisted-web@twistedmatrix.com  Mon Dec 15 19:32:46 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Mon, 15 Dec 2003 13:32:46 -0600
Subject: [Twisted-web] TypedInterface implementation returned in a render_ method
In-Reply-To: <20031215152209.DCCA9436BD@server1.messagingengine.com>
References: <20031215152209.DCCA9436BD@server1.messagingengine.com>
Message-ID: <20031215193246.BFC08444C0@server1.messagingengine.com>

This is a multi-part message in MIME format.

--_----------=_1071516766319720
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset="ISO-8859-1"

Attached is a TAP that demonstrates my problem.

Expand ClearCase > VOB > mkvob and then submit the form and see the
error.


On Mon, 15 Dec 2003 09:22:09 -0600, "Justin Johnson"
<justinjohnson@fastmail.fm> said:
> I have the following render_main method which returns the current tag,
> but specifies an implementation of a TypedInterface as 'data', and
> freeform.configure as a child node.
> 
>     def render_main(self, context, data):
>         if "mkvob" in self.selected_menu_items:
>             return context.tag(data=forms.MkvobForm())[
>             freeform.configure ]
>         else:
>             return Base.render_main(self, context, data)
> 
> 
> The TypedInterface is defined as follows:
> 
> 
> class IMkvobForm(formless.TypedInterface):
>     def do_mkvob(self,
>                  request=formless.Request(),
>                  tag=typed.VobTags(),
>                  site=typed.Sites(),
>                  other_sites=typed.Sites()):
>         """Make a VOB
> 
>         Make a ClearCase VOB.
>         """
>     do_mkvob = formless.autocallable(do_mkvob)
> 
> class MkvobForm(object):
>     __implements__ = IMkvobForm,
> 
>     def do_mkvob(self, request, tag, site, other_sites):
>         vobs = tag.split(",")
>         other_sites = other_sites.split(",")
>         print "DEBUG: locals() = " + str(locals())
>         Redirect("/")
> 
> 
> Eventually this will do something useful.  This code succeeds in
> displaying the form when I select the mkvob menu item.  However, when I
> click submit, I get the following error before the Type coerce methods
> are called.
> 
> 
> 2003/12/15 09:16 Central Standard Time [HTTPChannel,1,127.0.0.1]
> Traceback (most
>  recent call last):
>           File "C:\Python23\Lib\site-packages\twisted\protocols\http.py",
>           line 1
> 000, in rawDataReceived
>             self.allContentReceived()
>           File "C:\Python23\Lib\site-packages\twisted\protocols\http.py",
>           line 9
> 91, in allContentReceived
>             req.requestReceived(command, path, version)
>           File "C:\Python23\Lib\site-packages\twisted\protocols\http.py",
>           line 5
> 49, in requestReceived
>             self.process()
>           File "C:\svn\Quotient\nevow\appserver.py", line 99, in process
>             return server.Request.process(self)
>         --- <exception caught here> ---
>           File "C:\Python23\Lib\site-packages\twisted\web\server.py",
>           line 158,
> in process
>             resrc = self.site.getResourceFor(self)
>           File "C:\svn\Quotient\nevow\appserver.py", line 125, in
>           getResourceFor
> 
>             res = gener.getResourceForRequest(request)
>           File "C:\svn\Quotient\nevow\appserver.py", line 50, in
>           getResourceForR
> equest
>             return self.postForm(request, res, configurable, ctx,
>             bindingName, r
> equest.args)
>           File "C:\svn\Quotient\nevow\appserver.py", line 53, in postForm
>             return configurable.postForm(ctx, bindingName, args)
>           File "C:\svn\Quotient\nevow\freeform.py", line 731, in postForm
>             binding = configurable.getBinding(ctx, seg)
>           File "C:\svn\Quotient\nevow\freeform.py", line 796, in
>           getBinding
>             raise ImproperInputError, self.original
>         nevow.freeform.ImproperInputError: An unconfigurable object
>         (None)
> 
> 
> 
> Does anyone know what I'm doing wrong here?
> Thanks.
> -Justin
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

--_----------=_1071516766319720
Content-Disposition: attachment; filename="menus_and_configurables.tac"
Content-Transfer-Encoding: base64
Content-Type: application/unknown; name="menus_and_configurables.tac"

ZnJvbSB0d2lzdGVkLndlYi53b3ZlbiBpbXBvcnQgZ3VhcmQKZnJvbSB0d2lz
dGVkLmFwcGxpY2F0aW9uIGltcG9ydCBzZXJ2aWNlLCBpbnRlcm5ldApmcm9t
IHR3aXN0ZWQuY3JlZCBpbXBvcnQgcG9ydGFsLCBjaGVja2Vycwpmcm9tIHR3
aXN0ZWQud2ViIGltcG9ydCByZXNvdXJjZSwgc2VydmVyLCB1dGlsCmZyb20g
dHdpc3RlZC5jcmVkLnBvcnRhbCBpbXBvcnQgUG9ydGFsCmZyb20gdHdpc3Rl
ZC5jcmVkLmNoZWNrZXJzIGltcG9ydCBBbGxvd0Fub255bW91c0FjY2Vzcywg
SW5NZW1vcnlVc2VybmFtZVBhc3N3b3JkRGF0YWJhc2VEb250VXNlCmZyb20g
dHdpc3RlZC53ZWIud292ZW4uZ3VhcmQgaW1wb3J0IFVzZXJuYW1lUGFzc3dv
cmRXcmFwcGVyLCBTZXNzaW9uV3JhcHBlcgpmcm9tIHR3aXN0ZWQuY3JlZC5j
cmVkZW50aWFscyBpbXBvcnQgSUFub255bW91cwpmcm9tIHR3aXN0ZWQud2Vi
LnV0aWwgaW1wb3J0IFJlZGlyZWN0CgoKZnJvbSBuZXZvdyBpbXBvcnQgcmVu
ZGVyZXIsIHRhZ3MsIGFwcHNlcnZlcgpmcm9tIG5ldm93LnRhZ3MgaW1wb3J0
ICoKCmZyb20gbmV2b3cgaW1wb3J0IGZvcm1sZXNzLCBmcmVlZm9ybQpmcm9t
IHR3aXN0ZWQud2ViLnV0aWwgaW1wb3J0IFJlZGlyZWN0CgpjbGFzcyBJTWt2
b2JGb3JtKGZvcm1sZXNzLlR5cGVkSW50ZXJmYWNlKToKICAgIGRlZiBkb19t
a3ZvYihzZWxmLAogICAgICAgICAgICAgICAgIHJlcXVlc3Q9Zm9ybWxlc3Mu
UmVxdWVzdCgpLAogICAgICAgICAgICAgICAgIHRhZz1mb3JtbGVzcy5TdHJp
bmcoKSwKICAgICAgICAgICAgICAgICBzaXRlPWZvcm1sZXNzLlN0cmluZygp
LAogICAgICAgICAgICAgICAgIG90aGVyX3NpdGVzPWZvcm1sZXNzLlN0cmlu
ZygpKToKICAgICAgICAiIiJNYWtlIGEgVk9CCgogICAgICAgIE1ha2UgYSBD
bGVhckNhc2UgVk9CLgogICAgICAgICIiIgogICAgZG9fbWt2b2IgPSBmb3Jt
bGVzcy5hdXRvY2FsbGFibGUoZG9fbWt2b2IpCgpjbGFzcyBNa3ZvYkZvcm0o
b2JqZWN0KToKICAgIF9faW1wbGVtZW50c19fID0gSU1rdm9iRm9ybSwKCiAg
ICBkZWYgZG9fbWt2b2Ioc2VsZiwgcmVxdWVzdCwgdGFnLCBzaXRlLCBvdGhl
cl9zaXRlcyk6CiAgICAgICAgIiIiTWFrZSBhIFZPQgoKICAgICAgICBNYWtl
IGEgQ2xlYXJDYXNlIFZPQi4KICAgICAgICAiIiIKICAgICAgICB2b2JzID0g
dGFnLnNwbGl0KCIsIikKICAgICAgICBncm91cCA9IHInVUhDQURBQUFcY2N2
b2JhZCcKICAgICAgICBvdGhlcl9zaXRlcyA9IG90aGVyX3NpdGVzLnNwbGl0
KCIsIikKICAgICAgICBwcmludCAiREVCVUc6IGxvY2FscygpID0gIiArIHN0
cihsb2NhbHMoKSkKICAgICAgICBSZWRpcmVjdCgiLyIpCgoKCmNsYXNzIE15
UmVuZGVyZXIocmVuZGVyZXIuUmVuZGVyZXIpOgogICAgIiIiVGhlIHJlbmRl
cmVyIGZvciBsb2dnZWQgaW4gdXNlcnMKICAgICIiIgoKICAgIGRlZiBfX2lu
aXRfXyhzZWxmKToKICAgICAgICBzZWxmLnNlbGVjdGVkX21lbnVfaXRlbXMg
PSBbXQogICAgICAgIHJlbmRlcmVyLlJlbmRlcmVyLl9faW5pdF9fKHNlbGYp
CgogICAgZG9jdW1lbnQgPSB0YWdzLmh0bWxbCiAgICAgICAgdGFncy5oZWFk
W3RhZ3MudGl0bGVbIk15IFJlbmRlcmVyIl1dLAogICAgICAgIHRhZ3MuYm9k
eVsKICAgICAgICAgICAgdGFncy51bChkYXRhPXRhZ3MuZGlyZWN0aXZlKCJt
ZW51X2l0ZW1zIiksIHJlbmRlcmVyPXRhZ3MuZGlyZWN0aXZlKCJtZW51Iikp
LAogICAgICAgICAgICB0YWdzLmRpdihyZW5kZXJlcj10YWdzLmRpcmVjdGl2
ZSgibWFpbiIpKSwKICAgICAgICBdCiAgICBdCgogICAgZGVmIGRhdGFfbWVu
dV9pdGVtcyhzZWxmLCBjb250ZXh0LCBkYXRhKToKICAgICAgICByZXR1cm4g
W05vbmUsIHsKICAgICAgICAgICAgIkNsZWFyQ2FzZSI6IFt7IlZPQiI6IFsi
bWt2b2IiLCJybXZvYiJdfSwgeyJWaWV3IjogWyJybXZpZXciXX0sIHsiVXNl
ciI6IFsiYWRkdXNlciIsImRlbHVzZXIiXX1dLAogICAgICAgICAgICAiQ2xl
YXJRdWVzdCI6IFt7IkRCIjogWyJhZGRkYiIsImRlbGRiIl19LCB7IlVzZXIi
OiBbImFkZHVzZXIiLCJkZWx1c2VyIl19XSwKICAgICAgICB9XQoKICAgIGRl
ZiByZW5kZXJfbWVudShzZWxmLCBjb250ZXh0LCBkYXRhKToKICAgICAgICAi
IiJSZW5kZXIgYSBkaWN0aW9uYXJ5IG9mIHN0cmluZyBrZXlzIGFuZCBsaXN0
IG9mIHN0cmluZy9kaWN0IHZhbHVlcy4iIiIKCiAgICAgICAgIyBVdGlsaXR5
IGZ1bmN0aW9uIHRvIGNvbnN0cnVjdCB0aGUgYW5jaG9yIGhyZWYKICAgICAg
ICBkZWYgYW5jaG9yUGF0aChwYXJlbnQsIGVudHJ5KToKICAgICAgICAgICAg
aWYgcGFyZW50OgogICAgICAgICAgICAgICAgcmV0dXJuICIvZG8vJXMiICUg
Ii8iLmpvaW4oW3BhcmVudCwgZW50cnldKQogICAgICAgICAgICBlbHNlOgog
ICAgICAgICAgICAgICAgcmV0dXJuICIvZG8vJXMiICUgZW50cnkKCiAgICAg
ICAgbWVudSA9IGNvbnRleHQudGFnICMgVGhlIHRhZyB3ZSB3aWxsIHJldHVy
bgogICAgICAgIHBhcmVudCA9IGRhdGFbMF0gIyBUaGUgY3VycmVudCBzZWxl
Y3RlZCBtZW51IGl0ZW0gcGF0aCAoZWcuIC9kby9pdGVtMS9pdGVtMikKCiAg
ICAgICAgIyBGb3IgZXZlcnkgZWxlbWVudCBpbiB0aGUgbWVudQogICAgICAg
IGZvciBrLCB2IGluIGRhdGFbMV0uaXRlbXMoKToKICAgICAgICAgICAgIyBJ
ZiBpdCBpcyBhIHNlbGVjdGVkIG1lbnUgaXRlbSwgYWRkIGEgbGlzdCBpdGVt
IHdpdGggb3VyIGtleSBhcyB0aGUgbGFiZWwKICAgICAgICAgICAgIyBhbmQg
ZXhwYW5kIGl0cyBjaGlsZHJlbiwgdG8gZXhwYW5kIHRoZSBtZW51LgogICAg
ICAgICAgICBpZiBrIGluIHNlbGYuc2VsZWN0ZWRfbWVudV9pdGVtczoKICAg
ICAgICAgICAgICAgICMgVXNlIHRoZSBhcHByb3ByaWF0ZSBDU1MgY2xhc3Mg
ZGVwZW5kaW5nIG9uIHdoZXRoZXIgb3Igbm90IGl0J3Mgc2VsZWN0ZWQKICAg
ICAgICAgICAgICAgIG1lbnUuY2hpbGRyZW4uYXBwZW5kKGxpWyBhKF9jbGFz
cz0ibWVudS1zZWxlY3RlZCIsIGhyZWY9YW5jaG9yUGF0aChwYXJlbnQsIGsp
KVsgayBdIF0pCgogICAgICAgICAgICAgICAgIyBBZGQgYW4gdWwgdGFnIHRv
IHRoaXMgbWVudSBmb3IgdGhlIHN1Ym1lbnUKICAgICAgICAgICAgICAgIHN1
Ym1lbnUgPSB1bCgpCiAgICAgICAgICAgICAgICBtZW51LmNoaWxkcmVuLmFw
cGVuZChzdWJtZW51KQoKICAgICAgICAgICAgICAgICMgQXMgd2UgYWRkIHRo
ZSBjaGlsZCBtZW51IGVudHJpZXMsIHByZXBlbmQgdGhlIHBhcmVudCBwYXRo
IHRvIG91ciBocmVmcwogICAgICAgICAgICAgICAgbmV3X3BhcmVudCA9IHBh
cmVudAogICAgICAgICAgICAgICAgaWYgbmV3X3BhcmVudDoKICAgICAgICAg
ICAgICAgICAgICBuZXdfcGFyZW50ICs9ICIvIiArIGsKICAgICAgICAgICAg
ICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgbmV3X3BhcmVudCA9IGsK
CiAgICAgICAgICAgICAgICAjIEZvciBldmVyeSBlbGVtZW50IG9mIHRoZSB2
YWx1ZSBsaXN0CiAgICAgICAgICAgICAgICBmb3IgaSBpbiB2OgogICAgICAg
ICAgICAgICAgICAgICMgaWYgaXQncyBhIGRpY3QsIGNhdXNlIHJlbmRlcl9t
ZW51IHRvIGJlIGNhbGxlZCBvbiBpdCwgYW5kIHRoZSBvdXRwdXQgcGxhY2Vk
IGluIHRoZSBzdWJtZW51IHRhZwogICAgICAgICAgICAgICAgICAgIGlmIGlz
aW5zdGFuY2UoaSwgZGljdCk6CiAgICAgICAgICAgICAgICAgICAgICAgIHN1
Ym1lbnUuY2hpbGRyZW4uYXBwZW5kKGxpKGRhdGE9W25ld19wYXJlbnQsaV0s
IHJlbmRlcmVyPXNlbGYucmVuZGVyX21lbnUpKQogICAgICAgICAgICAgICAg
ICAgICMgaWYgaXQncyBhIHN0cmluZywganVzdCBhZGQgYSBsaXN0IGl0ZW0g
d2l0aCB0aGUgc3RyaW5nIHRvIHRoZSBtZW51CiAgICAgICAgICAgICAgICAg
ICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgIyBVc2UgdGhlIGFw
cHJvcHJpYXRlIENTUyBjbGFzcwogICAgICAgICAgICAgICAgICAgICAgICBp
ZiBpIGluIHNlbGYuc2VsZWN0ZWRfbWVudV9pdGVtczoKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHN1Ym1lbnUuY2hpbGRyZW4uYXBwZW5kKGxpWyBh
KF9jbGFzcz0ibWVudS1zZWxlY3RlZCIsIGhyZWY9YW5jaG9yUGF0aChuZXdf
cGFyZW50LGkpKVsgaSBdIF0pCiAgICAgICAgICAgICAgICAgICAgICAgIGVs
c2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJtZW51LmNoaWxk
cmVuLmFwcGVuZChsaVsgYShocmVmPWFuY2hvclBhdGgobmV3X3BhcmVudCxp
KSlbIGkgXSBdKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAg
IyBUaGlzIGl0ZW0gd2Fzbid0IHNlbGVjdGVkLiAgSnVzdCBhZGQgYSBsaXN0
IGl0ZW0sIGJ1dCBkb24ndCBleHBhbmQgaXRzIGNoaWxkcmVuCiAgICAgICAg
ICAgICAgICBtZW51LmNoaWxkcmVuLmFwcGVuZChsaVsgYShocmVmPWFuY2hv
clBhdGgocGFyZW50LGspKVsgayBdIF0pCiAgICAgICAgcmV0dXJuIG1lbnUK
CiAgICBkZWYgcmVuZGVyX21haW4oc2VsZiwgY29udGV4dCwgZGF0YSk6CiAg
ICAgICAgaWYgIm1rdm9iIiBpbiBzZWxmLnNlbGVjdGVkX21lbnVfaXRlbXM6
CiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LnRhZyhkYXRhPU1rdm9iRm9y
bSgpKVsgZnJlZWZvcm0uY29uZmlndXJlIF0KICAgICAgICByZXR1cm4gIiIK
CiAgICBkZWYgY2hpbGRfZG8oc2VsZiwgcmVxdWVzdCk6CiAgICAgICAgIiIi
UmVkaXJlY3QgdG8gdGhlIGFwcHJvcHJpYXRlIGFjdGlvbiBoYW5kbGVyCiAg
ICAgICAgIiIiCiAgICAgICAgc2VsZi5zZWxlY3RlZF9tZW51X2l0ZW1zID0g
cmVxdWVzdC5wYXRoLnNwbGl0KCIvIilbMjpdCiAgICAgICAgcmV0dXJuIFJl
ZGlyZWN0KCIvIikKCgoKYXBwbGljYXRpb24gPSBzZXJ2aWNlLkFwcGxpY2F0
aW9uKCJtZW51c19hbmRfY29uZmlndXJhYmxlcyIpCmludGVybmV0LlRDUFNl
cnZlcigKICAgIDgwODAsCiAgICBhcHBzZXJ2ZXIuTmV2b3dTaXRlKHJlc291
cmNlPU15UmVuZGVyZXIoKSkKKS5zZXRTZXJ2aWNlUGFyZW50KGFwcGxpY2F0
aW9uKQo=

--_----------=_1071516766319720--



From twisted-web@twistedmatrix.com  Mon Dec 15 22:50:52 2003
From: twisted-web@twistedmatrix.com (Greg Lappen)
Date: Mon, 15 Dec 2003 17:50:52 -0500
Subject: [Twisted-web] Should an error hang the server?
Message-ID: <2254A386-2F51-11D8-B78A-000A95DA5A64@lapcominc.com>

I am playing with some twisted-web and woven stuff.

I noticed that whenever I get an error page, the server no longer 
handles requests.

Is this the intended behavior?

Greg



From twisted-web@twistedmatrix.com  Mon Dec 15 23:23:08 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Mon, 15 Dec 2003 18:23:08 -0500
Subject: [Twisted-web] Should an error hang the server?
In-Reply-To: <2254A386-2F51-11D8-B78A-000A95DA5A64@lapcominc.com>
References: <2254A386-2F51-11D8-B78A-000A95DA5A64@lapcominc.com>
Message-ID: <A4548846-2F55-11D8-A9FB-000A95864FC4@divmod.org>

On Dec 15, 2003, at 5:50 PM, Greg Lappen wrote:

> I am playing with some twisted-web and woven stuff.
>
> I noticed that whenever I get an error page, the server no longer 
> handles requests.
>
> Is this the intended behavior?

No. An exception should not hang the server.

dp



From twisted-web@twistedmatrix.com  Mon Dec 15 23:24:45 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Mon, 15 Dec 2003 18:24:45 -0500
Subject: [Twisted-web] Woven Input Problem  cont.
In-Reply-To: <20031215132845.IOGJ26787.shunit@shunit>
References: <20031215132845.IOGJ26787.shunit@shunit>
Message-ID: <DE339D7B-2F55-11D8-A9FB-000A95864FC4@divmod.org>

On Dec 15, 2003, at 8:14 AM, <orya@bgumail.bgu.ac.il> wrote:

> sorry,
>
> rest of scenario:
> <span model="foo" view ="Widget">
>   <span  model="0" view ="Text"></span>
> </span>
>
> where foo returns an instance of "0" and "0" has a getData() method, 
> which returns data from remote http server (returning a Deffered)
>
> all this leads to inf. loop of the getData()
> how do i get out of it??????????

You need to cache the value passed to setData so that a call to getData 
immediately after it returns that same value.

dp



From twisted-web@twistedmatrix.com  Mon Dec 15 23:46:15 2003
From: twisted-web@twistedmatrix.com (Greg Lappen)
Date: Mon, 15 Dec 2003 18:46:15 -0500
Subject: [Twisted-web] Should an error hang the server?
In-Reply-To: <A4548846-2F55-11D8-A9FB-000A95864FC4@divmod.org>
References: <2254A386-2F51-11D8-B78A-000A95DA5A64@lapcominc.com> <A4548846-2F55-11D8-A9FB-000A95864FC4@divmod.org>
Message-ID: <DF55ACDA-2F58-11D8-B78A-000A95DA5A64@lapcominc.com>

I didn't think so, but that's what's happening.  Sorry for the lack of  
info in my previous post.

I still see requests from my browser in the log file, but never get a  
response.

Am I setting up the server incorrectly maybe?  This is on Mac OS X, is  
that maybe a factor?

Here's my .tac file:
------------------------ 
TriviaServer.tac---------------------------------
from twisted.internet.protocol import Factory
from twisted.application import service, internet
from twisted.persisted import sob
from twisted.web import server
from Trivia import TriviaProtocol, TriviaGame
import webui
import sys

factory = Factory()
factory.protocol = TriviaProtocol
factory.game = TriviaGame('classictv')
application = service.Application("TriviaServer-" + sys.argv[1])
sc = service.IServiceCollection(application)
internet.TCPServer(5678, factory).setServiceParent(sc)

# Test web stuff
root = webui.Root()
site = server.Site(root)
internet.TCPServer(8888, site).setServiceParent(sc)
---------------------------------------------------

Here's my webui module:

------------------webui.py---------------------
from twisted.web.woven import page
from twisted.web.woven import widgets

class Conditional(widgets.Widget):
     def __init__(self, boolean):
         widgets.Widget.__init__(self)
         self.boolean=boolean

     def setUp(self, request, node, data):
         if self.boolean:
             removedNode = self.getPattern("False", clone=False)
         else:
             removedNode = self.getPattern("True", clone=False)
         print ('removedNode:' + removedNode.toxml())
         node.removeChild(removedNode)

class Root(page.Page):
     templateFile="root.html"
     def wmfactory_stuff(self, request):
         return ['one', 'two', 'three']
     def wmfactory_letters(self, request):
         word = request.args['name'][0]
         return word
     def wvfactory_nameLongEnough(self, request, node, model):
         name = request.args['name'][0]
         return Conditional(len(name) > 5)
--------------------------------------------

Greg

On Dec 15, 2003, at 6:23 PM, Donovan Preston wrote:

>
> On Dec 15, 2003, at 5:50 PM, Greg Lappen wrote:
>
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer  
>> handles requests.
>>
>> Is this the intended behavior?
>
> No. An exception should not hang the server.
>
> dp
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



From twisted-web@twistedmatrix.com  Tue Dec 16 07:18:32 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Tue, 16 Dec 2003 9:18:32 +0200
Subject: [Twisted-web] New Guard
Message-ID: <20031216073226.MTEV26787.shunit@shunit>

Hi Justin or anyone else ,
tahnks for your reply 
can you again attach the  guarded.tac file ...



From twisted-web@twistedmatrix.com  Tue Dec 16 07:35:27 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Tue, 16 Dec 2003 9:35:27 +0200
Subject: [Twisted-web] Woven Input Problem  cont.
Message-ID: <20031216074921.MVGV26787.shunit@shunit>

> sorry,
>
> rest of scenario:
> <span model="foo" view ="Widget">
>   <span  model="0" view ="Text"></span>
> </span>
>
> where foo returns an instance of "0" and "0" has a getData() method, 
> which returns data from remote http server (returning a Deffered)
>
> all this leads to inf. loop of the getData()
> how do i get out of it??????????

>You need to cache the value passed to setData so that a call to >getData 
>immediately after it returns that same value.


1. Thank you for your answer, where do i need to cache the data of setData()?
2. If i want to use getData() to retrieve data from a remote server, present it on an input field and then change it and submit
using setData() am i expected to encounter the same problem? how can i avoid it?
dp




From twisted-web@twistedmatrix.com  Tue Dec 16 14:01:01 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Tue, 16 Dec 2003 09:01:01 -0500
Subject: [Twisted-web] Woven Input Problem  cont.
In-Reply-To: <20031216074921.MVGV26787.shunit@shunit>
References: <20031216074921.MVGV26787.shunit@shunit>
Message-ID: <48494CB6-2FD0-11D8-A9FB-000A95864FC4@divmod.org>

On Dec 16, 2003, at 2:35 AM, <orya@bgumail.bgu.ac.il> wrote:

> 1. Thank you for your answer, where do i need to cache the data of 
> setData()?
> 2. If i want to use getData() to retrieve data from a remote server, 
> present it on an input field and then change it and submit
> using setData() am i expected to encounter the same problem? how can i 
> avoid it?

In the IModel instance which represents "0". Implementing IModel 
yourself properly can be very tricky; I instead recommending using 
twisted.web.woven.MethodModel, which can help with dealing with 
deferred callbacks by handling a lot of it automatically.

Woven's Deferred handling support is not very good. It is very 
convoluted, difficult to use, and buggy. If you need to develop a web 
application which deals with a lot of Deferreds, I recommend you use 
nevow, which is like woven 2.0. It was designed from the ground up to 
be easier to use and to be capable of dealing with deferreds properly.

dp



From twisted-web@twistedmatrix.com  Tue Dec 16 14:56:58 2003
From: twisted-web@twistedmatrix.com (Greg Lappen)
Date: Tue, 16 Dec 2003 09:56:58 -0500
Subject: [Twisted-web] Should an error hang the server? - MORE INFO
In-Reply-To: <A4548846-2F55-11D8-A9FB-000A95864FC4@divmod.org>
References: <2254A386-2F51-11D8-B78A-000A95DA5A64@lapcominc.com> <A4548846-2F55-11D8-A9FB-000A95864FC4@divmod.org>
Message-ID: <18DC6629-2FD8-11D8-9AE8-000A95DA5A64@paperfree.net>

Ok, I debugged this a little more...

What happens is that an exception occurs in my view factory method on 
my page.  The first time I hit the URL with my browser, I see the stack 
trace in the log file and the stack trace in the failure page.  The 
second time i hit it, the exception occurs again in my view factory 
method, but the stack trace is never shown in the log file, and the 
failure page never comes back.  Instead, the browser waits until it 
times out for a response.  For some reason, the exception in the 2nd 
request is never propagated back up the call stack or written to the 
failure page.  I traced it as far as View.renderFailure, which is 
executed, but I can't understand the code enough to trace is further.

Does anyone have an idea what's happening?

Greg
On Dec 15, 2003, at 6:23 PM, Donovan Preston wrote:

>
> On Dec 15, 2003, at 5:50 PM, Greg Lappen wrote:
>
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer 
>> handles requests.
>>
>> Is this the intended behavior?
>
> No. An exception should not hang the server.
>
> dp
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>




From twisted-web@twistedmatrix.com  Tue Dec 16 18:19:11 2003
From: twisted-web@twistedmatrix.com (Samuel Reynolds)
Date: Tue, 16 Dec 2003 11:19:11 -0700
Subject: [Twisted-web] Q: Hidden field in TypedInterface?
Message-ID: <5.2.0.9.0.20031216111742.00a9fff0@pop.mindspring.com>

In a formless.TypedInterface, how does one specify a "hidden" parameter 
(i.e., force generation of a 'hidden' input widget in the generated form)?

E.g., in :
class IMyProxy(formless.TypedInterface):
     class PropertyGroup(formless.TypedInterface):
         id = formless.Integer()
         subject = formless.String()
How to make id become a hidden field
     <input type='hidden' value ='...' name='id' />
?

- Sam




From twisted-web@twistedmatrix.com  Tue Dec 16 18:39:50 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Tue, 16 Dec 2003 13:39:50 -0500
Subject: [Twisted-web] Q: Hidden field in TypedInterface?
In-Reply-To: <5.2.0.9.0.20031216111742.00a9fff0@pop.mindspring.com>
References: <5.2.0.9.0.20031216111742.00a9fff0@pop.mindspring.com>
Message-ID: <3B8C567A-2FF7-11D8-A9FB-000A95864FC4@divmod.org>

On Dec 16, 2003, at 1:19 PM, Samuel Reynolds wrote:

> In a formless.TypedInterface, how does one specify a "hidden" 
> parameter (i.e., force generation of a 'hidden' input widget in the 
> generated form)?
>
> E.g., in :
> class IMyProxy(formless.TypedInterface):
>     class PropertyGroup(formless.TypedInterface):
>         id = formless.Integer()
>         subject = formless.String()
> How to make id become a hidden field
>     <input type='hidden' value ='...' name='id' />
> ?

It looks like you can't right now, although you used to be able to in 
the older formless and formmethod. I'll probably add it, but I'd like 
to think a bit about the right way to do it. I can think of two 
methods:

class IMyProxy(TypedInterface):
	id = formless.Hidden()

or

class IMyProxy(TypedInterface):
	id = formless.Integer(hidden=True)

I think the former makes more sense, at least when it comes to html, 
but it also discards information about which Typed.coerce method to 
use. I would really like to know what you were planning to do with this 
invisible field. Right now, I can see three ways to fill the invisible 
field with your python code. The first is simply to have an 'id' 
attribute on your configurable which implements IMyProxy. This id 
attribute will be used to fill the field. The second is to pass a 
default value (which will always be the value that is used...) like so: 
Integer(default=5). The third is to get the IFormDefaults adapter 
around the request, and call setDefault with the fully-qualified key of 
the form field.

If you were planning on filling this field using javascript on the 
client, that is a different matter entirely.

Can you give me a bit more information about what you are trying to do, 
and how you would *like* to accomplish it?

dp



From twisted-web@twistedmatrix.com  Tue Dec 16 21:15:40 2003
From: twisted-web@twistedmatrix.com (Samuel Reynolds)
Date: Tue, 16 Dec 2003 14:15:40 -0700
Subject: [Twisted-web] Q: Hidden field in TypedInterface?
In-Reply-To: <3B8C567A-2FF7-11D8-A9FB-000A95864FC4@divmod.org>
References: <5.2.0.9.0.20031216111742.00a9fff0@pop.mindspring.com>
 <5.2.0.9.0.20031216111742.00a9fff0@pop.mindspring.com>
Message-ID: <5.2.0.9.0.20031216135750.00acb920@pop.mindspring.com>

At 2003-12-16 01:39 PM -0500, you wrote:

>On Dec 16, 2003, at 1:19 PM, Samuel Reynolds wrote:
>
>>In a formless.TypedInterface, how does one specify a "hidden" parameter 
>>(i.e., force generation of a 'hidden' input widget in the generated form)?
>>
>>E.g., in :
>>class IMyProxy(formless.TypedInterface):
>>     class PropertyGroup(formless.TypedInterface):
>>         id = formless.Integer()
>>         subject = formless.String()
>>How to make id become a hidden field
>>     <input type='hidden' value ='...' name='id' />
>>?
>
>It looks like you can't right now, although you used to be able to in the 
>older formless and formmethod. I'll probably add it, but I'd like to think 
>a bit about the right way to do it. I can think of two methods:
>
>class IMyProxy(TypedInterface):
>         id = formless.Hidden()
>
>or
>
>class IMyProxy(TypedInterface):
>         id = formless.Integer(hidden=True)
>
>I think the former makes more sense, at least when it comes to html, but 
>it also discards information about which Typed.coerce method to use. I 
>would really like to know what you were planning to do with this invisible 
>field. Right now, I can see three ways to fill the invisible field with 
>your python code. The first is simply to have an 'id' attribute on your 
>configurable which implements IMyProxy. This id attribute will be used to 
>fill the field. The second is to pass a default value (which will always 
>be the value that is used...) like so: Integer(default=5). The third is to 
>get the IFormDefaults adapter around the request, and call setDefault with 
>the fully-qualified key of the form field.
>
>If you were planning on filling this field using javascript on the client, 
>that is a different matter entirely.
>
>Can you give me a bit more information about what you are trying to do, 
>and how you would *like* to accomplish it?
>
>dp

I was planning to use it to look up the appropriate object
from an SQL database, for doing an update. However, as fzZzy
pointed out to me on #twisted.web, I should already have the
correct object from the previous stage of path resolution.
So the id field does not need to be present in the form at all;
it's implicit in the path. (E.g., in /myapp/mything/17/view,
the id is 17.)

The other use I had for a hidden field was for providing a
processing directive (possibly set by Javascript) to my form
processing code. Again, this is unnecessary with REST URLs.
Instead of, e.g., .../17/submit with dbc='update' or dbc='delete',
I can simply use .../17/update or  .../17/delete.

I'm just not accustomed to REST addressing yet.
Gotta get my head turned around.

I guess what I need to do is figure out how to handle
    .../17 (view entry)
    .../17/edit (return edit form)
    .../17/update (process edit form submission)
    .../17/delete (process delete submission), and
    .../new (process new object submission)
or the equivalent. (17 is just a representative ID).

- Sam




From twisted-web@twistedmatrix.com  Tue Dec 16 21:28:54 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Tue, 16 Dec 2003 16:28:54 -0500
Subject: [Twisted-web] Q: Hidden field in TypedInterface?
In-Reply-To: <5.2.0.9.0.20031216135750.00acb920@pop.mindspring.com>
References: <5.2.0.9.0.20031216111742.00a9fff0@pop.mindspring.com> <5.2.0.9.0.20031216111742.00a9fff0@pop.mindspring.com> <5.2.0.9.0.20031216135750.00acb920@pop.mindspring.com>
Message-ID: <3FDF7916.1010400@twistedmatrix.com>

Samuel Reynolds wrote:
> I'm just not accustomed to REST addressing yet.
> Gotta get my head turned around.

I wouldn't call this REST :-)

> I guess what I need to do is figure out how to handle
>    .../17 (view entry)
>    .../17/edit (return edit form)
>    .../17/update (process edit form submission)

You don't need /17/update; /17/edit will submit to 
/17/edit/freeform_post:whatever (or something like that).

>    .../17/delete (process delete submission), and
>    .../new (process new object submission)
> or the equivalent. (17 is just a representative ID).

Just implement a bunch of child_edit, _delete, _new, etc to return the 
appropriate resources for handling such things.


-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/


From twisted-web@twistedmatrix.com  Tue Dec 16 23:47:12 2003
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Wed, 17 Dec 2003 00:47:12 +0100
Subject: [Twisted-web] Session trouble
Message-ID: <20031216234712.GB20810@pasternak.w.lub.pl>

Hi,

On a page of the site I've got a form. The user enters values and submits
the form. Entered values are saved to session. If s/he gets back to the page
(=> encounters the same form), values are loaded from the session and the
form is filled with them. Everything worked okay, until I turned on caching.
Now, even if the test machine is on different subnet, the filled values are
presented to all connected users by default (eg. my friend, while testing
it, enters some data; I open a "clean" browser, without any cookies or such,
enter the page with the form - and I get the same data he entered!).

My question is simple: how do I get around this?

If I turn off caching, everything is fine - but I need caching. It speeds up
things a lot.

Is it known issue? What am I doing wrong? Where should I RTFM?

I run the site server with twistd and RPY script.

This is my RPY script:

	cache()
	import myWeb
	resource = myWeb.RootPage()

This is how I save / load session values in myWeb:

     I have declared:
     
	class IPreferences(components.Interface):
    		pass
	class Preferences(components.Adapter):
    		__implements__ = IPreferences
	components.registerAdapter(Preferences, server.Session, IPreferences)

     Then, when I'm loading/saving values from/to session, I use:

        prefs = req.getSession(IPreferences)
	
     saving values to session:
     
	prefs.foobar = 5
	
     loading values from session:
     
     	a = prefs.foobar
	
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net


From twisted-web@twistedmatrix.com  Wed Dec 17 00:13:10 2003
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Wed, 17 Dec 2003 01:13:10 +0100
Subject: [Twisted-web] Session trouble
In-Reply-To: <20031216234712.GB20810@pasternak.w.lub.pl>
References: <20031216234712.GB20810@pasternak.w.lub.pl>
Message-ID: <20031217001310.GA2872@pasternak.w.lub.pl>

Michal Pasternak [Wed, Dec 17, 2003 at 12:47:12AM +0100]:
> 	class IPreferences(components.Interface):
>     		pass
> 	class Preferences(components.Adapter):
>     		__implements__ = IPreferences
> 	components.registerAdapter(Preferences, server.Session, IPreferences)

After reading some docs, I've understood that to get the functionality I
want is to declare "temporaryAdapter" variable of class Preferences as 1
(int).

This didn't help at all.

Another interesting thing is, that when I grepped Twisted 1.1.1 sources, I
found only 2 places which include the string "temporaryAdapter":
python/components.py (docstring and just a declaration) and
"test/test_components.py".

Is it a bug, should I submit it to bugtracker?

-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net


From twisted-web@twistedmatrix.com  Wed Dec 17 00:15:35 2003
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Wed, 17 Dec 2003 01:15:35 +0100
Subject: [Twisted-web] Session trouble
In-Reply-To: <20031217001310.GA2872@pasternak.w.lub.pl>
References: <20031216234712.GB20810@pasternak.w.lub.pl> <20031217001310.GA2872@pasternak.w.lub.pl>
Message-ID: <20031217001535.GB2872@pasternak.w.lub.pl>

Michal Pasternak [Wed, Dec 17, 2003 at 01:13:10AM +0100]:
> Another interesting thing is, that when I grepped Twisted 1.1.1 sources, I
> found only 2 places which include the string "temporaryAdapter":

... this also means, that "class Session" declared in web/server.py doesn't
include "temporaryAdapter = 1"

-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net


From twisted-web@twistedmatrix.com  Wed Dec 17 00:30:35 2003
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Wed, 17 Dec 2003 01:30:35 +0100
Subject: [Twisted-web] Session trouble
In-Reply-To: <20031217001310.GA2872@pasternak.w.lub.pl>
References: <20031216234712.GB20810@pasternak.w.lub.pl> <20031217001310.GA2872@pasternak.w.lub.pl>
Message-ID: <20031217003035.GA1755@pasternak.w.lub.pl>

Michal Pasternak [Wed, Dec 17, 2003 at 01:13:10AM +0100]:
> Another interesting thing is, that when I grepped Twisted 1.1.1 sources, I
> found only 2 places which include the string "temporaryAdapter":
> python/components.py (docstring and just a declaration) and
> "test/test_components.py".
> 
> Is it a bug, should I submit it to bugtracker?

Okay, I didn't look careful enough. Of course, temporaryAdaptor value is
used in components.py properly, but I am still unsure how should I do it
with cache() and Sessions.

-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net


From twisted-web@twistedmatrix.com  Wed Dec 17 01:06:42 2003
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Wed, 17 Dec 2003 02:06:42 +0100
Subject: [Twisted-web] Session trouble - solved
In-Reply-To: <20031216234712.GB20810@pasternak.w.lub.pl>
References: <20031216234712.GB20810@pasternak.w.lub.pl>
Message-ID: <20031217010642.GA7996@pasternak.w.lub.pl>

Michal Pasternak [Wed, Dec 17, 2003 at 12:47:12AM +0100]:
> My question is simple: how do I get around this?

After a short discussion with Donovan Prestion this issue has been quickly
solved with a bit different approach.

For list archives:

1) write a .tac script instead cached .rpy, like:

from twisted.application import service
from twisted.web import server
from twisted.application import internet
import yourWebModule

application = service.Application("theappname")

internet.TCPServer(8080,
		server.Site(yourWebModule.yourRootPageObject())
	).setServiceParent(application)

2) run the tac script like

	twistd -oy script.tac
	
3) remember, that you should _never_ store Session or it's values inside 
   your objects; always get it from request instead.

Please note, that this issue could be propably solved even when using .rpy
and cache(), only that I currently have no idea how to do it.

Regards,
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net


From twisted-web@twistedmatrix.com  Wed Dec 17 05:29:26 2003
From: twisted-web@twistedmatrix.com (Michal Pasternak)
Date: Wed, 17 Dec 2003 06:29:26 +0100
Subject: [Twisted-web] Twisted Web behind Apache
Message-ID: <20031217052926.GA21044@pasternak.w.lub.pl>

Hi,

where can I find documentation on setting up a Twisted Web server behind
Apache? I googled a bit, but I didn't find anything official / suggested.

Regards,
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net


From twisted-web@twistedmatrix.com  Wed Dec 17 13:43:08 2003
From: twisted-web@twistedmatrix.com (Douglas Bagnall)
Date: Thu, 18 Dec 2003 02:43:08 +1300
Subject: [Twisted-web] guard peculiarities (with workaround)
Message-ID: <3FE05D6C.9070103@paradise.net.nz>

This is a multi-part message in MIME format.
--------------030605000505090209000902
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit


hi,
Using guard in what I believe is a fairly standard way (pilfered from 
some example or another), I have been getting strange results when 
logging in for the first time. Every field in the login form was being 
treated as a doubly nested repr()'d list, eg "douglas" would come back 
as  ["['douglas']"]. As Moshe said, it looks like a [0] is missing 
somewhere, but AFAICT, my code floats above the level of form data, 
thanks I think to guard.UsernamePasswordWrapper.

Anyway, the problem appears when users/htmlers, wanting to reduce 
clicks, copy the form into unguarded pages.  It appears that guard needs 
an anonymous request before it will properly allow a login.

Here's the log, reformatted and annotated:


## get the unguarded page with the form in it

"GET / HTTP/1.1" 200 13663 "-"

## which submits correctly ('z' has empty password)
"GET /admin/perspective-init?
       username=z
       &password=
       &submit=Login
       HTTP/1.1" 302 528 "http://upstage.org.nz:8083/"

## ... and bounces about
"GET /admin/session-init/perspective-init?
       username=%5B%27z%27%5D
       &password=%5B%27%27%5D
       &submit=%5B%27Login%27%5D
       HTTP/1.1" 302 670 "http://upstage.org.nz:8083/"

## ...collecting square brackets...
"GET /admin/__session_key__9c06c9e61ee806d13c2d43a5088ab6a2/
       perspective-init?
       username=%5B%22%5B%27z%27%5D%22%5D
       &password=%5B%22%5B%27%27%5D%22%5D
       &submit=%5B%22%5B%27Login%27%5D%22%5D
       HTTP/1.1" 302 736 "http://upstage.org.nz:8083/"

##  until arriving at a login error page:
"GET /admin/perspective-init?
       username=%5B%27%5B%22%5B%5C%27z%5C%27%5D%22%5D%27%5D
       &password=%5B%27%5B%22%5B%5C%27%5C%27%5D%22%5D%27%5D
       &__session_just_started__=1
       &submit=%5B%27%5B%22%5B%5C%27Login%5C%27%5D%22%5D%27%5D
       HTTP/1.1" 200 1153 "http://upstage.org.nz:8083/"

## Trying again, another 302 response
"GET /admin/perspective-init?
       username=z
       &password=
       &submit=Login
       HTTP/1.1" 302 266 "http://upstage.org.nz:8083/"

## but the target page isn't logged, only the broken links it causes
"GET /admin/img/spacer.gif HTTP/1.1" 404 165 
"http://upstage.org.nz:8083/admin/"

Which led me to a tacky workaround -- the first request within the 
guarded realm comes from a spurious image link, priming it for form 
submission. Like so:

"GET / HTTP/1.1" 200 13752 "-"
"GET /admin/img/spacer.gif HTTP/1.1" 302 384
"GET /admin/session-init/img/spacer.gif HTTP/1.1" 302
"GET /admin/__session_key__2a0d[ ... ]/img/spacer.gif HTTP/1.1" 302
"GET /admin/img/spacer.gif?__session_just_started__=1 HTTP/1.1" 200 488

However, this seems a little ridiculous. Is there a good reason why 
people shouldn't be able to login first time?  On this site, some of the 
pages have to be plain unwoven html, with hard-coded forms and whatnot, 
so the people maintaining those pages can understand it.


cheers,

douglas


--------------030605000505090209000902
Content-Type: text/plain;
 name="extract.py"
Content-Transfer-Encoding: base64
Content-Disposition: inline;
 filename="extract.py"

CiMgY3V0IGRvd24gYSBiaXQgZm9yIGNsYXJpdHkKCmRlZiB3ZWJzaXRlKCk6CiAgICAiIiJS
ZXR1cm5zIHRoZSB3ZWIgdHJlZS4iIiIKICAgIGRvY3Jvb3QgPSBzdGF0aWMuRmlsZShjb25m
aWcuSFRET0NTKQogICAgYWRtaW4gPSBhZG1pbldyYXBwZXIoY29uZmlnLkFETUlOKQogICAg
ZG9jcm9vdC5wdXRDaGlsZCgnYWRtaW4nLCBhZG1pbikKICAgIHJldHVybiBkb2Nyb290CgoK
Y2xhc3MgQWRtaW5SZWFsbToKICAgIF9faW1wbGVtZW50c19fID0gSVJlYWxtCiAgICBkZWYg
X19pbml0X18oc2VsZixhZG1pbl9kaXIpOgogICAgICAgIHNlbGYuYW5vblJlc291cmNlID0g
QWRtaW5Mb2dpblBhZ2UoKQoJc2VsZi5hZG1pbl9kaXIgPSBhZG1pbl9kaXIKICAgIGRlZiBy
ZXF1ZXN0QXZhdGFyKHNlbGYsIHVzZXJuYW1lLCBtaW5kLCAqaW50ZXJmYWNlcyk6CiAgICAg
ICAgaWYgSVJlc291cmNlIG5vdCBpbiBpbnRlcmZhY2VzOgogICAgICAgICAgICByYWlzZSBO
b3RJbXBsZW1lbnRlZEVycm9yKCJXVEYsIHRyaWVkIG5vbi13ZWIgbG9naW4iKQogICAgICAg
IGlmIHVzZXJuYW1lIGFuZCBwbGF5ZXJfZGljdFt1c2VybmFtZV0uY2FuX2FkbWluKCk6Cgkg
ICAgdHJlZSA9IHN0YXRpYy5GaWxlKHNlbGYuYWRtaW5fZGlyKQogICAgICAgICAgICB0cmVl
LnB1dENoaWxkKCduZXcnLCBBY3Rpb25EaXIobmV3X3RoaW5nLCB1c2VybmFtZSkpCiAgICAg
ICAgICAgIHRyZWUucHV0Q2hpbGQoJ2VkaXQnLCBBY3Rpb25EaXIoRWRpdFRoaW5ncywgdXNl
cm5hbWUpKQogICAgICAgICAgICB0cmVlLnB1dENoaWxkKCdtYW5hZ2UnLCBBY3Rpb25EaXIo
TWFuYWdlVGhpbmdzLCB1c2VybmFtZSkpICAgICAgICAgICAgCiAgICAgICAgICAgIHRyZWUu
cHV0Q2hpbGQoJ3NhdmVfdGhpbmcnLCBTd2ZDb252ZXJzaW9uV3JhcHBlcigpKQogICAgICAg
ICAgICB0cmVlLnB1dENoaWxkKCdzYXZlX3ZpZGVvJywgVmlkZW9UaGluZygpKQogICAgICAg
ICAgICB0cmVlLnB1dENoaWxkKCdpZCcsIFNlc3Npb25JRCh1c2VybmFtZSkpICAgICAgICAg
ICAgCiAgICAgICAgICAgIHRyZWUucHV0Q2hpbGQoJ2Vycm9yJyxBZG1pbkVycm9yKCdkZWxp
YmVyYXRlIGVycm9yJykpICAgICAgICAgICAgCiAgICAgICAgICAgIHJldHVybiAoSVJlc291
cmNlLCB0cmVlLCBsYW1iZGEgOiBOb25lKQoJZWxpZiB1c2VybmFtZTogI3BsYXllciwgYnV0
IG5vdCBhZG1pbi4KCSAgICBub250cmVlID0gc3RhdGljLkZpbGUoc2VsZi5hZG1pbl9kaXIg
KyAnbm9uYWRtaW4vJykKCSAgICBub250cmVlLnB1dENoaWxkKCdpZCcsIFNlc3Npb25JRCh1
c2VybmFtZSkpICAgICAgICAgICAgCgkgICAgcmV0dXJuIChJUmVzb3VyY2UsIG5vbnRyZWUs
IGxhbWJkYSA6IE5vbmUpCiAgICAgICAgZWxzZTogI2Fub24gLSB0aGUgYXVkaWVuY2UuCiAg
ICAgICAgICAgIHNlbGYuYW5vblJlc291cmNlLnB1dENoaWxkKCdpZCcsIFNlc3Npb25JRCgp
KQogICAgICAgICAgICByZXR1cm4gSVJlc291cmNlLCBzZWxmLmFub25SZXNvdXJjZSAsIGxh
bWJkYSA6IE5vbmUKICAgIAoJCQkKZGVmIGFkbWluV3JhcHBlcihhZG1pbl9kaXIpOgogICAg
cCA9IFBvcnRhbChBZG1pblJlYWxtKGFkbWluX2RpcikpCiAgICBwLnJlZ2lzdGVyQ2hlY2tl
cihBbGxvd0Fub255bW91c0FjY2VzcygpLCBJQW5vbnltb3VzKQogICAgcC5yZWdpc3RlckNo
ZWNrZXIoSW5NZW1vcnlVc2VybmFtZVBhc3N3b3JkRGF0YWJhc2VEb250VXNlKHo9JycpKQog
ICAgIyNwLnJlZ2lzdGVyQ2hlY2tlcihwbGF5ZXJfZGljdCkKICAgIHVwdyA9IGd1YXJkLlVz
ZXJuYW1lUGFzc3dvcmRXcmFwcGVyKHAsIGNhbGxiYWNrPWR1bWJSZWRpcmVjdCkKICAgIHIg
PSBndWFyZC5TZXNzaW9uV3JhcHBlcih1cHcpCiAgICByLnNlc3Npb25MaWZldGltZSA9IDYg
KiAzNjAwCiAgICByZXR1cm4gcgoK
--------------030605000505090209000902--



From twisted-web@twistedmatrix.com  Wed Dec 17 14:32:33 2003
From: twisted-web@twistedmatrix.com (Alex Levy)
Date: Wed, 17 Dec 2003 09:32:33 -0500
Subject: [Twisted-web] Twisted Web behind Apache
In-Reply-To: <20031217052926.GA21044@pasternak.w.lub.pl>
References: <20031217052926.GA21044@pasternak.w.lub.pl>
Message-ID: <1071671552.930.635.camel@hyla>

--=-Fae4azp7wcAV4yhHCTg6
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

On Wed, 2003-12-17 at 00:29, Michal Pasternak wrote:
> where can I find documentation on setting up a Twisted Web server behind
> Apache? I googled a bit, but I didn't find anything official / suggested.

I was doing this for a while, way back when I was too chicken to just
actually run Twisted.Web ;)

I set up Twisted.Web to run on port 8088, then used Apache's mod_rewrite
and mod_proxy to say, "If any requests come in for /foo/(.*), rewrite
this to http://myserver:8088/$1". I can't remember the exact syntax for
the rewrite rules, but it only took a couple lines. You use the internal
proxy, so for the user, the fact that you've got two web servers is
totally transparent.

Hope this helps.

--=20
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_


--=-Fae4azp7wcAV4yhHCTg6
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQA/4GkAVM70CYlRlK4RAgNQAJ0WYLFKNXnVIEnY/+iwdUtO4uogDQCfa5UI
4neWvRxadH80n5pBKAn6lyU=
=ecpD
-----END PGP SIGNATURE-----

--=-Fae4azp7wcAV4yhHCTg6--



From twisted-web@twistedmatrix.com  Wed Dec 17 20:20:42 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Wed, 17 Dec 2003 15:20:42 -0500
Subject: [Twisted-web] nevow examples
Message-ID: <7D1F2820-30CE-11D8-9E18-000A95864FC4@divmod.org>

I have posted numerous nevow examples culled from the list and IRC 
conversations and posted links and short descriptions to my blog:

http://www.livejournal.com/users/fzzzy/

Check them out if you are interested in nevow.

dp



From twisted-web@twistedmatrix.com  Wed Dec 17 21:54:01 2003
From: twisted-web@twistedmatrix.com (James Y Knight)
Date: Wed, 17 Dec 2003 16:54:01 -0500
Subject: [Twisted-web] using nevow with python2.2
Message-ID: <863FE359-30DB-11D8-89BD-000A95A50FB2@fuhm.net>

So, I'm able to get nevow to work on python2.2 with some minor changes.

The things that are used in python 2.3 that don't exist in python2.2 
that I had to change:
1) generators available without explicit import
2) itertools
3) basestring
4) extended slice-n-dice "[::-1]" on builtin sequences

The only change here that isn't really usable directly is commenting 
out lines in components.wsv. I don't know what needs to be done to make 
that compatible with 2.2 without losing functionality with 2.3. Maybe 
ignore missing classes while loading? If it was code instead of a .wsv 
file you could simply put an if around the new classes...

It would be nice if nevow was explicitly supported on python2.2 since 
the differences are very minimal, and there is no python2.3 for debian 
stable.

Note: you need to set your PYTHONPATH to something that includes only 
the "atop" and "nevow" directories from quotient, or else python will 
magically try (and fail) to load other parts of quotient.

James

Index: atop/wsvload.py
===================================================================
RCS file: /cvs/Quotient/atop/wsvload.py,v
retrieving revision 1.6
diff -u -r1.6 wsvload.py
--- atop/wsvload.py     21 Nov 2003 20:27:58 -0000      1.6
+++ atop/wsvload.py     17 Dec 2003 21:19:22 -0000
@@ -4,6 +4,8 @@
  # Public License as published by the Free Software Foundation.
  # objects that should be in tpython

+from __future__ import generators
+
  def getAOI(fObj):
      for line in fObj:
          line = line.strip()
Index: nevow/components.wsv
===================================================================
RCS file: /cvs/Quotient/nevow/components.wsv,v
retrieving revision 1.20
diff -u -r1.20 components.wsv
--- nevow/components.wsv        17 Dec 2003 01:45:05 -0000      1.20
+++ nevow/components.wsv        17 Dec 2003 21:19:22 -0000
@@ -26,7 +26,7 @@
  nevow.serial.flatstan.StringCastSerializer          types.IntType      
              nevow.iwoven.ISerializable
  nevow.serial.flatstan.StringCastSerializer          types.FloatType    
              nevow.iwoven.ISerializable
  nevow.serial.flatstan.StringCastSerializer          types.LongType     
              nevow.iwoven.ISerializable
-nevow.serial.flatstan.StringCastSerializer          types.BooleanType  
              nevow.iwoven.ISerializable
+#nevow.serial.flatstan.StringCastSerializer          types.BooleanType 
               nevow.iwoven.ISerializable
  nevow.serial.flatstan.ListSerializer                types.ListType     
              nevow.iwoven.ISerializable
  nevow.serial.flatstan.StringCastSerializer          types.DictType     
              nevow.iwoven.ISerializable
  nevow.serial.flatstan.ListSerializer                types.TupleType    
              nevow.iwoven.ISerializable
@@ -43,18 +43,18 @@
  nevow.url.URLOverlaySerializer            nevow.url.URLOverlay     
nevow.iwoven.ISerializable

      # Itertools uses special types
-nevow.serial.flatstan.ListSerializer  itertools.chain        
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.count        
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.cycle        
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.dropwhile    
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.ifilter      
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.ifilterfalse 
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.imap         
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.islice       
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.izip         
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.repeat       
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.starmap      
nevow.iwoven.ISerializable
-nevow.serial.flatstan.ListSerializer  itertools.takewhile    
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.chain        
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.count        
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.cycle        
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.dropwhile    
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.ifilter      
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.ifilterfalse 
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.imap         
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.islice       
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.izip         
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.repeat       
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.starmap      
nevow.iwoven.ISerializable
+# nevow.serial.flatstan.ListSerializer  itertools.takewhile    
nevow.iwoven.ISerializable

      # object
      # list
Index: nevow/context.py
===================================================================
RCS file: /cvs/Quotient/nevow/context.py,v
retrieving revision 1.14
diff -u -r1.14 context.py
--- nevow/context.py    11 Dec 2003 21:34:27 -0000      1.14
+++ nevow/context.py    17 Dec 2003 21:19:22 -0000
@@ -3,6 +3,8 @@
  # and/or modify it under the terms of version 2.1 of the GNU Lesser 
General
  # Public License as published by the Free Software Foundation.

+from __future__ import generators
+
  import warnings

  from twisted.python import components
Index: formless.py
===================================================================
RCS file: /cvs/Quotient/nevow/formless.py,v
retrieving revision 1.31
diff -u -r1.31 formless.py
--- formless.py 2 Dec 2003 17:54:01 -0000       1.31
+++ formless.py 17 Dec 2003 21:43:42 -0000
@@ -20,10 +20,19 @@
  from twisted.internet import reactor, defer


-import itertools
+#import itertools


-nextId = itertools.count().next
+#nextId = itertools.count().next
+
+class count(object):
+    def __init__(self):
+        self.id = 0
+    def next(self):
+        self.id += 1
+        return self.id
+
+nextId = count().next


  class InputError(Exception):
@@ -562,7 +571,8 @@
          """
          copied = copy.deepcopy(self.typedValue.arguments)
          curid = 0
-        for arg in copied[::-1]:
+        for n in xrange(len(copied)-1, -1, -1):
+            arg=copied[n]
              curid = arg.id
              if isinstance(arg, Button):
                  break
Index: nevow/renderer.py
===================================================================
RCS file: /cvs/Quotient/nevow/renderer.py,v
retrieving revision 1.27
diff -u -r1.27 renderer.py
--- nevow/renderer.py   11 Dec 2003 00:48:24 -0000      1.27
+++ nevow/renderer.py   17 Dec 2003 21:19:22 -0000
@@ -4,6 +4,8 @@
  # and/or modify it under the terms of version 2.1 of the GNU Lesser 
General
  # Public License as published by the Free Software Foundation.

+from __future__ import generators
+
  import os
  import stat
  import time
Index: nevow/stan.py
===================================================================
RCS file: /cvs/Quotient/nevow/stan.py,v
retrieving revision 1.14
diff -u -r1.14 stan.py
--- nevow/stan.py       11 Dec 2003 21:34:27 -0000      1.14
+++ nevow/stan.py       17 Dec 2003 21:19:22 -0000
@@ -3,6 +3,8 @@
  # and/or modify it under the terms of version 2.1 of the GNU Lesser 
General
  # Public License as published by the Free Software Foundation.

+from __future__ import generators
+

  class Proto(str):
      """Proto is a string subclass. Instances of Proto, which are 
constructed
Index: nevow/url.py
===================================================================
RCS file: /cvs/Quotient/nevow/url.py,v
retrieving revision 1.1
diff -u -r1.1 url.py
--- nevow/url.py        17 Dec 2003 01:45:05 -0000      1.1
+++ nevow/url.py        17 Dec 2003 21:19:22 -0000
@@ -1,4 +1,4 @@
-
+from __future__ import generators
  import urllib

  from nevow import iwoven
Index: nevow/serial/flatmdom.py
===================================================================
RCS file: /cvs/Quotient/nevow/serial/flatmdom.py,v
retrieving revision 1.10
diff -u -r1.10 flatmdom.py
--- nevow/serial/flatmdom.py    11 Dec 2003 03:22:04 -0000      1.10
+++ nevow/serial/flatmdom.py    17 Dec 2003 21:19:22 -0000
@@ -3,6 +3,8 @@
  # and/or modify it under the terms of version 2.1 of the GNU Lesser 
General
  # Public License as published by the Free Software Foundation.

+from __future__ import generators
+
  from nevow.iwoven import ISerializable
  from nevow.stan import Tag, xml, directive

Index: nevow/serial/flatstan.py
===================================================================
RCS file: /cvs/Quotient/nevow/serial/flatstan.py,v
retrieving revision 1.18
diff -u -r1.18 flatstan.py
--- nevow/serial/flatstan.py    17 Dec 2003 01:44:39 -0000      1.18
+++ nevow/serial/flatstan.py    17 Dec 2003 21:19:22 -0000
@@ -3,7 +3,8 @@
  # and/or modify it under the terms of version 2.1 of the GNU Lesser 
General
  # Public License as published by the Free Software Foundation.

-
+from __future__ import generators
+from types import StringType
  import types
  import warnings

@@ -50,7 +51,7 @@
                              flat = 
flatten(ISerializable(v).serialize(context, stream))
                              if flat:
                                  val = flat[0]
-                                if isinstance(val, basestring):
+                                if isinstance(val, StringType):
                                      val = val.replace('"', '&quot;')
                                  yield xml(val)
                          yield xml('"')
Index: nevow/test/test_disktemplate.py
===================================================================
RCS file: /cvs/Quotient/nevow/test/test_disktemplate.py,v
retrieving revision 1.16
diff -u -r1.16 test_disktemplate.py
--- nevow/test/test_disktemplate.py     11 Dec 2003 01:04:10 -0000      
1.16
+++ nevow/test/test_disktemplate.py     17 Dec 2003 21:19:22 -0000
@@ -3,6 +3,7 @@
  # and/or modify it under the terms of version 2.1 of the GNU Lesser 
General
  # Public License as published by the Free Software Foundation.

+from __future__ import generators

  from nevow import renderer
  from nevow import util
Index: nevow/test/test_flatstan.py
===================================================================
RCS file: /cvs/Quotient/nevow/test/test_flatstan.py,v
retrieving revision 1.15
diff -u -r1.15 test_flatstan.py
--- nevow/test/test_flatstan.py 10 Dec 2003 19:48:49 -0000      1.15
+++ nevow/test/test_flatstan.py 17 Dec 2003 21:19:22 -0000
@@ -3,6 +3,8 @@
  # and/or modify it under the terms of version 2.1 of the GNU Lesser 
General
  # Public License as published by the Free Software Foundation.

+from __future__ import generators
+
  from twisted.python import reflect

  from twisted.web.resource import IResource



From twisted-web@twistedmatrix.com  Wed Dec 17 19:36:26 2003
From: twisted-web@twistedmatrix.com (Ricardo Niederberger Cabral)
Date: Wed, 17 Dec 2003 20:36:26 +0100
Subject: [Twisted-web] nevow CannotAdapt error
In-Reply-To: <BCBAEC5E-2C5D-11D8-8853-000A95864FC4@divmod.org>
References: <000501c3c067$cfd28270$6501a8c0@khowe> <BCBAEC5E-2C5D-11D8-8853-000A95864FC4@divmod.org>
Message-ID: <20031217193626.GB5966@nieder>

* Donovan Preston <dp@divmod.org> [2003-12-12 02:57]:
[...]
> >
> >But get the following traceback?
>
> <snip cannot adapt>
>
> Are you using cvs? If you use CVS HEAD, you might find that this
> problem goes away. Otherwise, you'll need to import atop.regadapt and
> call justDoIt to register the adapters.
[...]

It would be nice to have a Requirements note for nevow somewhere on
http://stewstuff.com/doc/nevow.xhtml or perhaps a README on the CVS
nevow dir, so newbies can check it out more easily.

Best regards,
--
rnc <nieder at mail dot ru>


From twisted-web@twistedmatrix.com  Wed Dec 17 22:48:26 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Wed, 17 Dec 2003 17:48:26 -0500
Subject: [Twisted-web] Packaging nevow standalone
In-Reply-To: <20031217193626.GB5966@nieder>
References: <000501c3c067$cfd28270$6501a8c0@khowe> <BCBAEC5E-2C5D-11D8-8853-000A95864FC4@divmod.org> <20031217193626.GB5966@nieder>
Message-ID: <2093E952-30E3-11D8-9E18-000A95864FC4@divmod.org>

On Dec 17, 2003, at 2:36 PM, Ricardo Niederberger Cabral wrote:

> It would be nice to have a Requirements note for nevow somewhere on
> http://stewstuff.com/doc/nevow.xhtml or perhaps a README on the CVS
> nevow dir, so newbies can check it out more easily.

I have been planning on packaging a standalone distro of nevow. Radix 
has kindly offered to help in this effort, as I know nothing about 
distutils or any of the issues related to actually producing usable 
tarballs of python software. I'd like to do this sometime within the 
next few weeks.

One of the things I have been thinking about doing before doing a 
standalone distribution is removing the dependency on twisted. I have 
been contemplating using PyProtocols for the adaption machinery, and 
writing a simple CGI renderer to replace the ones that are twisted-web 
aware. However, while I want to pursue this goal eventually to ensure 
that nevow has as few dependency abstraction violations as possible, it 
probably won't happen right away, so I probably shouldn't do it for the 
first standalone release.

Radix, what are your thoughts about timing?

dp



From twisted-web@twistedmatrix.com  Thu Dec 18 00:13:18 2003
From: twisted-web@twistedmatrix.com (James Y Knight)
Date: Wed, 17 Dec 2003 19:13:18 -0500
Subject: [Twisted-web] using nevow with python2.2
In-Reply-To: <863FE359-30DB-11D8-89BD-000A95A50FB2@fuhm.net>
References: <863FE359-30DB-11D8-89BD-000A95A50FB2@fuhm.net>
Message-ID: <FB7E70A1-30EE-11D8-89BD-000A95A50FB2@fuhm.net>

A patch over my previous patch -- I should've replaced basestring with 
StringTypes, not StringType, in order accommodate unicode strings.

James

--- serial/flatstan.py~ Wed Dec 17 19:06:04 2003
+++ serial/flatstan.py  Wed Dec 17 19:06:08 2003
@@ -4,7 +4,7 @@
  # Public License as published by the Free Software Foundation.

  from __future__ import generators
-from types import StringType
+from types import StringTypes
  import types
  import warnings

@@ -51,7 +51,7 @@
                              flat = 
flatten(ISerializable(v).serialize(context, stream))
                              if flat:
                                  val = flat[0]
-                                if isinstance(val, StringType):
+                                if isinstance(val, StringTypes):
                                      val = val.replace('"', '&quot;')
                                  yield xml(val)
                          yield xml('"')



From twisted-web@twistedmatrix.com  Thu Dec 18 00:24:19 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Wed, 17 Dec 2003 19:24:19 -0500
Subject: [Twisted-web] using nevow with python2.2
In-Reply-To: <863FE359-30DB-11D8-89BD-000A95A50FB2@fuhm.net>
References: <863FE359-30DB-11D8-89BD-000A95A50FB2@fuhm.net>
Message-ID: <856492C8-30F0-11D8-9E18-000A95864FC4@divmod.org>

On Dec 17, 2003, at 4:54 PM, James Y Knight wrote:

> So, I'm able to get nevow to work on python2.2 with some minor changes.

Just to let you know, this will most certainly go in. I have a plan for 
the component registration that only works under 2.3, too. Split it 
into two wsv files, and conditionally load the 2.3 one in the tml.

dp



From twisted-web@twistedmatrix.com  Thu Dec 18 13:04:00 2003
From: twisted-web@twistedmatrix.com (Jonathan Lange)
Date: Fri, 19 Dec 2003 00:04:00 +1100
Subject: [Twisted-web] Twisted Web behind Apache
In-Reply-To: <1071671552.930.635.camel@hyla>
References: <20031217052926.GA21044@pasternak.w.lub.pl>
 <1071671552.930.635.camel@hyla>
Message-ID: <1071752640.1110.13.camel@anduril>

On Thu, 2003-12-18 at 01:32, Alex Levy wrote:
> On Wed, 2003-12-17 at 00:29, Michal Pasternak wrote:
> > where can I find documentation on setting up a Twisted Web server behind
> > Apache? I googled a bit, but I didn't find anything official / suggested.
> 
> I was doing this for a while, way back when I was too chicken to just
> actually run Twisted.Web ;)
> 

Conversely, if you want to run Apache behind a Twisted Web server (maybe
you want fast PHP, or you are serving Subversion or something), do this:

* Set up Apache to run on a port that is not 80, say 81.
* Configure Twisted Web to ignore the RPY extension
  * ignoreExt('rpy') in /etc/twisted-web/default the debian package
  * --ignore-ext=rpy when using mktap web. 
* Drop in an RPY, say foo.rpy, somewhat akin to:
    from twisted.web import proxy
    resource = proxy.ReverseProxyResource('hostname', 81,
                                          '/url/on/apache/')
  [note that there are many ways to get a resource into a twisted web
   server, RPY is often a convenient one]

http://hostname/foo/bar/baz now transparently proxies to
http://hostname:81/url/on/apache/bar/baz, completely hiding your apache
server.

Not relevant, probably documented elsewhere, but I feel good about
writing it down.

jml



From twisted-web@twistedmatrix.com  Thu Dec 18 10:07:27 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Thu, 18 Dec 2003 12:07:27 +0200
Subject: [Twisted-web] submit buttons
Message-ID: <20031218100727.FEFN26787.shunit@shunit>

Hi everyone,

i'm dealing with woven form,
i wonder if it is possible to have numerous submit buttons
on a single form, each can post its own data.

my question is, how do i control each one to do its own without invoking the other (on GET/SET)

thank you



From twisted-web@twistedmatrix.com  Thu Dec 18 12:12:54 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Thu, 18 Dec 2003 14:12:54 +0200
Subject: [Twisted-web] Input Buttons
Message-ID: <20031218121254.GGKL26787.shunit@shunit>

Hi everyone,

my questions is this:
suppose i would like to appy numeros submit buttons to a form.
and use them as action keys like "restart" "stop" etc.
is there a way to tell woven to activate a specific button and its model?



From twisted-web@twistedmatrix.com  Thu Dec 18 17:34:24 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Thu, 18 Dec 2003 19:34:24 +0200
Subject: [Twisted-web] Rendering forms from HTML templates using freeform
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C1A745@santarosa.dsnt.disksites.com>

> -----Original Message-----
> From: Donovan Preston [mailto:dp@divmod.org]=20
> Sent: Monday, December 15, 2003 21:03
> To: twisted-web@twistedmatrix.com
> Subject: Re: [Twisted-web] Rendering forms from HTML templates using =
freeform
>=20

[...]

> However, in anticipation of freeform's coming ability to allow you to=20
> control the layout more precisely while still auto-creating=20
> the form, I would like to gather use cases. Can you please give me a =
few methods=20
> which you will be exposing to the web, and the precisely laid=20
> out forms which you would like to invoke those methods? If you give me =

> real life use cases, I will be able to keep them in mind as I do the=20
> refactoring to support them, and probably write tests that ensure your =
use cases=20
> are covered properly in the future.

Hi Donovan,

Thanks for the explanations.
I'll try to get you specific examples -- it'll take a few days, though.

-- Gavrie.


From twisted-web@twistedmatrix.com  Fri Dec 19 18:59:15 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Fri, 19 Dec 2003 12:59:15 -0600
Subject: [Twisted-web] Session not destroyed on logout when using new cred
Message-ID: <20031219185915.89FAA43602@server1.messagingengine.com>

This is a multi-part message in MIME format.

--_----------=_1071860355107720
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset="ISO-8859-1"

The attached tac file demonstrates my problem.

1) Login with username of "user" and password of "password".
   A large red "None" should appear because there is no session data.
2) Reload the page.  Now session data should appear.
3) Logout and login again.
   The session data appears right away, but I would expect it to not be
   available yet.

Does anyone know what the proper way to have the session destroyed when I
logout is?  It seems like this should be done automatically for me.

Thanks.
-Justin

--_----------=_1071860355107720
Content-Disposition: attachment; filename="guarded.tac"
Content-Transfer-Encoding: base64
Content-Type: application/unknown; name="guarded.tac"

ZnJvbSB0d2lzdGVkLndlYi53b3ZlbiBpbXBvcnQgZ3VhcmQKZnJvbSB0d2lz
dGVkLmFwcGxpY2F0aW9uIGltcG9ydCBzZXJ2aWNlLCBpbnRlcm5ldApmcm9t
IHR3aXN0ZWQuY3JlZCBpbXBvcnQgcG9ydGFsLCBjaGVja2Vycwpmcm9tIHR3
aXN0ZWQud2ViIGltcG9ydCByZXNvdXJjZSwgc2VydmVyLCB1dGlsCmZyb20g
dHdpc3RlZC5jcmVkLnBvcnRhbCBpbXBvcnQgUG9ydGFsCmZyb20gdHdpc3Rl
ZC5jcmVkLmNoZWNrZXJzIGltcG9ydCBBbGxvd0Fub255bW91c0FjY2Vzcywg
SW5NZW1vcnlVc2VybmFtZVBhc3N3b3JkRGF0YWJhc2VEb250VXNlCmZyb20g
dHdpc3RlZC53ZWIud292ZW4uZ3VhcmQgaW1wb3J0IFVzZXJuYW1lUGFzc3dv
cmRXcmFwcGVyLCBTZXNzaW9uV3JhcHBlcgpmcm9tIHR3aXN0ZWQuY3JlZC5j
cmVkZW50aWFscyBpbXBvcnQgSUFub255bW91cwoKZnJvbSBuZXZvdyBpbXBv
cnQgcmVuZGVyZXIsIHRhZ3MsIGFwcHNlcnZlciwgaXdvdmVuCgoKIyMjIFJl
bmRlcmVycwoKY2xhc3MgTm90TG9nZ2VkSW4ocmVuZGVyZXIuUmVuZGVyZXIp
OgogICAgIiIiVGhlIHJlc291cmNlIHRoYXQgaXMgcmV0dXJuZWQgd2hlbiB5
b3UgYXJlIG5vdCBsb2dnZWQgaW4iIiIKICAgIGRvY3VtZW50ID0gdGFncy5o
dG1sWwogICAgICAgIHRhZ3MuaGVhZFt0YWdzLnRpdGxlWyJOb3QgTG9nZ2Vk
IEluIl1dLAogICAgICAgIHRhZ3MuYm9keVsKICAgICAgICAgICAgdGFncy5m
b3JtKGFjdGlvbj1ndWFyZC5JTklUX1BFUlNQRUNUSVZFKVsKICAgICAgICAg
ICAgICAgIHRhZ3MudGFibGVbCiAgICAgICAgICAgICAgICAgICAgdGFncy50
clsKICAgICAgICAgICAgICAgICAgICAgICAgdGFncy50ZFsgIlVzZXJuYW1l
OiIgXSwKICAgICAgICAgICAgICAgICAgICAgICAgdGFncy50ZFsgdGFncy5p
bnB1dCh0eXBlPSd0ZXh0JyxuYW1lPSd1c2VybmFtZScpIF0sCiAgICAgICAg
ICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICB0YWdzLnRyWwog
ICAgICAgICAgICAgICAgICAgICAgICB0YWdzLnRkWyAiUGFzc3dvcmQ6IiBd
LAogICAgICAgICAgICAgICAgICAgICAgICB0YWdzLnRkWyB0YWdzLmlucHV0
KHR5cGU9J3Bhc3N3b3JkJyxuYW1lPSdwYXNzd29yZCcpIF0sCiAgICAgICAg
ICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAg
ICAgIHRhZ3MuaW5wdXQodHlwZT0nc3VibWl0JyksCiAgICAgICAgICAgICAg
ICB0YWdzLnAsCiAgICAgICAgICAgIF0KICAgICAgICBdCiAgICBdCgpjbGFz
cyBMb2dnZWRJbihyZW5kZXJlci5SZW5kZXJlcik6CiAgICAiIiJUaGUgcmVz
b3VyY2UgdGhhdCBpcyByZXR1cm5lZCB3aGVuIHlvdSBsb2dpbiIiIgogICAg
ZG9jdW1lbnQgPSB0YWdzLmh0bWxbCiAgICAgICAgdGFncy5oZWFkW3RhZ3Mu
dGl0bGVbIkxvZ2dlZCBJbiJdXSwKICAgICAgICB0YWdzLmJvZHlbCiAgICAg
ICAgICAgIHRhZ3MuaDMocmVuZGVyZXI9dGFncy5kaXJlY3RpdmUoIndlbGNv
bWUiKSksCiAgICAgICAgICAgIHRhZ3MuaDMocmVuZGVyZXI9dGFncy5kaXJl
Y3RpdmUoInNlc3Npb25fZGF0YSIpKSwKICAgICAgICAgICAgdGFncy5hKGhy
ZWY9Z3VhcmQuREVTVFJPWV9QRVJTUEVDVElWRSlbIkxvZ291dCJdCiAgICAg
ICAgXQogICAgXQoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCB1c2VybmFtZSwg
KmFyZ3MsICoqa3cpOgogICAgICAgIHNlbGYudXNlcm5hbWUgPSB1c2VybmFt
ZQogICAgICAgIHJlbmRlcmVyLlJlbmRlcmVyLl9faW5pdF9fKHNlbGYsICph
cmdzLCAqKmt3KQoKICAgIGRlZiByZW5kZXJfc2Vzc2lvbl9kYXRhKHNlbGYs
IGNvbnRleHQsIGRhdGEpOgogICAgICAgIHNlc3Npb24gPSBjb250ZXh0Lmxv
Y2F0ZShpd292ZW4uSVJlcXVlc3QpLmdldFNlc3Npb24oKQogICAgICAgIGQg
PSBzZXNzaW9uLmdldENvbXBvbmVudChpd292ZW4uSURhdGEpCiAgICAgICAg
c2Vzc2lvbi5zZXRDb21wb25lbnQoaXdvdmVuLklEYXRhLCAiSSBhbSBzZXNz
aW9uIGRhdGEiKQogICAgICAgIHJldHVybiBjb250ZXh0LnRhZ1tkXQoKICAg
IGRlZiByZW5kZXJfd2VsY29tZShzZWxmLCBjb250ZXh0LCBkYXRhKToKICAg
ICAgICByZXR1cm4gY29udGV4dC50YWdbICJIZWxsbywgJXMhIiAlIHNlbGYu
dXNlcm5hbWVdCgogICAgZGVmIGxvZ291dChzZWxmKToKICAgICAgICBwcmlu
dCAiJXMgbG9nZ2VkIG91dCEiICUgc2VsZi51c2VybmFtZQoKCiMjIyBBdXRo
ZW50aWNhdGlvbgoKZGVmIG5vTG9nb3V0KCk6CiAgICByZXR1cm4gTm9uZQoK
ZGVmIGxvZ2luQ2FsbGJhY2soaWdub3JlZCk6CiAgICByZXR1cm4gdXRpbC5S
ZWRpcmVjdCgiLiIpCgpjbGFzcyBNeVJlYWxtOgogICAgIiIiQSBzaW1wbGUg
aW1wbGVtZW50b3Igb2YgY3JlZCdzIElSZWFsbS4KICAgICAgIEZvciB3ZWIs
IHRoaXMgZ2l2ZXMgdXMgdGhlIExvZ2dlZEluIHBhZ2UuCiAgICAiIiIKICAg
IF9faW1wbGVtZW50c19fID0gcG9ydGFsLklSZWFsbQoKICAgIGRlZiByZXF1
ZXN0QXZhdGFyKHNlbGYsIGF2YXRhcklkLCBtaW5kLCAqaW50ZXJmYWNlcyk6
CiAgICAgICAgZm9yIGlmYWNlIGluIGludGVyZmFjZXM6CiAgICAgICAgICAg
IGlmIGlmYWNlIGlzIHJlc291cmNlLklSZXNvdXJjZToKICAgICAgICAgICAg
ICAgICMgZG8gd2ViIHN0dWZmCiAgICAgICAgICAgICAgICBpZiBhdmF0YXJJ
ZCBpcyBjaGVja2Vycy5BTk9OWU1PVVM6CiAgICAgICAgICAgICAgICAgICAg
cmVzYyA9IE5vdExvZ2dlZEluKCkKICAgICAgICAgICAgICAgICAgICByZXNj
LnJlYWxtID0gc2VsZgogICAgICAgICAgICAgICAgICAgIHJldHVybiAocmVz
b3VyY2UuSVJlc291cmNlLCByZXNjLCBub0xvZ291dCkKICAgICAgICAgICAg
ICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcmVzYyA9IExvZ2dlZElu
KGF2YXRhcklkKQogICAgICAgICAgICAgICAgICAgIHJlc2MucmVhbG0gPSBz
ZWxmCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChyZXNvdXJjZS5JUmVz
b3VyY2UsIHJlc2MsIHJlc2MubG9nb3V0KQoKICAgICAgICByYWlzZSBOb3RJ
bXBsZW1lbnRlZEVycm9yKCJDYW4ndCBzdXBwb3J0IHRoYXQgaW50ZXJmYWNl
LiIpCgoKcmVhbG0gPSBNeVJlYWxtKCkKcG9ydGFsID0gUG9ydGFsKHJlYWxt
KQpteUNoZWNrZXIgPSBJbk1lbW9yeVVzZXJuYW1lUGFzc3dvcmREYXRhYmFz
ZURvbnRVc2UoKQpteUNoZWNrZXIuYWRkVXNlcigidXNlciIsInBhc3N3b3Jk
IikKIyBBbGxvdyBhbm9ueW1vdXMgYWNjZXNzLiAgTmVlZGVkIGZvciBhY2Nl
c3MgdG8gTm90TG9nZ2VkSW4KcG9ydGFsLnJlZ2lzdGVyQ2hlY2tlcihBbGxv
d0Fub255bW91c0FjY2VzcygpLCBJQW5vbnltb3VzKQojIEFsbG93IHVzZXJz
IHJlZ2lzdGVyZWQgaW4gdGhlIHBhc3N3b3JkIGZpbGUuCnBvcnRhbC5yZWdp
c3RlckNoZWNrZXIobXlDaGVja2VyKQoKc2l0ZSA9IGFwcHNlcnZlci5OZXZv
d1NpdGUoCiAgICByZXNvdXJjZT1ndWFyZC5TZXNzaW9uV3JhcHBlcigKICAg
ICAgICBndWFyZC5Vc2VybmFtZVBhc3N3b3JkV3JhcHBlcihwb3J0YWwsIGNh
bGxiYWNrPWxvZ2luQ2FsbGJhY2spCiAgICApLAopCgphcHBsaWNhdGlvbiA9
IHNlcnZpY2UuQXBwbGljYXRpb24oImd1YXJkZWQiKQppbnRlcm5ldC5UQ1BT
ZXJ2ZXIoODA4MCwgc2l0ZSkuc2V0U2VydmljZVBhcmVudChhcHBsaWNhdGlv
bikK

--_----------=_1071860355107720--



From twisted-web@twistedmatrix.com  Sat Dec 20 03:39:44 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Fri, 19 Dec 2003 22:39:44 -0500
Subject: [Twisted-web] Packaging nevow standalone
In-Reply-To: <2093E952-30E3-11D8-9E18-000A95864FC4@divmod.org>
References: <000501c3c067$cfd28270$6501a8c0@khowe> <BCBAEC5E-2C5D-11D8-8853-000A95864FC4@divmod.org> <20031217193626.GB5966@nieder> <2093E952-30E3-11D8-9E18-000A95864FC4@divmod.org>
Message-ID: <3FE3C480.1010801@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig4A5A52B6582DF19A9D4209D9
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Donovan Preston wrote:
> One of the things I have been thinking about doing before doing a 
> standalone distribution is removing the dependency on twisted. I have 
> been contemplating using PyProtocols for the adaption machinery, and 
> writing a simple CGI renderer to replace the ones that are twisted-web 
> aware. However, while I want to pursue this goal eventually to ensure 
> that nevow has as few dependency abstraction violations as possible, it 
> probably won't happen right away, so I probably shouldn't do it for the 
> first standalone release.

As I might have mumbled about before, I think it's wasted effort to 
bother removing dependency on Twisted. You can still do a CGI interface 
without getting rid of the Twisted dependency altogether, and if people 
can install Nevow in their CGI environments, they can also install Twisted.

> Radix, what are your thoughts about timing?

DP and I talked about this on IRC. Basically, we need::

* Move regadapt into Twisted (twisted.python)
* Modify the Quotient release process such that it includes CVS HEAD of
   Nevow for every Quotient release.
* Put Nevow into its own CVS module

As soon as these can happen, Nevow can have a standalone release.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig4A5A52B6582DF19A9D4209D9
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQE/48SANp279O1/OG4RAjzZAJ0fjig2P5H4AMTduu/Oup5FjLH/mQCdF0l9
SaUkaQF7VVq2TUyI14fGtgs=
=OSIf
-----END PGP SIGNATURE-----

--------------enig4A5A52B6582DF19A9D4209D9--


From twisted-web@twistedmatrix.com  Sun Dec 21 09:04:53 2003
From: twisted-web@twistedmatrix.com (Douglas Bagnall)
Date: Sun, 21 Dec 2003 22:04:53 +1300
Subject: [Twisted-web] subtle copying in woven driving me crazy.
Message-ID: <3FE56235.9000801@paradise.net.nz>

I thought it was reasonable to give my player storing object a 
requestAvatarId method and call it a checker, and it seemed to work 
until it was found that new players couldn't log in.  Eventually I 
discovered that:

class Checker(dict):
     __implements__ = checkers.ICredentialsChecker
     def __init__(self):
         log.debug(id(self))
     def requestAvatarId(self, credentials):
         log.debug(id(self))

gives two different numbers.  Of course seperating the checker from the 
player model fixed this problem, and is no doubt correcter. Similarly:

class SomePage(page.Page):
     def __init__(self, children_dict):
         page.Page.__init__(self)
         self.children_dict = children_dict
         log.debug(id(self.children_dict))

     def getDynamicChild(self, path, request):
         log.debug(id(self.children_dict))
         return self.children_dict.get(path, error.NoResource())

gives two different id numbers!  So you can't manipulate the children by 
referring to the original dictionary in some other context.  Again, 
there is an easy way around this, once you realise what is happening, 
and that other way is perhaps better, but this has caused me some 
bewilderment.

Is this behaviour intentional? or necessary?  It should perhaps be 
better documented.


douglas





From twisted-web@twistedmatrix.com  Sun Dec 21 09:41:36 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Sun, 21 Dec 2003 04:41:36 -0500
Subject: [Twisted-web] subtle copying in woven driving me crazy.
In-Reply-To: <3FE56235.9000801@paradise.net.nz>
References: <3FE56235.9000801@paradise.net.nz>
Message-ID: <3FE56AD0.2050705@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enigE60C73131108C5F225734516
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Douglas Bagnall wrote:
> I thought it was reasonable to give my player storing object a 
> requestAvatarId method and call it a checker, and it seemed to work 
> until it was found that new players couldn't log in.  Eventually I 
> discovered that:

...

> gives two different numbers.  

 > Similarly:

...

> gives two different id numbers!

twisted.web (and Twisted in general) isn't doing any copying of your 
credential checkers or your Resources. Can you show the code that's 
instantiating SomePage and Checker, and a little more context in 
general? You're probably confused about how often this code is being called.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enigE60C73131108C5F225734516
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQE/5WrXNp279O1/OG4RAnmSAKCGnJZ48LHUeWtO4lzGQbE/y5cpmACfRvUA
R8R9iQ5z4pXJXIV20dnKsjc=
=Qh2B
-----END PGP SIGNATURE-----

--------------enigE60C73131108C5F225734516--


From twisted-web@twistedmatrix.com  Sun Dec 21 13:55:25 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Sun, 21 Dec 2003 15:55:25 +0200
Subject: [Twisted-web] Hierarchical data in Nevow (like Woven's submodels)?
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C9883A@santarosa.dsnt.disksites.com>

SGksDQoNCkluIFdvdmVuLCBpdCBpcyBwb3NzaWJsZSB0byBhY2Nlc3MgYSBzcGVjaWZpYyBzdWJt
b2RlbCBvZiBhIGdpdmVuIG1vZGVsLCBzb21ldGltZXMgZ29pbmcgZG93biBtdWx0aXBsZSBsZXZl
bHMuDQpGb3IgZXhhbXBsZSwgPHAgbW9kZWw9Ii9mb28vYmFyL2JheiI+LiAgTXkgYXBwbGljYXRp
b24gaW5jbHVkZXMgbG90cyBvZiB0aGVzZSBzdWItc3VibW9kZWwgcGF0aHMuDQoNCkhvdyBjYW4g
dGhpcyBiZSBkb25lIGluIE5ldm93PyBJcyBpcyBwb3NzaWJsZSB0byBzcGVjaWZ5IHRoYXQgSSB3
YW50IHRvIGFkZHJlc3Mgc29tZSBzdWJwYXJ0IG9mIHRoZSBkYXRhIHRoYXQgaXMgcmV0dXJuZWQg
YnkgYSAnZGF0YScgc3BlY2lhbD8gSWYgc28sIGlzIHRoZXJlIGFueSBlbGVnYW50IHN5bnRheCBm
b3IgdGhpcyB3aGVuIHVzaW5nIHBhZ2UgdGVtcGxhdGVzICh3aXRoIEhUTUxSZW5kZXJlcik/DQoN
ClRoYW5rcywNCg0KLS0gR2F2cmllLiANCg==


From twisted-web@twistedmatrix.com  Mon Dec 22 01:11:34 2003
From: twisted-web@twistedmatrix.com (Douglas Bagnall)
Date: Mon, 22 Dec 2003 14:11:34 +1300
Subject: [Twisted-web] subtle copying in woven driving me crazy.
In-Reply-To: <3FE56AD0.2050705@twistedmatrix.com>
References: <3FE56235.9000801@paradise.net.nz>
 <3FE56AD0.2050705@twistedmatrix.com>
Message-ID: <3FE644C6.5070204@paradise.net.nz>

Christopher Armstrong wrote

>> gives two different id numbers!
> 
> 
> twisted.web (and Twisted in general) isn't doing any copying of your 
> credential checkers or your Resources. Can you show the code that's 
> instantiating SomePage and Checker, and a little more context in 
> general? You're probably confused about how often this code is being 
> called.

Yeah. That was my initial assumption, and I stuck to it, until, as the 
subject mentions, I went crazy.

The full context can be seen at:
http://cvs.sf.net/viewcvs.py/upstage/Upstage/upstage/

PlayerDict is a dictionary subclass that alters __setitem__ and 
__delitem__ to save itself to disk when changed, with a checker 
interface tacked on. player_dict is its only instance, created in the 
global scope of the player module. grep agrees, and says that 
player_dict is never reassigned.  I've never touched reload in my life, 
so as I understand Python import rules, this will only run once. To make 
sure I have peppered the module with log.debugs, which only appear once, 
and to be surer I tried stringing the imports in a series. Anyway, all 
through the global scope of all the touched modules, player_dict has the 
same identity, as you'd expect. Then in the adminWrapper function 
definition:

log.debug("\n\nin web.py global space\n  id is %s"%id(player_dict))

def adminWrapper(admin_dir):
     """Ties it together"""
     p = Portal(AdminRealm(admin_dir))
     p.registerChecker(AllowAnonymousAccess(), IAnonymous)
     log.debug("in adminWrapper  id is %s"%id(player_dict))
     p.registerChecker(player_dict, IUsernamePassword)
     #p.registerChecker(players_wrapper, IUsernamePassword)
     upw = guard.UsernamePasswordWrapper(p, callback=dumbRedirect)
     r = guard.SessionWrapper(upw)
     r.sessionLifetime = 6 * 3600
     return r

...playerdict obviously still has the same identity.  It is only when 
the checker is used, in the requestAvatarId method in the 
player.PlayerDict class, that a different id is returned:

     def requestAvatarId(self, credentials):
         log.debug('\n\nIn requestAvatarId, player_dict id is', id(self))
         #log.debug('in requestAvatarId, player_dict is', self)
         player = self.get(credentials.username)
         log.debug(credentials.username, player)
         pw_md5 = md5.new(credentials.password).hexdigest()
         #log.debug("given: %s\nsaved: %s" %(pw_md5,player.password))
         if player and pw_md5 == player.password:
             log.debug("returning OK for player %s" %player)
             return credentials.username
         return failure.Failure(error.UnauthorizedLogin())

The dictionary here contains the same stuff as the original did at start 
up.  I can only assume that requestAvatarId has somehow been wrested 
from its true self, which has been supplanted by a copy.

Now, I'd happily accept that I'd done that, if only I knew *how*.

Some points:

- my guard code is based on quite an old (>3 months) canonical version.
Would it be worth me trying something newer, or simpleguard?

- I've heard mutterings against new style classes on the twisted list. 
Could subclassing dict mix badly with cred/guard?

- the other case I mentioned, where an object appeared to change between 
the __init__ and render of a page.Page, involved a similar dictionary 
subclass.

- python 2.3.2, twisted 1.1.1/ 1.1.0, debian sid.


thanks for any help, even if it is likely to make me feel quite stupid.

douglas



From twisted-web@twistedmatrix.com  Mon Dec 22 02:00:22 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Sun, 21 Dec 2003 21:00:22 -0500
Subject: [Twisted-web] subtle copying in woven driving me crazy.
In-Reply-To: <3FE644C6.5070204@paradise.net.nz>
References: <3FE56235.9000801@paradise.net.nz> <3FE56AD0.2050705@twistedmatrix.com> <3FE644C6.5070204@paradise.net.nz>
Message-ID: <3FE65036.5000501@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig5B99CD6013B36D86C67E8E8C
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Douglas Bagnall wrote:

> Christopher Armstrong wrote

>> You're probably confused about how often this code is being 
>> called.

> Yeah. That was my initial assumption, and I stuck to it, until, as the 
> subject mentions, I went crazy.
 >
> The full context can be seen at:
> http://cvs.sf.net/viewcvs.py/upstage/Upstage/upstage/

I just skimmed through your code and couldn't find anything obvious; the 
only thing noticeable so far is that you inconsistently mix tabs and 
spaces. 'tabnanny' will show you where, I recommend fixing that problem 
before going further, as all sorts of subtle bugs can happen because of 
it :)

I'll try to take a harder look at this code later.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig5B99CD6013B36D86C67E8E8C
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQE/5lA8Np279O1/OG4RAlvyAJ0eTgXeT4H2LdYV3JEkfKI7mZszkQCffE03
YLzyxU3kPcXjD1z8OxC3vBk=
=LFVV
-----END PGP SIGNATURE-----

--------------enig5B99CD6013B36D86C67E8E8C--


From twisted-web@twistedmatrix.com  Mon Dec 22 15:38:14 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Mon, 22 Dec 2003 17:38:14 +0200
Subject: [Twisted-web] Freeform/formless doesn't work with deferred properties?
Message-ID: <3FE70FE6.1010300@disksites.com>

This is a multi-part message in MIME format.
--------------030001020902000004080608
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Hi,

I'm using freeform/formless to handle a form.
However, when the property returns a deferred value, it is not handled 
correctly by freeform.
Is this a bug?

Attached is an example (based on DP's examples) that shows the behavior: 
When rendering the page, instead of seeing "50" in the input field, it 
shows something like '<Deferred at 0xbec7c30c>'.

PS: A similar thing happens when returning a deferred as an attribute of 
context.tag in a render method.

-- Gavrie.

--------------030001020902000004080608
Content-Type: text/plain;
 name="formpost-defer.tac"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="formpost-defer.tac"


from twisted.application import service, internet
from twisted.internet import defer

from nevow import appserver
from nevow import renderer
from nevow import tags
from nevow import formless
from nevow import freeform


class IMyForm(formless.TypedInterface):
    foo = formless.Integer()


class FormPage(renderer.Renderer):
    __implements__ = IMyForm,

    def _getter(self):
        d = defer.Deferred()
        d.callback(50)
        return d

    foo = property(_getter)

    document = tags.html[
    tags.body[
        "Hello! Here is a form:",
        freeform.configure
    ]
]


application = service.Application("nestedmenus")
internet.TCPServer(
    8080, 
    appserver.NevowSite(
        FormPage()
    )
).setServiceParent(application)

--------------030001020902000004080608--


From twisted-web@twistedmatrix.com  Mon Dec 22 22:58:34 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Mon, 22 Dec 2003 17:58:34 -0500
Subject: [Twisted-web] Freeform/formless doesn't work with deferred properties?
In-Reply-To: <3FE70FE6.1010300@disksites.com>
References: <3FE70FE6.1010300@disksites.com>
Message-ID: <3FE7771A.2050600@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig8D72DCB2EC4FE697D83542D2
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Gavrie Philipson wrote:
> PS: A similar thing happens when returning a deferred as an attribute of 
> context.tag in a render method.

I don't know what to do about your freeform/deferred problem, but this 
one's easy to handle: don't return tags that have Deferreds inside, do this:

def render_foo(self, ctx, data):
     d = getYourDeferred()
     d.addCallback(self._cbGenTags, ctx)
     return d

def _cbGenTags(self, result, ctx):
     return ctx.tag[ str(result) ]


-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig8D72DCB2EC4FE697D83542D2
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQE/53ciNp279O1/OG4RAugxAJ0d/28eNYPCpXj5JOZH+Y2UI7pVugCffUF/
9o3Ii+F/yr9mb14h7942xuI=
=tu9a
-----END PGP SIGNATURE-----

--------------enig8D72DCB2EC4FE697D83542D2--


From twisted-web@twistedmatrix.com  Tue Dec 23 06:21:47 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Tue, 23 Dec 2003 08:21:47 +0200
Subject: [Twisted-web] Freeform/formless doesn't work with deferred properties?
In-Reply-To: <3FE7771A.2050600@twistedmatrix.com>
References: <3FE70FE6.1010300@disksites.com> <3FE7771A.2050600@twistedmatrix.com>
Message-ID: <3FE7DEFB.30607@disksites.com>

Christopher Armstrong wrote:
...
> I don't know what to do about your freeform/deferred problem, but this 
> one's easy to handle: don't return tags that have Deferreds inside, do 
> this:
> 
> def render_foo(self, ctx, data):
>     d = getYourDeferred()
>     d.addCallback(self._cbGenTags, ctx)
>     return d
> 
> def _cbGenTags(self, result, ctx):
>     return ctx.tag[ str(result) ]

Christopher,

This indeed solved the problem.

Thanks,

-- Gavrie.


From twisted-web@twistedmatrix.com  Tue Dec 23 14:20:58 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Tue, 23 Dec 2003 08:20:58 -0600
Subject: [Twisted-web] exceptions.AttributeError: NevowSite instance has no attribute 'url'
Message-ID: <20031223142059.BB473424D1@server1.messagingengine.com>

This is a multi-part message in MIME format.

--_----------=_1072189258213310
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset="ISO-8859-1"

After updating to the latest CVS I get errors in the attached log file
upon the initial load of my app, which uses guard and SessionWrapper for
authentication.

    portal = login.RatControlPortal(realm)
    # Allow anonymous access.
    portal.registerChecker(AllowAnonymousAccess(), IAnonymous)
    # Allow users registered in the password file.
    portal.registerChecker(FilePasswordDB(sibpath(__file__,
    "passwords.txt")))

    site = appserver.NevowSite(
        resource=SessionWrapper(
            UsernamePasswordWrapper(portal,
            callback=utility.loginCallback)
        ),
    )


I can try to get a tac together if needed, but the most recent changes in
CVS looked like they might have caused the problem.  Just wanted to give
you some idea of what my code looks like.

-Justin

--_----------=_1072189258213310
Content-Disposition: attachment; filename="error.log"
Content-Transfer-Encoding: base64
Content-Type: application/unknown; name="error.log"

Qzpcc3ZuXFJhdENvbnRyb2xccmF0Y29udHJvbD50d2lzdGQgLXIgd2luMzIg
LWYgcmF0Y29udHJvbC50YXANCjIwMDMvMTIvMjMgMDg6MDcgQ2VudHJhbCBT
dGFuZGFyZCBUaW1lIFstXSBMb2cgb3BlbmVkLg0KMjAwMy8xMi8yMyAwODow
NyBDZW50cmFsIFN0YW5kYXJkIFRpbWUgWy1dIHR3aXN0ZCAxLjEuMXJjMSAo
QzpcUHl0aG9uMjNccHl0aG9uLmV4ZSAyLjMuMikgc3RhcnRpbmcgdXANCjIw
MDMvMTIvMjMgMDg6MDcgQ2VudHJhbCBTdGFuZGFyZCBUaW1lIFstXSByZWFj
dG9yIGNsYXNzOiB0d2lzdGVkLmludGVybmV0LndpbjMyZXZlbnRyZWFjdG9y
LldpbjMyUmVhY3Rvcg0KMjAwMy8xMi8yMyAwODowNyBDZW50cmFsIFN0YW5k
YXJkIFRpbWUgWy1dIG5ldm93LmFwcHNlcnZlci5OZXZvd1NpdGUgc3RhcnRp
bmcgb24gODg4OA0KMjAwMy8xMi8yMyAwODowNyBDZW50cmFsIFN0YW5kYXJk
IFRpbWUgWy1dIFN0YXJ0aW5nIGZhY3RvcnkgPG5ldm93LmFwcHNlcnZlci5O
ZXZvd1NpdGUgaW5zdGFuY2UgYXQgMHgwMEVEREI3MD4NCjIwMDMvMTIvMjMg
MDg6MDcgQ2VudHJhbCBTdGFuZGFyZCBUaW1lIFstXSB0d2lzdGVkLndlYi53
b3Zlbi5mbGFzaGNvbmR1aXQuRmxhc2hDb25kdWl0RmFjdG9yeSBzdGFydGlu
ZyBvbiA0MzIxDQoyMDAzLzEyLzIzIDA4OjA3IENlbnRyYWwgU3RhbmRhcmQg
VGltZSBbLV0gU3RhcnRpbmcgZmFjdG9yeSA8dHdpc3RlZC53ZWIud292ZW4u
Zmxhc2hjb25kdWl0LkZsYXNoQ29uZHVpdEZhY3RvcnkgaW5zdGFuY2UgYXQg
MHgwMTEwOUY4MD4NCjIwMDMvMTIvMjMgMDg6MDcgQ2VudHJhbCBTdGFuZGFy
ZCBUaW1lIFtIVFRQQ2hhbm5lbCwwLDEyNy4wLjAuMV0gVHJhY2ViYWNrICht
b3N0IHJlY2VudCBjYWxsIGxhc3QpOg0KICAgICAgICAgIEZpbGUgIkM6XHN2
blxRdW90aWVudFxuZXZvd1xhcHBzZXJ2ZXIucHkiLCBsaW5lIDExNSwgaW4g
cHJvY2Vzcw0KICAgICAgICAgICAgcmV0dXJuIHNlbGYuc2l0ZS5nZXRSZXNv
dXJjZUZvcihzZWxmKS5hZGRDYWxsYmFjaygNCiAgICAgICAgICBGaWxlICJD
Olxzdm5cUXVvdGllbnRcbmV2b3dcYXBwc2VydmVyLnB5IiwgbGluZSAyMDMs
IGluIGdldFJlc291cmNlRm9yDQogICAgICAgICAgICByZXR1cm4gZGVmZXIu
bWF5YmVEZWZlcnJlZChyZXMubG9jYXRlQ2hpbGQsIHJlcXVlc3QsIHBhdGgp
LmFkZENhbGxiYWNrKA0KICAgICAgICAgIEZpbGUgIkM6XFB5dGhvbjIzXExp
YlxzaXRlLXBhY2thZ2VzXHR3aXN0ZWRcaW50ZXJuZXRcZGVmZXIucHkiLCBs
aW5lIDE4NywgaW4gYWRkQ2FsbGJhY2sNCiAgICAgICAgICAgIGNhbGxiYWNr
S2V5d29yZHM9a3cpDQogICAgICAgICAgRmlsZSAiQzpcUHl0aG9uMjNcTGli
XHNpdGUtcGFja2FnZXNcdHdpc3RlZFxpbnRlcm5ldFxkZWZlci5weSIsIGxp
bmUgMTc4LCBpbiBhZGRDYWxsYmFja3MNCiAgICAgICAgICAgIHNlbGYuX3J1
bkNhbGxiYWNrcygpDQogICAgICAgIC0tLSA8ZXhjZXB0aW9uIGNhdWdodCBo
ZXJlPiAtLS0NCiAgICAgICAgICBGaWxlICJDOlxQeXRob24yM1xMaWJcc2l0
ZS1wYWNrYWdlc1x0d2lzdGVkXGludGVybmV0XGRlZmVyLnB5IiwgbGluZSAz
MDgsIGluIF9ydW5DYWxsYmFja3MNCiAgICAgICAgICAgIHNlbGYucmVzdWx0
ID0gY2FsbGJhY2soc2VsZi5yZXN1bHQsICphcmdzLCAqKmt3KQ0KICAgICAg
ICAgIEZpbGUgIkM6XHN2blxRdW90aWVudFxuZXZvd1xhcHBzZXJ2ZXIucHki
LCBsaW5lIDIyMiwgaW4gaGFuZGxlU2VnbWVudA0KICAgICAgICAgICAgc2Vs
Zi51cmwub2JqZWN0TW91bnRlZEF0KG5ld3JlcywgcmVxdWVzdC5wcmVwYXRo
KQ0KICAgICAgICBleGNlcHRpb25zLkF0dHJpYnV0ZUVycm9yOiBOZXZvd1Np
dGUgaW5zdGFuY2UgaGFzIG5vIGF0dHJpYnV0ZSAndXJsJw0KDQoyMDAzLzEy
LzIzIDA4OjA3IENlbnRyYWwgU3RhbmRhcmQgVGltZSBbSFRUUENoYW5uZWws
MCwxMjcuMC4wLjFdIFRyYWNlYmFjayAobW9zdCByZWNlbnQgY2FsbCBsYXN0
KToNCiAgICAgICAgICBGaWxlICJDOlxzdm5cUXVvdGllbnRcbmV2b3dcYXBw
c2VydmVyLnB5IiwgbGluZSAxMTUsIGluIHByb2Nlc3MNCiAgICAgICAgICAg
IHJldHVybiBzZWxmLnNpdGUuZ2V0UmVzb3VyY2VGb3Ioc2VsZikuYWRkQ2Fs
bGJhY2soDQogICAgICAgICAgRmlsZSAiQzpcc3ZuXFF1b3RpZW50XG5ldm93
XGFwcHNlcnZlci5weSIsIGxpbmUgMjAzLCBpbiBnZXRSZXNvdXJjZUZvcg0K
ICAgICAgICAgICAgcmV0dXJuIGRlZmVyLm1heWJlRGVmZXJyZWQocmVzLmxv
Y2F0ZUNoaWxkLCByZXF1ZXN0LCBwYXRoKS5hZGRDYWxsYmFjaygNCiAgICAg
ICAgICBGaWxlICJDOlxQeXRob24yM1xMaWJcc2l0ZS1wYWNrYWdlc1x0d2lz
dGVkXGludGVybmV0XGRlZmVyLnB5IiwgbGluZSAxODcsIGluIGFkZENhbGxi
YWNrDQogICAgICAgICAgICBjYWxsYmFja0tleXdvcmRzPWt3KQ0KICAgICAg
ICAgIEZpbGUgIkM6XFB5dGhvbjIzXExpYlxzaXRlLXBhY2thZ2VzXHR3aXN0
ZWRcaW50ZXJuZXRcZGVmZXIucHkiLCBsaW5lIDE3OCwgaW4gYWRkQ2FsbGJh
Y2tzDQogICAgICAgICAgICBzZWxmLl9ydW5DYWxsYmFja3MoKQ0KICAgICAg
ICAtLS0gPGV4Y2VwdGlvbiBjYXVnaHQgaGVyZT4gLS0tDQogICAgICAgICAg
RmlsZSAiQzpcUHl0aG9uMjNcTGliXHNpdGUtcGFja2FnZXNcdHdpc3RlZFxp
bnRlcm5ldFxkZWZlci5weSIsIGxpbmUgMzA4LCBpbiBfcnVuQ2FsbGJhY2tz
DQogICAgICAgICAgICBzZWxmLnJlc3VsdCA9IGNhbGxiYWNrKHNlbGYucmVz
dWx0LCAqYXJncywgKiprdykNCiAgICAgICAgICBGaWxlICJDOlxzdm5cUXVv
dGllbnRcbmV2b3dcYXBwc2VydmVyLnB5IiwgbGluZSAyMjIsIGluIGhhbmRs
ZVNlZ21lbnQNCiAgICAgICAgICAgIHNlbGYudXJsLm9iamVjdE1vdW50ZWRB
dChuZXdyZXMsIHJlcXVlc3QucHJlcGF0aCkNCiAgICAgICAgZXhjZXB0aW9u
cy5BdHRyaWJ1dGVFcnJvcjogTmV2b3dTaXRlIGluc3RhbmNlIGhhcyBubyBh
dHRyaWJ1dGUgJ3VybCcNCg0KMjAwMy8xMi8yMyAwODowNyBDZW50cmFsIFN0
YW5kYXJkIFRpbWUgW0hUVFBDaGFubmVsLDAsMTI3LjAuMC4xXSBDOlxQeXRo
b24yM1xsaWJcc2l0ZS1wYWNrYWdlc1x0d2lzdGVkXHdlYlxzZXJ2ZXIucHk6
MjY2OiBleGNlcHRpb25zLlVzZXJXYXJuaW5nOiBXYXJuaW5nISByZXF1ZXN0
LmZpbmlzaCBjYWxsZWQgdHdpY2UuDQoyMDAzLzEyLzIzIDA4OjA3IENlbnRy
YWwgU3RhbmRhcmQgVGltZSBbSFRUUENoYW5uZWwsMCwxMjcuMC4wLjFdIFVu
aGFuZGxlZCBlcnJvciBpbiBEZWZlcnJlZDoNCjIwMDMvMTIvMjMgMDg6MDcg
Q2VudHJhbCBTdGFuZGFyZCBUaW1lIFtIVFRQQ2hhbm5lbCwwLDEyNy4wLjAu
MV0gVHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOg0KICAgICAg
ICAgIEZpbGUgIkM6XHN2blxRdW90aWVudFxuZXZvd1xhcHBzZXJ2ZXIucHki
LCBsaW5lIDExNSwgaW4gcHJvY2Vzcw0KICAgICAgICAgICAgcmV0dXJuIHNl
bGYuc2l0ZS5nZXRSZXNvdXJjZUZvcihzZWxmKS5hZGRDYWxsYmFjaygNCiAg
ICAgICAgICBGaWxlICJDOlxzdm5cUXVvdGllbnRcbmV2b3dcYXBwc2VydmVy
LnB5IiwgbGluZSAyMDMsIGluIGdldFJlc291cmNlRm9yDQogICAgICAgICAg
ICByZXR1cm4gZGVmZXIubWF5YmVEZWZlcnJlZChyZXMubG9jYXRlQ2hpbGQs
IHJlcXVlc3QsIHBhdGgpLmFkZENhbGxiYWNrKA0KICAgICAgICAgIEZpbGUg
IkM6XFB5dGhvbjIzXExpYlxzaXRlLXBhY2thZ2VzXHR3aXN0ZWRcaW50ZXJu
ZXRcZGVmZXIucHkiLCBsaW5lIDE4NywgaW4gYWRkQ2FsbGJhY2sNCiAgICAg
ICAgICAgIGNhbGxiYWNrS2V5d29yZHM9a3cpDQogICAgICAgICAgRmlsZSAi
QzpcUHl0aG9uMjNcTGliXHNpdGUtcGFja2FnZXNcdHdpc3RlZFxpbnRlcm5l
dFxkZWZlci5weSIsIGxpbmUgMTc4LCBpbiBhZGRDYWxsYmFja3MNCiAgICAg
ICAgICAgIHNlbGYuX3J1bkNhbGxiYWNrcygpDQogICAgICAgIC0tLSA8ZXhj
ZXB0aW9uIGNhdWdodCBoZXJlPiAtLS0NCiAgICAgICAgICBGaWxlICJDOlxQ
eXRob24yM1xMaWJcc2l0ZS1wYWNrYWdlc1x0d2lzdGVkXGludGVybmV0XGRl
ZmVyLnB5IiwgbGluZSAzMDgsIGluIF9ydW5DYWxsYmFja3MNCiAgICAgICAg
ICAgIHNlbGYucmVzdWx0ID0gY2FsbGJhY2soc2VsZi5yZXN1bHQsICphcmdz
LCAqKmt3KQ0KICAgICAgICAgIEZpbGUgIkM6XHN2blxRdW90aWVudFxuZXZv
d1xhcHBzZXJ2ZXIucHkiLCBsaW5lIDIyMiwgaW4gaGFuZGxlU2VnbWVudA0K
ICAgICAgICAgICAgc2VsZi51cmwub2JqZWN0TW91bnRlZEF0KG5ld3Jlcywg
cmVxdWVzdC5wcmVwYXRoKQ0KICAgICAgICBleGNlcHRpb25zLkF0dHJpYnV0
ZUVycm9yOiBOZXZvd1NpdGUgaW5zdGFuY2UgaGFzIG5vIGF0dHJpYnV0ZSAn
dXJsJw==

--_----------=_1072189258213310--



From twisted-web@twistedmatrix.com  Tue Dec 23 14:31:52 2003
From: twisted-web@twistedmatrix.com (Thorsten Henninger)
Date: Tue, 23 Dec 2003 15:31:52 +0100
Subject: [Twisted-web] Need help implementing WebDAV
Message-ID: <3FE851D8.3030601@brainbot.com>

Hi all,

I need some help implementing the WebDAV protocoll for Twisted.Web.
If  one implements WebDAV using Python's BaseHTTPServer, one has to 
specify a RequestHandler by subclassing 
BaseHTTPServer.BaseHTTPRequestHandler. The implementation of the WebDAV 
protocoll is then straight-forward.

I do not understand, how to solve this with twisted web.
My first guess is, that I have to do something similar as done in 
Twisted.web.xmlrpc ?
And how to I implement the protocoll? do I have to inherit from 
twisted.protocols.http?

I would appriciate some help on this problems, just a few hints to get 
me started ...

regards,

Thorsten



-- 
brainbot technologies AG 
boppstrasse . 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:henni@brainbot.com




From twisted-web@twistedmatrix.com  Tue Dec 23 15:09:08 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Tue, 23 Dec 2003 10:09:08 -0500
Subject: [Twisted-web] exceptions.AttributeError: NevowSite instance has no attribute 'url'
In-Reply-To: <20031223142059.BB473424D1@server1.messagingengine.com>
References: <20031223142059.BB473424D1@server1.messagingengine.com>
Message-ID: <F5391F77-3559-11D8-86F1-000A95864FC4@divmod.org>

On Dec 23, 2003, at 9:20 AM, Justin Johnson wrote:

> After updating to the latest CVS I get errors in the attached log file
> upon the initial load of my app, which uses guard and SessionWrapper 
> for
> authentication.
>
>     portal = login.RatControlPortal(realm)
>     # Allow anonymous access.
>     portal.registerChecker(AllowAnonymousAccess(), IAnonymous)
>     # Allow users registered in the password file.
>     portal.registerChecker(FilePasswordDB(sibpath(__file__,
>     "passwords.txt")))
>
>     site = appserver.NevowSite(
>         resource=SessionWrapper(
>             UsernamePasswordWrapper(portal,
>             callback=utility.loginCallback)
>         ),
>     )
>
>
> I can try to get a tac together if needed, but the most recent changes 
> in
> CVS looked like they might have caused the problem.  Just wanted to 
> give
> you some idea of what my code looks like.

Are you using a tap? If so, you'll need to rerun mktap, as the pickled 
NevowSite in your tap won't have had the new NevowSite.__init__ called 
on it, which creates the URLGenerator which it stores as .url.

This is exactly the upgrading problem glyph is writing about in his 
blog -- how to balance the need for seamless state upgrades for old 
persistent objects with the need to keep the code simple, small and 
bugfree.

dp



From twisted-web@twistedmatrix.com  Tue Dec 23 15:23:34 2003
From: twisted-web@twistedmatrix.com (Justin Johnson)
Date: Tue, 23 Dec 2003 09:23:34 -0600
Subject: [Twisted-web] exceptions.AttributeError: NevowSite instance has no attribute 'url'
In-Reply-To: <F5391F77-3559-11D8-86F1-000A95864FC4@divmod.org>
References: <20031223142059.BB473424D1@server1.messagingengine.com> <F5391F77-3559-11D8-86F1-000A95864FC4@divmod.org>
Message-ID: <20031223152334.2B96E4378E@server1.messagingengine.com>

Of course, you are correct.  Sorry 'bout that.  :-(

On Tue, 23 Dec 2003 10:09:08 -0500, "Donovan Preston" <dp@divmod.org>
said:
> 
> On Dec 23, 2003, at 9:20 AM, Justin Johnson wrote:
> 
> > After updating to the latest CVS I get errors in the attached log file
> > upon the initial load of my app, which uses guard and SessionWrapper 
> > for
> > authentication.
> >
> >     portal = login.RatControlPortal(realm)
> >     # Allow anonymous access.
> >     portal.registerChecker(AllowAnonymousAccess(), IAnonymous)
> >     # Allow users registered in the password file.
> >     portal.registerChecker(FilePasswordDB(sibpath(__file__,
> >     "passwords.txt")))
> >
> >     site = appserver.NevowSite(
> >         resource=SessionWrapper(
> >             UsernamePasswordWrapper(portal,
> >             callback=utility.loginCallback)
> >         ),
> >     )
> >
> >
> > I can try to get a tac together if needed, but the most recent changes 
> > in
> > CVS looked like they might have caused the problem.  Just wanted to 
> > give
> > you some idea of what my code looks like.
> 
> Are you using a tap? If so, you'll need to rerun mktap, as the pickled 
> NevowSite in your tap won't have had the new NevowSite.__init__ called 
> on it, which creates the URLGenerator which it stores as .url.
> 
> This is exactly the upgrading problem glyph is writing about in his 
> blog -- how to balance the need for seamless state upgrades for old 
> persistent objects with the need to keep the code simple, small and 
> bugfree.
> 
> dp
> 
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web


From twisted-web@twistedmatrix.com  Tue Dec 23 15:33:13 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Tue, 23 Dec 2003 10:33:13 -0500
Subject: [Twisted-web] Freeform/formless doesn't work with deferred properties?
In-Reply-To: <3FE70FE6.1010300@disksites.com>
References: <3FE70FE6.1010300@disksites.com>
Message-ID: <51EB2A91-355D-11D8-86F1-000A95864FC4@divmod.org>

On Dec 22, 2003, at 10:38 AM, Gavrie Philipson wrote:

> Hi,
>
> I'm using freeform/formless to handle a form.
> However, when the property returns a deferred value, it is not handled 
> correctly by freeform.
> Is this a bug?
>
> Attached is an example (based on DP's examples) that shows the 
> behavior: When rendering the page, instead of seeing "50" in the input 
> field, it shows something like '<Deferred at 0xbec7c30c>'.
>
> PS: A similar thing happens when returning a deferred as an attribute 
> of context.tag in a render method.

Your suspicions about the freeform problem being related to the 
attribute problem are correct; apparently nevow doesn't deal with 
deferreds in attribute values properly. Are you sure you are using CVS 
HEAD? I checked in some changes fairly recently which may affect the 
situation.

Anyway, it's something that should certainly be fixed. In the meantime, 
it's good that you have a workaround.

dp



From twisted-web@twistedmatrix.com  Tue Dec 23 23:16:44 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Tue, 23 Dec 2003 18:16:44 -0500
Subject: [Twisted-web] Need help implementing WebDAV
In-Reply-To: <3FE851D8.3030601@brainbot.com>
References: <3FE851D8.3030601@brainbot.com>
Message-ID: <3FE8CCDC.6080803@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig6BB1F4341E2919EC4822F622
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Thorsten Henninger wrote:
> Hi all,
> 
> I need some help implementing the WebDAV protocoll for Twisted.Web.
> If  one implements WebDAV using Python's BaseHTTPServer, one has to 
> specify a RequestHandler by subclassing 
> BaseHTTPServer.BaseHTTPRequestHandler. The implementation of the WebDAV 
> protocoll is then straight-forward.
> 
> I do not understand, how to solve this with twisted web.
> My first guess is, that I have to do something similar as done in 
> Twisted.web.xmlrpc ?
> And how to I implement the protocoll? do I have to inherit from 
> twisted.protocols.http?

No, xmlrpc isn't involved at all, and I don't _think_ you need to 
subclass the http protocol. Mostly it will involve writing a 
twisted.web.resource.Resource subclass that handles all the various 
WebDAV Methods in its render(request) method. You will have to learn a 
lot about the request object, which is defined in 
twisted.web.server.Request (it subclasses twisted.protocols.http.Request).

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig6BB1F4341E2919EC4822F622
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQE/6MziNp279O1/OG4RAk3oAJ9DkqXLJBTQvpFm9DhlbCbvJQpwUQCeJ/jC
fKZkHberwBUyucILlaS1KYc=
=ECSj
-----END PGP SIGNATURE-----

--------------enig6BB1F4341E2919EC4822F622--


From twisted-web@twistedmatrix.com  Wed Dec 24 00:59:32 2003
From: twisted-web@twistedmatrix.com (Andrew Bennetts)
Date: Wed, 24 Dec 2003 11:59:32 +1100
Subject: [Twisted-web] Need help implementing WebDAV
In-Reply-To: <3FE8CCDC.6080803@twistedmatrix.com>
References: <3FE851D8.3030601@brainbot.com> <3FE8CCDC.6080803@twistedmatrix.com>
Message-ID: <20031224005932.GA7000@frobozz>

On Tue, Dec 23, 2003 at 06:16:44PM -0500, Christopher Armstrong wrote:
> Thorsten Henninger wrote:
> >Hi all,
> >
> >I need some help implementing the WebDAV protocoll for Twisted.Web.
[...]
> >
> >I do not understand, how to solve this with twisted web.
> >My first guess is, that I have to do something similar as done in 
> >Twisted.web.xmlrpc ?
> >And how to I implement the protocoll? do I have to inherit from 
> >twisted.protocols.http?
> 
> No, xmlrpc isn't involved at all, and I don't _think_ you need to 
> subclass the http protocol. Mostly it will involve writing a 
> twisted.web.resource.Resource subclass that handles all the various 
> WebDAV Methods in its render(request) method. You will have to learn a 

...And subclassing Resource is how xmlrpc does it.  So Thorsten is right --
"do something similar as done in Twisted.web.xmlrpc".

> lot about the request object, which is defined in 
> twisted.web.server.Request (it subclasses twisted.protocols.http.Request).

Also, iirc, WebDAV involves several new HTTP-level methods, e.g. PROPFIND.
twisted/web/server.py says its possible to define these per-resource:

"""
# Support for other methods may be implemented on a per-resource basis.
supportedMethods = ('GET', 'HEAD', 'POST')
"""

Reading the code, it's actually kinda the opposite: it's possible to raise
UnsupportedMethod on a per-resource basis, but by default resources usually
allow any method, and just treat unrecognised methods as GET (e.g.
static.File will happily accept FDSJFJKSDFD as a valid method!).

I've opened http://twistedmatrix.com/bugs/issue446 to discuss a suggestion
to improve this behaviour.

Anyway, you don't need to subclass t.p.http to support new methods, you can
do it from the resource.  I hope this makes it clearer to you how to go
about implementing WebDAV :)

-Andrew.



From twisted-web@twistedmatrix.com  Wed Dec 24 06:37:04 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Wed, 24 Dec 2003 08:37:04 +0200
Subject: [Twisted-web] Freeform/formless doesn't work with deferred properties?
In-Reply-To: <51EB2A91-355D-11D8-86F1-000A95864FC4@divmod.org>
References: <3FE70FE6.1010300@disksites.com> <51EB2A91-355D-11D8-86F1-000A95864FC4@divmod.org>
Message-ID: <3FE93410.1080307@disksites.com>

Donovan Preston wrote:
> 
> On Dec 22, 2003, at 10:38 AM, Gavrie Philipson wrote:
> 
>> Hi,
>>
>> I'm using freeform/formless to handle a form.
>> However, when the property returns a deferred value, it is not handled 
>> correctly by freeform.
>> Is this a bug?
>>
...
> Your suspicions about the freeform problem being related to the 
> attribute problem are correct; apparently nevow doesn't deal with 
> deferreds in attribute values properly. Are you sure you are using CVS 
> HEAD? I checked in some changes fairly recently which may affect the 
> situation.
> 
> Anyway, it's something that should certainly be fixed. In the meantime, 
> it's good that you have a workaround.

Donovan,

Christopher's workaround is fine, but doesn't solve the problem when 
using freeform.configure to render the form instead of my own form layout.

Anyway, I just did a 'cvs update' to get the latest HEAD, and guess 
what? Now my test script doesn't work at all!
When I run twistd -ony /tmp/formpost-defer.tac (the same script that I 
previously posted to this list), I get a traceback (see below).

Is this a bug? I did a clean install of the Quotient package and kept no 
old files around.

-- Gavrie.

2003/12/24 08:31 IST [-] Log opened.
2003/12/24 08:31 IST [-] twistd 1.1.0 (/usr/bin/python 2.3.2) starting up
2003/12/24 08:31 IST [-] reactor class: 
twisted.internet.default.SelectReactor
2003/12/24 08:31 IST [-] Loading /tmp/formpost-defer.tac...
2003/12/24 08:31 IST [-] 
/usr/lib/python2.3/site-packages/atop/store.py:36: 
exceptions.DeprecationWarning: This module is deprecated.
2003/12/24 08:31 IST [-] TODO: add IComponentized to Twisted so that we 
can do this without relying on getattr magic.
2003/12/24 08:31 IST [-] Loaded.
2003/12/24 08:31 IST [-] nevow.appserver.NevowSite starting on 8080
2003/12/24 08:31 IST [-] Starting factory <nevow.appserver.NevowSite 
instance at 0xbf0def6c>
2003/12/24 08:31 IST [HTTPChannel,0,127.0.0.1] Traceback (most recent 
call last):
           File 
"/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 
501, in doSelect
             _logrun(selectable, _drdw, selectable, method, dict)
           File 
"/usr/lib/python2.3/site-packages/twisted/python/log.py", line 65, in 
callWithLogger
             callWithContext({"system": lp}, func, *args, **kw)
           File 
"/usr/lib/python2.3/site-packages/twisted/python/log.py", line 52, in 
callWithContext
             return context.call({ILogContext: newCtx}, func, *args, **kw)
           File 
"/usr/lib/python2.3/site-packages/twisted/python/context.py", line 32, 
in callWithContext
             return func(*args,**kw)
         --- <exception caught here> ---
           File 
"/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 
510, in _doReadOrWrite
             why = getattr(selectable, method)()
           File 
"/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line 250, in 
doRead
             return self.protocol.dataReceived(data)
           File 
"/usr/lib/python2.3/site-packages/twisted/protocols/basic.py", line 223, 
in dataReceived
             why = self.lineReceived(line)
           File 
"/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 950, 
in lineReceived
             self.allContentReceived()
           File 
"/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 991, 
in allContentReceived
             req.requestReceived(command, path, version)
           File 
"/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 549, 
in requestReceived
             self.process()
           File "/usr/lib/python2.3/site-packages/nevow/appserver.py", 
line 115, in process
             return self.site.getResourceFor(self).addCallback(
           File "/usr/lib/python2.3/site-packages/nevow/appserver.py", 
line 202, in getResourceFor
             res = INewResource(self.resource)
           File 
"/usr/lib/python2.3/site-packages/twisted/python/components.py", line 
77, in __call__
             raise CannotAdapt("%s cannot be adapted to %s." %
         twisted.python.components.CannotAdapt: <FormPage object at 
0xbf0def4c> cannot be adapted to <class 'nevow.appserver.INewResource'>.



From twisted-web@twistedmatrix.com  Wed Dec 24 09:22:45 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Wed, 24 Dec 2003 11:22:45 +0200
Subject: [Twisted-web] Freeform/formless doesn't work with deferred properties?
In-Reply-To: <3FE93410.1080307@disksites.com>
References: <3FE70FE6.1010300@disksites.com> <51EB2A91-355D-11D8-86F1-000A95864FC4@divmod.org> <3FE93410.1080307@disksites.com>
Message-ID: <3FE95AE5.7030600@disksites.com>

This is a multi-part message in MIME format.
--------------040104010604050804020106
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Gavrie Philipson wrote:
> Donovan Preston wrote:
> 
>>
>> On Dec 22, 2003, at 10:38 AM, Gavrie Philipson wrote:
>>
>>> Hi,
>>>
>>> I'm using freeform/formless to handle a form.
>>> However, when the property returns a deferred value, it is not 
>>> handled correctly by freeform.
>>> Is this a bug?
>>>
> ...
> 
>> Your suspicions about the freeform problem being related to the 
>> attribute problem are correct; apparently nevow doesn't deal with 
>> deferreds in attribute values properly. Are you sure you are using CVS 
>> HEAD? I checked in some changes fairly recently which may affect the 
>> situation.
>>
>> Anyway, it's something that should certainly be fixed. In the 
>> meantime, it's good that you have a workaround.

Never mind my previous message.

The attached patch solves the problem with freeform not dealing with 
deferreds in attribute value.

-- Gavrie.

--------------040104010604050804020106
Content-Type: text/x-patch;
 name="freeform-deferred.patch"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="freeform-deferred.patch"

Index: freeform.py
===================================================================
RCS file: /cvs/Quotient/nevow/freeform.py,v
retrieving revision 1.84
diff -u -r1.84 freeform.py
--- freeform.py 23 Dec 2003 19:01:14 -0000      1.84
+++ freeform.py 24 Dec 2003 09:15:42 -0000
@@ -196,6 +196,15 @@

         defaults = IFormDefaults(request)
         value = defaults.getDefault(context.key, context)
+
+        if isinstance(value, Deferred):
+            value.addCallback(self._cb_call, context, data)
+            return value
+        else:
+            return self._cb_call(value, context, data)
+
+    def _cb_call(self, value, context, data):
+        request = context.locate(iwoven.IRequest)
         try:
             _, fbn = calculateFullBindingName(context, context.locate(formless.IBinding))
         except KeyError:

--------------040104010604050804020106--


From twisted-web@twistedmatrix.com  Wed Dec 24 09:31:13 2003
From: twisted-web@twistedmatrix.com (Christopher Armstrong)
Date: Wed, 24 Dec 2003 04:31:13 -0500
Subject: [Twisted-web] Freeform/formless doesn't work with deferred properties?
In-Reply-To: <3FE95AE5.7030600@disksites.com>
References: <3FE70FE6.1010300@disksites.com> <51EB2A91-355D-11D8-86F1-000A95864FC4@divmod.org> <3FE93410.1080307@disksites.com> <3FE95AE5.7030600@disksites.com>
Message-ID: <3FE95CE1.7080608@twistedmatrix.com>

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig847E35B05378A0DB689268A2
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Gavrie Philipson wrote:

> The attached patch solves the problem with freeform not dealing with 
> deferreds in attribute value.

...
> +
> +        if isinstance(value, Deferred):
> +            value.addCallback(self._cb_call, context, data)
> +            return value
> +        else:
> +            return self._cb_call(value, context, data)
> +
> +    def _cb_call(self, value, context, data):
> +        request = context.locate(iwoven.IRequest)
>          try:
>              _, fbn = calculateFullBindingName(context, context.locate(formless.IBinding))
>          except KeyError:


To whoever commits this patch (i.e., dp ;), two things: 1) if necessary, 
add an errback (?) 2) there's defer.maybeDeferred for reducing those 5 
lines of code in the "isinstance(value, Deferred)" block to 2 (or 1, if 
you're xtreme)::

d = defer.maybeDeferred(defaults.getDefault, context.key, context)
d.addCallback(self._cb_call, context, data)

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/

--------------enig847E35B05378A0DB689268A2
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQE/6VzrNp279O1/OG4RAmU/AJ4xHYEmvTcJCaDGjkhA2Jt7BNDpYwCeJ3yE
58N+MEuThwOSi+2xPYgJY4E=
=HW4b
-----END PGP SIGNATURE-----

--------------enig847E35B05378A0DB689268A2--


From twisted-web@twistedmatrix.com  Wed Dec 24 15:38:49 2003
From: twisted-web@twistedmatrix.com (Donovan Preston)
Date: Wed, 24 Dec 2003 10:38:49 -0500
Subject: [Twisted-web] Freeform/formless doesn't work with deferred properties?
In-Reply-To: <3FE93410.1080307@disksites.com>
References: <3FE70FE6.1010300@disksites.com> <51EB2A91-355D-11D8-86F1-000A95864FC4@divmod.org> <3FE93410.1080307@disksites.com>
Message-ID: <452A7E73-3627-11D8-AB97-000A95864FC4@divmod.org>

On Dec 24, 2003, at 1:37 AM, Gavrie Philipson wrote:
>
> Christopher's workaround is fine, but doesn't solve the problem when 
> using freeform.configure to render the form instead of my own form 
> layout.

Yes. Supporting Deferred attribute values needs to happen.

> Anyway, I just did a 'cvs update' to get the latest HEAD, and guess 
> what? Now my test script doesn't work at all!
> When I run twistd -ony /tmp/formpost-defer.tac (the same script that I 
> previously posted to this list), I get a traceback (see below).
>
> Is this a bug? I did a clean install of the Quotient package and kept 
> no old files around.

This is not a bug. However, it arises because of the really, really bad 
semantics of __implements__. Basically, you subclassed Renderer and 
didn't declare that your subclass implemented the interfaces which 
Renderer declares it implements. This didn't matter before, so you 
didn't notice that there was a problem. Now it matters, and boom.

When declaring that a subclass implements some interfaces, don't forget 
to declare that it implements the super interfaces, too:

class Foo(Renderer):
	__implements__ = IBar, Renderer.__implements__

Someone, can we please please switch to the better semantics for 
declaring implementation used by either z3 now or PyProtocols?

dp



From twisted-web@twistedmatrix.com  Thu Dec 25 07:44:23 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Thu, 25 Dec 2003 09:44:23 +0200
Subject: [Twisted-web] Patch: Enable passing the context to freeform autocallable methods
Message-ID: <3FEA9557.60701@disksites.com>

This is a multi-part message in MIME format.
--------------050709020209030702010009
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Hi,

The attached patch enables passing the context to freeform autocallable 
methods.

It is used by defining an autocallable like this:

def doIt(self, context = formless.Context(),
	 foo = formless.String(label="Prefix")):
     pass


-- Gavrie.

--------------050709020209030702010009
Content-Type: text/x-patch;
 name="freeform-context.patch"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="freeform-context.patch"

Index: components.wsv
===================================================================
RCS file: /cvs/Quotient/nevow/components.wsv,v
retrieving revision 1.21
diff -u -r1.21 components.wsv
--- components.wsv	23 Dec 2003 06:15:38 -0000	1.21
+++ components.wsv	25 Dec 2003 07:32:46 -0000
@@ -80,6 +80,7 @@
 nevow.freeform.ButtonRenderer       nevow.formless.Button       nevow.freeform.ITypedRenderer
 nevow.freeform.ObjectRenderer       nevow.formless.Object       nevow.freeform.ITypedRenderer
 nevow.freeform.RequestRenderer      nevow.formless.Request      nevow.freeform.ITypedRenderer
+nevow.freeform.ContextRenderer      nevow.formless.Context      nevow.freeform.ITypedRenderer
 nevow.freeform.ListRenderer     nevow.formless.List         nevow.freeform.ITypedRenderer
 nevow.freeform.DictionaryRenderer     nevow.formless.Dictionary         nevow.freeform.ITypedRenderer
 nevow.freeform.FileUploadRenderer   nevow.formless.FileUpload   nevow.freeform.ITypedRenderer
@@ -97,6 +98,7 @@
 nevow.freeform.PasswordValidator        nevow.formless.Password         nevow.freeform.IInputValidator
 nevow.freeform.BooleanValidator         nevow.formless.Boolean          nevow.freeform.IInputValidator
 nevow.freeform.RequestValidator         nevow.formless.Request          nevow.freeform.IInputValidator
+nevow.freeform.ContextValidator         nevow.formless.Context          nevow.freeform.IInputValidator
 nevow.freeform.ListValidator            nevow.formless.List             nevow.freeform.IInputValidator
 nevow.freeform.UploadValidator          nevow.formless.FileUpload       nevow.freeform.IInputValidator
 
Index: formless.py
===================================================================
RCS file: /cvs/Quotient/nevow/formless.py,v
retrieving revision 1.31
diff -u -r1.31 formless.py
--- formless.py	2 Dec 2003 17:54:01 -0000	1.31
+++ formless.py	25 Dec 2003 07:32:48 -0000
@@ -381,6 +381,10 @@
     complexType = True ## Don't use the regular form
 
 
+class Context(Typed):
+    complexType = True ## Don't use the regular form
+
+
 class Button(Typed):
     pass
 
Index: freeform.py
===================================================================
RCS file: /cvs/Quotient/nevow/freeform.py,v
retrieving revision 1.84
diff -u -r1.84 freeform.py
--- freeform.py	23 Dec 2003 19:01:14 -0000	1.84
+++ freeform.py	25 Dec 2003 07:32:50 -0000
@@ -325,6 +334,12 @@
         return ''
 
 
+class ContextRenderer(components.Adapter):
+    __implements__ = IRendererFactory, ITypedRenderer
+    def __call__(self, context, data):
+        return ''
+
+
 ## Hoorj javascript
 LOCATE_AND_CHANGE_CURRENT_SELECTION_INPUT = xml(\
 "var sel = document.getElementById('freeform-action-selection:' + this.name);"\
@@ -1031,6 +1046,14 @@
     def validate(self, context, boundTo, data):
         return context.locate(iwoven.IRequest)
 
+
+class ContextValidator(components.Adapter):
+    __implements__ = IInputValidator,
+
+    def validate(self, context, boundTo, data):
+        return context
+
+
 class UploadValidator(components.Adapter):
     __implements__ = IInputValidator,
     def validate(self, context, boundTo, data):

--------------050709020209030702010009--


From twisted-web@twistedmatrix.com  Thu Dec 25 11:43:27 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Thu, 25 Dec 2003 13:43:27 +0200
Subject: [Twisted-web] Problem using deferreds in a freeform autocallable
Message-ID: <3FEACD5F.9050308@disksites.com>

This is a multi-part message in MIME format.
--------------010006010600020205070306
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Hi,

I have a freeform autocallable method which uses a deferred: The method 
needs to call a function that returns a deferred, and continue only 
after the deferred fires.

Unfortunately, I cannot get it to work: When I return a deferred from 
the autocallable, I get a traceback which doesn't make sense to me.

A test program and the associated traceback are attached.

Is this supposed to work? If not, how can I perform a deferred action 
when posting a form?

Thanks,

-- Gavrie.

--------------010006010600020205070306
Content-Type: text/plain;
 name="formpost-defer.tac"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="formpost-defer.tac"

from twisted.application import service, internet
from twisted.internet import defer

from nevow import appserver
from nevow import renderer
from nevow import tags
from nevow import formless
from nevow import freeform


class IMyForm(formless.TypedInterface):
    def submit(self,
        foo=formless.String(),
    ): pass

    submit = formless.autocallable(submit)


class MyForm(object):
    __implements__ = IMyForm

    def submit(self, foo):
        print "Submit:", foo

        def _cb(result):
            print "Callback: %s" % result
            return result
        
        d = defer.Deferred()
        d.callback("bar")
        return d


class FormPage(renderer.Renderer):

    document = tags.html[
        tags.body[
            freeform.configure
        ]
    ]

application = service.Application("test")
internet.TCPServer(
    8081, 
    appserver.NevowSite(
        FormPage(MyForm())
    )
).setServiceParent(application)

# vim: ft=python

--------------010006010600020205070306
Content-Type: text/plain;
 name="traceback"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="traceback"

2003/12/25 13:36 IST [-] Log opened.
2003/12/25 13:36 IST [-] twistd 1.1.0 (/usr/bin/python 2.3.2) starting up
2003/12/25 13:36 IST [-] reactor class: twisted.internet.default.SelectReactor
2003/12/25 13:36 IST [-] Loading formpost-defer.tac...
2003/12/25 13:36 IST [-] /usr/lib/python2.3/site-packages/atop/store.py:36: exceptions.DeprecationWarning: This module is deprecated.
2003/12/25 13:36 IST [-] TODO: add IComponentized to Twisted so that we can do this without relying on getattr magic.
2003/12/25 13:37 IST [-] Loaded.
2003/12/25 13:37 IST [-] nevow.appserver.NevowSite starting on 8081
2003/12/25 13:37 IST [-] Starting factory <nevow.appserver.NevowSite instance at 0xbf1c00ac>
2003/12/25 13:37 IST [-] Main loop terminated.
2003/12/25 13:37 IST [-] Server Shut Down.
2003/12/25 13:37 IST [-] Log opened.
2003/12/25 13:37 IST [-] twistd 1.1.0 (/usr/bin/python 2.3.2) starting up
2003/12/25 13:37 IST [-] reactor class: twisted.internet.default.SelectReactor
2003/12/25 13:37 IST [-] Loading formpost-defer.tac...
2003/12/25 13:37 IST [-] /usr/lib/python2.3/site-packages/atop/store.py:36: exceptions.DeprecationWarning: This module is deprecated.
2003/12/25 13:37 IST [-] TODO: add IComponentized to Twisted so that we can do this without relying on getattr magic.
2003/12/25 13:37 IST [-] Loaded.
2003/12/25 13:37 IST [-] nevow.appserver.NevowSite starting on 8081
2003/12/25 13:37 IST [-] Starting factory <nevow.appserver.NevowSite instance at 0xbf1c10ac>
2003/12/25 13:37 IST [HTTPChannel,0,127.0.0.1] Submit: aaa
2003/12/25 13:37 IST [HTTPChannel,0,127.0.0.1] /usr/lib/python2.3/site-packages/nevow/formless.py:514: exceptions.FutureWarning: %u/%o/%x/%X of negative int will return a signed string in Python 2.4 and up
2003/12/25 13:37 IST [HTTPChannel,0,127.0.0.1] /usr/lib/python2.3/site-packages/twisted/internet/defer.py:357: exceptions.FutureWarning: hex()/oct() of negative int will return a signed string in Python 2.4 and up
2003/12/25 13:37 IST [HTTPChannel,0,127.0.0.1] Traceback (most recent call last):
	  File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 549, in requestReceived
	    self.process()
	  File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 115, in process
	    return self.site.getResourceFor(self).addCallback(
	  File "/usr/lib/python2.3/site-packages/twisted/internet/defer.py", line 187, in addCallback
	    callbackKeywords=kw)
	  File "/usr/lib/python2.3/site-packages/twisted/internet/defer.py", line 178, in addCallbacks
	    self._runCallbacks()
	--- <exception caught here> ---
	  File "/usr/lib/python2.3/site-packages/twisted/internet/defer.py", line 307, in _runCallbacks
	    self.result = callback(self.result, *args, **kw)
	  File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 124, in finishRender
	    self.write(html)
	  File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 677, in write
	    self.sentLength = self.sentLength + len(data)
	exceptions.TypeError: len() of unsized object
	
2003/12/25 13:37 IST [HTTPChannel,0,127.0.0.1] /usr/lib/python2.3/site-packages/twisted/web/server.py:266: exceptions.UserWarning: Warning! request.finish called twice.
2003/12/25 13:37 IST [HTTPChannel,0,127.0.0.1] Unhandled error in Deferred:
2003/12/25 13:37 IST [HTTPChannel,0,127.0.0.1] Traceback (most recent call last):
	  File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 549, in requestReceived
	    self.process()
	  File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 115, in process
	    return self.site.getResourceFor(self).addCallback(
	  File "/usr/lib/python2.3/site-packages/twisted/internet/defer.py", line 187, in addCallback
	    callbackKeywords=kw)
	  File "/usr/lib/python2.3/site-packages/twisted/internet/defer.py", line 178, in addCallbacks
	    self._runCallbacks()
	--- <exception caught here> ---
	  File "/usr/lib/python2.3/site-packages/twisted/internet/defer.py", line 307, in _runCallbacks
	    self.result = callback(self.result, *args, **kw)
	  File "/usr/lib/python2.3/site-packages/nevow/appserver.py", line 124, in finishRender
	    self.write(html)
	  File "/usr/lib/python2.3/site-packages/twisted/protocols/http.py", line 677, in write
	    self.sentLength = self.sentLength + len(data)
	exceptions.TypeError: len() of unsized object
	
2003/12/25 13:37 IST [-] Main loop terminated.
2003/12/25 13:37 IST [-] Server Shut Down.

--------------010006010600020205070306--


From twisted-web@twistedmatrix.com  Thu Dec 25 12:23:48 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Thu, 25 Dec 2003 14:23:48 +0200
Subject: [Twisted-web] Problem using deferreds in a freeform autocallable
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C988AC@santarosa.dsnt.disksites.com>

I just discovered that this does work correctly with a version of Nevow =
that is a few days old.=20
It's only the latest version (CVS HEAD of Quotient) that doesn't work.

Life on the bleedin' edge...

-- Gavrie.

> -----Original Message-----
> From: Gavrie Philipson=20
> Sent: Thursday, December 25, 2003 13:43
> To: twisted-web@twistedmatrix.com
> Subject: [Twisted-web] Problem using deferreds in a freeform=20
> autocallable
>=20
>=20
> Hi,
>=20
> I have a freeform autocallable method which uses a deferred:=20
> The method=20
> needs to call a function that returns a deferred, and continue only=20
> after the deferred fires.
>=20
> Unfortunately, I cannot get it to work: When I return a deferred from=20
> the autocallable, I get a traceback which doesn't make sense to me.
>=20
> A test program and the associated traceback are attached.
>=20
> Is this supposed to work? If not, how can I perform a deferred action=20
> when posting a form?
>=20
> Thanks,
>=20
> -- Gavrie.
>=20


From twisted-web@twistedmatrix.com  Thu Dec 25 12:32:39 2003
From: twisted-web@twistedmatrix.com (Gavrie Philipson)
Date: Thu, 25 Dec 2003 14:32:39 +0200
Subject: [Twisted-web] Problem using deferreds in a freeform autocallable
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C988AE@santarosa.dsnt.disksites.com>

OK, I think it's due to DP's commit of December 23 ([Divmod-commits] New =
resource lookup that supports deferreds. Render that supports deferreds. =
Resources are registered with the urlmaster automatically but this needs =
more work.).

Sorry, but right now I can investigate any further. I have reverted to =
the old version.

-- Gavrie.

> -----Original Message-----
> From: Gavrie Philipson=20
> Sent: Thursday, December 25, 2003 14:24
> To: twisted-web@twistedmatrix.com
> Subject: RE: [Twisted-web] Problem using deferreds in a=20
> freeform autocallable
>=20
>=20
> I just discovered that this does work correctly with a=20
> version of Nevow that is a few days old.=20
> It's only the latest version (CVS HEAD of Quotient) that doesn't work.
>=20
> Life on the bleedin' edge...
>=20
> -- Gavrie.
>=20
> > -----Original Message-----
> > From: Gavrie Philipson
> > Sent: Thursday, December 25, 2003 13:43
> > To: twisted-web@twistedmatrix.com
> > Subject: [Twisted-web] Problem using deferreds in a freeform=20
> > autocallable
> >=20
> >=20
> > Hi,
> >=20
> > I have a freeform autocallable method which uses a deferred:
> > The method=20
> > needs to call a function that returns a deferred, and continue only=20
> > after the deferred fires.
> >=20
> > Unfortunately, I cannot get it to work: When I return a=20
> deferred from
> > the autocallable, I get a traceback which doesn't make sense to me.
> >=20
> > A test program and the associated traceback are attached.
> >=20
> > Is this supposed to work? If not, how can I perform a=20
> deferred action
> > when posting a form?
> >=20
> > Thanks,
> >=20
> > -- Gavrie.
> >=20
>=20
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com=20
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>=20
>=20


From twisted-web@twistedmatrix.com  Fri Dec 26 11:46:06 2003
From: twisted-web@twistedmatrix.com (deelan)
Date: Fri, 26 Dec 2003 12:46:06 +0100
Subject: [Twisted-web] (no subject)
Message-ID: <3FEC1F7E.1060207@interplanet.it>




From twisted-web@twistedmatrix.com  Sun Dec 28 07:07:25 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Sun, 28 Dec 2003 9:07:25 +0200
Subject: [Twisted-web] List manipulation in Nevow
Message-ID: <20031228072135.PTF21446.shunit@shunit>

Hi all,
i'm using nevow to develope a web interface.
the web pages includes post/get data from/to a remote server
i must say you have done great job and its very simple to create 
forms in different ways.
 
And now for my question.

I need to reciev from a remote server a list of data and need to manipulate some actions on it, such as: delete, add update and so on, as i undertood (and might be mistaken) nevow doesn't have input list support yet? if it does in which class is it in formless.py? do you have an example of such? i don't care wheather selection of an item will b through check box or by picking from an input frame.

best regards and thanks in advance



From twisted-web@twistedmatrix.com  Sun Dec 28 08:00:52 2003
From: twisted-web@twistedmatrix.com (Jeff Pitman)
Date: Sun, 28 Dec 2003 00:00:52 -0800 (PST)
Subject: [Twisted-web] newclient.py cookies and POST
Message-ID: <20031228080052.4732.qmail@web60602.mail.yahoo.com>

The following patch fixes cookies and POST requests for
Quotient/quotient/web/newclient.py (diff'd against latest CVS). I
gracefully stole from twisted/web/client.py because the original
attempt didn't work for more than one cookie on newclient.py.

Enjoy it,
jeff

--- Quotient/quotient/web/newclient.py  2003-12-28
15:03:35.000000000 +0800
+++ newclient.py        2003-12-28 15:18:02.000000000 +0800
@@ -103,7 +103,7 @@
 def sendHeaders(connection, req):
     if req.has_data():
         data = req.get_data()
-        connection.sendCommand('POST', requ.get_selector())
+        connection.sendCommand('POST', req.get_selector())
         if not req.headers.has_key('Content-type'):
             connection.sendHeader('Content-type',
                                  
'application/x-www-form-urlencoded')
@@ -146,8 +146,11 @@
         factory = ClientFactory(self.cookies)
         self.callMethod('connect_'+request.get_type(), request,
factory)
         d = factory.connection
-        for cookie in self.cookies:
-            request.add_header("Cookie", '='.join([cookie,
self.cookies[cookie]]))
+        if self.cookies:
+           l=[]
+           for cookie, cookval in self.cookies.items():
+               l.append('%s=%s' % (cookie, cookval))
+            request.add_header("Cookie", "; ".join(l))
         request.add_header('Referer', self.referrer)
         self.referrer = request.get_full_url()
         d.addCallback(sendHeaders, request)




__________________________________
Do you Yahoo!?
Protect your identity with Yahoo! Mail AddressGuard
http://antispam.yahoo.com/whatsnewfree


From twisted-web@twistedmatrix.com  Tue Dec 30 23:30:25 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Tue, 30 Dec 2003 16:30:25 -0700
Subject: [Twisted-web] Nouvelle- like nevow, but simpler
Message-ID: <20031230233025.GA24862@navi.picogui.org>

Hi Everybody,

I recently wrote a small web package which is quite similar
to nevow, but has a few key differences. For lack of a better
name, I call it Nouvelle. You can find the source code in a
Subversion repository at:

   http://navi.cx/svn/misc/trunk/cia/Nouvelle

The module's doc string includes an explanation of Nouvelle's
biggest differences as compared to nevow:

   http://navi.cx/svn/misc/trunk/cia/Nouvelle/__init__.py

The guts of Nouvelle are all in Serial.py, which has
functionality similar to nevow's "stan". Table.py includes
a neat abstraction for representing tabular data. Twisted.py
and BaseHTTP.py are both glue modules that make it easy to
use Nouvelle with twisted.web and BaseHTTPServer, respectively.
Nouvelle itself doesn't have any dependencies other than python's
standard library.

I wrote Nouvelle for the CIA Bot web site, nothing more. You can
see it in action at:

   http://cia.navi.cx

The source code for that web site is all at:

   http://navi.cx/svn/misc/trunk/cia/LibCIA/Web/

Please note that this isn't meant as a challenge to the nevow
developers, or to offend them- it's just an exercise in developing
a nevow-like system with as little code as possible and a few
different design decisions. I don't expect anyone else to use it,
I just figured the inhabitants of this list might find it interesting.

--Micah

-- 
Only you can prevent creeping featurism!


From twisted-web@twistedmatrix.com  Wed Dec 31 01:58:23 2003
From: twisted-web@twistedmatrix.com (twisted-web@twistedmatrix.com)
Date: Tue, 30 Dec 2003 18:58:23 -0700
Subject: [Twisted-web] Nouvelle- like nevow, but simpler
In-Reply-To: <20031230233025.GA24862@navi.picogui.org>
References: <20031230233025.GA24862@navi.picogui.org>
Message-ID: <20031231015823.GA32575@navi.picogui.org>

Oh, I forgot to point out there's an example program. This shows
the BaseHTTPServer interface, but the twisted.web interface that
cia.navi.cx is using is pretty similar:

  http://navi.cx/svn/misc/trunk/cia/nouvelle_test.py

--Micah

On Tue, Dec 30, 2003 at 04:30:25PM -0700, micah@navi.picogui.org wrote:
> Hi Everybody,
> 
> I recently wrote a small web package which is quite similar
> to nevow, but has a few key differences. For lack of a better
> name, I call it Nouvelle. You can find the source code in a
> Subversion repository at:
> 
>    http://navi.cx/svn/misc/trunk/cia/Nouvelle
> 
> The module's doc string includes an explanation of Nouvelle's
> biggest differences as compared to nevow:
> 
>    http://navi.cx/svn/misc/trunk/cia/Nouvelle/__init__.py
> 
> The guts of Nouvelle are all in Serial.py, which has
> functionality similar to nevow's "stan". Table.py includes
> a neat abstraction for representing tabular data. Twisted.py
> and BaseHTTP.py are both glue modules that make it easy to
> use Nouvelle with twisted.web and BaseHTTPServer, respectively.
> Nouvelle itself doesn't have any dependencies other than python's
> standard library.
> 
> I wrote Nouvelle for the CIA Bot web site, nothing more. You can
> see it in action at:
> 
>    http://cia.navi.cx
> 
> The source code for that web site is all at:
> 
>    http://navi.cx/svn/misc/trunk/cia/LibCIA/Web/
> 
> Please note that this isn't meant as a challenge to the nevow
> developers, or to offend them- it's just an exercise in developing
> a nevow-like system with as little code as possible and a few
> different design decisions. I don't expect anyone else to use it,
> I just figured the inhabitants of this list might find it interesting.
> 
> --Micah
> 
> -- 
> Only you can prevent creeping featurism!
> 
> _______________________________________________
> Twisted-web mailing list
> Twisted-web@twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-- 
Only you can prevent creeping featurism!


